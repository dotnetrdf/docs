### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  commentId: T:VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  id: IDistinctAggregateBuilder
  parent: VDS.RDF.Query.Builder
  children:
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(System.String)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(VDS.RDF.Query.SparqlVariable)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(System.String)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(VDS.RDF.Query.SparqlVariable)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat(System.String,System.String)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat(VDS.RDF.Query.Builder.Expressions.SparqlExpression,System.String)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat(VDS.RDF.Query.Expressions.Primary.VariableTerm,System.String)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(System.String)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(VDS.RDF.Query.SparqlVariable)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(System.String)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(VDS.RDF.Query.SparqlVariable)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(System.String)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(VDS.RDF.Query.SparqlVariable)
  langs:
  - csharp
  - vb
  name: IDistinctAggregateBuilder
  nameWithType: IDistinctAggregateBuilder
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IDistinctAggregateBuilder
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nProvides methods for creating aggregates expressions but only those allowing DISTINCT.\n"
  example: []
  syntax:
    content: public interface IDistinctAggregateBuilder
    content.vb: Public Interface IDistinctAggregateBuilder
  extensionMethods:
  - VDS.RDF.Query.Builder.IDistinctAggregateBuilder.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  id: Sum(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Sum(VariableTerm)
  nameWithType: IDistinctAggregateBuilder.Sum(VariableTerm)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Sum
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a SUM aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Sum(VariableTerm variable)
    parameters:
    - id: variable
      type: VDS.RDF.Query.Expressions.Primary.VariableTerm
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Sum(variable As VariableTerm) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(System.String)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(System.String)
  id: Sum(System.String)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Sum(String)
  nameWithType: IDistinctAggregateBuilder.Sum(String)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Sum
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 44
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a SUM aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Sum(string variable)
    parameters:
    - id: variable
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Sum(variable As String) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(VDS.RDF.Query.SparqlVariable)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(VDS.RDF.Query.SparqlVariable)
  id: Sum(VDS.RDF.Query.SparqlVariable)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Sum(SparqlVariable)
  nameWithType: IDistinctAggregateBuilder.Sum(SparqlVariable)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(VDS.RDF.Query.SparqlVariable)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Sum
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a SUM aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Sum(SparqlVariable variable)
    parameters:
    - id: variable
      type: VDS.RDF.Query.SparqlVariable
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Sum(variable As SparqlVariable) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  id: Sum(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Sum(SparqlExpression)
  nameWithType: IDistinctAggregateBuilder.Sum(SparqlExpression)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Sum
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a SUM aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Sum(SparqlExpression expression)
    parameters:
    - id: expression
      type: VDS.RDF.Query.Builder.Expressions.SparqlExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Sum(expression As SparqlExpression) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  id: Avg(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Avg(VariableTerm)
  nameWithType: IDistinctAggregateBuilder.Avg(VariableTerm)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Avg
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a AVG aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Avg(VariableTerm variable)
    parameters:
    - id: variable
      type: VDS.RDF.Query.Expressions.Primary.VariableTerm
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Avg(variable As VariableTerm) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(System.String)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(System.String)
  id: Avg(System.String)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Avg(String)
  nameWithType: IDistinctAggregateBuilder.Avg(String)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Avg
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 64
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a AVG aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Avg(string variable)
    parameters:
    - id: variable
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Avg(variable As String) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(VDS.RDF.Query.SparqlVariable)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(VDS.RDF.Query.SparqlVariable)
  id: Avg(VDS.RDF.Query.SparqlVariable)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Avg(SparqlVariable)
  nameWithType: IDistinctAggregateBuilder.Avg(SparqlVariable)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(VDS.RDF.Query.SparqlVariable)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Avg
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a AVG aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Avg(SparqlVariable variable)
    parameters:
    - id: variable
      type: VDS.RDF.Query.SparqlVariable
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Avg(variable As SparqlVariable) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  id: Avg(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Avg(SparqlExpression)
  nameWithType: IDistinctAggregateBuilder.Avg(SparqlExpression)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Avg
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 74
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a AVG aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Avg(SparqlExpression expression)
    parameters:
    - id: expression
      type: VDS.RDF.Query.Builder.Expressions.SparqlExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Avg(expression As SparqlExpression) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  id: Min(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Min(VariableTerm)
  nameWithType: IDistinctAggregateBuilder.Min(VariableTerm)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Min
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 79
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a MIN aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Min(VariableTerm variable)
    parameters:
    - id: variable
      type: VDS.RDF.Query.Expressions.Primary.VariableTerm
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Min(variable As VariableTerm) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(System.String)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(System.String)
  id: Min(System.String)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Min(String)
  nameWithType: IDistinctAggregateBuilder.Min(String)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Min
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 84
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a MIN aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Min(string variable)
    parameters:
    - id: variable
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Min(variable As String) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(VDS.RDF.Query.SparqlVariable)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(VDS.RDF.Query.SparqlVariable)
  id: Min(VDS.RDF.Query.SparqlVariable)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Min(SparqlVariable)
  nameWithType: IDistinctAggregateBuilder.Min(SparqlVariable)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(VDS.RDF.Query.SparqlVariable)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Min
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 89
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a MIN aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Min(SparqlVariable variable)
    parameters:
    - id: variable
      type: VDS.RDF.Query.SparqlVariable
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Min(variable As SparqlVariable) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  id: Min(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Min(SparqlExpression)
  nameWithType: IDistinctAggregateBuilder.Min(SparqlExpression)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Min
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 94
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a MIN aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Min(SparqlExpression expression)
    parameters:
    - id: expression
      type: VDS.RDF.Query.Builder.Expressions.SparqlExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Min(expression As SparqlExpression) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  id: Max(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Max(VariableTerm)
  nameWithType: IDistinctAggregateBuilder.Max(VariableTerm)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Max
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 99
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a MAX aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Max(VariableTerm variable)
    parameters:
    - id: variable
      type: VDS.RDF.Query.Expressions.Primary.VariableTerm
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Max(variable As VariableTerm) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(System.String)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(System.String)
  id: Max(System.String)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Max(String)
  nameWithType: IDistinctAggregateBuilder.Max(String)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Max
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 104
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a MAX aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Max(string variable)
    parameters:
    - id: variable
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Max(variable As String) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(VDS.RDF.Query.SparqlVariable)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(VDS.RDF.Query.SparqlVariable)
  id: Max(VDS.RDF.Query.SparqlVariable)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Max(SparqlVariable)
  nameWithType: IDistinctAggregateBuilder.Max(SparqlVariable)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(VDS.RDF.Query.SparqlVariable)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Max
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 109
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a MAX aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Max(SparqlVariable variable)
    parameters:
    - id: variable
      type: VDS.RDF.Query.SparqlVariable
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Max(variable As SparqlVariable) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  id: Max(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Max(SparqlExpression)
  nameWithType: IDistinctAggregateBuilder.Max(SparqlExpression)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Max
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 114
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a MAX aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Max(SparqlExpression expression)
    parameters:
    - id: expression
      type: VDS.RDF.Query.Builder.Expressions.SparqlExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Max(expression As SparqlExpression) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat(VDS.RDF.Query.Expressions.Primary.VariableTerm,System.String)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat(VDS.RDF.Query.Expressions.Primary.VariableTerm,System.String)
  id: GroupConcat(VDS.RDF.Query.Expressions.Primary.VariableTerm,System.String)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: GroupConcat(VariableTerm, String)
  nameWithType: IDistinctAggregateBuilder.GroupConcat(VariableTerm, String)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat(VDS.RDF.Query.Expressions.Primary.VariableTerm, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GroupConcat
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 119
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a GROUP_CONCAT aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression GroupConcat(VariableTerm variable, string separator = " ")
    parameters:
    - id: variable
      type: VDS.RDF.Query.Expressions.Primary.VariableTerm
    - id: separator
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function GroupConcat(variable As VariableTerm, separator As String = " ") As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat(System.String,System.String)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat(System.String,System.String)
  id: GroupConcat(System.String,System.String)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: GroupConcat(String, String)
  nameWithType: IDistinctAggregateBuilder.GroupConcat(String, String)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GroupConcat
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 124
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a GROUP_CONCAT aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression GroupConcat(string variable, string separator = " ")
    parameters:
    - id: variable
      type: System.String
    - id: separator
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function GroupConcat(variable As String, separator As String = " ") As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat(VDS.RDF.Query.Builder.Expressions.SparqlExpression,System.String)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat(VDS.RDF.Query.Builder.Expressions.SparqlExpression,System.String)
  id: GroupConcat(VDS.RDF.Query.Builder.Expressions.SparqlExpression,System.String)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: GroupConcat(SparqlExpression, String)
  nameWithType: IDistinctAggregateBuilder.GroupConcat(SparqlExpression, String)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat(VDS.RDF.Query.Builder.Expressions.SparqlExpression, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GroupConcat
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 129
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a GROUP_CONCAT aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression GroupConcat(SparqlExpression expression, string separator = " ")
    parameters:
    - id: expression
      type: VDS.RDF.Query.Builder.Expressions.SparqlExpression
    - id: separator
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function GroupConcat(expression As SparqlExpression, separator As String = " ") As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count
  id: Count
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Count()
  nameWithType: IDistinctAggregateBuilder.Count()
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Count
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 134
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a COUNT(*) aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Count()
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Count As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  id: Count(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Count(VariableTerm)
  nameWithType: IDistinctAggregateBuilder.Count(VariableTerm)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Count
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 139
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a COUNT aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Count(VariableTerm variable)
    parameters:
    - id: variable
      type: VDS.RDF.Query.Expressions.Primary.VariableTerm
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Count(variable As VariableTerm) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(System.String)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(System.String)
  id: Count(System.String)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Count(String)
  nameWithType: IDistinctAggregateBuilder.Count(String)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Count
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 144
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a COUNT aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Count(string variable)
    parameters:
    - id: variable
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Count(variable As String) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(VDS.RDF.Query.SparqlVariable)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(VDS.RDF.Query.SparqlVariable)
  id: Count(VDS.RDF.Query.SparqlVariable)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Count(SparqlVariable)
  nameWithType: IDistinctAggregateBuilder.Count(SparqlVariable)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(VDS.RDF.Query.SparqlVariable)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Count
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 149
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a COUNT aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Count(SparqlVariable variable)
    parameters:
    - id: variable
      type: VDS.RDF.Query.SparqlVariable
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Count(variable As SparqlVariable) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count*
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  id: Count(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  parent: VDS.RDF.Query.Builder.IDistinctAggregateBuilder
  langs:
  - csharp
  - vb
  name: Count(SparqlExpression)
  nameWithType: IDistinctAggregateBuilder.Count(SparqlExpression)
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count(VDS.RDF.Query.Builder.Expressions.SparqlExpression)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Count
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/IDistinctAggregateBuilder.cs
    startLine: 154
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreates a COUNT aggregate.\n"
  example: []
  syntax:
    content: AggregateExpression Count(SparqlExpression expression)
    parameters:
    - id: expression
      type: VDS.RDF.Query.Builder.Expressions.SparqlExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.AggregateExpression
    content.vb: Function Count(expression As SparqlExpression) As AggregateExpression
  overload: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count*
references:
- uid: VDS.RDF.Query.Builder
  commentId: N:VDS.RDF.Query.Builder
  name: VDS.RDF.Query.Builder
  nameWithType: VDS.RDF.Query.Builder
  fullName: VDS.RDF.Query.Builder
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IDistinctAggregateBuilder>()
  nameWithType: Extensions.AsEnumerable<IDistinctAggregateBuilder>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.IDistinctAggregateBuilder>()
  nameWithType.vb: Extensions.AsEnumerable(Of IDistinctAggregateBuilder)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.IDistinctAggregateBuilder)()
  name.vb: AsEnumerable(Of IDistinctAggregateBuilder)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IDistinctAggregateBuilder>
    nameWithType: Extensions.AsEnumerable<IDistinctAggregateBuilder>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.IDistinctAggregateBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IDistinctAggregateBuilder)
    nameWithType: Extensions.AsEnumerable(Of IDistinctAggregateBuilder)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.IDistinctAggregateBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum*
  commentId: Overload:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum
  name: Sum
  nameWithType: IDistinctAggregateBuilder.Sum
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Sum
- uid: VDS.RDF.Query.Expressions.Primary.VariableTerm
  commentId: T:VDS.RDF.Query.Expressions.Primary.VariableTerm
  parent: VDS.RDF.Query.Expressions.Primary
  name: VariableTerm
  nameWithType: VariableTerm
  fullName: VDS.RDF.Query.Expressions.Primary.VariableTerm
- uid: VDS.RDF.Query.Builder.Expressions.AggregateExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.AggregateExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: AggregateExpression
  nameWithType: AggregateExpression
  fullName: VDS.RDF.Query.Builder.Expressions.AggregateExpression
- uid: VDS.RDF.Query.Expressions.Primary
  commentId: N:VDS.RDF.Query.Expressions.Primary
  name: VDS.RDF.Query.Expressions.Primary
  nameWithType: VDS.RDF.Query.Expressions.Primary
  fullName: VDS.RDF.Query.Expressions.Primary
- uid: VDS.RDF.Query.Builder.Expressions
  commentId: N:VDS.RDF.Query.Builder.Expressions
  name: VDS.RDF.Query.Builder.Expressions
  nameWithType: VDS.RDF.Query.Builder.Expressions
  fullName: VDS.RDF.Query.Builder.Expressions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.SparqlVariable
  commentId: T:VDS.RDF.Query.SparqlVariable
  parent: VDS.RDF.Query
  name: SparqlVariable
  nameWithType: SparqlVariable
  fullName: VDS.RDF.Query.SparqlVariable
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.SparqlExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: SparqlExpression
  nameWithType: SparqlExpression
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg*
  commentId: Overload:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg
  name: Avg
  nameWithType: IDistinctAggregateBuilder.Avg
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Avg
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min*
  commentId: Overload:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min
  name: Min
  nameWithType: IDistinctAggregateBuilder.Min
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Min
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max*
  commentId: Overload:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max
  name: Max
  nameWithType: IDistinctAggregateBuilder.Max
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Max
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat*
  commentId: Overload:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat
  name: GroupConcat
  nameWithType: IDistinctAggregateBuilder.GroupConcat
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.GroupConcat
- uid: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count*
  commentId: Overload:VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count
  name: Count
  nameWithType: IDistinctAggregateBuilder.Count
  fullName: VDS.RDF.Query.Builder.IDistinctAggregateBuilder.Count
