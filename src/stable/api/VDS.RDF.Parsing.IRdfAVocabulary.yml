### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.IRdfAVocabulary
  commentId: T:VDS.RDF.Parsing.IRdfAVocabulary
  id: IRdfAVocabulary
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
  - VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
  - VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
  - VDS.RDF.Parsing.IRdfAVocabulary.Mappings
  - VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  - VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
  - VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
  - VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
  langs:
  - csharp
  - vb
  name: IRdfAVocabulary
  nameWithType: IRdfAVocabulary
  fullName: VDS.RDF.Parsing.IRdfAVocabulary
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IRdfAVocabulary
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nInterface for RDFa Vocabularies.\n"
  example: []
  syntax:
    content: public interface IRdfAVocabulary
    content.vb: Public Interface IRdfAVocabulary
  extensionMethods:
  - VDS.RDF.Parsing.IRdfAVocabulary.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
  id: HasTerm(System.String)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  langs:
  - csharp
  - vb
  name: HasTerm(String)
  nameWithType: IRdfAVocabulary.HasTerm(String)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasTerm
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 42
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a Vocabulary contains a Term.\n"
  example: []
  syntax:
    content: bool HasTerm(string term)
    parameters:
    - id: term
      type: System.String
      description: Term.
    return:
      type: System.Boolean
      description: ''
    content.vb: Function HasTerm(term As String) As Boolean
  overload: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm*
- uid: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
  id: ResolveTerm(System.String)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  langs:
  - csharp
  - vb
  name: ResolveTerm(String)
  nameWithType: IRdfAVocabulary.ResolveTerm(String)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResolveTerm
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nResolves a Term in the Vocabulary.\n"
  example: []
  syntax:
    content: string ResolveTerm(string term)
    parameters:
    - id: term
      type: System.String
      description: Term.
    return:
      type: System.String
      description: ''
    content.vb: Function ResolveTerm(term As String) As String
  overload: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm*
- uid: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
  id: AddTerm(System.String,System.String)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  langs:
  - csharp
  - vb
  name: AddTerm(String, String)
  nameWithType: IRdfAVocabulary.AddTerm(String, String)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddTerm
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAdds a Term to the Vocabulary.\n"
  example: []
  syntax:
    content: void AddTerm(string term, string uri)
    parameters:
    - id: term
      type: System.String
      description: Term.
    - id: uri
      type: System.String
      description: URI.
    content.vb: Sub AddTerm(term As String, uri As String)
  overload: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm*
- uid: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
  id: AddNamespace(System.String,System.String)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  langs:
  - csharp
  - vb
  name: AddNamespace(String, String)
  nameWithType: IRdfAVocabulary.AddNamespace(String, String)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddNamespace
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAdds a Namespace to the Vocabulary.\n"
  example: []
  syntax:
    content: void AddNamespace(string prefix, string nsUri)
    parameters:
    - id: prefix
      type: System.String
      description: Prefix.
    - id: nsUri
      type: System.String
      description: Namespace URI.
    content.vb: Sub AddNamespace(prefix As String, nsUri As String)
  overload: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace*
- uid: VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  id: Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  langs:
  - csharp
  - vb
  name: Merge(IRdfAVocabulary)
  nameWithType: IRdfAVocabulary.Merge(IRdfAVocabulary)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merge
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nMerges another Vocabulary into this one.\n"
  example: []
  syntax:
    content: void Merge(IRdfAVocabulary vocab)
    parameters:
    - id: vocab
      type: VDS.RDF.Parsing.IRdfAVocabulary
      description: Vocabulary.
    content.vb: Sub Merge(vocab As IRdfAVocabulary)
  overload: VDS.RDF.Parsing.IRdfAVocabulary.Merge*
- uid: VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
  commentId: P:VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
  id: VocabularyUri
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  langs:
  - csharp
  - vb
  name: VocabularyUri
  nameWithType: IRdfAVocabulary.VocabularyUri
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: VocabularyUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 74
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets/Sets the Vocabulary URI.\n"
  example: []
  syntax:
    content: string VocabularyUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property VocabularyUri As String
  overload: VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri*
  modifiers.csharp:
  - get
  - set
- uid: VDS.RDF.Parsing.IRdfAVocabulary.Mappings
  commentId: P:VDS.RDF.Parsing.IRdfAVocabulary.Mappings
  id: Mappings
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  langs:
  - csharp
  - vb
  name: Mappings
  nameWithType: IRdfAVocabulary.Mappings
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.Mappings
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Mappings
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 83
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets the Term Mappings.\n"
  example: []
  syntax:
    content: IEnumerable<KeyValuePair<string, string>> Mappings { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: ReadOnly Property Mappings As IEnumerable(Of KeyValuePair(Of String, String))
  overload: VDS.RDF.Parsing.IRdfAVocabulary.Mappings*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
  commentId: P:VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
  id: Namespaces
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  langs:
  - csharp
  - vb
  name: Namespaces
  nameWithType: IRdfAVocabulary.Namespaces
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Namespaces
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 91
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets the Namespace Mappings.\n"
  example: []
  syntax:
    content: IEnumerable<KeyValuePair<string, string>> Namespaces { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: ReadOnly Property Namespaces As IEnumerable(Of KeyValuePair(Of String, String))
  overload: VDS.RDF.Parsing.IRdfAVocabulary.Namespaces*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: VDS.RDF.Parsing.IRdfAVocabulary.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IRdfAVocabulary>()
  nameWithType: Extensions.AsEnumerable<IRdfAVocabulary>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.IRdfAVocabulary>()
  nameWithType.vb: Extensions.AsEnumerable(Of IRdfAVocabulary)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.IRdfAVocabulary)()
  name.vb: AsEnumerable(Of IRdfAVocabulary)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IRdfAVocabulary>
    nameWithType: Extensions.AsEnumerable<IRdfAVocabulary>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.IRdfAVocabulary>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IRdfAVocabulary)
    nameWithType: Extensions.AsEnumerable(Of IRdfAVocabulary)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.IRdfAVocabulary)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm*
  commentId: Overload:VDS.RDF.Parsing.IRdfAVocabulary.HasTerm
  name: HasTerm
  nameWithType: IRdfAVocabulary.HasTerm
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm*
  commentId: Overload:VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm
  name: ResolveTerm
  nameWithType: IRdfAVocabulary.ResolveTerm
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm
- uid: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm*
  commentId: Overload:VDS.RDF.Parsing.IRdfAVocabulary.AddTerm
  name: AddTerm
  nameWithType: IRdfAVocabulary.AddTerm
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm
- uid: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace*
  commentId: Overload:VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace
  name: AddNamespace
  nameWithType: IRdfAVocabulary.AddNamespace
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace
- uid: VDS.RDF.Parsing.IRdfAVocabulary.Merge*
  commentId: Overload:VDS.RDF.Parsing.IRdfAVocabulary.Merge
  name: Merge
  nameWithType: IRdfAVocabulary.Merge
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.Merge
- uid: VDS.RDF.Parsing.IRdfAVocabulary
  commentId: T:VDS.RDF.Parsing.IRdfAVocabulary
  parent: VDS.RDF.Parsing
  name: IRdfAVocabulary
  nameWithType: IRdfAVocabulary
  fullName: VDS.RDF.Parsing.IRdfAVocabulary
- uid: VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri*
  commentId: Overload:VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
  name: VocabularyUri
  nameWithType: IRdfAVocabulary.VocabularyUri
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
- uid: VDS.RDF.Parsing.IRdfAVocabulary.Mappings*
  commentId: Overload:VDS.RDF.Parsing.IRdfAVocabulary.Mappings
  name: Mappings
  nameWithType: IRdfAVocabulary.Mappings
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.Mappings
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Parsing.IRdfAVocabulary.Namespaces*
  commentId: Overload:VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
  name: Namespaces
  nameWithType: IRdfAVocabulary.Namespaces
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
