### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate
  commentId: T:VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate
  id: NumericMinAggregate
  parent: VDS.RDF.Query.Aggregates.Leviathan
  children:
  - VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression,System.Boolean)
  - VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  - VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor(VDS.RDF.Query.Expressions.Primary.VariableTerm,System.Boolean)
  - VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
  - VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Functor
  - VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.ToString
  langs:
  - csharp
  - vb
  name: NumericMinAggregate
  nameWithType: NumericMinAggregate
  fullName: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NumericMinAggregate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
    startLine: 42
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates.Leviathan
  summary: "\nClass representing NMIN Aggregate Functions.\n"
  remarks: "\nOnly operates over numeric data which is typed to one of the supported SPARQL Numeric types (integers, decimals and doubles).\n"
  example: []
  syntax:
    content: 'public class NumericMinAggregate : BaseAggregate, ISparqlAggregate'
    content.vb: >-
      Public Class NumericMinAggregate
          Inherits BaseAggregate
          Implements ISparqlAggregate
  inheritance:
  - System.Object
  - VDS.RDF.Query.Aggregates.BaseAggregate
  implements:
  - VDS.RDF.Query.Aggregates.ISparqlAggregate
  inheritedMembers:
  - VDS.RDF.Query.Aggregates.BaseAggregate._expr
  - VDS.RDF.Query.Aggregates.BaseAggregate._distinct
  - VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Aggregates.BaseAggregate.Expression
  - VDS.RDF.Query.Aggregates.BaseAggregate.Type
  - VDS.RDF.Query.Aggregates.BaseAggregate.Arguments
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  commentId: M:VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  id: '#ctor(VDS.RDF.Query.Expressions.Primary.VariableTerm)'
  parent: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate
  langs:
  - csharp
  - vb
  name: NumericMinAggregate(VariableTerm)
  nameWithType: NumericMinAggregate.NumericMinAggregate(VariableTerm)
  fullName: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.NumericMinAggregate(VDS.RDF.Query.Expressions.Primary.VariableTerm)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates.Leviathan
  summary: "\nCreates a new NMIN Aggregate.\n"
  example: []
  syntax:
    content: public NumericMinAggregate(VariableTerm expr)
    parameters:
    - id: expr
      type: VDS.RDF.Query.Expressions.Primary.VariableTerm
      description: Variable Expression.
    content.vb: Public Sub New(expr As VariableTerm)
  overload: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  id: '#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)'
  parent: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate
  langs:
  - csharp
  - vb
  name: NumericMinAggregate(ISparqlExpression)
  nameWithType: NumericMinAggregate.NumericMinAggregate(ISparqlExpression)
  fullName: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.NumericMinAggregate(VDS.RDF.Query.Expressions.ISparqlExpression)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
    startLine: 58
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates.Leviathan
  summary: "\nCreates a new NMIN Aggregate.\n"
  example: []
  syntax:
    content: public NumericMinAggregate(ISparqlExpression expr)
    parameters:
    - id: expr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: Expression.
    content.vb: Public Sub New(expr As ISparqlExpression)
  overload: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor(VDS.RDF.Query.Expressions.Primary.VariableTerm,System.Boolean)
  commentId: M:VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor(VDS.RDF.Query.Expressions.Primary.VariableTerm,System.Boolean)
  id: '#ctor(VDS.RDF.Query.Expressions.Primary.VariableTerm,System.Boolean)'
  parent: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate
  langs:
  - csharp
  - vb
  name: NumericMinAggregate(VariableTerm, Boolean)
  nameWithType: NumericMinAggregate.NumericMinAggregate(VariableTerm, Boolean)
  fullName: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.NumericMinAggregate(VDS.RDF.Query.Expressions.Primary.VariableTerm, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates.Leviathan
  summary: "\nCreates a new NMIN Aggregate.\n"
  example: []
  syntax:
    content: public NumericMinAggregate(VariableTerm expr, bool distinct)
    parameters:
    - id: expr
      type: VDS.RDF.Query.Expressions.Primary.VariableTerm
      description: Variable Expression.
    - id: distinct
      type: System.Boolean
      description: Whether a DISTINCT modifier applies.
    content.vb: Public Sub New(expr As VariableTerm, distinct As Boolean)
  overload: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression,System.Boolean)
  commentId: M:VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression,System.Boolean)
  id: '#ctor(VDS.RDF.Query.Expressions.ISparqlExpression,System.Boolean)'
  parent: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate
  langs:
  - csharp
  - vb
  name: NumericMinAggregate(ISparqlExpression, Boolean)
  nameWithType: NumericMinAggregate.NumericMinAggregate(ISparqlExpression, Boolean)
  fullName: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.NumericMinAggregate(VDS.RDF.Query.Expressions.ISparqlExpression, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
    startLine: 77
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates.Leviathan
  summary: "\nCreates a new NMIN Aggregate.\n"
  example: []
  syntax:
    content: public NumericMinAggregate(ISparqlExpression expr, bool distinct)
    parameters:
    - id: expr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: Expression.
    - id: distinct
      type: System.Boolean
      description: Whether a DISTINCT modifier applies.
    content.vb: Public Sub New(expr As ISparqlExpression, distinct As Boolean)
  overload: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
  commentId: M:VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
  id: Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
  parent: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate
  langs:
  - csharp
  - vb
  name: Apply(SparqlEvaluationContext, IEnumerable<Int32>)
  nameWithType: NumericMinAggregate.Apply(SparqlEvaluationContext, IEnumerable<Int32>)
  fullName: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.IEnumerable<System.Int32>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
    startLine: 86
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates.Leviathan
  summary: "\nApplies the Numeric Min Aggregate function to the results.\n"
  example: []
  syntax:
    content: public override IValuedNode Apply(SparqlEvaluationContext context, IEnumerable<int> bindingIDs)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    - id: bindingIDs
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: Binding IDs over which the Aggregate applies.
    return:
      type: VDS.RDF.Nodes.IValuedNode
      description: ''
    content.vb: Public Overrides Function Apply(context As SparqlEvaluationContext, bindingIDs As IEnumerable(Of Integer)) As IValuedNode
  overridden: VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
  overload: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Apply*
  nameWithType.vb: NumericMinAggregate.Apply(SparqlEvaluationContext, IEnumerable(Of Int32))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.IEnumerable(Of System.Int32))
  name.vb: Apply(SparqlEvaluationContext, IEnumerable(Of Int32))
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.ToString
  commentId: M:VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.ToString
  id: ToString
  parent: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: NumericMinAggregate.ToString()
  fullName: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
    startLine: 237
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates.Leviathan
  summary: "\nGets the String representation of the Aggregate.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: VDS.RDF.Query.Aggregates.BaseAggregate.ToString
  overload: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Functor
  commentId: P:VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Functor
  id: Functor
  parent: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate
  langs:
  - csharp
  - vb
  name: Functor
  nameWithType: NumericMinAggregate.Functor
  fullName: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Functor
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Functor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Aggregates/Leviathan/NumericMinAggregate.cs
    startLine: 253
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates.Leviathan
  summary: "\nGets the Functor of the Aggregate.\n"
  example: []
  syntax:
    content: public override string Functor { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Functor As String
  overridden: VDS.RDF.Query.Aggregates.BaseAggregate.Functor
  overload: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Functor*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
references:
- uid: VDS.RDF.Query.Aggregates.Leviathan
  commentId: N:VDS.RDF.Query.Aggregates.Leviathan
  name: VDS.RDF.Query.Aggregates.Leviathan
  nameWithType: VDS.RDF.Query.Aggregates.Leviathan
  fullName: VDS.RDF.Query.Aggregates.Leviathan
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Aggregates.BaseAggregate
  commentId: T:VDS.RDF.Query.Aggregates.BaseAggregate
  parent: VDS.RDF.Query.Aggregates
  name: BaseAggregate
  nameWithType: BaseAggregate
  fullName: VDS.RDF.Query.Aggregates.BaseAggregate
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate
  commentId: T:VDS.RDF.Query.Aggregates.ISparqlAggregate
  parent: VDS.RDF.Query.Aggregates
  name: ISparqlAggregate
  nameWithType: ISparqlAggregate
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate
- uid: VDS.RDF.Query.Aggregates.BaseAggregate._expr
  commentId: F:VDS.RDF.Query.Aggregates.BaseAggregate._expr
  parent: VDS.RDF.Query.Aggregates.BaseAggregate
  name: _expr
  nameWithType: BaseAggregate._expr
  fullName: VDS.RDF.Query.Aggregates.BaseAggregate._expr
- uid: VDS.RDF.Query.Aggregates.BaseAggregate._distinct
  commentId: F:VDS.RDF.Query.Aggregates.BaseAggregate._distinct
  parent: VDS.RDF.Query.Aggregates.BaseAggregate
  name: _distinct
  nameWithType: BaseAggregate._distinct
  fullName: VDS.RDF.Query.Aggregates.BaseAggregate._distinct
- uid: VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Aggregates.BaseAggregate
  name: Apply(SparqlEvaluationContext)
  nameWithType: BaseAggregate.Apply(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext)
    name: Apply
    nameWithType: BaseAggregate.Apply
    fullName: VDS.RDF.Query.Aggregates.BaseAggregate.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext)
    name: Apply
    nameWithType: BaseAggregate.Apply
    fullName: VDS.RDF.Query.Aggregates.BaseAggregate.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Aggregates.BaseAggregate.Expression
  commentId: P:VDS.RDF.Query.Aggregates.BaseAggregate.Expression
  parent: VDS.RDF.Query.Aggregates.BaseAggregate
  name: Expression
  nameWithType: BaseAggregate.Expression
  fullName: VDS.RDF.Query.Aggregates.BaseAggregate.Expression
- uid: VDS.RDF.Query.Aggregates.BaseAggregate.Type
  commentId: P:VDS.RDF.Query.Aggregates.BaseAggregate.Type
  parent: VDS.RDF.Query.Aggregates.BaseAggregate
  name: Type
  nameWithType: BaseAggregate.Type
  fullName: VDS.RDF.Query.Aggregates.BaseAggregate.Type
- uid: VDS.RDF.Query.Aggregates.BaseAggregate.Arguments
  commentId: P:VDS.RDF.Query.Aggregates.BaseAggregate.Arguments
  parent: VDS.RDF.Query.Aggregates.BaseAggregate
  name: Arguments
  nameWithType: BaseAggregate.Arguments
  fullName: VDS.RDF.Query.Aggregates.BaseAggregate.Arguments
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<NumericMinAggregate>()
  nameWithType: Extensions.AsEnumerable<NumericMinAggregate>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate>()
  nameWithType.vb: Extensions.AsEnumerable(Of NumericMinAggregate)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate)()
  name.vb: AsEnumerable(Of NumericMinAggregate)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<NumericMinAggregate>
    nameWithType: Extensions.AsEnumerable<NumericMinAggregate>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of NumericMinAggregate)
    nameWithType: Extensions.AsEnumerable(Of NumericMinAggregate)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Aggregates
  commentId: N:VDS.RDF.Query.Aggregates
  name: VDS.RDF.Query.Aggregates
  nameWithType: VDS.RDF.Query.Aggregates
  fullName: VDS.RDF.Query.Aggregates
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor*
  commentId: Overload:VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.#ctor
  name: NumericMinAggregate
  nameWithType: NumericMinAggregate.NumericMinAggregate
  fullName: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.NumericMinAggregate
- uid: VDS.RDF.Query.Expressions.Primary.VariableTerm
  commentId: T:VDS.RDF.Query.Expressions.Primary.VariableTerm
  parent: VDS.RDF.Query.Expressions.Primary
  name: VariableTerm
  nameWithType: VariableTerm
  fullName: VDS.RDF.Query.Expressions.Primary.VariableTerm
- uid: VDS.RDF.Query.Expressions.Primary
  commentId: N:VDS.RDF.Query.Expressions.Primary
  name: VDS.RDF.Query.Expressions.Primary
  nameWithType: VDS.RDF.Query.Expressions.Primary
  fullName: VDS.RDF.Query.Expressions.Primary
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
  commentId: M:VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
  parent: VDS.RDF.Query.Aggregates.BaseAggregate
  isExternal: true
  name: Apply(SparqlEvaluationContext, IEnumerable<Int32>)
  nameWithType: BaseAggregate.Apply(SparqlEvaluationContext, IEnumerable<Int32>)
  fullName: VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.IEnumerable<System.Int32>)
  nameWithType.vb: BaseAggregate.Apply(SparqlEvaluationContext, IEnumerable(Of Int32))
  fullName.vb: VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.IEnumerable(Of System.Int32))
  name.vb: Apply(SparqlEvaluationContext, IEnumerable(Of Int32))
  spec.csharp:
  - uid: VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
    name: Apply
    nameWithType: BaseAggregate.Apply
    fullName: VDS.RDF.Query.Aggregates.BaseAggregate.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Aggregates.BaseAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
    name: Apply
    nameWithType: BaseAggregate.Apply
    fullName: VDS.RDF.Query.Aggregates.BaseAggregate.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Apply*
  commentId: Overload:VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Apply
  name: Apply
  nameWithType: NumericMinAggregate.Apply
  fullName: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Apply
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Nodes.IValuedNode
  commentId: T:VDS.RDF.Nodes.IValuedNode
  parent: VDS.RDF.Nodes
  name: IValuedNode
  nameWithType: IValuedNode
  fullName: VDS.RDF.Nodes.IValuedNode
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
- uid: VDS.RDF.Query.Aggregates.BaseAggregate.ToString
  commentId: M:VDS.RDF.Query.Aggregates.BaseAggregate.ToString
  parent: VDS.RDF.Query.Aggregates.BaseAggregate
  name: ToString()
  nameWithType: BaseAggregate.ToString()
  fullName: VDS.RDF.Query.Aggregates.BaseAggregate.ToString()
  spec.csharp:
  - uid: VDS.RDF.Query.Aggregates.BaseAggregate.ToString
    name: ToString
    nameWithType: BaseAggregate.ToString
    fullName: VDS.RDF.Query.Aggregates.BaseAggregate.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Aggregates.BaseAggregate.ToString
    name: ToString
    nameWithType: BaseAggregate.ToString
    fullName: VDS.RDF.Query.Aggregates.BaseAggregate.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.ToString*
  commentId: Overload:VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.ToString
  name: ToString
  nameWithType: NumericMinAggregate.ToString
  fullName: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Aggregates.BaseAggregate.Functor
  commentId: P:VDS.RDF.Query.Aggregates.BaseAggregate.Functor
  parent: VDS.RDF.Query.Aggregates.BaseAggregate
  name: Functor
  nameWithType: BaseAggregate.Functor
  fullName: VDS.RDF.Query.Aggregates.BaseAggregate.Functor
- uid: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Functor*
  commentId: Overload:VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Functor
  name: Functor
  nameWithType: NumericMinAggregate.Functor
  fullName: VDS.RDF.Query.Aggregates.Leviathan.NumericMinAggregate.Functor
