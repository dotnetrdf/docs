### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Grouping.GroupByVariable
  commentId: T:VDS.RDF.Query.Grouping.GroupByVariable
  id: GroupByVariable
  parent: VDS.RDF.Query.Grouping
  children:
  - VDS.RDF.Query.Grouping.GroupByVariable.#ctor(System.String)
  - VDS.RDF.Query.Grouping.GroupByVariable.#ctor(System.String,System.String)
  - VDS.RDF.Query.Grouping.GroupByVariable.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Grouping.GroupByVariable.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
  - VDS.RDF.Query.Grouping.GroupByVariable.Expression
  - VDS.RDF.Query.Grouping.GroupByVariable.ProjectableVariables
  - VDS.RDF.Query.Grouping.GroupByVariable.ToString
  - VDS.RDF.Query.Grouping.GroupByVariable.Variables
  langs:
  - csharp
  - vb
  name: GroupByVariable
  nameWithType: GroupByVariable
  fullName: VDS.RDF.Query.Grouping.GroupByVariable
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GroupByVariable
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
    startLine: 121
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nRepresents a Grouping on a given Variable.\n"
  example: []
  syntax:
    content: 'public class GroupByVariable : BaseGroupBy, ISparqlGroupBy'
    content.vb: >-
      Public Class GroupByVariable
          Inherits BaseGroupBy
          Implements ISparqlGroupBy
  inheritance:
  - System.Object
  - VDS.RDF.Query.Grouping.BaseGroupBy
  implements:
  - VDS.RDF.Query.Grouping.ISparqlGroupBy
  inheritedMembers:
  - VDS.RDF.Query.Grouping.BaseGroupBy._child
  - VDS.RDF.Query.Grouping.BaseGroupBy.Child
  - VDS.RDF.Query.Grouping.BaseGroupBy.AssignVariable
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Grouping.GroupByVariable.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Grouping.GroupByVariable.#ctor(System.String)
  commentId: M:VDS.RDF.Query.Grouping.GroupByVariable.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VDS.RDF.Query.Grouping.GroupByVariable
  langs:
  - csharp
  - vb
  name: GroupByVariable(String)
  nameWithType: GroupByVariable.GroupByVariable(String)
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.GroupByVariable(System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
    startLine: 130
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nCreates a new Group By which groups by a given Variable.\n"
  example: []
  syntax:
    content: public GroupByVariable(string name)
    parameters:
    - id: name
      type: System.String
      description: Variable Name.
    content.vb: Public Sub New(name As String)
  overload: VDS.RDF.Query.Grouping.GroupByVariable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Grouping.GroupByVariable.#ctor(System.String,System.String)
  commentId: M:VDS.RDF.Query.Grouping.GroupByVariable.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: VDS.RDF.Query.Grouping.GroupByVariable
  langs:
  - csharp
  - vb
  name: GroupByVariable(String, String)
  nameWithType: GroupByVariable.GroupByVariable(String, String)
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.GroupByVariable(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
    startLine: 140
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nCreates a new Group By which groups by a given Variable and assigns to another variable.\n"
  example: []
  syntax:
    content: public GroupByVariable(string name, string assignVariable)
    parameters:
    - id: name
      type: System.String
      description: Variable Name.
    - id: assignVariable
      type: System.String
      description: Assign Variable.
    content.vb: Public Sub New(name As String, assignVariable As String)
  overload: VDS.RDF.Query.Grouping.GroupByVariable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Grouping.GroupByVariable.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Grouping.GroupByVariable.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  id: Apply(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Grouping.GroupByVariable
  langs:
  - csharp
  - vb
  name: Apply(SparqlEvaluationContext)
  nameWithType: GroupByVariable.Apply(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
    startLine: 151
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nApplies a Grouping on a given Variable to the Binder.\n"
  example: []
  syntax:
    content: public override List<BindingGroup> Apply(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    return:
      type: System.Collections.Generic.List{VDS.RDF.Query.BindingGroup}
      description: ''
    content.vb: Public Overrides Function Apply(context As SparqlEvaluationContext) As List(Of BindingGroup)
  overridden: VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  overload: VDS.RDF.Query.Grouping.GroupByVariable.Apply*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Grouping.GroupByVariable.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
  commentId: M:VDS.RDF.Query.Grouping.GroupByVariable.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
  id: Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
  parent: VDS.RDF.Query.Grouping.GroupByVariable
  langs:
  - csharp
  - vb
  name: Apply(SparqlEvaluationContext, List<BindingGroup>)
  nameWithType: GroupByVariable.Apply(SparqlEvaluationContext, List<BindingGroup>)
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.Apply(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.List<VDS.RDF.Query.BindingGroup>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
    startLine: 201
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nApplies a Grouping on a given Variable to the Binder Groups from a previous Grouping.\n"
  example: []
  syntax:
    content: public override List<BindingGroup> Apply(SparqlEvaluationContext context, List<BindingGroup> groups)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    - id: groups
      type: System.Collections.Generic.List{VDS.RDF.Query.BindingGroup}
      description: Binder Group to subgroup.
    return:
      type: System.Collections.Generic.List{VDS.RDF.Query.BindingGroup}
      description: ''
    content.vb: Public Overrides Function Apply(context As SparqlEvaluationContext, groups As List(Of BindingGroup)) As List(Of BindingGroup)
  overridden: VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
  overload: VDS.RDF.Query.Grouping.GroupByVariable.Apply*
  nameWithType.vb: GroupByVariable.Apply(SparqlEvaluationContext, List(Of BindingGroup))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: VDS.RDF.Query.Grouping.GroupByVariable.Apply(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.List(Of VDS.RDF.Query.BindingGroup))
  name.vb: Apply(SparqlEvaluationContext, List(Of BindingGroup))
- uid: VDS.RDF.Query.Grouping.GroupByVariable.Variables
  commentId: P:VDS.RDF.Query.Grouping.GroupByVariable.Variables
  id: Variables
  parent: VDS.RDF.Query.Grouping.GroupByVariable
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: GroupByVariable.Variables
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.Variables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
    startLine: 257
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nGets the Variables used in the GROUP BY.\n"
  example: []
  syntax:
    content: public override IEnumerable<string> Variables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overrides ReadOnly Property Variables As IEnumerable(Of String)
  overridden: VDS.RDF.Query.Grouping.BaseGroupBy.Variables
  overload: VDS.RDF.Query.Grouping.GroupByVariable.Variables*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Grouping.GroupByVariable.ProjectableVariables
  commentId: P:VDS.RDF.Query.Grouping.GroupByVariable.ProjectableVariables
  id: ProjectableVariables
  parent: VDS.RDF.Query.Grouping.GroupByVariable
  langs:
  - csharp
  - vb
  name: ProjectableVariables
  nameWithType: GroupByVariable.ProjectableVariables
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.ProjectableVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ProjectableVariables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
    startLine: 275
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nGets the Projectable Variables used in the GROUP BY i.e. Variables that are grouped upon and Assigned Variables.\n"
  example: []
  syntax:
    content: public override IEnumerable<string> ProjectableVariables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overrides ReadOnly Property ProjectableVariables As IEnumerable(Of String)
  overridden: VDS.RDF.Query.Grouping.BaseGroupBy.ProjectableVariables
  overload: VDS.RDF.Query.Grouping.GroupByVariable.ProjectableVariables*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Grouping.GroupByVariable.Expression
  commentId: P:VDS.RDF.Query.Grouping.GroupByVariable.Expression
  id: Expression
  parent: VDS.RDF.Query.Grouping.GroupByVariable
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: GroupByVariable.Expression
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.Expression
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Expression
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
    startLine: 291
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nGets the Variable Expression Term used by this GROUP BY.\n"
  example: []
  syntax:
    content: public override ISparqlExpression Expression { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Expressions.ISparqlExpression
    content.vb: Public Overrides ReadOnly Property Expression As ISparqlExpression
  overridden: VDS.RDF.Query.Grouping.BaseGroupBy.Expression
  overload: VDS.RDF.Query.Grouping.GroupByVariable.Expression*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Grouping.GroupByVariable.ToString
  commentId: M:VDS.RDF.Query.Grouping.GroupByVariable.ToString
  id: ToString
  parent: VDS.RDF.Query.Grouping.GroupByVariable
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: GroupByVariable.ToString()
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Grouping/SparqlGroupByClasses.cs
    startLine: 303
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nGets the String representation of the GROUP BY.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VDS.RDF.Query.Grouping.GroupByVariable.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query.Grouping
  commentId: N:VDS.RDF.Query.Grouping
  name: VDS.RDF.Query.Grouping
  nameWithType: VDS.RDF.Query.Grouping
  fullName: VDS.RDF.Query.Grouping
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Grouping.BaseGroupBy
  commentId: T:VDS.RDF.Query.Grouping.BaseGroupBy
  parent: VDS.RDF.Query.Grouping
  name: BaseGroupBy
  nameWithType: BaseGroupBy
  fullName: VDS.RDF.Query.Grouping.BaseGroupBy
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy
  commentId: T:VDS.RDF.Query.Grouping.ISparqlGroupBy
  parent: VDS.RDF.Query.Grouping
  name: ISparqlGroupBy
  nameWithType: ISparqlGroupBy
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy
- uid: VDS.RDF.Query.Grouping.BaseGroupBy._child
  commentId: F:VDS.RDF.Query.Grouping.BaseGroupBy._child
  parent: VDS.RDF.Query.Grouping.BaseGroupBy
  name: _child
  nameWithType: BaseGroupBy._child
  fullName: VDS.RDF.Query.Grouping.BaseGroupBy._child
- uid: VDS.RDF.Query.Grouping.BaseGroupBy.Child
  commentId: P:VDS.RDF.Query.Grouping.BaseGroupBy.Child
  parent: VDS.RDF.Query.Grouping.BaseGroupBy
  name: Child
  nameWithType: BaseGroupBy.Child
  fullName: VDS.RDF.Query.Grouping.BaseGroupBy.Child
- uid: VDS.RDF.Query.Grouping.BaseGroupBy.AssignVariable
  commentId: P:VDS.RDF.Query.Grouping.BaseGroupBy.AssignVariable
  parent: VDS.RDF.Query.Grouping.BaseGroupBy
  name: AssignVariable
  nameWithType: BaseGroupBy.AssignVariable
  fullName: VDS.RDF.Query.Grouping.BaseGroupBy.AssignVariable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Grouping.GroupByVariable.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<GroupByVariable>()
  nameWithType: Extensions.AsEnumerable<GroupByVariable>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Grouping.GroupByVariable>()
  nameWithType.vb: Extensions.AsEnumerable(Of GroupByVariable)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Grouping.GroupByVariable)()
  name.vb: AsEnumerable(Of GroupByVariable)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<GroupByVariable>
    nameWithType: Extensions.AsEnumerable<GroupByVariable>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Grouping.GroupByVariable>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of GroupByVariable)
    nameWithType: Extensions.AsEnumerable(Of GroupByVariable)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Grouping.GroupByVariable)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Grouping.GroupByVariable.#ctor*
  commentId: Overload:VDS.RDF.Query.Grouping.GroupByVariable.#ctor
  name: GroupByVariable
  nameWithType: GroupByVariable.GroupByVariable
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.GroupByVariable
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Grouping.BaseGroupBy
  name: Apply(SparqlEvaluationContext)
  nameWithType: BaseGroupBy.Apply(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext)
    name: Apply
    nameWithType: BaseGroupBy.Apply
    fullName: VDS.RDF.Query.Grouping.BaseGroupBy.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext)
    name: Apply
    nameWithType: BaseGroupBy.Apply
    fullName: VDS.RDF.Query.Grouping.BaseGroupBy.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Grouping.GroupByVariable.Apply*
  commentId: Overload:VDS.RDF.Query.Grouping.GroupByVariable.Apply
  name: Apply
  nameWithType: GroupByVariable.Apply
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.Apply
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: System.Collections.Generic.List{VDS.RDF.Query.BindingGroup}
  commentId: T:System.Collections.Generic.List{VDS.RDF.Query.BindingGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BindingGroup>
  nameWithType: List<BindingGroup>
  fullName: System.Collections.Generic.List<VDS.RDF.Query.BindingGroup>
  nameWithType.vb: List(Of BindingGroup)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.Query.BindingGroup)
  name.vb: List(Of BindingGroup)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.BindingGroup
    name: BindingGroup
    nameWithType: BindingGroup
    fullName: VDS.RDF.Query.BindingGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.BindingGroup
    name: BindingGroup
    nameWithType: BindingGroup
    fullName: VDS.RDF.Query.BindingGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
  commentId: M:VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
  parent: VDS.RDF.Query.Grouping.BaseGroupBy
  isExternal: true
  name: Apply(SparqlEvaluationContext, List<BindingGroup>)
  nameWithType: BaseGroupBy.Apply(SparqlEvaluationContext, List<BindingGroup>)
  fullName: VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.List<VDS.RDF.Query.BindingGroup>)
  nameWithType.vb: BaseGroupBy.Apply(SparqlEvaluationContext, List(Of BindingGroup))
  fullName.vb: VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.List(Of VDS.RDF.Query.BindingGroup))
  name.vb: Apply(SparqlEvaluationContext, List(Of BindingGroup))
  spec.csharp:
  - uid: VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
    name: Apply
    nameWithType: BaseGroupBy.Apply
    fullName: VDS.RDF.Query.Grouping.BaseGroupBy.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.BindingGroup
    name: BindingGroup
    nameWithType: BindingGroup
    fullName: VDS.RDF.Query.BindingGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Grouping.BaseGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
    name: Apply
    nameWithType: BaseGroupBy.Apply
    fullName: VDS.RDF.Query.Grouping.BaseGroupBy.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.BindingGroup
    name: BindingGroup
    nameWithType: BindingGroup
    fullName: VDS.RDF.Query.BindingGroup
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Grouping.BaseGroupBy.Variables
  commentId: P:VDS.RDF.Query.Grouping.BaseGroupBy.Variables
  parent: VDS.RDF.Query.Grouping.BaseGroupBy
  name: Variables
  nameWithType: BaseGroupBy.Variables
  fullName: VDS.RDF.Query.Grouping.BaseGroupBy.Variables
- uid: VDS.RDF.Query.Grouping.GroupByVariable.Variables*
  commentId: Overload:VDS.RDF.Query.Grouping.GroupByVariable.Variables
  name: Variables
  nameWithType: GroupByVariable.Variables
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.Variables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Grouping.BaseGroupBy.ProjectableVariables
  commentId: P:VDS.RDF.Query.Grouping.BaseGroupBy.ProjectableVariables
  parent: VDS.RDF.Query.Grouping.BaseGroupBy
  name: ProjectableVariables
  nameWithType: BaseGroupBy.ProjectableVariables
  fullName: VDS.RDF.Query.Grouping.BaseGroupBy.ProjectableVariables
- uid: VDS.RDF.Query.Grouping.GroupByVariable.ProjectableVariables*
  commentId: Overload:VDS.RDF.Query.Grouping.GroupByVariable.ProjectableVariables
  name: ProjectableVariables
  nameWithType: GroupByVariable.ProjectableVariables
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.ProjectableVariables
- uid: VDS.RDF.Query.Grouping.BaseGroupBy.Expression
  commentId: P:VDS.RDF.Query.Grouping.BaseGroupBy.Expression
  parent: VDS.RDF.Query.Grouping.BaseGroupBy
  name: Expression
  nameWithType: BaseGroupBy.Expression
  fullName: VDS.RDF.Query.Grouping.BaseGroupBy.Expression
- uid: VDS.RDF.Query.Grouping.GroupByVariable.Expression*
  commentId: Overload:VDS.RDF.Query.Grouping.GroupByVariable.Expression
  name: Expression
  nameWithType: GroupByVariable.Expression
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.Expression
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Grouping.GroupByVariable.ToString*
  commentId: Overload:VDS.RDF.Query.Grouping.GroupByVariable.ToString
  name: ToString
  nameWithType: GroupByVariable.ToString
  fullName: VDS.RDF.Query.Grouping.GroupByVariable.ToString
