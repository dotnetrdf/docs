### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction
  commentId: T:VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction
  id: EndsWithFunction
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String
  children:
  - VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Functor
  - VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ToString
  - VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  - VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  langs:
  - csharp
  - vb
  name: EndsWithFunction
  nameWithType: EndsWithFunction
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/String/EndsWithFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EndsWithFunction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/String/EndsWithFunction.cs
    startLine: 33
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.String
  summary: "\nRepresents the XPath fn:ends-with() function.\n"
  example: []
  syntax:
    content: 'public class EndsWithFunction : BaseBinaryStringFunction, ISparqlExpression'
    content.vb: >-
      Public Class EndsWithFunction
          Inherits BaseBinaryStringFunction
          Implements ISparqlExpression
  inheritance:
  - System.Object
  - VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  implements:
  - VDS.RDF.Query.Expressions.ISparqlExpression
  inheritedMembers:
  - VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._expr
  - VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._arg
  - VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._allowNullArgument
  - VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._argumentTypeValidator
  - VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  - VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode)
  - VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Variables
  - VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Type
  - VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Arguments
  - VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.CanParallelise
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  id: '#ctor(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)'
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction
  langs:
  - csharp
  - vb
  name: EndsWithFunction(ISparqlExpression, ISparqlExpression)
  nameWithType: EndsWithFunction.EndsWithFunction(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.EndsWithFunction(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/String/EndsWithFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/String/EndsWithFunction.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.String
  summary: "\nCreates a new XPath Ends With function.\n"
  example: []
  syntax:
    content: public EndsWithFunction(ISparqlExpression stringExpr, ISparqlExpression suffixExpr)
    parameters:
    - id: stringExpr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: Expression.
    - id: suffixExpr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: Suffix Expression.
    content.vb: Public Sub New(stringExpr As ISparqlExpression, suffixExpr As ISparqlExpression)
  overload: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  id: ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction
  langs:
  - csharp
  - vb
  name: ValueInternal(ILiteralNode, ILiteralNode)
  nameWithType: EndsWithFunction.ValueInternal(ILiteralNode, ILiteralNode)
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ValueInternal(VDS.RDF.ILiteralNode, VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/String/EndsWithFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ValueInternal
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/String/EndsWithFunction.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.String
  summary: "\nGets the Value of the function as applied to the given String Literal and Argument.\n"
  example: []
  syntax:
    content: public override IValuedNode ValueInternal(ILiteralNode stringLit, ILiteralNode arg)
    parameters:
    - id: stringLit
      type: VDS.RDF.ILiteralNode
      description: Simple/String typed Literal.
    - id: arg
      type: VDS.RDF.ILiteralNode
      description: Argument.
    return:
      type: VDS.RDF.Nodes.IValuedNode
      description: ''
    content.vb: Public Overrides Function ValueInternal(stringLit As ILiteralNode, arg As ILiteralNode) As IValuedNode
  overridden: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  overload: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ValueInternal*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ToString
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ToString
  id: ToString
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EndsWithFunction.ToString()
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/String/EndsWithFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/String/EndsWithFunction.cs
    startLine: 81
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.String
  summary: "\nGets the String representation of the function.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ToString
  overload: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Functor
  commentId: P:VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Functor
  id: Functor
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction
  langs:
  - csharp
  - vb
  name: Functor
  nameWithType: EndsWithFunction.Functor
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Functor
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/String/EndsWithFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Functor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/String/EndsWithFunction.cs
    startLine: 89
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.String
  summary: "\nGets the Functor of the Expression.\n"
  example: []
  syntax:
    content: public override string Functor { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Functor As String
  overridden: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Functor
  overload: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Functor*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  id: Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction
  langs:
  - csharp
  - vb
  name: Transform(IExpressionTransformer)
  nameWithType: EndsWithFunction.Transform(IExpressionTransformer)
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/String/EndsWithFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Transform
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/String/EndsWithFunction.cs
    startLine: 102
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.String
  summary: "\nTransforms the Expression using the given Transformer.\n"
  example: []
  syntax:
    content: public override ISparqlExpression Transform(IExpressionTransformer transformer)
    parameters:
    - id: transformer
      type: VDS.RDF.Query.Expressions.IExpressionTransformer
      description: Expression Transformer.
    return:
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: ''
    content.vb: Public Overrides Function Transform(transformer As IExpressionTransformer) As ISparqlExpression
  overridden: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  overload: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Transform*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String
  commentId: N:VDS.RDF.Query.Expressions.Functions.XPath.String
  name: VDS.RDF.Query.Expressions.Functions.XPath.String
  nameWithType: VDS.RDF.Query.Expressions.Functions.XPath.String
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  commentId: T:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String
  name: BaseBinaryStringFunction
  nameWithType: BaseBinaryStringFunction
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._expr
  commentId: F:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._expr
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: _expr
  nameWithType: BaseBinaryStringFunction._expr
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._expr
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._arg
  commentId: F:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._arg
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: _arg
  nameWithType: BaseBinaryStringFunction._arg
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._arg
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._allowNullArgument
  commentId: F:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._allowNullArgument
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: _allowNullArgument
  nameWithType: BaseBinaryStringFunction._allowNullArgument
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._allowNullArgument
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._argumentTypeValidator
  commentId: F:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._argumentTypeValidator
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: _argumentTypeValidator
  nameWithType: BaseBinaryStringFunction._argumentTypeValidator
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction._argumentTypeValidator
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  isExternal: true
  name: Evaluate(SparqlEvaluationContext, Int32)
  nameWithType: BaseBinaryStringFunction.Evaluate(SparqlEvaluationContext, Int32)
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext, System.Int32)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
    name: Evaluate
    nameWithType: BaseBinaryStringFunction.Evaluate
    fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
    name: Evaluate
    nameWithType: BaseBinaryStringFunction.Evaluate
    fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: ValueInternal(ILiteralNode)
  nameWithType: BaseBinaryStringFunction.ValueInternal(ILiteralNode)
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode)
    name: ValueInternal
    nameWithType: BaseBinaryStringFunction.ValueInternal
    fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode)
    name: ValueInternal
    nameWithType: BaseBinaryStringFunction.ValueInternal
    fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Variables
  commentId: P:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Variables
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: Variables
  nameWithType: BaseBinaryStringFunction.Variables
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Variables
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Type
  commentId: P:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Type
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: Type
  nameWithType: BaseBinaryStringFunction.Type
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Type
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Arguments
  commentId: P:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Arguments
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: Arguments
  nameWithType: BaseBinaryStringFunction.Arguments
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Arguments
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.CanParallelise
  commentId: P:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.CanParallelise
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: CanParallelise
  nameWithType: BaseBinaryStringFunction.CanParallelise
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.CanParallelise
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<EndsWithFunction>()
  nameWithType: Extensions.AsEnumerable<EndsWithFunction>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction>()
  nameWithType.vb: Extensions.AsEnumerable(Of EndsWithFunction)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction)()
  name.vb: AsEnumerable(Of EndsWithFunction)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<EndsWithFunction>
    nameWithType: Extensions.AsEnumerable<EndsWithFunction>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of EndsWithFunction)
    nameWithType: Extensions.AsEnumerable(Of EndsWithFunction)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.#ctor*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.#ctor
  name: EndsWithFunction
  nameWithType: EndsWithFunction.EndsWithFunction
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.EndsWithFunction
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: ValueInternal(ILiteralNode, ILiteralNode)
  nameWithType: BaseBinaryStringFunction.ValueInternal(ILiteralNode, ILiteralNode)
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode, VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
    name: ValueInternal
    nameWithType: BaseBinaryStringFunction.ValueInternal
    fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
    name: ValueInternal
    nameWithType: BaseBinaryStringFunction.ValueInternal
    fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ValueInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ValueInternal*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ValueInternal
  name: ValueInternal
  nameWithType: EndsWithFunction.ValueInternal
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ValueInternal
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: VDS.RDF.Nodes.IValuedNode
  commentId: T:VDS.RDF.Nodes.IValuedNode
  parent: VDS.RDF.Nodes
  name: IValuedNode
  nameWithType: IValuedNode
  fullName: VDS.RDF.Nodes.IValuedNode
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ToString
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ToString
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: ToString()
  nameWithType: BaseBinaryStringFunction.ToString()
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ToString()
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ToString
    name: ToString
    nameWithType: BaseBinaryStringFunction.ToString
    fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ToString
    name: ToString
    nameWithType: BaseBinaryStringFunction.ToString
    fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ToString*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ToString
  name: ToString
  nameWithType: EndsWithFunction.ToString
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Functor
  commentId: P:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Functor
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: Functor
  nameWithType: BaseBinaryStringFunction.Functor
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Functor
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Functor*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Functor
  name: Functor
  nameWithType: EndsWithFunction.Functor
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Functor
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  parent: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction
  name: Transform(IExpressionTransformer)
  nameWithType: BaseBinaryStringFunction.Transform(IExpressionTransformer)
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
    name: Transform
    nameWithType: BaseBinaryStringFunction.Transform
    fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.IExpressionTransformer
    name: IExpressionTransformer
    nameWithType: IExpressionTransformer
    fullName: VDS.RDF.Query.Expressions.IExpressionTransformer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
    name: Transform
    nameWithType: BaseBinaryStringFunction.Transform
    fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.BaseBinaryStringFunction.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.IExpressionTransformer
    name: IExpressionTransformer
    nameWithType: IExpressionTransformer
    fullName: VDS.RDF.Query.Expressions.IExpressionTransformer
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Transform*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Transform
  name: Transform
  nameWithType: EndsWithFunction.Transform
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.String.EndsWithFunction.Transform
- uid: VDS.RDF.Query.Expressions.IExpressionTransformer
  commentId: T:VDS.RDF.Query.Expressions.IExpressionTransformer
  parent: VDS.RDF.Query.Expressions
  name: IExpressionTransformer
  nameWithType: IExpressionTransformer
  fullName: VDS.RDF.Query.Expressions.IExpressionTransformer
