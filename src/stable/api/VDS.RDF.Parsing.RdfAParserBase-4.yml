### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.RdfAParserBase`4
  commentId: T:VDS.RDF.Parsing.RdfAParserBase`4
  id: RdfAParserBase`4
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.RdfAParserBase`4.#ctor
  - VDS.RDF.Parsing.RdfAParserBase`4.#ctor(VDS.RDF.Parsing.RdfASyntax)
  - VDS.RDF.Parsing.RdfAParserBase`4.GetAttribute(`1,System.String)
  - VDS.RDF.Parsing.RdfAParserBase`4.GetAttributeName(`3)
  - VDS.RDF.Parsing.RdfAParserBase`4.GetAttributes(`1)
  - VDS.RDF.Parsing.RdfAParserBase`4.GetAttributeValue(`3)
  - VDS.RDF.Parsing.RdfAParserBase`4.GetBaseElement(`0)
  - VDS.RDF.Parsing.RdfAParserBase`4.GetChildren(`1)
  - VDS.RDF.Parsing.RdfAParserBase`4.GetElementName(`1)
  - VDS.RDF.Parsing.RdfAParserBase`4.GetHtmlElement(`0)
  - VDS.RDF.Parsing.RdfAParserBase`4.GetInnerHtml(`1)
  - VDS.RDF.Parsing.RdfAParserBase`4.GetInnerText(`2)
  - VDS.RDF.Parsing.RdfAParserBase`4.GrabText(System.Text.StringBuilder,`2)
  - VDS.RDF.Parsing.RdfAParserBase`4.HasAttribute(`1,System.String)
  - VDS.RDF.Parsing.RdfAParserBase`4.HasChildren(`1)
  - VDS.RDF.Parsing.RdfAParserBase`4.HtmlPlusRdfA10Version
  - VDS.RDF.Parsing.RdfAParserBase`4.HtmlPlusRdfA11Version
  - VDS.RDF.Parsing.RdfAParserBase`4.IsTextNode(`2)
  - VDS.RDF.Parsing.RdfAParserBase`4.IsXmlBaseIsPermissible(`0)
  - VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IGraph,System.IO.StreamReader)
  - VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IGraph,System.IO.TextReader)
  - VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IGraph,System.String)
  - VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IRdfHandler,System.IO.StreamReader)
  - VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IRdfHandler,System.IO.TextReader)
  - VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IRdfHandler,System.String)
  - VDS.RDF.Parsing.RdfAParserBase`4.LoadAndParse(System.IO.TextReader)
  - VDS.RDF.Parsing.RdfAParserBase`4.ProcessDocument(VDS.RDF.Parsing.Contexts.RdfAParserContext{`0},VDS.RDF.Parsing.Contexts.RdfAEvaluationContext)
  - VDS.RDF.Parsing.RdfAParserBase`4.ProcessElement(VDS.RDF.Parsing.Contexts.RdfAParserContext{`0},VDS.RDF.Parsing.Contexts.RdfAEvaluationContext,`1)
  - VDS.RDF.Parsing.RdfAParserBase`4.RdfANamespace
  - VDS.RDF.Parsing.RdfAParserBase`4.SetAttribute(`1,System.String,System.String)
  - VDS.RDF.Parsing.RdfAParserBase`4.Warning
  - VDS.RDF.Parsing.RdfAParserBase`4.XHtmlNamespace
  - VDS.RDF.Parsing.RdfAParserBase`4.XHtmlPlusRdfA10Version
  - VDS.RDF.Parsing.RdfAParserBase`4.XHtmlPlusRdfA11Version
  - VDS.RDF.Parsing.RdfAParserBase`4.XHtmlPlusRdfADoctype
  - VDS.RDF.Parsing.RdfAParserBase`4.XHtmlVocabNamespace
  langs:
  - csharp
  - vb
  name: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RdfAParserBase
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nBase class for the framework-specific RDFa parser implementations.\n"
  example: []
  syntax:
    content: 'public abstract class RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute> : IRdfReader where TElement : class, TNode'
    typeParameters:
    - id: THtmlDocument
      description: ''
    - id: TElement
      description: ''
    - id: TNode
      description: ''
    - id: TAttribute
      description: ''
    content.vb: >-
      Public MustInherit Class RdfAParserBase(Of THtmlDocument, TElement As {Class, TNode}, TNode, TAttribute)
          Implements IRdfReader
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Parsing.RdfAParser
  implements:
  - VDS.RDF.IRdfReader
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.RdfAParserBase`4.VDS.RDF.Extensions.AsEnumerable``1
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute)
  name.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.XHtmlVocabNamespace
  commentId: F:VDS.RDF.Parsing.RdfAParserBase`4.XHtmlVocabNamespace
  id: XHtmlVocabNamespace
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: XHtmlVocabNamespace
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.XHtmlVocabNamespace
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.XHtmlVocabNamespace
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XHtmlVocabNamespace
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 52
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nXHTML Vocab Namespace.\n"
  example: []
  syntax:
    content: public const string XHtmlVocabNamespace = "http://www.w3.org/1999/xhtml/vocab#"
    return:
      type: System.String
    content.vb: Public Const XHtmlVocabNamespace As String = "http://www.w3.org/1999/xhtml/vocab#"
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).XHtmlVocabNamespace
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).XHtmlVocabNamespace
- uid: VDS.RDF.Parsing.RdfAParserBase`4.XHtmlPlusRdfADoctype
  commentId: F:VDS.RDF.Parsing.RdfAParserBase`4.XHtmlPlusRdfADoctype
  id: XHtmlPlusRdfADoctype
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: XHtmlPlusRdfADoctype
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.XHtmlPlusRdfADoctype
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.XHtmlPlusRdfADoctype
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XHtmlPlusRdfADoctype
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nURI for the XHTML+RDFa DTD.\n"
  example: []
  syntax:
    content: public const string XHtmlPlusRdfADoctype = "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd"
    return:
      type: System.String
    content.vb: Public Const XHtmlPlusRdfADoctype As String = "http://www.w3.org/MarkUp/DTD/xhtml-rdfa-1.dtd"
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).XHtmlPlusRdfADoctype
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).XHtmlPlusRdfADoctype
- uid: VDS.RDF.Parsing.RdfAParserBase`4.XHtmlNamespace
  commentId: F:VDS.RDF.Parsing.RdfAParserBase`4.XHtmlNamespace
  id: XHtmlNamespace
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: XHtmlNamespace
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.XHtmlNamespace
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.XHtmlNamespace
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XHtmlNamespace
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nNamespace URI for XHTML.\n"
  example: []
  syntax:
    content: public const string XHtmlNamespace = "http://www.w3.org/1999/xhtml#"
    return:
      type: System.String
    content.vb: Public Const XHtmlNamespace As String = "http://www.w3.org/1999/xhtml#"
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).XHtmlNamespace
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).XHtmlNamespace
- uid: VDS.RDF.Parsing.RdfAParserBase`4.RdfANamespace
  commentId: F:VDS.RDF.Parsing.RdfAParserBase`4.RdfANamespace
  id: RdfANamespace
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: RdfANamespace
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.RdfANamespace
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.RdfANamespace
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RdfANamespace
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 64
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nNamespace URI for RDFa.\n"
  example: []
  syntax:
    content: public const string RdfANamespace = "http://www.w3.org/ns/rdfa#"
    return:
      type: System.String
    content.vb: Public Const RdfANamespace As String = "http://www.w3.org/ns/rdfa#"
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).RdfANamespace
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).RdfANamespace
- uid: VDS.RDF.Parsing.RdfAParserBase`4.XHtmlPlusRdfA11Version
  commentId: F:VDS.RDF.Parsing.RdfAParserBase`4.XHtmlPlusRdfA11Version
  id: XHtmlPlusRdfA11Version
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: XHtmlPlusRdfA11Version
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.XHtmlPlusRdfA11Version
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.XHtmlPlusRdfA11Version
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XHtmlPlusRdfA11Version
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nRDFa Version Constants.\n"
  example: []
  syntax:
    content: public const string XHtmlPlusRdfA11Version = "XHTML+RDFa 1.1"
    return:
      type: System.String
    content.vb: Public Const XHtmlPlusRdfA11Version As String = "XHTML+RDFa 1.1"
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).XHtmlPlusRdfA11Version
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).XHtmlPlusRdfA11Version
- uid: VDS.RDF.Parsing.RdfAParserBase`4.HtmlPlusRdfA11Version
  commentId: F:VDS.RDF.Parsing.RdfAParserBase`4.HtmlPlusRdfA11Version
  id: HtmlPlusRdfA11Version
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: HtmlPlusRdfA11Version
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.HtmlPlusRdfA11Version
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.HtmlPlusRdfA11Version
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HtmlPlusRdfA11Version
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nRDFa Version Constants.\n"
  example: []
  syntax:
    content: public const string HtmlPlusRdfA11Version = "HTML+RDFa 1.1"
    return:
      type: System.String
    content.vb: Public Const HtmlPlusRdfA11Version As String = "HTML+RDFa 1.1"
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).HtmlPlusRdfA11Version
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).HtmlPlusRdfA11Version
- uid: VDS.RDF.Parsing.RdfAParserBase`4.XHtmlPlusRdfA10Version
  commentId: F:VDS.RDF.Parsing.RdfAParserBase`4.XHtmlPlusRdfA10Version
  id: XHtmlPlusRdfA10Version
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: XHtmlPlusRdfA10Version
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.XHtmlPlusRdfA10Version
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.XHtmlPlusRdfA10Version
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XHtmlPlusRdfA10Version
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 71
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nRDFa Version Constants.\n"
  example: []
  syntax:
    content: public const string XHtmlPlusRdfA10Version = "XHTML+RDFa 1.0"
    return:
      type: System.String
    content.vb: Public Const XHtmlPlusRdfA10Version As String = "XHTML+RDFa 1.0"
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).XHtmlPlusRdfA10Version
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).XHtmlPlusRdfA10Version
- uid: VDS.RDF.Parsing.RdfAParserBase`4.HtmlPlusRdfA10Version
  commentId: F:VDS.RDF.Parsing.RdfAParserBase`4.HtmlPlusRdfA10Version
  id: HtmlPlusRdfA10Version
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: HtmlPlusRdfA10Version
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.HtmlPlusRdfA10Version
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.HtmlPlusRdfA10Version
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HtmlPlusRdfA10Version
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 72
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nRDFa Version Constants.\n"
  example: []
  syntax:
    content: public const string HtmlPlusRdfA10Version = "HTML+RDFa 1.0"
    return:
      type: System.String
    content.vb: Public Const HtmlPlusRdfA10Version As String = "HTML+RDFa 1.0"
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).HtmlPlusRdfA10Version
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).HtmlPlusRdfA10Version
- uid: VDS.RDF.Parsing.RdfAParserBase`4.#ctor
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.#ctor
  id: '#ctor'
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: RdfAParserBase()
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.RdfAParserBase()
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.RdfAParserBase()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 79
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new RDFa Parser which will auto-detect which RDFa version to use (assumes 1.1 if none explicitly specified).\n"
  example: []
  syntax:
    content: protected RdfAParserBase()
    content.vb: Protected Sub New
  overload: VDS.RDF.Parsing.RdfAParserBase`4.#ctor*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).RdfAParserBase()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).RdfAParserBase()
- uid: VDS.RDF.Parsing.RdfAParserBase`4.#ctor(VDS.RDF.Parsing.RdfASyntax)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.#ctor(VDS.RDF.Parsing.RdfASyntax)
  id: '#ctor(VDS.RDF.Parsing.RdfASyntax)'
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: RdfAParserBase(RdfASyntax)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.RdfAParserBase(RdfASyntax)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.RdfAParserBase(VDS.RDF.Parsing.RdfASyntax)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 88
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new RDFa Parser which will use the specified RDFa syntax.\n"
  example: []
  syntax:
    content: protected RdfAParserBase(RdfASyntax syntax)
    parameters:
    - id: syntax
      type: VDS.RDF.Parsing.RdfASyntax
      description: RDFa Syntax Version.
    content.vb: Protected Sub New(syntax As RdfASyntax)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.#ctor*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).RdfAParserBase(RdfASyntax)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).RdfAParserBase(VDS.RDF.Parsing.RdfASyntax)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IGraph,System.IO.StreamReader)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IGraph,System.IO.StreamReader)
  id: Load(VDS.RDF.IGraph,System.IO.StreamReader)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: Load(IGraph, StreamReader)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load(IGraph, StreamReader)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load(VDS.RDF.IGraph, System.IO.StreamReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Load
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 98
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses RDFa by extracting it from the HTML from the given input.\n"
  example: []
  syntax:
    content: public void Load(IGraph g, StreamReader input)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: input
      type: System.IO.StreamReader
      description: Stream to read from.
    content.vb: Public Sub Load(g As IGraph, input As StreamReader)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.Load*
  implements:
  - VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.IO.StreamReader)
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load(IGraph, StreamReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load(VDS.RDF.IGraph, System.IO.StreamReader)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IGraph,System.IO.TextReader)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IGraph,System.IO.TextReader)
  id: Load(VDS.RDF.IGraph,System.IO.TextReader)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: Load(IGraph, TextReader)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load(IGraph, TextReader)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load(VDS.RDF.IGraph, System.IO.TextReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Load
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 109
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses RDFa by extracting it from the HTML from the given input.\n"
  example: []
  syntax:
    content: public void Load(IGraph g, TextReader input)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: input
      type: System.IO.TextReader
      description: Input to read from.
    content.vb: Public Sub Load(g As IGraph, input As TextReader)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.Load*
  implements:
  - VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.IO.TextReader)
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load(IGraph, TextReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load(VDS.RDF.IGraph, System.IO.TextReader)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IGraph,System.String)
  id: Load(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: Load(IGraph, String)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load(IGraph, String)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load(VDS.RDF.IGraph, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Load
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 120
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses RDFa by extracting it from the HTML from the given file.\n"
  example: []
  syntax:
    content: public void Load(IGraph g, string filename)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: filename
      type: System.String
      description: File to read from.
    content.vb: Public Sub Load(g As IGraph, filename As String)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.Load*
  implements:
  - VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.String)
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load(IGraph, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load(VDS.RDF.IGraph, System.String)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IRdfHandler,System.IO.StreamReader)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IRdfHandler,System.IO.StreamReader)
  id: Load(VDS.RDF.IRdfHandler,System.IO.StreamReader)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: Load(IRdfHandler, StreamReader)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load(IRdfHandler, StreamReader)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load(VDS.RDF.IRdfHandler, System.IO.StreamReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Load
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 132
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses RDFa by extracting it from the HTML from the given input.\n"
  example: []
  syntax:
    content: public void Load(IRdfHandler handler, StreamReader input)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler to use.
    - id: input
      type: System.IO.StreamReader
      description: Stream to read from.
    content.vb: Public Sub Load(handler As IRdfHandler, input As StreamReader)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.Load*
  implements:
  - VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.IO.StreamReader)
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load(IRdfHandler, StreamReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load(VDS.RDF.IRdfHandler, System.IO.StreamReader)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IRdfHandler,System.IO.TextReader)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IRdfHandler,System.IO.TextReader)
  id: Load(VDS.RDF.IRdfHandler,System.IO.TextReader)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: Load(IRdfHandler, TextReader)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load(IRdfHandler, TextReader)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load(VDS.RDF.IRdfHandler, System.IO.TextReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Load
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 144
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses RDFa by extracting it from the HTML from the given input.\n"
  example: []
  syntax:
    content: public void Load(IRdfHandler handler, TextReader input)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler to use.
    - id: input
      type: System.IO.TextReader
      description: Input to read from.
    content.vb: Public Sub Load(handler As IRdfHandler, input As TextReader)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.Load*
  implements:
  - VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.IO.TextReader)
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load(IRdfHandler, TextReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load(VDS.RDF.IRdfHandler, System.IO.TextReader)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IRdfHandler,System.String)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.Load(VDS.RDF.IRdfHandler,System.String)
  id: Load(VDS.RDF.IRdfHandler,System.String)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: Load(IRdfHandler, String)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load(IRdfHandler, String)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load(VDS.RDF.IRdfHandler, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Load
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 175
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses RDFa by extracting it from the HTML from the given input.\n"
  example: []
  syntax:
    content: public void Load(IRdfHandler handler, string filename)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler to use.
    - id: filename
      type: System.String
      description: File to read from.
    content.vb: Public Sub Load(handler As IRdfHandler, filename As String)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.Load*
  implements:
  - VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.String)
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load(IRdfHandler, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load(VDS.RDF.IRdfHandler, System.String)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.LoadAndParse(System.IO.TextReader)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.LoadAndParse(System.IO.TextReader)
  id: LoadAndParse(System.IO.TextReader)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: LoadAndParse(TextReader)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.LoadAndParse(TextReader)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.LoadAndParse(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadAndParse
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 187
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParse the input stream as an HTML document.\n"
  example: []
  syntax:
    content: protected abstract THtmlDocument LoadAndParse(TextReader input)
    parameters:
    - id: input
      type: System.IO.TextReader
      description: ''
    return:
      type: '{THtmlDocument}'
      description: ''
    content.vb: Protected MustOverride Function LoadAndParse(input As TextReader) As THtmlDocument
  overload: VDS.RDF.Parsing.RdfAParserBase`4.LoadAndParse*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).LoadAndParse(TextReader)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).LoadAndParse(System.IO.TextReader)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.HasAttribute(`1,System.String)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.HasAttribute(`1,System.String)
  id: HasAttribute(`1,System.String)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: HasAttribute(TElement, String)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.HasAttribute(TElement, String)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.HasAttribute(TElement, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasAttribute
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 195
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nDetermine if an element has a particular attribute.\n"
  example: []
  syntax:
    content: protected abstract bool HasAttribute(TElement element, string attributeName)
    parameters:
    - id: element
      type: '{TElement}'
      description: The element to check.
    - id: attributeName
      type: System.String
      description: The name of the attribute to check for.
    return:
      type: System.Boolean
      description: True if the element has an attribute named <code data-dev-comment-type="paramref" class="paramref">attributeName</code>, false otherwise.
    content.vb: Protected MustOverride Function HasAttribute(element As TElement, attributeName As String) As Boolean
  overload: VDS.RDF.Parsing.RdfAParserBase`4.HasAttribute*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).HasAttribute(TElement, String)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).HasAttribute(TElement, System.String)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetAttribute(`1,System.String)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.GetAttribute(`1,System.String)
  id: GetAttribute(`1,System.String)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: GetAttribute(TElement, String)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttribute(TElement, String)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttribute(TElement, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetAttribute
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 203
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGet the value of a particular attribute of an element.\n"
  example: []
  syntax:
    content: protected abstract string GetAttribute(TElement element, string attributeName)
    parameters:
    - id: element
      type: '{TElement}'
      description: The element.
    - id: attributeName
      type: System.String
      description: The name of the attribute on the element.
    return:
      type: System.String
      description: The value of the attribute.
    content.vb: Protected MustOverride Function GetAttribute(element As TElement, attributeName As String) As String
  overload: VDS.RDF.Parsing.RdfAParserBase`4.GetAttribute*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttribute(TElement, String)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttribute(TElement, System.String)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.SetAttribute(`1,System.String,System.String)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.SetAttribute(`1,System.String,System.String)
  id: SetAttribute(`1,System.String,System.String)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: SetAttribute(TElement, String, String)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.SetAttribute(TElement, String, String)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.SetAttribute(TElement, System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetAttribute
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 211
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nSet the value of a particular attribute of an element.\n"
  example: []
  syntax:
    content: protected abstract void SetAttribute(TElement element, string attributeName, string value)
    parameters:
    - id: element
      type: '{TElement}'
      description: The element.
    - id: attributeName
      type: System.String
      description: The name of the attribute to set/update.
    - id: value
      type: System.String
      description: The new value for the attribute.
    content.vb: Protected MustOverride Sub SetAttribute(element As TElement, attributeName As String, value As String)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.SetAttribute*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).SetAttribute(TElement, String, String)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).SetAttribute(TElement, System.String, System.String)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetBaseElement(`0)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.GetBaseElement(`0)
  id: GetBaseElement(`0)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: GetBaseElement(THtmlDocument)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetBaseElement(THtmlDocument)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetBaseElement(THtmlDocument)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetBaseElement
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 218
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGet the base element of the specified document.\n"
  example: []
  syntax:
    content: protected abstract TElement GetBaseElement(THtmlDocument document)
    parameters:
    - id: document
      type: '{THtmlDocument}'
      description: ''
    return:
      type: '{TElement}'
      description: ''
    content.vb: Protected MustOverride Function GetBaseElement(document As THtmlDocument) As TElement
  overload: VDS.RDF.Parsing.RdfAParserBase`4.GetBaseElement*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetBaseElement(THtmlDocument)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetBaseElement(THtmlDocument)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.IsXmlBaseIsPermissible(`0)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.IsXmlBaseIsPermissible(`0)
  id: IsXmlBaseIsPermissible(`0)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: IsXmlBaseIsPermissible(THtmlDocument)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.IsXmlBaseIsPermissible(THtmlDocument)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.IsXmlBaseIsPermissible(THtmlDocument)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsXmlBaseIsPermissible
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 225
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nDeterine if the HTML document can have an xml:base element.\n"
  example: []
  syntax:
    content: protected abstract bool IsXmlBaseIsPermissible(THtmlDocument document)
    parameters:
    - id: document
      type: '{THtmlDocument}'
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected MustOverride Function IsXmlBaseIsPermissible(document As THtmlDocument) As Boolean
  overload: VDS.RDF.Parsing.RdfAParserBase`4.IsXmlBaseIsPermissible*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).IsXmlBaseIsPermissible(THtmlDocument)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).IsXmlBaseIsPermissible(THtmlDocument)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetHtmlElement(`0)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.GetHtmlElement(`0)
  id: GetHtmlElement(`0)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: GetHtmlElement(THtmlDocument)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetHtmlElement(THtmlDocument)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetHtmlElement(THtmlDocument)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetHtmlElement
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 232
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGet the html element of the document.\n"
  example: []
  syntax:
    content: protected abstract TElement GetHtmlElement(THtmlDocument document)
    parameters:
    - id: document
      type: '{THtmlDocument}'
      description: ''
    return:
      type: '{TElement}'
      description: ''
    content.vb: Protected MustOverride Function GetHtmlElement(document As THtmlDocument) As TElement
  overload: VDS.RDF.Parsing.RdfAParserBase`4.GetHtmlElement*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetHtmlElement(THtmlDocument)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetHtmlElement(THtmlDocument)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.ProcessDocument(VDS.RDF.Parsing.Contexts.RdfAParserContext{`0},VDS.RDF.Parsing.Contexts.RdfAEvaluationContext)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.ProcessDocument(VDS.RDF.Parsing.Contexts.RdfAParserContext{`0},VDS.RDF.Parsing.Contexts.RdfAEvaluationContext)
  id: ProcessDocument(VDS.RDF.Parsing.Contexts.RdfAParserContext{`0},VDS.RDF.Parsing.Contexts.RdfAEvaluationContext)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: ProcessDocument(RdfAParserContext<THtmlDocument>, RdfAEvaluationContext)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.ProcessDocument(RdfAParserContext<THtmlDocument>, RdfAEvaluationContext)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.ProcessDocument(VDS.RDF.Parsing.Contexts.RdfAParserContext<THtmlDocument>, VDS.RDF.Parsing.Contexts.RdfAEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ProcessDocument
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 239
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nProcess the content of an HTML document.\n"
  example: []
  syntax:
    content: protected abstract void ProcessDocument(RdfAParserContext<THtmlDocument> context, RdfAEvaluationContext evalContext)
    parameters:
    - id: context
      type: VDS.RDF.Parsing.Contexts.RdfAParserContext{{THtmlDocument}}
      description: ''
    - id: evalContext
      type: VDS.RDF.Parsing.Contexts.RdfAEvaluationContext
      description: ''
    content.vb: Protected MustOverride Sub ProcessDocument(context As RdfAParserContext(Of THtmlDocument), evalContext As RdfAEvaluationContext)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.ProcessDocument*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).ProcessDocument(RdfAParserContext(Of THtmlDocument), RdfAEvaluationContext)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).ProcessDocument(VDS.RDF.Parsing.Contexts.RdfAParserContext(Of THtmlDocument), VDS.RDF.Parsing.Contexts.RdfAEvaluationContext)
  name.vb: ProcessDocument(RdfAParserContext(Of THtmlDocument), RdfAEvaluationContext)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetAttributes(`1)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.GetAttributes(`1)
  id: GetAttributes(`1)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: GetAttributes(TElement)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttributes(TElement)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttributes(TElement)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetAttributes
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 246
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGet all attributes of an element.\n"
  example: []
  syntax:
    content: protected abstract IEnumerable<TAttribute> GetAttributes(TElement element)
    parameters:
    - id: element
      type: '{TElement}'
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{{TAttribute}}
      description: ''
    content.vb: Protected MustOverride Function GetAttributes(element As TElement) As IEnumerable(Of TAttribute)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.GetAttributes*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttributes(TElement)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttributes(TElement)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetAttributeName(`3)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.GetAttributeName(`3)
  id: GetAttributeName(`3)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: GetAttributeName(TAttribute)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttributeName(TAttribute)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttributeName(TAttribute)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetAttributeName
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 253
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGet the name of an attribute.\n"
  example: []
  syntax:
    content: protected abstract string GetAttributeName(TAttribute attribute)
    parameters:
    - id: attribute
      type: '{TAttribute}'
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected MustOverride Function GetAttributeName(attribute As TAttribute) As String
  overload: VDS.RDF.Parsing.RdfAParserBase`4.GetAttributeName*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttributeName(TAttribute)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttributeName(TAttribute)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetAttributeValue(`3)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.GetAttributeValue(`3)
  id: GetAttributeValue(`3)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: GetAttributeValue(TAttribute)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttributeValue(TAttribute)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttributeValue(TAttribute)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetAttributeValue
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 260
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGet the value of an attribute.\n"
  example: []
  syntax:
    content: protected abstract string GetAttributeValue(TAttribute attribute)
    parameters:
    - id: attribute
      type: '{TAttribute}'
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected MustOverride Function GetAttributeValue(attribute As TAttribute) As String
  overload: VDS.RDF.Parsing.RdfAParserBase`4.GetAttributeValue*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttributeValue(TAttribute)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttributeValue(TAttribute)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetElementName(`1)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.GetElementName(`1)
  id: GetElementName(`1)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: GetElementName(TElement)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetElementName(TElement)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetElementName(TElement)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetElementName
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 267
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGet the name of an element.\n"
  example: []
  syntax:
    content: protected abstract string GetElementName(TElement element)
    parameters:
    - id: element
      type: '{TElement}'
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected MustOverride Function GetElementName(element As TElement) As String
  overload: VDS.RDF.Parsing.RdfAParserBase`4.GetElementName*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetElementName(TElement)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetElementName(TElement)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetChildren(`1)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.GetChildren(`1)
  id: GetChildren(`1)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: GetChildren(TElement)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetChildren(TElement)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetChildren(TElement)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetChildren
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 274
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nReturn the children of an element (in order).\n"
  example: []
  syntax:
    content: protected abstract IEnumerable<TNode> GetChildren(TElement element)
    parameters:
    - id: element
      type: '{TElement}'
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{{TNode}}
      description: ''
    content.vb: Protected MustOverride Function GetChildren(element As TElement) As IEnumerable(Of TNode)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.GetChildren*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetChildren(TElement)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetChildren(TElement)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetInnerText(`2)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.GetInnerText(`2)
  id: GetInnerText(`2)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: GetInnerText(TNode)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetInnerText(TNode)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetInnerText(TNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetInnerText
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 281
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGet the inner text of an element or a text node.\n"
  example: []
  syntax:
    content: protected abstract string GetInnerText(TNode node)
    parameters:
    - id: node
      type: '{TNode}'
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected MustOverride Function GetInnerText(node As TNode) As String
  overload: VDS.RDF.Parsing.RdfAParserBase`4.GetInnerText*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetInnerText(TNode)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetInnerText(TNode)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetInnerHtml(`1)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.GetInnerHtml(`1)
  id: GetInnerHtml(`1)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: GetInnerHtml(TElement)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetInnerHtml(TElement)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetInnerHtml(TElement)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetInnerHtml
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 288
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGet the HTML contained within an element as a string.\n"
  example: []
  syntax:
    content: protected abstract string GetInnerHtml(TElement element)
    parameters:
    - id: element
      type: '{TElement}'
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Protected MustOverride Function GetInnerHtml(element As TElement) As String
  overload: VDS.RDF.Parsing.RdfAParserBase`4.GetInnerHtml*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetInnerHtml(TElement)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetInnerHtml(TElement)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.HasChildren(`1)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.HasChildren(`1)
  id: HasChildren(`1)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: HasChildren(TElement)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.HasChildren(TElement)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.HasChildren(TElement)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasChildren
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 295
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nDetermine if an element has children.\n"
  example: []
  syntax:
    content: protected abstract bool HasChildren(TElement element)
    parameters:
    - id: element
      type: '{TElement}'
      description: ''
    return:
      type: System.Boolean
      description: True if the element has children, false otherwise.
    content.vb: Protected MustOverride Function HasChildren(element As TElement) As Boolean
  overload: VDS.RDF.Parsing.RdfAParserBase`4.HasChildren*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).HasChildren(TElement)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).HasChildren(TElement)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.IsTextNode(`2)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.IsTextNode(`2)
  id: IsTextNode(`2)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: IsTextNode(TNode)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.IsTextNode(TNode)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.IsTextNode(TNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsTextNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 302
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nDetermine if a node in the parsed Html document tree is a text node.\n"
  example: []
  syntax:
    content: protected abstract bool IsTextNode(TNode node)
    parameters:
    - id: node
      type: '{TNode}'
      description: ''
    return:
      type: System.Boolean
      description: True if <code data-dev-comment-type="paramref" class="paramref">node</code> is a text node, false otherwise.
    content.vb: Protected MustOverride Function IsTextNode(node As TNode) As Boolean
  overload: VDS.RDF.Parsing.RdfAParserBase`4.IsTextNode*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).IsTextNode(TNode)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).IsTextNode(TNode)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.ProcessElement(VDS.RDF.Parsing.Contexts.RdfAParserContext{`0},VDS.RDF.Parsing.Contexts.RdfAEvaluationContext,`1)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.ProcessElement(VDS.RDF.Parsing.Contexts.RdfAParserContext{`0},VDS.RDF.Parsing.Contexts.RdfAEvaluationContext,`1)
  id: ProcessElement(VDS.RDF.Parsing.Contexts.RdfAParserContext{`0},VDS.RDF.Parsing.Contexts.RdfAEvaluationContext,`1)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: ProcessElement(RdfAParserContext<THtmlDocument>, RdfAEvaluationContext, TElement)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.ProcessElement(RdfAParserContext<THtmlDocument>, RdfAEvaluationContext, TElement)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.ProcessElement(VDS.RDF.Parsing.Contexts.RdfAParserContext<THtmlDocument>, VDS.RDF.Parsing.Contexts.RdfAEvaluationContext, TElement)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ProcessElement
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 414
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nProcess the content of an element of the document.\n"
  example: []
  syntax:
    content: protected void ProcessElement(RdfAParserContext<THtmlDocument> context, RdfAEvaluationContext evalContext, TElement currElement)
    parameters:
    - id: context
      type: VDS.RDF.Parsing.Contexts.RdfAParserContext{{THtmlDocument}}
      description: ''
    - id: evalContext
      type: VDS.RDF.Parsing.Contexts.RdfAEvaluationContext
      description: ''
    - id: currElement
      type: '{TElement}'
      description: ''
    content.vb: Protected Sub ProcessElement(context As RdfAParserContext(Of THtmlDocument), evalContext As RdfAEvaluationContext, currElement As TElement)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.ProcessElement*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).ProcessElement(RdfAParserContext(Of THtmlDocument), RdfAEvaluationContext, TElement)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).ProcessElement(VDS.RDF.Parsing.Contexts.RdfAParserContext(Of THtmlDocument), VDS.RDF.Parsing.Contexts.RdfAEvaluationContext, TElement)
  name.vb: ProcessElement(RdfAParserContext(Of THtmlDocument), RdfAEvaluationContext, TElement)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GrabText(System.Text.StringBuilder,`2)
  commentId: M:VDS.RDF.Parsing.RdfAParserBase`4.GrabText(System.Text.StringBuilder,`2)
  id: GrabText(System.Text.StringBuilder,`2)
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: GrabText(StringBuilder, TNode)
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GrabText(StringBuilder, TNode)
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GrabText(System.Text.StringBuilder, TNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GrabText
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 1444
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGet the text content of a node and add it to the provided output buffer.\n"
  example: []
  syntax:
    content: protected abstract void GrabText(StringBuilder output, TNode node)
    parameters:
    - id: output
      type: System.Text.StringBuilder
      description: ''
    - id: node
      type: '{TNode}'
      description: ''
    content.vb: Protected MustOverride Sub GrabText(output As StringBuilder, node As TNode)
  overload: VDS.RDF.Parsing.RdfAParserBase`4.GrabText*
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GrabText(StringBuilder, TNode)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GrabText(System.Text.StringBuilder, TNode)
- uid: VDS.RDF.Parsing.RdfAParserBase`4.Warning
  commentId: E:VDS.RDF.Parsing.RdfAParserBase`4.Warning
  id: Warning
  parent: VDS.RDF.Parsing.RdfAParserBase`4
  langs:
  - csharp
  - vb
  name: Warning
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Warning
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Warning
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Warning
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/RdfAParserBase.cs
    startLine: 1528
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nEvent which is raised when there is a non-fatal error with the input being read\n"
  example: []
  syntax:
    content: public event RdfReaderWarning Warning
    return:
      type: VDS.RDF.RdfReaderWarning
    content.vb: Public Event Warning As RdfReaderWarning
  implements:
  - VDS.RDF.IRdfReader.Warning
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Warning
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Warning
references:
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.IRdfReader
  commentId: T:VDS.RDF.IRdfReader
  parent: VDS.RDF
  name: IRdfReader
  nameWithType: IRdfReader
  fullName: VDS.RDF.IRdfReader
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.RdfAParserBase`4.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>>()
  nameWithType: Extensions.AsEnumerable<RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>>()
  nameWithType.vb: Extensions.AsEnumerable(Of RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute))()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute))()
  name.vb: AsEnumerable(Of RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute))()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>>
    nameWithType: Extensions.AsEnumerable<RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute))
    nameWithType: Extensions.AsEnumerable(Of RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute))
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Parsing.RdfAParserBase`4.#ctor*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.#ctor
  name: RdfAParserBase
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.RdfAParserBase
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.RdfAParserBase
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).RdfAParserBase
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).RdfAParserBase
- uid: VDS.RDF.Parsing.RdfASyntax
  commentId: T:VDS.RDF.Parsing.RdfASyntax
  parent: VDS.RDF.Parsing
  name: RdfASyntax
  nameWithType: RdfASyntax
  fullName: VDS.RDF.Parsing.RdfASyntax
- uid: VDS.RDF.Parsing.RdfAParserBase`4.Load*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.Load
  name: Load
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.Load
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).Load
- uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.IO.StreamReader)
  commentId: M:VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.IO.StreamReader)
  parent: VDS.RDF.IRdfReader
  isExternal: true
  name: Load(IGraph, StreamReader)
  nameWithType: IRdfReader.Load(IGraph, StreamReader)
  fullName: VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph, System.IO.StreamReader)
  spec.csharp:
  - uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.IO.StreamReader)
    name: Load
    nameWithType: IRdfReader.Load
    fullName: VDS.RDF.IRdfReader.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.StreamReader
    name: StreamReader
    nameWithType: StreamReader
    fullName: System.IO.StreamReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.IO.StreamReader)
    name: Load
    nameWithType: IRdfReader.Load
    fullName: VDS.RDF.IRdfReader.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.StreamReader
    name: StreamReader
    nameWithType: StreamReader
    fullName: System.IO.StreamReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: System.IO.StreamReader
  commentId: T:System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.IO.TextReader)
  commentId: M:VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.IO.TextReader)
  parent: VDS.RDF.IRdfReader
  isExternal: true
  name: Load(IGraph, TextReader)
  nameWithType: IRdfReader.Load(IGraph, TextReader)
  fullName: VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph, System.IO.TextReader)
  spec.csharp:
  - uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.IO.TextReader)
    name: Load
    nameWithType: IRdfReader.Load
    fullName: VDS.RDF.IRdfReader.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.IO.TextReader)
    name: Load
    nameWithType: IRdfReader.Load
    fullName: VDS.RDF.IRdfReader.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.IRdfReader
  isExternal: true
  name: Load(IGraph, String)
  nameWithType: IRdfReader.Load(IGraph, String)
  fullName: VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.String)
    name: Load
    nameWithType: IRdfReader.Load
    fullName: VDS.RDF.IRdfReader.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IGraph,System.String)
    name: Load
    nameWithType: IRdfReader.Load
    fullName: VDS.RDF.IRdfReader.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.IO.StreamReader)
  commentId: M:VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.IO.StreamReader)
  parent: VDS.RDF.IRdfReader
  isExternal: true
  name: Load(IRdfHandler, StreamReader)
  nameWithType: IRdfReader.Load(IRdfHandler, StreamReader)
  fullName: VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler, System.IO.StreamReader)
  spec.csharp:
  - uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.IO.StreamReader)
    name: Load
    nameWithType: IRdfReader.Load
    fullName: VDS.RDF.IRdfReader.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.StreamReader
    name: StreamReader
    nameWithType: StreamReader
    fullName: System.IO.StreamReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.IO.StreamReader)
    name: Load
    nameWithType: IRdfReader.Load
    fullName: VDS.RDF.IRdfReader.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.StreamReader
    name: StreamReader
    nameWithType: StreamReader
    fullName: System.IO.StreamReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IRdfHandler
  commentId: T:VDS.RDF.IRdfHandler
  parent: VDS.RDF
  name: IRdfHandler
  nameWithType: IRdfHandler
  fullName: VDS.RDF.IRdfHandler
- uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.IO.TextReader)
  commentId: M:VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.IO.TextReader)
  parent: VDS.RDF.IRdfReader
  isExternal: true
  name: Load(IRdfHandler, TextReader)
  nameWithType: IRdfReader.Load(IRdfHandler, TextReader)
  fullName: VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler, System.IO.TextReader)
  spec.csharp:
  - uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.IO.TextReader)
    name: Load
    nameWithType: IRdfReader.Load
    fullName: VDS.RDF.IRdfReader.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.IO.TextReader)
    name: Load
    nameWithType: IRdfReader.Load
    fullName: VDS.RDF.IRdfReader.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.String)
  commentId: M:VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.String)
  parent: VDS.RDF.IRdfReader
  isExternal: true
  name: Load(IRdfHandler, String)
  nameWithType: IRdfReader.Load(IRdfHandler, String)
  fullName: VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler, System.String)
  spec.csharp:
  - uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.String)
    name: Load
    nameWithType: IRdfReader.Load
    fullName: VDS.RDF.IRdfReader.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IRdfReader.Load(VDS.RDF.IRdfHandler,System.String)
    name: Load
    nameWithType: IRdfReader.Load
    fullName: VDS.RDF.IRdfReader.Load
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.RdfAParserBase`4.LoadAndParse*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.LoadAndParse
  name: LoadAndParse
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.LoadAndParse
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.LoadAndParse
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).LoadAndParse
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).LoadAndParse
- uid: '{THtmlDocument}'
  commentId: '!:THtmlDocument'
  definition: THtmlDocument
  name: THtmlDocument
  nameWithType: THtmlDocument
  fullName: THtmlDocument
- uid: THtmlDocument
  name: THtmlDocument
  nameWithType: THtmlDocument
  fullName: THtmlDocument
- uid: VDS.RDF.Parsing.RdfAParserBase`4.HasAttribute*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.HasAttribute
  name: HasAttribute
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.HasAttribute
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.HasAttribute
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).HasAttribute
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).HasAttribute
- uid: '{TElement}'
  commentId: '!:TElement'
  definition: TElement
  name: TElement
  nameWithType: TElement
  fullName: TElement
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TElement
  name: TElement
  nameWithType: TElement
  fullName: TElement
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetAttribute*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.GetAttribute
  name: GetAttribute
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttribute
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttribute
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttribute
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttribute
- uid: VDS.RDF.Parsing.RdfAParserBase`4.SetAttribute*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.SetAttribute
  name: SetAttribute
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.SetAttribute
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.SetAttribute
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).SetAttribute
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).SetAttribute
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetBaseElement*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.GetBaseElement
  name: GetBaseElement
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetBaseElement
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetBaseElement
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetBaseElement
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetBaseElement
- uid: VDS.RDF.Parsing.RdfAParserBase`4.IsXmlBaseIsPermissible*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.IsXmlBaseIsPermissible
  name: IsXmlBaseIsPermissible
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.IsXmlBaseIsPermissible
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.IsXmlBaseIsPermissible
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).IsXmlBaseIsPermissible
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).IsXmlBaseIsPermissible
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetHtmlElement*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.GetHtmlElement
  name: GetHtmlElement
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetHtmlElement
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetHtmlElement
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetHtmlElement
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetHtmlElement
- uid: VDS.RDF.Parsing.RdfAParserBase`4.ProcessDocument*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.ProcessDocument
  name: ProcessDocument
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.ProcessDocument
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.ProcessDocument
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).ProcessDocument
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).ProcessDocument
- uid: VDS.RDF.Parsing.Contexts.RdfAParserContext{{THtmlDocument}}
  commentId: T:VDS.RDF.Parsing.Contexts.RdfAParserContext{`0}
  parent: VDS.RDF.Parsing.Contexts
  definition: VDS.RDF.Parsing.Contexts.RdfAParserContext`1
  name: RdfAParserContext<THtmlDocument>
  nameWithType: RdfAParserContext<THtmlDocument>
  fullName: VDS.RDF.Parsing.Contexts.RdfAParserContext<THtmlDocument>
  nameWithType.vb: RdfAParserContext(Of THtmlDocument)
  fullName.vb: VDS.RDF.Parsing.Contexts.RdfAParserContext(Of THtmlDocument)
  name.vb: RdfAParserContext(Of THtmlDocument)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Contexts.RdfAParserContext`1
    name: RdfAParserContext
    nameWithType: RdfAParserContext
    fullName: VDS.RDF.Parsing.Contexts.RdfAParserContext
  - name: <
    nameWithType: <
    fullName: <
  - name: THtmlDocument
    nameWithType: THtmlDocument
    fullName: THtmlDocument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Contexts.RdfAParserContext`1
    name: RdfAParserContext
    nameWithType: RdfAParserContext
    fullName: VDS.RDF.Parsing.Contexts.RdfAParserContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: THtmlDocument
    nameWithType: THtmlDocument
    fullName: THtmlDocument
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Contexts.RdfAEvaluationContext
  commentId: T:VDS.RDF.Parsing.Contexts.RdfAEvaluationContext
  parent: VDS.RDF.Parsing.Contexts
  name: RdfAEvaluationContext
  nameWithType: RdfAEvaluationContext
  fullName: VDS.RDF.Parsing.Contexts.RdfAEvaluationContext
- uid: VDS.RDF.Parsing.Contexts.RdfAParserContext`1
  commentId: T:VDS.RDF.Parsing.Contexts.RdfAParserContext`1
  name: RdfAParserContext<THtmlDocument>
  nameWithType: RdfAParserContext<THtmlDocument>
  fullName: VDS.RDF.Parsing.Contexts.RdfAParserContext<THtmlDocument>
  nameWithType.vb: RdfAParserContext(Of THtmlDocument)
  fullName.vb: VDS.RDF.Parsing.Contexts.RdfAParserContext(Of THtmlDocument)
  name.vb: RdfAParserContext(Of THtmlDocument)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Contexts.RdfAParserContext`1
    name: RdfAParserContext
    nameWithType: RdfAParserContext
    fullName: VDS.RDF.Parsing.Contexts.RdfAParserContext
  - name: <
    nameWithType: <
    fullName: <
  - name: THtmlDocument
    nameWithType: THtmlDocument
    fullName: THtmlDocument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Contexts.RdfAParserContext`1
    name: RdfAParserContext
    nameWithType: RdfAParserContext
    fullName: VDS.RDF.Parsing.Contexts.RdfAParserContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: THtmlDocument
    nameWithType: THtmlDocument
    fullName: THtmlDocument
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Contexts
  commentId: N:VDS.RDF.Parsing.Contexts
  name: VDS.RDF.Parsing.Contexts
  nameWithType: VDS.RDF.Parsing.Contexts
  fullName: VDS.RDF.Parsing.Contexts
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetAttributes*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.GetAttributes
  name: GetAttributes
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttributes
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttributes
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttributes
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttributes
- uid: System.Collections.Generic.IEnumerable{{TAttribute}}
  commentId: T:System.Collections.Generic.IEnumerable{`3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TAttribute>
  nameWithType: IEnumerable<TAttribute>
  fullName: System.Collections.Generic.IEnumerable<TAttribute>
  nameWithType.vb: IEnumerable(Of TAttribute)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TAttribute)
  name.vb: IEnumerable(Of TAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TAttribute
    nameWithType: TAttribute
    fullName: TAttribute
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TAttribute
    nameWithType: TAttribute
    fullName: TAttribute
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetAttributeName*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.GetAttributeName
  name: GetAttributeName
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttributeName
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttributeName
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttributeName
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttributeName
- uid: '{TAttribute}'
  commentId: '!:TAttribute'
  definition: TAttribute
  name: TAttribute
  nameWithType: TAttribute
  fullName: TAttribute
- uid: TAttribute
  name: TAttribute
  nameWithType: TAttribute
  fullName: TAttribute
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetAttributeValue*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.GetAttributeValue
  name: GetAttributeValue
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttributeValue
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetAttributeValue
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttributeValue
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetAttributeValue
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetElementName*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.GetElementName
  name: GetElementName
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetElementName
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetElementName
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetElementName
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetElementName
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetChildren*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.GetChildren
  name: GetChildren
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetChildren
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetChildren
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetChildren
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetChildren
- uid: System.Collections.Generic.IEnumerable{{TNode}}
  commentId: T:System.Collections.Generic.IEnumerable{`2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TNode>
  nameWithType: IEnumerable<TNode>
  fullName: System.Collections.Generic.IEnumerable<TNode>
  nameWithType.vb: IEnumerable(Of TNode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TNode)
  name.vb: IEnumerable(Of TNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetInnerText*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.GetInnerText
  name: GetInnerText
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetInnerText
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetInnerText
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetInnerText
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetInnerText
- uid: '{TNode}'
  commentId: '!:TNode'
  definition: TNode
  name: TNode
  nameWithType: TNode
  fullName: TNode
- uid: TNode
  name: TNode
  nameWithType: TNode
  fullName: TNode
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GetInnerHtml*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.GetInnerHtml
  name: GetInnerHtml
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetInnerHtml
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GetInnerHtml
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetInnerHtml
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GetInnerHtml
- uid: VDS.RDF.Parsing.RdfAParserBase`4.HasChildren*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.HasChildren
  name: HasChildren
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.HasChildren
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.HasChildren
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).HasChildren
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).HasChildren
- uid: VDS.RDF.Parsing.RdfAParserBase`4.IsTextNode*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.IsTextNode
  name: IsTextNode
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.IsTextNode
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.IsTextNode
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).IsTextNode
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).IsTextNode
- uid: VDS.RDF.Parsing.RdfAParserBase`4.ProcessElement*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.ProcessElement
  name: ProcessElement
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.ProcessElement
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.ProcessElement
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).ProcessElement
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).ProcessElement
- uid: VDS.RDF.Parsing.RdfAParserBase`4.GrabText*
  commentId: Overload:VDS.RDF.Parsing.RdfAParserBase`4.GrabText
  name: GrabText
  nameWithType: RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GrabText
  fullName: VDS.RDF.Parsing.RdfAParserBase<THtmlDocument, TElement, TNode, TAttribute>.GrabText
  nameWithType.vb: RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GrabText
  fullName.vb: VDS.RDF.Parsing.RdfAParserBase(Of THtmlDocument, TElement, TNode, TAttribute).GrabText
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
- uid: VDS.RDF.IRdfReader.Warning
  commentId: E:VDS.RDF.IRdfReader.Warning
  parent: VDS.RDF.IRdfReader
  name: Warning
  nameWithType: IRdfReader.Warning
  fullName: VDS.RDF.IRdfReader.Warning
- uid: VDS.RDF.RdfReaderWarning
  commentId: T:VDS.RDF.RdfReaderWarning
  parent: VDS.RDF
  name: RdfReaderWarning
  nameWithType: RdfReaderWarning
  fullName: VDS.RDF.RdfReaderWarning
