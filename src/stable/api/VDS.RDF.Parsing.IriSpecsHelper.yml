### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.IriSpecsHelper
  commentId: T:VDS.RDF.Parsing.IriSpecsHelper
  id: IriSpecsHelper
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.IriSpecsHelper.IsAbsoluteIri(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsDecOctet(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsGenDelims(System.Char)
  - VDS.RDF.Parsing.IriSpecsHelper.IsH16(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsHexDigit(System.Char)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIAuthority(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIFragment(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIHierPart(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIHost(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIPath(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbEmpty(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbsolute(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIPathEmpty(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIPathNoScheme(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIPathRootless(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIpChar(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIPLiteral(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIPv4Address(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIPv6Address(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIPvFuture(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIQuery(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIRegName(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIrelativePart(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIrelativeRef(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIri(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIriReference(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsISegment(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNz(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNzNc(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIUnreserved(System.Char)
  - VDS.RDF.Parsing.IriSpecsHelper.IsIUserInfo(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsLs32(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsPctEncoded(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsPort(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsReserved(System.Char)
  - VDS.RDF.Parsing.IriSpecsHelper.IsScheme(System.String)
  - VDS.RDF.Parsing.IriSpecsHelper.IsSubDelims(System.Char)
  - VDS.RDF.Parsing.IriSpecsHelper.IsUcsChar(System.Char)
  - VDS.RDF.Parsing.IriSpecsHelper.IsUnreserved(System.Char)
  langs:
  - csharp
  - vb
  name: IriSpecsHelper
  nameWithType: IriSpecsHelper
  fullName: VDS.RDF.Parsing.IriSpecsHelper
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IriSpecsHelper
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nStatic Helper class which can be used to validate IRIs according to. <a href=\"http://www.ietf.org/rfc/rfc3987.txt\">RFC 3987</a>\n"
  remarks: "\nSome valid IRIs may be rejected by these validating functions as the IRI specification allows character codes which are outside the range of the .Net char type.\n"
  example: []
  syntax:
    content: public static class IriSpecsHelper
    content.vb: Public Module IriSpecsHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIri(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIri(System.String)
  id: IsIri(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIri(String)
  nameWithType: IriSpecsHelper.IsIri(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIri(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 44
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the IRI production.\n"
  example: []
  syntax:
    content: public static bool IsIri(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIri(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIHierPart(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIHierPart(System.String)
  id: IsIHierPart(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIHierPart(String)
  nameWithType: IriSpecsHelper.IsIHierPart(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIHierPart(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIHierPart
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 146
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the ihier-part production.\n"
  example: []
  syntax:
    content: public static bool IsIHierPart(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIHierPart(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIHierPart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIriReference(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIriReference(System.String)
  id: IsIriReference(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIriReference(String)
  nameWithType: IriSpecsHelper.IsIriReference(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIriReference(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIriReference
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 173
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the IRI-reference production.\n"
  example: []
  syntax:
    content: public static bool IsIriReference(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIriReference(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIriReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsAbsoluteIri(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsAbsoluteIri(System.String)
  id: IsAbsoluteIri(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsAbsoluteIri(String)
  nameWithType: IriSpecsHelper.IsAbsoluteIri(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsAbsoluteIri(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAbsoluteIri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 183
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the absolute-IRI production.\n"
  example: []
  syntax:
    content: public static bool IsAbsoluteIri(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsAbsoluteIri(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsAbsoluteIri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIrelativeRef(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIrelativeRef(System.String)
  id: IsIrelativeRef(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIrelativeRef(String)
  nameWithType: IriSpecsHelper.IsIrelativeRef(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIrelativeRef(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIrelativeRef
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 205
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the irelative-ref production.\n"
  example: []
  syntax:
    content: public static bool IsIrelativeRef(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIrelativeRef(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIrelativeRef*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIrelativePart(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIrelativePart(System.String)
  id: IsIrelativePart(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIrelativePart(String)
  nameWithType: IriSpecsHelper.IsIrelativePart(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIrelativePart(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIrelativePart
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 239
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the irelative-part production.\n"
  example: []
  syntax:
    content: public static bool IsIrelativePart(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIrelativePart(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIrelativePart*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIAuthority(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIAuthority(System.String)
  id: IsIAuthority(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIAuthority(String)
  nameWithType: IriSpecsHelper.IsIAuthority(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIAuthority(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIAuthority
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 266
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the iauthority production.\n"
  example: []
  syntax:
    content: public static bool IsIAuthority(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIAuthority(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIAuthority*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIUserInfo(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIUserInfo(System.String)
  id: IsIUserInfo(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIUserInfo(String)
  nameWithType: IriSpecsHelper.IsIUserInfo(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIUserInfo(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIUserInfo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 303
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the userinfo production.\n"
  example: []
  syntax:
    content: public static bool IsIUserInfo(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIUserInfo(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIUserInfo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIHost(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIHost(System.String)
  id: IsIHost(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIHost(String)
  nameWithType: IriSpecsHelper.IsIHost(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIHost(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIHost
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 332
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the ihost production.\n"
  example: []
  syntax:
    content: public static bool IsIHost(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIHost(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIHost*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIRegName(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIRegName(System.String)
  id: IsIRegName(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIRegName(String)
  nameWithType: IriSpecsHelper.IsIRegName(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIRegName(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIRegName
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 342
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the ireg-name production.\n"
  example: []
  syntax:
    content: public static bool IsIRegName(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIRegName(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIRegName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPath(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIPath(System.String)
  id: IsIPath(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIPath(String)
  nameWithType: IriSpecsHelper.IsIPath(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPath(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIPath
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 367
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the ipath production.\n"
  example: []
  syntax:
    content: public static bool IsIPath(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIPath(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbEmpty(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbEmpty(System.String)
  id: IsIPathAbEmpty(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIPathAbEmpty(String)
  nameWithType: IriSpecsHelper.IsIPathAbEmpty(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbEmpty(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIPathAbEmpty
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 381
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the ipath-abempty production.\n"
  example: []
  syntax:
    content: public static bool IsIPathAbEmpty(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIPathAbEmpty(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbEmpty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbsolute(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbsolute(System.String)
  id: IsIPathAbsolute(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIPathAbsolute(String)
  nameWithType: IriSpecsHelper.IsIPathAbsolute(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbsolute(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIPathAbsolute
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 393
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the ipath-absolute production.\n"
  example: []
  syntax:
    content: public static bool IsIPathAbsolute(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIPathAbsolute(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbsolute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPathNoScheme(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIPathNoScheme(System.String)
  id: IsIPathNoScheme(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIPathNoScheme(String)
  nameWithType: IriSpecsHelper.IsIPathNoScheme(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPathNoScheme(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIPathNoScheme
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 425
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the ipath-noscheme production.\n"
  example: []
  syntax:
    content: public static bool IsIPathNoScheme(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIPathNoScheme(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIPathNoScheme*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPathRootless(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIPathRootless(System.String)
  id: IsIPathRootless(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIPathRootless(String)
  nameWithType: IriSpecsHelper.IsIPathRootless(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPathRootless(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIPathRootless
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 443
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the ipath-rootless production.\n"
  example: []
  syntax:
    content: public static bool IsIPathRootless(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIPathRootless(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIPathRootless*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPathEmpty(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIPathEmpty(System.String)
  id: IsIPathEmpty(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIPathEmpty(String)
  nameWithType: IriSpecsHelper.IsIPathEmpty(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPathEmpty(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIPathEmpty
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 461
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the ipath-empty production.\n"
  example: []
  syntax:
    content: public static bool IsIPathEmpty(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIPathEmpty(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIPathEmpty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsISegment(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsISegment(System.String)
  id: IsISegment(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsISegment(String)
  nameWithType: IriSpecsHelper.IsISegment(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsISegment(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsISegment
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 471
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the isegment production.\n"
  example: []
  syntax:
    content: public static bool IsISegment(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsISegment(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsISegment*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNz(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNz(System.String)
  id: IsISegmentNz(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsISegmentNz(String)
  nameWithType: IriSpecsHelper.IsISegmentNz(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNz(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsISegmentNz
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 482
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the isegment-nz production.\n"
  example: []
  syntax:
    content: public static bool IsISegmentNz(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsISegmentNz(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNz*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNzNc(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNzNc(System.String)
  id: IsISegmentNzNc(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsISegmentNzNc(String)
  nameWithType: IriSpecsHelper.IsISegmentNzNc(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNzNc(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsISegmentNzNc
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 509
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the isegment-nz-nc production.\n"
  example: []
  syntax:
    content: public static bool IsISegmentNzNc(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsISegmentNzNc(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNzNc*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIpChar(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIpChar(System.String)
  id: IsIpChar(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIpChar(String)
  nameWithType: IriSpecsHelper.IsIpChar(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIpChar(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIpChar
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 536
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the ipchar production.\n"
  example: []
  syntax:
    content: public static bool IsIpChar(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIpChar(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIpChar*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIQuery(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIQuery(System.String)
  id: IsIQuery(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIQuery(String)
  nameWithType: IriSpecsHelper.IsIQuery(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIQuery(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIQuery
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 569
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the iquery production.\n"
  example: []
  syntax:
    content: public static bool IsIQuery(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIQuery(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIQuery*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIFragment(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIFragment(System.String)
  id: IsIFragment(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIFragment(String)
  nameWithType: IriSpecsHelper.IsIFragment(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIFragment(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIFragment
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 598
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the ifragment production.\n"
  example: []
  syntax:
    content: public static bool IsIFragment(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIFragment(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIFragment*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIUnreserved(System.Char)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIUnreserved(System.Char)
  id: IsIUnreserved(System.Char)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIUnreserved(Char)
  nameWithType: IriSpecsHelper.IsIUnreserved(Char)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIUnreserved(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIUnreserved
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 627
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a character matches the iunreserved production.\n"
  example: []
  syntax:
    content: public static bool IsIUnreserved(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIUnreserved(c As Char) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIUnreserved*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsUcsChar(System.Char)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsUcsChar(System.Char)
  id: IsUcsChar(System.Char)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsUcsChar(Char)
  nameWithType: IriSpecsHelper.IsUcsChar(Char)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsUcsChar(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsUcsChar
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 655
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a character matches the ucschar production.\n"
  remarks: "\nNot all strings that will match the official ucschar production will be matched by this function as the ucschar production permits character codes beyond the range of the .Net char type.\n"
  example: []
  syntax:
    content: public static bool IsUcsChar(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsUcsChar(c As Char) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsUcsChar*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsScheme(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsScheme(System.String)
  id: IsScheme(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsScheme(String)
  nameWithType: IriSpecsHelper.IsScheme(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsScheme(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsScheme
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 665
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the scheme production.\n"
  example: []
  syntax:
    content: public static bool IsScheme(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsScheme(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsScheme*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsPort(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsPort(System.String)
  id: IsPort(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPort(String)
  nameWithType: IriSpecsHelper.IsPort(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsPort(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPort
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 689
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the port production.\n"
  example: []
  syntax:
    content: public static bool IsPort(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsPort(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsPort*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPLiteral(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIPLiteral(System.String)
  id: IsIPLiteral(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIPLiteral(String)
  nameWithType: IriSpecsHelper.IsIPLiteral(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPLiteral(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIPLiteral
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 699
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the IP-literal production.\n"
  example: []
  syntax:
    content: public static bool IsIPLiteral(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIPLiteral(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIPLiteral*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPvFuture(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIPvFuture(System.String)
  id: IsIPvFuture(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIPvFuture(String)
  nameWithType: IriSpecsHelper.IsIPvFuture(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPvFuture(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIPvFuture
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 717
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the IPvFuture production.\n"
  example: []
  syntax:
    content: public static bool IsIPvFuture(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIPvFuture(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIPvFuture*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPv6Address(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIPv6Address(System.String)
  id: IsIPv6Address(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIPv6Address(String)
  nameWithType: IriSpecsHelper.IsIPv6Address(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPv6Address(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIPv6Address
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 728
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the IPv6address production.\n"
  example: []
  syntax:
    content: public static bool IsIPv6Address(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIPv6Address(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIPv6Address*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsH16(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsH16(System.String)
  id: IsH16(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsH16(String)
  nameWithType: IriSpecsHelper.IsH16(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsH16(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsH16
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 769
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the h16 production.\n"
  example: []
  syntax:
    content: public static bool IsH16(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsH16(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsH16*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsLs32(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsLs32(System.String)
  id: IsLs32(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsLs32(String)
  nameWithType: IriSpecsHelper.IsLs32(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsLs32(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsLs32
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 780
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the ls32 production.\n"
  example: []
  syntax:
    content: public static bool IsLs32(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsLs32(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsLs32*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPv4Address(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsIPv4Address(System.String)
  id: IsIPv4Address(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIPv4Address(String)
  nameWithType: IriSpecsHelper.IsIPv4Address(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPv4Address(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIPv4Address
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 799
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the IPv4address production.\n"
  example: []
  syntax:
    content: public static bool IsIPv4Address(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsIPv4Address(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsIPv4Address*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsDecOctet(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsDecOctet(System.String)
  id: IsDecOctet(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsDecOctet(String)
  nameWithType: IriSpecsHelper.IsDecOctet(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsDecOctet(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsDecOctet
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 818
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the dec-octet production.\n"
  example: []
  syntax:
    content: public static bool IsDecOctet(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsDecOctet(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsDecOctet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsPctEncoded(System.String)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsPctEncoded(System.String)
  id: IsPctEncoded(System.String)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPctEncoded(String)
  nameWithType: IriSpecsHelper.IsPctEncoded(String)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsPctEncoded(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPctEncoded
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 840
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a string matches the pct-encoded production.\n"
  example: []
  syntax:
    content: public static bool IsPctEncoded(string value)
    parameters:
    - id: value
      type: System.String
      description: String.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsPctEncoded(value As String) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsPctEncoded*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsUnreserved(System.Char)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsUnreserved(System.Char)
  id: IsUnreserved(System.Char)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsUnreserved(Char)
  nameWithType: IriSpecsHelper.IsUnreserved(Char)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsUnreserved(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsUnreserved
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 864
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a character matches the unreserved production.\n"
  example: []
  syntax:
    content: public static bool IsUnreserved(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsUnreserved(c As Char) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsUnreserved*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsReserved(System.Char)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsReserved(System.Char)
  id: IsReserved(System.Char)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsReserved(Char)
  nameWithType: IriSpecsHelper.IsReserved(Char)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsReserved(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsReserved
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 890
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a character matches the reserved production.\n"
  example: []
  syntax:
    content: public static bool IsReserved(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsReserved(c As Char) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsReserved*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsGenDelims(System.Char)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsGenDelims(System.Char)
  id: IsGenDelims(System.Char)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsGenDelims(Char)
  nameWithType: IriSpecsHelper.IsGenDelims(Char)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsGenDelims(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsGenDelims
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 900
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a character matches the gen-delims production.\n"
  example: []
  syntax:
    content: public static bool IsGenDelims(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsGenDelims(c As Char) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsGenDelims*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsSubDelims(System.Char)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsSubDelims(System.Char)
  id: IsSubDelims(System.Char)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsSubDelims(Char)
  nameWithType: IriSpecsHelper.IsSubDelims(Char)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsSubDelims(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSubDelims
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 922
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a character matches the sub-delims production.\n"
  example: []
  syntax:
    content: public static bool IsSubDelims(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsSubDelims(c As Char) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsSubDelims*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsHexDigit(System.Char)
  commentId: M:VDS.RDF.Parsing.IriSpecsHelper.IsHexDigit(System.Char)
  id: IsHexDigit(System.Char)
  parent: VDS.RDF.Parsing.IriSpecsHelper
  langs:
  - csharp
  - vb
  name: IsHexDigit(Char)
  nameWithType: IriSpecsHelper.IsHexDigit(Char)
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsHexDigit(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsHexDigit
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/IriSpecsHelper.cs
    startLine: 948
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether a character matches the HEXDIG terminal.\n"
  example: []
  syntax:
    content: public static bool IsHexDigit(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsHexDigit(c As Char) As Boolean
  overload: VDS.RDF.Parsing.IriSpecsHelper.IsHexDigit*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIri*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIri
  name: IsIri
  nameWithType: IriSpecsHelper.IsIri
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIHierPart*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIHierPart
  name: IsIHierPart
  nameWithType: IriSpecsHelper.IsIHierPart
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIHierPart
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIriReference*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIriReference
  name: IsIriReference
  nameWithType: IriSpecsHelper.IsIriReference
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIriReference
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsAbsoluteIri*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsAbsoluteIri
  name: IsAbsoluteIri
  nameWithType: IriSpecsHelper.IsAbsoluteIri
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsAbsoluteIri
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIrelativeRef*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIrelativeRef
  name: IsIrelativeRef
  nameWithType: IriSpecsHelper.IsIrelativeRef
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIrelativeRef
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIrelativePart*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIrelativePart
  name: IsIrelativePart
  nameWithType: IriSpecsHelper.IsIrelativePart
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIrelativePart
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIAuthority*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIAuthority
  name: IsIAuthority
  nameWithType: IriSpecsHelper.IsIAuthority
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIAuthority
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIUserInfo*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIUserInfo
  name: IsIUserInfo
  nameWithType: IriSpecsHelper.IsIUserInfo
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIUserInfo
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIHost*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIHost
  name: IsIHost
  nameWithType: IriSpecsHelper.IsIHost
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIHost
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIRegName*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIRegName
  name: IsIRegName
  nameWithType: IriSpecsHelper.IsIRegName
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIRegName
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPath*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIPath
  name: IsIPath
  nameWithType: IriSpecsHelper.IsIPath
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPath
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbEmpty*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbEmpty
  name: IsIPathAbEmpty
  nameWithType: IriSpecsHelper.IsIPathAbEmpty
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbEmpty
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbsolute*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbsolute
  name: IsIPathAbsolute
  nameWithType: IriSpecsHelper.IsIPathAbsolute
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPathAbsolute
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPathNoScheme*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIPathNoScheme
  name: IsIPathNoScheme
  nameWithType: IriSpecsHelper.IsIPathNoScheme
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPathNoScheme
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPathRootless*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIPathRootless
  name: IsIPathRootless
  nameWithType: IriSpecsHelper.IsIPathRootless
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPathRootless
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPathEmpty*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIPathEmpty
  name: IsIPathEmpty
  nameWithType: IriSpecsHelper.IsIPathEmpty
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPathEmpty
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsISegment*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsISegment
  name: IsISegment
  nameWithType: IriSpecsHelper.IsISegment
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsISegment
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNz*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNz
  name: IsISegmentNz
  nameWithType: IriSpecsHelper.IsISegmentNz
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNz
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNzNc*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNzNc
  name: IsISegmentNzNc
  nameWithType: IriSpecsHelper.IsISegmentNzNc
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsISegmentNzNc
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIpChar*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIpChar
  name: IsIpChar
  nameWithType: IriSpecsHelper.IsIpChar
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIpChar
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIQuery*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIQuery
  name: IsIQuery
  nameWithType: IriSpecsHelper.IsIQuery
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIQuery
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIFragment*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIFragment
  name: IsIFragment
  nameWithType: IriSpecsHelper.IsIFragment
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIFragment
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIUnreserved*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIUnreserved
  name: IsIUnreserved
  nameWithType: IriSpecsHelper.IsIUnreserved
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIUnreserved
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsUcsChar*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsUcsChar
  name: IsUcsChar
  nameWithType: IriSpecsHelper.IsUcsChar
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsUcsChar
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsScheme*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsScheme
  name: IsScheme
  nameWithType: IriSpecsHelper.IsScheme
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsScheme
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsPort*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsPort
  name: IsPort
  nameWithType: IriSpecsHelper.IsPort
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsPort
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPLiteral*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIPLiteral
  name: IsIPLiteral
  nameWithType: IriSpecsHelper.IsIPLiteral
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPLiteral
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPvFuture*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIPvFuture
  name: IsIPvFuture
  nameWithType: IriSpecsHelper.IsIPvFuture
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPvFuture
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPv6Address*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIPv6Address
  name: IsIPv6Address
  nameWithType: IriSpecsHelper.IsIPv6Address
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPv6Address
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsH16*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsH16
  name: IsH16
  nameWithType: IriSpecsHelper.IsH16
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsH16
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsLs32*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsLs32
  name: IsLs32
  nameWithType: IriSpecsHelper.IsLs32
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsLs32
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsIPv4Address*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsIPv4Address
  name: IsIPv4Address
  nameWithType: IriSpecsHelper.IsIPv4Address
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsIPv4Address
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsDecOctet*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsDecOctet
  name: IsDecOctet
  nameWithType: IriSpecsHelper.IsDecOctet
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsDecOctet
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsPctEncoded*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsPctEncoded
  name: IsPctEncoded
  nameWithType: IriSpecsHelper.IsPctEncoded
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsPctEncoded
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsUnreserved*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsUnreserved
  name: IsUnreserved
  nameWithType: IriSpecsHelper.IsUnreserved
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsUnreserved
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsReserved*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsReserved
  name: IsReserved
  nameWithType: IriSpecsHelper.IsReserved
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsReserved
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsGenDelims*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsGenDelims
  name: IsGenDelims
  nameWithType: IriSpecsHelper.IsGenDelims
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsGenDelims
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsSubDelims*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsSubDelims
  name: IsSubDelims
  nameWithType: IriSpecsHelper.IsSubDelims
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsSubDelims
- uid: VDS.RDF.Parsing.IriSpecsHelper.IsHexDigit*
  commentId: Overload:VDS.RDF.Parsing.IriSpecsHelper.IsHexDigit
  name: IsHexDigit
  nameWithType: IriSpecsHelper.IsHexDigit
  fullName: VDS.RDF.Parsing.IriSpecsHelper.IsHexDigit
