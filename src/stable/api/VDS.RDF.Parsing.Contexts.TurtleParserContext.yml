### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.TurtleParserContext
  id: TurtleParserContext
  parent: VDS.RDF.Parsing.Contexts
  children:
  - VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax)
  - VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,System.Boolean,System.Boolean)
  - VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode)
  - VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode,System.Boolean,System.Boolean)
  - VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax)
  - VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,System.Boolean,System.Boolean)
  - VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode)
  - VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode,System.Boolean,System.Boolean)
  - VDS.RDF.Parsing.Contexts.TurtleParserContext.QNameUnescapeFunction
  - VDS.RDF.Parsing.Contexts.TurtleParserContext.Syntax
  langs:
  - csharp
  - vb
  name: TurtleParserContext
  nameWithType: TurtleParserContext
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TurtleParserContext
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nParser Context for Turtle parsing.\n"
  example: []
  syntax:
    content: 'public class TurtleParserContext : TokenisingParserContext, IParserContext, ITokenisingParserContext'
    content.vb: >-
      Public Class TurtleParserContext
          Inherits TokenisingParserContext
          Implements IParserContext, ITokenisingParserContext
  inheritance:
  - System.Object
  - VDS.RDF.Parsing.Contexts.BaseParserContext
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext
  implements:
  - VDS.RDF.Parsing.Contexts.IParserContext
  - VDS.RDF.Parsing.Contexts.ITokenisingParserContext
  inheritedMembers:
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext._queue
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext._traceTokeniser
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext._localTokens
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext.Tokens
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext.LocalTokens
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext.TraceTokeniser
  - VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  - VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  - VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  - VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  - VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  - VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.Contexts.TurtleParserContext.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax)
  commentId: M:VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax)
  id: '#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax)'
  parent: VDS.RDF.Parsing.Contexts.TurtleParserContext
  langs:
  - csharp
  - vb
  name: TurtleParserContext(IGraph, ITokeniser, TurtleSyntax)
  nameWithType: TurtleParserContext.TurtleParserContext(IGraph, ITokeniser, TurtleSyntax)
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.TurtleParserContext(VDS.RDF.IGraph, VDS.RDF.Parsing.Tokens.ITokeniser, VDS.RDF.Parsing.TurtleSyntax)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
    startLine: 45
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Turtle Parser Context with default settings.\n"
  example: []
  syntax:
    content: public TurtleParserContext(IGraph g, ITokeniser tokeniser, TurtleSyntax syntax)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to parse into.
    - id: tokeniser
      type: VDS.RDF.Parsing.Tokens.ITokeniser
      description: Tokeniser to use.
    - id: syntax
      type: VDS.RDF.Parsing.TurtleSyntax
      description: Turtle Syntax.
    content.vb: Public Sub New(g As IGraph, tokeniser As ITokeniser, syntax As TurtleSyntax)
  overload: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode)
  commentId: M:VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode)
  id: '#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode)'
  parent: VDS.RDF.Parsing.Contexts.TurtleParserContext
  langs:
  - csharp
  - vb
  name: TurtleParserContext(IGraph, ITokeniser, TurtleSyntax, TokenQueueMode)
  nameWithType: TurtleParserContext.TurtleParserContext(IGraph, ITokeniser, TurtleSyntax, TokenQueueMode)
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.TurtleParserContext(VDS.RDF.IGraph, VDS.RDF.Parsing.Tokens.ITokeniser, VDS.RDF.Parsing.TurtleSyntax, VDS.RDF.Parsing.Tokens.TokenQueueMode)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Turtle Parser Context with custom settings.\n"
  example: []
  syntax:
    content: public TurtleParserContext(IGraph g, ITokeniser tokeniser, TurtleSyntax syntax, TokenQueueMode queueMode)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to parse into.
    - id: tokeniser
      type: VDS.RDF.Parsing.Tokens.ITokeniser
      description: Tokeniser to use.
    - id: syntax
      type: VDS.RDF.Parsing.TurtleSyntax
      description: Turtle Syntax.
    - id: queueMode
      type: VDS.RDF.Parsing.Tokens.TokenQueueMode
      description: Tokeniser Queue Mode.
    content.vb: Public Sub New(g As IGraph, tokeniser As ITokeniser, syntax As TurtleSyntax, queueMode As TokenQueueMode)
  overload: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,System.Boolean,System.Boolean)
  commentId: M:VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,System.Boolean,System.Boolean)
  id: '#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,System.Boolean,System.Boolean)'
  parent: VDS.RDF.Parsing.Contexts.TurtleParserContext
  langs:
  - csharp
  - vb
  name: TurtleParserContext(IGraph, ITokeniser, TurtleSyntax, Boolean, Boolean)
  nameWithType: TurtleParserContext.TurtleParserContext(IGraph, ITokeniser, TurtleSyntax, Boolean, Boolean)
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.TurtleParserContext(VDS.RDF.IGraph, VDS.RDF.Parsing.Tokens.ITokeniser, VDS.RDF.Parsing.TurtleSyntax, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Turtle Parser Context with custom settings.\n"
  example: []
  syntax:
    content: public TurtleParserContext(IGraph g, ITokeniser tokeniser, TurtleSyntax syntax, bool traceParsing, bool traceTokeniser)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to parse into.
    - id: tokeniser
      type: VDS.RDF.Parsing.Tokens.ITokeniser
      description: Tokeniser to use.
    - id: syntax
      type: VDS.RDF.Parsing.TurtleSyntax
      description: Turtle Syntax.
    - id: traceParsing
      type: System.Boolean
      description: Whether to trace parsing.
    - id: traceTokeniser
      type: System.Boolean
      description: Whether to trace tokenisation.
    content.vb: Public Sub New(g As IGraph, tokeniser As ITokeniser, syntax As TurtleSyntax, traceParsing As Boolean, traceTokeniser As Boolean)
  overload: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode,System.Boolean,System.Boolean)
  commentId: M:VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode,System.Boolean,System.Boolean)
  id: '#ctor(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode,System.Boolean,System.Boolean)'
  parent: VDS.RDF.Parsing.Contexts.TurtleParserContext
  langs:
  - csharp
  - vb
  name: TurtleParserContext(IGraph, ITokeniser, TurtleSyntax, TokenQueueMode, Boolean, Boolean)
  nameWithType: TurtleParserContext.TurtleParserContext(IGraph, ITokeniser, TurtleSyntax, TokenQueueMode, Boolean, Boolean)
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.TurtleParserContext(VDS.RDF.IGraph, VDS.RDF.Parsing.Tokens.ITokeniser, VDS.RDF.Parsing.TurtleSyntax, VDS.RDF.Parsing.Tokens.TokenQueueMode, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Turtle Parser Context with custom settings.\n"
  example: []
  syntax:
    content: public TurtleParserContext(IGraph g, ITokeniser tokeniser, TurtleSyntax syntax, TokenQueueMode queueMode, bool traceParsing, bool traceTokeniser)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to parse into.
    - id: tokeniser
      type: VDS.RDF.Parsing.Tokens.ITokeniser
      description: Tokeniser to use.
    - id: syntax
      type: VDS.RDF.Parsing.TurtleSyntax
      description: Turtle Syntax.
    - id: queueMode
      type: VDS.RDF.Parsing.Tokens.TokenQueueMode
      description: Tokeniser Queue Mode.
    - id: traceParsing
      type: System.Boolean
      description: Whether to trace parsing.
    - id: traceTokeniser
      type: System.Boolean
      description: Whether to trace tokenisation.
    content.vb: Public Sub New(g As IGraph, tokeniser As ITokeniser, syntax As TurtleSyntax, queueMode As TokenQueueMode, traceParsing As Boolean, traceTokeniser As Boolean)
  overload: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax)
  commentId: M:VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax)
  id: '#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax)'
  parent: VDS.RDF.Parsing.Contexts.TurtleParserContext
  langs:
  - csharp
  - vb
  name: TurtleParserContext(IRdfHandler, ITokeniser, TurtleSyntax)
  nameWithType: TurtleParserContext.TurtleParserContext(IRdfHandler, ITokeniser, TurtleSyntax)
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.TurtleParserContext(VDS.RDF.IRdfHandler, VDS.RDF.Parsing.Tokens.ITokeniser, VDS.RDF.Parsing.TurtleSyntax)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
    startLine: 90
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Turtle Parser Context with default settings.\n"
  example: []
  syntax:
    content: public TurtleParserContext(IRdfHandler handler, ITokeniser tokeniser, TurtleSyntax syntax)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: tokeniser
      type: VDS.RDF.Parsing.Tokens.ITokeniser
      description: Tokeniser to use.
    - id: syntax
      type: VDS.RDF.Parsing.TurtleSyntax
      description: Turtle Syntax.
    content.vb: Public Sub New(handler As IRdfHandler, tokeniser As ITokeniser, syntax As TurtleSyntax)
  overload: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode)
  commentId: M:VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode)
  id: '#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode)'
  parent: VDS.RDF.Parsing.Contexts.TurtleParserContext
  langs:
  - csharp
  - vb
  name: TurtleParserContext(IRdfHandler, ITokeniser, TurtleSyntax, TokenQueueMode)
  nameWithType: TurtleParserContext.TurtleParserContext(IRdfHandler, ITokeniser, TurtleSyntax, TokenQueueMode)
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.TurtleParserContext(VDS.RDF.IRdfHandler, VDS.RDF.Parsing.Tokens.ITokeniser, VDS.RDF.Parsing.TurtleSyntax, VDS.RDF.Parsing.Tokens.TokenQueueMode)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Turtle Parser Context with custom settings.\n"
  example: []
  syntax:
    content: public TurtleParserContext(IRdfHandler handler, ITokeniser tokeniser, TurtleSyntax syntax, TokenQueueMode queueMode)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: tokeniser
      type: VDS.RDF.Parsing.Tokens.ITokeniser
      description: Tokeniser to use.
    - id: syntax
      type: VDS.RDF.Parsing.TurtleSyntax
      description: Turtle Syntax.
    - id: queueMode
      type: VDS.RDF.Parsing.Tokens.TokenQueueMode
      description: Tokeniser Queue Mode.
    content.vb: Public Sub New(handler As IRdfHandler, tokeniser As ITokeniser, syntax As TurtleSyntax, queueMode As TokenQueueMode)
  overload: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,System.Boolean,System.Boolean)
  commentId: M:VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,System.Boolean,System.Boolean)
  id: '#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,System.Boolean,System.Boolean)'
  parent: VDS.RDF.Parsing.Contexts.TurtleParserContext
  langs:
  - csharp
  - vb
  name: TurtleParserContext(IRdfHandler, ITokeniser, TurtleSyntax, Boolean, Boolean)
  nameWithType: TurtleParserContext.TurtleParserContext(IRdfHandler, ITokeniser, TurtleSyntax, Boolean, Boolean)
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.TurtleParserContext(VDS.RDF.IRdfHandler, VDS.RDF.Parsing.Tokens.ITokeniser, VDS.RDF.Parsing.TurtleSyntax, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
    startLine: 111
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Turtle Parser Context with custom settings.\n"
  example: []
  syntax:
    content: public TurtleParserContext(IRdfHandler handler, ITokeniser tokeniser, TurtleSyntax syntax, bool traceParsing, bool traceTokeniser)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: tokeniser
      type: VDS.RDF.Parsing.Tokens.ITokeniser
      description: Tokeniser to use.
    - id: syntax
      type: VDS.RDF.Parsing.TurtleSyntax
      description: Turtle Syntax.
    - id: traceParsing
      type: System.Boolean
      description: Whether to trace parsing.
    - id: traceTokeniser
      type: System.Boolean
      description: Whether to trace tokenisation.
    content.vb: Public Sub New(handler As IRdfHandler, tokeniser As ITokeniser, syntax As TurtleSyntax, traceParsing As Boolean, traceTokeniser As Boolean)
  overload: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode,System.Boolean,System.Boolean)
  commentId: M:VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode,System.Boolean,System.Boolean)
  id: '#ctor(VDS.RDF.IRdfHandler,VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.TurtleSyntax,VDS.RDF.Parsing.Tokens.TokenQueueMode,System.Boolean,System.Boolean)'
  parent: VDS.RDF.Parsing.Contexts.TurtleParserContext
  langs:
  - csharp
  - vb
  name: TurtleParserContext(IRdfHandler, ITokeniser, TurtleSyntax, TokenQueueMode, Boolean, Boolean)
  nameWithType: TurtleParserContext.TurtleParserContext(IRdfHandler, ITokeniser, TurtleSyntax, TokenQueueMode, Boolean, Boolean)
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.TurtleParserContext(VDS.RDF.IRdfHandler, VDS.RDF.Parsing.Tokens.ITokeniser, VDS.RDF.Parsing.TurtleSyntax, VDS.RDF.Parsing.Tokens.TokenQueueMode, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
    startLine: 123
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Turtle Parser Context with custom settings.\n"
  example: []
  syntax:
    content: public TurtleParserContext(IRdfHandler handler, ITokeniser tokeniser, TurtleSyntax syntax, TokenQueueMode queueMode, bool traceParsing, bool traceTokeniser)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: tokeniser
      type: VDS.RDF.Parsing.Tokens.ITokeniser
      description: Tokeniser to use.
    - id: syntax
      type: VDS.RDF.Parsing.TurtleSyntax
      description: Turtle Syntax.
    - id: queueMode
      type: VDS.RDF.Parsing.Tokens.TokenQueueMode
      description: Tokeniser Queue Mode.
    - id: traceParsing
      type: System.Boolean
      description: Whether to trace parsing.
    - id: traceTokeniser
      type: System.Boolean
      description: Whether to trace tokenisation.
    content.vb: Public Sub New(handler As IRdfHandler, tokeniser As ITokeniser, syntax As TurtleSyntax, queueMode As TokenQueueMode, traceParsing As Boolean, traceTokeniser As Boolean)
  overload: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.Syntax
  commentId: P:VDS.RDF.Parsing.Contexts.TurtleParserContext.Syntax
  id: Syntax
  parent: VDS.RDF.Parsing.Contexts.TurtleParserContext
  langs:
  - csharp
  - vb
  name: Syntax
  nameWithType: TurtleParserContext.Syntax
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.Syntax
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Syntax
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
    startLine: 132
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Turtle Syntax being used.\n"
  example: []
  syntax:
    content: public TurtleSyntax Syntax { get; }
    parameters: []
    return:
      type: VDS.RDF.Parsing.TurtleSyntax
    content.vb: Public ReadOnly Property Syntax As TurtleSyntax
  overload: VDS.RDF.Parsing.Contexts.TurtleParserContext.Syntax*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.QNameUnescapeFunction
  commentId: P:VDS.RDF.Parsing.Contexts.TurtleParserContext.QNameUnescapeFunction
  id: QNameUnescapeFunction
  parent: VDS.RDF.Parsing.Contexts.TurtleParserContext
  langs:
  - csharp
  - vb
  name: QNameUnescapeFunction
  nameWithType: TurtleParserContext.QNameUnescapeFunction
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.QNameUnescapeFunction
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QNameUnescapeFunction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/TurtleParserContext.cs
    startLine: 143
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nFunction for unescaping QNames.\n"
  example: []
  syntax:
    content: public Func<string, string> QNameUnescapeFunction { get; }
    parameters: []
    return:
      type: System.Func{System.String,System.String}
    content.vb: Public ReadOnly Property QNameUnescapeFunction As Func(Of String, String)
  overload: VDS.RDF.Parsing.Contexts.TurtleParserContext.QNameUnescapeFunction*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VDS.RDF.Parsing.Contexts
  commentId: N:VDS.RDF.Parsing.Contexts
  name: VDS.RDF.Parsing.Contexts
  nameWithType: VDS.RDF.Parsing.Contexts
  fullName: VDS.RDF.Parsing.Contexts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.BaseParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: BaseParserContext
  nameWithType: BaseParserContext
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.TokenisingParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: TokenisingParserContext
  nameWithType: TokenisingParserContext
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext
- uid: VDS.RDF.Parsing.Contexts.IParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.IParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: IParserContext
  nameWithType: IParserContext
  fullName: VDS.RDF.Parsing.Contexts.IParserContext
- uid: VDS.RDF.Parsing.Contexts.ITokenisingParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.ITokenisingParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: ITokenisingParserContext
  nameWithType: ITokenisingParserContext
  fullName: VDS.RDF.Parsing.Contexts.ITokenisingParserContext
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext._queue
  commentId: F:VDS.RDF.Parsing.Contexts.TokenisingParserContext._queue
  parent: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  name: _queue
  nameWithType: TokenisingParserContext._queue
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext._queue
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext._traceTokeniser
  commentId: F:VDS.RDF.Parsing.Contexts.TokenisingParserContext._traceTokeniser
  parent: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  name: _traceTokeniser
  nameWithType: TokenisingParserContext._traceTokeniser
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext._traceTokeniser
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext._localTokens
  commentId: F:VDS.RDF.Parsing.Contexts.TokenisingParserContext._localTokens
  parent: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  name: _localTokens
  nameWithType: TokenisingParserContext._localTokens
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext._localTokens
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext.Tokens
  commentId: P:VDS.RDF.Parsing.Contexts.TokenisingParserContext.Tokens
  parent: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  name: Tokens
  nameWithType: TokenisingParserContext.Tokens
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext.Tokens
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext.LocalTokens
  commentId: P:VDS.RDF.Parsing.Contexts.TokenisingParserContext.LocalTokens
  parent: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  name: LocalTokens
  nameWithType: TokenisingParserContext.LocalTokens
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext.LocalTokens
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext.TraceTokeniser
  commentId: P:VDS.RDF.Parsing.Contexts.TokenisingParserContext.TraceTokeniser
  parent: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  name: TraceTokeniser
  nameWithType: TokenisingParserContext.TraceTokeniser
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext.TraceTokeniser
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  commentId: F:VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: _handler
  nameWithType: BaseParserContext._handler
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext._handler
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  commentId: F:VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: _traceParsing
  nameWithType: BaseParserContext._traceParsing
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: Handler
  nameWithType: BaseParserContext.Handler
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: TraceParsing
  nameWithType: BaseParserContext.TraceParsing
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: Namespaces
  nameWithType: BaseParserContext.Namespaces
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: BaseUri
  nameWithType: BaseParserContext.BaseUri
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TurtleParserContext>()
  nameWithType: Extensions.AsEnumerable<TurtleParserContext>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.TurtleParserContext>()
  nameWithType.vb: Extensions.AsEnumerable(Of TurtleParserContext)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.TurtleParserContext)()
  name.vb: AsEnumerable(Of TurtleParserContext)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TurtleParserContext>
    nameWithType: Extensions.AsEnumerable<TurtleParserContext>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.TurtleParserContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TurtleParserContext)
    nameWithType: Extensions.AsEnumerable(Of TurtleParserContext)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.TurtleParserContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor*
  commentId: Overload:VDS.RDF.Parsing.Contexts.TurtleParserContext.#ctor
  name: TurtleParserContext
  nameWithType: TurtleParserContext.TurtleParserContext
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.TurtleParserContext
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.Parsing.Tokens.ITokeniser
  commentId: T:VDS.RDF.Parsing.Tokens.ITokeniser
  parent: VDS.RDF.Parsing.Tokens
  name: ITokeniser
  nameWithType: ITokeniser
  fullName: VDS.RDF.Parsing.Tokens.ITokeniser
- uid: VDS.RDF.Parsing.TurtleSyntax
  commentId: T:VDS.RDF.Parsing.TurtleSyntax
  parent: VDS.RDF.Parsing
  name: TurtleSyntax
  nameWithType: TurtleSyntax
  fullName: VDS.RDF.Parsing.TurtleSyntax
- uid: VDS.RDF.Parsing.Tokens
  commentId: N:VDS.RDF.Parsing.Tokens
  name: VDS.RDF.Parsing.Tokens
  nameWithType: VDS.RDF.Parsing.Tokens
  fullName: VDS.RDF.Parsing.Tokens
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: VDS.RDF.Parsing.Tokens.TokenQueueMode
  commentId: T:VDS.RDF.Parsing.Tokens.TokenQueueMode
  parent: VDS.RDF.Parsing.Tokens
  name: TokenQueueMode
  nameWithType: TokenQueueMode
  fullName: VDS.RDF.Parsing.Tokens.TokenQueueMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.IRdfHandler
  commentId: T:VDS.RDF.IRdfHandler
  parent: VDS.RDF
  name: IRdfHandler
  nameWithType: IRdfHandler
  fullName: VDS.RDF.IRdfHandler
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.Syntax*
  commentId: Overload:VDS.RDF.Parsing.Contexts.TurtleParserContext.Syntax
  name: Syntax
  nameWithType: TurtleParserContext.Syntax
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.Syntax
- uid: VDS.RDF.Parsing.Contexts.TurtleParserContext.QNameUnescapeFunction*
  commentId: Overload:VDS.RDF.Parsing.Contexts.TurtleParserContext.QNameUnescapeFunction
  name: QNameUnescapeFunction
  nameWithType: TurtleParserContext.QNameUnescapeFunction
  fullName: VDS.RDF.Parsing.Contexts.TurtleParserContext.QNameUnescapeFunction
- uid: System.Func{System.String,System.String}
  commentId: T:System.Func{System.String,System.String}
  parent: System
  definition: System.Func`2
  name: Func<String, String>
  nameWithType: Func<String, String>
  fullName: System.Func<System.String, System.String>
  nameWithType.vb: Func(Of String, String)
  fullName.vb: System.Func(Of System.String, System.String)
  name.vb: Func(Of String, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
