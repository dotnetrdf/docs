### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Storage.Virtualisation.ICanCopy
  commentId: T:VDS.RDF.Storage.Virtualisation.ICanCopy
  id: ICanCopy
  parent: VDS.RDF.Storage.Virtualisation
  children:
  - VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode(VDS.RDF.IGraph)
  langs:
  - csharp
  - vb
  name: ICanCopy
  nameWithType: ICanCopy
  fullName: VDS.RDF.Storage.Virtualisation.ICanCopy
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ICanCopy
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/IVirtualNode.cs
    startLine: 94
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nInterface for nodes that know for themseves how to create a copy of themselves to a different graph.\n"
  remarks: "\nEspecially virtual nodes need to copy themselves during query algebra processing,\nbecause the standard copy tools might destroy their virtual state by duplicating it&apos;s virtualized\nvalues. In consequence all indices in the various triple stores fail to match such value-copied nodes.\n"
  example: []
  syntax:
    content: public interface ICanCopy
    content.vb: Public Interface ICanCopy
  extensionMethods:
  - VDS.RDF.Storage.Virtualisation.ICanCopy.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode(VDS.RDF.IGraph)
  id: CopyNode(VDS.RDF.IGraph)
  parent: VDS.RDF.Storage.Virtualisation.ICanCopy
  langs:
  - csharp
  - vb
  name: CopyNode(IGraph)
  nameWithType: ICanCopy.CopyNode(IGraph)
  fullName: VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CopyNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/IVirtualNode.cs
    startLine: 103
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCopies the Node into another Graph, currently only used by virtual nodes.\n"
  example: []
  syntax:
    content: INode CopyNode(IGraph target)
    parameters:
    - id: target
      type: VDS.RDF.IGraph
      description: Target Graph.
    return:
      type: VDS.RDF.INode
      description: ''
    content.vb: Function CopyNode(target As IGraph) As INode
  overload: VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode*
references:
- uid: VDS.RDF.Storage.Virtualisation
  commentId: N:VDS.RDF.Storage.Virtualisation
  name: VDS.RDF.Storage.Virtualisation
  nameWithType: VDS.RDF.Storage.Virtualisation
  fullName: VDS.RDF.Storage.Virtualisation
- uid: VDS.RDF.Storage.Virtualisation.ICanCopy.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ICanCopy>()
  nameWithType: Extensions.AsEnumerable<ICanCopy>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.Virtualisation.ICanCopy>()
  nameWithType.vb: Extensions.AsEnumerable(Of ICanCopy)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.Virtualisation.ICanCopy)()
  name.vb: AsEnumerable(Of ICanCopy)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ICanCopy>
    nameWithType: Extensions.AsEnumerable<ICanCopy>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.Virtualisation.ICanCopy>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ICanCopy)
    nameWithType: Extensions.AsEnumerable(Of ICanCopy)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.Virtualisation.ICanCopy)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode
  name: CopyNode
  nameWithType: ICanCopy.CopyNode
  fullName: VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
