### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Writing.GraphVizGenerator
  commentId: T:VDS.RDF.Writing.GraphVizGenerator
  id: GraphVizGenerator
  parent: VDS.RDF.Writing
  children:
  - VDS.RDF.Writing.GraphVizGenerator.#ctor(System.String)
  - VDS.RDF.Writing.GraphVizGenerator.#ctor(System.String,System.String)
  - VDS.RDF.Writing.GraphVizGenerator.Format
  - VDS.RDF.Writing.GraphVizGenerator.Generate(VDS.RDF.IGraph,System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: GraphVizGenerator
  nameWithType: GraphVizGenerator
  fullName: VDS.RDF.Writing.GraphVizGenerator
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/GraphVizGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GraphVizGenerator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/GraphVizGenerator.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nA Class which creates GraphViz Graphs entirely dynamically.\n"
  example: []
  syntax:
    content: public class GraphVizGenerator
    content.vb: Public Class GraphVizGenerator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Writing.GraphVizGenerator.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Writing.GraphVizGenerator.#ctor(System.String)
  commentId: M:VDS.RDF.Writing.GraphVizGenerator.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VDS.RDF.Writing.GraphVizGenerator
  langs:
  - csharp
  - vb
  name: GraphVizGenerator(String)
  nameWithType: GraphVizGenerator.GraphVizGenerator(String)
  fullName: VDS.RDF.Writing.GraphVizGenerator.GraphVizGenerator(System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/GraphVizGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/GraphVizGenerator.cs
    startLine: 48
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nCreates a new GraphVizGenerator.\n"
  remarks: Only use this form if you&apos;re certain that dot.exe is in your PATH otherwise the code will throw an error.
  example: []
  syntax:
    content: public GraphVizGenerator(string format)
    parameters:
    - id: format
      type: System.String
      description: Format for the Output (svg is default).
    content.vb: Public Sub New(format As String)
  overload: VDS.RDF.Writing.GraphVizGenerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.GraphVizGenerator.#ctor(System.String,System.String)
  commentId: M:VDS.RDF.Writing.GraphVizGenerator.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: VDS.RDF.Writing.GraphVizGenerator
  langs:
  - csharp
  - vb
  name: GraphVizGenerator(String, String)
  nameWithType: GraphVizGenerator.GraphVizGenerator(String, String)
  fullName: VDS.RDF.Writing.GraphVizGenerator.GraphVizGenerator(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/GraphVizGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/GraphVizGenerator.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nCreates a new GraphVizGenerator.\n"
  example: []
  syntax:
    content: public GraphVizGenerator(string format, string gvdir)
    parameters:
    - id: format
      type: System.String
      description: Format for the Output.
    - id: gvdir
      type: System.String
      description: Directory in which GraphViz is installed.
    content.vb: Public Sub New(format As String, gvdir As String)
  overload: VDS.RDF.Writing.GraphVizGenerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.GraphVizGenerator.Format
  commentId: P:VDS.RDF.Writing.GraphVizGenerator.Format
  id: Format
  parent: VDS.RDF.Writing.GraphVizGenerator
  langs:
  - csharp
  - vb
  name: Format
  nameWithType: GraphVizGenerator.Format
  fullName: VDS.RDF.Writing.GraphVizGenerator.Format
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/GraphVizGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Format
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/GraphVizGenerator.cs
    startLine: 75
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGets/Sets the Format for the Output.\n"
  example: []
  syntax:
    content: public string Format { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Format As String
  overload: VDS.RDF.Writing.GraphVizGenerator.Format*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.GraphVizGenerator.Generate(VDS.RDF.IGraph,System.String,System.Boolean)
  commentId: M:VDS.RDF.Writing.GraphVizGenerator.Generate(VDS.RDF.IGraph,System.String,System.Boolean)
  id: Generate(VDS.RDF.IGraph,System.String,System.Boolean)
  parent: VDS.RDF.Writing.GraphVizGenerator
  langs:
  - csharp
  - vb
  name: Generate(IGraph, String, Boolean)
  nameWithType: GraphVizGenerator.Generate(IGraph, String, Boolean)
  fullName: VDS.RDF.Writing.GraphVizGenerator.Generate(VDS.RDF.IGraph, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/GraphVizGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Generate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/GraphVizGenerator.cs
    startLine: 93
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGenerates GraphViz Output for the given Graph.\n"
  example: []
  syntax:
    content: public void Generate(IGraph g, string filename, bool open)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to generated GraphViz Output for.
    - id: filename
      type: System.String
      description: File you wish to save the Output to.
    - id: open
      type: System.Boolean
      description: Whether you want to open the Output in the default application (according to OS settings) for the filetype after it is Created.
    content.vb: Public Sub Generate(g As IGraph, filename As String, open As Boolean)
  overload: VDS.RDF.Writing.GraphVizGenerator.Generate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Writing
  commentId: N:VDS.RDF.Writing
  name: VDS.RDF.Writing
  nameWithType: VDS.RDF.Writing
  fullName: VDS.RDF.Writing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Writing.GraphVizGenerator.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<GraphVizGenerator>()
  nameWithType: Extensions.AsEnumerable<GraphVizGenerator>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.GraphVizGenerator>()
  nameWithType.vb: Extensions.AsEnumerable(Of GraphVizGenerator)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.GraphVizGenerator)()
  name.vb: AsEnumerable(Of GraphVizGenerator)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<GraphVizGenerator>
    nameWithType: Extensions.AsEnumerable<GraphVizGenerator>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.GraphVizGenerator>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of GraphVizGenerator)
    nameWithType: Extensions.AsEnumerable(Of GraphVizGenerator)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.GraphVizGenerator)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Writing.GraphVizGenerator.#ctor*
  commentId: Overload:VDS.RDF.Writing.GraphVizGenerator.#ctor
  name: GraphVizGenerator
  nameWithType: GraphVizGenerator.GraphVizGenerator
  fullName: VDS.RDF.Writing.GraphVizGenerator.GraphVizGenerator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Writing.GraphVizGenerator.Format*
  commentId: Overload:VDS.RDF.Writing.GraphVizGenerator.Format
  name: Format
  nameWithType: GraphVizGenerator.Format
  fullName: VDS.RDF.Writing.GraphVizGenerator.Format
- uid: VDS.RDF.Writing.GraphVizGenerator.Generate*
  commentId: Overload:VDS.RDF.Writing.GraphVizGenerator.Generate
  name: Generate
  nameWithType: GraphVizGenerator.Generate
  fullName: VDS.RDF.Writing.GraphVizGenerator.Generate
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
