### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  id: RdfXmlParserContext
  parent: VDS.RDF.Parsing.Contexts
  children:
  - VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IGraph,System.IO.Stream)
  - VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IGraph,System.IO.TextReader)
  - VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IGraph,System.Xml.XmlDocument)
  - VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IGraph,System.Xml.XmlDocument,System.Boolean)
  - VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IRdfHandler,System.IO.Stream)
  - VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IRdfHandler,System.IO.TextReader)
  - VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IRdfHandler,System.Xml.XmlDocument)
  - VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IRdfHandler,System.Xml.XmlDocument,System.Boolean)
  - VDS.RDF.Parsing.Contexts.RdfXmlParserContext.Events
  - VDS.RDF.Parsing.Contexts.RdfXmlParserContext.IDs
  langs:
  - csharp
  - vb
  name: RdfXmlParserContext
  nameWithType: RdfXmlParserContext
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RdfXmlParserContext
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nParser Context for RDF/XML Parser.\n"
  example: []
  syntax:
    content: 'public class RdfXmlParserContext : BaseParserContext, IParserContext, IEventParserContext<IRdfXmlEvent>'
    content.vb: >-
      Public Class RdfXmlParserContext
          Inherits BaseParserContext
          Implements IParserContext, IEventParserContext(Of IRdfXmlEvent)
  inheritance:
  - System.Object
  - VDS.RDF.Parsing.Contexts.BaseParserContext
  implements:
  - VDS.RDF.Parsing.Contexts.IParserContext
  - VDS.RDF.Parsing.Contexts.IEventParserContext{VDS.RDF.Parsing.Events.IRdfXmlEvent}
  inheritedMembers:
  - VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  - VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  - VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  - VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  - VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  - VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.Contexts.RdfXmlParserContext.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IGraph,System.Xml.XmlDocument)
  commentId: M:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IGraph,System.Xml.XmlDocument)
  id: '#ctor(VDS.RDF.IGraph,System.Xml.XmlDocument)'
  parent: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  langs:
  - csharp
  - vb
  name: RdfXmlParserContext(IGraph, XmlDocument)
  nameWithType: RdfXmlParserContext.RdfXmlParserContext(IGraph, XmlDocument)
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.RdfXmlParserContext(VDS.RDF.IGraph, System.Xml.XmlDocument)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Parser Context.\n"
  example: []
  syntax:
    content: public RdfXmlParserContext(IGraph g, XmlDocument document)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: document
      type: System.Xml.XmlDocument
      description: XML Document.
    content.vb: Public Sub New(g As IGraph, document As XmlDocument)
  overload: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IGraph,System.Xml.XmlDocument,System.Boolean)
  commentId: M:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IGraph,System.Xml.XmlDocument,System.Boolean)
  id: '#ctor(VDS.RDF.IGraph,System.Xml.XmlDocument,System.Boolean)'
  parent: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  langs:
  - csharp
  - vb
  name: RdfXmlParserContext(IGraph, XmlDocument, Boolean)
  nameWithType: RdfXmlParserContext.RdfXmlParserContext(IGraph, XmlDocument, Boolean)
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.RdfXmlParserContext(VDS.RDF.IGraph, System.Xml.XmlDocument, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
    startLine: 58
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Parser Context.\n"
  example: []
  syntax:
    content: public RdfXmlParserContext(IGraph g, XmlDocument document, bool traceParsing)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: document
      type: System.Xml.XmlDocument
      description: XML Document.
    - id: traceParsing
      type: System.Boolean
      description: Whether to Trace Parsing.
    content.vb: Public Sub New(g As IGraph, document As XmlDocument, traceParsing As Boolean)
  overload: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IRdfHandler,System.Xml.XmlDocument)
  commentId: M:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IRdfHandler,System.Xml.XmlDocument)
  id: '#ctor(VDS.RDF.IRdfHandler,System.Xml.XmlDocument)'
  parent: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  langs:
  - csharp
  - vb
  name: RdfXmlParserContext(IRdfHandler, XmlDocument)
  nameWithType: RdfXmlParserContext.RdfXmlParserContext(IRdfHandler, XmlDocument)
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.RdfXmlParserContext(VDS.RDF.IRdfHandler, System.Xml.XmlDocument)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
    startLine: 73
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Parser Context.\n"
  example: []
  syntax:
    content: public RdfXmlParserContext(IRdfHandler handler, XmlDocument document)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: document
      type: System.Xml.XmlDocument
      description: XML Document.
    content.vb: Public Sub New(handler As IRdfHandler, document As XmlDocument)
  overload: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IRdfHandler,System.Xml.XmlDocument,System.Boolean)
  commentId: M:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IRdfHandler,System.Xml.XmlDocument,System.Boolean)
  id: '#ctor(VDS.RDF.IRdfHandler,System.Xml.XmlDocument,System.Boolean)'
  parent: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  langs:
  - csharp
  - vb
  name: RdfXmlParserContext(IRdfHandler, XmlDocument, Boolean)
  nameWithType: RdfXmlParserContext.RdfXmlParserContext(IRdfHandler, XmlDocument, Boolean)
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.RdfXmlParserContext(VDS.RDF.IRdfHandler, System.Xml.XmlDocument, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
    startLine: 82
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Parser Context.\n"
  example: []
  syntax:
    content: public RdfXmlParserContext(IRdfHandler handler, XmlDocument document, bool traceParsing)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: document
      type: System.Xml.XmlDocument
      description: XML Document.
    - id: traceParsing
      type: System.Boolean
      description: Whether to Trace Parsing.
    content.vb: Public Sub New(handler As IRdfHandler, document As XmlDocument, traceParsing As Boolean)
  overload: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IGraph,System.IO.Stream)
  commentId: M:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IGraph,System.IO.Stream)
  id: '#ctor(VDS.RDF.IGraph,System.IO.Stream)'
  parent: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  langs:
  - csharp
  - vb
  name: RdfXmlParserContext(IGraph, Stream)
  nameWithType: RdfXmlParserContext.RdfXmlParserContext(IGraph, Stream)
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.RdfXmlParserContext(VDS.RDF.IGraph, System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
    startLine: 97
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Parser Context which uses Streaming parsing.\n"
  example: []
  syntax:
    content: public RdfXmlParserContext(IGraph g, Stream stream)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: stream
      type: System.IO.Stream
      description: Stream.
    content.vb: Public Sub New(g As IGraph, stream As Stream)
  overload: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IRdfHandler,System.IO.Stream)
  commentId: M:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IRdfHandler,System.IO.Stream)
  id: '#ctor(VDS.RDF.IRdfHandler,System.IO.Stream)'
  parent: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  langs:
  - csharp
  - vb
  name: RdfXmlParserContext(IRdfHandler, Stream)
  nameWithType: RdfXmlParserContext.RdfXmlParserContext(IRdfHandler, Stream)
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.RdfXmlParserContext(VDS.RDF.IRdfHandler, System.IO.Stream)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
    startLine: 108
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Parser Context which uses Streaming parsing.\n"
  example: []
  syntax:
    content: public RdfXmlParserContext(IRdfHandler handler, Stream stream)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: stream
      type: System.IO.Stream
      description: Stream.
    content.vb: Public Sub New(handler As IRdfHandler, stream As Stream)
  overload: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IGraph,System.IO.TextReader)
  commentId: M:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IGraph,System.IO.TextReader)
  id: '#ctor(VDS.RDF.IGraph,System.IO.TextReader)'
  parent: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  langs:
  - csharp
  - vb
  name: RdfXmlParserContext(IGraph, TextReader)
  nameWithType: RdfXmlParserContext.RdfXmlParserContext(IGraph, TextReader)
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.RdfXmlParserContext(VDS.RDF.IGraph, System.IO.TextReader)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
    startLine: 119
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Parser Context which uses Streaming parsing.\n"
  example: []
  syntax:
    content: public RdfXmlParserContext(IGraph g, TextReader input)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: input
      type: System.IO.TextReader
      description: Input.
    content.vb: Public Sub New(g As IGraph, input As TextReader)
  overload: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IRdfHandler,System.IO.TextReader)
  commentId: M:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor(VDS.RDF.IRdfHandler,System.IO.TextReader)
  id: '#ctor(VDS.RDF.IRdfHandler,System.IO.TextReader)'
  parent: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  langs:
  - csharp
  - vb
  name: RdfXmlParserContext(IRdfHandler, TextReader)
  nameWithType: RdfXmlParserContext.RdfXmlParserContext(IRdfHandler, TextReader)
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.RdfXmlParserContext(VDS.RDF.IRdfHandler, System.IO.TextReader)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
    startLine: 130
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Parser Context which uses Streaming parsing.\n"
  example: []
  syntax:
    content: public RdfXmlParserContext(IRdfHandler handler, TextReader input)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: input
      type: System.IO.TextReader
      description: Input.
    content.vb: Public Sub New(handler As IRdfHandler, input As TextReader)
  overload: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.Events
  commentId: P:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.Events
  id: Events
  parent: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: RdfXmlParserContext.Events
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.Events
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Events
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
    startLine: 139
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Event Queue.\n"
  example: []
  syntax:
    content: public IEventQueue<IRdfXmlEvent> Events { get; }
    parameters: []
    return:
      type: VDS.RDF.Parsing.Events.IEventQueue{VDS.RDF.Parsing.Events.IRdfXmlEvent}
    content.vb: Public ReadOnly Property Events As IEventQueue(Of IRdfXmlEvent)
  overload: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.Events*
  implements:
  - VDS.RDF.Parsing.Contexts.IEventParserContext{VDS.RDF.Parsing.Events.IRdfXmlEvent}.Events
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.IDs
  commentId: P:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.IDs
  id: IDs
  parent: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  langs:
  - csharp
  - vb
  name: IDs
  nameWithType: RdfXmlParserContext.IDs
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.IDs
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IDs
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/RdfXmlParserContext.cs
    startLine: 150
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Mapping of in-use IDs.\n"
  example: []
  syntax:
    content: public Dictionary<string, List<INode>> IDs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{VDS.RDF.INode}}
    content.vb: Public ReadOnly Property IDs As Dictionary(Of String, List(Of INode))
  overload: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.IDs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VDS.RDF.Parsing.Contexts
  commentId: N:VDS.RDF.Parsing.Contexts
  name: VDS.RDF.Parsing.Contexts
  nameWithType: VDS.RDF.Parsing.Contexts
  fullName: VDS.RDF.Parsing.Contexts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.BaseParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: BaseParserContext
  nameWithType: BaseParserContext
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext
- uid: VDS.RDF.Parsing.Contexts.IParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.IParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: IParserContext
  nameWithType: IParserContext
  fullName: VDS.RDF.Parsing.Contexts.IParserContext
- uid: VDS.RDF.Parsing.Contexts.IEventParserContext{VDS.RDF.Parsing.Events.IRdfXmlEvent}
  commentId: T:VDS.RDF.Parsing.Contexts.IEventParserContext{VDS.RDF.Parsing.Events.IRdfXmlEvent}
  parent: VDS.RDF.Parsing.Contexts
  definition: VDS.RDF.Parsing.Contexts.IEventParserContext`1
  name: IEventParserContext<IRdfXmlEvent>
  nameWithType: IEventParserContext<IRdfXmlEvent>
  fullName: VDS.RDF.Parsing.Contexts.IEventParserContext<VDS.RDF.Parsing.Events.IRdfXmlEvent>
  nameWithType.vb: IEventParserContext(Of IRdfXmlEvent)
  fullName.vb: VDS.RDF.Parsing.Contexts.IEventParserContext(Of VDS.RDF.Parsing.Events.IRdfXmlEvent)
  name.vb: IEventParserContext(Of IRdfXmlEvent)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Contexts.IEventParserContext`1
    name: IEventParserContext
    nameWithType: IEventParserContext
    fullName: VDS.RDF.Parsing.Contexts.IEventParserContext
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
    name: IRdfXmlEvent
    nameWithType: IRdfXmlEvent
    fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Contexts.IEventParserContext`1
    name: IEventParserContext
    nameWithType: IEventParserContext
    fullName: VDS.RDF.Parsing.Contexts.IEventParserContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
    name: IRdfXmlEvent
    nameWithType: IRdfXmlEvent
    fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  commentId: F:VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: _handler
  nameWithType: BaseParserContext._handler
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext._handler
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  commentId: F:VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: _traceParsing
  nameWithType: BaseParserContext._traceParsing
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: Handler
  nameWithType: BaseParserContext.Handler
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: TraceParsing
  nameWithType: BaseParserContext.TraceParsing
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: Namespaces
  nameWithType: BaseParserContext.Namespaces
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: BaseUri
  nameWithType: BaseParserContext.BaseUri
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<RdfXmlParserContext>()
  nameWithType: Extensions.AsEnumerable<RdfXmlParserContext>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.RdfXmlParserContext>()
  nameWithType.vb: Extensions.AsEnumerable(Of RdfXmlParserContext)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.RdfXmlParserContext)()
  name.vb: AsEnumerable(Of RdfXmlParserContext)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<RdfXmlParserContext>
    nameWithType: Extensions.AsEnumerable<RdfXmlParserContext>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.RdfXmlParserContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of RdfXmlParserContext)
    nameWithType: Extensions.AsEnumerable(Of RdfXmlParserContext)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.RdfXmlParserContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.Contexts.IEventParserContext`1
  commentId: T:VDS.RDF.Parsing.Contexts.IEventParserContext`1
  name: IEventParserContext<T>
  nameWithType: IEventParserContext<T>
  fullName: VDS.RDF.Parsing.Contexts.IEventParserContext<T>
  nameWithType.vb: IEventParserContext(Of T)
  fullName.vb: VDS.RDF.Parsing.Contexts.IEventParserContext(Of T)
  name.vb: IEventParserContext(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Contexts.IEventParserContext`1
    name: IEventParserContext
    nameWithType: IEventParserContext
    fullName: VDS.RDF.Parsing.Contexts.IEventParserContext
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Contexts.IEventParserContext`1
    name: IEventParserContext
    nameWithType: IEventParserContext
    fullName: VDS.RDF.Parsing.Contexts.IEventParserContext
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor*
  commentId: Overload:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.#ctor
  name: RdfXmlParserContext
  nameWithType: RdfXmlParserContext.RdfXmlParserContext
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.RdfXmlParserContext
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.IRdfHandler
  commentId: T:VDS.RDF.IRdfHandler
  parent: VDS.RDF
  name: IRdfHandler
  nameWithType: IRdfHandler
  fullName: VDS.RDF.IRdfHandler
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.Events*
  commentId: Overload:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.Events
  name: Events
  nameWithType: RdfXmlParserContext.Events
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.Events
- uid: VDS.RDF.Parsing.Contexts.IEventParserContext{VDS.RDF.Parsing.Events.IRdfXmlEvent}.Events
  commentId: P:VDS.RDF.Parsing.Contexts.IEventParserContext{VDS.RDF.Parsing.Events.IRdfXmlEvent}.Events
  parent: VDS.RDF.Parsing.Contexts.IEventParserContext{VDS.RDF.Parsing.Events.IRdfXmlEvent}
  definition: VDS.RDF.Parsing.Contexts.IEventParserContext`1.Events
  name: Events
  nameWithType: IEventParserContext<IRdfXmlEvent>.Events
  fullName: VDS.RDF.Parsing.Contexts.IEventParserContext<VDS.RDF.Parsing.Events.IRdfXmlEvent>.Events
  nameWithType.vb: IEventParserContext(Of IRdfXmlEvent).Events
  fullName.vb: VDS.RDF.Parsing.Contexts.IEventParserContext(Of VDS.RDF.Parsing.Events.IRdfXmlEvent).Events
- uid: VDS.RDF.Parsing.Events.IEventQueue{VDS.RDF.Parsing.Events.IRdfXmlEvent}
  commentId: T:VDS.RDF.Parsing.Events.IEventQueue{VDS.RDF.Parsing.Events.IRdfXmlEvent}
  parent: VDS.RDF.Parsing.Events
  definition: VDS.RDF.Parsing.Events.IEventQueue`1
  name: IEventQueue<IRdfXmlEvent>
  nameWithType: IEventQueue<IRdfXmlEvent>
  fullName: VDS.RDF.Parsing.Events.IEventQueue<VDS.RDF.Parsing.Events.IRdfXmlEvent>
  nameWithType.vb: IEventQueue(Of IRdfXmlEvent)
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of VDS.RDF.Parsing.Events.IRdfXmlEvent)
  name.vb: IEventQueue(Of IRdfXmlEvent)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
    name: IRdfXmlEvent
    nameWithType: IRdfXmlEvent
    fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
    name: IRdfXmlEvent
    nameWithType: IRdfXmlEvent
    fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Contexts.IEventParserContext`1.Events
  commentId: P:VDS.RDF.Parsing.Contexts.IEventParserContext`1.Events
  name: Events
  nameWithType: IEventParserContext<T>.Events
  fullName: VDS.RDF.Parsing.Contexts.IEventParserContext<T>.Events
  nameWithType.vb: IEventParserContext(Of T).Events
  fullName.vb: VDS.RDF.Parsing.Contexts.IEventParserContext(Of T).Events
- uid: VDS.RDF.Parsing.Events.IEventQueue`1
  commentId: T:VDS.RDF.Parsing.Events.IEventQueue`1
  name: IEventQueue<T>
  nameWithType: IEventQueue<T>
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>
  nameWithType.vb: IEventQueue(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T)
  name.vb: IEventQueue(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events
  commentId: N:VDS.RDF.Parsing.Events
  name: VDS.RDF.Parsing.Events
  nameWithType: VDS.RDF.Parsing.Events
  fullName: VDS.RDF.Parsing.Events
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.IDs*
  commentId: Overload:VDS.RDF.Parsing.Contexts.RdfXmlParserContext.IDs
  name: IDs
  nameWithType: RdfXmlParserContext.IDs
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext.IDs
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{VDS.RDF.INode}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{VDS.RDF.INode}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, List<INode>>
  nameWithType: Dictionary<String, List<INode>>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Collections.Generic.List<VDS.RDF.INode>>
  nameWithType.vb: Dictionary(Of String, List(Of INode))
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Collections.Generic.List(Of VDS.RDF.INode))
  name.vb: Dictionary(Of String, List(Of INode))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
