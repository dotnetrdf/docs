### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Nodes.ValuedNodeExtensions
  commentId: T:VDS.RDF.Nodes.ValuedNodeExtensions
  id: ValuedNodeExtensions
  parent: VDS.RDF.Nodes
  children:
  - VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean(VDS.RDF.Nodes.IValuedNode)
  - VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  langs:
  - csharp
  - vb
  name: ValuedNodeExtensions
  nameWithType: ValuedNodeExtensions
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Nodes/ValuedNodeExtensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ValuedNodeExtensions
    path: ../../dotNetRDF/Libraries/dotNetRDF/Nodes/ValuedNodeExtensions.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Nodes
  summary: "\nExtension Methods related to valued nodes.\n"
  example: []
  syntax:
    content: public static class ValuedNodeExtensions
    content.vb: Public Module ValuedNodeExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  id: AsValuedNode(VDS.RDF.INode)
  isExtensionMethod: true
  parent: VDS.RDF.Nodes.ValuedNodeExtensions
  langs:
  - csharp
  - vb
  name: AsValuedNode(INode)
  nameWithType: ValuedNodeExtensions.AsValuedNode(INode)
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Nodes/ValuedNodeExtensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsValuedNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Nodes/ValuedNodeExtensions.cs
    startLine: 45
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Nodes
  summary: "\nTakes a <xref href=\"VDS.RDF.INode\" data-throw-if-not-resolved=\"false\"></xref> and converts it to a <xref href=\"VDS.RDF.Nodes.IValuedNode\" data-throw-if-not-resolved=\"false\"></xref> if it is not already an instance that implements the interface.\n"
  example: []
  syntax:
    content: public static IValuedNode AsValuedNode(this INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: VDS.RDF.Nodes.IValuedNode
      description: Valued Node.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsValuedNode(n As INode) As IValuedNode
  overload: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean(VDS.RDF.Nodes.IValuedNode)
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean(VDS.RDF.Nodes.IValuedNode)
  id: AsSafeBoolean(VDS.RDF.Nodes.IValuedNode)
  isExtensionMethod: true
  parent: VDS.RDF.Nodes.ValuedNodeExtensions
  langs:
  - csharp
  - vb
  name: AsSafeBoolean(IValuedNode)
  nameWithType: ValuedNodeExtensions.AsSafeBoolean(IValuedNode)
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean(VDS.RDF.Nodes.IValuedNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Nodes/ValuedNodeExtensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsSafeBoolean
    path: ../../dotNetRDF/Libraries/dotNetRDF/Nodes/ValuedNodeExtensions.cs
    startLine: 254
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Nodes
  summary: "\nTries to get the result of calling <xref href=\"VDS.RDF.Nodes.IValuedNode.AsBoolean\" data-throw-if-not-resolved=\"false\"></xref> on a node throwing an error if the node is null.\n"
  example: []
  syntax:
    content: public static bool AsSafeBoolean(this IValuedNode n)
    parameters:
    - id: n
      type: VDS.RDF.Nodes.IValuedNode
      description: Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AsSafeBoolean(n As IValuedNode) As Boolean
  overload: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean*
  exceptions:
  - type: VDS.RDF.Query.RdfQueryException
    commentId: T:VDS.RDF.Query.RdfQueryException
    description: Thrown if the input is null of the specific valued node cannot be cast to a boolean.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Nodes.IValuedNode
  commentId: T:VDS.RDF.Nodes.IValuedNode
  parent: VDS.RDF.Nodes
  name: IValuedNode
  nameWithType: IValuedNode
  fullName: VDS.RDF.Nodes.IValuedNode
- uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode*
  commentId: Overload:VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  name: AsValuedNode
  nameWithType: ValuedNodeExtensions.AsValuedNode
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Nodes.IValuedNode.AsBoolean
  commentId: M:VDS.RDF.Nodes.IValuedNode.AsBoolean
  parent: VDS.RDF.Nodes.IValuedNode
  name: AsBoolean()
  nameWithType: IValuedNode.AsBoolean()
  fullName: VDS.RDF.Nodes.IValuedNode.AsBoolean()
  spec.csharp:
  - uid: VDS.RDF.Nodes.IValuedNode.AsBoolean
    name: AsBoolean
    nameWithType: IValuedNode.AsBoolean
    fullName: VDS.RDF.Nodes.IValuedNode.AsBoolean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.IValuedNode.AsBoolean
    name: AsBoolean
    nameWithType: IValuedNode.AsBoolean
    fullName: VDS.RDF.Nodes.IValuedNode.AsBoolean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.RdfQueryException
  commentId: T:VDS.RDF.Query.RdfQueryException
  parent: VDS.RDF.Query
  name: RdfQueryException
  nameWithType: RdfQueryException
  fullName: VDS.RDF.Query.RdfQueryException
- uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean*
  commentId: Overload:VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean
  name: AsSafeBoolean
  nameWithType: ValuedNodeExtensions.AsSafeBoolean
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
