### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.XmlSpecsHelper
  commentId: T:VDS.RDF.Parsing.XmlSpecsHelper
  id: XmlSpecsHelper
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(System.String,System.String)
  - VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(System.String,System.String,System.Boolean)
  - VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(VDS.RDF.INode,VDS.RDF.INode,System.Boolean)
  - VDS.RDF.Parsing.XmlSpecsHelper.GetSupportedDataType(VDS.RDF.INode)
  - VDS.RDF.Parsing.XmlSpecsHelper.IsName(System.String)
  - VDS.RDF.Parsing.XmlSpecsHelper.IsNameChar(System.Char)
  - VDS.RDF.Parsing.XmlSpecsHelper.IsNameStartChar(System.Char)
  - VDS.RDF.Parsing.XmlSpecsHelper.IsNCName(System.String)
  - VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType(System.String)
  - VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType(System.Uri)
  - VDS.RDF.Parsing.XmlSpecsHelper.NamespaceXml
  - VDS.RDF.Parsing.XmlSpecsHelper.NamespaceXmlNamespaces
  - VDS.RDF.Parsing.XmlSpecsHelper.NamespaceXmlSchema
  - VDS.RDF.Parsing.XmlSpecsHelper.SupportedTypes
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeAnyUri
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeBase64Binary
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeBoolean
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeByte
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDate
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDateTime
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDayTimeDuration
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDecimal
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDouble
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDuration
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeFloat
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeHexBinary
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeInt
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeInteger
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeLong
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeNegativeInteger
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeNonNegativeInteger
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeNonPositiveInteger
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypePositiveInteger
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeShort
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeString
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeTime
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedByte
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedInt
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedLong
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedShort
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDateFormat
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDateTimeFormat
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDateTimeFormatImprecise
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaTimeFormat
  - VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaTimeFormatImprecise
  langs:
  - csharp
  - vb
  name: XmlSpecsHelper
  nameWithType: XmlSpecsHelper
  fullName: VDS.RDF.Parsing.XmlSpecsHelper
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSpecsHelper
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 45
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nStatic Helper Class which contains a set of Functions which model Name and Character validations as laid\nout in the W3C XML and XML Namespaces specification.\n"
  remarks: "\nThese are needed in the XML/RDF Parser\n\nAlso contains the Date Time format string used to format .Net&apos;s DateTime type into a String whose format conforms to the XML Schema Datatypes specification.\n\n\n"
  example: []
  syntax:
    content: public static class XmlSpecsHelper
    content.vb: Public Module XmlSpecsHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Parsing.XmlSpecsHelper.NamespaceXml
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.NamespaceXml
  id: NamespaceXml
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: NamespaceXml
  nameWithType: XmlSpecsHelper.NamespaceXml
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.NamespaceXml
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NamespaceXml
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nNamespace for XML.\n"
  example: []
  syntax:
    content: public const string NamespaceXml = "http://www.w3.org/XML/1998/namespace"
    return:
      type: System.String
    content.vb: Public Const NamespaceXml As String = "http://www.w3.org/XML/1998/namespace"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.NamespaceXmlNamespaces
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.NamespaceXmlNamespaces
  id: NamespaceXmlNamespaces
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: NamespaceXmlNamespaces
  nameWithType: XmlSpecsHelper.NamespaceXmlNamespaces
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.NamespaceXmlNamespaces
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NamespaceXmlNamespaces
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nNamespace for XML Namespaces.\n"
  example: []
  syntax:
    content: public const string NamespaceXmlNamespaces = "http://www.w3.org/2000/xmlns/"
    return:
      type: System.String
    content.vb: Public Const NamespaceXmlNamespaces As String = "http://www.w3.org/2000/xmlns/"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.NamespaceXmlSchema
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.NamespaceXmlSchema
  id: NamespaceXmlSchema
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: NamespaceXmlSchema
  nameWithType: XmlSpecsHelper.NamespaceXmlSchema
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.NamespaceXmlSchema
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NamespaceXmlSchema
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 58
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nNamespace for XML Schema.\n"
  example: []
  syntax:
    content: public const string NamespaceXmlSchema = "http://www.w3.org/2001/XMLSchema#"
    return:
      type: System.String
    content.vb: Public Const NamespaceXmlSchema As String = "http://www.w3.org/2001/XMLSchema#"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDateTimeFormat
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDateTimeFormat
  id: XmlSchemaDateTimeFormat
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDateTimeFormat
  nameWithType: XmlSpecsHelper.XmlSchemaDateTimeFormat
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDateTimeFormat
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDateTimeFormat
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nDate Time Formatting string which meets the specified format for xsd:dateTime.\n"
  remarks: "\nUse with the <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to format a DateTime into appropriate string format.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDateTimeFormat = "yyyy-MM-dd\\THH:mm:ss.ffffffK"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDateTimeFormat As String = "yyyy-MM-dd\THH:mm:ss.ffffffK"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDateTimeFormatImprecise
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDateTimeFormatImprecise
  id: XmlSchemaDateTimeFormatImprecise
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDateTimeFormatImprecise
  nameWithType: XmlSpecsHelper.XmlSchemaDateTimeFormatImprecise
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDateTimeFormatImprecise
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDateTimeFormatImprecise
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 74
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nDate Time Formatting string which meets the specified format for xsd:dateTime, this formatting string is imprecise in the sense that it does not preserve the fractional seconds.\n"
  remarks: "\nUse with the <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to format a DateTime into appropriate string format.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDateTimeFormatImprecise = "yyyy-MM-dd\\THH:mm:ssK"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDateTimeFormatImprecise As String = "yyyy-MM-dd\THH:mm:ssK"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDateFormat
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDateFormat
  id: XmlSchemaDateFormat
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDateFormat
  nameWithType: XmlSpecsHelper.XmlSchemaDateFormat
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDateFormat
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDateFormat
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 82
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nDate Time Formatting string which meets the specified format for xsd:date.\n"
  remarks: "\nUse with the <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to format a DateTime into appropriate string format.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDateFormat = "yyyy-MM-ddK"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDateFormat As String = "yyyy-MM-ddK"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaTimeFormat
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaTimeFormat
  id: XmlSchemaTimeFormat
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaTimeFormat
  nameWithType: XmlSpecsHelper.XmlSchemaTimeFormat
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaTimeFormat
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaTimeFormat
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 90
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nDate Time Formatting string which meets the the specified format for xsd:time.\n"
  remarks: "\nUse with the <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to format a DateTime into appropriate string format.\n"
  example: []
  syntax:
    content: public const string XmlSchemaTimeFormat = "HH:mm:ss.ffffffK"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaTimeFormat As String = "HH:mm:ss.ffffffK"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaTimeFormatImprecise
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaTimeFormatImprecise
  id: XmlSchemaTimeFormatImprecise
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaTimeFormatImprecise
  nameWithType: XmlSpecsHelper.XmlSchemaTimeFormatImprecise
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaTimeFormatImprecise
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaTimeFormatImprecise
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 98
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nDate Time Formatting string which meets the the specified format for xsd:time, this formatting string is imprecise in the sense that it does not preserve the fractional seconds.\n"
  remarks: "\nUse with the <xref href=\"System.DateTime.ToString\" data-throw-if-not-resolved=\"false\"></xref> method to format a DateTime into appropriate string format.\n"
  example: []
  syntax:
    content: public const string XmlSchemaTimeFormatImprecise = "HH:mm:ssK"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaTimeFormatImprecise As String = "HH:mm:ssK"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeAnyUri
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeAnyUri
  id: XmlSchemaDataTypeAnyUri
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeAnyUri
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeAnyUri
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeAnyUri
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeAnyUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 105
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeAnyUri = "http://www.w3.org/2001/XMLSchema#anyURI"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeAnyUri As String = "http://www.w3.org/2001/XMLSchema#anyURI"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeBase64Binary
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeBase64Binary
  id: XmlSchemaDataTypeBase64Binary
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeBase64Binary
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeBase64Binary
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeBase64Binary
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeBase64Binary
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 106
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeBase64Binary = "http://www.w3.org/2001/XMLSchema#base64Binary"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeBase64Binary As String = "http://www.w3.org/2001/XMLSchema#base64Binary"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeBoolean
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeBoolean
  id: XmlSchemaDataTypeBoolean
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeBoolean
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeBoolean
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeBoolean
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeBoolean
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 107
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeBoolean = "http://www.w3.org/2001/XMLSchema#boolean"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeBoolean As String = "http://www.w3.org/2001/XMLSchema#boolean"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeByte
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeByte
  id: XmlSchemaDataTypeByte
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeByte
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeByte
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeByte
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeByte
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 108
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeByte = "http://www.w3.org/2001/XMLSchema#byte"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeByte As String = "http://www.w3.org/2001/XMLSchema#byte"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDate
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDate
  id: XmlSchemaDataTypeDate
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeDate
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeDate
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDate
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeDate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 109
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeDate = "http://www.w3.org/2001/XMLSchema#date"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeDate As String = "http://www.w3.org/2001/XMLSchema#date"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDateTime
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDateTime
  id: XmlSchemaDataTypeDateTime
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeDateTime
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeDateTime
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDateTime
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeDateTime
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 110
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeDateTime = "http://www.w3.org/2001/XMLSchema#dateTime"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeDateTime As String = "http://www.w3.org/2001/XMLSchema#dateTime"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDayTimeDuration
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDayTimeDuration
  id: XmlSchemaDataTypeDayTimeDuration
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeDayTimeDuration
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeDayTimeDuration
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDayTimeDuration
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeDayTimeDuration
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 111
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeDayTimeDuration = "http://www.w3.org/2001/XMLSchema#dayTimeDuration"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeDayTimeDuration As String = "http://www.w3.org/2001/XMLSchema#dayTimeDuration"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDuration
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDuration
  id: XmlSchemaDataTypeDuration
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeDuration
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeDuration
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDuration
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeDuration
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeDuration = "http://www.w3.org/2001/XMLSchema#duration"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeDuration As String = "http://www.w3.org/2001/XMLSchema#duration"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDecimal
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDecimal
  id: XmlSchemaDataTypeDecimal
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeDecimal
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeDecimal
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDecimal
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeDecimal
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 113
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeDecimal = "http://www.w3.org/2001/XMLSchema#decimal"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeDecimal As String = "http://www.w3.org/2001/XMLSchema#decimal"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDouble
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDouble
  id: XmlSchemaDataTypeDouble
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeDouble
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeDouble
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeDouble
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeDouble
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 114
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeDouble = "http://www.w3.org/2001/XMLSchema#double"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeDouble As String = "http://www.w3.org/2001/XMLSchema#double"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeFloat
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeFloat
  id: XmlSchemaDataTypeFloat
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeFloat
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeFloat
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeFloat
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeFloat
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 115
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeFloat = "http://www.w3.org/2001/XMLSchema#float"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeFloat As String = "http://www.w3.org/2001/XMLSchema#float"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeHexBinary
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeHexBinary
  id: XmlSchemaDataTypeHexBinary
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeHexBinary
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeHexBinary
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeHexBinary
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeHexBinary
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 116
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeHexBinary = "http://www.w3.org/2001/XMLSchema#hexBinary"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeHexBinary As String = "http://www.w3.org/2001/XMLSchema#hexBinary"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeInt
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeInt
  id: XmlSchemaDataTypeInt
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeInt
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeInt
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeInt
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeInt
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 117
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeInt = "http://www.w3.org/2001/XMLSchema#int"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeInt As String = "http://www.w3.org/2001/XMLSchema#int"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeInteger
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeInteger
  id: XmlSchemaDataTypeInteger
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeInteger
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeInteger
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeInteger
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeInteger
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 118
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeInteger = "http://www.w3.org/2001/XMLSchema#integer"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeInteger As String = "http://www.w3.org/2001/XMLSchema#integer"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeLong
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeLong
  id: XmlSchemaDataTypeLong
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeLong
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeLong
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeLong
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeLong
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 119
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeLong = "http://www.w3.org/2001/XMLSchema#long"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeLong As String = "http://www.w3.org/2001/XMLSchema#long"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeNegativeInteger
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeNegativeInteger
  id: XmlSchemaDataTypeNegativeInteger
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeNegativeInteger
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeNegativeInteger
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeNegativeInteger
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeNegativeInteger
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 120
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeNegativeInteger = "http://www.w3.org/2001/XMLSchema#negativeInteger"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeNegativeInteger As String = "http://www.w3.org/2001/XMLSchema#negativeInteger"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeNonNegativeInteger
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeNonNegativeInteger
  id: XmlSchemaDataTypeNonNegativeInteger
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeNonNegativeInteger
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeNonNegativeInteger
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeNonNegativeInteger
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeNonNegativeInteger
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 121
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeNonNegativeInteger = "http://www.w3.org/2001/XMLSchema#nonNegativeInteger"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeNonNegativeInteger As String = "http://www.w3.org/2001/XMLSchema#nonNegativeInteger"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeNonPositiveInteger
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeNonPositiveInteger
  id: XmlSchemaDataTypeNonPositiveInteger
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeNonPositiveInteger
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeNonPositiveInteger
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeNonPositiveInteger
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeNonPositiveInteger
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 122
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeNonPositiveInteger = "http://www.w3.org/2001/XMLSchema#nonPositiveInteger"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeNonPositiveInteger As String = "http://www.w3.org/2001/XMLSchema#nonPositiveInteger"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypePositiveInteger
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypePositiveInteger
  id: XmlSchemaDataTypePositiveInteger
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypePositiveInteger
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypePositiveInteger
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypePositiveInteger
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypePositiveInteger
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 123
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypePositiveInteger = "http://www.w3.org/2001/XMLSchema#positiveInteger"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypePositiveInteger As String = "http://www.w3.org/2001/XMLSchema#positiveInteger"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeShort
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeShort
  id: XmlSchemaDataTypeShort
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeShort
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeShort
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeShort
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeShort
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 124
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeShort = "http://www.w3.org/2001/XMLSchema#short"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeShort As String = "http://www.w3.org/2001/XMLSchema#short"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeTime
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeTime
  id: XmlSchemaDataTypeTime
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeTime
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeTime
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeTime
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeTime
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 125
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeTime = "http://www.w3.org/2001/XMLSchema#time"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeTime As String = "http://www.w3.org/2001/XMLSchema#time"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeString
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeString
  id: XmlSchemaDataTypeString
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeString
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeString
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeString
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 126
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeString = "http://www.w3.org/2001/XMLSchema#string"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeString As String = "http://www.w3.org/2001/XMLSchema#string"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedByte
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedByte
  id: XmlSchemaDataTypeUnsignedByte
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeUnsignedByte
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeUnsignedByte
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedByte
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeUnsignedByte
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 127
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeUnsignedByte = "http://www.w3.org/2001/XMLSchema#unsignedByte"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeUnsignedByte As String = "http://www.w3.org/2001/XMLSchema#unsignedByte"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedInt
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedInt
  id: XmlSchemaDataTypeUnsignedInt
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeUnsignedInt
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeUnsignedInt
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedInt
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeUnsignedInt
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 128
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeUnsignedInt = "http://www.w3.org/2001/XMLSchema#unsignedInt"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeUnsignedInt As String = "http://www.w3.org/2001/XMLSchema#unsignedInt"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedLong
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedLong
  id: XmlSchemaDataTypeUnsignedLong
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeUnsignedLong
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeUnsignedLong
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedLong
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeUnsignedLong
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 129
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeUnsignedLong = "http://www.w3.org/2001/XMLSchema#unsignedLong"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeUnsignedLong As String = "http://www.w3.org/2001/XMLSchema#unsignedLong"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedShort
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedShort
  id: XmlSchemaDataTypeUnsignedShort
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: XmlSchemaDataTypeUnsignedShort
  nameWithType: XmlSpecsHelper.XmlSchemaDataTypeUnsignedShort
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.XmlSchemaDataTypeUnsignedShort
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XmlSchemaDataTypeUnsignedShort
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 130
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nData Type Uri Constants for XML Schema Data Types.\n"
  example: []
  syntax:
    content: public const string XmlSchemaDataTypeUnsignedShort = "http://www.w3.org/2001/XMLSchema#unsignedShort"
    return:
      type: System.String
    content.vb: Public Const XmlSchemaDataTypeUnsignedShort As String = "http://www.w3.org/2001/XMLSchema#unsignedShort"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.XmlSpecsHelper.SupportedTypes
  commentId: F:VDS.RDF.Parsing.XmlSpecsHelper.SupportedTypes
  id: SupportedTypes
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: SupportedTypes
  nameWithType: XmlSpecsHelper.SupportedTypes
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.SupportedTypes
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SupportedTypes
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 135
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nArray of Constants for Data Types that are supported by the Literal Node CompareTo method.\n"
  example: []
  syntax:
    content: public static string[] SupportedTypes
    return:
      type: System.String[]
    content.vb: Public Shared SupportedTypes As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.XmlSpecsHelper.IsName(System.String)
  commentId: M:VDS.RDF.Parsing.XmlSpecsHelper.IsName(System.String)
  id: IsName(System.String)
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsName(String)
  nameWithType: XmlSpecsHelper.IsName(String)
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.IsName(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsName
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 171
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nReturns whether a String is a Name as defined by the W3C XML Specification.\n"
  example: []
  syntax:
    content: public static bool IsName(string name)
    parameters:
    - id: name
      type: System.String
      description: String to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsName(name As String) As Boolean
  overload: VDS.RDF.Parsing.XmlSpecsHelper.IsName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.XmlSpecsHelper.IsNCName(System.String)
  commentId: M:VDS.RDF.Parsing.XmlSpecsHelper.IsNCName(System.String)
  id: IsNCName(System.String)
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsNCName(String)
  nameWithType: XmlSpecsHelper.IsNCName(String)
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.IsNCName(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsNCName
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 207
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nReturns whether a String is a NCName as defined by the W3C XML Namespaces Specification.\n"
  example: []
  syntax:
    content: public static bool IsNCName(string name)
    parameters:
    - id: name
      type: System.String
      description: String to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsNCName(name As String) As Boolean
  overload: VDS.RDF.Parsing.XmlSpecsHelper.IsNCName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.XmlSpecsHelper.IsNameChar(System.Char)
  commentId: M:VDS.RDF.Parsing.XmlSpecsHelper.IsNameChar(System.Char)
  id: IsNameChar(System.Char)
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsNameChar(Char)
  nameWithType: XmlSpecsHelper.IsNameChar(Char)
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.IsNameChar(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsNameChar
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 218
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nReturns whether a Character is a NameChar as defined by the W3C XML Specification.\n"
  example: []
  syntax:
    content: public static bool IsNameChar(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character to Test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsNameChar(c As Char) As Boolean
  overload: VDS.RDF.Parsing.XmlSpecsHelper.IsNameChar*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.XmlSpecsHelper.IsNameStartChar(System.Char)
  commentId: M:VDS.RDF.Parsing.XmlSpecsHelper.IsNameStartChar(System.Char)
  id: IsNameStartChar(System.Char)
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsNameStartChar(Char)
  nameWithType: XmlSpecsHelper.IsNameStartChar(Char)
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.IsNameStartChar(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsNameStartChar
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 262
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nReturns whether a Character is a NameChar as defined by the W3C XML Specification.\n"
  example: []
  syntax:
    content: public static bool IsNameStartChar(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsNameStartChar(c As Char) As Boolean
  overload: VDS.RDF.Parsing.XmlSpecsHelper.IsNameStartChar*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType(System.String)
  commentId: M:VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType(System.String)
  id: IsSupportedType(System.String)
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsSupportedType(String)
  nameWithType: XmlSpecsHelper.IsSupportedType(String)
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSupportedType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 313
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nReturns whether the given Type refers to one of the types supported by the <xref href=\"VDS.RDF.LiteralNode\" data-throw-if-not-resolved=\"false\"></xref> CompareTo method.\n"
  example: []
  syntax:
    content: public static bool IsSupportedType(string type)
    parameters:
    - id: type
      type: System.String
      description: Data Type Uri.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsSupportedType(type As String) As Boolean
  overload: VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType(System.Uri)
  commentId: M:VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType(System.Uri)
  id: IsSupportedType(System.Uri)
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsSupportedType(Uri)
  nameWithType: XmlSpecsHelper.IsSupportedType(Uri)
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSupportedType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 323
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nReturns whether the given Type refers to one of the types supported by the <xref href=\"VDS.RDF.LiteralNode\" data-throw-if-not-resolved=\"false\"></xref> CompareTo method.\n"
  example: []
  syntax:
    content: public static bool IsSupportedType(Uri type)
    parameters:
    - id: type
      type: System.Uri
      description: Data Type Uri.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsSupportedType(type As Uri) As Boolean
  overload: VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.XmlSpecsHelper.GetSupportedDataType(VDS.RDF.INode)
  commentId: M:VDS.RDF.Parsing.XmlSpecsHelper.GetSupportedDataType(VDS.RDF.INode)
  id: GetSupportedDataType(VDS.RDF.INode)
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: GetSupportedDataType(INode)
  nameWithType: XmlSpecsHelper.GetSupportedDataType(INode)
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.GetSupportedDataType(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSupportedDataType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 342
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets the Data Type Uri of the given Node if it has a supported type.\n"
  remarks: "\n<p>\nOnly <xref href=\"VDS.RDF.ILiteralNode\" data-throw-if-not-resolved=\"false\"></xref>&apos;s can have a Data Type.\n</p>\n<p>\nThe function only returns the Data Type Uri (as a String) if the Data Type of the Literal is one of the supported Data Types.\n</p>\n"
  example: []
  syntax:
    content: public static string GetSupportedDataType(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetSupportedDataType(n As INode) As String
  overload: VDS.RDF.Parsing.XmlSpecsHelper.GetSupportedDataType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(VDS.RDF.INode,VDS.RDF.INode,System.Boolean)
  commentId: M:VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(VDS.RDF.INode,VDS.RDF.INode,System.Boolean)
  id: GetCompatibleSupportedDataType(VDS.RDF.INode,VDS.RDF.INode,System.Boolean)
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: GetCompatibleSupportedDataType(INode, INode, Boolean)
  nameWithType: XmlSpecsHelper.GetCompatibleSupportedDataType(INode, INode, Boolean)
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(VDS.RDF.INode, VDS.RDF.INode, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetCompatibleSupportedDataType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 394
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets the Compatible Supported Data Type assuming the two Nodes are Literals with support types and that those types are compatible.\n"
  remarks: "\n<p>\nCurrently this is only immplemented sufficiently for the types it needs to know are compatible for implementing SPARQL equality and ordering semantics.\n</p>\n"
  example: []
  syntax:
    content: public static string GetCompatibleSupportedDataType(INode x, INode y, bool widen)
    parameters:
    - id: x
      type: VDS.RDF.INode
      description: A Node.
    - id: y
      type: VDS.RDF.INode
      description: A Node.
    - id: widen
      type: System.Boolean
      description: Whether the compatible type should be the wider type.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetCompatibleSupportedDataType(x As INode, y As INode, widen As Boolean) As String
  overload: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(VDS.RDF.INode,VDS.RDF.INode)
  id: GetCompatibleSupportedDataType(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: GetCompatibleSupportedDataType(INode, INode)
  nameWithType: XmlSpecsHelper.GetCompatibleSupportedDataType(INode, INode)
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetCompatibleSupportedDataType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 410
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets the Compatible Supported Data Type assuming the two Nodes are Literals with support types and that those types are compatible.\n"
  remarks: "\n<p>\nCurrently this is only immplemented sufficiently for the types it needs to know are compatible for implementing SPARQL equality and ordering semantics.\n</p>\n"
  example: []
  syntax:
    content: public static string GetCompatibleSupportedDataType(INode x, INode y)
    parameters:
    - id: x
      type: VDS.RDF.INode
      description: A Node.
    - id: y
      type: VDS.RDF.INode
      description: A Node.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetCompatibleSupportedDataType(x As INode, y As INode) As String
  overload: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(System.String,System.String)
  commentId: M:VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(System.String,System.String)
  id: GetCompatibleSupportedDataType(System.String,System.String)
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: GetCompatibleSupportedDataType(String, String)
  nameWithType: XmlSpecsHelper.GetCompatibleSupportedDataType(String, String)
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetCompatibleSupportedDataType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 426
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets the Compatible Supported Data Type for the two Data Types.\n"
  remarks: "\n<p>\nCurrently this is only immplemented sufficiently for the types it needs to know are compatible for implementing SPARQL equality and ordering semantics.\n</p>\n"
  example: []
  syntax:
    content: public static string GetCompatibleSupportedDataType(string type1, string type2)
    parameters:
    - id: type1
      type: System.String
      description: A Data Type.
    - id: type2
      type: System.String
      description: A Data Type.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetCompatibleSupportedDataType(type1 As String, type2 As String) As String
  overload: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(System.String,System.String,System.Boolean)
  commentId: M:VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(System.String,System.String,System.Boolean)
  id: GetCompatibleSupportedDataType(System.String,System.String,System.Boolean)
  parent: VDS.RDF.Parsing.XmlSpecsHelper
  langs:
  - csharp
  - vb
  name: GetCompatibleSupportedDataType(String, String, Boolean)
  nameWithType: XmlSpecsHelper.GetCompatibleSupportedDataType(String, String, Boolean)
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType(System.String, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetCompatibleSupportedDataType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/XMLSpecsHelper.cs
    startLine: 443
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets the Compatible Supported Data Type for the two Data Types.\n"
  remarks: "\n<p>\nCurrently this is only immplemented sufficiently for the types it needs to know are compatible for implementing SPARQL equality and ordering semantics.\n</p>\n"
  example: []
  syntax:
    content: public static string GetCompatibleSupportedDataType(string type1, string type2, bool widen)
    parameters:
    - id: type1
      type: System.String
      description: A Data Type.
    - id: type2
      type: System.String
      description: A Data Type.
    - id: widen
      type: System.Boolean
      description: Whether the compatible type should be the wider type.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetCompatibleSupportedDataType(type1 As String, type2 As String, widen As Boolean) As String
  overload: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DateTime.ToString
  commentId: M:System.DateTime.ToString
  isExternal: true
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: VDS.RDF.Parsing.XmlSpecsHelper.IsName*
  commentId: Overload:VDS.RDF.Parsing.XmlSpecsHelper.IsName
  name: IsName
  nameWithType: XmlSpecsHelper.IsName
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.IsName
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Parsing.XmlSpecsHelper.IsNCName*
  commentId: Overload:VDS.RDF.Parsing.XmlSpecsHelper.IsNCName
  name: IsNCName
  nameWithType: XmlSpecsHelper.IsNCName
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.IsNCName
- uid: VDS.RDF.Parsing.XmlSpecsHelper.IsNameChar*
  commentId: Overload:VDS.RDF.Parsing.XmlSpecsHelper.IsNameChar
  name: IsNameChar
  nameWithType: XmlSpecsHelper.IsNameChar
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.IsNameChar
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: VDS.RDF.Parsing.XmlSpecsHelper.IsNameStartChar*
  commentId: Overload:VDS.RDF.Parsing.XmlSpecsHelper.IsNameStartChar
  name: IsNameStartChar
  nameWithType: XmlSpecsHelper.IsNameStartChar
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.IsNameStartChar
- uid: VDS.RDF.LiteralNode
  commentId: T:VDS.RDF.LiteralNode
  parent: VDS.RDF
  name: LiteralNode
  nameWithType: LiteralNode
  fullName: VDS.RDF.LiteralNode
- uid: VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType*
  commentId: Overload:VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType
  name: IsSupportedType
  nameWithType: XmlSpecsHelper.IsSupportedType
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.IsSupportedType
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: VDS.RDF.Parsing.XmlSpecsHelper.GetSupportedDataType*
  commentId: Overload:VDS.RDF.Parsing.XmlSpecsHelper.GetSupportedDataType
  name: GetSupportedDataType
  nameWithType: XmlSpecsHelper.GetSupportedDataType
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.GetSupportedDataType
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType*
  commentId: Overload:VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType
  name: GetCompatibleSupportedDataType
  nameWithType: XmlSpecsHelper.GetCompatibleSupportedDataType
  fullName: VDS.RDF.Parsing.XmlSpecsHelper.GetCompatibleSupportedDataType
