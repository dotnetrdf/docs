### YamlMime:ManagedReference
items:
- uid: VDS.RDF.BlankNodeMapper
  commentId: T:VDS.RDF.BlankNodeMapper
  id: BlankNodeMapper
  parent: VDS.RDF
  children:
  - VDS.RDF.BlankNodeMapper.#ctor
  - VDS.RDF.BlankNodeMapper.#ctor(System.String)
  - VDS.RDF.BlankNodeMapper.CheckID(System.String@)
  - VDS.RDF.BlankNodeMapper.GetNextID
  langs:
  - csharp
  - vb
  name: BlankNodeMapper
  nameWithType: BlankNodeMapper
  fullName: VDS.RDF.BlankNodeMapper
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BlankNodeMapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BlankNodeMapper
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/BlankNodeMapper.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMapper class which creates Blank Node IDs and ensures that auto-assigned and user specified IDs don&apos;t collide.\n"
  example: []
  syntax:
    content: public class BlankNodeMapper
    content.vb: Public Class BlankNodeMapper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.BlankNodeMapper.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.BlankNodeMapper.#ctor
  commentId: M:VDS.RDF.BlankNodeMapper.#ctor
  id: '#ctor'
  parent: VDS.RDF.BlankNodeMapper
  langs:
  - csharp
  - vb
  name: BlankNodeMapper()
  nameWithType: BlankNodeMapper.BlankNodeMapper()
  fullName: VDS.RDF.BlankNodeMapper.BlankNodeMapper()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BlankNodeMapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/BlankNodeMapper.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Blank Node Mapper.\n"
  example: []
  syntax:
    content: public BlankNodeMapper()
    content.vb: Public Sub New
  overload: VDS.RDF.BlankNodeMapper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BlankNodeMapper.#ctor(System.String)
  commentId: M:VDS.RDF.BlankNodeMapper.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VDS.RDF.BlankNodeMapper
  langs:
  - csharp
  - vb
  name: BlankNodeMapper(String)
  nameWithType: BlankNodeMapper.BlankNodeMapper(String)
  fullName: VDS.RDF.BlankNodeMapper.BlankNodeMapper(System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BlankNodeMapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/BlankNodeMapper.cs
    startLine: 53
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Blank Node Mapper that uses a custom Prefix.\n"
  example: []
  syntax:
    content: public BlankNodeMapper(string prefix)
    parameters:
    - id: prefix
      type: System.String
      description: Prefix.
    content.vb: Public Sub New(prefix As String)
  overload: VDS.RDF.BlankNodeMapper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BlankNodeMapper.GetNextID
  commentId: M:VDS.RDF.BlankNodeMapper.GetNextID
  id: GetNextID
  parent: VDS.RDF.BlankNodeMapper
  langs:
  - csharp
  - vb
  name: GetNextID()
  nameWithType: BlankNodeMapper.GetNextID()
  fullName: VDS.RDF.BlankNodeMapper.GetNextID()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BlankNodeMapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetNextID
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/BlankNodeMapper.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the next available auto-assigned Blank Node ID.\n"
  example: []
  syntax:
    content: public string GetNextID()
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetNextID As String
  overload: VDS.RDF.BlankNodeMapper.GetNextID*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BlankNodeMapper.CheckID(System.String@)
  commentId: M:VDS.RDF.BlankNodeMapper.CheckID(System.String@)
  id: CheckID(System.String@)
  parent: VDS.RDF.BlankNodeMapper
  langs:
  - csharp
  - vb
  name: CheckID(ref String)
  nameWithType: BlankNodeMapper.CheckID(ref String)
  fullName: VDS.RDF.BlankNodeMapper.CheckID(ref System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BlankNodeMapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CheckID
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/BlankNodeMapper.cs
    startLine: 86
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks that an ID can be used as a Blank Node ID remapping it to another ID if necessary.\n"
  remarks: "\nIf the ID is not known it is added to the ID maps.  If the ID is known but is user-assigned then this can be used fine.  If the ID is known and was auto-assigned then it has to be remapped to a different ID.\n"
  example: []
  syntax:
    content: public void CheckID(ref string id)
    parameters:
    - id: id
      type: System.String
      description: ID to be checked.
    content.vb: Public Sub CheckID(ByRef id As String)
  overload: VDS.RDF.BlankNodeMapper.CheckID*
  nameWithType.vb: BlankNodeMapper.CheckID(ByRef String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.BlankNodeMapper.CheckID(ByRef System.String)
  name.vb: CheckID(ByRef String)
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BlankNodeMapper.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BlankNodeMapper>()
  nameWithType: Extensions.AsEnumerable<BlankNodeMapper>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.BlankNodeMapper>()
  nameWithType.vb: Extensions.AsEnumerable(Of BlankNodeMapper)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.BlankNodeMapper)()
  name.vb: AsEnumerable(Of BlankNodeMapper)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BlankNodeMapper>
    nameWithType: Extensions.AsEnumerable<BlankNodeMapper>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.BlankNodeMapper>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BlankNodeMapper)
    nameWithType: Extensions.AsEnumerable(Of BlankNodeMapper)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.BlankNodeMapper)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.BlankNodeMapper.#ctor*
  commentId: Overload:VDS.RDF.BlankNodeMapper.#ctor
  name: BlankNodeMapper
  nameWithType: BlankNodeMapper.BlankNodeMapper
  fullName: VDS.RDF.BlankNodeMapper.BlankNodeMapper
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.BlankNodeMapper.GetNextID*
  commentId: Overload:VDS.RDF.BlankNodeMapper.GetNextID
  name: GetNextID
  nameWithType: BlankNodeMapper.GetNextID
  fullName: VDS.RDF.BlankNodeMapper.GetNextID
- uid: VDS.RDF.BlankNodeMapper.CheckID*
  commentId: Overload:VDS.RDF.BlankNodeMapper.CheckID
  name: CheckID
  nameWithType: BlankNodeMapper.CheckID
  fullName: VDS.RDF.BlankNodeMapper.CheckID
