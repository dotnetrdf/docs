### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Tokens.ITokeniser
  commentId: T:VDS.RDF.Parsing.Tokens.ITokeniser
  id: ITokeniser
  parent: VDS.RDF.Parsing.Tokens
  children:
  - VDS.RDF.Parsing.Tokens.ITokeniser.GetNextToken
  langs:
  - csharp
  - vb
  name: ITokeniser
  nameWithType: ITokeniser
  fullName: VDS.RDF.Parsing.Tokens.ITokeniser
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokeniser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ITokeniser
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Tokens/ITokeniser.cs
    startLine: 53
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nInterface for Tokenisers.\n"
  remarks: "\nA Tokeniser is a class that takes an input stream and produces textual tokens from it for use in token based parsers.\n"
  example: []
  syntax:
    content: public interface ITokeniser
    content.vb: Public Interface ITokeniser
  extensionMethods:
  - VDS.RDF.Parsing.Tokens.ITokeniser.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Parsing.Tokens.ITokeniser.GetNextToken
  commentId: M:VDS.RDF.Parsing.Tokens.ITokeniser.GetNextToken
  id: GetNextToken
  parent: VDS.RDF.Parsing.Tokens.ITokeniser
  langs:
  - csharp
  - vb
  name: GetNextToken()
  nameWithType: ITokeniser.GetNextToken()
  fullName: VDS.RDF.Parsing.Tokens.ITokeniser.GetNextToken()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokeniser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetNextToken
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Tokens/ITokeniser.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nCauses the Tokeniser to attempt to retrieve the next Token.\n"
  example: []
  syntax:
    content: IToken GetNextToken()
    return:
      type: VDS.RDF.Parsing.Tokens.IToken
      description: ''
    content.vb: Function GetNextToken As IToken
  overload: VDS.RDF.Parsing.Tokens.ITokeniser.GetNextToken*
  exceptions:
  - type: VDS.RDF.Parsing.RdfParseException
    commentId: T:VDS.RDF.Parsing.RdfParseException
    description: Thrown if a valid Token cannot be parsed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: Thrown if there is a problem reading the Input Stream.
references:
- uid: VDS.RDF.Parsing.Tokens
  commentId: N:VDS.RDF.Parsing.Tokens
  name: VDS.RDF.Parsing.Tokens
  nameWithType: VDS.RDF.Parsing.Tokens
  fullName: VDS.RDF.Parsing.Tokens
- uid: VDS.RDF.Parsing.Tokens.ITokeniser.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ITokeniser>()
  nameWithType: Extensions.AsEnumerable<ITokeniser>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Tokens.ITokeniser>()
  nameWithType.vb: Extensions.AsEnumerable(Of ITokeniser)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Tokens.ITokeniser)()
  name.vb: AsEnumerable(Of ITokeniser)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ITokeniser>
    nameWithType: Extensions.AsEnumerable<ITokeniser>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Tokens.ITokeniser>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ITokeniser)
    nameWithType: Extensions.AsEnumerable(Of ITokeniser)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Tokens.ITokeniser)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.RdfParseException
  commentId: T:VDS.RDF.Parsing.RdfParseException
  parent: VDS.RDF.Parsing
  name: RdfParseException
  nameWithType: RdfParseException
  fullName: VDS.RDF.Parsing.RdfParseException
- uid: System.IO.IOException
  commentId: T:System.IO.IOException
  isExternal: true
- uid: VDS.RDF.Parsing.Tokens.ITokeniser.GetNextToken*
  commentId: Overload:VDS.RDF.Parsing.Tokens.ITokeniser.GetNextToken
  name: GetNextToken
  nameWithType: ITokeniser.GetNextToken
  fullName: VDS.RDF.Parsing.Tokens.ITokeniser.GetNextToken
- uid: VDS.RDF.Parsing.Tokens.IToken
  commentId: T:VDS.RDF.Parsing.Tokens.IToken
  parent: VDS.RDF.Parsing.Tokens
  name: IToken
  nameWithType: IToken
  fullName: VDS.RDF.Parsing.Tokens.IToken
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
