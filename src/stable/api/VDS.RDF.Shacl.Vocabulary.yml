### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Shacl.Vocabulary
  commentId: T:VDS.RDF.Shacl.Vocabulary
  id: Vocabulary
  parent: VDS.RDF.Shacl
  children:
  - VDS.RDF.Shacl.Vocabulary.AlternativePath
  - VDS.RDF.Shacl.Vocabulary.And
  - VDS.RDF.Shacl.Vocabulary.AndConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.Ask
  - VDS.RDF.Shacl.Vocabulary.BaseUri
  - VDS.RDF.Shacl.Vocabulary.BlankNode
  - VDS.RDF.Shacl.Vocabulary.BlankNodeKinds
  - VDS.RDF.Shacl.Vocabulary.BlankNodeOrIri
  - VDS.RDF.Shacl.Vocabulary.BlankNodeOrLiteral
  - VDS.RDF.Shacl.Vocabulary.Class
  - VDS.RDF.Shacl.Vocabulary.ClassConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.Closed
  - VDS.RDF.Shacl.Vocabulary.ClosedConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.Conforms
  - VDS.RDF.Shacl.Vocabulary.ConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.Constraints
  - VDS.RDF.Shacl.Vocabulary.Datatype
  - VDS.RDF.Shacl.Vocabulary.DatatypeConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.Deactivated
  - VDS.RDF.Shacl.Vocabulary.Declare
  - VDS.RDF.Shacl.Vocabulary.Disjoint
  - VDS.RDF.Shacl.Vocabulary.DisjointConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.EqualsConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.EqualsNode
  - VDS.RDF.Shacl.Vocabulary.Flags
  - VDS.RDF.Shacl.Vocabulary.FocusNode
  - VDS.RDF.Shacl.Vocabulary.HasValue
  - VDS.RDF.Shacl.Vocabulary.HasValueConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.IgnoredProperties
  - VDS.RDF.Shacl.Vocabulary.In
  - VDS.RDF.Shacl.Vocabulary.InConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.InversePath
  - VDS.RDF.Shacl.Vocabulary.Iri
  - VDS.RDF.Shacl.Vocabulary.IriNodeKinds
  - VDS.RDF.Shacl.Vocabulary.IriOrLiteral
  - VDS.RDF.Shacl.Vocabulary.LanguageIn
  - VDS.RDF.Shacl.Vocabulary.LanguageInConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.LessThan
  - VDS.RDF.Shacl.Vocabulary.LessThanConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.LessThanOrEquals
  - VDS.RDF.Shacl.Vocabulary.LessThanOrEqualsConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.Literal
  - VDS.RDF.Shacl.Vocabulary.LiteralNodeKinds
  - VDS.RDF.Shacl.Vocabulary.MaxCount
  - VDS.RDF.Shacl.Vocabulary.MaxCountConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.MaxExclusive
  - VDS.RDF.Shacl.Vocabulary.MaxExclusiveConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.MaxInclusive
  - VDS.RDF.Shacl.Vocabulary.MaxInclusiveConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.MaxLength
  - VDS.RDF.Shacl.Vocabulary.MaxLengthConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.Message
  - VDS.RDF.Shacl.Vocabulary.MinCount
  - VDS.RDF.Shacl.Vocabulary.MinCountConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.MinExclusive
  - VDS.RDF.Shacl.Vocabulary.MinExclusiveConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.MinInclusive
  - VDS.RDF.Shacl.Vocabulary.MinInclusiveConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.MinLength
  - VDS.RDF.Shacl.Vocabulary.MinLengthConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.Namespace
  - VDS.RDF.Shacl.Vocabulary.Node
  - VDS.RDF.Shacl.Vocabulary.NodeConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.NodeKind
  - VDS.RDF.Shacl.Vocabulary.NodeKindConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.NodeShape
  - VDS.RDF.Shacl.Vocabulary.NodeValidator
  - VDS.RDF.Shacl.Vocabulary.Not
  - VDS.RDF.Shacl.Vocabulary.NotConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.OneOrMorePath
  - VDS.RDF.Shacl.Vocabulary.Optional
  - VDS.RDF.Shacl.Vocabulary.Or
  - VDS.RDF.Shacl.Vocabulary.OrConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.Parameter
  - VDS.RDF.Shacl.Vocabulary.Path
  - VDS.RDF.Shacl.Vocabulary.Pattern
  - VDS.RDF.Shacl.Vocabulary.PatternConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.PredicatesToExpandInReport
  - VDS.RDF.Shacl.Vocabulary.Prefix
  - VDS.RDF.Shacl.Vocabulary.Prefixes
  - VDS.RDF.Shacl.Vocabulary.Property
  - VDS.RDF.Shacl.Vocabulary.PropertyConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.PropertyShape
  - VDS.RDF.Shacl.Vocabulary.PropertyValidator
  - VDS.RDF.Shacl.Vocabulary.QualifiedMaxCount
  - VDS.RDF.Shacl.Vocabulary.QualifiedMaxCountConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.QualifiedMinCount
  - VDS.RDF.Shacl.Vocabulary.QualifiedMinCountConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.QualifiedValueShape
  - VDS.RDF.Shacl.Vocabulary.QualifiedValueShapesDisjoint
  - VDS.RDF.Shacl.Vocabulary.Result
  - VDS.RDF.Shacl.Vocabulary.ResultMessage
  - VDS.RDF.Shacl.Vocabulary.ResultPath
  - VDS.RDF.Shacl.Vocabulary.ResultSeverity
  - VDS.RDF.Shacl.Vocabulary.Select
  - VDS.RDF.Shacl.Vocabulary.Severity
  - VDS.RDF.Shacl.Vocabulary.Shapes
  - VDS.RDF.Shacl.Vocabulary.SourceConstraint
  - VDS.RDF.Shacl.Vocabulary.SourceConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.SourceShape
  - VDS.RDF.Shacl.Vocabulary.Sparql
  - VDS.RDF.Shacl.Vocabulary.SparqlAskValidato
  - VDS.RDF.Shacl.Vocabulary.SparqlConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.TargetClass
  - VDS.RDF.Shacl.Vocabulary.TargetNode
  - VDS.RDF.Shacl.Vocabulary.TargetObjectsOf
  - VDS.RDF.Shacl.Vocabulary.Targets
  - VDS.RDF.Shacl.Vocabulary.TargetSubjectsOf
  - VDS.RDF.Shacl.Vocabulary.UniqueLang
  - VDS.RDF.Shacl.Vocabulary.UniqueLangConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.ValidationReport
  - VDS.RDF.Shacl.Vocabulary.ValidationResult
  - VDS.RDF.Shacl.Vocabulary.Validator
  - VDS.RDF.Shacl.Vocabulary.Value
  - VDS.RDF.Shacl.Vocabulary.Violation
  - VDS.RDF.Shacl.Vocabulary.Xone
  - VDS.RDF.Shacl.Vocabulary.XoneConstraintComponent
  - VDS.RDF.Shacl.Vocabulary.ZeroOrMorePath
  - VDS.RDF.Shacl.Vocabulary.ZeroOrOnePath
  langs:
  - csharp
  - vb
  name: Vocabulary
  nameWithType: Vocabulary
  fullName: VDS.RDF.Shacl.Vocabulary
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Vocabulary
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nRepresents the SHACL vocabulary.\n"
  example: []
  syntax:
    content: public static class Vocabulary
    content.vb: Public Module Vocabulary
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Shacl.Vocabulary.BaseUri
  commentId: F:VDS.RDF.Shacl.Vocabulary.BaseUri
  id: BaseUri
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: Vocabulary.BaseUri
  fullName: VDS.RDF.Shacl.Vocabulary.BaseUri
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nThe SHACL base URI.\n"
  example: []
  syntax:
    content: public const string BaseUri = "http://www.w3.org/ns/shacl#"
    return:
      type: System.String
    content.vb: Public Const BaseUri As String = "http://www.w3.org/ns/shacl#"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Shacl.Vocabulary.AlternativePath
  commentId: P:VDS.RDF.Shacl.Vocabulary.AlternativePath
  id: AlternativePath
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: AlternativePath
  nameWithType: Vocabulary.AlternativePath
  fullName: VDS.RDF.Shacl.Vocabulary.AlternativePath
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AlternativePath
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 48
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing alternativePath.\n"
  example: []
  syntax:
    content: public static IUriNode AlternativePath { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property AlternativePath As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.AlternativePath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.And
  commentId: P:VDS.RDF.Shacl.Vocabulary.And
  id: And
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: And
  nameWithType: Vocabulary.And
  fullName: VDS.RDF.Shacl.Vocabulary.And
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: And
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 53
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing and.\n"
  example: []
  syntax:
    content: public static IUriNode And { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property And As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.And*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.AndConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.AndConstraintComponent
  id: AndConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: AndConstraintComponent
  nameWithType: Vocabulary.AndConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.AndConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AndConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 58
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing AndConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode AndConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property AndConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.AndConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Ask
  commentId: P:VDS.RDF.Shacl.Vocabulary.Ask
  id: Ask
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Ask
  nameWithType: Vocabulary.Ask
  fullName: VDS.RDF.Shacl.Vocabulary.Ask
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Ask
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing ask.\n"
  example: []
  syntax:
    content: public static IUriNode Ask { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Ask As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Ask*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.BlankNode
  commentId: P:VDS.RDF.Shacl.Vocabulary.BlankNode
  id: BlankNode
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: BlankNode
  nameWithType: Vocabulary.BlankNode
  fullName: VDS.RDF.Shacl.Vocabulary.BlankNode
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BlankNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 68
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing BlankNode.\n"
  example: []
  syntax:
    content: public static IUriNode BlankNode { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property BlankNode As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.BlankNode*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.BlankNodeOrIri
  commentId: P:VDS.RDF.Shacl.Vocabulary.BlankNodeOrIri
  id: BlankNodeOrIri
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: BlankNodeOrIri
  nameWithType: Vocabulary.BlankNodeOrIri
  fullName: VDS.RDF.Shacl.Vocabulary.BlankNodeOrIri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BlankNodeOrIri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 73
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing BlankNodeOrIRI.\n"
  example: []
  syntax:
    content: public static IUriNode BlankNodeOrIri { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property BlankNodeOrIri As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.BlankNodeOrIri*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.BlankNodeOrLiteral
  commentId: P:VDS.RDF.Shacl.Vocabulary.BlankNodeOrLiteral
  id: BlankNodeOrLiteral
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: BlankNodeOrLiteral
  nameWithType: Vocabulary.BlankNodeOrLiteral
  fullName: VDS.RDF.Shacl.Vocabulary.BlankNodeOrLiteral
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BlankNodeOrLiteral
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing BlankNodeOrLiteral.\n"
  example: []
  syntax:
    content: public static IUriNode BlankNodeOrLiteral { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property BlankNodeOrLiteral As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.BlankNodeOrLiteral*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Class
  commentId: P:VDS.RDF.Shacl.Vocabulary.Class
  id: Class
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Class
  nameWithType: Vocabulary.Class
  fullName: VDS.RDF.Shacl.Vocabulary.Class
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Class
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 83
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing class.\n"
  example: []
  syntax:
    content: public static IUriNode Class { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Class As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Class*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.ClassConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.ClassConstraintComponent
  id: ClassConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: ClassConstraintComponent
  nameWithType: Vocabulary.ClassConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.ClassConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ClassConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 88
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing ClassConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode ClassConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property ClassConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.ClassConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Closed
  commentId: P:VDS.RDF.Shacl.Vocabulary.Closed
  id: Closed
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Closed
  nameWithType: Vocabulary.Closed
  fullName: VDS.RDF.Shacl.Vocabulary.Closed
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Closed
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 93
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing closed.\n"
  example: []
  syntax:
    content: public static IUriNode Closed { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Closed As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Closed*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.ClosedConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.ClosedConstraintComponent
  id: ClosedConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: ClosedConstraintComponent
  nameWithType: Vocabulary.ClosedConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.ClosedConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ClosedConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 98
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing ClosedConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode ClosedConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property ClosedConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.ClosedConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Conforms
  commentId: P:VDS.RDF.Shacl.Vocabulary.Conforms
  id: Conforms
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Conforms
  nameWithType: Vocabulary.Conforms
  fullName: VDS.RDF.Shacl.Vocabulary.Conforms
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Conforms
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 103
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing conforms.\n"
  example: []
  syntax:
    content: public static IUriNode Conforms { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Conforms As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Conforms*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.ConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.ConstraintComponent
  id: ConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: ConstraintComponent
  nameWithType: Vocabulary.ConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.ConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 108
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing ConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode ConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property ConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.ConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Datatype
  commentId: P:VDS.RDF.Shacl.Vocabulary.Datatype
  id: Datatype
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Datatype
  nameWithType: Vocabulary.Datatype
  fullName: VDS.RDF.Shacl.Vocabulary.Datatype
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Datatype
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 113
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing datatype.\n"
  example: []
  syntax:
    content: public static IUriNode Datatype { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Datatype As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Datatype*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.DatatypeConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.DatatypeConstraintComponent
  id: DatatypeConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: DatatypeConstraintComponent
  nameWithType: Vocabulary.DatatypeConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.DatatypeConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DatatypeConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 118
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing DatatypeConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode DatatypeConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property DatatypeConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.DatatypeConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Deactivated
  commentId: P:VDS.RDF.Shacl.Vocabulary.Deactivated
  id: Deactivated
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Deactivated
  nameWithType: Vocabulary.Deactivated
  fullName: VDS.RDF.Shacl.Vocabulary.Deactivated
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Deactivated
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 123
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing deactivated.\n"
  example: []
  syntax:
    content: public static IUriNode Deactivated { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Deactivated As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Deactivated*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Declare
  commentId: P:VDS.RDF.Shacl.Vocabulary.Declare
  id: Declare
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Declare
  nameWithType: Vocabulary.Declare
  fullName: VDS.RDF.Shacl.Vocabulary.Declare
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Declare
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 128
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing declare.\n"
  example: []
  syntax:
    content: public static IUriNode Declare { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Declare As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Declare*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Disjoint
  commentId: P:VDS.RDF.Shacl.Vocabulary.Disjoint
  id: Disjoint
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Disjoint
  nameWithType: Vocabulary.Disjoint
  fullName: VDS.RDF.Shacl.Vocabulary.Disjoint
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Disjoint
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 133
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing disjoint.\n"
  example: []
  syntax:
    content: public static IUriNode Disjoint { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Disjoint As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Disjoint*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.DisjointConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.DisjointConstraintComponent
  id: DisjointConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: DisjointConstraintComponent
  nameWithType: Vocabulary.DisjointConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.DisjointConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DisjointConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 138
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing DisjointConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode DisjointConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property DisjointConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.DisjointConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.EqualsConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.EqualsConstraintComponent
  id: EqualsConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: EqualsConstraintComponent
  nameWithType: Vocabulary.EqualsConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.EqualsConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EqualsConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 143
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing EqualsConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode EqualsConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property EqualsConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.EqualsConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.EqualsNode
  commentId: P:VDS.RDF.Shacl.Vocabulary.EqualsNode
  id: EqualsNode
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: EqualsNode
  nameWithType: Vocabulary.EqualsNode
  fullName: VDS.RDF.Shacl.Vocabulary.EqualsNode
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EqualsNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 148
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing equals.\n"
  example: []
  syntax:
    content: public static IUriNode EqualsNode { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property EqualsNode As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.EqualsNode*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Flags
  commentId: P:VDS.RDF.Shacl.Vocabulary.Flags
  id: Flags
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: Vocabulary.Flags
  fullName: VDS.RDF.Shacl.Vocabulary.Flags
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Flags
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 153
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing flags.\n"
  example: []
  syntax:
    content: public static IUriNode Flags { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Flags As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Flags*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.FocusNode
  commentId: P:VDS.RDF.Shacl.Vocabulary.FocusNode
  id: FocusNode
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: FocusNode
  nameWithType: Vocabulary.FocusNode
  fullName: VDS.RDF.Shacl.Vocabulary.FocusNode
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FocusNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 158
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing focusNode.\n"
  example: []
  syntax:
    content: public static IUriNode FocusNode { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property FocusNode As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.FocusNode*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.HasValue
  commentId: P:VDS.RDF.Shacl.Vocabulary.HasValue
  id: HasValue
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: HasValue
  nameWithType: Vocabulary.HasValue
  fullName: VDS.RDF.Shacl.Vocabulary.HasValue
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasValue
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 163
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing hasValue.\n"
  example: []
  syntax:
    content: public static IUriNode HasValue { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property HasValue As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.HasValue*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.HasValueConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.HasValueConstraintComponent
  id: HasValueConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: HasValueConstraintComponent
  nameWithType: Vocabulary.HasValueConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.HasValueConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasValueConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 168
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing HasValueConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode HasValueConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property HasValueConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.HasValueConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.IgnoredProperties
  commentId: P:VDS.RDF.Shacl.Vocabulary.IgnoredProperties
  id: IgnoredProperties
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: IgnoredProperties
  nameWithType: Vocabulary.IgnoredProperties
  fullName: VDS.RDF.Shacl.Vocabulary.IgnoredProperties
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IgnoredProperties
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 173
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing ignoredProperties.\n"
  example: []
  syntax:
    content: public static IUriNode IgnoredProperties { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property IgnoredProperties As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.IgnoredProperties*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.In
  commentId: P:VDS.RDF.Shacl.Vocabulary.In
  id: In
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: In
  nameWithType: Vocabulary.In
  fullName: VDS.RDF.Shacl.Vocabulary.In
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: In
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 178
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing in.\n"
  example: []
  syntax:
    content: public static IUriNode In { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property In As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.In*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.InConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.InConstraintComponent
  id: InConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: InConstraintComponent
  nameWithType: Vocabulary.InConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.InConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: InConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 183
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing InConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode InConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property InConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.InConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.InversePath
  commentId: P:VDS.RDF.Shacl.Vocabulary.InversePath
  id: InversePath
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: InversePath
  nameWithType: Vocabulary.InversePath
  fullName: VDS.RDF.Shacl.Vocabulary.InversePath
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: InversePath
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 188
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing inversePath.\n"
  example: []
  syntax:
    content: public static IUriNode InversePath { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property InversePath As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.InversePath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Iri
  commentId: P:VDS.RDF.Shacl.Vocabulary.Iri
  id: Iri
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Iri
  nameWithType: Vocabulary.Iri
  fullName: VDS.RDF.Shacl.Vocabulary.Iri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Iri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 193
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing IRI.\n"
  example: []
  syntax:
    content: public static IUriNode Iri { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Iri As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Iri*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.IriOrLiteral
  commentId: P:VDS.RDF.Shacl.Vocabulary.IriOrLiteral
  id: IriOrLiteral
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: IriOrLiteral
  nameWithType: Vocabulary.IriOrLiteral
  fullName: VDS.RDF.Shacl.Vocabulary.IriOrLiteral
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IriOrLiteral
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 198
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing IRIOrLiteral.\n"
  example: []
  syntax:
    content: public static IUriNode IriOrLiteral { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property IriOrLiteral As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.IriOrLiteral*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.LanguageIn
  commentId: P:VDS.RDF.Shacl.Vocabulary.LanguageIn
  id: LanguageIn
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: LanguageIn
  nameWithType: Vocabulary.LanguageIn
  fullName: VDS.RDF.Shacl.Vocabulary.LanguageIn
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LanguageIn
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 203
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing languageIn.\n"
  example: []
  syntax:
    content: public static IUriNode LanguageIn { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property LanguageIn As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.LanguageIn*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.LanguageInConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.LanguageInConstraintComponent
  id: LanguageInConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: LanguageInConstraintComponent
  nameWithType: Vocabulary.LanguageInConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.LanguageInConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LanguageInConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 208
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing LanguageInConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode LanguageInConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property LanguageInConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.LanguageInConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.LessThan
  commentId: P:VDS.RDF.Shacl.Vocabulary.LessThan
  id: LessThan
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: LessThan
  nameWithType: Vocabulary.LessThan
  fullName: VDS.RDF.Shacl.Vocabulary.LessThan
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 213
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing lessThan.\n"
  example: []
  syntax:
    content: public static IUriNode LessThan { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property LessThan As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.LessThan*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.LessThanConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.LessThanConstraintComponent
  id: LessThanConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: LessThanConstraintComponent
  nameWithType: Vocabulary.LessThanConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.LessThanConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LessThanConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 218
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing LessThanConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode LessThanConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property LessThanConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.LessThanConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.LessThanOrEquals
  commentId: P:VDS.RDF.Shacl.Vocabulary.LessThanOrEquals
  id: LessThanOrEquals
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: LessThanOrEquals
  nameWithType: Vocabulary.LessThanOrEquals
  fullName: VDS.RDF.Shacl.Vocabulary.LessThanOrEquals
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LessThanOrEquals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 223
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing lessThanOrEquals.\n"
  example: []
  syntax:
    content: public static IUriNode LessThanOrEquals { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property LessThanOrEquals As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.LessThanOrEquals*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.LessThanOrEqualsConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.LessThanOrEqualsConstraintComponent
  id: LessThanOrEqualsConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: LessThanOrEqualsConstraintComponent
  nameWithType: Vocabulary.LessThanOrEqualsConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.LessThanOrEqualsConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LessThanOrEqualsConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 228
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing LessThanOrEqualsConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode LessThanOrEqualsConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property LessThanOrEqualsConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.LessThanOrEqualsConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Literal
  commentId: P:VDS.RDF.Shacl.Vocabulary.Literal
  id: Literal
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Literal
  nameWithType: Vocabulary.Literal
  fullName: VDS.RDF.Shacl.Vocabulary.Literal
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Literal
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 233
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing Literal.\n"
  example: []
  syntax:
    content: public static IUriNode Literal { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Literal As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Literal*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MaxCount
  commentId: P:VDS.RDF.Shacl.Vocabulary.MaxCount
  id: MaxCount
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MaxCount
  nameWithType: Vocabulary.MaxCount
  fullName: VDS.RDF.Shacl.Vocabulary.MaxCount
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MaxCount
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 238
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing maxCount.\n"
  example: []
  syntax:
    content: public static IUriNode MaxCount { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MaxCount As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MaxCount*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MaxCountConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.MaxCountConstraintComponent
  id: MaxCountConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MaxCountConstraintComponent
  nameWithType: Vocabulary.MaxCountConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MaxCountConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MaxCountConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 243
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing MaxCountConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode MaxCountConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MaxCountConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MaxCountConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MaxExclusive
  commentId: P:VDS.RDF.Shacl.Vocabulary.MaxExclusive
  id: MaxExclusive
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MaxExclusive
  nameWithType: Vocabulary.MaxExclusive
  fullName: VDS.RDF.Shacl.Vocabulary.MaxExclusive
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MaxExclusive
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 248
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing maxExclusive.\n"
  example: []
  syntax:
    content: public static IUriNode MaxExclusive { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MaxExclusive As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MaxExclusive*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MaxExclusiveConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.MaxExclusiveConstraintComponent
  id: MaxExclusiveConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MaxExclusiveConstraintComponent
  nameWithType: Vocabulary.MaxExclusiveConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MaxExclusiveConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MaxExclusiveConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 253
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing MaxExclusiveConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode MaxExclusiveConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MaxExclusiveConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MaxExclusiveConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MaxInclusive
  commentId: P:VDS.RDF.Shacl.Vocabulary.MaxInclusive
  id: MaxInclusive
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MaxInclusive
  nameWithType: Vocabulary.MaxInclusive
  fullName: VDS.RDF.Shacl.Vocabulary.MaxInclusive
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MaxInclusive
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 258
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing maxInclusive.\n"
  example: []
  syntax:
    content: public static IUriNode MaxInclusive { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MaxInclusive As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MaxInclusive*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MaxInclusiveConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.MaxInclusiveConstraintComponent
  id: MaxInclusiveConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MaxInclusiveConstraintComponent
  nameWithType: Vocabulary.MaxInclusiveConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MaxInclusiveConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MaxInclusiveConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 263
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing MaxInclusiveConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode MaxInclusiveConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MaxInclusiveConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MaxInclusiveConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MaxLength
  commentId: P:VDS.RDF.Shacl.Vocabulary.MaxLength
  id: MaxLength
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MaxLength
  nameWithType: Vocabulary.MaxLength
  fullName: VDS.RDF.Shacl.Vocabulary.MaxLength
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MaxLength
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 268
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing maxLength.\n"
  example: []
  syntax:
    content: public static IUriNode MaxLength { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MaxLength As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MaxLength*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MaxLengthConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.MaxLengthConstraintComponent
  id: MaxLengthConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MaxLengthConstraintComponent
  nameWithType: Vocabulary.MaxLengthConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MaxLengthConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MaxLengthConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 273
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing MaxLengthConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode MaxLengthConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MaxLengthConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MaxLengthConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Message
  commentId: P:VDS.RDF.Shacl.Vocabulary.Message
  id: Message
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: Vocabulary.Message
  fullName: VDS.RDF.Shacl.Vocabulary.Message
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Message
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 278
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing message.\n"
  example: []
  syntax:
    content: public static IUriNode Message { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Message As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Message*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MinCount
  commentId: P:VDS.RDF.Shacl.Vocabulary.MinCount
  id: MinCount
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MinCount
  nameWithType: Vocabulary.MinCount
  fullName: VDS.RDF.Shacl.Vocabulary.MinCount
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MinCount
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 283
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing minCount.\n"
  example: []
  syntax:
    content: public static IUriNode MinCount { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MinCount As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MinCount*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MinCountConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.MinCountConstraintComponent
  id: MinCountConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MinCountConstraintComponent
  nameWithType: Vocabulary.MinCountConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MinCountConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MinCountConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 288
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing MinCountConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode MinCountConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MinCountConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MinCountConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MinExclusive
  commentId: P:VDS.RDF.Shacl.Vocabulary.MinExclusive
  id: MinExclusive
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MinExclusive
  nameWithType: Vocabulary.MinExclusive
  fullName: VDS.RDF.Shacl.Vocabulary.MinExclusive
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MinExclusive
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 293
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing minExclusive.\n"
  example: []
  syntax:
    content: public static IUriNode MinExclusive { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MinExclusive As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MinExclusive*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MinExclusiveConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.MinExclusiveConstraintComponent
  id: MinExclusiveConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MinExclusiveConstraintComponent
  nameWithType: Vocabulary.MinExclusiveConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MinExclusiveConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MinExclusiveConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 298
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing MinExclusiveConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode MinExclusiveConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MinExclusiveConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MinExclusiveConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MinInclusive
  commentId: P:VDS.RDF.Shacl.Vocabulary.MinInclusive
  id: MinInclusive
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MinInclusive
  nameWithType: Vocabulary.MinInclusive
  fullName: VDS.RDF.Shacl.Vocabulary.MinInclusive
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MinInclusive
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 303
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing minInclusive.\n"
  example: []
  syntax:
    content: public static IUriNode MinInclusive { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MinInclusive As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MinInclusive*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MinInclusiveConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.MinInclusiveConstraintComponent
  id: MinInclusiveConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MinInclusiveConstraintComponent
  nameWithType: Vocabulary.MinInclusiveConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MinInclusiveConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MinInclusiveConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 308
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing MinInclusiveConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode MinInclusiveConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MinInclusiveConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MinInclusiveConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MinLength
  commentId: P:VDS.RDF.Shacl.Vocabulary.MinLength
  id: MinLength
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MinLength
  nameWithType: Vocabulary.MinLength
  fullName: VDS.RDF.Shacl.Vocabulary.MinLength
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MinLength
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 313
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing minLength.\n"
  example: []
  syntax:
    content: public static IUriNode MinLength { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MinLength As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MinLength*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.MinLengthConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.MinLengthConstraintComponent
  id: MinLengthConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: MinLengthConstraintComponent
  nameWithType: Vocabulary.MinLengthConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MinLengthConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MinLengthConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 318
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing MinLengthConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode MinLengthConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property MinLengthConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.MinLengthConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Namespace
  commentId: P:VDS.RDF.Shacl.Vocabulary.Namespace
  id: Namespace
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: Vocabulary.Namespace
  fullName: VDS.RDF.Shacl.Vocabulary.Namespace
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Namespace
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 323
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing namespace.\n"
  example: []
  syntax:
    content: public static IUriNode Namespace { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Namespace As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Namespace*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Node
  commentId: P:VDS.RDF.Shacl.Vocabulary.Node
  id: Node
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: Vocabulary.Node
  fullName: VDS.RDF.Shacl.Vocabulary.Node
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Node
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 328
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing node.\n"
  example: []
  syntax:
    content: public static IUriNode Node { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Node As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Node*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.NodeConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.NodeConstraintComponent
  id: NodeConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: NodeConstraintComponent
  nameWithType: Vocabulary.NodeConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.NodeConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NodeConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 333
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing NodeConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode NodeConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property NodeConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.NodeConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.NodeKind
  commentId: P:VDS.RDF.Shacl.Vocabulary.NodeKind
  id: NodeKind
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: NodeKind
  nameWithType: Vocabulary.NodeKind
  fullName: VDS.RDF.Shacl.Vocabulary.NodeKind
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NodeKind
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 338
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing nodeKind.\n"
  example: []
  syntax:
    content: public static IUriNode NodeKind { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property NodeKind As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.NodeKind*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.NodeKindConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.NodeKindConstraintComponent
  id: NodeKindConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: NodeKindConstraintComponent
  nameWithType: Vocabulary.NodeKindConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.NodeKindConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NodeKindConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 343
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing NodeKindConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode NodeKindConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property NodeKindConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.NodeKindConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.NodeShape
  commentId: P:VDS.RDF.Shacl.Vocabulary.NodeShape
  id: NodeShape
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: NodeShape
  nameWithType: Vocabulary.NodeShape
  fullName: VDS.RDF.Shacl.Vocabulary.NodeShape
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NodeShape
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 348
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing NodeShape.\n"
  example: []
  syntax:
    content: public static IUriNode NodeShape { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property NodeShape As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.NodeShape*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.NodeValidator
  commentId: P:VDS.RDF.Shacl.Vocabulary.NodeValidator
  id: NodeValidator
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: NodeValidator
  nameWithType: Vocabulary.NodeValidator
  fullName: VDS.RDF.Shacl.Vocabulary.NodeValidator
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NodeValidator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 353
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing nodeValidator.\n"
  example: []
  syntax:
    content: public static IUriNode NodeValidator { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property NodeValidator As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.NodeValidator*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Not
  commentId: P:VDS.RDF.Shacl.Vocabulary.Not
  id: Not
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Not
  nameWithType: Vocabulary.Not
  fullName: VDS.RDF.Shacl.Vocabulary.Not
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Not
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 358
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing not.\n"
  example: []
  syntax:
    content: public static IUriNode Not { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Not As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Not*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.NotConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.NotConstraintComponent
  id: NotConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: NotConstraintComponent
  nameWithType: Vocabulary.NotConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.NotConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NotConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 363
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing NotConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode NotConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property NotConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.NotConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.OneOrMorePath
  commentId: P:VDS.RDF.Shacl.Vocabulary.OneOrMorePath
  id: OneOrMorePath
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: OneOrMorePath
  nameWithType: Vocabulary.OneOrMorePath
  fullName: VDS.RDF.Shacl.Vocabulary.OneOrMorePath
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OneOrMorePath
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 368
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing oneOrMorePath.\n"
  example: []
  syntax:
    content: public static IUriNode OneOrMorePath { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property OneOrMorePath As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.OneOrMorePath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Optional
  commentId: P:VDS.RDF.Shacl.Vocabulary.Optional
  id: Optional
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Optional
  nameWithType: Vocabulary.Optional
  fullName: VDS.RDF.Shacl.Vocabulary.Optional
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Optional
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 373
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing optional.\n"
  example: []
  syntax:
    content: public static IUriNode Optional { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Optional As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Optional*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Or
  commentId: P:VDS.RDF.Shacl.Vocabulary.Or
  id: Or
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Or
  nameWithType: Vocabulary.Or
  fullName: VDS.RDF.Shacl.Vocabulary.Or
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Or
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 378
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing or.\n"
  example: []
  syntax:
    content: public static IUriNode Or { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Or As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Or*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.OrConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.OrConstraintComponent
  id: OrConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: OrConstraintComponent
  nameWithType: Vocabulary.OrConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.OrConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OrConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 383
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing OrConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode OrConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property OrConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.OrConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Parameter
  commentId: P:VDS.RDF.Shacl.Vocabulary.Parameter
  id: Parameter
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Parameter
  nameWithType: Vocabulary.Parameter
  fullName: VDS.RDF.Shacl.Vocabulary.Parameter
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Parameter
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 388
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing parameter.\n"
  example: []
  syntax:
    content: public static IUriNode Parameter { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Parameter As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Parameter*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Path
  commentId: P:VDS.RDF.Shacl.Vocabulary.Path
  id: Path
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: Vocabulary.Path
  fullName: VDS.RDF.Shacl.Vocabulary.Path
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Path
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 393
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing path.\n"
  example: []
  syntax:
    content: public static IUriNode Path { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Path As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Path*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Pattern
  commentId: P:VDS.RDF.Shacl.Vocabulary.Pattern
  id: Pattern
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Pattern
  nameWithType: Vocabulary.Pattern
  fullName: VDS.RDF.Shacl.Vocabulary.Pattern
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Pattern
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 398
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing pattern.\n"
  example: []
  syntax:
    content: public static IUriNode Pattern { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Pattern As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Pattern*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.PatternConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.PatternConstraintComponent
  id: PatternConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: PatternConstraintComponent
  nameWithType: Vocabulary.PatternConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.PatternConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PatternConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 403
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing PatternConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode PatternConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property PatternConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.PatternConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Prefix
  commentId: P:VDS.RDF.Shacl.Vocabulary.Prefix
  id: Prefix
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: Vocabulary.Prefix
  fullName: VDS.RDF.Shacl.Vocabulary.Prefix
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Prefix
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 408
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing prefix.\n"
  example: []
  syntax:
    content: public static IUriNode Prefix { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Prefix As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Prefix*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Prefixes
  commentId: P:VDS.RDF.Shacl.Vocabulary.Prefixes
  id: Prefixes
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Prefixes
  nameWithType: Vocabulary.Prefixes
  fullName: VDS.RDF.Shacl.Vocabulary.Prefixes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Prefixes
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 413
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing prefixes.\n"
  example: []
  syntax:
    content: public static IUriNode Prefixes { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Prefixes As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Prefixes*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Property
  commentId: P:VDS.RDF.Shacl.Vocabulary.Property
  id: Property
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: Vocabulary.Property
  fullName: VDS.RDF.Shacl.Vocabulary.Property
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Property
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 418
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing property.\n"
  example: []
  syntax:
    content: public static IUriNode Property { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Property As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Property*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.PropertyConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.PropertyConstraintComponent
  id: PropertyConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: PropertyConstraintComponent
  nameWithType: Vocabulary.PropertyConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.PropertyConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PropertyConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 424
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing PropertyShapeComponent.\n"
  example: []
  syntax:
    content: public static IUriNode PropertyConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property PropertyConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.PropertyConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.PropertyShape
  commentId: P:VDS.RDF.Shacl.Vocabulary.PropertyShape
  id: PropertyShape
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: PropertyShape
  nameWithType: Vocabulary.PropertyShape
  fullName: VDS.RDF.Shacl.Vocabulary.PropertyShape
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PropertyShape
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 429
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing PropertyShape.\n"
  example: []
  syntax:
    content: public static IUriNode PropertyShape { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property PropertyShape As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.PropertyShape*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.PropertyValidator
  commentId: P:VDS.RDF.Shacl.Vocabulary.PropertyValidator
  id: PropertyValidator
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: PropertyValidator
  nameWithType: Vocabulary.PropertyValidator
  fullName: VDS.RDF.Shacl.Vocabulary.PropertyValidator
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PropertyValidator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 434
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing propertyValidator.\n"
  example: []
  syntax:
    content: public static IUriNode PropertyValidator { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property PropertyValidator As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.PropertyValidator*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.QualifiedMaxCount
  commentId: P:VDS.RDF.Shacl.Vocabulary.QualifiedMaxCount
  id: QualifiedMaxCount
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: QualifiedMaxCount
  nameWithType: Vocabulary.QualifiedMaxCount
  fullName: VDS.RDF.Shacl.Vocabulary.QualifiedMaxCount
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QualifiedMaxCount
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 439
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing qualifiedMaxCount.\n"
  example: []
  syntax:
    content: public static IUriNode QualifiedMaxCount { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property QualifiedMaxCount As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.QualifiedMaxCount*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.QualifiedMaxCountConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.QualifiedMaxCountConstraintComponent
  id: QualifiedMaxCountConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: QualifiedMaxCountConstraintComponent
  nameWithType: Vocabulary.QualifiedMaxCountConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.QualifiedMaxCountConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QualifiedMaxCountConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 444
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing QualifiedMaxCountConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode QualifiedMaxCountConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property QualifiedMaxCountConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.QualifiedMaxCountConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.QualifiedMinCount
  commentId: P:VDS.RDF.Shacl.Vocabulary.QualifiedMinCount
  id: QualifiedMinCount
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: QualifiedMinCount
  nameWithType: Vocabulary.QualifiedMinCount
  fullName: VDS.RDF.Shacl.Vocabulary.QualifiedMinCount
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QualifiedMinCount
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 449
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing qualifiedMinCount.\n"
  example: []
  syntax:
    content: public static IUriNode QualifiedMinCount { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property QualifiedMinCount As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.QualifiedMinCount*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.QualifiedMinCountConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.QualifiedMinCountConstraintComponent
  id: QualifiedMinCountConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: QualifiedMinCountConstraintComponent
  nameWithType: Vocabulary.QualifiedMinCountConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.QualifiedMinCountConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QualifiedMinCountConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 454
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing QualifiedMinCountConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode QualifiedMinCountConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property QualifiedMinCountConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.QualifiedMinCountConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.QualifiedValueShape
  commentId: P:VDS.RDF.Shacl.Vocabulary.QualifiedValueShape
  id: QualifiedValueShape
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: QualifiedValueShape
  nameWithType: Vocabulary.QualifiedValueShape
  fullName: VDS.RDF.Shacl.Vocabulary.QualifiedValueShape
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QualifiedValueShape
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 459
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing qualifiedValueShape.\n"
  example: []
  syntax:
    content: public static IUriNode QualifiedValueShape { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property QualifiedValueShape As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.QualifiedValueShape*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.QualifiedValueShapesDisjoint
  commentId: P:VDS.RDF.Shacl.Vocabulary.QualifiedValueShapesDisjoint
  id: QualifiedValueShapesDisjoint
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: QualifiedValueShapesDisjoint
  nameWithType: Vocabulary.QualifiedValueShapesDisjoint
  fullName: VDS.RDF.Shacl.Vocabulary.QualifiedValueShapesDisjoint
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QualifiedValueShapesDisjoint
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 464
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing qualifiedValueShapesDisjoint.\n"
  example: []
  syntax:
    content: public static IUriNode QualifiedValueShapesDisjoint { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property QualifiedValueShapesDisjoint As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.QualifiedValueShapesDisjoint*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Result
  commentId: P:VDS.RDF.Shacl.Vocabulary.Result
  id: Result
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: Vocabulary.Result
  fullName: VDS.RDF.Shacl.Vocabulary.Result
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Result
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 469
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing result.\n"
  example: []
  syntax:
    content: public static IUriNode Result { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Result As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Result*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.ResultMessage
  commentId: P:VDS.RDF.Shacl.Vocabulary.ResultMessage
  id: ResultMessage
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: ResultMessage
  nameWithType: Vocabulary.ResultMessage
  fullName: VDS.RDF.Shacl.Vocabulary.ResultMessage
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResultMessage
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 474
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing resultMessage.\n"
  example: []
  syntax:
    content: public static IUriNode ResultMessage { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property ResultMessage As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.ResultMessage*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.ResultPath
  commentId: P:VDS.RDF.Shacl.Vocabulary.ResultPath
  id: ResultPath
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: ResultPath
  nameWithType: Vocabulary.ResultPath
  fullName: VDS.RDF.Shacl.Vocabulary.ResultPath
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResultPath
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 479
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing resultPath.\n"
  example: []
  syntax:
    content: public static IUriNode ResultPath { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property ResultPath As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.ResultPath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.ResultSeverity
  commentId: P:VDS.RDF.Shacl.Vocabulary.ResultSeverity
  id: ResultSeverity
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: ResultSeverity
  nameWithType: Vocabulary.ResultSeverity
  fullName: VDS.RDF.Shacl.Vocabulary.ResultSeverity
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResultSeverity
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 484
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing resultSeverity.\n"
  example: []
  syntax:
    content: public static IUriNode ResultSeverity { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property ResultSeverity As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.ResultSeverity*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Select
  commentId: P:VDS.RDF.Shacl.Vocabulary.Select
  id: Select
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Select
  nameWithType: Vocabulary.Select
  fullName: VDS.RDF.Shacl.Vocabulary.Select
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Select
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 489
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing select.\n"
  example: []
  syntax:
    content: public static IUriNode Select { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Select As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Select*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Severity
  commentId: P:VDS.RDF.Shacl.Vocabulary.Severity
  id: Severity
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Severity
  nameWithType: Vocabulary.Severity
  fullName: VDS.RDF.Shacl.Vocabulary.Severity
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Severity
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 494
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing severity.\n"
  example: []
  syntax:
    content: public static IUriNode Severity { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Severity As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Severity*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.SourceConstraint
  commentId: P:VDS.RDF.Shacl.Vocabulary.SourceConstraint
  id: SourceConstraint
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: SourceConstraint
  nameWithType: Vocabulary.SourceConstraint
  fullName: VDS.RDF.Shacl.Vocabulary.SourceConstraint
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SourceConstraint
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 499
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing sourceConstraint.\n"
  example: []
  syntax:
    content: public static IUriNode SourceConstraint { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property SourceConstraint As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.SourceConstraint*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.SourceConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.SourceConstraintComponent
  id: SourceConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: SourceConstraintComponent
  nameWithType: Vocabulary.SourceConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.SourceConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SourceConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 504
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing sourceConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode SourceConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property SourceConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.SourceConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.SourceShape
  commentId: P:VDS.RDF.Shacl.Vocabulary.SourceShape
  id: SourceShape
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: SourceShape
  nameWithType: Vocabulary.SourceShape
  fullName: VDS.RDF.Shacl.Vocabulary.SourceShape
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SourceShape
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 509
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing sourceShape.\n"
  example: []
  syntax:
    content: public static IUriNode SourceShape { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property SourceShape As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.SourceShape*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Sparql
  commentId: P:VDS.RDF.Shacl.Vocabulary.Sparql
  id: Sparql
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Sparql
  nameWithType: Vocabulary.Sparql
  fullName: VDS.RDF.Shacl.Vocabulary.Sparql
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Sparql
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 514
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing sparql.\n"
  example: []
  syntax:
    content: public static IUriNode Sparql { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Sparql As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Sparql*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.SparqlAskValidato
  commentId: P:VDS.RDF.Shacl.Vocabulary.SparqlAskValidato
  id: SparqlAskValidato
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: SparqlAskValidato
  nameWithType: Vocabulary.SparqlAskValidato
  fullName: VDS.RDF.Shacl.Vocabulary.SparqlAskValidato
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlAskValidato
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 519
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing SPARQLAskValidator.\n"
  example: []
  syntax:
    content: public static IUriNode SparqlAskValidato { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property SparqlAskValidato As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.SparqlAskValidato*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.SparqlConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.SparqlConstraintComponent
  id: SparqlConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: SparqlConstraintComponent
  nameWithType: Vocabulary.SparqlConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.SparqlConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 524
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing SPARQLConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode SparqlConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property SparqlConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.SparqlConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.TargetClass
  commentId: P:VDS.RDF.Shacl.Vocabulary.TargetClass
  id: TargetClass
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: TargetClass
  nameWithType: Vocabulary.TargetClass
  fullName: VDS.RDF.Shacl.Vocabulary.TargetClass
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TargetClass
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 529
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing targetClass.\n"
  example: []
  syntax:
    content: public static IUriNode TargetClass { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property TargetClass As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.TargetClass*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.TargetNode
  commentId: P:VDS.RDF.Shacl.Vocabulary.TargetNode
  id: TargetNode
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: TargetNode
  nameWithType: Vocabulary.TargetNode
  fullName: VDS.RDF.Shacl.Vocabulary.TargetNode
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TargetNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 534
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing targetNode.\n"
  example: []
  syntax:
    content: public static IUriNode TargetNode { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property TargetNode As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.TargetNode*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.TargetObjectsOf
  commentId: P:VDS.RDF.Shacl.Vocabulary.TargetObjectsOf
  id: TargetObjectsOf
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: TargetObjectsOf
  nameWithType: Vocabulary.TargetObjectsOf
  fullName: VDS.RDF.Shacl.Vocabulary.TargetObjectsOf
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TargetObjectsOf
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 539
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing targetObjectsOf.\n"
  example: []
  syntax:
    content: public static IUriNode TargetObjectsOf { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property TargetObjectsOf As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.TargetObjectsOf*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.TargetSubjectsOf
  commentId: P:VDS.RDF.Shacl.Vocabulary.TargetSubjectsOf
  id: TargetSubjectsOf
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: TargetSubjectsOf
  nameWithType: Vocabulary.TargetSubjectsOf
  fullName: VDS.RDF.Shacl.Vocabulary.TargetSubjectsOf
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TargetSubjectsOf
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 544
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing targetSubjectsOf.\n"
  example: []
  syntax:
    content: public static IUriNode TargetSubjectsOf { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property TargetSubjectsOf As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.TargetSubjectsOf*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.UniqueLang
  commentId: P:VDS.RDF.Shacl.Vocabulary.UniqueLang
  id: UniqueLang
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: UniqueLang
  nameWithType: Vocabulary.UniqueLang
  fullName: VDS.RDF.Shacl.Vocabulary.UniqueLang
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UniqueLang
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 549
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing uniqueLang.\n"
  example: []
  syntax:
    content: public static IUriNode UniqueLang { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property UniqueLang As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.UniqueLang*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.UniqueLangConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.UniqueLangConstraintComponent
  id: UniqueLangConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: UniqueLangConstraintComponent
  nameWithType: Vocabulary.UniqueLangConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.UniqueLangConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UniqueLangConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 554
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing UniqueLangConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode UniqueLangConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property UniqueLangConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.UniqueLangConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.ValidationReport
  commentId: P:VDS.RDF.Shacl.Vocabulary.ValidationReport
  id: ValidationReport
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: ValidationReport
  nameWithType: Vocabulary.ValidationReport
  fullName: VDS.RDF.Shacl.Vocabulary.ValidationReport
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ValidationReport
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 559
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing ValidationReport.\n"
  example: []
  syntax:
    content: public static IUriNode ValidationReport { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property ValidationReport As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.ValidationReport*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.ValidationResult
  commentId: P:VDS.RDF.Shacl.Vocabulary.ValidationResult
  id: ValidationResult
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: ValidationResult
  nameWithType: Vocabulary.ValidationResult
  fullName: VDS.RDF.Shacl.Vocabulary.ValidationResult
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ValidationResult
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 564
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing ValidationResult.\n"
  example: []
  syntax:
    content: public static IUriNode ValidationResult { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property ValidationResult As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.ValidationResult*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Validator
  commentId: P:VDS.RDF.Shacl.Vocabulary.Validator
  id: Validator
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Validator
  nameWithType: Vocabulary.Validator
  fullName: VDS.RDF.Shacl.Vocabulary.Validator
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Validator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 569
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing validator.\n"
  example: []
  syntax:
    content: public static IUriNode Validator { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Validator As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Validator*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Value
  commentId: P:VDS.RDF.Shacl.Vocabulary.Value
  id: Value
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Vocabulary.Value
  fullName: VDS.RDF.Shacl.Vocabulary.Value
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Value
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 574
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing value.\n"
  example: []
  syntax:
    content: public static IUriNode Value { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Value As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Value*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Violation
  commentId: P:VDS.RDF.Shacl.Vocabulary.Violation
  id: Violation
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Violation
  nameWithType: Vocabulary.Violation
  fullName: VDS.RDF.Shacl.Vocabulary.Violation
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Violation
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 579
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing Violation.\n"
  example: []
  syntax:
    content: public static IUriNode Violation { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Violation As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Violation*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Xone
  commentId: P:VDS.RDF.Shacl.Vocabulary.Xone
  id: Xone
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Xone
  nameWithType: Vocabulary.Xone
  fullName: VDS.RDF.Shacl.Vocabulary.Xone
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Xone
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 584
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing xone.\n"
  example: []
  syntax:
    content: public static IUriNode Xone { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property Xone As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.Xone*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.XoneConstraintComponent
  commentId: P:VDS.RDF.Shacl.Vocabulary.XoneConstraintComponent
  id: XoneConstraintComponent
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: XoneConstraintComponent
  nameWithType: Vocabulary.XoneConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.XoneConstraintComponent
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XoneConstraintComponent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 589
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing XoneConstraintComponent.\n"
  example: []
  syntax:
    content: public static IUriNode XoneConstraintComponent { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property XoneConstraintComponent As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.XoneConstraintComponent*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.ZeroOrMorePath
  commentId: P:VDS.RDF.Shacl.Vocabulary.ZeroOrMorePath
  id: ZeroOrMorePath
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: ZeroOrMorePath
  nameWithType: Vocabulary.ZeroOrMorePath
  fullName: VDS.RDF.Shacl.Vocabulary.ZeroOrMorePath
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ZeroOrMorePath
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 594
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing zeroOrMorePath.\n"
  example: []
  syntax:
    content: public static IUriNode ZeroOrMorePath { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property ZeroOrMorePath As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.ZeroOrMorePath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.ZeroOrOnePath
  commentId: P:VDS.RDF.Shacl.Vocabulary.ZeroOrOnePath
  id: ZeroOrOnePath
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: ZeroOrOnePath
  nameWithType: Vocabulary.ZeroOrOnePath
  fullName: VDS.RDF.Shacl.Vocabulary.ZeroOrOnePath
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ZeroOrOnePath
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 599
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets a node representing zeroOrOnePath.\n"
  example: []
  syntax:
    content: public static IUriNode ZeroOrOnePath { get; }
    parameters: []
    return:
      type: VDS.RDF.IUriNode
    content.vb: Public Shared ReadOnly Property ZeroOrOnePath As IUriNode
  overload: VDS.RDF.Shacl.Vocabulary.ZeroOrOnePath*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Shapes
  commentId: P:VDS.RDF.Shacl.Vocabulary.Shapes
  id: Shapes
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Shapes
  nameWithType: Vocabulary.Shapes
  fullName: VDS.RDF.Shacl.Vocabulary.Shapes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Shapes
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 606
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets the list of shapes.\n"
  example: []
  syntax:
    content: public static IEnumerable<IUriNode> Shapes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.IUriNode}
    content.vb: Public Shared ReadOnly Property Shapes As IEnumerable(Of IUriNode)
  overload: VDS.RDF.Shacl.Vocabulary.Shapes*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Targets
  commentId: P:VDS.RDF.Shacl.Vocabulary.Targets
  id: Targets
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Targets
  nameWithType: Vocabulary.Targets
  fullName: VDS.RDF.Shacl.Vocabulary.Targets
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Targets
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 618
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets the list of targets.\n"
  example: []
  syntax:
    content: public static IEnumerable<IUriNode> Targets { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.IUriNode}
    content.vb: Public Shared ReadOnly Property Targets As IEnumerable(Of IUriNode)
  overload: VDS.RDF.Shacl.Vocabulary.Targets*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.Constraints
  commentId: P:VDS.RDF.Shacl.Vocabulary.Constraints
  id: Constraints
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: Constraints
  nameWithType: Vocabulary.Constraints
  fullName: VDS.RDF.Shacl.Vocabulary.Constraints
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Constraints
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 632
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets the list of constraints.\n"
  example: []
  syntax:
    content: public static IEnumerable<IUriNode> Constraints { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.IUriNode}
    content.vb: Public Shared ReadOnly Property Constraints As IEnumerable(Of IUriNode)
  overload: VDS.RDF.Shacl.Vocabulary.Constraints*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.BlankNodeKinds
  commentId: P:VDS.RDF.Shacl.Vocabulary.BlankNodeKinds
  id: BlankNodeKinds
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: BlankNodeKinds
  nameWithType: Vocabulary.BlankNodeKinds
  fullName: VDS.RDF.Shacl.Vocabulary.BlankNodeKinds
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BlankNodeKinds
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 672
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets the list of blank node kinds.\n"
  example: []
  syntax:
    content: public static IEnumerable<IUriNode> BlankNodeKinds { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.IUriNode}
    content.vb: Public Shared ReadOnly Property BlankNodeKinds As IEnumerable(Of IUriNode)
  overload: VDS.RDF.Shacl.Vocabulary.BlankNodeKinds*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.LiteralNodeKinds
  commentId: P:VDS.RDF.Shacl.Vocabulary.LiteralNodeKinds
  id: LiteralNodeKinds
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: LiteralNodeKinds
  nameWithType: Vocabulary.LiteralNodeKinds
  fullName: VDS.RDF.Shacl.Vocabulary.LiteralNodeKinds
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LiteralNodeKinds
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 685
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets the list of literal node kinds.\n"
  example: []
  syntax:
    content: public static IEnumerable<IUriNode> LiteralNodeKinds { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.IUriNode}
    content.vb: Public Shared ReadOnly Property LiteralNodeKinds As IEnumerable(Of IUriNode)
  overload: VDS.RDF.Shacl.Vocabulary.LiteralNodeKinds*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.IriNodeKinds
  commentId: P:VDS.RDF.Shacl.Vocabulary.IriNodeKinds
  id: IriNodeKinds
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: IriNodeKinds
  nameWithType: Vocabulary.IriNodeKinds
  fullName: VDS.RDF.Shacl.Vocabulary.IriNodeKinds
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IriNodeKinds
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 698
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets the list of IRI node kinds.\n"
  example: []
  syntax:
    content: public static IEnumerable<IUriNode> IriNodeKinds { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.IUriNode}
    content.vb: Public Shared ReadOnly Property IriNodeKinds As IEnumerable(Of IUriNode)
  overload: VDS.RDF.Shacl.Vocabulary.IriNodeKinds*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Shacl.Vocabulary.PredicatesToExpandInReport
  commentId: P:VDS.RDF.Shacl.Vocabulary.PredicatesToExpandInReport
  id: PredicatesToExpandInReport
  parent: VDS.RDF.Shacl.Vocabulary
  langs:
  - csharp
  - vb
  name: PredicatesToExpandInReport
  nameWithType: Vocabulary.PredicatesToExpandInReport
  fullName: VDS.RDF.Shacl.Vocabulary.PredicatesToExpandInReport
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Shacl/Vocabulary.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PredicatesToExpandInReport
    path: ../../dotNetRDF/Libraries/dotNetRDF/Shacl/Vocabulary.cs
    startLine: 711
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Shacl
  summary: "\nGets the list of predicates to expand in validation reports.\n"
  example: []
  syntax:
    content: public static IEnumerable<INode> PredicatesToExpandInReport { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public Shared ReadOnly Property PredicatesToExpandInReport As IEnumerable(Of INode)
  overload: VDS.RDF.Shacl.Vocabulary.PredicatesToExpandInReport*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
references:
- uid: VDS.RDF.Shacl
  commentId: N:VDS.RDF.Shacl
  name: VDS.RDF.Shacl
  nameWithType: VDS.RDF.Shacl
  fullName: VDS.RDF.Shacl
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Shacl.Vocabulary.AlternativePath*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.AlternativePath
  name: AlternativePath
  nameWithType: Vocabulary.AlternativePath
  fullName: VDS.RDF.Shacl.Vocabulary.AlternativePath
- uid: VDS.RDF.IUriNode
  commentId: T:VDS.RDF.IUriNode
  parent: VDS.RDF
  name: IUriNode
  nameWithType: IUriNode
  fullName: VDS.RDF.IUriNode
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Shacl.Vocabulary.And*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.And
  name: And
  nameWithType: Vocabulary.And
  fullName: VDS.RDF.Shacl.Vocabulary.And
- uid: VDS.RDF.Shacl.Vocabulary.AndConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.AndConstraintComponent
  name: AndConstraintComponent
  nameWithType: Vocabulary.AndConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.AndConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.Ask*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Ask
  name: Ask
  nameWithType: Vocabulary.Ask
  fullName: VDS.RDF.Shacl.Vocabulary.Ask
- uid: VDS.RDF.Shacl.Vocabulary.BlankNode*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.BlankNode
  name: BlankNode
  nameWithType: Vocabulary.BlankNode
  fullName: VDS.RDF.Shacl.Vocabulary.BlankNode
- uid: VDS.RDF.Shacl.Vocabulary.BlankNodeOrIri*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.BlankNodeOrIri
  name: BlankNodeOrIri
  nameWithType: Vocabulary.BlankNodeOrIri
  fullName: VDS.RDF.Shacl.Vocabulary.BlankNodeOrIri
- uid: VDS.RDF.Shacl.Vocabulary.BlankNodeOrLiteral*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.BlankNodeOrLiteral
  name: BlankNodeOrLiteral
  nameWithType: Vocabulary.BlankNodeOrLiteral
  fullName: VDS.RDF.Shacl.Vocabulary.BlankNodeOrLiteral
- uid: VDS.RDF.Shacl.Vocabulary.Class*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Class
  name: Class
  nameWithType: Vocabulary.Class
  fullName: VDS.RDF.Shacl.Vocabulary.Class
- uid: VDS.RDF.Shacl.Vocabulary.ClassConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.ClassConstraintComponent
  name: ClassConstraintComponent
  nameWithType: Vocabulary.ClassConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.ClassConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.Closed*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Closed
  name: Closed
  nameWithType: Vocabulary.Closed
  fullName: VDS.RDF.Shacl.Vocabulary.Closed
- uid: VDS.RDF.Shacl.Vocabulary.ClosedConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.ClosedConstraintComponent
  name: ClosedConstraintComponent
  nameWithType: Vocabulary.ClosedConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.ClosedConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.Conforms*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Conforms
  name: Conforms
  nameWithType: Vocabulary.Conforms
  fullName: VDS.RDF.Shacl.Vocabulary.Conforms
- uid: VDS.RDF.Shacl.Vocabulary.ConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.ConstraintComponent
  name: ConstraintComponent
  nameWithType: Vocabulary.ConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.ConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.Datatype*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Datatype
  name: Datatype
  nameWithType: Vocabulary.Datatype
  fullName: VDS.RDF.Shacl.Vocabulary.Datatype
- uid: VDS.RDF.Shacl.Vocabulary.DatatypeConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.DatatypeConstraintComponent
  name: DatatypeConstraintComponent
  nameWithType: Vocabulary.DatatypeConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.DatatypeConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.Deactivated*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Deactivated
  name: Deactivated
  nameWithType: Vocabulary.Deactivated
  fullName: VDS.RDF.Shacl.Vocabulary.Deactivated
- uid: VDS.RDF.Shacl.Vocabulary.Declare*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Declare
  name: Declare
  nameWithType: Vocabulary.Declare
  fullName: VDS.RDF.Shacl.Vocabulary.Declare
- uid: VDS.RDF.Shacl.Vocabulary.Disjoint*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Disjoint
  name: Disjoint
  nameWithType: Vocabulary.Disjoint
  fullName: VDS.RDF.Shacl.Vocabulary.Disjoint
- uid: VDS.RDF.Shacl.Vocabulary.DisjointConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.DisjointConstraintComponent
  name: DisjointConstraintComponent
  nameWithType: Vocabulary.DisjointConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.DisjointConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.EqualsConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.EqualsConstraintComponent
  name: EqualsConstraintComponent
  nameWithType: Vocabulary.EqualsConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.EqualsConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.EqualsNode*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.EqualsNode
  name: EqualsNode
  nameWithType: Vocabulary.EqualsNode
  fullName: VDS.RDF.Shacl.Vocabulary.EqualsNode
- uid: VDS.RDF.Shacl.Vocabulary.Flags*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Flags
  name: Flags
  nameWithType: Vocabulary.Flags
  fullName: VDS.RDF.Shacl.Vocabulary.Flags
- uid: VDS.RDF.Shacl.Vocabulary.FocusNode*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.FocusNode
  name: FocusNode
  nameWithType: Vocabulary.FocusNode
  fullName: VDS.RDF.Shacl.Vocabulary.FocusNode
- uid: VDS.RDF.Shacl.Vocabulary.HasValue*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.HasValue
  name: HasValue
  nameWithType: Vocabulary.HasValue
  fullName: VDS.RDF.Shacl.Vocabulary.HasValue
- uid: VDS.RDF.Shacl.Vocabulary.HasValueConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.HasValueConstraintComponent
  name: HasValueConstraintComponent
  nameWithType: Vocabulary.HasValueConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.HasValueConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.IgnoredProperties*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.IgnoredProperties
  name: IgnoredProperties
  nameWithType: Vocabulary.IgnoredProperties
  fullName: VDS.RDF.Shacl.Vocabulary.IgnoredProperties
- uid: VDS.RDF.Shacl.Vocabulary.In*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.In
  name: In
  nameWithType: Vocabulary.In
  fullName: VDS.RDF.Shacl.Vocabulary.In
- uid: VDS.RDF.Shacl.Vocabulary.InConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.InConstraintComponent
  name: InConstraintComponent
  nameWithType: Vocabulary.InConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.InConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.InversePath*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.InversePath
  name: InversePath
  nameWithType: Vocabulary.InversePath
  fullName: VDS.RDF.Shacl.Vocabulary.InversePath
- uid: VDS.RDF.Shacl.Vocabulary.Iri*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Iri
  name: Iri
  nameWithType: Vocabulary.Iri
  fullName: VDS.RDF.Shacl.Vocabulary.Iri
- uid: VDS.RDF.Shacl.Vocabulary.IriOrLiteral*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.IriOrLiteral
  name: IriOrLiteral
  nameWithType: Vocabulary.IriOrLiteral
  fullName: VDS.RDF.Shacl.Vocabulary.IriOrLiteral
- uid: VDS.RDF.Shacl.Vocabulary.LanguageIn*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.LanguageIn
  name: LanguageIn
  nameWithType: Vocabulary.LanguageIn
  fullName: VDS.RDF.Shacl.Vocabulary.LanguageIn
- uid: VDS.RDF.Shacl.Vocabulary.LanguageInConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.LanguageInConstraintComponent
  name: LanguageInConstraintComponent
  nameWithType: Vocabulary.LanguageInConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.LanguageInConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.LessThan*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.LessThan
  name: LessThan
  nameWithType: Vocabulary.LessThan
  fullName: VDS.RDF.Shacl.Vocabulary.LessThan
- uid: VDS.RDF.Shacl.Vocabulary.LessThanConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.LessThanConstraintComponent
  name: LessThanConstraintComponent
  nameWithType: Vocabulary.LessThanConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.LessThanConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.LessThanOrEquals*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.LessThanOrEquals
  name: LessThanOrEquals
  nameWithType: Vocabulary.LessThanOrEquals
  fullName: VDS.RDF.Shacl.Vocabulary.LessThanOrEquals
- uid: VDS.RDF.Shacl.Vocabulary.LessThanOrEqualsConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.LessThanOrEqualsConstraintComponent
  name: LessThanOrEqualsConstraintComponent
  nameWithType: Vocabulary.LessThanOrEqualsConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.LessThanOrEqualsConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.Literal*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Literal
  name: Literal
  nameWithType: Vocabulary.Literal
  fullName: VDS.RDF.Shacl.Vocabulary.Literal
- uid: VDS.RDF.Shacl.Vocabulary.MaxCount*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MaxCount
  name: MaxCount
  nameWithType: Vocabulary.MaxCount
  fullName: VDS.RDF.Shacl.Vocabulary.MaxCount
- uid: VDS.RDF.Shacl.Vocabulary.MaxCountConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MaxCountConstraintComponent
  name: MaxCountConstraintComponent
  nameWithType: Vocabulary.MaxCountConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MaxCountConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.MaxExclusive*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MaxExclusive
  name: MaxExclusive
  nameWithType: Vocabulary.MaxExclusive
  fullName: VDS.RDF.Shacl.Vocabulary.MaxExclusive
- uid: VDS.RDF.Shacl.Vocabulary.MaxExclusiveConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MaxExclusiveConstraintComponent
  name: MaxExclusiveConstraintComponent
  nameWithType: Vocabulary.MaxExclusiveConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MaxExclusiveConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.MaxInclusive*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MaxInclusive
  name: MaxInclusive
  nameWithType: Vocabulary.MaxInclusive
  fullName: VDS.RDF.Shacl.Vocabulary.MaxInclusive
- uid: VDS.RDF.Shacl.Vocabulary.MaxInclusiveConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MaxInclusiveConstraintComponent
  name: MaxInclusiveConstraintComponent
  nameWithType: Vocabulary.MaxInclusiveConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MaxInclusiveConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.MaxLength*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MaxLength
  name: MaxLength
  nameWithType: Vocabulary.MaxLength
  fullName: VDS.RDF.Shacl.Vocabulary.MaxLength
- uid: VDS.RDF.Shacl.Vocabulary.MaxLengthConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MaxLengthConstraintComponent
  name: MaxLengthConstraintComponent
  nameWithType: Vocabulary.MaxLengthConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MaxLengthConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.Message*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Message
  name: Message
  nameWithType: Vocabulary.Message
  fullName: VDS.RDF.Shacl.Vocabulary.Message
- uid: VDS.RDF.Shacl.Vocabulary.MinCount*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MinCount
  name: MinCount
  nameWithType: Vocabulary.MinCount
  fullName: VDS.RDF.Shacl.Vocabulary.MinCount
- uid: VDS.RDF.Shacl.Vocabulary.MinCountConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MinCountConstraintComponent
  name: MinCountConstraintComponent
  nameWithType: Vocabulary.MinCountConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MinCountConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.MinExclusive*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MinExclusive
  name: MinExclusive
  nameWithType: Vocabulary.MinExclusive
  fullName: VDS.RDF.Shacl.Vocabulary.MinExclusive
- uid: VDS.RDF.Shacl.Vocabulary.MinExclusiveConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MinExclusiveConstraintComponent
  name: MinExclusiveConstraintComponent
  nameWithType: Vocabulary.MinExclusiveConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MinExclusiveConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.MinInclusive*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MinInclusive
  name: MinInclusive
  nameWithType: Vocabulary.MinInclusive
  fullName: VDS.RDF.Shacl.Vocabulary.MinInclusive
- uid: VDS.RDF.Shacl.Vocabulary.MinInclusiveConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MinInclusiveConstraintComponent
  name: MinInclusiveConstraintComponent
  nameWithType: Vocabulary.MinInclusiveConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MinInclusiveConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.MinLength*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MinLength
  name: MinLength
  nameWithType: Vocabulary.MinLength
  fullName: VDS.RDF.Shacl.Vocabulary.MinLength
- uid: VDS.RDF.Shacl.Vocabulary.MinLengthConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.MinLengthConstraintComponent
  name: MinLengthConstraintComponent
  nameWithType: Vocabulary.MinLengthConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.MinLengthConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.Namespace*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Namespace
  name: Namespace
  nameWithType: Vocabulary.Namespace
  fullName: VDS.RDF.Shacl.Vocabulary.Namespace
- uid: VDS.RDF.Shacl.Vocabulary.Node*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Node
  name: Node
  nameWithType: Vocabulary.Node
  fullName: VDS.RDF.Shacl.Vocabulary.Node
- uid: VDS.RDF.Shacl.Vocabulary.NodeConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.NodeConstraintComponent
  name: NodeConstraintComponent
  nameWithType: Vocabulary.NodeConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.NodeConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.NodeKind*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.NodeKind
  name: NodeKind
  nameWithType: Vocabulary.NodeKind
  fullName: VDS.RDF.Shacl.Vocabulary.NodeKind
- uid: VDS.RDF.Shacl.Vocabulary.NodeKindConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.NodeKindConstraintComponent
  name: NodeKindConstraintComponent
  nameWithType: Vocabulary.NodeKindConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.NodeKindConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.NodeShape*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.NodeShape
  name: NodeShape
  nameWithType: Vocabulary.NodeShape
  fullName: VDS.RDF.Shacl.Vocabulary.NodeShape
- uid: VDS.RDF.Shacl.Vocabulary.NodeValidator*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.NodeValidator
  name: NodeValidator
  nameWithType: Vocabulary.NodeValidator
  fullName: VDS.RDF.Shacl.Vocabulary.NodeValidator
- uid: VDS.RDF.Shacl.Vocabulary.Not*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Not
  name: Not
  nameWithType: Vocabulary.Not
  fullName: VDS.RDF.Shacl.Vocabulary.Not
- uid: VDS.RDF.Shacl.Vocabulary.NotConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.NotConstraintComponent
  name: NotConstraintComponent
  nameWithType: Vocabulary.NotConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.NotConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.OneOrMorePath*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.OneOrMorePath
  name: OneOrMorePath
  nameWithType: Vocabulary.OneOrMorePath
  fullName: VDS.RDF.Shacl.Vocabulary.OneOrMorePath
- uid: VDS.RDF.Shacl.Vocabulary.Optional*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Optional
  name: Optional
  nameWithType: Vocabulary.Optional
  fullName: VDS.RDF.Shacl.Vocabulary.Optional
- uid: VDS.RDF.Shacl.Vocabulary.Or*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Or
  name: Or
  nameWithType: Vocabulary.Or
  fullName: VDS.RDF.Shacl.Vocabulary.Or
- uid: VDS.RDF.Shacl.Vocabulary.OrConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.OrConstraintComponent
  name: OrConstraintComponent
  nameWithType: Vocabulary.OrConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.OrConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.Parameter*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Parameter
  name: Parameter
  nameWithType: Vocabulary.Parameter
  fullName: VDS.RDF.Shacl.Vocabulary.Parameter
- uid: VDS.RDF.Shacl.Vocabulary.Path*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Path
  name: Path
  nameWithType: Vocabulary.Path
  fullName: VDS.RDF.Shacl.Vocabulary.Path
- uid: VDS.RDF.Shacl.Vocabulary.Pattern*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Pattern
  name: Pattern
  nameWithType: Vocabulary.Pattern
  fullName: VDS.RDF.Shacl.Vocabulary.Pattern
- uid: VDS.RDF.Shacl.Vocabulary.PatternConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.PatternConstraintComponent
  name: PatternConstraintComponent
  nameWithType: Vocabulary.PatternConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.PatternConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.Prefix*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Prefix
  name: Prefix
  nameWithType: Vocabulary.Prefix
  fullName: VDS.RDF.Shacl.Vocabulary.Prefix
- uid: VDS.RDF.Shacl.Vocabulary.Prefixes*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Prefixes
  name: Prefixes
  nameWithType: Vocabulary.Prefixes
  fullName: VDS.RDF.Shacl.Vocabulary.Prefixes
- uid: VDS.RDF.Shacl.Vocabulary.Property*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Property
  name: Property
  nameWithType: Vocabulary.Property
  fullName: VDS.RDF.Shacl.Vocabulary.Property
- uid: VDS.RDF.Shacl.Vocabulary.PropertyConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.PropertyConstraintComponent
  name: PropertyConstraintComponent
  nameWithType: Vocabulary.PropertyConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.PropertyConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.PropertyShape*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.PropertyShape
  name: PropertyShape
  nameWithType: Vocabulary.PropertyShape
  fullName: VDS.RDF.Shacl.Vocabulary.PropertyShape
- uid: VDS.RDF.Shacl.Vocabulary.PropertyValidator*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.PropertyValidator
  name: PropertyValidator
  nameWithType: Vocabulary.PropertyValidator
  fullName: VDS.RDF.Shacl.Vocabulary.PropertyValidator
- uid: VDS.RDF.Shacl.Vocabulary.QualifiedMaxCount*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.QualifiedMaxCount
  name: QualifiedMaxCount
  nameWithType: Vocabulary.QualifiedMaxCount
  fullName: VDS.RDF.Shacl.Vocabulary.QualifiedMaxCount
- uid: VDS.RDF.Shacl.Vocabulary.QualifiedMaxCountConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.QualifiedMaxCountConstraintComponent
  name: QualifiedMaxCountConstraintComponent
  nameWithType: Vocabulary.QualifiedMaxCountConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.QualifiedMaxCountConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.QualifiedMinCount*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.QualifiedMinCount
  name: QualifiedMinCount
  nameWithType: Vocabulary.QualifiedMinCount
  fullName: VDS.RDF.Shacl.Vocabulary.QualifiedMinCount
- uid: VDS.RDF.Shacl.Vocabulary.QualifiedMinCountConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.QualifiedMinCountConstraintComponent
  name: QualifiedMinCountConstraintComponent
  nameWithType: Vocabulary.QualifiedMinCountConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.QualifiedMinCountConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.QualifiedValueShape*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.QualifiedValueShape
  name: QualifiedValueShape
  nameWithType: Vocabulary.QualifiedValueShape
  fullName: VDS.RDF.Shacl.Vocabulary.QualifiedValueShape
- uid: VDS.RDF.Shacl.Vocabulary.QualifiedValueShapesDisjoint*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.QualifiedValueShapesDisjoint
  name: QualifiedValueShapesDisjoint
  nameWithType: Vocabulary.QualifiedValueShapesDisjoint
  fullName: VDS.RDF.Shacl.Vocabulary.QualifiedValueShapesDisjoint
- uid: VDS.RDF.Shacl.Vocabulary.Result*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Result
  name: Result
  nameWithType: Vocabulary.Result
  fullName: VDS.RDF.Shacl.Vocabulary.Result
- uid: VDS.RDF.Shacl.Vocabulary.ResultMessage*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.ResultMessage
  name: ResultMessage
  nameWithType: Vocabulary.ResultMessage
  fullName: VDS.RDF.Shacl.Vocabulary.ResultMessage
- uid: VDS.RDF.Shacl.Vocabulary.ResultPath*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.ResultPath
  name: ResultPath
  nameWithType: Vocabulary.ResultPath
  fullName: VDS.RDF.Shacl.Vocabulary.ResultPath
- uid: VDS.RDF.Shacl.Vocabulary.ResultSeverity*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.ResultSeverity
  name: ResultSeverity
  nameWithType: Vocabulary.ResultSeverity
  fullName: VDS.RDF.Shacl.Vocabulary.ResultSeverity
- uid: VDS.RDF.Shacl.Vocabulary.Select*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Select
  name: Select
  nameWithType: Vocabulary.Select
  fullName: VDS.RDF.Shacl.Vocabulary.Select
- uid: VDS.RDF.Shacl.Vocabulary.Severity*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Severity
  name: Severity
  nameWithType: Vocabulary.Severity
  fullName: VDS.RDF.Shacl.Vocabulary.Severity
- uid: VDS.RDF.Shacl.Vocabulary.SourceConstraint*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.SourceConstraint
  name: SourceConstraint
  nameWithType: Vocabulary.SourceConstraint
  fullName: VDS.RDF.Shacl.Vocabulary.SourceConstraint
- uid: VDS.RDF.Shacl.Vocabulary.SourceConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.SourceConstraintComponent
  name: SourceConstraintComponent
  nameWithType: Vocabulary.SourceConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.SourceConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.SourceShape*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.SourceShape
  name: SourceShape
  nameWithType: Vocabulary.SourceShape
  fullName: VDS.RDF.Shacl.Vocabulary.SourceShape
- uid: VDS.RDF.Shacl.Vocabulary.Sparql*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Sparql
  name: Sparql
  nameWithType: Vocabulary.Sparql
  fullName: VDS.RDF.Shacl.Vocabulary.Sparql
- uid: VDS.RDF.Shacl.Vocabulary.SparqlAskValidato*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.SparqlAskValidato
  name: SparqlAskValidato
  nameWithType: Vocabulary.SparqlAskValidato
  fullName: VDS.RDF.Shacl.Vocabulary.SparqlAskValidato
- uid: VDS.RDF.Shacl.Vocabulary.SparqlConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.SparqlConstraintComponent
  name: SparqlConstraintComponent
  nameWithType: Vocabulary.SparqlConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.SparqlConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.TargetClass*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.TargetClass
  name: TargetClass
  nameWithType: Vocabulary.TargetClass
  fullName: VDS.RDF.Shacl.Vocabulary.TargetClass
- uid: VDS.RDF.Shacl.Vocabulary.TargetNode*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.TargetNode
  name: TargetNode
  nameWithType: Vocabulary.TargetNode
  fullName: VDS.RDF.Shacl.Vocabulary.TargetNode
- uid: VDS.RDF.Shacl.Vocabulary.TargetObjectsOf*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.TargetObjectsOf
  name: TargetObjectsOf
  nameWithType: Vocabulary.TargetObjectsOf
  fullName: VDS.RDF.Shacl.Vocabulary.TargetObjectsOf
- uid: VDS.RDF.Shacl.Vocabulary.TargetSubjectsOf*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.TargetSubjectsOf
  name: TargetSubjectsOf
  nameWithType: Vocabulary.TargetSubjectsOf
  fullName: VDS.RDF.Shacl.Vocabulary.TargetSubjectsOf
- uid: VDS.RDF.Shacl.Vocabulary.UniqueLang*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.UniqueLang
  name: UniqueLang
  nameWithType: Vocabulary.UniqueLang
  fullName: VDS.RDF.Shacl.Vocabulary.UniqueLang
- uid: VDS.RDF.Shacl.Vocabulary.UniqueLangConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.UniqueLangConstraintComponent
  name: UniqueLangConstraintComponent
  nameWithType: Vocabulary.UniqueLangConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.UniqueLangConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.ValidationReport*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.ValidationReport
  name: ValidationReport
  nameWithType: Vocabulary.ValidationReport
  fullName: VDS.RDF.Shacl.Vocabulary.ValidationReport
- uid: VDS.RDF.Shacl.Vocabulary.ValidationResult*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.ValidationResult
  name: ValidationResult
  nameWithType: Vocabulary.ValidationResult
  fullName: VDS.RDF.Shacl.Vocabulary.ValidationResult
- uid: VDS.RDF.Shacl.Vocabulary.Validator*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Validator
  name: Validator
  nameWithType: Vocabulary.Validator
  fullName: VDS.RDF.Shacl.Vocabulary.Validator
- uid: VDS.RDF.Shacl.Vocabulary.Value*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Value
  name: Value
  nameWithType: Vocabulary.Value
  fullName: VDS.RDF.Shacl.Vocabulary.Value
- uid: VDS.RDF.Shacl.Vocabulary.Violation*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Violation
  name: Violation
  nameWithType: Vocabulary.Violation
  fullName: VDS.RDF.Shacl.Vocabulary.Violation
- uid: VDS.RDF.Shacl.Vocabulary.Xone*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Xone
  name: Xone
  nameWithType: Vocabulary.Xone
  fullName: VDS.RDF.Shacl.Vocabulary.Xone
- uid: VDS.RDF.Shacl.Vocabulary.XoneConstraintComponent*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.XoneConstraintComponent
  name: XoneConstraintComponent
  nameWithType: Vocabulary.XoneConstraintComponent
  fullName: VDS.RDF.Shacl.Vocabulary.XoneConstraintComponent
- uid: VDS.RDF.Shacl.Vocabulary.ZeroOrMorePath*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.ZeroOrMorePath
  name: ZeroOrMorePath
  nameWithType: Vocabulary.ZeroOrMorePath
  fullName: VDS.RDF.Shacl.Vocabulary.ZeroOrMorePath
- uid: VDS.RDF.Shacl.Vocabulary.ZeroOrOnePath*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.ZeroOrOnePath
  name: ZeroOrOnePath
  nameWithType: Vocabulary.ZeroOrOnePath
  fullName: VDS.RDF.Shacl.Vocabulary.ZeroOrOnePath
- uid: VDS.RDF.Shacl.Vocabulary.Shapes*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Shapes
  name: Shapes
  nameWithType: Vocabulary.Shapes
  fullName: VDS.RDF.Shacl.Vocabulary.Shapes
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.IUriNode}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.IUriNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IUriNode>
  nameWithType: IEnumerable<IUriNode>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.IUriNode>
  nameWithType.vb: IEnumerable(Of IUriNode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.IUriNode)
  name.vb: IEnumerable(Of IUriNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Shacl.Vocabulary.Targets*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Targets
  name: Targets
  nameWithType: Vocabulary.Targets
  fullName: VDS.RDF.Shacl.Vocabulary.Targets
- uid: VDS.RDF.Shacl.Vocabulary.Constraints*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.Constraints
  name: Constraints
  nameWithType: Vocabulary.Constraints
  fullName: VDS.RDF.Shacl.Vocabulary.Constraints
- uid: VDS.RDF.Shacl.Vocabulary.BlankNodeKinds*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.BlankNodeKinds
  name: BlankNodeKinds
  nameWithType: Vocabulary.BlankNodeKinds
  fullName: VDS.RDF.Shacl.Vocabulary.BlankNodeKinds
- uid: VDS.RDF.Shacl.Vocabulary.LiteralNodeKinds*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.LiteralNodeKinds
  name: LiteralNodeKinds
  nameWithType: Vocabulary.LiteralNodeKinds
  fullName: VDS.RDF.Shacl.Vocabulary.LiteralNodeKinds
- uid: VDS.RDF.Shacl.Vocabulary.IriNodeKinds*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.IriNodeKinds
  name: IriNodeKinds
  nameWithType: Vocabulary.IriNodeKinds
  fullName: VDS.RDF.Shacl.Vocabulary.IriNodeKinds
- uid: VDS.RDF.Shacl.Vocabulary.PredicatesToExpandInReport*
  commentId: Overload:VDS.RDF.Shacl.Vocabulary.PredicatesToExpandInReport
  name: PredicatesToExpandInReport
  nameWithType: Vocabulary.PredicatesToExpandInReport
  fullName: VDS.RDF.Shacl.Vocabulary.PredicatesToExpandInReport
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INode>
  nameWithType: IEnumerable<INode>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.INode>
  nameWithType.vb: IEnumerable(Of INode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.INode)
  name.vb: IEnumerable(Of INode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
