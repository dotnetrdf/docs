### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.TriGSyntax
  commentId: T:VDS.RDF.Parsing.TriGSyntax
  id: TriGSyntax
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.TriGSyntax.MemberSubmission
  - VDS.RDF.Parsing.TriGSyntax.Original
  - VDS.RDF.Parsing.TriGSyntax.Recommendation
  langs:
  - csharp
  - vb
  name: TriGSyntax
  nameWithType: TriGSyntax
  fullName: VDS.RDF.Parsing.TriGSyntax
  type: Enum
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/TurtleSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TriGSyntax
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/TurtleSpecsHelper.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAcceptable TriG syntaxes.\n"
  example: []
  syntax:
    content: public enum TriGSyntax
    content.vb: Public Enum TriGSyntax
  extensionMethods:
  - VDS.RDF.Parsing.TriGSyntax.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: VDS.RDF.Parsing.TriGSyntax.Original
  commentId: F:VDS.RDF.Parsing.TriGSyntax.Original
  id: Original
  parent: VDS.RDF.Parsing.TriGSyntax
  langs:
  - csharp
  - vb
  name: Original
  nameWithType: TriGSyntax.Original
  fullName: VDS.RDF.Parsing.TriGSyntax.Original
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/TurtleSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Original
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/TurtleSpecsHelper.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nTriG as originally <a href=\"http://www4.wiwiss.fu-berlin.de/bizer/trig/\">specified</a>\n"
  remarks: "\n@base is not permitted and @prefix may only occur outside of graphs\n"
  example: []
  syntax:
    content: Original = 0
    return:
      type: VDS.RDF.Parsing.TriGSyntax
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.TriGSyntax.MemberSubmission
  commentId: F:VDS.RDF.Parsing.TriGSyntax.MemberSubmission
  id: MemberSubmission
  parent: VDS.RDF.Parsing.TriGSyntax
  langs:
  - csharp
  - vb
  name: MemberSubmission
  nameWithType: TriGSyntax.MemberSubmission
  fullName: VDS.RDF.Parsing.TriGSyntax.MemberSubmission
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/TurtleSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MemberSubmission
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/TurtleSpecsHelper.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nTriG as specified by the <a href=\"http://www.w3.org/2010/01/Turtle/Trig\">TriG Member Submission</a>\n"
  remarks: "\n@base is permitted and both @base and @prefix may occur both inside and outside graphs but the tokens use Turtle Team Submission rules i.e. newer escape sequences and other changes in the official W3C specification of Turtle do not apply.\n"
  example: []
  syntax:
    content: MemberSubmission = 1
    return:
      type: VDS.RDF.Parsing.TriGSyntax
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.TriGSyntax.Recommendation
  commentId: F:VDS.RDF.Parsing.TriGSyntax.Recommendation
  id: Recommendation
  parent: VDS.RDF.Parsing.TriGSyntax
  langs:
  - csharp
  - vb
  name: Recommendation
  nameWithType: TriGSyntax.Recommendation
  fullName: VDS.RDF.Parsing.TriGSyntax.Recommendation
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/TurtleSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Recommendation
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/TurtleSpecsHelper.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nTriG as specified by the <a href=\"https://www.w3.org/TR/trig/\">W3C Recommendation</a>\n"
  example: []
  syntax:
    content: Recommendation = 2
    return:
      type: VDS.RDF.Parsing.TriGSyntax
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: VDS.RDF.Parsing.TriGSyntax.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TriGSyntax>()
  nameWithType: Extensions.AsEnumerable<TriGSyntax>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.TriGSyntax>()
  nameWithType.vb: Extensions.AsEnumerable(Of TriGSyntax)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.TriGSyntax)()
  name.vb: AsEnumerable(Of TriGSyntax)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TriGSyntax>
    nameWithType: Extensions.AsEnumerable<TriGSyntax>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.TriGSyntax>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TriGSyntax)
    nameWithType: Extensions.AsEnumerable(Of TriGSyntax)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.TriGSyntax)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.TriGSyntax
  commentId: T:VDS.RDF.Parsing.TriGSyntax
  parent: VDS.RDF.Parsing
  name: TriGSyntax
  nameWithType: TriGSyntax
  fullName: VDS.RDF.Parsing.TriGSyntax
