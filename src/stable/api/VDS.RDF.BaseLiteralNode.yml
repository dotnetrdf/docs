### YamlMime:ManagedReference
items:
- uid: VDS.RDF.BaseLiteralNode
  commentId: T:VDS.RDF.BaseLiteralNode
  id: BaseLiteralNode
  parent: VDS.RDF
  children:
  - VDS.RDF.BaseLiteralNode.#ctor
  - VDS.RDF.BaseLiteralNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String)
  - VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Boolean)
  - VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.String)
  - VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.String,System.Boolean)
  - VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Uri)
  - VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Uri,System.Boolean)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.BaseLiteralNode)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IBlankNode)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.INode)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IUriNode)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IVariableNode)
  - VDS.RDF.BaseLiteralNode.DataType
  - VDS.RDF.BaseLiteralNode.Equals(System.Object)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.BaseLiteralNode)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IBlankNode)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.ILiteralNode)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.INode)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IUriNode)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IVariableNode)
  - VDS.RDF.BaseLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.BaseLiteralNode.Language
  - VDS.RDF.BaseLiteralNode.ReadXml(System.Xml.XmlReader)
  - VDS.RDF.BaseLiteralNode.ToString
  - VDS.RDF.BaseLiteralNode.Value
  - VDS.RDF.BaseLiteralNode.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: BaseLiteralNode
  nameWithType: BaseLiteralNode
  fullName: VDS.RDF.BaseLiteralNode
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAbstract Base Class for Literal Nodes.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public abstract class BaseLiteralNode : BaseNode, ILiteralNode, INode, IComparable<INode>, IComparable<IBlankNode>, IComparable<IGraphLiteralNode>, IComparable<ILiteralNode>, IComparable<IUriNode>, IComparable<IVariableNode>, IEquatable<INode>, IEquatable<IBlankNode>, IEquatable<IGraphLiteralNode>, IEquatable<ILiteralNode>, IEquatable<IUriNode>, IEquatable<IVariableNode>, ISerializable, IXmlSerializable, IEquatable<BaseLiteralNode>, IComparable<BaseLiteralNode>
    content.vb: >-
      <Serializable>

      Public MustInherit Class BaseLiteralNode
          Inherits BaseNode
          Implements ILiteralNode, INode, IComparable(Of INode), IComparable(Of IBlankNode), IComparable(Of IGraphLiteralNode), IComparable(Of ILiteralNode), IComparable(Of IUriNode), IComparable(Of IVariableNode), IEquatable(Of INode), IEquatable(Of IBlankNode), IEquatable(Of IGraphLiteralNode), IEquatable(Of ILiteralNode), IEquatable(Of IUriNode), IEquatable(Of IVariableNode), ISerializable, IXmlSerializable, IEquatable(Of BaseLiteralNode), IComparable(Of BaseLiteralNode)
  inheritance:
  - System.Object
  - VDS.RDF.BaseNode
  derivedClasses:
  - VDS.RDF.LiteralNode
  implements:
  - VDS.RDF.ILiteralNode
  - VDS.RDF.INode
  - System.IComparable{VDS.RDF.INode}
  - System.IComparable{VDS.RDF.IBlankNode}
  - System.IComparable{VDS.RDF.IGraphLiteralNode}
  - System.IComparable{VDS.RDF.ILiteralNode}
  - System.IComparable{VDS.RDF.IUriNode}
  - System.IComparable{VDS.RDF.IVariableNode}
  - System.IEquatable{VDS.RDF.INode}
  - System.IEquatable{VDS.RDF.IBlankNode}
  - System.IEquatable{VDS.RDF.IGraphLiteralNode}
  - System.IEquatable{VDS.RDF.ILiteralNode}
  - System.IEquatable{VDS.RDF.IUriNode}
  - System.IEquatable{VDS.RDF.IVariableNode}
  - System.Runtime.Serialization.ISerializable
  - System.Xml.Serialization.IXmlSerializable
  - System.IEquatable{VDS.RDF.BaseLiteralNode}
  - System.IComparable{VDS.RDF.BaseLiteralNode}
  inheritedMembers:
  - VDS.RDF.BaseNode._graph
  - VDS.RDF.BaseNode._graphUri
  - VDS.RDF.BaseNode._nodetype
  - VDS.RDF.BaseNode._hashcode
  - VDS.RDF.BaseNode.NodeType
  - VDS.RDF.BaseNode.Graph
  - VDS.RDF.BaseNode.GraphUri
  - VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  - VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  - VDS.RDF.BaseNode.GetHashCode
  - VDS.RDF.BaseNode.GetSchema
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.BaseLiteralNode.VDS.RDF.Extensions.AsEnumerable``1
  - VDS.RDF.INode.VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  - VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  - VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.INode.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  - VDS.RDF.INode.VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String)
  id: '#ctor(VDS.RDF.IGraph,System.String)'
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: BaseLiteralNode(IGraph, String)
  nameWithType: BaseLiteralNode.BaseLiteralNode(IGraph, String)
  fullName: VDS.RDF.BaseLiteralNode.BaseLiteralNode(VDS.RDF.IGraph, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nInternal Only Constructor for Literal Nodes.\n"
  example: []
  syntax:
    content: protected BaseLiteralNode(IGraph g, string literal)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: literal
      type: System.String
      description: String value of the Literal.
    content.vb: Protected Sub New(g As IGraph, literal As String)
  overload: VDS.RDF.BaseLiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Boolean)
  commentId: M:VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Boolean)
  id: '#ctor(VDS.RDF.IGraph,System.String,System.Boolean)'
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: BaseLiteralNode(IGraph, String, Boolean)
  nameWithType: BaseLiteralNode.BaseLiteralNode(IGraph, String, Boolean)
  fullName: VDS.RDF.BaseLiteralNode.BaseLiteralNode(VDS.RDF.IGraph, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nInternal Only Constructor for Literal Nodes.\n"
  example: []
  syntax:
    content: protected BaseLiteralNode(IGraph g, string literal, bool normalize)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: literal
      type: System.String
      description: String value of the Literal.
    - id: normalize
      type: System.Boolean
      description: Whether to Normalize the Literal Value.
    content.vb: Protected Sub New(g As IGraph, literal As String, normalize As Boolean)
  overload: VDS.RDF.BaseLiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.String)
  commentId: M:VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.String)
  id: '#ctor(VDS.RDF.IGraph,System.String,System.String)'
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: BaseLiteralNode(IGraph, String, String)
  nameWithType: BaseLiteralNode.BaseLiteralNode(IGraph, String, String)
  fullName: VDS.RDF.BaseLiteralNode.BaseLiteralNode(VDS.RDF.IGraph, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 92
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nInternal Only Constructor for Literal Nodes.\n"
  example: []
  syntax:
    content: protected BaseLiteralNode(IGraph g, string literal, string langspec)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: literal
      type: System.String
      description: String value of the Literal.
    - id: langspec
      type: System.String
      description: String value for the Language Specifier for the Literal.
    content.vb: Protected Sub New(g As IGraph, literal As String, langspec As String)
  overload: VDS.RDF.BaseLiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.String,System.Boolean)
  commentId: M:VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.String,System.Boolean)
  id: '#ctor(VDS.RDF.IGraph,System.String,System.String,System.Boolean)'
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: BaseLiteralNode(IGraph, String, String, Boolean)
  nameWithType: BaseLiteralNode.BaseLiteralNode(IGraph, String, String, Boolean)
  fullName: VDS.RDF.BaseLiteralNode.BaseLiteralNode(VDS.RDF.IGraph, System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 102
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nInternal Only Constructor for Literal Nodes.\n"
  example: []
  syntax:
    content: protected BaseLiteralNode(IGraph g, string literal, string langspec, bool normalize)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: literal
      type: System.String
      description: String value of the Literal.
    - id: langspec
      type: System.String
      description: String value for the Language Specifier for the Literal.
    - id: normalize
      type: System.Boolean
      description: Whether to Normalize the Literal Value.
    content.vb: Protected Sub New(g As IGraph, literal As String, langspec As String, normalize As Boolean)
  overload: VDS.RDF.BaseLiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Uri)
  commentId: M:VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Uri)
  id: '#ctor(VDS.RDF.IGraph,System.String,System.Uri)'
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: BaseLiteralNode(IGraph, String, Uri)
  nameWithType: BaseLiteralNode.BaseLiteralNode(IGraph, String, Uri)
  fullName: VDS.RDF.BaseLiteralNode.BaseLiteralNode(VDS.RDF.IGraph, System.String, System.Uri)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 134
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nInternal Only Constructor for Literal Nodes.\n"
  example: []
  syntax:
    content: protected BaseLiteralNode(IGraph g, string literal, Uri datatype)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: literal
      type: System.String
      description: String value of the Literal.
    - id: datatype
      type: System.Uri
      description: Uri for the Literals Data Type.
    content.vb: Protected Sub New(g As IGraph, literal As String, datatype As Uri)
  overload: VDS.RDF.BaseLiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Uri,System.Boolean)
  commentId: M:VDS.RDF.BaseLiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Uri,System.Boolean)
  id: '#ctor(VDS.RDF.IGraph,System.String,System.Uri,System.Boolean)'
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: BaseLiteralNode(IGraph, String, Uri, Boolean)
  nameWithType: BaseLiteralNode.BaseLiteralNode(IGraph, String, Uri, Boolean)
  fullName: VDS.RDF.BaseLiteralNode.BaseLiteralNode(VDS.RDF.IGraph, System.String, System.Uri, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 144
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nInternal Only Constructor for Literal Nodes.\n"
  example: []
  syntax:
    content: protected BaseLiteralNode(IGraph g, string literal, Uri datatype, bool normalize)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: literal
      type: System.String
      description: String value of the Literal.
    - id: datatype
      type: System.Uri
      description: Uri for the Literals Data Type.
    - id: normalize
      type: System.Boolean
      description: Whether to Normalize the Literal Value.
    content.vb: Protected Sub New(g As IGraph, literal As String, datatype As Uri, normalize As Boolean)
  overload: VDS.RDF.BaseLiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseLiteralNode.#ctor
  commentId: M:VDS.RDF.BaseLiteralNode.#ctor
  id: '#ctor'
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: BaseLiteralNode()
  nameWithType: BaseLiteralNode.BaseLiteralNode()
  fullName: VDS.RDF.BaseLiteralNode.BaseLiteralNode()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 164
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDeserialization Only Constructor.\n"
  example: []
  syntax:
    content: protected BaseLiteralNode()
    content.vb: Protected Sub New
  overload: VDS.RDF.BaseLiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseLiteralNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.BaseLiteralNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: BaseLiteralNode(SerializationInfo, StreamingContext)
  nameWithType: BaseLiteralNode.BaseLiteralNode(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.BaseLiteralNode.BaseLiteralNode(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 173
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDeserialization Constructor.\n"
  example: []
  syntax:
    content: protected BaseLiteralNode(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: VDS.RDF.BaseLiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseLiteralNode.Value
  commentId: P:VDS.RDF.BaseLiteralNode.Value
  id: Value
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: BaseLiteralNode.Value
  fullName: VDS.RDF.BaseLiteralNode.Value
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Value
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 204
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGives the String Value of the Literal.\n"
  example: []
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: VDS.RDF.BaseLiteralNode.Value*
  implements:
  - VDS.RDF.ILiteralNode.Value
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.BaseLiteralNode.Language
  commentId: P:VDS.RDF.BaseLiteralNode.Language
  id: Language
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: BaseLiteralNode.Language
  fullName: VDS.RDF.BaseLiteralNode.Language
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Language
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 215
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGives the Language Specifier for the Literal (if it exists) or the Empty String.\n"
  example: []
  syntax:
    content: public string Language { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Language As String
  overload: VDS.RDF.BaseLiteralNode.Language*
  implements:
  - VDS.RDF.ILiteralNode.Language
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.BaseLiteralNode.DataType
  commentId: P:VDS.RDF.BaseLiteralNode.DataType
  id: DataType
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: BaseLiteralNode.DataType
  fullName: VDS.RDF.BaseLiteralNode.DataType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DataType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 226
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGives the Data Type Uri for the Literal (if it exists) or a null.\n"
  example: []
  syntax:
    content: public Uri DataType { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property DataType As Uri
  overload: VDS.RDF.BaseLiteralNode.DataType*
  implements:
  - VDS.RDF.ILiteralNode.DataType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.BaseLiteralNode.Equals(System.Object)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(System.Object)
  id: Equals(System.Object)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BaseLiteralNode.Equals(Object)
  fullName: VDS.RDF.BaseLiteralNode.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 248
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nImplementation of the Equals method for Literal Nodes.\n"
  remarks: "\nThe default behaviour is for Literal Nodes to be considered equal IFF\n<ol>\n<li>Their Language Specifiers are identical (or neither has a Language Specifier)</li>\n<li>Their Data Types are identical (or neither has a Data Type)</li>\n<li>Their String values are identical</li>\n</ol>\nThis behaviour can be overridden to use value equality by setting the <xref href=\"VDS.RDF.Options.LiteralEqualityMode\" data-throw-if-not-resolved=\"false\"></xref> option to be <xref href=\"VDS.RDF.LiteralEqualityMode.Loose\" data-throw-if-not-resolved=\"false\"></xref> if this is more suited to your application.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object to compare the Node with.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(System.Object)
  overload: VDS.RDF.BaseLiteralNode.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.INode)
  id: Equals(VDS.RDF.INode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(INode)
  nameWithType: BaseLiteralNode.Equals(INode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 279
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nImplementation of the Equals method for Literal Nodes.\n"
  remarks: "\nThe default behaviour is for Literal Nodes to be considered equal IFF\n<ol>\n<li>Their Language Specifiers are identical (or neither has a Language Specifier)</li>\n<li>Their Data Types are identical (or neither has a Data Type)</li>\n<li>Their String values are identical</li>\n</ol>\nThis behaviour can be overridden to use value equality by setting the <xref href=\"VDS.RDF.Options.LiteralEqualityMode\" data-throw-if-not-resolved=\"false\"></xref> option to be <xref href=\"VDS.RDF.LiteralEqualityMode.Loose\" data-throw-if-not-resolved=\"false\"></xref> if this is more suited to your application.\n"
  example: []
  syntax:
    content: public override bool Equals(INode other)
    parameters:
    - id: other
      type: VDS.RDF.INode
      description: Object to compare the Node with.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(other As INode) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
  overload: VDS.RDF.BaseLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.INode}.Equals(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IBlankNode)
  id: Equals(VDS.RDF.IBlankNode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(IBlankNode)
  nameWithType: BaseLiteralNode.Equals(IBlankNode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IBlankNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 301
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a Blank Node (should always be false).\n"
  example: []
  syntax:
    content: public override bool Equals(IBlankNode other)
    parameters:
    - id: other
      type: VDS.RDF.IBlankNode
      description: Blank Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(other As IBlankNode) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
  overload: VDS.RDF.BaseLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IBlankNode}.Equals(VDS.RDF.IBlankNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
  id: Equals(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(IGraphLiteralNode)
  nameWithType: BaseLiteralNode.Equals(IGraphLiteralNode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 312
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a Graph Literal Node (should always be false).\n"
  example: []
  syntax:
    content: public override bool Equals(IGraphLiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.IGraphLiteralNode
      description: Graph Literal Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(other As IGraphLiteralNode) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
  overload: VDS.RDF.BaseLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IGraphLiteralNode}.Equals(VDS.RDF.IGraphLiteralNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.ILiteralNode)
  id: Equals(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(ILiteralNode)
  nameWithType: BaseLiteralNode.Equals(ILiteralNode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 323
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a Literal Node.\n"
  example: []
  syntax:
    content: public override bool Equals(ILiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.ILiteralNode
      description: Literal Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(other As ILiteralNode) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
  overload: VDS.RDF.BaseLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.ILiteralNode}.Equals(VDS.RDF.ILiteralNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IUriNode)
  id: Equals(VDS.RDF.IUriNode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(IUriNode)
  nameWithType: BaseLiteralNode.Equals(IUriNode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IUriNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 336
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a URI Node (should always be false).\n"
  example: []
  syntax:
    content: public override bool Equals(IUriNode other)
    parameters:
    - id: other
      type: VDS.RDF.IUriNode
      description: URI Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(other As IUriNode) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
  overload: VDS.RDF.BaseLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IUriNode}.Equals(VDS.RDF.IUriNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IVariableNode)
  id: Equals(VDS.RDF.IVariableNode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(IVariableNode)
  nameWithType: BaseLiteralNode.Equals(IVariableNode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IVariableNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 347
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a Variable Node (should always be false).\n"
  example: []
  syntax:
    content: public override bool Equals(IVariableNode other)
    parameters:
    - id: other
      type: VDS.RDF.IVariableNode
      description: Variable Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(other As IVariableNode) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
  overload: VDS.RDF.BaseLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IVariableNode}.Equals(VDS.RDF.IVariableNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.BaseLiteralNode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.BaseLiteralNode)
  id: Equals(VDS.RDF.BaseLiteralNode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(BaseLiteralNode)
  nameWithType: BaseLiteralNode.Equals(BaseLiteralNode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.BaseLiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 358
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a Literal Node.\n"
  example: []
  syntax:
    content: public bool Equals(BaseLiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.BaseLiteralNode
      description: Literal Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Equals(other As BaseLiteralNode) As Boolean
  overload: VDS.RDF.BaseLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.BaseLiteralNode}.Equals(VDS.RDF.BaseLiteralNode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseLiteralNode.ToString
  commentId: M:VDS.RDF.BaseLiteralNode.ToString
  id: ToString
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BaseLiteralNode.ToString()
  fullName: VDS.RDF.BaseLiteralNode.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 368
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets a String representation of a Literal Node.\n"
  remarks: Gives a value without quotes (as some syntaxes use) with the Data Type/Language Specifier appended using Notation 3 syntax.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: VDS.RDF.BaseNode.ToString
  overload: VDS.RDF.BaseLiteralNode.ToString*
  implements:
  - VDS.RDF.INode.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.INode)
  id: CompareTo(VDS.RDF.INode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(INode)
  nameWithType: BaseLiteralNode.CompareTo(INode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 396
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nImplementation of CompareTo for Literal Nodes.\n"
  remarks: "\nLiteral Nodes are greater than Blank Nodes, Uri Nodes and Nulls, they are less than Graph Literal Nodes.\n<br /><br />\nTwo Literal Nodes are initially compared based upon Data Type, untyped literals are less than typed literals.  Two untyped literals are compared purely on lexical value, Language Specifier has no effect on the ordering.  This means Literal Nodes are only partially ordered, for example &quot;hello&quot;@en and &quot;hello&quot;@en-us are considered to be the same for ordering purposes though they are different for equality purposes.  Datatyped Literals can only be properly ordered if they are one of a small subset of types (Integers, Booleans, Date Times, Strings and URIs).  If the datatypes for two Literals are non-matching they are ordered on Datatype Uri, this ensures that each range of Literal Nodes is sorted to some degree.  Again this also means that Literals are partially ordered since unknown datatypes will only be sorted based on lexical value and not on actual value.\n"
  example: []
  syntax:
    content: public override int CompareTo(INode other)
    parameters:
    - id: other
      type: VDS.RDF.INode
      description: Node to Compare To.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function CompareTo(other As INode) As Integer
  overridden: VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
  overload: VDS.RDF.BaseLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.INode}.CompareTo(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IBlankNode)
  id: CompareTo(VDS.RDF.IBlankNode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(IBlankNode)
  nameWithType: BaseLiteralNode.CompareTo(IBlankNode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IBlankNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 429
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns an Integer indicating the Ordering of this Node compared to another Node.\n"
  example: []
  syntax:
    content: public override int CompareTo(IBlankNode other)
    parameters:
    - id: other
      type: VDS.RDF.IBlankNode
      description: Node to test against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function CompareTo(other As IBlankNode) As Integer
  overridden: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
  overload: VDS.RDF.BaseLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IBlankNode}.CompareTo(VDS.RDF.IBlankNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
  id: CompareTo(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(ILiteralNode)
  nameWithType: BaseLiteralNode.CompareTo(ILiteralNode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 441
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns an Integer indicating the Ordering of this Node compared to another Node.\n"
  example: []
  syntax:
    content: public override int CompareTo(ILiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.ILiteralNode
      description: Node to test against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function CompareTo(other As ILiteralNode) As Integer
  overridden: VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
  overload: VDS.RDF.BaseLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.ILiteralNode}.CompareTo(VDS.RDF.ILiteralNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  id: CompareTo(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(IGraphLiteralNode)
  nameWithType: BaseLiteralNode.CompareTo(IGraphLiteralNode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 452
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns an Integer indicating the Ordering of this Node compared to another Node.\n"
  example: []
  syntax:
    content: public override int CompareTo(IGraphLiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.IGraphLiteralNode
      description: Node to test against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function CompareTo(other As IGraphLiteralNode) As Integer
  overridden: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  overload: VDS.RDF.BaseLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IGraphLiteralNode}.CompareTo(VDS.RDF.IGraphLiteralNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IUriNode)
  id: CompareTo(VDS.RDF.IUriNode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(IUriNode)
  nameWithType: BaseLiteralNode.CompareTo(IUriNode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IUriNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 472
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns an Integer indicating the Ordering of this Node compared to another Node.\n"
  example: []
  syntax:
    content: public override int CompareTo(IUriNode other)
    parameters:
    - id: other
      type: VDS.RDF.IUriNode
      description: Node to test against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function CompareTo(other As IUriNode) As Integer
  overridden: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
  overload: VDS.RDF.BaseLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IUriNode}.CompareTo(VDS.RDF.IUriNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IVariableNode)
  id: CompareTo(VDS.RDF.IVariableNode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(IVariableNode)
  nameWithType: BaseLiteralNode.CompareTo(IVariableNode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IVariableNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 484
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns an Integer indicating the Ordering of this Node compared to another Node.\n"
  example: []
  syntax:
    content: public override int CompareTo(IVariableNode other)
    parameters:
    - id: other
      type: VDS.RDF.IVariableNode
      description: Node to test against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function CompareTo(other As IVariableNode) As Integer
  overridden: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
  overload: VDS.RDF.BaseLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IVariableNode}.CompareTo(VDS.RDF.IVariableNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.BaseLiteralNode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.BaseLiteralNode)
  id: CompareTo(VDS.RDF.BaseLiteralNode)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(BaseLiteralNode)
  nameWithType: BaseLiteralNode.CompareTo(BaseLiteralNode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.BaseLiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 496
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns an Integer indicating the Ordering of this Node compared to another Node.\n"
  example: []
  syntax:
    content: public int CompareTo(BaseLiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.BaseLiteralNode
      description: Node to test against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function CompareTo(other As BaseLiteralNode) As Integer
  overload: VDS.RDF.BaseLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.BaseLiteralNode}.CompareTo(VDS.RDF.BaseLiteralNode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.BaseLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: BaseLiteralNode.GetObjectData(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.BaseLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetObjectData
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 510
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the serialization information.\n"
  example: []
  syntax:
    content: public override sealed void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Public NotOverridable Overrides Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overridden: VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  overload: VDS.RDF.BaseLiteralNode.GetObjectData*
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: VDS.RDF.BaseLiteralNode.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.BaseLiteralNode.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: BaseLiteralNode.ReadXml(XmlReader)
  fullName: VDS.RDF.BaseLiteralNode.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ReadXml
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 537
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReads the data for XML deserialization.\n"
  example: []
  syntax:
    content: public override sealed void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: XML Reader.
    content.vb: Public NotOverridable Overrides Sub ReadXml(reader As XmlReader)
  overridden: VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
  overload: VDS.RDF.BaseLiteralNode.ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: VDS.RDF.BaseLiteralNode.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.BaseLiteralNode.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.BaseLiteralNode
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: BaseLiteralNode.WriteXml(XmlWriter)
  fullName: VDS.RDF.BaseLiteralNode.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WriteXml
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 581
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nWrites the data for XML serialization.\n"
  example: []
  syntax:
    content: public override sealed void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: XML Writer.
    content.vb: Public NotOverridable Overrides Sub WriteXml(writer As XmlWriter)
  overridden: VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
  overload: VDS.RDF.BaseLiteralNode.WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.BaseNode
  commentId: T:VDS.RDF.BaseNode
  parent: VDS.RDF
  name: BaseNode
  nameWithType: BaseNode
  fullName: VDS.RDF.BaseNode
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: System.IComparable{VDS.RDF.INode}
  commentId: T:System.IComparable{VDS.RDF.INode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<INode>
  nameWithType: IComparable<INode>
  fullName: System.IComparable<VDS.RDF.INode>
  nameWithType.vb: IComparable(Of INode)
  fullName.vb: System.IComparable(Of VDS.RDF.INode)
  name.vb: IComparable(Of INode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IBlankNode}
  commentId: T:System.IComparable{VDS.RDF.IBlankNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IBlankNode>
  nameWithType: IComparable<IBlankNode>
  fullName: System.IComparable<VDS.RDF.IBlankNode>
  nameWithType.vb: IComparable(Of IBlankNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IBlankNode)
  name.vb: IComparable(Of IBlankNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IGraphLiteralNode}
  commentId: T:System.IComparable{VDS.RDF.IGraphLiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IGraphLiteralNode>
  nameWithType: IComparable<IGraphLiteralNode>
  fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>
  nameWithType.vb: IComparable(Of IGraphLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IGraphLiteralNode)
  name.vb: IComparable(Of IGraphLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.ILiteralNode}
  commentId: T:System.IComparable{VDS.RDF.ILiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ILiteralNode>
  nameWithType: IComparable<ILiteralNode>
  fullName: System.IComparable<VDS.RDF.ILiteralNode>
  nameWithType.vb: IComparable(Of ILiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.ILiteralNode)
  name.vb: IComparable(Of ILiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IUriNode}
  commentId: T:System.IComparable{VDS.RDF.IUriNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IUriNode>
  nameWithType: IComparable<IUriNode>
  fullName: System.IComparable<VDS.RDF.IUriNode>
  nameWithType.vb: IComparable(Of IUriNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IUriNode)
  name.vb: IComparable(Of IUriNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IVariableNode}
  commentId: T:System.IComparable{VDS.RDF.IVariableNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IVariableNode>
  nameWithType: IComparable<IVariableNode>
  fullName: System.IComparable<VDS.RDF.IVariableNode>
  nameWithType.vb: IComparable(Of IVariableNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IVariableNode)
  name.vb: IComparable(Of IVariableNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.INode}
  commentId: T:System.IEquatable{VDS.RDF.INode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<INode>
  nameWithType: IEquatable<INode>
  fullName: System.IEquatable<VDS.RDF.INode>
  nameWithType.vb: IEquatable(Of INode)
  fullName.vb: System.IEquatable(Of VDS.RDF.INode)
  name.vb: IEquatable(Of INode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IBlankNode}
  commentId: T:System.IEquatable{VDS.RDF.IBlankNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IBlankNode>
  nameWithType: IEquatable<IBlankNode>
  fullName: System.IEquatable<VDS.RDF.IBlankNode>
  nameWithType.vb: IEquatable(Of IBlankNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IBlankNode)
  name.vb: IEquatable(Of IBlankNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IGraphLiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.IGraphLiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IGraphLiteralNode>
  nameWithType: IEquatable<IGraphLiteralNode>
  fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>
  nameWithType.vb: IEquatable(Of IGraphLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IGraphLiteralNode)
  name.vb: IEquatable(Of IGraphLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.ILiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.ILiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ILiteralNode>
  nameWithType: IEquatable<ILiteralNode>
  fullName: System.IEquatable<VDS.RDF.ILiteralNode>
  nameWithType.vb: IEquatable(Of ILiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.ILiteralNode)
  name.vb: IEquatable(Of ILiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IUriNode}
  commentId: T:System.IEquatable{VDS.RDF.IUriNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IUriNode>
  nameWithType: IEquatable<IUriNode>
  fullName: System.IEquatable<VDS.RDF.IUriNode>
  nameWithType.vb: IEquatable(Of IUriNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IUriNode)
  name.vb: IEquatable(Of IUriNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IVariableNode}
  commentId: T:System.IEquatable{VDS.RDF.IVariableNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IVariableNode>
  nameWithType: IEquatable<IVariableNode>
  fullName: System.IEquatable<VDS.RDF.IVariableNode>
  nameWithType.vb: IEquatable(Of IVariableNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IVariableNode)
  name.vb: IEquatable(Of IVariableNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.IEquatable{VDS.RDF.BaseLiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.BaseLiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<BaseLiteralNode>
  nameWithType: IEquatable<BaseLiteralNode>
  fullName: System.IEquatable<VDS.RDF.BaseLiteralNode>
  nameWithType.vb: IEquatable(Of BaseLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.BaseLiteralNode)
  name.vb: IEquatable(Of BaseLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.BaseLiteralNode}
  commentId: T:System.IComparable{VDS.RDF.BaseLiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<BaseLiteralNode>
  nameWithType: IComparable<BaseLiteralNode>
  fullName: System.IComparable<VDS.RDF.BaseLiteralNode>
  nameWithType.vb: IComparable(Of BaseLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.BaseLiteralNode)
  name.vb: IComparable(Of BaseLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode._graph
  commentId: F:VDS.RDF.BaseNode._graph
  parent: VDS.RDF.BaseNode
  name: _graph
  nameWithType: BaseNode._graph
  fullName: VDS.RDF.BaseNode._graph
- uid: VDS.RDF.BaseNode._graphUri
  commentId: F:VDS.RDF.BaseNode._graphUri
  parent: VDS.RDF.BaseNode
  name: _graphUri
  nameWithType: BaseNode._graphUri
  fullName: VDS.RDF.BaseNode._graphUri
- uid: VDS.RDF.BaseNode._nodetype
  commentId: F:VDS.RDF.BaseNode._nodetype
  parent: VDS.RDF.BaseNode
  name: _nodetype
  nameWithType: BaseNode._nodetype
  fullName: VDS.RDF.BaseNode._nodetype
- uid: VDS.RDF.BaseNode._hashcode
  commentId: F:VDS.RDF.BaseNode._hashcode
  parent: VDS.RDF.BaseNode
  name: _hashcode
  nameWithType: BaseNode._hashcode
  fullName: VDS.RDF.BaseNode._hashcode
- uid: VDS.RDF.BaseNode.NodeType
  commentId: P:VDS.RDF.BaseNode.NodeType
  parent: VDS.RDF.BaseNode
  name: NodeType
  nameWithType: BaseNode.NodeType
  fullName: VDS.RDF.BaseNode.NodeType
- uid: VDS.RDF.BaseNode.Graph
  commentId: P:VDS.RDF.BaseNode.Graph
  parent: VDS.RDF.BaseNode
  name: Graph
  nameWithType: BaseNode.Graph
  fullName: VDS.RDF.BaseNode.Graph
- uid: VDS.RDF.BaseNode.GraphUri
  commentId: P:VDS.RDF.BaseNode.GraphUri
  parent: VDS.RDF.BaseNode
  name: GraphUri
  nameWithType: BaseNode.GraphUri
  fullName: VDS.RDF.BaseNode.GraphUri
- uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  commentId: M:VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  parent: VDS.RDF.BaseNode
  name: ToString(INodeFormatter)
  nameWithType: BaseNode.ToString(INodeFormatter)
  fullName: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  commentId: M:VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  parent: VDS.RDF.BaseNode
  name: ToString(INodeFormatter, TripleSegment)
  nameWithType: BaseNode.ToString(INodeFormatter, TripleSegment)
  fullName: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter, VDS.RDF.Writing.TripleSegment)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Writing.TripleSegment
    name: TripleSegment
    nameWithType: TripleSegment
    fullName: VDS.RDF.Writing.TripleSegment
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Writing.TripleSegment
    name: TripleSegment
    nameWithType: TripleSegment
    fullName: VDS.RDF.Writing.TripleSegment
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.GetHashCode
  commentId: M:VDS.RDF.BaseNode.GetHashCode
  parent: VDS.RDF.BaseNode
  name: GetHashCode()
  nameWithType: BaseNode.GetHashCode()
  fullName: VDS.RDF.BaseNode.GetHashCode()
  spec.csharp:
  - uid: VDS.RDF.BaseNode.GetHashCode
    name: GetHashCode
    nameWithType: BaseNode.GetHashCode
    fullName: VDS.RDF.BaseNode.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.GetHashCode
    name: GetHashCode
    nameWithType: BaseNode.GetHashCode
    fullName: VDS.RDF.BaseNode.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.GetSchema
  commentId: M:VDS.RDF.BaseNode.GetSchema
  parent: VDS.RDF.BaseNode
  name: GetSchema()
  nameWithType: BaseNode.GetSchema()
  fullName: VDS.RDF.BaseNode.GetSchema()
  spec.csharp:
  - uid: VDS.RDF.BaseNode.GetSchema
    name: GetSchema
    nameWithType: BaseNode.GetSchema
    fullName: VDS.RDF.BaseNode.GetSchema
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.GetSchema
    name: GetSchema
    nameWithType: BaseNode.GetSchema
    fullName: VDS.RDF.BaseNode.GetSchema
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseLiteralNode>()
  nameWithType: Extensions.AsEnumerable<BaseLiteralNode>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.BaseLiteralNode>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseLiteralNode)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.BaseLiteralNode)()
  name.vb: AsEnumerable(Of BaseLiteralNode)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseLiteralNode>
    nameWithType: Extensions.AsEnumerable<BaseLiteralNode>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.BaseLiteralNode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseLiteralNode)
    nameWithType: Extensions.AsEnumerable(Of BaseLiteralNode)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.BaseLiteralNode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  name: IsListRoot(IGraph)
  nameWithType: Extensions.IsListRoot(IGraph)
  fullName: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  name: CopyNode(IGraph)
  nameWithType: Extensions.CopyNode(IGraph)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  name: CopyNode(IGraph, Boolean)
  nameWithType: Extensions.CopyNode(IGraph, Boolean)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  parent: VDS.RDF.Dynamic.DynamicExtensions
  definition: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  name: AsDynamic(Uri)
  nameWithType: DynamicExtensions.AsDynamic(Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  parent: VDS.RDF.Nodes.ValuedNodeExtensions
  definition: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  name: AsValuedNode()
  nameWithType: ValuedNodeExtensions.AsValuedNode()
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode()
  spec.csharp:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  name: IsListRoot(INode, IGraph)
  nameWithType: Extensions.IsListRoot(INode, IGraph)
  fullName: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode, VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  name: CopyNode(INode, IGraph)
  nameWithType: Extensions.CopyNode(INode, IGraph)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode, VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  isExternal: true
  name: CopyNode(INode, IGraph, Boolean)
  nameWithType: Extensions.CopyNode(INode, IGraph, Boolean)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode, VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  isExternal: true
  name: AsDynamic(INode, Uri)
  nameWithType: DynamicExtensions.AsDynamic(INode, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions
  commentId: T:VDS.RDF.Dynamic.DynamicExtensions
  parent: VDS.RDF.Dynamic
  name: DynamicExtensions
  nameWithType: DynamicExtensions
  fullName: VDS.RDF.Dynamic.DynamicExtensions
- uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  name: AsValuedNode(INode)
  nameWithType: ValuedNodeExtensions.AsValuedNode(INode)
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Nodes.ValuedNodeExtensions
  commentId: T:VDS.RDF.Nodes.ValuedNodeExtensions
  parent: VDS.RDF.Nodes
  name: ValuedNodeExtensions
  nameWithType: ValuedNodeExtensions
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions
- uid: VDS.RDF.Dynamic
  commentId: N:VDS.RDF.Dynamic
  name: VDS.RDF.Dynamic
  nameWithType: VDS.RDF.Dynamic
  fullName: VDS.RDF.Dynamic
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
- uid: VDS.RDF.BaseLiteralNode.#ctor*
  commentId: Overload:VDS.RDF.BaseLiteralNode.#ctor
  name: BaseLiteralNode
  nameWithType: BaseLiteralNode.BaseLiteralNode
  fullName: VDS.RDF.BaseLiteralNode.BaseLiteralNode
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: VDS.RDF.BaseLiteralNode.Value*
  commentId: Overload:VDS.RDF.BaseLiteralNode.Value
  name: Value
  nameWithType: BaseLiteralNode.Value
  fullName: VDS.RDF.BaseLiteralNode.Value
- uid: VDS.RDF.ILiteralNode.Value
  commentId: P:VDS.RDF.ILiteralNode.Value
  parent: VDS.RDF.ILiteralNode
  name: Value
  nameWithType: ILiteralNode.Value
  fullName: VDS.RDF.ILiteralNode.Value
- uid: VDS.RDF.BaseLiteralNode.Language*
  commentId: Overload:VDS.RDF.BaseLiteralNode.Language
  name: Language
  nameWithType: BaseLiteralNode.Language
  fullName: VDS.RDF.BaseLiteralNode.Language
- uid: VDS.RDF.ILiteralNode.Language
  commentId: P:VDS.RDF.ILiteralNode.Language
  parent: VDS.RDF.ILiteralNode
  name: Language
  nameWithType: ILiteralNode.Language
  fullName: VDS.RDF.ILiteralNode.Language
- uid: VDS.RDF.BaseLiteralNode.DataType*
  commentId: Overload:VDS.RDF.BaseLiteralNode.DataType
  name: DataType
  nameWithType: BaseLiteralNode.DataType
  fullName: VDS.RDF.BaseLiteralNode.DataType
- uid: VDS.RDF.ILiteralNode.DataType
  commentId: P:VDS.RDF.ILiteralNode.DataType
  parent: VDS.RDF.ILiteralNode
  name: DataType
  nameWithType: ILiteralNode.DataType
  fullName: VDS.RDF.ILiteralNode.DataType
- uid: VDS.RDF.Options.LiteralEqualityMode
  commentId: P:VDS.RDF.Options.LiteralEqualityMode
  isExternal: true
- uid: VDS.RDF.LiteralEqualityMode.Loose
  commentId: F:VDS.RDF.LiteralEqualityMode.Loose
  isExternal: true
- uid: VDS.RDF.BaseNode.Equals(System.Object)
  commentId: M:VDS.RDF.BaseNode.Equals(System.Object)
  parent: VDS.RDF.BaseNode
  isExternal: true
  name: Equals(Object)
  nameWithType: BaseNode.Equals(Object)
  fullName: VDS.RDF.BaseNode.Equals(System.Object)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(System.Object)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(System.Object)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.Equals*
  commentId: Overload:VDS.RDF.BaseLiteralNode.Equals
  name: Equals
  nameWithType: BaseLiteralNode.Equals
  fullName: VDS.RDF.BaseLiteralNode.Equals
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
  parent: VDS.RDF.BaseNode
  name: Equals(INode)
  nameWithType: BaseNode.Equals(INode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.INode}.Equals(VDS.RDF.INode)
  commentId: M:System.IEquatable{VDS.RDF.INode}.Equals(VDS.RDF.INode)
  parent: System.IEquatable{VDS.RDF.INode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(INode)
  nameWithType: IEquatable<INode>.Equals(INode)
  fullName: System.IEquatable<VDS.RDF.INode>.Equals(VDS.RDF.INode)
  nameWithType.vb: IEquatable(Of INode).Equals(INode)
  fullName.vb: System.IEquatable(Of VDS.RDF.INode).Equals(VDS.RDF.INode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<INode>.Equals
    fullName: System.IEquatable<VDS.RDF.INode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of INode).Equals
    fullName: System.IEquatable(Of VDS.RDF.INode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
  parent: VDS.RDF.BaseNode
  name: Equals(IBlankNode)
  nameWithType: BaseNode.Equals(IBlankNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IBlankNode}.Equals(VDS.RDF.IBlankNode)
  commentId: M:System.IEquatable{VDS.RDF.IBlankNode}.Equals(VDS.RDF.IBlankNode)
  parent: System.IEquatable{VDS.RDF.IBlankNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IBlankNode)
  nameWithType: IEquatable<IBlankNode>.Equals(IBlankNode)
  fullName: System.IEquatable<VDS.RDF.IBlankNode>.Equals(VDS.RDF.IBlankNode)
  nameWithType.vb: IEquatable(Of IBlankNode).Equals(IBlankNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IBlankNode).Equals(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IBlankNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IBlankNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IBlankNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IBlankNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IBlankNode
  commentId: T:VDS.RDF.IBlankNode
  parent: VDS.RDF
  name: IBlankNode
  nameWithType: IBlankNode
  fullName: VDS.RDF.IBlankNode
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.BaseNode
  name: Equals(IGraphLiteralNode)
  nameWithType: BaseNode.Equals(IGraphLiteralNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IGraphLiteralNode}.Equals(VDS.RDF.IGraphLiteralNode)
  commentId: M:System.IEquatable{VDS.RDF.IGraphLiteralNode}.Equals(VDS.RDF.IGraphLiteralNode)
  parent: System.IEquatable{VDS.RDF.IGraphLiteralNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IGraphLiteralNode)
  nameWithType: IEquatable<IGraphLiteralNode>.Equals(IGraphLiteralNode)
  fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>.Equals(VDS.RDF.IGraphLiteralNode)
  nameWithType.vb: IEquatable(Of IGraphLiteralNode).Equals(IGraphLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IGraphLiteralNode).Equals(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IGraphLiteralNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IGraphLiteralNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IGraphLiteralNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraphLiteralNode
  commentId: T:VDS.RDF.IGraphLiteralNode
  parent: VDS.RDF
  name: IGraphLiteralNode
  nameWithType: IGraphLiteralNode
  fullName: VDS.RDF.IGraphLiteralNode
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.BaseNode
  name: Equals(ILiteralNode)
  nameWithType: BaseNode.Equals(ILiteralNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.ILiteralNode}.Equals(VDS.RDF.ILiteralNode)
  commentId: M:System.IEquatable{VDS.RDF.ILiteralNode}.Equals(VDS.RDF.ILiteralNode)
  parent: System.IEquatable{VDS.RDF.ILiteralNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ILiteralNode)
  nameWithType: IEquatable<ILiteralNode>.Equals(ILiteralNode)
  fullName: System.IEquatable<VDS.RDF.ILiteralNode>.Equals(VDS.RDF.ILiteralNode)
  nameWithType.vb: IEquatable(Of ILiteralNode).Equals(ILiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.ILiteralNode).Equals(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ILiteralNode>.Equals
    fullName: System.IEquatable<VDS.RDF.ILiteralNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ILiteralNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.ILiteralNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
  parent: VDS.RDF.BaseNode
  name: Equals(IUriNode)
  nameWithType: BaseNode.Equals(IUriNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IUriNode}.Equals(VDS.RDF.IUriNode)
  commentId: M:System.IEquatable{VDS.RDF.IUriNode}.Equals(VDS.RDF.IUriNode)
  parent: System.IEquatable{VDS.RDF.IUriNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IUriNode)
  nameWithType: IEquatable<IUriNode>.Equals(IUriNode)
  fullName: System.IEquatable<VDS.RDF.IUriNode>.Equals(VDS.RDF.IUriNode)
  nameWithType.vb: IEquatable(Of IUriNode).Equals(IUriNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IUriNode).Equals(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IUriNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IUriNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IUriNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IUriNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IUriNode
  commentId: T:VDS.RDF.IUriNode
  parent: VDS.RDF
  name: IUriNode
  nameWithType: IUriNode
  fullName: VDS.RDF.IUriNode
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
  parent: VDS.RDF.BaseNode
  name: Equals(IVariableNode)
  nameWithType: BaseNode.Equals(IVariableNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IVariableNode}.Equals(VDS.RDF.IVariableNode)
  commentId: M:System.IEquatable{VDS.RDF.IVariableNode}.Equals(VDS.RDF.IVariableNode)
  parent: System.IEquatable{VDS.RDF.IVariableNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IVariableNode)
  nameWithType: IEquatable<IVariableNode>.Equals(IVariableNode)
  fullName: System.IEquatable<VDS.RDF.IVariableNode>.Equals(VDS.RDF.IVariableNode)
  nameWithType.vb: IEquatable(Of IVariableNode).Equals(IVariableNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IVariableNode).Equals(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IVariableNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IVariableNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IVariableNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IVariableNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IVariableNode
  commentId: T:VDS.RDF.IVariableNode
  parent: VDS.RDF
  name: IVariableNode
  nameWithType: IVariableNode
  fullName: VDS.RDF.IVariableNode
- uid: System.IEquatable{VDS.RDF.BaseLiteralNode}.Equals(VDS.RDF.BaseLiteralNode)
  commentId: M:System.IEquatable{VDS.RDF.BaseLiteralNode}.Equals(VDS.RDF.BaseLiteralNode)
  parent: System.IEquatable{VDS.RDF.BaseLiteralNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(BaseLiteralNode)
  nameWithType: IEquatable<BaseLiteralNode>.Equals(BaseLiteralNode)
  fullName: System.IEquatable<VDS.RDF.BaseLiteralNode>.Equals(VDS.RDF.BaseLiteralNode)
  nameWithType.vb: IEquatable(Of BaseLiteralNode).Equals(BaseLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.BaseLiteralNode).Equals(VDS.RDF.BaseLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<BaseLiteralNode>.Equals
    fullName: System.IEquatable<VDS.RDF.BaseLiteralNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of BaseLiteralNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.BaseLiteralNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode
  commentId: T:VDS.RDF.BaseLiteralNode
  parent: VDS.RDF
  name: BaseLiteralNode
  nameWithType: BaseLiteralNode
  fullName: VDS.RDF.BaseLiteralNode
- uid: VDS.RDF.BaseNode.ToString
  commentId: M:VDS.RDF.BaseNode.ToString
  parent: VDS.RDF.BaseNode
  name: ToString()
  nameWithType: BaseNode.ToString()
  fullName: VDS.RDF.BaseNode.ToString()
  spec.csharp:
  - uid: VDS.RDF.BaseNode.ToString
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.ToString
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.ToString*
  commentId: Overload:VDS.RDF.BaseLiteralNode.ToString
  name: ToString
  nameWithType: BaseLiteralNode.ToString
  fullName: VDS.RDF.BaseLiteralNode.ToString
- uid: VDS.RDF.INode.ToString
  commentId: M:VDS.RDF.INode.ToString
  parent: VDS.RDF.INode
  name: ToString()
  nameWithType: INode.ToString()
  fullName: VDS.RDF.INode.ToString()
  spec.csharp:
  - uid: VDS.RDF.INode.ToString
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INode.ToString
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
  parent: VDS.RDF.BaseNode
  name: CompareTo(INode)
  nameWithType: BaseNode.CompareTo(INode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.CompareTo*
  commentId: Overload:VDS.RDF.BaseLiteralNode.CompareTo
  name: CompareTo
  nameWithType: BaseLiteralNode.CompareTo
  fullName: VDS.RDF.BaseLiteralNode.CompareTo
- uid: System.IComparable{VDS.RDF.INode}.CompareTo(VDS.RDF.INode)
  commentId: M:System.IComparable{VDS.RDF.INode}.CompareTo(VDS.RDF.INode)
  parent: System.IComparable{VDS.RDF.INode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(INode)
  nameWithType: IComparable<INode>.CompareTo(INode)
  fullName: System.IComparable<VDS.RDF.INode>.CompareTo(VDS.RDF.INode)
  nameWithType.vb: IComparable(Of INode).CompareTo(INode)
  fullName.vb: System.IComparable(Of VDS.RDF.INode).CompareTo(VDS.RDF.INode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<INode>.CompareTo
    fullName: System.IComparable<VDS.RDF.INode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of INode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.INode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
  parent: VDS.RDF.BaseNode
  name: CompareTo(IBlankNode)
  nameWithType: BaseNode.CompareTo(IBlankNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IBlankNode}.CompareTo(VDS.RDF.IBlankNode)
  commentId: M:System.IComparable{VDS.RDF.IBlankNode}.CompareTo(VDS.RDF.IBlankNode)
  parent: System.IComparable{VDS.RDF.IBlankNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IBlankNode)
  nameWithType: IComparable<IBlankNode>.CompareTo(IBlankNode)
  fullName: System.IComparable<VDS.RDF.IBlankNode>.CompareTo(VDS.RDF.IBlankNode)
  nameWithType.vb: IComparable(Of IBlankNode).CompareTo(IBlankNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IBlankNode).CompareTo(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IBlankNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IBlankNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IBlankNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IBlankNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.BaseNode
  name: CompareTo(ILiteralNode)
  nameWithType: BaseNode.CompareTo(ILiteralNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.ILiteralNode}.CompareTo(VDS.RDF.ILiteralNode)
  commentId: M:System.IComparable{VDS.RDF.ILiteralNode}.CompareTo(VDS.RDF.ILiteralNode)
  parent: System.IComparable{VDS.RDF.ILiteralNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(ILiteralNode)
  nameWithType: IComparable<ILiteralNode>.CompareTo(ILiteralNode)
  fullName: System.IComparable<VDS.RDF.ILiteralNode>.CompareTo(VDS.RDF.ILiteralNode)
  nameWithType.vb: IComparable(Of ILiteralNode).CompareTo(ILiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.ILiteralNode).CompareTo(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<ILiteralNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.ILiteralNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of ILiteralNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.ILiteralNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.BaseNode
  name: CompareTo(IGraphLiteralNode)
  nameWithType: BaseNode.CompareTo(IGraphLiteralNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IGraphLiteralNode}.CompareTo(VDS.RDF.IGraphLiteralNode)
  commentId: M:System.IComparable{VDS.RDF.IGraphLiteralNode}.CompareTo(VDS.RDF.IGraphLiteralNode)
  parent: System.IComparable{VDS.RDF.IGraphLiteralNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IGraphLiteralNode)
  nameWithType: IComparable<IGraphLiteralNode>.CompareTo(IGraphLiteralNode)
  fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>.CompareTo(VDS.RDF.IGraphLiteralNode)
  nameWithType.vb: IComparable(Of IGraphLiteralNode).CompareTo(IGraphLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IGraphLiteralNode).CompareTo(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IGraphLiteralNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IGraphLiteralNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IGraphLiteralNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
  parent: VDS.RDF.BaseNode
  name: CompareTo(IUriNode)
  nameWithType: BaseNode.CompareTo(IUriNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IUriNode}.CompareTo(VDS.RDF.IUriNode)
  commentId: M:System.IComparable{VDS.RDF.IUriNode}.CompareTo(VDS.RDF.IUriNode)
  parent: System.IComparable{VDS.RDF.IUriNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IUriNode)
  nameWithType: IComparable<IUriNode>.CompareTo(IUriNode)
  fullName: System.IComparable<VDS.RDF.IUriNode>.CompareTo(VDS.RDF.IUriNode)
  nameWithType.vb: IComparable(Of IUriNode).CompareTo(IUriNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IUriNode).CompareTo(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IUriNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IUriNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IUriNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IUriNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
  parent: VDS.RDF.BaseNode
  name: CompareTo(IVariableNode)
  nameWithType: BaseNode.CompareTo(IVariableNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IVariableNode}.CompareTo(VDS.RDF.IVariableNode)
  commentId: M:System.IComparable{VDS.RDF.IVariableNode}.CompareTo(VDS.RDF.IVariableNode)
  parent: System.IComparable{VDS.RDF.IVariableNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IVariableNode)
  nameWithType: IComparable<IVariableNode>.CompareTo(IVariableNode)
  fullName: System.IComparable<VDS.RDF.IVariableNode>.CompareTo(VDS.RDF.IVariableNode)
  nameWithType.vb: IComparable(Of IVariableNode).CompareTo(IVariableNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IVariableNode).CompareTo(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IVariableNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IVariableNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IVariableNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IVariableNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.BaseLiteralNode}.CompareTo(VDS.RDF.BaseLiteralNode)
  commentId: M:System.IComparable{VDS.RDF.BaseLiteralNode}.CompareTo(VDS.RDF.BaseLiteralNode)
  parent: System.IComparable{VDS.RDF.BaseLiteralNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(BaseLiteralNode)
  nameWithType: IComparable<BaseLiteralNode>.CompareTo(BaseLiteralNode)
  fullName: System.IComparable<VDS.RDF.BaseLiteralNode>.CompareTo(VDS.RDF.BaseLiteralNode)
  nameWithType.vb: IComparable(Of BaseLiteralNode).CompareTo(BaseLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.BaseLiteralNode).CompareTo(VDS.RDF.BaseLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<BaseLiteralNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.BaseLiteralNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of BaseLiteralNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.BaseLiteralNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: VDS.RDF.BaseNode
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: BaseNode.GetObjectData(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: BaseNode.GetObjectData
    fullName: VDS.RDF.BaseNode.GetObjectData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: BaseNode.GetObjectData
    fullName: VDS.RDF.BaseNode.GetObjectData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.GetObjectData*
  commentId: Overload:VDS.RDF.BaseLiteralNode.GetObjectData
  name: GetObjectData
  nameWithType: BaseLiteralNode.GetObjectData
  fullName: VDS.RDF.BaseLiteralNode.GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.BaseNode
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: BaseNode.ReadXml(XmlReader)
  fullName: VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: BaseNode.ReadXml
    fullName: VDS.RDF.BaseNode.ReadXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: BaseNode.ReadXml
    fullName: VDS.RDF.BaseNode.ReadXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.ReadXml*
  commentId: Overload:VDS.RDF.BaseLiteralNode.ReadXml
  name: ReadXml
  nameWithType: BaseLiteralNode.ReadXml
  fullName: VDS.RDF.BaseLiteralNode.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.BaseNode
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: BaseNode.WriteXml(XmlWriter)
  fullName: VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: BaseNode.WriteXml
    fullName: VDS.RDF.BaseNode.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: BaseNode.WriteXml
    fullName: VDS.RDF.BaseNode.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.WriteXml*
  commentId: Overload:VDS.RDF.BaseLiteralNode.WriteXml
  name: WriteXml
  nameWithType: BaseLiteralNode.WriteXml
  fullName: VDS.RDF.BaseLiteralNode.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
