### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Patterns.ITriplePattern
  commentId: T:VDS.RDF.Query.Patterns.ITriplePattern
  id: ITriplePattern
  parent: VDS.RDF.Query.Patterns
  children:
  - VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  - VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  - VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  - VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  - VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  - VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  - VDS.RDF.Query.Patterns.ITriplePattern.Variables
  langs:
  - csharp
  - vb
  name: ITriplePattern
  nameWithType: ITriplePattern
  fullName: VDS.RDF.Query.Patterns.ITriplePattern
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ITriplePattern
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 40
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nInterface for Triple Patterns.\n"
  example: []
  syntax:
    content: 'public interface ITriplePattern : IComparable<ITriplePattern>'
    content.vb: >-
      Public Interface ITriplePattern
          Inherits IComparable(Of ITriplePattern)
  inheritedMembers:
  - System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  extensionMethods:
  - VDS.RDF.Query.Patterns.ITriplePattern.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  id: Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  langs:
  - csharp
  - vb
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ITriplePattern.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Evaluate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nEvaluates the Triple Pattern in the given Evaluation Context.\n"
  example: []
  syntax:
    content: void Evaluate(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Query Evaluation Context.
    content.vb: Sub Evaluate(context As SparqlEvaluationContext)
  overload: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate*
- uid: VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  id: PatternType
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  langs:
  - csharp
  - vb
  name: PatternType
  nameWithType: ITriplePattern.PatternType
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PatternType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 52
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Pattern Type.\n"
  example: []
  syntax:
    content: TriplePatternType PatternType { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Patterns.TriplePatternType
    content.vb: ReadOnly Property PatternType As TriplePatternType
  overload: VDS.RDF.Query.Patterns.ITriplePattern.PatternType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  id: IsAcceptAll
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  langs:
  - csharp
  - vb
  name: IsAcceptAll
  nameWithType: ITriplePattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAcceptAll
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether the Pattern accepts all.\n"
  remarks: "\nIndicates that a Pattern is of the form ?s ?p ?o.\n"
  example: []
  syntax:
    content: bool IsAcceptAll { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property IsAcceptAll As Boolean
  overload: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.ITriplePattern.Variables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.Variables
  id: Variables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: ITriplePattern.Variables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.Variables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 71
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the List of Variables used in the Pattern.\n"
  example: []
  syntax:
    content: List<string> Variables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: ReadOnly Property Variables As List(Of String)
  overload: VDS.RDF.Query.Patterns.ITriplePattern.Variables*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  id: FloatingVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  langs:
  - csharp
  - vb
  name: FloatingVariables
  nameWithType: ITriplePattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FloatingVariables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 79
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the enumeration of floating variables in the pattern i.e. variables that are not guaranteed to have a bound value.\n"
  example: []
  syntax:
    content: IEnumerable<string> FloatingVariables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: ReadOnly Property FloatingVariables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  id: FixedVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  langs:
  - csharp
  - vb
  name: FixedVariables
  nameWithType: ITriplePattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FixedVariables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 84
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the enumeration of fixed variables in the pattern i.e. variables that are guaranteed to have a bound value.\n"
  example: []
  syntax:
    content: IEnumerable<string> FixedVariables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: ReadOnly Property FixedVariables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  id: UsesDefaultDataset
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  langs:
  - csharp
  - vb
  name: UsesDefaultDataset
  nameWithType: ITriplePattern.UsesDefaultDataset
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UsesDefaultDataset
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 92
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether a Triple Pattern uses the Default Dataset when evaluated.\n"
  remarks: "\nAlmost all Triple Patterns use the Default Dataset unless they are sub-query patterns which themselves don&apos;t use the Default Dataset or they contain an expression (in the case of BIND/LET/FILTERs) which does not use the Default Dataset.\n"
  example: []
  syntax:
    content: bool UsesDefaultDataset { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property UsesDefaultDataset As Boolean
  overload: VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  id: HasNoBlankVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  langs:
  - csharp
  - vb
  name: HasNoBlankVariables
  nameWithType: ITriplePattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasNoBlankVariables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether a Triple Pattern does not contain any Blank Variables.\n"
  example: []
  syntax:
    content: bool HasNoBlankVariables { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property HasNoBlankVariables As Boolean
  overload: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  commentId: M:System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  parent: System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(ITriplePattern)
  nameWithType: IComparable<ITriplePattern>.CompareTo(ITriplePattern)
  fullName: System.IComparable<VDS.RDF.Query.Patterns.ITriplePattern>.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  nameWithType.vb: IComparable(Of ITriplePattern).CompareTo(ITriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.ITriplePattern).CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<ITriplePattern>.CompareTo
    fullName: System.IComparable<VDS.RDF.Query.Patterns.ITriplePattern>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of ITriplePattern).CompareTo
    fullName: System.IComparable(Of VDS.RDF.Query.Patterns.ITriplePattern).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.ITriplePattern.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ITriplePattern>()
  nameWithType: Extensions.AsEnumerable<ITriplePattern>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.ITriplePattern>()
  nameWithType.vb: Extensions.AsEnumerable(Of ITriplePattern)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.ITriplePattern)()
  name.vb: AsEnumerable(Of ITriplePattern)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ITriplePattern>
    nameWithType: Extensions.AsEnumerable<ITriplePattern>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.ITriplePattern>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ITriplePattern)
    nameWithType: Extensions.AsEnumerable(Of ITriplePattern)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.ITriplePattern)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  commentId: T:System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ITriplePattern>
  nameWithType: IComparable<ITriplePattern>
  fullName: System.IComparable<VDS.RDF.Query.Patterns.ITriplePattern>
  nameWithType.vb: IComparable(Of ITriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.ITriplePattern)
  name.vb: IComparable(Of ITriplePattern)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate*
  commentId: Overload:VDS.RDF.Query.Patterns.ITriplePattern.Evaluate
  name: Evaluate
  nameWithType: ITriplePattern.Evaluate
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Patterns.ITriplePattern.PatternType*
  commentId: Overload:VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  name: PatternType
  nameWithType: ITriplePattern.PatternType
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.PatternType
- uid: VDS.RDF.Query.Patterns.TriplePatternType
  commentId: T:VDS.RDF.Query.Patterns.TriplePatternType
  parent: VDS.RDF.Query.Patterns
  name: TriplePatternType
  nameWithType: TriplePatternType
  fullName: VDS.RDF.Query.Patterns.TriplePatternType
- uid: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll*
  commentId: Overload:VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  name: IsAcceptAll
  nameWithType: ITriplePattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Patterns.ITriplePattern.Variables*
  commentId: Overload:VDS.RDF.Query.Patterns.ITriplePattern.Variables
  name: Variables
  nameWithType: ITriplePattern.Variables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.Variables
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  name: FloatingVariables
  nameWithType: ITriplePattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  name: FixedVariables
  nameWithType: ITriplePattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset*
  commentId: Overload:VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  name: UsesDefaultDataset
  nameWithType: ITriplePattern.UsesDefaultDataset
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
- uid: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  name: HasNoBlankVariables
  nameWithType: ITriplePattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
