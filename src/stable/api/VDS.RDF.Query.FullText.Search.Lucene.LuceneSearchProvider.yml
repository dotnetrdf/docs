### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  commentId: T:VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  id: LuceneSearchProvider
  parent: VDS.RDF.Query.FullText.Search.Lucene
  children:
  - VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory)
  - VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer)
  - VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,System.Boolean)
  - VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)
  - VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema,System.Boolean)
  - VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,System.Boolean)
  - VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)
  - VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema,System.Boolean)
  langs:
  - csharp
  - vb
  name: LuceneSearchProvider
  nameWithType: LuceneSearchProvider
  fullName: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LuceneSearchProvider
    path: ../../dotNetRDF/Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
    startLine: 37
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nA Full Text Search provider using Lucene.Net.\n"
  example: []
  syntax:
    content: 'public class LuceneSearchProvider : BaseLuceneSearchProvider, IFullTextSearchProvider, IDisposable, IConfigurationSerializable'
    content.vb: >-
      Public Class LuceneSearchProvider
          Inherits BaseLuceneSearchProvider
          Implements IFullTextSearchProvider, IDisposable, IConfigurationSerializable
  inheritance:
  - System.Object
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  implements:
  - VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
  - IDisposable
  - VDS.RDF.Configuration.IConfigurationSerializable
  inheritedMembers:
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double,System.Int32)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Int32)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double,System.Int32)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Int32)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.IsAutoSynced
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  extensionMethods:
  - VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema,System.Boolean)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema,System.Boolean)
  id: '#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema,System.Boolean)'
  parent: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  langs:
  - csharp
  - vb
  name: LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, IFullTextIndexSchema, Boolean)
  nameWithType: LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, IFullTextIndexSchema, Boolean)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
    startLine: 48
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nCreates a new Lucene Search Provider.\n"
  example: []
  syntax:
    content: public LuceneSearchProvider(Lucene.Net.Util.Version ver, Directory indexDir, Analyzer analyzer, IFullTextIndexSchema schema, bool autoSync)
    parameters:
    - id: ver
      type: Lucene.Net.Util.Version
      description: Version.
    - id: indexDir
      type: Directory
      description: Directory.
    - id: analyzer
      type: Analyzer
      description: Analyzer.
    - id: schema
      type: VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema
      description: Index Schema.
    - id: autoSync
      type: System.Boolean
      description: Whether to keep the search provider in sync with the index.
    content.vb: Public Sub New(ver As Lucene.Net.Util.Version, indexDir As Directory, analyzer As Analyzer, schema As IFullTextIndexSchema, autoSync As Boolean)
  overload: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)
  id: '#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)'
  parent: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  langs:
  - csharp
  - vb
  name: LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, IFullTextIndexSchema)
  nameWithType: LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, IFullTextIndexSchema)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
    startLine: 58
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nCreates a new Lucene Search Provider.\n"
  example: []
  syntax:
    content: public LuceneSearchProvider(Lucene.Net.Util.Version ver, Directory indexDir, Analyzer analyzer, IFullTextIndexSchema schema)
    parameters:
    - id: ver
      type: Lucene.Net.Util.Version
      description: Version.
    - id: indexDir
      type: Directory
      description: Directory.
    - id: analyzer
      type: Analyzer
      description: Analyzer.
    - id: schema
      type: VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema
      description: Index Schema.
    content.vb: Public Sub New(ver As Lucene.Net.Util.Version, indexDir As Directory, analyzer As Analyzer, schema As IFullTextIndexSchema)
  overload: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,System.Boolean)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,System.Boolean)
  id: '#ctor(Lucene.Net.Util.Version,Directory,Analyzer,System.Boolean)'
  parent: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  langs:
  - csharp
  - vb
  name: LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, Boolean)
  nameWithType: LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, Boolean)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
    startLine: 71
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nCreates a new Lucene Search Provider.\n"
  remarks: "\nUses the <xref href=\"VDS.RDF.Query.FullText.Schema.DefaultIndexSchema\" data-throw-if-not-resolved=\"false\"></xref> as the schema.\n"
  example: []
  syntax:
    content: public LuceneSearchProvider(Lucene.Net.Util.Version ver, Directory indexDir, Analyzer analyzer, bool autoSync)
    parameters:
    - id: ver
      type: Lucene.Net.Util.Version
      description: Version.
    - id: indexDir
      type: Directory
      description: Directory.
    - id: analyzer
      type: Analyzer
      description: Analyzer.
    - id: autoSync
      type: System.Boolean
      description: Whether to keep the search provider in sync with the index.
    content.vb: Public Sub New(ver As Lucene.Net.Util.Version, indexDir As Directory, analyzer As Analyzer, autoSync As Boolean)
  overload: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer)
  id: '#ctor(Lucene.Net.Util.Version,Directory,Analyzer)'
  parent: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  langs:
  - csharp
  - vb
  name: LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer)
  nameWithType: LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
    startLine: 83
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nCreates a new Lucene Search Provider.\n"
  remarks: "\nUses the <xref href=\"VDS.RDF.Query.FullText.Schema.DefaultIndexSchema\" data-throw-if-not-resolved=\"false\"></xref> as the schema.\n"
  example: []
  syntax:
    content: public LuceneSearchProvider(Lucene.Net.Util.Version ver, Directory indexDir, Analyzer analyzer)
    parameters:
    - id: ver
      type: Lucene.Net.Util.Version
      description: Version.
    - id: indexDir
      type: Directory
      description: Directory.
    - id: analyzer
      type: Analyzer
      description: Analyzer.
    content.vb: Public Sub New(ver As Lucene.Net.Util.Version, indexDir As Directory, analyzer As Analyzer)
  overload: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema,System.Boolean)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema,System.Boolean)
  id: '#ctor(Lucene.Net.Util.Version,Directory,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema,System.Boolean)'
  parent: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  langs:
  - csharp
  - vb
  name: LuceneSearchProvider(Lucene.Net.Util.Version, Directory, IFullTextIndexSchema, Boolean)
  nameWithType: LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, IFullTextIndexSchema, Boolean)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
    startLine: 96
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nCreates a new Lucene Search Provider.\n"
  remarks: "\nUses the <see cref=\"!:StandardAnalyzer\">StandardAnalyzer</see> as the analyzer.\n"
  example: []
  syntax:
    content: public LuceneSearchProvider(Lucene.Net.Util.Version ver, Directory indexDir, IFullTextIndexSchema schema, bool autoSync)
    parameters:
    - id: ver
      type: Lucene.Net.Util.Version
      description: Version.
    - id: indexDir
      type: Directory
      description: Directory.
    - id: schema
      type: VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema
      description: Index Schema.
    - id: autoSync
      type: System.Boolean
      description: Whether to keep the search provider in sync with the index.
    content.vb: Public Sub New(ver As Lucene.Net.Util.Version, indexDir As Directory, schema As IFullTextIndexSchema, autoSync As Boolean)
  overload: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)
  id: '#ctor(Lucene.Net.Util.Version,Directory,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)'
  parent: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  langs:
  - csharp
  - vb
  name: LuceneSearchProvider(Lucene.Net.Util.Version, Directory, IFullTextIndexSchema)
  nameWithType: LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, IFullTextIndexSchema)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
    startLine: 109
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nCreates a new Lucene Search Provider.\n"
  remarks: "\nUses the <see cref=\"!:StandardAnalyzer\">StandardAnalyzer</see> as the analyzer.\n"
  example: []
  syntax:
    content: public LuceneSearchProvider(Lucene.Net.Util.Version ver, Directory indexDir, IFullTextIndexSchema schema)
    parameters:
    - id: ver
      type: Lucene.Net.Util.Version
      description: Version.
    - id: indexDir
      type: Directory
      description: Directory.
    - id: schema
      type: VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema
      description: Index Schema.
    content.vb: Public Sub New(ver As Lucene.Net.Util.Version, indexDir As Directory, schema As IFullTextIndexSchema)
  overload: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,System.Boolean)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,System.Boolean)
  id: '#ctor(Lucene.Net.Util.Version,Directory,System.Boolean)'
  parent: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  langs:
  - csharp
  - vb
  name: LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Boolean)
  nameWithType: LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, Boolean)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
    startLine: 121
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nCreates a new Lucene Search Provider.\n"
  remarks: "\nUses the <xref href=\"VDS.RDF.Query.FullText.Schema.DefaultIndexSchema\" data-throw-if-not-resolved=\"false\"></xref> as the schema and the <see cref=\"!:StandardAnalyzer\">StandardAnalyzer</see> as the analyzer.\n"
  example: []
  syntax:
    content: public LuceneSearchProvider(Lucene.Net.Util.Version ver, Directory indexDir, bool autoSync)
    parameters:
    - id: ver
      type: Lucene.Net.Util.Version
      description: Version.
    - id: indexDir
      type: Directory
      description: Directory.
    - id: autoSync
      type: System.Boolean
      description: Whether to jeep the search provider in sync with the index.
    content.vb: Public Sub New(ver As Lucene.Net.Util.Version, indexDir As Directory, autoSync As Boolean)
  overload: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory)
  id: '#ctor(Lucene.Net.Util.Version,Directory)'
  parent: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  langs:
  - csharp
  - vb
  name: LuceneSearchProvider(Lucene.Net.Util.Version, Directory)
  nameWithType: LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.LuceneSearchProvider(Lucene.Net.Util.Version, Directory)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/LuceneSearchProvider.cs
    startLine: 132
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nCreates a new Lucene Search Provider.\n"
  remarks: "\nUses the <xref href=\"VDS.RDF.Query.FullText.Schema.DefaultIndexSchema\" data-throw-if-not-resolved=\"false\"></xref> as the schema and the <see cref=\"!:StandardAnalyzer\">StandardAnalyzer</see> as the analyzer.\n"
  example: []
  syntax:
    content: public LuceneSearchProvider(Lucene.Net.Util.Version ver, Directory indexDir)
    parameters:
    - id: ver
      type: Lucene.Net.Util.Version
      description: Version.
    - id: indexDir
      type: Directory
      description: Directory.
    content.vb: Public Sub New(ver As Lucene.Net.Util.Version, indexDir As Directory)
  overload: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.FullText.Search.Lucene
  commentId: N:VDS.RDF.Query.FullText.Search.Lucene
  name: VDS.RDF.Query.FullText.Search.Lucene
  nameWithType: VDS.RDF.Query.FullText.Search.Lucene
  fullName: VDS.RDF.Query.FullText.Search.Lucene
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  commentId: T:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  parent: VDS.RDF.Query.FullText.Search.Lucene
  name: BaseLuceneSearchProvider
  nameWithType: BaseLuceneSearchProvider
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
- uid: VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
  commentId: T:VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
  parent: VDS.RDF.Query.FullText.Search
  name: IFullTextSearchProvider
  nameWithType: IFullTextSearchProvider
  fullName: VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: VDS.RDF.Configuration.IConfigurationSerializable
  commentId: T:VDS.RDF.Configuration.IConfigurationSerializable
  parent: VDS.RDF.Configuration
  name: IConfigurationSerializable
  nameWithType: IConfigurationSerializable
  fullName: VDS.RDF.Configuration.IConfigurationSerializable
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double,System.Int32)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double,System.Int32)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  isExternal: true
  name: Match(String, Double, Int32)
  nameWithType: BaseLuceneSearchProvider.Match(String, Double, Int32)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String, System.Double, System.Int32)
  spec.csharp:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double,System.Int32)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double,System.Int32)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  isExternal: true
  name: Match(String, Double)
  nameWithType: BaseLuceneSearchProvider.Match(String, Double)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String, System.Double)
  spec.csharp:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Int32)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Int32)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  isExternal: true
  name: Match(String, Int32)
  nameWithType: BaseLuceneSearchProvider.Match(String, Int32)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String, System.Int32)
  spec.csharp:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Int32)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Int32)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  isExternal: true
  name: Match(String)
  nameWithType: BaseLuceneSearchProvider.Match(String)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String)
  spec.csharp:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double,System.Int32)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double,System.Int32)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  isExternal: true
  name: Match(IEnumerable<Uri>, String, Double, Int32)
  nameWithType: BaseLuceneSearchProvider.Match(IEnumerable<Uri>, String, Double, Int32)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable<Uri>, System.String, System.Double, System.Int32)
  nameWithType.vb: BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), String, Double, Int32)
  fullName.vb: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), System.String, System.Double, System.Int32)
  name.vb: Match(IEnumerable(Of Uri), String, Double, Int32)
  spec.csharp:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double,System.Int32)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double,System.Int32)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  isExternal: true
  name: Match(IEnumerable<Uri>, String, Double)
  nameWithType: BaseLuceneSearchProvider.Match(IEnumerable<Uri>, String, Double)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable<Uri>, System.String, System.Double)
  nameWithType.vb: BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), String, Double)
  fullName.vb: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), System.String, System.Double)
  name.vb: Match(IEnumerable(Of Uri), String, Double)
  spec.csharp:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Int32)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Int32)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  isExternal: true
  name: Match(IEnumerable<Uri>, String, Int32)
  nameWithType: BaseLuceneSearchProvider.Match(IEnumerable<Uri>, String, Int32)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable<Uri>, System.String, System.Int32)
  nameWithType.vb: BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), String, Int32)
  fullName.vb: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), System.String, System.Int32)
  name.vb: Match(IEnumerable(Of Uri), String, Int32)
  spec.csharp:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Int32)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Int32)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  isExternal: true
  name: Match(IEnumerable<Uri>, String)
  nameWithType: BaseLuceneSearchProvider.Match(IEnumerable<Uri>, String)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable<Uri>, System.String)
  nameWithType.vb: BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), String)
  fullName.vb: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), System.String)
  name.vb: Match(IEnumerable(Of Uri), String)
  spec.csharp:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String)
    name: Match
    nameWithType: BaseLuceneSearchProvider.Match
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.IsAutoSynced
  commentId: P:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.IsAutoSynced
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  name: IsAutoSynced
  nameWithType: BaseLuceneSearchProvider.IsAutoSynced
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.IsAutoSynced
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  name: Dispose()
  nameWithType: BaseLuceneSearchProvider.Dispose()
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose()
  spec.csharp:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose
    name: Dispose
    nameWithType: BaseLuceneSearchProvider.Dispose
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose
    name: Dispose
    nameWithType: BaseLuceneSearchProvider.Dispose
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  name: DisposeInternal()
  nameWithType: BaseLuceneSearchProvider.DisposeInternal()
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal()
  spec.csharp:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal
    name: DisposeInternal
    nameWithType: BaseLuceneSearchProvider.DisposeInternal
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal
    name: DisposeInternal
    nameWithType: BaseLuceneSearchProvider.DisposeInternal
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  name: SerializeConfiguration(ConfigurationSerializationContext)
  nameWithType: BaseLuceneSearchProvider.SerializeConfiguration(ConfigurationSerializationContext)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
    name: SerializeConfiguration
    nameWithType: BaseLuceneSearchProvider.SerializeConfiguration
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Configuration.ConfigurationSerializationContext
    name: ConfigurationSerializationContext
    nameWithType: ConfigurationSerializationContext
    fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
    name: SerializeConfiguration
    nameWithType: BaseLuceneSearchProvider.SerializeConfiguration
    fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Configuration.ConfigurationSerializationContext
    name: ConfigurationSerializationContext
    nameWithType: ConfigurationSerializationContext
    fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<LuceneSearchProvider>()
  nameWithType: Extensions.AsEnumerable<LuceneSearchProvider>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider>()
  nameWithType.vb: Extensions.AsEnumerable(Of LuceneSearchProvider)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider)()
  name.vb: AsEnumerable(Of LuceneSearchProvider)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<LuceneSearchProvider>
    nameWithType: Extensions.AsEnumerable<LuceneSearchProvider>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of LuceneSearchProvider)
    nameWithType: Extensions.AsEnumerable(Of LuceneSearchProvider)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.FullText.Search
  commentId: N:VDS.RDF.Query.FullText.Search
  name: VDS.RDF.Query.FullText.Search
  nameWithType: VDS.RDF.Query.FullText.Search
  fullName: VDS.RDF.Query.FullText.Search
- uid: VDS.RDF.Configuration
  commentId: N:VDS.RDF.Configuration
  name: VDS.RDF.Configuration
  nameWithType: VDS.RDF.Configuration
  fullName: VDS.RDF.Configuration
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor*
  commentId: Overload:VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.#ctor
  name: LuceneSearchProvider
  nameWithType: LuceneSearchProvider.LuceneSearchProvider
  fullName: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider.LuceneSearchProvider
- uid: Lucene.Net.Util.Version
  isExternal: true
  name: Lucene.Net.Util.Version
  nameWithType: Lucene.Net.Util.Version
  fullName: Lucene.Net.Util.Version
- uid: Directory
  isExternal: true
  name: Directory
  nameWithType: Directory
  fullName: Directory
- uid: Analyzer
  isExternal: true
  name: Analyzer
  nameWithType: Analyzer
  fullName: Analyzer
- uid: VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema
  commentId: T:VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema
  parent: VDS.RDF.Query.FullText.Schema
  name: IFullTextIndexSchema
  nameWithType: IFullTextIndexSchema
  fullName: VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.FullText.Schema
  commentId: N:VDS.RDF.Query.FullText.Schema
  name: VDS.RDF.Query.FullText.Schema
  nameWithType: VDS.RDF.Query.FullText.Schema
  fullName: VDS.RDF.Query.FullText.Schema
- uid: VDS.RDF.Query.FullText.Schema.DefaultIndexSchema
  commentId: T:VDS.RDF.Query.FullText.Schema.DefaultIndexSchema
  name: DefaultIndexSchema
  nameWithType: DefaultIndexSchema
  fullName: VDS.RDF.Query.FullText.Schema.DefaultIndexSchema
