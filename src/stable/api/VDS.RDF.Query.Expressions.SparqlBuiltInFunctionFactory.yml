### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory
  commentId: T:VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory
  id: SparqlBuiltInFunctionFactory
  parent: VDS.RDF.Query.Expressions
  children:
  - VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionAggregates
  - VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionFunctions
  - VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.SparqlFunctionsNamespace
  - VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  langs:
  - csharp
  - vb
  name: SparqlBuiltInFunctionFactory
  nameWithType: SparqlBuiltInFunctionFactory
  fullName: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/SparqlBuiltInFunctionFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlBuiltInFunctionFactory
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/SparqlBuiltInFunctionFactory.cs
    startLine: 48
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nExpression Factory which generates SPARQL Function expressions.\n"
  remarks: "\nThis supports the requirement of SPARQL 1.1 that all functions can be accessed via URI as well as by keyword.  This also means that SPARQL 1.1 functions can be used in SPARQL 1.0 mode by using their URIs instead of their keywords and they are then treated simply as extension functions.\n"
  example: []
  syntax:
    content: 'public class SparqlBuiltInFunctionFactory : ISparqlCustomExpressionFactory'
    content.vb: >-
      Public Class SparqlBuiltInFunctionFactory
          Implements ISparqlCustomExpressionFactory
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.SparqlFunctionsNamespace
  commentId: F:VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.SparqlFunctionsNamespace
  id: SparqlFunctionsNamespace
  parent: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory
  langs:
  - csharp
  - vb
  name: SparqlFunctionsNamespace
  nameWithType: SparqlBuiltInFunctionFactory.SparqlFunctionsNamespace
  fullName: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.SparqlFunctionsNamespace
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/SparqlBuiltInFunctionFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlFunctionsNamespace
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/SparqlBuiltInFunctionFactory.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nNamespace Uri for SPARQL Built In Functions Namespace.\n"
  example: []
  syntax:
    content: public const string SparqlFunctionsNamespace = "http://www.w3.org/ns/sparql#"
    return:
      type: System.String
    content.vb: Public Const SparqlFunctionsNamespace As String = "http://www.w3.org/ns/sparql#"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  commentId: M:VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  id: TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  parent: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory
  langs:
  - csharp
  - vb
  name: TryCreateExpression(Uri, List<ISparqlExpression>, Dictionary<String, ISparqlExpression>, out ISparqlExpression)
  nameWithType: SparqlBuiltInFunctionFactory.TryCreateExpression(Uri, List<ISparqlExpression>, Dictionary<String, ISparqlExpression>, out ISparqlExpression)
  fullName: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.TryCreateExpression(System.Uri, System.Collections.Generic.List<VDS.RDF.Query.Expressions.ISparqlExpression>, System.Collections.Generic.Dictionary<System.String, VDS.RDF.Query.Expressions.ISparqlExpression>, out VDS.RDF.Query.Expressions.ISparqlExpression)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/SparqlBuiltInFunctionFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryCreateExpression
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/SparqlBuiltInFunctionFactory.cs
    startLine: 64
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nTries to create a SPARQL Function expression if the function Uri correseponds to a supported SPARQL Function.\n"
  example: []
  syntax:
    content: public bool TryCreateExpression(Uri u, List<ISparqlExpression> args, Dictionary<string, ISparqlExpression> scalarArguments, out ISparqlExpression expr)
    parameters:
    - id: u
      type: System.Uri
      description: Function Uri.
    - id: args
      type: System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression}
      description: Function Arguments.
    - id: scalarArguments
      type: System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression}
      description: Scalar Arguments.
    - id: expr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: Generated Expression.
    return:
      type: System.Boolean
      description: Whether an expression was successfully generated.
    content.vb: Public Function TryCreateExpression(u As Uri, args As List(Of ISparqlExpression), scalarArguments As Dictionary(Of String, ISparqlExpression), ByRef expr As ISparqlExpression) As Boolean
  overload: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.TryCreateExpression*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  nameWithType.vb: SparqlBuiltInFunctionFactory.TryCreateExpression(Uri, List(Of ISparqlExpression), Dictionary(Of String, ISparqlExpression), ByRef ISparqlExpression)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.TryCreateExpression(System.Uri, System.Collections.Generic.List(Of VDS.RDF.Query.Expressions.ISparqlExpression), System.Collections.Generic.Dictionary(Of System.String, VDS.RDF.Query.Expressions.ISparqlExpression), ByRef VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: TryCreateExpression(Uri, List(Of ISparqlExpression), Dictionary(Of String, ISparqlExpression), ByRef ISparqlExpression)
- uid: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionFunctions
  commentId: P:VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionFunctions
  id: AvailableExtensionFunctions
  parent: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory
  langs:
  - csharp
  - vb
  name: AvailableExtensionFunctions
  nameWithType: SparqlBuiltInFunctionFactory.AvailableExtensionFunctions
  fullName: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionFunctions
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/SparqlBuiltInFunctionFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AvailableExtensionFunctions
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/SparqlBuiltInFunctionFactory.cs
    startLine: 650
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nGets the URIs of available SPARQL Functions.\n"
  example: []
  syntax:
    content: public IEnumerable<Uri> AvailableExtensionFunctions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public ReadOnly Property AvailableExtensionFunctions As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionFunctions*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionFunctions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionAggregates
  commentId: P:VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionAggregates
  id: AvailableExtensionAggregates
  parent: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory
  langs:
  - csharp
  - vb
  name: AvailableExtensionAggregates
  nameWithType: SparqlBuiltInFunctionFactory.AvailableExtensionAggregates
  fullName: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionAggregates
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/SparqlBuiltInFunctionFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AvailableExtensionAggregates
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/SparqlBuiltInFunctionFactory.cs
    startLine: 662
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nGets the URIs of available SPARQL Aggregates.\n"
  example: []
  syntax:
    content: public IEnumerable<Uri> AvailableExtensionAggregates { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public ReadOnly Property AvailableExtensionAggregates As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionAggregates*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionAggregates
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  commentId: T:VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  parent: VDS.RDF.Query.Expressions
  name: ISparqlCustomExpressionFactory
  nameWithType: ISparqlCustomExpressionFactory
  fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlBuiltInFunctionFactory>()
  nameWithType: Extensions.AsEnumerable<SparqlBuiltInFunctionFactory>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlBuiltInFunctionFactory)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory)()
  name.vb: AsEnumerable(Of SparqlBuiltInFunctionFactory)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlBuiltInFunctionFactory>
    nameWithType: Extensions.AsEnumerable<SparqlBuiltInFunctionFactory>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlBuiltInFunctionFactory)
    nameWithType: Extensions.AsEnumerable(Of SparqlBuiltInFunctionFactory)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.TryCreateExpression*
  commentId: Overload:VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.TryCreateExpression
  name: TryCreateExpression
  nameWithType: SparqlBuiltInFunctionFactory.TryCreateExpression
  fullName: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.TryCreateExpression
- uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  commentId: M:VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  parent: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  isExternal: true
  name: TryCreateExpression(Uri, List<ISparqlExpression>, Dictionary<String, ISparqlExpression>, ISparqlExpression)
  nameWithType: ISparqlCustomExpressionFactory.TryCreateExpression(Uri, List<ISparqlExpression>, Dictionary<String, ISparqlExpression>, ISparqlExpression)
  fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri, System.Collections.Generic.List<VDS.RDF.Query.Expressions.ISparqlExpression>, System.Collections.Generic.Dictionary<System.String, VDS.RDF.Query.Expressions.ISparqlExpression>, VDS.RDF.Query.Expressions.ISparqlExpression)
  nameWithType.vb: ISparqlCustomExpressionFactory.TryCreateExpression(Uri, List(Of ISparqlExpression), Dictionary(Of String, ISparqlExpression), ISparqlExpression)
  fullName.vb: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri, System.Collections.Generic.List(Of VDS.RDF.Query.Expressions.ISparqlExpression), System.Collections.Generic.Dictionary(Of System.String, VDS.RDF.Query.Expressions.ISparqlExpression), VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: TryCreateExpression(Uri, List(Of ISparqlExpression), Dictionary(Of String, ISparqlExpression), ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
    name: TryCreateExpression
    nameWithType: ISparqlCustomExpressionFactory.TryCreateExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
    name: TryCreateExpression
    nameWithType: ISparqlCustomExpressionFactory.TryCreateExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression}
  commentId: T:System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ISparqlExpression>
  nameWithType: List<ISparqlExpression>
  fullName: System.Collections.Generic.List<VDS.RDF.Query.Expressions.ISparqlExpression>
  nameWithType.vb: List(Of ISparqlExpression)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: List(Of ISparqlExpression)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression}
  commentId: T:System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, ISparqlExpression>
  nameWithType: Dictionary<String, ISparqlExpression>
  fullName: System.Collections.Generic.Dictionary<System.String, VDS.RDF.Query.Expressions.ISparqlExpression>
  nameWithType.vb: Dictionary(Of String, ISparqlExpression)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: Dictionary(Of String, ISparqlExpression)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionFunctions*
  commentId: Overload:VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionFunctions
  name: AvailableExtensionFunctions
  nameWithType: SparqlBuiltInFunctionFactory.AvailableExtensionFunctions
  fullName: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionFunctions
- uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionFunctions
  commentId: P:VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionFunctions
  parent: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  name: AvailableExtensionFunctions
  nameWithType: ISparqlCustomExpressionFactory.AvailableExtensionFunctions
  fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionFunctions
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  commentId: T:System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  nameWithType.vb: IEnumerable(Of Uri)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Uri)
  name.vb: IEnumerable(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionAggregates*
  commentId: Overload:VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionAggregates
  name: AvailableExtensionAggregates
  nameWithType: SparqlBuiltInFunctionFactory.AvailableExtensionAggregates
  fullName: VDS.RDF.Query.Expressions.SparqlBuiltInFunctionFactory.AvailableExtensionAggregates
- uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionAggregates
  commentId: P:VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionAggregates
  parent: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  name: AvailableExtensionAggregates
  nameWithType: ISparqlCustomExpressionFactory.AvailableExtensionAggregates
  fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionAggregates
