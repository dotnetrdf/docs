### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService
  commentId: T:VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService
  id: ExplainPropertyService
  parent: VDS.RDF.Query.Inference.Pellet.Services
  children:
  - VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.GraphCallback,System.Object)
  - VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty(VDS.RDF.Triple)
  - VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProprety(VDS.RDF.Triple,VDS.RDF.GraphCallback,System.Object)
  langs:
  - csharp
  - vb
  name: ExplainPropertyService
  nameWithType: ExplainPropertyService
  fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/ExplainServices.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExplainPropertyService
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/Services/ExplainServices.cs
    startLine: 341
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nRepresents the Explain Property Service provided by a Pellet Server.\n"
  example: []
  syntax:
    content: 'public class ExplainPropertyService : ExplainService'
    content.vb: >-
      Public Class ExplainPropertyService
          Inherits ExplainService
  inheritance:
  - System.Object
  - VDS.RDF.Query.Inference.Pellet.PelletService
  - VDS.RDF.Query.Inference.Pellet.Services.ExplainService
  inheritedMembers:
  - VDS.RDF.Query.Inference.Pellet.Services.ExplainService._baseQuery
  - VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain(System.String)
  - VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain(System.String,VDS.RDF.GraphCallback,System.Object)
  - VDS.RDF.Query.Inference.Pellet.PelletService.Name
  - VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
  - VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  id: ExplainProperty(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService
  langs:
  - csharp
  - vb
  name: ExplainProperty(INode, INode, INode)
  nameWithType: ExplainPropertyService.ExplainProperty(INode, INode, INode)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty(VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/ExplainServices.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExplainProperty
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/Services/ExplainServices.cs
    startLine: 359
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nGets a Graph explaining why the given Triple was derived.\n"
  example: []
  syntax:
    content: public IGraph ExplainProperty(INode subj, INode pred, INode obj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: VDS.RDF.IGraph
      description: ''
    content.vb: Public Function ExplainProperty(subj As INode, pred As INode, obj As INode) As IGraph
  overload: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty(VDS.RDF.Triple)
  id: ExplainProperty(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService
  langs:
  - csharp
  - vb
  name: ExplainProperty(Triple)
  nameWithType: ExplainPropertyService.ExplainProperty(Triple)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/ExplainServices.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExplainProperty
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/Services/ExplainServices.cs
    startLine: 372
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nGets a Graph explaining why the given Triple was derived.\n"
  example: []
  syntax:
    content: public IGraph ExplainProperty(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: VDS.RDF.IGraph
    content.vb: Public Function ExplainProperty(t As Triple) As IGraph
  overload: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.GraphCallback,System.Object)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.GraphCallback,System.Object)
  id: ExplainProperty(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.GraphCallback,System.Object)
  parent: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService
  langs:
  - csharp
  - vb
  name: ExplainProperty(INode, INode, INode, GraphCallback, Object)
  nameWithType: ExplainPropertyService.ExplainProperty(INode, INode, INode, GraphCallback, Object)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty(VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.GraphCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/ExplainServices.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExplainProperty
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/Services/ExplainServices.cs
    startLine: 388
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nGets a Graph explaining why the given Triple was derived.\n"
  remarks: "\nIf the operation succeeds the callback will be invoked normally, if there is an error the callback will be invoked with a instance of <xref href=\"VDS.RDF.AsyncError\" data-throw-if-not-resolved=\"false\"></xref> passed as the state which provides access to the error message and the original state passed in.\n"
  example: []
  syntax:
    content: public void ExplainProperty(INode subj, INode pred, INode obj, GraphCallback callback, object state)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    - id: callback
      type: VDS.RDF.GraphCallback
      description: Callback to invoke when the operation completes.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Public Sub ExplainProperty(subj As INode, pred As INode, obj As INode, callback As GraphCallback, state As Object)
  overload: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProprety(VDS.RDF.Triple,VDS.RDF.GraphCallback,System.Object)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProprety(VDS.RDF.Triple,VDS.RDF.GraphCallback,System.Object)
  id: ExplainProprety(VDS.RDF.Triple,VDS.RDF.GraphCallback,System.Object)
  parent: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService
  langs:
  - csharp
  - vb
  name: ExplainProprety(Triple, GraphCallback, Object)
  nameWithType: ExplainPropertyService.ExplainProprety(Triple, GraphCallback, Object)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProprety(VDS.RDF.Triple, VDS.RDF.GraphCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/ExplainServices.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExplainProprety
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/Services/ExplainServices.cs
    startLine: 406
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nGets a Graph explaining why the given Triple was derived.\n"
  remarks: "\nIf the operation succeeds the callback will be invoked normally, if there is an error the callback will be invoked with a instance of <xref href=\"VDS.RDF.AsyncError\" data-throw-if-not-resolved=\"false\"></xref> passed as the state which provides access to the error message and the original state passed in.\n"
  example: []
  syntax:
    content: public void ExplainProprety(Triple t, GraphCallback callback, object state)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    - id: callback
      type: VDS.RDF.GraphCallback
      description: Callback to invoke when the operation completes.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Public Sub ExplainProprety(t As Triple, callback As GraphCallback, state As Object)
  overload: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProprety*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Inference.Pellet.Services
  commentId: N:VDS.RDF.Query.Inference.Pellet.Services
  name: VDS.RDF.Query.Inference.Pellet.Services
  nameWithType: VDS.RDF.Query.Inference.Pellet.Services
  fullName: VDS.RDF.Query.Inference.Pellet.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Inference.Pellet.PelletService
  commentId: T:VDS.RDF.Query.Inference.Pellet.PelletService
  parent: VDS.RDF.Query.Inference.Pellet
  name: PelletService
  nameWithType: PelletService
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService
- uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainService
  commentId: T:VDS.RDF.Query.Inference.Pellet.Services.ExplainService
  parent: VDS.RDF.Query.Inference.Pellet.Services
  name: ExplainService
  nameWithType: ExplainService
  fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainService
- uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainService._baseQuery
  commentId: F:VDS.RDF.Query.Inference.Pellet.Services.ExplainService._baseQuery
  parent: VDS.RDF.Query.Inference.Pellet.Services.ExplainService
  name: _baseQuery
  nameWithType: ExplainService._baseQuery
  fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainService._baseQuery
- uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain(System.String)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain(System.String)
  parent: VDS.RDF.Query.Inference.Pellet.Services.ExplainService
  isExternal: true
  name: Explain(String)
  nameWithType: ExplainService.Explain(String)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain(System.String)
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain(System.String)
    name: Explain
    nameWithType: ExplainService.Explain
    fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain(System.String)
    name: Explain
    nameWithType: ExplainService.Explain
    fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain(System.String,VDS.RDF.GraphCallback,System.Object)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain(System.String,VDS.RDF.GraphCallback,System.Object)
  parent: VDS.RDF.Query.Inference.Pellet.Services.ExplainService
  isExternal: true
  name: Explain(String, GraphCallback, Object)
  nameWithType: ExplainService.Explain(String, GraphCallback, Object)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain(System.String, VDS.RDF.GraphCallback, System.Object)
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain(System.String,VDS.RDF.GraphCallback,System.Object)
    name: Explain
    nameWithType: ExplainService.Explain
    fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphCallback
    name: GraphCallback
    nameWithType: GraphCallback
    fullName: VDS.RDF.GraphCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain(System.String,VDS.RDF.GraphCallback,System.Object)
    name: Explain
    nameWithType: ExplainService.Explain
    fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainService.Explain
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphCallback
    name: GraphCallback
    nameWithType: GraphCallback
    fullName: VDS.RDF.GraphCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.Pellet.PelletService.Name
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletService.Name
  parent: VDS.RDF.Query.Inference.Pellet.PelletService
  name: Name
  nameWithType: PelletService.Name
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService.Name
- uid: VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
  parent: VDS.RDF.Query.Inference.Pellet.PelletService
  name: Endpoint
  nameWithType: PelletService.Endpoint
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
- uid: VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
  parent: VDS.RDF.Query.Inference.Pellet.PelletService
  name: MimeTypes
  nameWithType: PelletService.MimeTypes
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ExplainPropertyService>()
  nameWithType: Extensions.AsEnumerable<ExplainPropertyService>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService>()
  nameWithType.vb: Extensions.AsEnumerable(Of ExplainPropertyService)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService)()
  name.vb: AsEnumerable(Of ExplainPropertyService)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ExplainPropertyService>
    nameWithType: Extensions.AsEnumerable<ExplainPropertyService>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ExplainPropertyService)
    nameWithType: Extensions.AsEnumerable(Of ExplainPropertyService)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Inference.Pellet
  commentId: N:VDS.RDF.Query.Inference.Pellet
  name: VDS.RDF.Query.Inference.Pellet
  nameWithType: VDS.RDF.Query.Inference.Pellet
  fullName: VDS.RDF.Query.Inference.Pellet
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty*
  commentId: Overload:VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty
  name: ExplainProperty
  nameWithType: ExplainPropertyService.ExplainProperty
  fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProperty
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: VDS.RDF.AsyncError
  commentId: T:VDS.RDF.AsyncError
  name: AsyncError
  nameWithType: AsyncError
  fullName: VDS.RDF.AsyncError
- uid: VDS.RDF.GraphCallback
  commentId: T:VDS.RDF.GraphCallback
  parent: VDS.RDF
  name: GraphCallback
  nameWithType: GraphCallback
  fullName: VDS.RDF.GraphCallback
- uid: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProprety*
  commentId: Overload:VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProprety
  name: ExplainProprety
  nameWithType: ExplainPropertyService.ExplainProprety
  fullName: VDS.RDF.Query.Inference.Pellet.Services.ExplainPropertyService.ExplainProprety
