### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Builder.TriplePatternPredicatePart
  commentId: T:VDS.RDF.Query.Builder.TriplePatternPredicatePart
  id: TriplePatternPredicatePart
  parent: VDS.RDF.Query.Builder
  children:
  - VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate(System.String)
  - VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate(VDS.RDF.Query.Patterns.PatternItem)
  - VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate(VDS.RDF.Query.SparqlVariable)
  - VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri(System.String)
  - VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri(System.Uri)
  - VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri(VDS.RDF.IUriNode)
  langs:
  - csharp
  - vb
  name: TriplePatternPredicatePart
  nameWithType: TriplePatternPredicatePart
  fullName: VDS.RDF.Query.Builder.TriplePatternPredicatePart
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TriplePatternPredicatePart
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nClass responsible for setting the predicate part of triple patterns.\n"
  example: []
  syntax:
    content: public sealed class TriplePatternPredicatePart
    content.vb: Public NotInheritable Class TriplePatternPredicatePart
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Builder.TriplePatternPredicatePart.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate(VDS.RDF.Query.SparqlVariable)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate(VDS.RDF.Query.SparqlVariable)
  id: Predicate(VDS.RDF.Query.SparqlVariable)
  parent: VDS.RDF.Query.Builder.TriplePatternPredicatePart
  langs:
  - csharp
  - vb
  name: Predicate(SparqlVariable)
  nameWithType: TriplePatternPredicatePart.Predicate(SparqlVariable)
  fullName: VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate(VDS.RDF.Query.SparqlVariable)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Predicate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a SPARQL variable as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TriplePatternObjectPart Predicate(SparqlVariable variable)
    parameters:
    - id: variable
      type: VDS.RDF.Query.SparqlVariable
    return:
      type: VDS.RDF.Query.Builder.TriplePatternObjectPart
    content.vb: Public Function Predicate(variable As SparqlVariable) As TriplePatternObjectPart
  overload: VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate(System.String)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate(System.String)
  id: Predicate(System.String)
  parent: VDS.RDF.Query.Builder.TriplePatternPredicatePart
  langs:
  - csharp
  - vb
  name: Predicate(String)
  nameWithType: TriplePatternPredicatePart.Predicate(String)
  fullName: VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Predicate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a SPARQL variable as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TriplePatternObjectPart Predicate(string variableName)
    parameters:
    - id: variableName
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.TriplePatternObjectPart
    content.vb: Public Function Predicate(variableName As String) As TriplePatternObjectPart
  overload: VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate(VDS.RDF.Query.Patterns.PatternItem)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate(VDS.RDF.Query.Patterns.PatternItem)
  id: Predicate(VDS.RDF.Query.Patterns.PatternItem)
  parent: VDS.RDF.Query.Builder.TriplePatternPredicatePart
  langs:
  - csharp
  - vb
  name: Predicate(PatternItem)
  nameWithType: TriplePatternPredicatePart.Predicate(PatternItem)
  fullName: VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate(VDS.RDF.Query.Patterns.PatternItem)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Predicate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
    startLine: 68
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a <xref href=\"VDS.RDF.Query.Patterns.PatternItem\" data-throw-if-not-resolved=\"false\"></xref> as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TriplePatternObjectPart Predicate(PatternItem predicate)
    parameters:
    - id: predicate
      type: VDS.RDF.Query.Patterns.PatternItem
    return:
      type: VDS.RDF.Query.Builder.TriplePatternObjectPart
    content.vb: Public Function Predicate(predicate As PatternItem) As TriplePatternObjectPart
  overload: VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri(System.Uri)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri(System.Uri)
  id: PredicateUri(System.Uri)
  parent: VDS.RDF.Query.Builder.TriplePatternPredicatePart
  langs:
  - csharp
  - vb
  name: PredicateUri(Uri)
  nameWithType: TriplePatternPredicatePart.PredicateUri(Uri)
  fullName: VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PredicateUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
    startLine: 76
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TriplePatternObjectPart PredicateUri(Uri predicateUri)
    parameters:
    - id: predicateUri
      type: System.Uri
    return:
      type: VDS.RDF.Query.Builder.TriplePatternObjectPart
    content.vb: Public Function PredicateUri(predicateUri As Uri) As TriplePatternObjectPart
  overload: VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri(System.String)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri(System.String)
  id: PredicateUri(System.String)
  parent: VDS.RDF.Query.Builder.TriplePatternPredicatePart
  langs:
  - csharp
  - vb
  name: PredicateUri(String)
  nameWithType: TriplePatternPredicatePart.PredicateUri(String)
  fullName: VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PredicateUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
    startLine: 86
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate\" data-throw-if-not-resolved=\"false\"></xref> using a QName.\n"
  remarks: A relevant prefix/base URI must be added to <xref href="VDS.RDF.Query.Builder.IQueryBuilder.Prefixes" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public TriplePatternObjectPart PredicateUri(string predicateQName)
    parameters:
    - id: predicateQName
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.TriplePatternObjectPart
    content.vb: Public Function PredicateUri(predicateQName As String) As TriplePatternObjectPart
  overload: VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri(VDS.RDF.IUriNode)
  id: PredicateUri(VDS.RDF.IUriNode)
  parent: VDS.RDF.Query.Builder.TriplePatternPredicatePart
  langs:
  - csharp
  - vb
  name: PredicateUri(IUriNode)
  nameWithType: TriplePatternPredicatePart.PredicateUri(IUriNode)
  fullName: VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri(VDS.RDF.IUriNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PredicateUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/TriplePatternPredicatePart.cs
    startLine: 95
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate\" data-throw-if-not-resolved=\"false\"></xref> using a <xref href=\"VDS.RDF.IUriNode\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TriplePatternObjectPart PredicateUri(IUriNode predicateNode)
    parameters:
    - id: predicateNode
      type: VDS.RDF.IUriNode
    return:
      type: VDS.RDF.Query.Builder.TriplePatternObjectPart
    content.vb: Public Function PredicateUri(predicateNode As IUriNode) As TriplePatternObjectPart
  overload: VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Builder
  commentId: N:VDS.RDF.Query.Builder
  name: VDS.RDF.Query.Builder
  nameWithType: VDS.RDF.Query.Builder
  fullName: VDS.RDF.Query.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.TriplePatternPredicatePart.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TriplePatternPredicatePart>()
  nameWithType: Extensions.AsEnumerable<TriplePatternPredicatePart>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.TriplePatternPredicatePart>()
  nameWithType.vb: Extensions.AsEnumerable(Of TriplePatternPredicatePart)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.TriplePatternPredicatePart)()
  name.vb: AsEnumerable(Of TriplePatternPredicatePart)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TriplePatternPredicatePart>
    nameWithType: Extensions.AsEnumerable<TriplePatternPredicatePart>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.TriplePatternPredicatePart>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TriplePatternPredicatePart)
    nameWithType: Extensions.AsEnumerable(Of TriplePatternPredicatePart)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.TriplePatternPredicatePart)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
  commentId: P:VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  name: Predicate
  nameWithType: IMatchTriplePattern.Predicate
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
- uid: VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate*
  commentId: Overload:VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate
  name: Predicate
  nameWithType: TriplePatternPredicatePart.Predicate
  fullName: VDS.RDF.Query.Builder.TriplePatternPredicatePart.Predicate
- uid: VDS.RDF.Query.SparqlVariable
  commentId: T:VDS.RDF.Query.SparqlVariable
  parent: VDS.RDF.Query
  name: SparqlVariable
  nameWithType: SparqlVariable
  fullName: VDS.RDF.Query.SparqlVariable
- uid: VDS.RDF.Query.Builder.TriplePatternObjectPart
  commentId: T:VDS.RDF.Query.Builder.TriplePatternObjectPart
  parent: VDS.RDF.Query.Builder
  name: TriplePatternObjectPart
  nameWithType: TriplePatternObjectPart
  fullName: VDS.RDF.Query.Builder.TriplePatternObjectPart
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern
  commentId: T:VDS.RDF.Query.Patterns.IMatchTriplePattern
  parent: VDS.RDF.Query.Patterns
  name: IMatchTriplePattern
  nameWithType: IMatchTriplePattern
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Patterns.PatternItem
  commentId: T:VDS.RDF.Query.Patterns.PatternItem
  parent: VDS.RDF.Query.Patterns
  name: PatternItem
  nameWithType: PatternItem
  fullName: VDS.RDF.Query.Patterns.PatternItem
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri*
  commentId: Overload:VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri
  name: PredicateUri
  nameWithType: TriplePatternPredicatePart.PredicateUri
  fullName: VDS.RDF.Query.Builder.TriplePatternPredicatePart.PredicateUri
- uid: VDS.RDF.Query.Builder.IQueryBuilder.Prefixes
  commentId: P:VDS.RDF.Query.Builder.IQueryBuilder.Prefixes
  parent: VDS.RDF.Query.Builder.IQueryBuilder
  name: Prefixes
  nameWithType: IQueryBuilder.Prefixes
  fullName: VDS.RDF.Query.Builder.IQueryBuilder.Prefixes
- uid: VDS.RDF.Query.Builder.IQueryBuilder
  commentId: T:VDS.RDF.Query.Builder.IQueryBuilder
  parent: VDS.RDF.Query.Builder
  name: IQueryBuilder
  nameWithType: IQueryBuilder
  fullName: VDS.RDF.Query.Builder.IQueryBuilder
- uid: VDS.RDF.IUriNode
  commentId: T:VDS.RDF.IUriNode
  parent: VDS.RDF
  name: IUriNode
  nameWithType: IUriNode
  fullName: VDS.RDF.IUriNode
