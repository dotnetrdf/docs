### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Writing.OutputRdfCollection
  commentId: T:VDS.RDF.Writing.OutputRdfCollection
  id: OutputRdfCollection
  parent: VDS.RDF.Writing
  children:
  - VDS.RDF.Writing.OutputRdfCollection.#ctor(System.Boolean)
  - VDS.RDF.Writing.OutputRdfCollection.HasBeenWritten
  - VDS.RDF.Writing.OutputRdfCollection.IsExplicit
  - VDS.RDF.Writing.OutputRdfCollection.Triples
  langs:
  - csharp
  - vb
  name: OutputRdfCollection
  nameWithType: OutputRdfCollection
  fullName: VDS.RDF.Writing.OutputRdfCollection
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/WriterUtilities.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OutputRdfCollection
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/WriterUtilities.cs
    startLine: 261
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nClass used to store Collections as part of the writing process for Compressing Writers.\n"
  example: []
  syntax:
    content: public class OutputRdfCollection
    content.vb: Public Class OutputRdfCollection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Writing.OutputRdfCollection.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Writing.OutputRdfCollection.#ctor(System.Boolean)
  commentId: M:VDS.RDF.Writing.OutputRdfCollection.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: VDS.RDF.Writing.OutputRdfCollection
  langs:
  - csharp
  - vb
  name: OutputRdfCollection(Boolean)
  nameWithType: OutputRdfCollection.OutputRdfCollection(Boolean)
  fullName: VDS.RDF.Writing.OutputRdfCollection.OutputRdfCollection(System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/WriterUtilities.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/WriterUtilities.cs
    startLine: 271
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nCreates a new Instance of a Collection.\n"
  example: []
  syntax:
    content: public OutputRdfCollection(bool explicitCollection)
    parameters:
    - id: explicitCollection
      type: System.Boolean
      description: Whether the collection is explicit (specified using square bracket notation) or implicit (specified using normal parentheses).
    content.vb: Public Sub New(explicitCollection As Boolean)
  overload: VDS.RDF.Writing.OutputRdfCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.OutputRdfCollection.IsExplicit
  commentId: P:VDS.RDF.Writing.OutputRdfCollection.IsExplicit
  id: IsExplicit
  parent: VDS.RDF.Writing.OutputRdfCollection
  langs:
  - csharp
  - vb
  name: IsExplicit
  nameWithType: OutputRdfCollection.IsExplicit
  fullName: VDS.RDF.Writing.OutputRdfCollection.IsExplicit
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/WriterUtilities.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsExplicit
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/WriterUtilities.cs
    startLine: 279
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGets whether this is an Explicit collection (specified using square bracket notation).\n"
  example: []
  syntax:
    content: public bool IsExplicit { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsExplicit As Boolean
  overload: VDS.RDF.Writing.OutputRdfCollection.IsExplicit*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Writing.OutputRdfCollection.HasBeenWritten
  commentId: P:VDS.RDF.Writing.OutputRdfCollection.HasBeenWritten
  id: HasBeenWritten
  parent: VDS.RDF.Writing.OutputRdfCollection
  langs:
  - csharp
  - vb
  name: HasBeenWritten
  nameWithType: OutputRdfCollection.HasBeenWritten
  fullName: VDS.RDF.Writing.OutputRdfCollection.HasBeenWritten
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/WriterUtilities.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasBeenWritten
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/WriterUtilities.cs
    startLine: 284
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGets/Sets whether the Collection has been written.\n"
  example: []
  syntax:
    content: public bool HasBeenWritten { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HasBeenWritten As Boolean
  overload: VDS.RDF.Writing.OutputRdfCollection.HasBeenWritten*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.OutputRdfCollection.Triples
  commentId: P:VDS.RDF.Writing.OutputRdfCollection.Triples
  id: Triples
  parent: VDS.RDF.Writing.OutputRdfCollection
  langs:
  - csharp
  - vb
  name: Triples
  nameWithType: OutputRdfCollection.Triples
  fullName: VDS.RDF.Writing.OutputRdfCollection.Triples
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/WriterUtilities.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Triples
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/WriterUtilities.cs
    startLine: 293
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGets the Triples that make up the Collection.\n"
  example: []
  syntax:
    content: public List<Triple> Triples { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{VDS.RDF.Triple}
    content.vb: Public ReadOnly Property Triples As List(Of Triple)
  overload: VDS.RDF.Writing.OutputRdfCollection.Triples*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VDS.RDF.Writing
  commentId: N:VDS.RDF.Writing
  name: VDS.RDF.Writing
  nameWithType: VDS.RDF.Writing
  fullName: VDS.RDF.Writing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Writing.OutputRdfCollection.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<OutputRdfCollection>()
  nameWithType: Extensions.AsEnumerable<OutputRdfCollection>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.OutputRdfCollection>()
  nameWithType.vb: Extensions.AsEnumerable(Of OutputRdfCollection)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.OutputRdfCollection)()
  name.vb: AsEnumerable(Of OutputRdfCollection)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<OutputRdfCollection>
    nameWithType: Extensions.AsEnumerable<OutputRdfCollection>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.OutputRdfCollection>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of OutputRdfCollection)
    nameWithType: Extensions.AsEnumerable(Of OutputRdfCollection)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.OutputRdfCollection)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Writing.OutputRdfCollection.#ctor*
  commentId: Overload:VDS.RDF.Writing.OutputRdfCollection.#ctor
  name: OutputRdfCollection
  nameWithType: OutputRdfCollection.OutputRdfCollection
  fullName: VDS.RDF.Writing.OutputRdfCollection.OutputRdfCollection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Writing.OutputRdfCollection.IsExplicit*
  commentId: Overload:VDS.RDF.Writing.OutputRdfCollection.IsExplicit
  name: IsExplicit
  nameWithType: OutputRdfCollection.IsExplicit
  fullName: VDS.RDF.Writing.OutputRdfCollection.IsExplicit
- uid: VDS.RDF.Writing.OutputRdfCollection.HasBeenWritten*
  commentId: Overload:VDS.RDF.Writing.OutputRdfCollection.HasBeenWritten
  name: HasBeenWritten
  nameWithType: OutputRdfCollection.HasBeenWritten
  fullName: VDS.RDF.Writing.OutputRdfCollection.HasBeenWritten
- uid: VDS.RDF.Writing.OutputRdfCollection.Triples*
  commentId: Overload:VDS.RDF.Writing.OutputRdfCollection.Triples
  name: Triples
  nameWithType: OutputRdfCollection.Triples
  fullName: VDS.RDF.Writing.OutputRdfCollection.Triples
- uid: System.Collections.Generic.List{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.List{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Triple>
  nameWithType: List<Triple>
  fullName: System.Collections.Generic.List<VDS.RDF.Triple>
  nameWithType.vb: List(Of Triple)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.Triple)
  name.vb: List(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
