### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Datasets.WrapperDataset
  commentId: T:VDS.RDF.Query.Datasets.WrapperDataset
  id: WrapperDataset
  parent: VDS.RDF.Query.Datasets
  children:
  - VDS.RDF.Query.Datasets.WrapperDataset.#ctor(VDS.RDF.Query.Datasets.ISparqlDataset)
  - VDS.RDF.Query.Datasets.WrapperDataset._dataset
  - VDS.RDF.Query.Datasets.WrapperDataset.ActiveGraphUris
  - VDS.RDF.Query.Datasets.WrapperDataset.AddGraph(VDS.RDF.IGraph)
  - VDS.RDF.Query.Datasets.WrapperDataset.ContainsTriple(VDS.RDF.Triple)
  - VDS.RDF.Query.Datasets.WrapperDataset.DefaultGraphUris
  - VDS.RDF.Query.Datasets.WrapperDataset.Discard
  - VDS.RDF.Query.Datasets.WrapperDataset.Flush
  - VDS.RDF.Query.Datasets.WrapperDataset.GetModifiableGraph(System.Uri)
  - VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithObject(VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubject(VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.WrapperDataset.Graphs
  - VDS.RDF.Query.Datasets.WrapperDataset.GraphUris
  - VDS.RDF.Query.Datasets.WrapperDataset.HasGraph(System.Uri)
  - VDS.RDF.Query.Datasets.WrapperDataset.HasTriples
  - VDS.RDF.Query.Datasets.WrapperDataset.Item(System.Uri)
  - VDS.RDF.Query.Datasets.WrapperDataset.Lock
  - VDS.RDF.Query.Datasets.WrapperDataset.RemoveGraph(System.Uri)
  - VDS.RDF.Query.Datasets.WrapperDataset.ResetActiveGraph
  - VDS.RDF.Query.Datasets.WrapperDataset.ResetDefaultGraph
  - VDS.RDF.Query.Datasets.WrapperDataset.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  - VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  - VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph(System.Uri)
  - VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  - VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph(System.Uri)
  - VDS.RDF.Query.Datasets.WrapperDataset.Triples
  - VDS.RDF.Query.Datasets.WrapperDataset.UnderlyingDataset
  - VDS.RDF.Query.Datasets.WrapperDataset.UsesUnionDefaultGraph
  langs:
  - csharp
  - vb
  name: WrapperDataset
  nameWithType: WrapperDataset
  fullName: VDS.RDF.Query.Datasets.WrapperDataset
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WrapperDataset
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nAn abstract dataset wrapper that can be used to wrap another dataset and just modify some functionality i.e. provides a decorator over an existing dataset.\n"
  example: []
  syntax:
    content: 'public abstract class WrapperDataset : IConfigurationSerializable, IThreadSafeDataset, ISparqlDataset'
    content.vb: >-
      Public MustInherit Class WrapperDataset
          Implements IConfigurationSerializable, IThreadSafeDataset, ISparqlDataset
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Query.Datasets.BaseDemandDataset
  - VDS.RDF.Query.Datasets.FullTextIndexedDataset
  implements:
  - VDS.RDF.Configuration.IConfigurationSerializable
  - VDS.RDF.Query.Datasets.IThreadSafeDataset
  - VDS.RDF.Query.Datasets.ISparqlDataset
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Datasets.WrapperDataset.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.Query.Datasets.WrapperDataset._dataset
  commentId: F:VDS.RDF.Query.Datasets.WrapperDataset._dataset
  id: _dataset
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: _dataset
  nameWithType: WrapperDataset._dataset
  fullName: VDS.RDF.Query.Datasets.WrapperDataset._dataset
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _dataset
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nUnderlying Dataset.\n"
  example: []
  syntax:
    content: protected ISparqlDataset _dataset
    return:
      type: VDS.RDF.Query.Datasets.ISparqlDataset
    content.vb: Protected _dataset As ISparqlDataset
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Query.Datasets.WrapperDataset.#ctor(VDS.RDF.Query.Datasets.ISparqlDataset)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.#ctor(VDS.RDF.Query.Datasets.ISparqlDataset)
  id: '#ctor(VDS.RDF.Query.Datasets.ISparqlDataset)'
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: WrapperDataset(ISparqlDataset)
  nameWithType: WrapperDataset.WrapperDataset(ISparqlDataset)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.WrapperDataset(VDS.RDF.Query.Datasets.ISparqlDataset)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 52
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nCreates a new wrapped dataset.\n"
  example: []
  syntax:
    content: public WrapperDataset(ISparqlDataset dataset)
    parameters:
    - id: dataset
      type: VDS.RDF.Query.Datasets.ISparqlDataset
      description: Dataset.
    content.vb: Public Sub New(dataset As ISparqlDataset)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.WrapperDataset.Lock
  commentId: P:VDS.RDF.Query.Datasets.WrapperDataset.Lock
  id: Lock
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: Lock
  nameWithType: WrapperDataset.Lock
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.Lock
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Lock
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets the Lock used to ensure MRSW concurrency on the dataset when available.\n"
  example: []
  syntax:
    content: public ReaderWriterLockSlim Lock { get; }
    parameters: []
    return:
      type: System.Threading.ReaderWriterLockSlim
    content.vb: Public ReadOnly Property Lock As ReaderWriterLockSlim
  overload: VDS.RDF.Query.Datasets.WrapperDataset.Lock*
  implements:
  - VDS.RDF.Query.Datasets.IThreadSafeDataset.Lock
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.WrapperDataset.UnderlyingDataset
  commentId: P:VDS.RDF.Query.Datasets.WrapperDataset.UnderlyingDataset
  id: UnderlyingDataset
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: UnderlyingDataset
  nameWithType: WrapperDataset.UnderlyingDataset
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.UnderlyingDataset
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UnderlyingDataset
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 79
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets the underlying dataset.\n"
  example: []
  syntax:
    content: public ISparqlDataset UnderlyingDataset { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Datasets.ISparqlDataset
    content.vb: Public ReadOnly Property UnderlyingDataset As ISparqlDataset
  overload: VDS.RDF.Query.Datasets.WrapperDataset.UnderlyingDataset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  id: SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: SetActiveGraph(IEnumerable<Uri>)
  nameWithType: WrapperDataset.SetActiveGraph(IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph(System.Collections.Generic.IEnumerable<System.Uri>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetActiveGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 93
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nSets the Active Graph for the dataset.\n"
  example: []
  syntax:
    content: public virtual void SetActiveGraph(IEnumerable<Uri> graphUris)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: Graph URIs.
    content.vb: Public Overridable Sub SetActiveGraph(graphUris As IEnumerable(Of Uri))
  overload: VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  nameWithType.vb: WrapperDataset.SetActiveGraph(IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SetActiveGraph(IEnumerable(Of Uri))
- uid: VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph(System.Uri)
  id: SetActiveGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: SetActiveGraph(Uri)
  nameWithType: WrapperDataset.SetActiveGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetActiveGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 102
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nSets the Active Graph for the dataset.\n"
  example: []
  syntax:
    content: public virtual void SetActiveGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    content.vb: Public Overridable Sub SetActiveGraph(graphUri As Uri)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph(System.Uri)
  id: SetDefaultGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: SetDefaultGraph(Uri)
  nameWithType: WrapperDataset.SetDefaultGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetDefaultGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 111
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nSets the Default Graph for the dataset.\n"
  example: []
  syntax:
    content: public virtual void SetDefaultGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    content.vb: Public Overridable Sub SetDefaultGraph(graphUri As Uri)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  id: SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: SetDefaultGraph(IEnumerable<Uri>)
  nameWithType: WrapperDataset.SetDefaultGraph(IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable<System.Uri>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetDefaultGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 120
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nSets the Default Graph for the dataset.\n"
  example: []
  syntax:
    content: public virtual void SetDefaultGraph(IEnumerable<Uri> graphUris)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: Graph URIs.
    content.vb: Public Overridable Sub SetDefaultGraph(graphUris As IEnumerable(Of Uri))
  overload: VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  nameWithType.vb: WrapperDataset.SetDefaultGraph(IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SetDefaultGraph(IEnumerable(Of Uri))
- uid: VDS.RDF.Query.Datasets.WrapperDataset.ResetActiveGraph
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.ResetActiveGraph
  id: ResetActiveGraph
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: ResetActiveGraph()
  nameWithType: WrapperDataset.ResetActiveGraph()
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.ResetActiveGraph()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResetActiveGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 128
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nResets the Active Graph.\n"
  example: []
  syntax:
    content: public virtual void ResetActiveGraph()
    content.vb: Public Overridable Sub ResetActiveGraph
  overload: VDS.RDF.Query.Datasets.WrapperDataset.ResetActiveGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.ResetDefaultGraph
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.ResetDefaultGraph
  id: ResetDefaultGraph
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: ResetDefaultGraph()
  nameWithType: WrapperDataset.ResetDefaultGraph()
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.ResetDefaultGraph()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResetDefaultGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 136
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nResets the Default Graph.\n"
  example: []
  syntax:
    content: public virtual void ResetDefaultGraph()
    content.vb: Public Overridable Sub ResetDefaultGraph
  overload: VDS.RDF.Query.Datasets.WrapperDataset.ResetDefaultGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.DefaultGraphUris
  commentId: P:VDS.RDF.Query.Datasets.WrapperDataset.DefaultGraphUris
  id: DefaultGraphUris
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: DefaultGraphUris
  nameWithType: WrapperDataset.DefaultGraphUris
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.DefaultGraphUris
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultGraphUris
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 144
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets the Default Graph URIs.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Uri> DefaultGraphUris { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public Overridable ReadOnly Property DefaultGraphUris As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.DefaultGraphUris*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.DefaultGraphUris
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.WrapperDataset.ActiveGraphUris
  commentId: P:VDS.RDF.Query.Datasets.WrapperDataset.ActiveGraphUris
  id: ActiveGraphUris
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: ActiveGraphUris
  nameWithType: WrapperDataset.ActiveGraphUris
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.ActiveGraphUris
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ActiveGraphUris
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 155
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets the Active Graph URIs.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Uri> ActiveGraphUris { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public Overridable ReadOnly Property ActiveGraphUris As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.ActiveGraphUris*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.ActiveGraphUris
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.WrapperDataset.UsesUnionDefaultGraph
  commentId: P:VDS.RDF.Query.Datasets.WrapperDataset.UsesUnionDefaultGraph
  id: UsesUnionDefaultGraph
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: UsesUnionDefaultGraph
  nameWithType: WrapperDataset.UsesUnionDefaultGraph
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.UsesUnionDefaultGraph
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UsesUnionDefaultGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 166
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets whether the default graph is the union of all graphs.\n"
  example: []
  syntax:
    content: public virtual bool UsesUnionDefaultGraph { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property UsesUnionDefaultGraph As Boolean
  overload: VDS.RDF.Query.Datasets.WrapperDataset.UsesUnionDefaultGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.UsesUnionDefaultGraph
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.WrapperDataset.AddGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.AddGraph(VDS.RDF.IGraph)
  id: AddGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: AddGraph(IGraph)
  nameWithType: WrapperDataset.AddGraph(IGraph)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.AddGraph(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 178
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nAdds a Graph to the dataset.\n"
  example: []
  syntax:
    content: public virtual bool AddGraph(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: System.Boolean
    content.vb: Public Overridable Function AddGraph(g As IGraph) As Boolean
  overload: VDS.RDF.Query.Datasets.WrapperDataset.AddGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.RemoveGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.RemoveGraph(System.Uri)
  id: RemoveGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: RemoveGraph(Uri)
  nameWithType: WrapperDataset.RemoveGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.RemoveGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RemoveGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 187
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nRemoves a Graph from the dataset.\n"
  example: []
  syntax:
    content: public virtual bool RemoveGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RemoveGraph(graphUri As Uri) As Boolean
  overload: VDS.RDF.Query.Datasets.WrapperDataset.RemoveGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.HasGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.HasGraph(System.Uri)
  id: HasGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: HasGraph(Uri)
  nameWithType: WrapperDataset.HasGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.HasGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 197
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets whether the dataset contains a given Graph.\n"
  example: []
  syntax:
    content: public virtual bool HasGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function HasGraph(graphUri As Uri) As Boolean
  overload: VDS.RDF.Query.Datasets.WrapperDataset.HasGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.Graphs
  commentId: P:VDS.RDF.Query.Datasets.WrapperDataset.Graphs
  id: Graphs
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: Graphs
  nameWithType: WrapperDataset.Graphs
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.Graphs
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Graphs
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 205
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets the Graphs in the dataset.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<IGraph> Graphs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.IGraph}
    content.vb: Public Overridable ReadOnly Property Graphs As IEnumerable(Of IGraph)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.Graphs*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Graphs
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GraphUris
  commentId: P:VDS.RDF.Query.Datasets.WrapperDataset.GraphUris
  id: GraphUris
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: GraphUris
  nameWithType: WrapperDataset.GraphUris
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GraphUris
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GraphUris
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 216
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets the URIs of Graphs in the dataset.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Uri> GraphUris { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public Overridable ReadOnly Property GraphUris As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.GraphUris*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GraphUris
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.WrapperDataset.Item(System.Uri)
  commentId: P:VDS.RDF.Query.Datasets.WrapperDataset.Item(System.Uri)
  id: Item(System.Uri)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: Item[Uri]
  nameWithType: WrapperDataset.Item[Uri]
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.Item[System.Uri]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 229
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets a Graph from the dataset.\n"
  example: []
  syntax:
    content: public virtual IGraph this[Uri graphUri] { get; }
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: VDS.RDF.IGraph
      description: ''
    content.vb: Public Overridable ReadOnly Property Item(graphUri As Uri) As IGraph
  overload: VDS.RDF.Query.Datasets.WrapperDataset.Item*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
  nameWithType.vb: WrapperDataset.Item(Uri)
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: VDS.RDF.Query.Datasets.WrapperDataset.Item(System.Uri)
  name.vb: Item(Uri)
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetModifiableGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.GetModifiableGraph(System.Uri)
  id: GetModifiableGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: GetModifiableGraph(Uri)
  nameWithType: WrapperDataset.GetModifiableGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetModifiableGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetModifiableGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 242
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets a modifiable graph from the dataset.\n"
  example: []
  syntax:
    content: public virtual IGraph GetModifiableGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: VDS.RDF.IGraph
      description: ''
    content.vb: Public Overridable Function GetModifiableGraph(graphUri As Uri) As IGraph
  overload: VDS.RDF.Query.Datasets.WrapperDataset.GetModifiableGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.HasTriples
  commentId: P:VDS.RDF.Query.Datasets.WrapperDataset.HasTriples
  id: HasTriples
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: HasTriples
  nameWithType: WrapperDataset.HasTriples
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.HasTriples
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasTriples
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 250
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets whether the dataset has any triples.\n"
  example: []
  syntax:
    content: public virtual bool HasTriples { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property HasTriples As Boolean
  overload: VDS.RDF.Query.Datasets.WrapperDataset.HasTriples*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.HasTriples
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.WrapperDataset.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.ContainsTriple(VDS.RDF.Triple)
  id: ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: ContainsTriple(Triple)
  nameWithType: WrapperDataset.ContainsTriple(Triple)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.ContainsTriple(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ContainsTriple
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 263
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets whether the dataset contains a given triple.\n"
  example: []
  syntax:
    content: public virtual bool ContainsTriple(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function ContainsTriple(t As Triple) As Boolean
  overload: VDS.RDF.Query.Datasets.WrapperDataset.ContainsTriple*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.Triples
  commentId: P:VDS.RDF.Query.Datasets.WrapperDataset.Triples
  id: Triples
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: Triples
  nameWithType: WrapperDataset.Triples
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.Triples
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Triples
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 271
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all triples from the dataset.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> Triples { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
    content.vb: Public Overridable ReadOnly Property Triples As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.Triples*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Triples
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubject(VDS.RDF.INode)
  id: GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(INode)
  nameWithType: WrapperDataset.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 284
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets triples with a given subject.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithSubject(INode subj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overridable Function GetTriplesWithSubject(subj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubject*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  id: GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(INode)
  nameWithType: WrapperDataset.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 294
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets triples with a given predicate.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithPredicate(INode pred)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overridable Function GetTriplesWithPredicate(pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithObject(VDS.RDF.INode)
  id: GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(INode)
  nameWithType: WrapperDataset.GetTriplesWithObject(INode)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithObject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 304
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets triples with a given object.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithObject(INode obj)
    parameters:
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overridable Function GetTriplesWithObject(obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithObject*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: WrapperDataset.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectPredicate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 315
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets triples with a given subject and predicate.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithSubjectPredicate(INode subj, INode pred)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overridable Function GetTriplesWithSubjectPredicate(subj As INode, pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectPredicate*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: WrapperDataset.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectObject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 326
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets triples with a given subject and object.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithSubjectObject(INode subj, INode obj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overridable Function GetTriplesWithSubjectObject(subj As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectObject*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: WrapperDataset.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicateObject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 337
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets triples with a given predicate and object.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithPredicateObject(INode pred, INode obj)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overridable Function GetTriplesWithPredicateObject(pred As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicateObject*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.Flush
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.Flush
  id: Flush
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: WrapperDataset.Flush()
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.Flush()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Flush
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 345
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nFlushes any changes to the dataset.\n"
  example: []
  syntax:
    content: public virtual void Flush()
    content.vb: Public Overridable Sub Flush
  overload: VDS.RDF.Query.Datasets.WrapperDataset.Flush*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.Discard
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.Discard
  id: Discard
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: Discard()
  nameWithType: WrapperDataset.Discard()
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.Discard()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Discard
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 353
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nDiscards any changes to the dataset.\n"
  example: []
  syntax:
    content: public virtual void Discard()
    content.vb: Public Overridable Sub Discard
  overload: VDS.RDF.Query.Datasets.WrapperDataset.Discard*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.WrapperDataset.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  commentId: M:VDS.RDF.Query.Datasets.WrapperDataset.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  id: SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  parent: VDS.RDF.Query.Datasets.WrapperDataset
  langs:
  - csharp
  - vb
  name: SerializeConfiguration(ConfigurationSerializationContext)
  nameWithType: WrapperDataset.SerializeConfiguration(ConfigurationSerializationContext)
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SerializeConfiguration
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Datasets/WrapperDataset.cs
    startLine: 364
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nSerializes the Configuration of the Dataset.\n"
  example: []
  syntax:
    content: public virtual void SerializeConfiguration(ConfigurationSerializationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Configuration.ConfigurationSerializationContext
      description: Serialization Context.
    content.vb: Public Overridable Sub SerializeConfiguration(context As ConfigurationSerializationContext)
  overload: VDS.RDF.Query.Datasets.WrapperDataset.SerializeConfiguration*
  implements:
  - VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: VDS.RDF.Query.Datasets
  commentId: N:VDS.RDF.Query.Datasets
  name: VDS.RDF.Query.Datasets
  nameWithType: VDS.RDF.Query.Datasets
  fullName: VDS.RDF.Query.Datasets
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Configuration.IConfigurationSerializable
  commentId: T:VDS.RDF.Configuration.IConfigurationSerializable
  parent: VDS.RDF.Configuration
  name: IConfigurationSerializable
  nameWithType: IConfigurationSerializable
  fullName: VDS.RDF.Configuration.IConfigurationSerializable
- uid: VDS.RDF.Query.Datasets.IThreadSafeDataset
  commentId: T:VDS.RDF.Query.Datasets.IThreadSafeDataset
  parent: VDS.RDF.Query.Datasets
  name: IThreadSafeDataset
  nameWithType: IThreadSafeDataset
  fullName: VDS.RDF.Query.Datasets.IThreadSafeDataset
- uid: VDS.RDF.Query.Datasets.ISparqlDataset
  commentId: T:VDS.RDF.Query.Datasets.ISparqlDataset
  parent: VDS.RDF.Query.Datasets
  name: ISparqlDataset
  nameWithType: ISparqlDataset
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<WrapperDataset>()
  nameWithType: Extensions.AsEnumerable<WrapperDataset>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Datasets.WrapperDataset>()
  nameWithType.vb: Extensions.AsEnumerable(Of WrapperDataset)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Datasets.WrapperDataset)()
  name.vb: AsEnumerable(Of WrapperDataset)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<WrapperDataset>
    nameWithType: Extensions.AsEnumerable<WrapperDataset>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Datasets.WrapperDataset>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of WrapperDataset)
    nameWithType: Extensions.AsEnumerable(Of WrapperDataset)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Datasets.WrapperDataset)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Configuration
  commentId: N:VDS.RDF.Configuration
  name: VDS.RDF.Configuration
  nameWithType: VDS.RDF.Configuration
  fullName: VDS.RDF.Configuration
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Datasets.WrapperDataset.#ctor*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.#ctor
  name: WrapperDataset
  nameWithType: WrapperDataset.WrapperDataset
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.WrapperDataset
- uid: VDS.RDF.Query.Datasets.WrapperDataset.Lock*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.Lock
  name: Lock
  nameWithType: WrapperDataset.Lock
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.Lock
- uid: VDS.RDF.Query.Datasets.IThreadSafeDataset.Lock
  commentId: P:VDS.RDF.Query.Datasets.IThreadSafeDataset.Lock
  parent: VDS.RDF.Query.Datasets.IThreadSafeDataset
  name: Lock
  nameWithType: IThreadSafeDataset.Lock
  fullName: VDS.RDF.Query.Datasets.IThreadSafeDataset.Lock
- uid: System.Threading.ReaderWriterLockSlim
  commentId: T:System.Threading.ReaderWriterLockSlim
  parent: System.Threading
  isExternal: true
  name: ReaderWriterLockSlim
  nameWithType: ReaderWriterLockSlim
  fullName: System.Threading.ReaderWriterLockSlim
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: VDS.RDF.Query.Datasets.WrapperDataset.UnderlyingDataset*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.UnderlyingDataset
  name: UnderlyingDataset
  nameWithType: WrapperDataset.UnderlyingDataset
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.UnderlyingDataset
- uid: VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph
  name: SetActiveGraph
  nameWithType: WrapperDataset.SetActiveGraph
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.SetActiveGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: SetActiveGraph(IEnumerable<Uri>)
  nameWithType: ISparqlDataset.SetActiveGraph(IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable<System.Uri>)
  nameWithType.vb: ISparqlDataset.SetActiveGraph(IEnumerable(Of Uri))
  fullName.vb: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SetActiveGraph(IEnumerable(Of Uri))
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
    name: SetActiveGraph
    nameWithType: ISparqlDataset.SetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
    name: SetActiveGraph
    nameWithType: ISparqlDataset.SetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  commentId: T:System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  nameWithType.vb: IEnumerable(Of Uri)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Uri)
  name.vb: IEnumerable(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: SetActiveGraph(Uri)
  nameWithType: ISparqlDataset.SetActiveGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
    name: SetActiveGraph
    nameWithType: ISparqlDataset.SetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
    name: SetActiveGraph
    nameWithType: ISparqlDataset.SetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph
  name: SetDefaultGraph
  nameWithType: WrapperDataset.SetDefaultGraph
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.SetDefaultGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: SetDefaultGraph(Uri)
  nameWithType: ISparqlDataset.SetDefaultGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
    name: SetDefaultGraph
    nameWithType: ISparqlDataset.SetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
    name: SetDefaultGraph
    nameWithType: ISparqlDataset.SetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: SetDefaultGraph(IEnumerable<Uri>)
  nameWithType: ISparqlDataset.SetDefaultGraph(IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable<System.Uri>)
  nameWithType.vb: ISparqlDataset.SetDefaultGraph(IEnumerable(Of Uri))
  fullName.vb: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SetDefaultGraph(IEnumerable(Of Uri))
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
    name: SetDefaultGraph
    nameWithType: ISparqlDataset.SetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
    name: SetDefaultGraph
    nameWithType: ISparqlDataset.SetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.ResetActiveGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.ResetActiveGraph
  name: ResetActiveGraph
  nameWithType: WrapperDataset.ResetActiveGraph
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.ResetActiveGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: ResetActiveGraph()
  nameWithType: ISparqlDataset.ResetActiveGraph()
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph()
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
    name: ResetActiveGraph
    nameWithType: ISparqlDataset.ResetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
    name: ResetActiveGraph
    nameWithType: ISparqlDataset.ResetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.ResetDefaultGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.ResetDefaultGraph
  name: ResetDefaultGraph
  nameWithType: WrapperDataset.ResetDefaultGraph
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.ResetDefaultGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: ResetDefaultGraph()
  nameWithType: ISparqlDataset.ResetDefaultGraph()
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph()
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
    name: ResetDefaultGraph
    nameWithType: ISparqlDataset.ResetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
    name: ResetDefaultGraph
    nameWithType: ISparqlDataset.ResetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.DefaultGraphUris*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.DefaultGraphUris
  name: DefaultGraphUris
  nameWithType: WrapperDataset.DefaultGraphUris
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.DefaultGraphUris
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.DefaultGraphUris
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.DefaultGraphUris
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: DefaultGraphUris
  nameWithType: ISparqlDataset.DefaultGraphUris
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.DefaultGraphUris
- uid: VDS.RDF.Query.Datasets.WrapperDataset.ActiveGraphUris*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.ActiveGraphUris
  name: ActiveGraphUris
  nameWithType: WrapperDataset.ActiveGraphUris
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.ActiveGraphUris
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.ActiveGraphUris
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.ActiveGraphUris
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: ActiveGraphUris
  nameWithType: ISparqlDataset.ActiveGraphUris
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ActiveGraphUris
- uid: VDS.RDF.Query.Datasets.WrapperDataset.UsesUnionDefaultGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.UsesUnionDefaultGraph
  name: UsesUnionDefaultGraph
  nameWithType: WrapperDataset.UsesUnionDefaultGraph
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.UsesUnionDefaultGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.UsesUnionDefaultGraph
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.UsesUnionDefaultGraph
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: UsesUnionDefaultGraph
  nameWithType: ISparqlDataset.UsesUnionDefaultGraph
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.UsesUnionDefaultGraph
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Datasets.WrapperDataset.AddGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.AddGraph
  name: AddGraph
  nameWithType: WrapperDataset.AddGraph
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.AddGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: AddGraph(IGraph)
  nameWithType: ISparqlDataset.AddGraph(IGraph)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
    name: AddGraph
    nameWithType: ISparqlDataset.AddGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
    name: AddGraph
    nameWithType: ISparqlDataset.AddGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.Query.Datasets.WrapperDataset.RemoveGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.RemoveGraph
  name: RemoveGraph
  nameWithType: WrapperDataset.RemoveGraph
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.RemoveGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: RemoveGraph(Uri)
  nameWithType: ISparqlDataset.RemoveGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
    name: RemoveGraph
    nameWithType: ISparqlDataset.RemoveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
    name: RemoveGraph
    nameWithType: ISparqlDataset.RemoveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.HasGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.HasGraph
  name: HasGraph
  nameWithType: WrapperDataset.HasGraph
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.HasGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: HasGraph(Uri)
  nameWithType: ISparqlDataset.HasGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
    name: HasGraph
    nameWithType: ISparqlDataset.HasGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
    name: HasGraph
    nameWithType: ISparqlDataset.HasGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.Graphs*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.Graphs
  name: Graphs
  nameWithType: WrapperDataset.Graphs
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.Graphs
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Graphs
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.Graphs
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: Graphs
  nameWithType: ISparqlDataset.Graphs
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Graphs
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.IGraph}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.IGraph}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IGraph>
  nameWithType: IEnumerable<IGraph>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.IGraph>
  nameWithType.vb: IEnumerable(Of IGraph)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.IGraph)
  name.vb: IEnumerable(Of IGraph)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GraphUris*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.GraphUris
  name: GraphUris
  nameWithType: WrapperDataset.GraphUris
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GraphUris
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GraphUris
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.GraphUris
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GraphUris
  nameWithType: ISparqlDataset.GraphUris
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GraphUris
- uid: VDS.RDF.Query.Datasets.WrapperDataset.Item*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.Item
  name: Item
  nameWithType: WrapperDataset.Item
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.Item
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: Item[Uri]
  nameWithType: ISparqlDataset.Item[Uri]
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Item[System.Uri]
  nameWithType.vb: ISparqlDataset.Item(Uri)
  fullName.vb: VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
  name.vb: Item(Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
    name: Item
    nameWithType: ISparqlDataset.Item
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
    name: Item
    nameWithType: ISparqlDataset.Item
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetModifiableGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.GetModifiableGraph
  name: GetModifiableGraph
  nameWithType: WrapperDataset.GetModifiableGraph
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetModifiableGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: GetModifiableGraph(Uri)
  nameWithType: ISparqlDataset.GetModifiableGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
    name: GetModifiableGraph
    nameWithType: ISparqlDataset.GetModifiableGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
    name: GetModifiableGraph
    nameWithType: ISparqlDataset.GetModifiableGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.HasTriples*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.HasTriples
  name: HasTriples
  nameWithType: WrapperDataset.HasTriples
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.HasTriples
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.HasTriples
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.HasTriples
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: HasTriples
  nameWithType: ISparqlDataset.HasTriples
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.HasTriples
- uid: VDS.RDF.Query.Datasets.WrapperDataset.ContainsTriple*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.ContainsTriple
  name: ContainsTriple
  nameWithType: WrapperDataset.ContainsTriple
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.ContainsTriple
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: ContainsTriple(Triple)
  nameWithType: ISparqlDataset.ContainsTriple(Triple)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: ISparqlDataset.ContainsTriple
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: ISparqlDataset.ContainsTriple
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: VDS.RDF.Query.Datasets.WrapperDataset.Triples*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.Triples
  name: Triples
  nameWithType: WrapperDataset.Triples
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.Triples
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Triples
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.Triples
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: Triples
  nameWithType: ISparqlDataset.Triples
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Triples
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Triple>
  nameWithType: IEnumerable<Triple>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Triple>
  nameWithType.vb: IEnumerable(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple)
  name.vb: IEnumerable(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubject*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubject
  name: GetTriplesWithSubject
  nameWithType: WrapperDataset.GetTriplesWithSubject
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubject
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithSubject(INode)
  nameWithType: ISparqlDataset.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: ISparqlDataset.GetTriplesWithSubject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: ISparqlDataset.GetTriplesWithSubject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicate*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicate
  name: GetTriplesWithPredicate
  nameWithType: WrapperDataset.GetTriplesWithPredicate
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicate
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithPredicate(INode)
  nameWithType: ISparqlDataset.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: ISparqlDataset.GetTriplesWithPredicate
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: ISparqlDataset.GetTriplesWithPredicate
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithObject*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithObject
  name: GetTriplesWithObject
  nameWithType: WrapperDataset.GetTriplesWithObject
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithObject
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithObject(INode)
  nameWithType: ISparqlDataset.GetTriplesWithObject(INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: ISparqlDataset.GetTriplesWithObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: ISparqlDataset.GetTriplesWithObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectPredicate*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectPredicate
  name: GetTriplesWithSubjectPredicate
  nameWithType: WrapperDataset.GetTriplesWithSubjectPredicate
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectPredicate
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: ISparqlDataset.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: ISparqlDataset.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: ISparqlDataset.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectObject*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectObject
  name: GetTriplesWithSubjectObject
  nameWithType: WrapperDataset.GetTriplesWithSubjectObject
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithSubjectObject
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: ISparqlDataset.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: ISparqlDataset.GetTriplesWithSubjectObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: ISparqlDataset.GetTriplesWithSubjectObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicateObject*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicateObject
  name: GetTriplesWithPredicateObject
  nameWithType: WrapperDataset.GetTriplesWithPredicateObject
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.GetTriplesWithPredicateObject
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: ISparqlDataset.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: ISparqlDataset.GetTriplesWithPredicateObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: ISparqlDataset.GetTriplesWithPredicateObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.Flush*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.Flush
  name: Flush
  nameWithType: WrapperDataset.Flush
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.Flush
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: Flush()
  nameWithType: ISparqlDataset.Flush()
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Flush()
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
    name: Flush
    nameWithType: ISparqlDataset.Flush
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
    name: Flush
    nameWithType: ISparqlDataset.Flush
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.Discard*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.Discard
  name: Discard
  nameWithType: WrapperDataset.Discard
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.Discard
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: Discard()
  nameWithType: ISparqlDataset.Discard()
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Discard()
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
    name: Discard
    nameWithType: ISparqlDataset.Discard
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
    name: Discard
    nameWithType: ISparqlDataset.Discard
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.WrapperDataset.SerializeConfiguration*
  commentId: Overload:VDS.RDF.Query.Datasets.WrapperDataset.SerializeConfiguration
  name: SerializeConfiguration
  nameWithType: WrapperDataset.SerializeConfiguration
  fullName: VDS.RDF.Query.Datasets.WrapperDataset.SerializeConfiguration
- uid: VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  commentId: M:VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  parent: VDS.RDF.Configuration.IConfigurationSerializable
  name: SerializeConfiguration(ConfigurationSerializationContext)
  nameWithType: IConfigurationSerializable.SerializeConfiguration(ConfigurationSerializationContext)
  fullName: VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  spec.csharp:
  - uid: VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
    name: SerializeConfiguration
    nameWithType: IConfigurationSerializable.SerializeConfiguration
    fullName: VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Configuration.ConfigurationSerializationContext
    name: ConfigurationSerializationContext
    nameWithType: ConfigurationSerializationContext
    fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
    name: SerializeConfiguration
    nameWithType: IConfigurationSerializable.SerializeConfiguration
    fullName: VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Configuration.ConfigurationSerializationContext
    name: ConfigurationSerializationContext
    nameWithType: ConfigurationSerializationContext
    fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Configuration.ConfigurationSerializationContext
  commentId: T:VDS.RDF.Configuration.ConfigurationSerializationContext
  parent: VDS.RDF.Configuration
  name: ConfigurationSerializationContext
  nameWithType: ConfigurationSerializationContext
  fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
