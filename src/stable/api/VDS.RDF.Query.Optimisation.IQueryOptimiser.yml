### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Optimisation.IQueryOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.IQueryOptimiser
  id: IQueryOptimiser
  parent: VDS.RDF.Query.Optimisation
  children:
  - VDS.RDF.Query.Optimisation.IQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
  langs:
  - csharp
  - vb
  name: IQueryOptimiser
  nameWithType: IQueryOptimiser
  fullName: VDS.RDF.Query.Optimisation.IQueryOptimiser
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/IQueryOptimiser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IQueryOptimiser
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Optimisation/IQueryOptimiser.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nA Query Optimiser is a class which optimises Graph Patterns in a Query by reordering Graph Patterns.\n"
  example: []
  syntax:
    content: public interface IQueryOptimiser
    content.vb: Public Interface IQueryOptimiser
  extensionMethods:
  - VDS.RDF.Query.Optimisation.IQueryOptimiser.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Optimisation.IQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.Query.Optimisation.IQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
  id: Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.Query.Optimisation.IQueryOptimiser
  langs:
  - csharp
  - vb
  name: Optimise(GraphPattern, IEnumerable<String>)
  nameWithType: IQueryOptimiser.Optimise(GraphPattern, IEnumerable<String>)
  fullName: VDS.RDF.Query.Optimisation.IQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/IQueryOptimiser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Optimise
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Optimisation/IQueryOptimiser.cs
    startLine: 42
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nAttempts to optimise the given Graph Pattern.\n"
  example: []
  syntax:
    content: void Optimise(GraphPattern gp, IEnumerable<string> vars)
    parameters:
    - id: gp
      type: VDS.RDF.Query.Patterns.GraphPattern
      description: Graph Pattern.
    - id: vars
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Variables that are present prior to the pattern.
    content.vb: Sub Optimise(gp As GraphPattern, vars As IEnumerable(Of String))
  overload: VDS.RDF.Query.Optimisation.IQueryOptimiser.Optimise*
  nameWithType.vb: IQueryOptimiser.Optimise(GraphPattern, IEnumerable(Of String))
  fullName.vb: VDS.RDF.Query.Optimisation.IQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Optimise(GraphPattern, IEnumerable(Of String))
references:
- uid: VDS.RDF.Query.Optimisation
  commentId: N:VDS.RDF.Query.Optimisation
  name: VDS.RDF.Query.Optimisation
  nameWithType: VDS.RDF.Query.Optimisation
  fullName: VDS.RDF.Query.Optimisation
- uid: VDS.RDF.Query.Optimisation.IQueryOptimiser.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IQueryOptimiser>()
  nameWithType: Extensions.AsEnumerable<IQueryOptimiser>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Optimisation.IQueryOptimiser>()
  nameWithType.vb: Extensions.AsEnumerable(Of IQueryOptimiser)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Optimisation.IQueryOptimiser)()
  name.vb: AsEnumerable(Of IQueryOptimiser)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IQueryOptimiser>
    nameWithType: Extensions.AsEnumerable<IQueryOptimiser>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Optimisation.IQueryOptimiser>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IQueryOptimiser)
    nameWithType: Extensions.AsEnumerable(Of IQueryOptimiser)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Optimisation.IQueryOptimiser)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Optimisation.IQueryOptimiser.Optimise*
  commentId: Overload:VDS.RDF.Query.Optimisation.IQueryOptimiser.Optimise
  name: Optimise
  nameWithType: IQueryOptimiser.Optimise
  fullName: VDS.RDF.Query.Optimisation.IQueryOptimiser.Optimise
- uid: VDS.RDF.Query.Patterns.GraphPattern
  commentId: T:VDS.RDF.Query.Patterns.GraphPattern
  parent: VDS.RDF.Query.Patterns
  name: GraphPattern
  nameWithType: GraphPattern
  fullName: VDS.RDF.Query.Patterns.GraphPattern
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
