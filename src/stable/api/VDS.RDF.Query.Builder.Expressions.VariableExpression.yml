### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.VariableExpression
  id: VariableExpression
  parent: VDS.RDF.Query.Builder.Expressions
  children:
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.Expression
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  langs:
  - csharp
  - vb
  name: VariableExpression
  nameWithType: VariableExpression
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: VariableExpression
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
    startLine: 28
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  summary: "\nRepresents an expression, which evaluates to a variable.\n"
  example: []
  syntax:
    content: 'public class VariableExpression : SparqlExpression'
    content.vb: >-
      Public Class VariableExpression
          Inherits SparqlExpression
  inheritance:
  - System.Object
  - VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression
  inheritedMembers:
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Builder.Expressions.VariableExpression.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.Expression
  commentId: P:VDS.RDF.Query.Builder.Expressions.VariableExpression.Expression
  id: Expression
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: VariableExpression.Expression
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Expression
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Expression
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpression.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  summary: "\nGets the <xref href=\"VDS.RDF.Query.Expressions.Primary.VariableTerm\" data-throw-if-not-resolved=\"false\"></xref> represented by this variable expression.\n"
  example: []
  syntax:
    content: public VariableTerm Expression { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Expressions.Primary.VariableTerm
    content.vb: Public ReadOnly Property Expression As VariableTerm
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.Expression*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(VariableExpression, VariableExpression)
  nameWithType: VariableExpression.GreaterThan(VariableExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpression.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(VariableExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As VariableExpression, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(VariableExpression, VariableExpression)
  nameWithType: VariableExpression.LessThan(VariableExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpression.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(VariableExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As VariableExpression, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(VariableExpression, VariableExpression)
  nameWithType: VariableExpression.GreaterThanOrEqual(VariableExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpression.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(VariableExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As VariableExpression, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(VariableExpression, VariableExpression)
  nameWithType: VariableExpression.LessThanOrEqual(VariableExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpression.cs
    startLine: 65
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(VariableExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As VariableExpression, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(VariableExpression, VariableExpression)
  nameWithType: VariableExpression.Subtraction(VariableExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 31
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(VariableExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As VariableExpression, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(VariableExpression, VariableExpression)
  nameWithType: VariableExpression.Addition(VariableExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(VariableExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As VariableExpression, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(VariableExpression, VariableExpression)
  nameWithType: VariableExpression.Division(VariableExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(VariableExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As VariableExpression, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(VariableExpression, VariableExpression)
  nameWithType: VariableExpression.Multiply(VariableExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(VariableExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As VariableExpression, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Subtraction(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Int32, VariableExpression)
  nameWithType: VariableExpression.Subtraction(Int32, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(System.Int32, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(int left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Integer, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(VariableExpression, Int32)
  nameWithType: VariableExpression.Subtraction(VariableExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(VariableExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As VariableExpression, right As Integer) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Multiply(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(Int32, VariableExpression)
  nameWithType: VariableExpression.Multiply(Int32, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(System.Int32, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(int left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Integer, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(VariableExpression, Int32)
  nameWithType: VariableExpression.Multiply(VariableExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(VariableExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As VariableExpression, right As Integer) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Division(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(Int32, VariableExpression)
  nameWithType: VariableExpression.Division(Int32, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(System.Int32, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 71
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(int left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Integer, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(VariableExpression, Int32)
  nameWithType: VariableExpression.Division(VariableExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 76
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(VariableExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As VariableExpression, right As Integer) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Addition(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(Int32, VariableExpression)
  nameWithType: VariableExpression.Addition(Int32, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(System.Int32, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 81
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(int left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Integer, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(VariableExpression, Int32)
  nameWithType: VariableExpression.Addition(VariableExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 86
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(VariableExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As VariableExpression, right As Integer) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Subtraction(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Int16, VariableExpression)
  nameWithType: VariableExpression.Subtraction(Int16, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(System.Int16, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 91
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(short left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int16
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Short, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(VariableExpression, Int16)
  nameWithType: VariableExpression.Subtraction(VariableExpression, Int16)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int16)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 96
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(VariableExpression left, short right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int16
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As VariableExpression, right As Short) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Multiply(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(Int16, VariableExpression)
  nameWithType: VariableExpression.Multiply(Int16, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(System.Int16, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 101
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(short left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int16
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Short, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(VariableExpression, Int16)
  nameWithType: VariableExpression.Multiply(VariableExpression, Int16)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int16)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 106
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(VariableExpression left, short right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int16
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As VariableExpression, right As Short) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Division(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(Int16, VariableExpression)
  nameWithType: VariableExpression.Division(Int16, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(System.Int16, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 111
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(short left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int16
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Short, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(VariableExpression, Int16)
  nameWithType: VariableExpression.Division(VariableExpression, Int16)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int16)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 116
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(VariableExpression left, short right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int16
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As VariableExpression, right As Short) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Addition(System.Int16,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(Int16, VariableExpression)
  nameWithType: VariableExpression.Addition(Int16, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(System.Int16, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 121
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(short left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int16
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Short, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int16)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(VariableExpression, Int16)
  nameWithType: VariableExpression.Addition(VariableExpression, Int16)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int16)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 126
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(VariableExpression left, short right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int16
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As VariableExpression, right As Short) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Subtraction(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Int64, VariableExpression)
  nameWithType: VariableExpression.Subtraction(Int64, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(System.Int64, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 131
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(long left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Long, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(VariableExpression, Int64)
  nameWithType: VariableExpression.Subtraction(VariableExpression, Int64)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int64)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 136
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(VariableExpression left, long right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int64
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As VariableExpression, right As Long) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Multiply(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(Int64, VariableExpression)
  nameWithType: VariableExpression.Multiply(Int64, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(System.Int64, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 141
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(long left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Long, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(VariableExpression, Int64)
  nameWithType: VariableExpression.Multiply(VariableExpression, Int64)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int64)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 146
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(VariableExpression left, long right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int64
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As VariableExpression, right As Long) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Division(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(Int64, VariableExpression)
  nameWithType: VariableExpression.Division(Int64, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(System.Int64, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 151
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(long left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Long, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(VariableExpression, Int64)
  nameWithType: VariableExpression.Division(VariableExpression, Int64)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int64)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 156
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(VariableExpression left, long right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int64
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As VariableExpression, right As Long) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Addition(System.Int64,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(Int64, VariableExpression)
  nameWithType: VariableExpression.Addition(Int64, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(System.Int64, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 161
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(long left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Long, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int64)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(VariableExpression, Int64)
  nameWithType: VariableExpression.Addition(VariableExpression, Int64)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int64)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 166
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(VariableExpression left, long right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int64
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As VariableExpression, right As Long) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Subtraction(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Byte, VariableExpression)
  nameWithType: VariableExpression.Subtraction(Byte, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(System.Byte, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 171
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(byte left, VariableExpression right)
    parameters:
    - id: left
      type: System.Byte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Byte, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(VariableExpression, Byte)
  nameWithType: VariableExpression.Subtraction(VariableExpression, Byte)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Byte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 176
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(VariableExpression left, byte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Byte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As VariableExpression, right As Byte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Multiply(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(Byte, VariableExpression)
  nameWithType: VariableExpression.Multiply(Byte, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(System.Byte, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 181
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(byte left, VariableExpression right)
    parameters:
    - id: left
      type: System.Byte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Byte, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(VariableExpression, Byte)
  nameWithType: VariableExpression.Multiply(VariableExpression, Byte)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Byte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 186
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(VariableExpression left, byte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Byte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As VariableExpression, right As Byte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Division(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(Byte, VariableExpression)
  nameWithType: VariableExpression.Division(Byte, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(System.Byte, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 191
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(byte left, VariableExpression right)
    parameters:
    - id: left
      type: System.Byte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Byte, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(VariableExpression, Byte)
  nameWithType: VariableExpression.Division(VariableExpression, Byte)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Byte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 196
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(VariableExpression left, byte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Byte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As VariableExpression, right As Byte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Addition(System.Byte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(Byte, VariableExpression)
  nameWithType: VariableExpression.Addition(Byte, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(System.Byte, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 201
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(byte left, VariableExpression right)
    parameters:
    - id: left
      type: System.Byte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Byte, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Byte)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(VariableExpression, Byte)
  nameWithType: VariableExpression.Addition(VariableExpression, Byte)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Byte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 206
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(VariableExpression left, byte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Byte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As VariableExpression, right As Byte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Subtraction(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(SByte, VariableExpression)
  nameWithType: VariableExpression.Subtraction(SByte, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(System.SByte, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 211
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(sbyte left, VariableExpression right)
    parameters:
    - id: left
      type: System.SByte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As SByte, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(VariableExpression, SByte)
  nameWithType: VariableExpression.Subtraction(VariableExpression, SByte)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.SByte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 216
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(VariableExpression left, sbyte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.SByte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As VariableExpression, right As SByte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Multiply(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(SByte, VariableExpression)
  nameWithType: VariableExpression.Multiply(SByte, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(System.SByte, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 221
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(sbyte left, VariableExpression right)
    parameters:
    - id: left
      type: System.SByte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As SByte, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(VariableExpression, SByte)
  nameWithType: VariableExpression.Multiply(VariableExpression, SByte)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.SByte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 226
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(VariableExpression left, sbyte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.SByte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As VariableExpression, right As SByte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Division(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(SByte, VariableExpression)
  nameWithType: VariableExpression.Division(SByte, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(System.SByte, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 231
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(sbyte left, VariableExpression right)
    parameters:
    - id: left
      type: System.SByte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As SByte, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(VariableExpression, SByte)
  nameWithType: VariableExpression.Division(VariableExpression, SByte)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.SByte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 236
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(VariableExpression left, sbyte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.SByte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As VariableExpression, right As SByte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Addition(System.SByte,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(SByte, VariableExpression)
  nameWithType: VariableExpression.Addition(SByte, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(System.SByte, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 241
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(sbyte left, VariableExpression right)
    parameters:
    - id: left
      type: System.SByte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As SByte, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.SByte)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(VariableExpression, SByte)
  nameWithType: VariableExpression.Addition(VariableExpression, SByte)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.SByte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 246
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(VariableExpression left, sbyte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.SByte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As VariableExpression, right As SByte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Subtraction(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Single, VariableExpression)
  nameWithType: VariableExpression.Subtraction(Single, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(System.Single, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 251
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(float left, VariableExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Single, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(VariableExpression, Single)
  nameWithType: VariableExpression.Subtraction(VariableExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 256
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(VariableExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As VariableExpression, right As Single) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Multiply(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(Single, VariableExpression)
  nameWithType: VariableExpression.Multiply(Single, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(System.Single, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 261
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(float left, VariableExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Single, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(VariableExpression, Single)
  nameWithType: VariableExpression.Multiply(VariableExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 266
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(VariableExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As VariableExpression, right As Single) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Division(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(Single, VariableExpression)
  nameWithType: VariableExpression.Division(Single, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(System.Single, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 271
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(float left, VariableExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Single, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(VariableExpression, Single)
  nameWithType: VariableExpression.Division(VariableExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 276
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(VariableExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As VariableExpression, right As Single) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Addition(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(Single, VariableExpression)
  nameWithType: VariableExpression.Addition(Single, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(System.Single, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 281
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(float left, VariableExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Single, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(VariableExpression, Single)
  nameWithType: VariableExpression.Addition(VariableExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 286
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(VariableExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As VariableExpression, right As Single) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Subtraction(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Double, VariableExpression)
  nameWithType: VariableExpression.Subtraction(Double, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(System.Double, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 291
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(double left, VariableExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Double, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(VariableExpression, Double)
  nameWithType: VariableExpression.Subtraction(VariableExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 296
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(VariableExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As VariableExpression, right As Double) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Multiply(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(Double, VariableExpression)
  nameWithType: VariableExpression.Multiply(Double, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(System.Double, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 301
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(double left, VariableExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Double, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(VariableExpression, Double)
  nameWithType: VariableExpression.Multiply(VariableExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 306
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(VariableExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As VariableExpression, right As Double) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Division(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(Double, VariableExpression)
  nameWithType: VariableExpression.Division(Double, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(System.Double, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 311
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(double left, VariableExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Double, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(VariableExpression, Double)
  nameWithType: VariableExpression.Division(VariableExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 316
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(VariableExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As VariableExpression, right As Double) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Addition(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(Double, VariableExpression)
  nameWithType: VariableExpression.Addition(Double, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(System.Double, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 321
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(double left, VariableExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Double, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(VariableExpression, Double)
  nameWithType: VariableExpression.Addition(VariableExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 326
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(VariableExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As VariableExpression, right As Double) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Subtraction(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Decimal, VariableExpression)
  nameWithType: VariableExpression.Subtraction(Decimal, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(System.Decimal, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 331
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(decimal left, VariableExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Decimal, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Subtraction(VariableExpression, Decimal)
  nameWithType: VariableExpression.Subtraction(VariableExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 336
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(VariableExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As VariableExpression, right As Decimal) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Multiply(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(Decimal, VariableExpression)
  nameWithType: VariableExpression.Multiply(Decimal, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(System.Decimal, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 341
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(decimal left, VariableExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Decimal, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Multiply(VariableExpression, Decimal)
  nameWithType: VariableExpression.Multiply(VariableExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 346
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(VariableExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As VariableExpression, right As Decimal) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Division(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(Decimal, VariableExpression)
  nameWithType: VariableExpression.Division(Decimal, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(System.Decimal, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 351
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(decimal left, VariableExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Decimal, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Division(VariableExpression, Decimal)
  nameWithType: VariableExpression.Division(VariableExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 356
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(VariableExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As VariableExpression, right As Decimal) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Addition(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(Decimal, VariableExpression)
  nameWithType: VariableExpression.Addition(Decimal, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(System.Decimal, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 361
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(decimal left, VariableExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Decimal, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Addition(VariableExpression, Decimal)
  nameWithType: VariableExpression.Addition(VariableExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralArithmeticOperators.cs
    startLine: 366
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(VariableExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As VariableExpression, right As Decimal) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThan(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(Int32, VariableExpression)
  nameWithType: VariableExpression.GreaterThan(Int32, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(System.Int32, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(int left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As Integer, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThan(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(Int32, VariableExpression)
  nameWithType: VariableExpression.LessThan(Int32, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(System.Int32, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 40
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(int left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As Integer, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  id: op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(VariableExpression, Int32)
  nameWithType: VariableExpression.GreaterThan(VariableExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 45
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(VariableExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As VariableExpression, right As Integer) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  id: op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(VariableExpression, Int32)
  nameWithType: VariableExpression.LessThan(VariableExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(VariableExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As VariableExpression, right As Integer) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThan(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(Decimal, VariableExpression)
  nameWithType: VariableExpression.GreaterThan(Decimal, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(System.Decimal, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(decimal left, VariableExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As Decimal, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThan(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(Decimal, VariableExpression)
  nameWithType: VariableExpression.LessThan(Decimal, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(System.Decimal, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(decimal left, VariableExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As Decimal, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  id: op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(VariableExpression, Decimal)
  nameWithType: VariableExpression.GreaterThan(VariableExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 65
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(VariableExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As VariableExpression, right As Decimal) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  id: op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(VariableExpression, Decimal)
  nameWithType: VariableExpression.LessThan(VariableExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(VariableExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As VariableExpression, right As Decimal) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThan(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(Single, VariableExpression)
  nameWithType: VariableExpression.GreaterThan(Single, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(System.Single, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 75
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(float left, VariableExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As Single, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThan(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(Single, VariableExpression)
  nameWithType: VariableExpression.LessThan(Single, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(System.Single, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 80
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(float left, VariableExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As Single, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  id: op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(VariableExpression, Single)
  nameWithType: VariableExpression.GreaterThan(VariableExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 85
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(VariableExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As VariableExpression, right As Single) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  id: op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(VariableExpression, Single)
  nameWithType: VariableExpression.LessThan(VariableExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 90
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(VariableExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As VariableExpression, right As Single) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThan(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(Double, VariableExpression)
  nameWithType: VariableExpression.GreaterThan(Double, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(System.Double, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 95
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(double left, VariableExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As Double, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThan(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(Double, VariableExpression)
  nameWithType: VariableExpression.LessThan(Double, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(System.Double, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(double left, VariableExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As Double, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  id: op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(VariableExpression, Double)
  nameWithType: VariableExpression.GreaterThan(VariableExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 105
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(VariableExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As VariableExpression, right As Double) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  id: op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(VariableExpression, Double)
  nameWithType: VariableExpression.LessThan(VariableExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 110
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(VariableExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As VariableExpression, right As Double) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThan(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(String, VariableExpression)
  nameWithType: VariableExpression.GreaterThan(String, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(System.String, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 115
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(string left, VariableExpression right)
    parameters:
    - id: left
      type: System.String
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As String, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThan(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(String, VariableExpression)
  nameWithType: VariableExpression.LessThan(String, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(System.String, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 120
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(string left, VariableExpression right)
    parameters:
    - id: left
      type: System.String
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As String, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  id: op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(VariableExpression, String)
  nameWithType: VariableExpression.GreaterThan(VariableExpression, String)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.String)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 125
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(VariableExpression left, string right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As VariableExpression, right As String) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  id: op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(VariableExpression, String)
  nameWithType: VariableExpression.LessThan(VariableExpression, String)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.String)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 130
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(VariableExpression left, string right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As VariableExpression, right As String) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThan(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(Boolean, VariableExpression)
  nameWithType: VariableExpression.GreaterThan(Boolean, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(System.Boolean, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 135
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(bool left, VariableExpression right)
    parameters:
    - id: left
      type: System.Boolean
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As Boolean, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThan(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(Boolean, VariableExpression)
  nameWithType: VariableExpression.LessThan(Boolean, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(System.Boolean, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 140
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(bool left, VariableExpression right)
    parameters:
    - id: left
      type: System.Boolean
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As Boolean, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  id: op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(VariableExpression, Boolean)
  nameWithType: VariableExpression.GreaterThan(VariableExpression, Boolean)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Boolean)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 145
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(VariableExpression left, bool right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Boolean
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As VariableExpression, right As Boolean) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  id: op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(VariableExpression, Boolean)
  nameWithType: VariableExpression.LessThan(VariableExpression, Boolean)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Boolean)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 150
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(VariableExpression left, bool right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Boolean
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As VariableExpression, right As Boolean) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThan(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(DateTime, VariableExpression)
  nameWithType: VariableExpression.GreaterThan(DateTime, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(System.DateTime, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 155
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(DateTime left, VariableExpression right)
    parameters:
    - id: left
      type: System.DateTime
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As Date, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThan(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(DateTime, VariableExpression)
  nameWithType: VariableExpression.LessThan(DateTime, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(System.DateTime, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 160
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(DateTime left, VariableExpression right)
    parameters:
    - id: left
      type: System.DateTime
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As Date, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  id: op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(VariableExpression, DateTime)
  nameWithType: VariableExpression.GreaterThan(VariableExpression, DateTime)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.DateTime)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 165
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(VariableExpression left, DateTime right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.DateTime
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As VariableExpression, right As Date) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  id: op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(VariableExpression, DateTime)
  nameWithType: VariableExpression.LessThan(VariableExpression, DateTime)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.DateTime)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 170
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(VariableExpression left, DateTime right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.DateTime
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As VariableExpression, right As Date) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThanOrEqual(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Int32, VariableExpression)
  nameWithType: VariableExpression.GreaterThanOrEqual(Int32, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(System.Int32, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 175
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(int left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As Integer, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThanOrEqual(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Int32, VariableExpression)
  nameWithType: VariableExpression.LessThanOrEqual(Int32, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(System.Int32, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 180
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(int left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As Integer, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  id: op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(VariableExpression, Int32)
  nameWithType: VariableExpression.GreaterThanOrEqual(VariableExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 185
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(VariableExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As VariableExpression, right As Integer) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  id: op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(VariableExpression, Int32)
  nameWithType: VariableExpression.LessThanOrEqual(VariableExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 190
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(VariableExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As VariableExpression, right As Integer) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThanOrEqual(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Decimal, VariableExpression)
  nameWithType: VariableExpression.GreaterThanOrEqual(Decimal, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(System.Decimal, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 195
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(decimal left, VariableExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As Decimal, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThanOrEqual(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Decimal, VariableExpression)
  nameWithType: VariableExpression.LessThanOrEqual(Decimal, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(System.Decimal, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 200
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(decimal left, VariableExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As Decimal, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  id: op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(VariableExpression, Decimal)
  nameWithType: VariableExpression.GreaterThanOrEqual(VariableExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 205
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(VariableExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As VariableExpression, right As Decimal) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  id: op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(VariableExpression, Decimal)
  nameWithType: VariableExpression.LessThanOrEqual(VariableExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 210
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(VariableExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As VariableExpression, right As Decimal) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThanOrEqual(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Single, VariableExpression)
  nameWithType: VariableExpression.GreaterThanOrEqual(Single, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(System.Single, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 215
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(float left, VariableExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As Single, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThanOrEqual(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Single, VariableExpression)
  nameWithType: VariableExpression.LessThanOrEqual(Single, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(System.Single, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 220
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(float left, VariableExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As Single, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  id: op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(VariableExpression, Single)
  nameWithType: VariableExpression.GreaterThanOrEqual(VariableExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 225
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(VariableExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As VariableExpression, right As Single) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  id: op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(VariableExpression, Single)
  nameWithType: VariableExpression.LessThanOrEqual(VariableExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 230
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(VariableExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As VariableExpression, right As Single) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThanOrEqual(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Double, VariableExpression)
  nameWithType: VariableExpression.GreaterThanOrEqual(Double, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(System.Double, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 235
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(double left, VariableExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As Double, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThanOrEqual(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Double, VariableExpression)
  nameWithType: VariableExpression.LessThanOrEqual(Double, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(System.Double, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 240
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(double left, VariableExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As Double, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  id: op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(VariableExpression, Double)
  nameWithType: VariableExpression.GreaterThanOrEqual(VariableExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 245
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(VariableExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As VariableExpression, right As Double) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  id: op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(VariableExpression, Double)
  nameWithType: VariableExpression.LessThanOrEqual(VariableExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 250
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(VariableExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As VariableExpression, right As Double) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThanOrEqual(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(String, VariableExpression)
  nameWithType: VariableExpression.GreaterThanOrEqual(String, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(System.String, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 255
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(string left, VariableExpression right)
    parameters:
    - id: left
      type: System.String
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As String, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThanOrEqual(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(String, VariableExpression)
  nameWithType: VariableExpression.LessThanOrEqual(String, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(System.String, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 260
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(string left, VariableExpression right)
    parameters:
    - id: left
      type: System.String
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As String, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  id: op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(VariableExpression, String)
  nameWithType: VariableExpression.GreaterThanOrEqual(VariableExpression, String)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.String)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 265
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(VariableExpression left, string right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As VariableExpression, right As String) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  id: op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(VariableExpression, String)
  nameWithType: VariableExpression.LessThanOrEqual(VariableExpression, String)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.String)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 270
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(VariableExpression left, string right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As VariableExpression, right As String) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThanOrEqual(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(Boolean, VariableExpression)
  nameWithType: VariableExpression.GreaterThanOrEqual(Boolean, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(System.Boolean, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 275
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(bool left, VariableExpression right)
    parameters:
    - id: left
      type: System.Boolean
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As Boolean, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThanOrEqual(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(Boolean, VariableExpression)
  nameWithType: VariableExpression.LessThanOrEqual(Boolean, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(System.Boolean, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 280
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(bool left, VariableExpression right)
    parameters:
    - id: left
      type: System.Boolean
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As Boolean, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  id: op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(VariableExpression, Boolean)
  nameWithType: VariableExpression.GreaterThanOrEqual(VariableExpression, Boolean)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Boolean)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 285
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(VariableExpression left, bool right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Boolean
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As VariableExpression, right As Boolean) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  id: op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(VariableExpression, Boolean)
  nameWithType: VariableExpression.LessThanOrEqual(VariableExpression, Boolean)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Boolean)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 290
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(VariableExpression left, bool right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Boolean
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As VariableExpression, right As Boolean) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThanOrEqual(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(DateTime, VariableExpression)
  nameWithType: VariableExpression.GreaterThanOrEqual(DateTime, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(System.DateTime, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 295
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(DateTime left, VariableExpression right)
    parameters:
    - id: left
      type: System.DateTime
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As Date, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThanOrEqual(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(DateTime, VariableExpression)
  nameWithType: VariableExpression.LessThanOrEqual(DateTime, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(System.DateTime, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 300
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(DateTime left, VariableExpression right)
    parameters:
    - id: left
      type: System.DateTime
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As Date, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  id: op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(VariableExpression, DateTime)
  nameWithType: VariableExpression.GreaterThanOrEqual(VariableExpression, DateTime)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.DateTime)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 305
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(VariableExpression left, DateTime right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.DateTime
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As VariableExpression, right As Date) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  id: op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(VariableExpression, DateTime)
  nameWithType: VariableExpression.LessThanOrEqual(VariableExpression, DateTime)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.DateTime)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 310
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(VariableExpression left, DateTime right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.DateTime
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As VariableExpression, right As Date) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Inequality(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(Int32, VariableExpression)
  nameWithType: VariableExpression.Inequality(Int32, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(System.Int32, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 315
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(int left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As Integer, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Equality(System.Int32,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(Int32, VariableExpression)
  nameWithType: VariableExpression.Equality(Int32, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(System.Int32, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 320
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(int left, VariableExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As Integer, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  id: op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(VariableExpression, Int32)
  nameWithType: VariableExpression.Inequality(VariableExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 325
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(VariableExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As VariableExpression, right As Integer) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  id: op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(VariableExpression, Int32)
  nameWithType: VariableExpression.Equality(VariableExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 330
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(VariableExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As VariableExpression, right As Integer) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Inequality(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(Decimal, VariableExpression)
  nameWithType: VariableExpression.Inequality(Decimal, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(System.Decimal, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 335
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(decimal left, VariableExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As Decimal, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Equality(System.Decimal,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(Decimal, VariableExpression)
  nameWithType: VariableExpression.Equality(Decimal, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(System.Decimal, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 340
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(decimal left, VariableExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As Decimal, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  id: op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(VariableExpression, Decimal)
  nameWithType: VariableExpression.Inequality(VariableExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 345
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(VariableExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As VariableExpression, right As Decimal) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  id: op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(VariableExpression, Decimal)
  nameWithType: VariableExpression.Equality(VariableExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 350
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(VariableExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As VariableExpression, right As Decimal) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Inequality(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(Single, VariableExpression)
  nameWithType: VariableExpression.Inequality(Single, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(System.Single, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 355
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(float left, VariableExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As Single, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Equality(System.Single,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(Single, VariableExpression)
  nameWithType: VariableExpression.Equality(Single, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(System.Single, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 360
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(float left, VariableExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As Single, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  id: op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(VariableExpression, Single)
  nameWithType: VariableExpression.Inequality(VariableExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 365
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(VariableExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As VariableExpression, right As Single) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  id: op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(VariableExpression, Single)
  nameWithType: VariableExpression.Equality(VariableExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 370
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(VariableExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As VariableExpression, right As Single) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Inequality(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(Double, VariableExpression)
  nameWithType: VariableExpression.Inequality(Double, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(System.Double, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 375
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(double left, VariableExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As Double, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Equality(System.Double,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(Double, VariableExpression)
  nameWithType: VariableExpression.Equality(Double, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(System.Double, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 380
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(double left, VariableExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As Double, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  id: op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(VariableExpression, Double)
  nameWithType: VariableExpression.Inequality(VariableExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 385
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(VariableExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As VariableExpression, right As Double) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  id: op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(VariableExpression, Double)
  nameWithType: VariableExpression.Equality(VariableExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 390
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(VariableExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As VariableExpression, right As Double) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Inequality(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(String, VariableExpression)
  nameWithType: VariableExpression.Inequality(String, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(System.String, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 395
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(string left, VariableExpression right)
    parameters:
    - id: left
      type: System.String
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As String, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Equality(System.String,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(String, VariableExpression)
  nameWithType: VariableExpression.Equality(String, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(System.String, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 400
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(string left, VariableExpression right)
    parameters:
    - id: left
      type: System.String
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As String, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  id: op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(VariableExpression, String)
  nameWithType: VariableExpression.Inequality(VariableExpression, String)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.String)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 405
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(VariableExpression left, string right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As VariableExpression, right As String) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  id: op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.String)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(VariableExpression, String)
  nameWithType: VariableExpression.Equality(VariableExpression, String)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.String)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 410
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(VariableExpression left, string right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As VariableExpression, right As String) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Inequality(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(Boolean, VariableExpression)
  nameWithType: VariableExpression.Inequality(Boolean, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(System.Boolean, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 415
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(bool left, VariableExpression right)
    parameters:
    - id: left
      type: System.Boolean
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As Boolean, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Equality(System.Boolean,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(Boolean, VariableExpression)
  nameWithType: VariableExpression.Equality(Boolean, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(System.Boolean, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 420
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(bool left, VariableExpression right)
    parameters:
    - id: left
      type: System.Boolean
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As Boolean, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  id: op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(VariableExpression, Boolean)
  nameWithType: VariableExpression.Inequality(VariableExpression, Boolean)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Boolean)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 425
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(VariableExpression left, bool right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Boolean
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As VariableExpression, right As Boolean) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  id: op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.Boolean)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(VariableExpression, Boolean)
  nameWithType: VariableExpression.Equality(VariableExpression, Boolean)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.Boolean)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 430
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(VariableExpression left, bool right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.Boolean
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As VariableExpression, right As Boolean) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Inequality(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(DateTime, VariableExpression)
  nameWithType: VariableExpression.Inequality(DateTime, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(System.DateTime, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 435
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(DateTime left, VariableExpression right)
    parameters:
    - id: left
      type: System.DateTime
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As Date, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Equality(System.DateTime,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(DateTime, VariableExpression)
  nameWithType: VariableExpression.Equality(DateTime, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(System.DateTime, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 440
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(DateTime left, VariableExpression right)
    parameters:
    - id: left
      type: System.DateTime
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As Date, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  id: op_Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Inequality(VariableExpression, DateTime)
  nameWithType: VariableExpression.Inequality(VariableExpression, DateTime)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.DateTime)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 445
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !=(VariableExpression left, DateTime right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.DateTime
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <>(left As VariableExpression, right As Date) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  id: op_Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression,System.DateTime)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: Equality(VariableExpression, DateTime)
  nameWithType: VariableExpression.Equality(VariableExpression, DateTime)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality(VDS.RDF.Query.Builder.Expressions.VariableExpression, System.DateTime)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralComparisonOperators.cs
    startLine: 450
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator ==(VariableExpression left, DateTime right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: System.DateTime
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator =(left As VariableExpression, right As Date) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  id: op_GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(VariableExpression, LiteralExpression)
  nameWithType: VariableExpression.GreaterThan(VariableExpression, LiteralExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
    startLine: 31
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(VariableExpression left, LiteralExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.LiteralExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As VariableExpression, right As LiteralExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  id: op_LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(VariableExpression, LiteralExpression)
  nameWithType: VariableExpression.LessThan(VariableExpression, LiteralExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(VariableExpression left, LiteralExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.LiteralExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As VariableExpression, right As LiteralExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThan(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(LiteralExpression, VariableExpression)
  nameWithType: VariableExpression.GreaterThan(LiteralExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan(VDS.RDF.Query.Builder.Expressions.LiteralExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(LiteralExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.LiteralExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(left As LiteralExpression, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThan(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThan(LiteralExpression, VariableExpression)
  nameWithType: VariableExpression.LessThan(LiteralExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan(VDS.RDF.Query.Builder.Expressions.LiteralExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(LiteralExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.LiteralExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(left As LiteralExpression, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  id: op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(VariableExpression, LiteralExpression)
  nameWithType: VariableExpression.GreaterThanOrEqual(VariableExpression, LiteralExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(VariableExpression left, LiteralExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.LiteralExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As VariableExpression, right As LiteralExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  id: op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(VariableExpression, LiteralExpression)
  nameWithType: VariableExpression.LessThanOrEqual(VariableExpression, LiteralExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.LiteralExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(VariableExpression left, LiteralExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.LiteralExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As VariableExpression, right As LiteralExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(LiteralExpression, VariableExpression)
  nameWithType: VariableExpression.GreaterThanOrEqual(LiteralExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.LiteralExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(LiteralExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.LiteralExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(left As LiteralExpression, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.LiteralExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.VariableExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(LiteralExpression, VariableExpression)
  nameWithType: VariableExpression.LessThanOrEqual(LiteralExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.LiteralExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/VariableExpressionLiteralExpressionOperators.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(LiteralExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.LiteralExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(left As LiteralExpression, right As VariableExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.Query.Builder.Expressions
  commentId: N:VDS.RDF.Query.Builder.Expressions
  name: VDS.RDF.Query.Builder.Expressions
  nameWithType: VDS.RDF.Query.Builder.Expressions
  fullName: VDS.RDF.Query.Builder.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}
  commentId: T:VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}
  parent: VDS.RDF.Query.Builder.Expressions
  definition: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
  name: PrimaryExpression<ISparqlExpression>
  nameWithType: PrimaryExpression<ISparqlExpression>
  fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression<VDS.RDF.Query.Expressions.ISparqlExpression>
  nameWithType.vb: PrimaryExpression(Of ISparqlExpression)
  fullName.vb: VDS.RDF.Query.Builder.Expressions.PrimaryExpression(Of VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: PrimaryExpression(Of ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
    name: PrimaryExpression
    nameWithType: PrimaryExpression
    fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
    name: PrimaryExpression
    nameWithType: PrimaryExpression
    fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.SparqlExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: SparqlExpression
  nameWithType: SparqlExpression
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: In(SparqlExpression[])
  nameWithType: SparqlExpression.In(SparqlExpression[])
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
  nameWithType.vb: SparqlExpression.In(SparqlExpression())
  fullName.vb: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression())
  name.vb: In(SparqlExpression())
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
    name: In
    nameWithType: SparqlExpression.In
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression
    name: SparqlExpression
    nameWithType: SparqlExpression
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
    name: In
    nameWithType: SparqlExpression.In
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression
    name: SparqlExpression
    nameWithType: SparqlExpression
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: Gt(ISparqlExpression, ISparqlExpression)
  nameWithType: SparqlExpression.Gt(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Gt
    nameWithType: SparqlExpression.Gt
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Gt
    nameWithType: SparqlExpression.Gt
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: Lt(ISparqlExpression, ISparqlExpression)
  nameWithType: SparqlExpression.Lt(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Lt
    nameWithType: SparqlExpression.Lt
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Lt
    nameWithType: SparqlExpression.Lt
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: Ge(ISparqlExpression, ISparqlExpression)
  nameWithType: SparqlExpression.Ge(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Ge
    nameWithType: SparqlExpression.Ge
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Ge
    nameWithType: SparqlExpression.Ge
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: Le(ISparqlExpression, ISparqlExpression)
  nameWithType: SparqlExpression.Le(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Le
    nameWithType: SparqlExpression.Le
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Le
    nameWithType: SparqlExpression.Le
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<VariableExpression>()
  nameWithType: Extensions.AsEnumerable<VariableExpression>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.Expressions.VariableExpression>()
  nameWithType.vb: Extensions.AsEnumerable(Of VariableExpression)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.Expressions.VariableExpression)()
  name.vb: AsEnumerable(Of VariableExpression)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<VariableExpression>
    nameWithType: Extensions.AsEnumerable<VariableExpression>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.Expressions.VariableExpression>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of VariableExpression)
    nameWithType: Extensions.AsEnumerable(Of VariableExpression)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
  commentId: T:VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
  name: PrimaryExpression<TExpression>
  nameWithType: PrimaryExpression<TExpression>
  fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression<TExpression>
  nameWithType.vb: PrimaryExpression(Of TExpression)
  fullName.vb: VDS.RDF.Query.Builder.Expressions.PrimaryExpression(Of TExpression)
  name.vb: PrimaryExpression(Of TExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
    name: PrimaryExpression
    nameWithType: PrimaryExpression
    fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TExpression
    nameWithType: TExpression
    fullName: TExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
    name: PrimaryExpression
    nameWithType: PrimaryExpression
    fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TExpression
    nameWithType: TExpression
    fullName: TExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Expressions.Primary.VariableTerm
  commentId: T:VDS.RDF.Query.Expressions.Primary.VariableTerm
  parent: VDS.RDF.Query.Expressions.Primary
  name: VariableTerm
  nameWithType: VariableTerm
  fullName: VDS.RDF.Query.Expressions.Primary.VariableTerm
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.Expression*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.VariableExpression.Expression
  name: Expression
  nameWithType: VariableExpression.Expression
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Expression
- uid: VDS.RDF.Query.Expressions.Primary
  commentId: N:VDS.RDF.Query.Expressions.Primary
  name: VDS.RDF.Query.Expressions.Primary
  nameWithType: VDS.RDF.Query.Expressions.Primary
  fullName: VDS.RDF.Query.Expressions.Primary
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThan
  name: GreaterThan
  nameWithType: VariableExpression.GreaterThan
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThan
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.VariableExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: VariableExpression
  nameWithType: VariableExpression
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.BooleanExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: BooleanExpression
  nameWithType: BooleanExpression
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThan
  name: LessThan
  nameWithType: VariableExpression.LessThan
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThan
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_GreaterThanOrEqual
  name: GreaterThanOrEqual
  nameWithType: VariableExpression.GreaterThanOrEqual
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.GreaterThanOrEqual
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_LessThanOrEqual
  name: LessThanOrEqual
  nameWithType: VariableExpression.LessThanOrEqual
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.LessThanOrEqual
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Subtraction
  name: Subtraction
  nameWithType: VariableExpression.Subtraction
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Subtraction
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.NumericExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: NumericExpression
  nameWithType: NumericExpression
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Addition
  name: Addition
  nameWithType: VariableExpression.Addition
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Addition
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Division
  name: Division
  nameWithType: VariableExpression.Division
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Division
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Multiply
  name: Multiply
  nameWithType: VariableExpression.Multiply
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Multiply
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Inequality
  name: Inequality
  nameWithType: VariableExpression.Inequality
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Inequality
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.VariableExpression.op_Equality
  name: Equality
  nameWithType: VariableExpression.Equality
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression.Equality
- uid: VDS.RDF.Query.Builder.Expressions.LiteralExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.LiteralExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: LiteralExpression
  nameWithType: LiteralExpression
  fullName: VDS.RDF.Query.Builder.Expressions.LiteralExpression
