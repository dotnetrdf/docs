### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Expressions.SparqlNumericType
  commentId: T:VDS.RDF.Query.Expressions.SparqlNumericType
  id: SparqlNumericType
  parent: VDS.RDF.Query.Expressions
  children:
  - VDS.RDF.Query.Expressions.SparqlNumericType.Decimal
  - VDS.RDF.Query.Expressions.SparqlNumericType.Double
  - VDS.RDF.Query.Expressions.SparqlNumericType.Float
  - VDS.RDF.Query.Expressions.SparqlNumericType.Integer
  - VDS.RDF.Query.Expressions.SparqlNumericType.NaN
  langs:
  - csharp
  - vb
  name: SparqlNumericType
  nameWithType: SparqlNumericType
  fullName: VDS.RDF.Query.Expressions.SparqlNumericType
  type: Enum
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/ISPARQLExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlNumericType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/ISPARQLExpression.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nNumeric Types for Sparql Numeric Expressions.\n"
  remarks: All Numeric expressions in Sparql are typed as Integer/Decimal/Double.
  example: []
  syntax:
    content: public enum SparqlNumericType
    content.vb: Public Enum SparqlNumericType
  extensionMethods:
  - VDS.RDF.Query.Expressions.SparqlNumericType.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: VDS.RDF.Query.Expressions.SparqlNumericType.NaN
  commentId: F:VDS.RDF.Query.Expressions.SparqlNumericType.NaN
  id: NaN
  parent: VDS.RDF.Query.Expressions.SparqlNumericType
  langs:
  - csharp
  - vb
  name: NaN
  nameWithType: SparqlNumericType.NaN
  fullName: VDS.RDF.Query.Expressions.SparqlNumericType.NaN
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/ISPARQLExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NaN
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/ISPARQLExpression.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nNot a Number\n"
  example: []
  syntax:
    content: NaN = -1
    return:
      type: VDS.RDF.Query.Expressions.SparqlNumericType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.SparqlNumericType.Integer
  commentId: F:VDS.RDF.Query.Expressions.SparqlNumericType.Integer
  id: Integer
  parent: VDS.RDF.Query.Expressions.SparqlNumericType
  langs:
  - csharp
  - vb
  name: Integer
  nameWithType: SparqlNumericType.Integer
  fullName: VDS.RDF.Query.Expressions.SparqlNumericType.Integer
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/ISPARQLExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Integer
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/ISPARQLExpression.cs
    startLine: 45
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nAn Integer\n"
  example: []
  syntax:
    content: Integer = 0
    return:
      type: VDS.RDF.Query.Expressions.SparqlNumericType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.SparqlNumericType.Decimal
  commentId: F:VDS.RDF.Query.Expressions.SparqlNumericType.Decimal
  id: Decimal
  parent: VDS.RDF.Query.Expressions.SparqlNumericType
  langs:
  - csharp
  - vb
  name: Decimal
  nameWithType: SparqlNumericType.Decimal
  fullName: VDS.RDF.Query.Expressions.SparqlNumericType.Decimal
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/ISPARQLExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Decimal
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/ISPARQLExpression.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nA Decimal\n"
  example: []
  syntax:
    content: Decimal = 1
    return:
      type: VDS.RDF.Query.Expressions.SparqlNumericType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.SparqlNumericType.Float
  commentId: F:VDS.RDF.Query.Expressions.SparqlNumericType.Float
  id: Float
  parent: VDS.RDF.Query.Expressions.SparqlNumericType
  langs:
  - csharp
  - vb
  name: Float
  nameWithType: SparqlNumericType.Float
  fullName: VDS.RDF.Query.Expressions.SparqlNumericType.Float
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/ISPARQLExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Float
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/ISPARQLExpression.cs
    startLine: 53
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nA Single precision Floating Point\n"
  example: []
  syntax:
    content: Float = 2
    return:
      type: VDS.RDF.Query.Expressions.SparqlNumericType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.SparqlNumericType.Double
  commentId: F:VDS.RDF.Query.Expressions.SparqlNumericType.Double
  id: Double
  parent: VDS.RDF.Query.Expressions.SparqlNumericType
  langs:
  - csharp
  - vb
  name: Double
  nameWithType: SparqlNumericType.Double
  fullName: VDS.RDF.Query.Expressions.SparqlNumericType.Double
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/ISPARQLExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Double
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/ISPARQLExpression.cs
    startLine: 57
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nA Double precision Floating Point\n"
  example: []
  syntax:
    content: Double = 3
    return:
      type: VDS.RDF.Query.Expressions.SparqlNumericType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Query.Expressions.SparqlNumericType.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlNumericType>()
  nameWithType: Extensions.AsEnumerable<SparqlNumericType>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.SparqlNumericType>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlNumericType)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.SparqlNumericType)()
  name.vb: AsEnumerable(Of SparqlNumericType)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlNumericType>
    nameWithType: Extensions.AsEnumerable<SparqlNumericType>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.SparqlNumericType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlNumericType)
    nameWithType: Extensions.AsEnumerable(Of SparqlNumericType)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.SparqlNumericType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Expressions.SparqlNumericType
  commentId: T:VDS.RDF.Query.Expressions.SparqlNumericType
  parent: VDS.RDF.Query.Expressions
  name: SparqlNumericType
  nameWithType: SparqlNumericType
  fullName: VDS.RDF.Query.Expressions.SparqlNumericType
