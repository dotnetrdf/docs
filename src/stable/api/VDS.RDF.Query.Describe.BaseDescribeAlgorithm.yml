### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Describe.BaseDescribeAlgorithm
  commentId: T:VDS.RDF.Query.Describe.BaseDescribeAlgorithm
  id: BaseDescribeAlgorithm
  parent: VDS.RDF.Query.Describe
  children:
  - VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Describe.BaseDescribeAlgorithm.DescribeInternal(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.Query.Describe.BaseDescribeAlgorithm.RewriteDescribeBNodes(VDS.RDF.Triple,System.Collections.Generic.Dictionary{System.String,VDS.RDF.INode},VDS.RDF.INodeFactory)
  langs:
  - csharp
  - vb
  name: BaseDescribeAlgorithm
  nameWithType: BaseDescribeAlgorithm
  fullName: VDS.RDF.Query.Describe.BaseDescribeAlgorithm
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Describe/BaseDescribeAlgorithm.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseDescribeAlgorithm
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Describe/BaseDescribeAlgorithm.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Describe
  summary: "\nAbstract Base Class for SPARQL Describe Algorithms which provides BNode rewriting functionality.\n"
  example: []
  syntax:
    content: 'public abstract class BaseDescribeAlgorithm : ISparqlDescribe'
    content.vb: >-
      Public MustInherit Class BaseDescribeAlgorithm
          Implements ISparqlDescribe
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Query.Describe.ConciseBoundedDescription
  - VDS.RDF.Query.Describe.LabelledDescription
  - VDS.RDF.Query.Describe.MinimalSpanningGraph
  - VDS.RDF.Query.Describe.NamedGraphDescription
  - VDS.RDF.Query.Describe.SimpleSubjectDescription
  - VDS.RDF.Query.Describe.SimpleSubjectObjectDescription
  - VDS.RDF.Query.Describe.SymmetricConciseBoundedDescription
  implements:
  - VDS.RDF.Query.Describe.ISparqlDescribe
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Describe.BaseDescribeAlgorithm.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe(VDS.RDF.Query.SparqlEvaluationContext)
  id: Describe(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Describe.BaseDescribeAlgorithm
  langs:
  - csharp
  - vb
  name: Describe(SparqlEvaluationContext)
  nameWithType: BaseDescribeAlgorithm.Describe(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Describe/BaseDescribeAlgorithm.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Describe
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Describe/BaseDescribeAlgorithm.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Describe
  summary: "\nGets the Description Graph based on the Query Results from the given Evaluation Context.\n"
  example: []
  syntax:
    content: public IGraph Describe(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: SPARQL Evaluation Context.
    return:
      type: VDS.RDF.IGraph
      description: ''
    content.vb: Public Function Describe(context As SparqlEvaluationContext) As IGraph
  overload: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe*
  implements:
  - VDS.RDF.Query.Describe.ISparqlDescribe.Describe(VDS.RDF.Query.SparqlEvaluationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext)
  id: Describe(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Describe.BaseDescribeAlgorithm
  langs:
  - csharp
  - vb
  name: Describe(IRdfHandler, SparqlEvaluationContext)
  nameWithType: BaseDescribeAlgorithm.Describe(IRdfHandler, SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe(VDS.RDF.IRdfHandler, VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Describe/BaseDescribeAlgorithm.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Describe
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Describe/BaseDescribeAlgorithm.cs
    startLine: 58
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Describe
  summary: "\nGets the Description Graph based on the Query Results from the given Evaluation Context passing the resulting Triples to the given RDF Handler.\n"
  example: []
  syntax:
    content: public void Describe(IRdfHandler handler, SparqlEvaluationContext context)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: SPARQL Evaluation Context.
    content.vb: Public Sub Describe(handler As IRdfHandler, context As SparqlEvaluationContext)
  overload: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe*
  implements:
  - VDS.RDF.Query.Describe.ISparqlDescribe.Describe(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.DescribeInternal(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Query.Describe.BaseDescribeAlgorithm.DescribeInternal(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  id: DescribeInternal(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Query.Describe.BaseDescribeAlgorithm
  langs:
  - csharp
  - vb
  name: DescribeInternal(IRdfHandler, SparqlEvaluationContext, IEnumerable<INode>)
  nameWithType: BaseDescribeAlgorithm.DescribeInternal(IRdfHandler, SparqlEvaluationContext, IEnumerable<INode>)
  fullName: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.DescribeInternal(VDS.RDF.IRdfHandler, VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Describe/BaseDescribeAlgorithm.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DescribeInternal
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Describe/BaseDescribeAlgorithm.cs
    startLine: 104
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Describe
  summary: "\nGenerates the Description for each of the Nodes to be described.\n"
  example: []
  syntax:
    content: protected abstract void DescribeInternal(IRdfHandler handler, SparqlEvaluationContext context, IEnumerable<INode> nodes)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: SPARQL Evaluation Context.
    - id: nodes
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
      description: Nodes to be described.
    content.vb: Protected MustOverride Sub DescribeInternal(handler As IRdfHandler, context As SparqlEvaluationContext, nodes As IEnumerable(Of INode))
  overload: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.DescribeInternal*
  nameWithType.vb: BaseDescribeAlgorithm.DescribeInternal(IRdfHandler, SparqlEvaluationContext, IEnumerable(Of INode))
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.DescribeInternal(VDS.RDF.IRdfHandler, VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: DescribeInternal(IRdfHandler, SparqlEvaluationContext, IEnumerable(Of INode))
- uid: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.RewriteDescribeBNodes(VDS.RDF.Triple,System.Collections.Generic.Dictionary{System.String,VDS.RDF.INode},VDS.RDF.INodeFactory)
  commentId: M:VDS.RDF.Query.Describe.BaseDescribeAlgorithm.RewriteDescribeBNodes(VDS.RDF.Triple,System.Collections.Generic.Dictionary{System.String,VDS.RDF.INode},VDS.RDF.INodeFactory)
  id: RewriteDescribeBNodes(VDS.RDF.Triple,System.Collections.Generic.Dictionary{System.String,VDS.RDF.INode},VDS.RDF.INodeFactory)
  parent: VDS.RDF.Query.Describe.BaseDescribeAlgorithm
  langs:
  - csharp
  - vb
  name: RewriteDescribeBNodes(Triple, Dictionary<String, INode>, INodeFactory)
  nameWithType: BaseDescribeAlgorithm.RewriteDescribeBNodes(Triple, Dictionary<String, INode>, INodeFactory)
  fullName: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.RewriteDescribeBNodes(VDS.RDF.Triple, System.Collections.Generic.Dictionary<System.String, VDS.RDF.INode>, VDS.RDF.INodeFactory)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Describe/BaseDescribeAlgorithm.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RewriteDescribeBNodes
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Describe/BaseDescribeAlgorithm.cs
    startLine: 158
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Describe
  summary: "\nHelper method which rewrites Blank Node IDs for Describe Queries.\n"
  example: []
  syntax:
    content: protected Triple RewriteDescribeBNodes(Triple t, Dictionary<string, INode> mapping, INodeFactory factory)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    - id: mapping
      type: System.Collections.Generic.Dictionary{System.String,VDS.RDF.INode}
      description: Mapping of IDs to new Blank Nodes.
    - id: factory
      type: VDS.RDF.INodeFactory
      description: Factory to create Nodes in.
    return:
      type: VDS.RDF.Triple
      description: ''
    content.vb: Protected Function RewriteDescribeBNodes(t As Triple, mapping As Dictionary(Of String, INode), factory As INodeFactory) As Triple
  overload: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.RewriteDescribeBNodes*
  nameWithType.vb: BaseDescribeAlgorithm.RewriteDescribeBNodes(Triple, Dictionary(Of String, INode), INodeFactory)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.RewriteDescribeBNodes(VDS.RDF.Triple, System.Collections.Generic.Dictionary(Of System.String, VDS.RDF.INode), VDS.RDF.INodeFactory)
  name.vb: RewriteDescribeBNodes(Triple, Dictionary(Of String, INode), INodeFactory)
references:
- uid: VDS.RDF.Query.Describe
  commentId: N:VDS.RDF.Query.Describe
  name: VDS.RDF.Query.Describe
  nameWithType: VDS.RDF.Query.Describe
  fullName: VDS.RDF.Query.Describe
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Describe.ISparqlDescribe
  commentId: T:VDS.RDF.Query.Describe.ISparqlDescribe
  parent: VDS.RDF.Query.Describe
  name: ISparqlDescribe
  nameWithType: ISparqlDescribe
  fullName: VDS.RDF.Query.Describe.ISparqlDescribe
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseDescribeAlgorithm>()
  nameWithType: Extensions.AsEnumerable<BaseDescribeAlgorithm>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Describe.BaseDescribeAlgorithm>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseDescribeAlgorithm)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Describe.BaseDescribeAlgorithm)()
  name.vb: AsEnumerable(Of BaseDescribeAlgorithm)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseDescribeAlgorithm>
    nameWithType: Extensions.AsEnumerable<BaseDescribeAlgorithm>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Describe.BaseDescribeAlgorithm>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseDescribeAlgorithm)
    nameWithType: Extensions.AsEnumerable(Of BaseDescribeAlgorithm)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Describe.BaseDescribeAlgorithm)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe*
  commentId: Overload:VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe
  name: Describe
  nameWithType: BaseDescribeAlgorithm.Describe
  fullName: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.Describe
- uid: VDS.RDF.Query.Describe.ISparqlDescribe.Describe(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Describe.ISparqlDescribe.Describe(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Describe.ISparqlDescribe
  name: Describe(SparqlEvaluationContext)
  nameWithType: ISparqlDescribe.Describe(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Describe.ISparqlDescribe.Describe(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Describe.ISparqlDescribe.Describe(VDS.RDF.Query.SparqlEvaluationContext)
    name: Describe
    nameWithType: ISparqlDescribe.Describe
    fullName: VDS.RDF.Query.Describe.ISparqlDescribe.Describe
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Describe.ISparqlDescribe.Describe(VDS.RDF.Query.SparqlEvaluationContext)
    name: Describe
    nameWithType: ISparqlDescribe.Describe
    fullName: VDS.RDF.Query.Describe.ISparqlDescribe.Describe
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Describe.ISparqlDescribe.Describe(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Describe.ISparqlDescribe.Describe(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Describe.ISparqlDescribe
  name: Describe(IRdfHandler, SparqlEvaluationContext)
  nameWithType: ISparqlDescribe.Describe(IRdfHandler, SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Describe.ISparqlDescribe.Describe(VDS.RDF.IRdfHandler, VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Describe.ISparqlDescribe.Describe(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext)
    name: Describe
    nameWithType: ISparqlDescribe.Describe
    fullName: VDS.RDF.Query.Describe.ISparqlDescribe.Describe
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Describe.ISparqlDescribe.Describe(VDS.RDF.IRdfHandler,VDS.RDF.Query.SparqlEvaluationContext)
    name: Describe
    nameWithType: ISparqlDescribe.Describe
    fullName: VDS.RDF.Query.Describe.ISparqlDescribe.Describe
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IRdfHandler
  commentId: T:VDS.RDF.IRdfHandler
  parent: VDS.RDF
  name: IRdfHandler
  nameWithType: IRdfHandler
  fullName: VDS.RDF.IRdfHandler
- uid: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.DescribeInternal*
  commentId: Overload:VDS.RDF.Query.Describe.BaseDescribeAlgorithm.DescribeInternal
  name: DescribeInternal
  nameWithType: BaseDescribeAlgorithm.DescribeInternal
  fullName: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.DescribeInternal
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INode>
  nameWithType: IEnumerable<INode>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.INode>
  nameWithType.vb: IEnumerable(Of INode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.INode)
  name.vb: IEnumerable(Of INode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.RewriteDescribeBNodes*
  commentId: Overload:VDS.RDF.Query.Describe.BaseDescribeAlgorithm.RewriteDescribeBNodes
  name: RewriteDescribeBNodes
  nameWithType: BaseDescribeAlgorithm.RewriteDescribeBNodes
  fullName: VDS.RDF.Query.Describe.BaseDescribeAlgorithm.RewriteDescribeBNodes
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: System.Collections.Generic.Dictionary{System.String,VDS.RDF.INode}
  commentId: T:System.Collections.Generic.Dictionary{System.String,VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, INode>
  nameWithType: Dictionary<String, INode>
  fullName: System.Collections.Generic.Dictionary<System.String, VDS.RDF.INode>
  nameWithType.vb: Dictionary(Of String, INode)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, VDS.RDF.INode)
  name.vb: Dictionary(Of String, INode)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INodeFactory
  commentId: T:VDS.RDF.INodeFactory
  parent: VDS.RDF
  name: INodeFactory
  nameWithType: INodeFactory
  fullName: VDS.RDF.INodeFactory
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
