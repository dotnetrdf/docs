### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern
  commentId: T:VDS.RDF.Query.Patterns.IMatchTriplePattern
  id: IMatchTriplePattern
  parent: VDS.RDF.Query.Patterns
  children:
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult(VDS.RDF.Triple)
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.IndexType
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.Object
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
  langs:
  - csharp
  - vb
  name: IMatchTriplePattern
  nameWithType: IMatchTriplePattern
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IMatchTriplePattern
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 164
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nInteface for Triple Patterns that do simple pattern matching.\n"
  example: []
  syntax:
    content: 'public interface IMatchTriplePattern : ITriplePattern, IComparable<ITriplePattern>, IComparable<IMatchTriplePattern>'
    content.vb: >-
      Public Interface IMatchTriplePattern
          Inherits ITriplePattern, IComparable(Of IMatchTriplePattern)
  inheritedMembers:
  - VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  - VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  - VDS.RDF.Query.Patterns.ITriplePattern.Variables
  - VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  - VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  - VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  - VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  - System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  - System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}.CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  extensionMethods:
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.IndexType
  commentId: P:VDS.RDF.Query.Patterns.IMatchTriplePattern.IndexType
  id: IndexType
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  langs:
  - csharp
  - vb
  name: IndexType
  nameWithType: IMatchTriplePattern.IndexType
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.IndexType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IndexType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 170
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Index type that should be used in Pattern execution.\n"
  example: []
  syntax:
    content: TripleIndexType IndexType { get; }
    parameters: []
    return:
      type: VDS.RDF.TripleIndexType
    content.vb: ReadOnly Property IndexType As TripleIndexType
  overload: VDS.RDF.Query.Patterns.IMatchTriplePattern.IndexType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
  commentId: P:VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
  id: Subject
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  langs:
  - csharp
  - vb
  name: Subject
  nameWithType: IMatchTriplePattern.Subject
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 178
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Subject of the Pattern.\n"
  example: []
  syntax:
    content: PatternItem Subject { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
    content.vb: ReadOnly Property Subject As PatternItem
  overload: VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
  commentId: P:VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
  id: Predicate
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  langs:
  - csharp
  - vb
  name: Predicate
  nameWithType: IMatchTriplePattern.Predicate
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Predicate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 186
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Predicate of the Pattern.\n"
  example: []
  syntax:
    content: PatternItem Predicate { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
    content.vb: ReadOnly Property Predicate As PatternItem
  overload: VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Object
  commentId: P:VDS.RDF.Query.Patterns.IMatchTriplePattern.Object
  id: Object
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  langs:
  - csharp
  - vb
  name: Object
  nameWithType: IMatchTriplePattern.Object
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Object
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Object
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 194
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Object of the Pattern.\n"
  example: []
  syntax:
    content: PatternItem Object { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
    content.vb: ReadOnly Property Object As PatternItem
  overload: VDS.RDF.Query.Patterns.IMatchTriplePattern.Object*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  id: GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  langs:
  - csharp
  - vb
  name: GetTriples(SparqlEvaluationContext)
  nameWithType: IMatchTriplePattern.GetTriples(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 204
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Triples that match this pattern.\n"
  example: []
  syntax:
    content: IEnumerable<Triple> GetTriples(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Function GetTriples(context As SparqlEvaluationContext) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples*
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
  id: Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  langs:
  - csharp
  - vb
  name: Accepts(SparqlEvaluationContext, Triple)
  nameWithType: IMatchTriplePattern.Accepts(SparqlEvaluationContext, Triple)
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext, VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Accepts
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 212
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether a given triple is accepted by this pattern.\n"
  example: []
  syntax:
    content: bool Accepts(SparqlEvaluationContext context, Triple t)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Context.
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: System.Boolean
      description: ''
    content.vb: Function Accepts(context As SparqlEvaluationContext, t As Triple) As Boolean
  overload: VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts*
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult(VDS.RDF.Triple)
  id: CreateResult(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  langs:
  - csharp
  - vb
  name: CreateResult(Triple)
  nameWithType: IMatchTriplePattern.CreateResult(Triple)
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateResult
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/ITriplePattern.cs
    startLine: 219
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nCreates a set from a Triple.\n"
  example: []
  syntax:
    content: ISet CreateResult(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: VDS.RDF.Query.Algebra.ISet
      description: ''
    content.vb: Function CreateResult(t As Triple) As ISet
  overload: VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult*
references:
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ITriplePattern.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ITriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ITriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: PatternType
  nameWithType: ITriplePattern.PatternType
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.PatternType
- uid: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: IsAcceptAll
  nameWithType: ITriplePattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
- uid: VDS.RDF.Query.Patterns.ITriplePattern.Variables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.Variables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: Variables
  nameWithType: ITriplePattern.Variables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.Variables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: FloatingVariables
  nameWithType: ITriplePattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: FixedVariables
  nameWithType: ITriplePattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: UsesDefaultDataset
  nameWithType: ITriplePattern.UsesDefaultDataset
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
- uid: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: HasNoBlankVariables
  nameWithType: ITriplePattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
- uid: System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  commentId: M:System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  parent: System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(ITriplePattern)
  nameWithType: IComparable<ITriplePattern>.CompareTo(ITriplePattern)
  fullName: System.IComparable<VDS.RDF.Query.Patterns.ITriplePattern>.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  nameWithType.vb: IComparable(Of ITriplePattern).CompareTo(ITriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.ITriplePattern).CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<ITriplePattern>.CompareTo
    fullName: System.IComparable<VDS.RDF.Query.Patterns.ITriplePattern>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of ITriplePattern).CompareTo
    fullName: System.IComparable(Of VDS.RDF.Query.Patterns.ITriplePattern).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}.CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  commentId: M:System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}.CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  parent: System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IMatchTriplePattern)
  nameWithType: IComparable<IMatchTriplePattern>.CompareTo(IMatchTriplePattern)
  fullName: System.IComparable<VDS.RDF.Query.Patterns.IMatchTriplePattern>.CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  nameWithType.vb: IComparable(Of IMatchTriplePattern).CompareTo(IMatchTriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.IMatchTriplePattern).CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IMatchTriplePattern>.CompareTo
    fullName: System.IComparable<VDS.RDF.Query.Patterns.IMatchTriplePattern>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern
    name: IMatchTriplePattern
    nameWithType: IMatchTriplePattern
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IMatchTriplePattern).CompareTo
    fullName: System.IComparable(Of VDS.RDF.Query.Patterns.IMatchTriplePattern).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern
    name: IMatchTriplePattern
    nameWithType: IMatchTriplePattern
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IMatchTriplePattern>()
  nameWithType: Extensions.AsEnumerable<IMatchTriplePattern>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.IMatchTriplePattern>()
  nameWithType.vb: Extensions.AsEnumerable(Of IMatchTriplePattern)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.IMatchTriplePattern)()
  name.vb: AsEnumerable(Of IMatchTriplePattern)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IMatchTriplePattern>
    nameWithType: Extensions.AsEnumerable<IMatchTriplePattern>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.IMatchTriplePattern>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IMatchTriplePattern)
    nameWithType: Extensions.AsEnumerable(Of IMatchTriplePattern)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.IMatchTriplePattern)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.ITriplePattern
  commentId: T:VDS.RDF.Query.Patterns.ITriplePattern
  parent: VDS.RDF.Query.Patterns
  name: ITriplePattern
  nameWithType: ITriplePattern
  fullName: VDS.RDF.Query.Patterns.ITriplePattern
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  commentId: T:System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ITriplePattern>
  nameWithType: IComparable<ITriplePattern>
  fullName: System.IComparable<VDS.RDF.Query.Patterns.ITriplePattern>
  nameWithType.vb: IComparable(Of ITriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.ITriplePattern)
  name.vb: IComparable(Of ITriplePattern)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}
  commentId: T:System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IMatchTriplePattern>
  nameWithType: IComparable<IMatchTriplePattern>
  fullName: System.IComparable<VDS.RDF.Query.Patterns.IMatchTriplePattern>
  nameWithType.vb: IComparable(Of IMatchTriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.IMatchTriplePattern)
  name.vb: IComparable(Of IMatchTriplePattern)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern
    name: IMatchTriplePattern
    nameWithType: IMatchTriplePattern
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern
    name: IMatchTriplePattern
    nameWithType: IMatchTriplePattern
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.IndexType*
  commentId: Overload:VDS.RDF.Query.Patterns.IMatchTriplePattern.IndexType
  name: IndexType
  nameWithType: IMatchTriplePattern.IndexType
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.IndexType
- uid: VDS.RDF.TripleIndexType
  commentId: T:VDS.RDF.TripleIndexType
  parent: VDS.RDF
  name: TripleIndexType
  nameWithType: TripleIndexType
  fullName: VDS.RDF.TripleIndexType
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject*
  commentId: Overload:VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
  name: Subject
  nameWithType: IMatchTriplePattern.Subject
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
- uid: VDS.RDF.Query.Patterns.PatternItem
  commentId: T:VDS.RDF.Query.Patterns.PatternItem
  parent: VDS.RDF.Query.Patterns
  name: PatternItem
  nameWithType: PatternItem
  fullName: VDS.RDF.Query.Patterns.PatternItem
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate*
  commentId: Overload:VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
  name: Predicate
  nameWithType: IMatchTriplePattern.Predicate
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Object*
  commentId: Overload:VDS.RDF.Query.Patterns.IMatchTriplePattern.Object
  name: Object
  nameWithType: IMatchTriplePattern.Object
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Object
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples*
  commentId: Overload:VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples
  name: GetTriples
  nameWithType: IMatchTriplePattern.GetTriples
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Triple>
  nameWithType: IEnumerable<Triple>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Triple>
  nameWithType.vb: IEnumerable(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple)
  name.vb: IEnumerable(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts*
  commentId: Overload:VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts
  name: Accepts
  nameWithType: IMatchTriplePattern.Accepts
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult*
  commentId: Overload:VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult
  name: CreateResult
  nameWithType: IMatchTriplePattern.CreateResult
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult
- uid: VDS.RDF.Query.Algebra.ISet
  commentId: T:VDS.RDF.Query.Algebra.ISet
  parent: VDS.RDF.Query.Algebra
  name: ISet
  nameWithType: ISet
  fullName: VDS.RDF.Query.Algebra.ISet
- uid: VDS.RDF.Query.Algebra
  commentId: N:VDS.RDF.Query.Algebra
  name: VDS.RDF.Query.Algebra
  nameWithType: VDS.RDF.Query.Algebra
  fullName: VDS.RDF.Query.Algebra
