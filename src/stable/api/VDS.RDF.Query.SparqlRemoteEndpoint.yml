### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.SparqlRemoteEndpoint
  commentId: T:VDS.RDF.Query.SparqlRemoteEndpoint
  id: SparqlRemoteEndpoint
  parent: VDS.RDF.Query
  children:
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri)
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Uri})
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Uri})
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri})
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.String)
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Uri)
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Uri,System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Uri,System.Collections.Generic.IEnumerable{System.Uri})
  - VDS.RDF.Query.SparqlRemoteEndpoint.DefaultGraphs
  - VDS.RDF.Query.SparqlRemoteEndpoint.NamedGraphs
  - VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw(System.String)
  - VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw(System.String,System.String[])
  - VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(System.String)
  - VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(System.String,VDS.RDF.GraphCallback,System.Object)
  - VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(VDS.RDF.IRdfHandler,System.String)
  - VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(VDS.RDF.IRdfHandler,System.String,VDS.RDF.QueryCallback,System.Object)
  - VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(System.String)
  - VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(System.String,VDS.RDF.SparqlResultsCallback,System.Object)
  - VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(VDS.RDF.ISparqlResultsHandler,System.String)
  - VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(VDS.RDF.ISparqlResultsHandler,System.String,VDS.RDF.QueryCallback,System.Object)
  - VDS.RDF.Query.SparqlRemoteEndpoint.RdfAcceptHeader
  - VDS.RDF.Query.SparqlRemoteEndpoint.ResultsAcceptHeader
  - VDS.RDF.Query.SparqlRemoteEndpoint.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint
  nameWithType: SparqlRemoteEndpoint
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlRemoteEndpoint
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 43
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nA Class for connecting to a remote SPARQL Endpoint and executing Queries against it.\n"
  example: []
  syntax:
    content: 'public class SparqlRemoteEndpoint : BaseEndpoint, IConfigurationSerializable'
    content.vb: >-
      Public Class SparqlRemoteEndpoint
          Inherits BaseEndpoint
          Implements IConfigurationSerializable
  inheritance:
  - System.Object
  - VDS.RDF.BaseEndpoint
  derivedClasses:
  - VDS.RDF.Query.FederatedSparqlRemoteEndpoint
  implements:
  - VDS.RDF.Configuration.IConfigurationSerializable
  inheritedMembers:
  - VDS.RDF.BaseEndpoint.Uri
  - VDS.RDF.BaseEndpoint.Credentials
  - VDS.RDF.BaseEndpoint.UserAgent
  - VDS.RDF.BaseEndpoint.HttpMode
  - VDS.RDF.BaseEndpoint.Timeout
  - VDS.RDF.BaseEndpoint.SetCredentials(System.String,System.String)
  - VDS.RDF.BaseEndpoint.SetCredentials(System.String,System.String,System.String)
  - VDS.RDF.BaseEndpoint.ClearCredentials
  - VDS.RDF.BaseEndpoint.UseCredentialsForProxy
  - VDS.RDF.BaseEndpoint.SetProxy(System.String)
  - VDS.RDF.BaseEndpoint.SetProxy(System.Uri)
  - VDS.RDF.BaseEndpoint.Proxy
  - VDS.RDF.BaseEndpoint.ClearProxy
  - VDS.RDF.BaseEndpoint.SetProxyCredentials(System.String,System.String)
  - VDS.RDF.BaseEndpoint.SetProxyCredentials(System.String,System.String,System.String)
  - VDS.RDF.BaseEndpoint.ProxyCredentials
  - VDS.RDF.BaseEndpoint.ClearProxyCredentials
  - VDS.RDF.BaseEndpoint.ApplyRequestOptions(System.Net.HttpWebRequest)
  - VDS.RDF.BaseEndpoint.ApplyCustomRequestOptions(System.Net.HttpWebRequest)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.SparqlRemoteEndpoint.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor
  id: '#ctor'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint()
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint()
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 57
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nEmpty Constructor for use by derived classes.\n"
  example: []
  syntax:
    content: protected SparqlRemoteEndpoint()
    content.vb: Protected Sub New
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint(Uri)
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new SPARQL Endpoint for the given Endpoint URI.\n"
  example: []
  syntax:
    content: public SparqlRemoteEndpoint(Uri endpointUri)
    parameters:
    - id: endpointUri
      type: System.Uri
      description: Remote Endpoint URI.
    content.vb: Public Sub New(endpointUri As Uri)
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.String)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.String)
  id: '#ctor(System.Uri,System.String)'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint(Uri, String)
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, String)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 74
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new SPARQL Endpoint for the given Endpoint URI using the given Default Graph Uri.\n"
  example: []
  syntax:
    content: public SparqlRemoteEndpoint(Uri endpointUri, string defaultGraphUri)
    parameters:
    - id: endpointUri
      type: System.Uri
      description: Remote Endpoint URI.
    - id: defaultGraphUri
      type: System.String
      description: Default Graph URI to use when Querying the Endpoint.
    content.vb: Public Sub New(endpointUri As Uri, defaultGraphUri As String)
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Uri)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Uri)
  id: '#ctor(System.Uri,System.Uri)'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint(Uri, Uri)
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, Uri)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Uri)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 85
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new SPARQL Endpoint for the given Endpoint Uri using the given Default Graph Uri.\n"
  example: []
  syntax:
    content: public SparqlRemoteEndpoint(Uri endpointUri, Uri defaultGraphUri)
    parameters:
    - id: endpointUri
      type: System.Uri
      description: Remote Endpoint URI.
    - id: defaultGraphUri
      type: System.Uri
      description: Default Graph URI to use when Querying the Endpoint.
    content.vb: Public Sub New(endpointUri As Uri, defaultGraphUri As Uri)
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint(Uri, String, IEnumerable<String>)
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, String, IEnumerable<String>)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.String, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new SPARQL Endpoint for the given Endpoint URI using the given Default Graph URI.\n"
  example: []
  syntax:
    content: public SparqlRemoteEndpoint(Uri endpointUri, string defaultGraphUri, IEnumerable<string> namedGraphUris)
    parameters:
    - id: endpointUri
      type: System.Uri
      description: Remote Endpoint URI.
    - id: defaultGraphUri
      type: System.String
      description: Default Graph URI to use when Querying the Endpoint.
    - id: namedGraphUris
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Named Graph URIs to use when Querying the Endpoint.
    content.vb: Public Sub New(endpointUri As Uri, defaultGraphUri As String, namedGraphUris As IEnumerable(Of String))
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  nameWithType.vb: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, String, IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.String, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: SparqlRemoteEndpoint(Uri, String, IEnumerable(Of String))
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Uri,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Uri,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Uri,System.Uri,System.Collections.Generic.IEnumerable{System.String})'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint(Uri, Uri, IEnumerable<String>)
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, Uri, IEnumerable<String>)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Uri, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new SPARQL Endpoint for the given Endpoint URI using the given Default Graph URI.\n"
  example: []
  syntax:
    content: public SparqlRemoteEndpoint(Uri endpointUri, Uri defaultGraphUri, IEnumerable<string> namedGraphUris)
    parameters:
    - id: endpointUri
      type: System.Uri
      description: Remote Endpoint URI.
    - id: defaultGraphUri
      type: System.Uri
      description: Default Graph URI to use when Querying the Endpoint.
    - id: namedGraphUris
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Named Graph URIs to use when Querying the Endpoint.
    content.vb: Public Sub New(endpointUri As Uri, defaultGraphUri As Uri, namedGraphUris As IEnumerable(Of String))
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  nameWithType.vb: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, Uri, IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Uri, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: SparqlRemoteEndpoint(Uri, Uri, IEnumerable(Of String))
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Uri,System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Uri,System.Collections.Generic.IEnumerable{System.Uri})
  id: '#ctor(System.Uri,System.Uri,System.Collections.Generic.IEnumerable{System.Uri})'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint(Uri, Uri, IEnumerable<Uri>)
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, Uri, IEnumerable<Uri>)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Uri, System.Collections.Generic.IEnumerable<System.Uri>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 124
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new SPARQL Endpoint for the given Endpoint URI using the given Default Graph URI.\n"
  example: []
  syntax:
    content: public SparqlRemoteEndpoint(Uri endpointUri, Uri defaultGraphUri, IEnumerable<Uri> namedGraphUris)
    parameters:
    - id: endpointUri
      type: System.Uri
      description: Remote Endpoint URI.
    - id: defaultGraphUri
      type: System.Uri
      description: Default Graph URI to use when Querying the Endpoint.
    - id: namedGraphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: Named Graph URIs to use when Querying the Endpoint.
    content.vb: Public Sub New(endpointUri As Uri, defaultGraphUri As Uri, namedGraphUris As IEnumerable(Of Uri))
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  nameWithType.vb: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, Uri, IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Uri, System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SparqlRemoteEndpoint(Uri, Uri, IEnumerable(Of Uri))
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String})'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint(Uri, IEnumerable<String>)
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, IEnumerable<String>)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 135
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new SPARQL Endpoint for the given Endpoint URI using the given Default Graph URI.\n"
  example: []
  syntax:
    content: public SparqlRemoteEndpoint(Uri endpointUri, IEnumerable<string> defaultGraphUris)
    parameters:
    - id: endpointUri
      type: System.Uri
      description: Remote Endpoint URI.
    - id: defaultGraphUris
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Default Graph URIs to use when Querying the Endpoint.
    content.vb: Public Sub New(endpointUri As Uri, defaultGraphUris As IEnumerable(Of String))
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  nameWithType.vb: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: SparqlRemoteEndpoint(Uri, IEnumerable(Of String))
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Uri})
  id: '#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Uri})'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint(Uri, IEnumerable<Uri>)
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, IEnumerable<Uri>)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Collections.Generic.IEnumerable<System.Uri>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 146
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new SPARQL Endpoint for the given Endpoint URI using the given Default Graph URI.\n"
  example: []
  syntax:
    content: public SparqlRemoteEndpoint(Uri endpointUri, IEnumerable<Uri> defaultGraphUris)
    parameters:
    - id: endpointUri
      type: System.Uri
      description: Remote Endpoint URI.
    - id: defaultGraphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: Default Graph URIs to use when Querying the Endpoint.
    content.vb: Public Sub New(endpointUri As Uri, defaultGraphUris As IEnumerable(Of Uri))
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  nameWithType.vb: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SparqlRemoteEndpoint(Uri, IEnumerable(Of Uri))
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint(Uri, IEnumerable<String>, IEnumerable<String>)
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, IEnumerable<String>, IEnumerable<String>)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 158
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new SPARQL Endpoint for the given Endpoint URI using the given Default Graph URI.\n"
  example: []
  syntax:
    content: public SparqlRemoteEndpoint(Uri endpointUri, IEnumerable<string> defaultGraphUris, IEnumerable<string> namedGraphUris)
    parameters:
    - id: endpointUri
      type: System.Uri
      description: Remote Endpoint URI.
    - id: defaultGraphUris
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Default Graph URIs to use when Querying the Endpoint.
    - id: namedGraphUris
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Named Graph URIs to use when Querying the Endpoint.
    content.vb: Public Sub New(endpointUri As Uri, defaultGraphUris As IEnumerable(Of String), namedGraphUris As IEnumerable(Of String))
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  nameWithType.vb: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, IEnumerable(Of String), IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: SparqlRemoteEndpoint(Uri, IEnumerable(Of String), IEnumerable(Of String))
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Uri})
  id: '#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.Uri})'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint(Uri, IEnumerable<String>, IEnumerable<Uri>)
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, IEnumerable<String>, IEnumerable<Uri>)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.Uri>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 170
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new SPARQL Endpoint for the given Endpoint URI using the given Default Graph URI.\n"
  example: []
  syntax:
    content: public SparqlRemoteEndpoint(Uri endpointUri, IEnumerable<string> defaultGraphUris, IEnumerable<Uri> namedGraphUris)
    parameters:
    - id: endpointUri
      type: System.Uri
      description: Remote Endpoint URI.
    - id: defaultGraphUris
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Default Graph URIs to use when Querying the Endpoint.
    - id: namedGraphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: Named Graph URIs to use when Querying the Endpoint.
    content.vb: Public Sub New(endpointUri As Uri, defaultGraphUris As IEnumerable(Of String), namedGraphUris As IEnumerable(Of Uri))
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  nameWithType.vb: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, IEnumerable(Of String), IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SparqlRemoteEndpoint(Uri, IEnumerable(Of String), IEnumerable(Of Uri))
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.String})'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint(Uri, IEnumerable<Uri>, IEnumerable<String>)
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, IEnumerable<Uri>, IEnumerable<String>)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Collections.Generic.IEnumerable<System.Uri>, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 182
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new SPARQL Endpoint for the given Endpoint URI using the given Default Graph URI.\n"
  example: []
  syntax:
    content: public SparqlRemoteEndpoint(Uri endpointUri, IEnumerable<Uri> defaultGraphUris, IEnumerable<string> namedGraphUris)
    parameters:
    - id: endpointUri
      type: System.Uri
      description: Remote Endpoint URI.
    - id: defaultGraphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: Default Graph URIs to use when Querying the Endpoint.
    - id: namedGraphUris
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Named Graph URIs to use when Querying the Endpoint.
    content.vb: Public Sub New(endpointUri As Uri, defaultGraphUris As IEnumerable(Of Uri), namedGraphUris As IEnumerable(Of String))
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  nameWithType.vb: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, IEnumerable(Of Uri), IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Collections.Generic.IEnumerable(Of System.Uri), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: SparqlRemoteEndpoint(Uri, IEnumerable(Of Uri), IEnumerable(Of String))
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri})
  id: '#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri})'
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint(Uri, IEnumerable<Uri>, IEnumerable<Uri>)
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, IEnumerable<Uri>, IEnumerable<Uri>)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Collections.Generic.IEnumerable<System.Uri>, System.Collections.Generic.IEnumerable<System.Uri>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 194
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new SPARQL Endpoint for the given Endpoint URI using the given Default Graph URI.\n"
  example: []
  syntax:
    content: public SparqlRemoteEndpoint(Uri endpointUri, IEnumerable<Uri> defaultGraphUris, IEnumerable<Uri> namedGraphUris)
    parameters:
    - id: endpointUri
      type: System.Uri
      description: Remote Endpoint URI.
    - id: defaultGraphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: Default Graph URIs to use when Querying the Endpoint.
    - id: namedGraphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: Named Graph URIs to use when Querying the Endpoint.
    content.vb: Public Sub New(endpointUri As Uri, defaultGraphUris As IEnumerable(Of Uri), namedGraphUris As IEnumerable(Of Uri))
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  nameWithType.vb: SparqlRemoteEndpoint.SparqlRemoteEndpoint(Uri, IEnumerable(Of Uri), IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint(System.Uri, System.Collections.Generic.IEnumerable(Of System.Uri), System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SparqlRemoteEndpoint(Uri, IEnumerable(Of Uri), IEnumerable(Of Uri))
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.DefaultGraphs
  commentId: P:VDS.RDF.Query.SparqlRemoteEndpoint.DefaultGraphs
  id: DefaultGraphs
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: DefaultGraphs
  nameWithType: SparqlRemoteEndpoint.DefaultGraphs
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.DefaultGraphs
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultGraphs
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 207
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the Default Graph URIs for Queries made to the SPARQL Endpoint.\n"
  example: []
  syntax:
    content: public List<string> DefaultGraphs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property DefaultGraphs As List(Of String)
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.DefaultGraphs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.NamedGraphs
  commentId: P:VDS.RDF.Query.SparqlRemoteEndpoint.NamedGraphs
  id: NamedGraphs
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: NamedGraphs
  nameWithType: SparqlRemoteEndpoint.NamedGraphs
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.NamedGraphs
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NamedGraphs
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 218
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the List of Named Graphs used in requests.\n"
  example: []
  syntax:
    content: public List<string> NamedGraphs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public ReadOnly Property NamedGraphs As List(Of String)
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.NamedGraphs*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.ResultsAcceptHeader
  commentId: P:VDS.RDF.Query.SparqlRemoteEndpoint.ResultsAcceptHeader
  id: ResultsAcceptHeader
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: ResultsAcceptHeader
  nameWithType: SparqlRemoteEndpoint.ResultsAcceptHeader
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.ResultsAcceptHeader
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResultsAcceptHeader
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 234
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets/Sets the Accept Header sent with ASK/SELECT queries.\n"
  remarks: "\n<p>\nCan be used to workaround buggy endpoints which don&apos;t like the broad Accept Header that dotNetRDF sends by default.  If not set or explicitly set to null the library uses the default header generated by <xref href=\"VDS.RDF.MimeTypesHelper.HttpSparqlAcceptHeader\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  example: []
  syntax:
    content: public string ResultsAcceptHeader { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ResultsAcceptHeader As String
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.ResultsAcceptHeader*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.RdfAcceptHeader
  commentId: P:VDS.RDF.Query.SparqlRemoteEndpoint.RdfAcceptHeader
  id: RdfAcceptHeader
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: RdfAcceptHeader
  nameWithType: SparqlRemoteEndpoint.RdfAcceptHeader
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.RdfAcceptHeader
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RdfAcceptHeader
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 254
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets/Sets the Accept Header sent with CONSTRUCT/DESCRIBE queries.\n"
  remarks: "\n<p>\nCan be used to workaround buggy endpoints which don&apos;t like the broad Accept Header that dotNetRDF sends by default.  If not set or explicitly set to null the library uses the default header generated by <xref href=\"VDS.RDF.MimeTypesHelper.HttpAcceptHeader\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  example: []
  syntax:
    content: public string RdfAcceptHeader { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RdfAcceptHeader As String
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.RdfAcceptHeader*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(System.String)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(System.String)
  id: QueryWithResultSet(System.String)
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: QueryWithResultSet(String)
  nameWithType: SparqlRemoteEndpoint.QueryWithResultSet(String)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryWithResultSet
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 275
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nMakes a Query where the expected Result is a <xref href=\"VDS.RDF.Query.SparqlResultSet\" data-throw-if-not-resolved=\"false\"></xref> i.e. SELECT and ASK Queries.\n"
  example: []
  syntax:
    content: public virtual SparqlResultSet QueryWithResultSet(string sparqlQuery)
    parameters:
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query String.
    return:
      type: VDS.RDF.Query.SparqlResultSet
      description: A SPARQL Result Set.
    content.vb: Public Overridable Function QueryWithResultSet(sparqlQuery As String) As SparqlResultSet
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(VDS.RDF.ISparqlResultsHandler,System.String)
  id: QueryWithResultSet(VDS.RDF.ISparqlResultsHandler,System.String)
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: QueryWithResultSet(ISparqlResultsHandler, String)
  nameWithType: SparqlRemoteEndpoint.QueryWithResultSet(ISparqlResultsHandler, String)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(VDS.RDF.ISparqlResultsHandler, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryWithResultSet
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 288
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nMakes a Query where the expected Result is a <xref href=\"VDS.RDF.Query.SparqlResultSet\" data-throw-if-not-resolved=\"false\"></xref> i.e. SELECT and ASK Queries.\n"
  example: []
  syntax:
    content: public virtual void QueryWithResultSet(ISparqlResultsHandler handler, string sparqlQuery)
    parameters:
    - id: handler
      type: VDS.RDF.ISparqlResultsHandler
      description: Results Handler.
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query String.
    content.vb: Public Overridable Sub QueryWithResultSet(handler As ISparqlResultsHandler, sparqlQuery As String)
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(System.String)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(System.String)
  id: QueryWithResultGraph(System.String)
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: QueryWithResultGraph(String)
  nameWithType: SparqlRemoteEndpoint.QueryWithResultGraph(String)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryWithResultGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 326
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nMakes a Query where the expected Result is an RDF Graph ie. CONSTRUCT and DESCRIBE Queries.\n"
  example: []
  syntax:
    content: public virtual IGraph QueryWithResultGraph(string sparqlQuery)
    parameters:
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query String.
    return:
      type: VDS.RDF.IGraph
      description: RDF Graph.
    content.vb: Public Overridable Function QueryWithResultGraph(sparqlQuery As String) As IGraph
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(VDS.RDF.IRdfHandler,System.String)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(VDS.RDF.IRdfHandler,System.String)
  id: QueryWithResultGraph(VDS.RDF.IRdfHandler,System.String)
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: QueryWithResultGraph(IRdfHandler, String)
  nameWithType: SparqlRemoteEndpoint.QueryWithResultGraph(IRdfHandler, String)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(VDS.RDF.IRdfHandler, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryWithResultGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 340
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nMakes a Query where the expected Result is an RDF Graph ie. CONSTRUCT and DESCRIBE Queries.\n"
  example: []
  syntax:
    content: public virtual void QueryWithResultGraph(IRdfHandler handler, string sparqlQuery)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query String.
    content.vb: Public Overridable Sub QueryWithResultGraph(handler As IRdfHandler, sparqlQuery As String)
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw(System.String)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw(System.String)
  id: QueryRaw(System.String)
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: QueryRaw(String)
  nameWithType: SparqlRemoteEndpoint.QueryRaw(String)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryRaw
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 372
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nMakes a Query to a SPARQL Endpoint and returns the raw Response.\n"
  example: []
  syntax:
    content: public virtual HttpWebResponse QueryRaw(string sparqlQuery)
    parameters:
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query String.
    return:
      type: System.Net.HttpWebResponse
      description: ''
    content.vb: Public Overridable Function QueryRaw(sparqlQuery As String) As HttpWebResponse
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw(System.String,System.String[])
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw(System.String,System.String[])
  id: QueryRaw(System.String,System.String[])
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: QueryRaw(String, String[])
  nameWithType: SparqlRemoteEndpoint.QueryRaw(String, String[])
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw(System.String, System.String[])
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryRaw
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 394
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nMakes a Query to a SPARQL Endpoint and returns the raw Response.\n"
  example: []
  syntax:
    content: public virtual HttpWebResponse QueryRaw(string sparqlQuery, string[] mimeTypes)
    parameters:
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query String.
    - id: mimeTypes
      type: System.String[]
      description: MIME Types to use for the Accept Header.
    return:
      type: System.Net.HttpWebResponse
      description: ''
    content.vb: Public Overridable Function QueryRaw(sparqlQuery As String, mimeTypes As String()) As HttpWebResponse
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw*
  nameWithType.vb: SparqlRemoteEndpoint.QueryRaw(String, String())
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw(System.String, System.String())
  name.vb: QueryRaw(String, String())
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(System.String,VDS.RDF.SparqlResultsCallback,System.Object)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(System.String,VDS.RDF.SparqlResultsCallback,System.Object)
  id: QueryWithResultSet(System.String,VDS.RDF.SparqlResultsCallback,System.Object)
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: QueryWithResultSet(String, SparqlResultsCallback, Object)
  nameWithType: SparqlRemoteEndpoint.QueryWithResultSet(String, SparqlResultsCallback, Object)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(System.String, VDS.RDF.SparqlResultsCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryWithResultSet
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 568
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nMakes a Query asynchronously where the expected Result is a <xref href=\"VDS.RDF.Query.SparqlResultSet\" data-throw-if-not-resolved=\"false\"></xref> i.e. SELECT and ASK Queries.\n"
  example: []
  syntax:
    content: public void QueryWithResultSet(string query, SparqlResultsCallback callback, object state)
    parameters:
    - id: query
      type: System.String
      description: SPARQL Query String.
    - id: callback
      type: VDS.RDF.SparqlResultsCallback
      description: Callback to invoke when the query completes.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Public Sub QueryWithResultSet(query As String, callback As SparqlResultsCallback, state As Object)
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(VDS.RDF.ISparqlResultsHandler,System.String,VDS.RDF.QueryCallback,System.Object)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(VDS.RDF.ISparqlResultsHandler,System.String,VDS.RDF.QueryCallback,System.Object)
  id: QueryWithResultSet(VDS.RDF.ISparqlResultsHandler,System.String,VDS.RDF.QueryCallback,System.Object)
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: QueryWithResultSet(ISparqlResultsHandler, String, QueryCallback, Object)
  nameWithType: SparqlRemoteEndpoint.QueryWithResultSet(ISparqlResultsHandler, String, QueryCallback, Object)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet(VDS.RDF.ISparqlResultsHandler, System.String, VDS.RDF.QueryCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryWithResultSet
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 662
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nMakes a Query asynchronously where the expected Result is a <xref href=\"VDS.RDF.Query.SparqlResultSet\" data-throw-if-not-resolved=\"false\"></xref> i.e. SELECT and ASK Queries.\n"
  example: []
  syntax:
    content: public void QueryWithResultSet(ISparqlResultsHandler handler, string query, QueryCallback callback, object state)
    parameters:
    - id: handler
      type: VDS.RDF.ISparqlResultsHandler
      description: Results Handler.
    - id: query
      type: System.String
      description: SPARQL Query String.
    - id: callback
      type: VDS.RDF.QueryCallback
      description: Callback to invoke when the query completes.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Public Sub QueryWithResultSet(handler As ISparqlResultsHandler, query As String, callback As QueryCallback, state As Object)
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(System.String,VDS.RDF.GraphCallback,System.Object)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(System.String,VDS.RDF.GraphCallback,System.Object)
  id: QueryWithResultGraph(System.String,VDS.RDF.GraphCallback,System.Object)
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: QueryWithResultGraph(String, GraphCallback, Object)
  nameWithType: SparqlRemoteEndpoint.QueryWithResultGraph(String, GraphCallback, Object)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(System.String, VDS.RDF.GraphCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryWithResultGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 749
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nMakes a Query asynchronously where the expected Result is an RDF Graph ie. CONSTRUCT and DESCRIBE Queries.\n"
  example: []
  syntax:
    content: public void QueryWithResultGraph(string query, GraphCallback callback, object state)
    parameters:
    - id: query
      type: System.String
      description: SPARQL Query String.
    - id: callback
      type: VDS.RDF.GraphCallback
      description: Callback to invoke when the query completes.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Public Sub QueryWithResultGraph(query As String, callback As GraphCallback, state As Object)
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(VDS.RDF.IRdfHandler,System.String,VDS.RDF.QueryCallback,System.Object)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(VDS.RDF.IRdfHandler,System.String,VDS.RDF.QueryCallback,System.Object)
  id: QueryWithResultGraph(VDS.RDF.IRdfHandler,System.String,VDS.RDF.QueryCallback,System.Object)
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: QueryWithResultGraph(IRdfHandler, String, QueryCallback, Object)
  nameWithType: SparqlRemoteEndpoint.QueryWithResultGraph(IRdfHandler, String, QueryCallback, Object)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph(VDS.RDF.IRdfHandler, System.String, VDS.RDF.QueryCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryWithResultGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 840
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nMakes a Query asynchronously where the expected Result is an RDF Graph ie. CONSTRUCT and DESCRIBE Queries.\n"
  example: []
  syntax:
    content: public void QueryWithResultGraph(IRdfHandler handler, string query, QueryCallback callback, object state)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: query
      type: System.String
      description: SPARQL Query String.
    - id: callback
      type: VDS.RDF.QueryCallback
      description: Callback to invoke when the query completes.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Public Sub QueryWithResultGraph(handler As IRdfHandler, query As String, callback As QueryCallback, state As Object)
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  commentId: M:VDS.RDF.Query.SparqlRemoteEndpoint.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  id: SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  parent: VDS.RDF.Query.SparqlRemoteEndpoint
  langs:
  - csharp
  - vb
  name: SerializeConfiguration(ConfigurationSerializationContext)
  nameWithType: SparqlRemoteEndpoint.SerializeConfiguration(ConfigurationSerializationContext)
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SerializeConfiguration
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 921
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nSerializes the Endpoint&apos;s Configuration.\n"
  example: []
  syntax:
    content: public override void SerializeConfiguration(ConfigurationSerializationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Configuration.ConfigurationSerializationContext
      description: Configuration Serialization Context.
    content.vb: Public Overrides Sub SerializeConfiguration(context As ConfigurationSerializationContext)
  overridden: VDS.RDF.BaseEndpoint.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  overload: VDS.RDF.Query.SparqlRemoteEndpoint.SerializeConfiguration*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.BaseEndpoint
  commentId: T:VDS.RDF.BaseEndpoint
  parent: VDS.RDF
  name: BaseEndpoint
  nameWithType: BaseEndpoint
  fullName: VDS.RDF.BaseEndpoint
- uid: VDS.RDF.Configuration.IConfigurationSerializable
  commentId: T:VDS.RDF.Configuration.IConfigurationSerializable
  parent: VDS.RDF.Configuration
  name: IConfigurationSerializable
  nameWithType: IConfigurationSerializable
  fullName: VDS.RDF.Configuration.IConfigurationSerializable
- uid: VDS.RDF.BaseEndpoint.Uri
  commentId: P:VDS.RDF.BaseEndpoint.Uri
  parent: VDS.RDF.BaseEndpoint
  name: Uri
  nameWithType: BaseEndpoint.Uri
  fullName: VDS.RDF.BaseEndpoint.Uri
- uid: VDS.RDF.BaseEndpoint.Credentials
  commentId: P:VDS.RDF.BaseEndpoint.Credentials
  parent: VDS.RDF.BaseEndpoint
  name: Credentials
  nameWithType: BaseEndpoint.Credentials
  fullName: VDS.RDF.BaseEndpoint.Credentials
- uid: VDS.RDF.BaseEndpoint.UserAgent
  commentId: P:VDS.RDF.BaseEndpoint.UserAgent
  parent: VDS.RDF.BaseEndpoint
  name: UserAgent
  nameWithType: BaseEndpoint.UserAgent
  fullName: VDS.RDF.BaseEndpoint.UserAgent
- uid: VDS.RDF.BaseEndpoint.HttpMode
  commentId: P:VDS.RDF.BaseEndpoint.HttpMode
  parent: VDS.RDF.BaseEndpoint
  name: HttpMode
  nameWithType: BaseEndpoint.HttpMode
  fullName: VDS.RDF.BaseEndpoint.HttpMode
- uid: VDS.RDF.BaseEndpoint.Timeout
  commentId: P:VDS.RDF.BaseEndpoint.Timeout
  parent: VDS.RDF.BaseEndpoint
  name: Timeout
  nameWithType: BaseEndpoint.Timeout
  fullName: VDS.RDF.BaseEndpoint.Timeout
- uid: VDS.RDF.BaseEndpoint.SetCredentials(System.String,System.String)
  commentId: M:VDS.RDF.BaseEndpoint.SetCredentials(System.String,System.String)
  parent: VDS.RDF.BaseEndpoint
  isExternal: true
  name: SetCredentials(String, String)
  nameWithType: BaseEndpoint.SetCredentials(String, String)
  fullName: VDS.RDF.BaseEndpoint.SetCredentials(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.BaseEndpoint.SetCredentials(System.String,System.String)
    name: SetCredentials
    nameWithType: BaseEndpoint.SetCredentials
    fullName: VDS.RDF.BaseEndpoint.SetCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseEndpoint.SetCredentials(System.String,System.String)
    name: SetCredentials
    nameWithType: BaseEndpoint.SetCredentials
    fullName: VDS.RDF.BaseEndpoint.SetCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseEndpoint.SetCredentials(System.String,System.String,System.String)
  commentId: M:VDS.RDF.BaseEndpoint.SetCredentials(System.String,System.String,System.String)
  parent: VDS.RDF.BaseEndpoint
  isExternal: true
  name: SetCredentials(String, String, String)
  nameWithType: BaseEndpoint.SetCredentials(String, String, String)
  fullName: VDS.RDF.BaseEndpoint.SetCredentials(System.String, System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.BaseEndpoint.SetCredentials(System.String,System.String,System.String)
    name: SetCredentials
    nameWithType: BaseEndpoint.SetCredentials
    fullName: VDS.RDF.BaseEndpoint.SetCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseEndpoint.SetCredentials(System.String,System.String,System.String)
    name: SetCredentials
    nameWithType: BaseEndpoint.SetCredentials
    fullName: VDS.RDF.BaseEndpoint.SetCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseEndpoint.ClearCredentials
  commentId: M:VDS.RDF.BaseEndpoint.ClearCredentials
  parent: VDS.RDF.BaseEndpoint
  name: ClearCredentials()
  nameWithType: BaseEndpoint.ClearCredentials()
  fullName: VDS.RDF.BaseEndpoint.ClearCredentials()
  spec.csharp:
  - uid: VDS.RDF.BaseEndpoint.ClearCredentials
    name: ClearCredentials
    nameWithType: BaseEndpoint.ClearCredentials
    fullName: VDS.RDF.BaseEndpoint.ClearCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseEndpoint.ClearCredentials
    name: ClearCredentials
    nameWithType: BaseEndpoint.ClearCredentials
    fullName: VDS.RDF.BaseEndpoint.ClearCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseEndpoint.UseCredentialsForProxy
  commentId: P:VDS.RDF.BaseEndpoint.UseCredentialsForProxy
  parent: VDS.RDF.BaseEndpoint
  name: UseCredentialsForProxy
  nameWithType: BaseEndpoint.UseCredentialsForProxy
  fullName: VDS.RDF.BaseEndpoint.UseCredentialsForProxy
- uid: VDS.RDF.BaseEndpoint.SetProxy(System.String)
  commentId: M:VDS.RDF.BaseEndpoint.SetProxy(System.String)
  parent: VDS.RDF.BaseEndpoint
  isExternal: true
  name: SetProxy(String)
  nameWithType: BaseEndpoint.SetProxy(String)
  fullName: VDS.RDF.BaseEndpoint.SetProxy(System.String)
  spec.csharp:
  - uid: VDS.RDF.BaseEndpoint.SetProxy(System.String)
    name: SetProxy
    nameWithType: BaseEndpoint.SetProxy
    fullName: VDS.RDF.BaseEndpoint.SetProxy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseEndpoint.SetProxy(System.String)
    name: SetProxy
    nameWithType: BaseEndpoint.SetProxy
    fullName: VDS.RDF.BaseEndpoint.SetProxy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseEndpoint.SetProxy(System.Uri)
  commentId: M:VDS.RDF.BaseEndpoint.SetProxy(System.Uri)
  parent: VDS.RDF.BaseEndpoint
  isExternal: true
  name: SetProxy(Uri)
  nameWithType: BaseEndpoint.SetProxy(Uri)
  fullName: VDS.RDF.BaseEndpoint.SetProxy(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.BaseEndpoint.SetProxy(System.Uri)
    name: SetProxy
    nameWithType: BaseEndpoint.SetProxy
    fullName: VDS.RDF.BaseEndpoint.SetProxy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseEndpoint.SetProxy(System.Uri)
    name: SetProxy
    nameWithType: BaseEndpoint.SetProxy
    fullName: VDS.RDF.BaseEndpoint.SetProxy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseEndpoint.Proxy
  commentId: P:VDS.RDF.BaseEndpoint.Proxy
  parent: VDS.RDF.BaseEndpoint
  name: Proxy
  nameWithType: BaseEndpoint.Proxy
  fullName: VDS.RDF.BaseEndpoint.Proxy
- uid: VDS.RDF.BaseEndpoint.ClearProxy
  commentId: M:VDS.RDF.BaseEndpoint.ClearProxy
  parent: VDS.RDF.BaseEndpoint
  name: ClearProxy()
  nameWithType: BaseEndpoint.ClearProxy()
  fullName: VDS.RDF.BaseEndpoint.ClearProxy()
  spec.csharp:
  - uid: VDS.RDF.BaseEndpoint.ClearProxy
    name: ClearProxy
    nameWithType: BaseEndpoint.ClearProxy
    fullName: VDS.RDF.BaseEndpoint.ClearProxy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseEndpoint.ClearProxy
    name: ClearProxy
    nameWithType: BaseEndpoint.ClearProxy
    fullName: VDS.RDF.BaseEndpoint.ClearProxy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseEndpoint.SetProxyCredentials(System.String,System.String)
  commentId: M:VDS.RDF.BaseEndpoint.SetProxyCredentials(System.String,System.String)
  parent: VDS.RDF.BaseEndpoint
  isExternal: true
  name: SetProxyCredentials(String, String)
  nameWithType: BaseEndpoint.SetProxyCredentials(String, String)
  fullName: VDS.RDF.BaseEndpoint.SetProxyCredentials(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.BaseEndpoint.SetProxyCredentials(System.String,System.String)
    name: SetProxyCredentials
    nameWithType: BaseEndpoint.SetProxyCredentials
    fullName: VDS.RDF.BaseEndpoint.SetProxyCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseEndpoint.SetProxyCredentials(System.String,System.String)
    name: SetProxyCredentials
    nameWithType: BaseEndpoint.SetProxyCredentials
    fullName: VDS.RDF.BaseEndpoint.SetProxyCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseEndpoint.SetProxyCredentials(System.String,System.String,System.String)
  commentId: M:VDS.RDF.BaseEndpoint.SetProxyCredentials(System.String,System.String,System.String)
  parent: VDS.RDF.BaseEndpoint
  isExternal: true
  name: SetProxyCredentials(String, String, String)
  nameWithType: BaseEndpoint.SetProxyCredentials(String, String, String)
  fullName: VDS.RDF.BaseEndpoint.SetProxyCredentials(System.String, System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.BaseEndpoint.SetProxyCredentials(System.String,System.String,System.String)
    name: SetProxyCredentials
    nameWithType: BaseEndpoint.SetProxyCredentials
    fullName: VDS.RDF.BaseEndpoint.SetProxyCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseEndpoint.SetProxyCredentials(System.String,System.String,System.String)
    name: SetProxyCredentials
    nameWithType: BaseEndpoint.SetProxyCredentials
    fullName: VDS.RDF.BaseEndpoint.SetProxyCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseEndpoint.ProxyCredentials
  commentId: P:VDS.RDF.BaseEndpoint.ProxyCredentials
  parent: VDS.RDF.BaseEndpoint
  name: ProxyCredentials
  nameWithType: BaseEndpoint.ProxyCredentials
  fullName: VDS.RDF.BaseEndpoint.ProxyCredentials
- uid: VDS.RDF.BaseEndpoint.ClearProxyCredentials
  commentId: M:VDS.RDF.BaseEndpoint.ClearProxyCredentials
  parent: VDS.RDF.BaseEndpoint
  name: ClearProxyCredentials()
  nameWithType: BaseEndpoint.ClearProxyCredentials()
  fullName: VDS.RDF.BaseEndpoint.ClearProxyCredentials()
  spec.csharp:
  - uid: VDS.RDF.BaseEndpoint.ClearProxyCredentials
    name: ClearProxyCredentials
    nameWithType: BaseEndpoint.ClearProxyCredentials
    fullName: VDS.RDF.BaseEndpoint.ClearProxyCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseEndpoint.ClearProxyCredentials
    name: ClearProxyCredentials
    nameWithType: BaseEndpoint.ClearProxyCredentials
    fullName: VDS.RDF.BaseEndpoint.ClearProxyCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseEndpoint.ApplyRequestOptions(System.Net.HttpWebRequest)
  commentId: M:VDS.RDF.BaseEndpoint.ApplyRequestOptions(System.Net.HttpWebRequest)
  parent: VDS.RDF.BaseEndpoint
  isExternal: true
  name: ApplyRequestOptions(HttpWebRequest)
  nameWithType: BaseEndpoint.ApplyRequestOptions(HttpWebRequest)
  fullName: VDS.RDF.BaseEndpoint.ApplyRequestOptions(System.Net.HttpWebRequest)
  spec.csharp:
  - uid: VDS.RDF.BaseEndpoint.ApplyRequestOptions(System.Net.HttpWebRequest)
    name: ApplyRequestOptions
    nameWithType: BaseEndpoint.ApplyRequestOptions
    fullName: VDS.RDF.BaseEndpoint.ApplyRequestOptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpWebRequest
    name: HttpWebRequest
    nameWithType: HttpWebRequest
    fullName: System.Net.HttpWebRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseEndpoint.ApplyRequestOptions(System.Net.HttpWebRequest)
    name: ApplyRequestOptions
    nameWithType: BaseEndpoint.ApplyRequestOptions
    fullName: VDS.RDF.BaseEndpoint.ApplyRequestOptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpWebRequest
    name: HttpWebRequest
    nameWithType: HttpWebRequest
    fullName: System.Net.HttpWebRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseEndpoint.ApplyCustomRequestOptions(System.Net.HttpWebRequest)
  commentId: M:VDS.RDF.BaseEndpoint.ApplyCustomRequestOptions(System.Net.HttpWebRequest)
  parent: VDS.RDF.BaseEndpoint
  isExternal: true
  name: ApplyCustomRequestOptions(HttpWebRequest)
  nameWithType: BaseEndpoint.ApplyCustomRequestOptions(HttpWebRequest)
  fullName: VDS.RDF.BaseEndpoint.ApplyCustomRequestOptions(System.Net.HttpWebRequest)
  spec.csharp:
  - uid: VDS.RDF.BaseEndpoint.ApplyCustomRequestOptions(System.Net.HttpWebRequest)
    name: ApplyCustomRequestOptions
    nameWithType: BaseEndpoint.ApplyCustomRequestOptions
    fullName: VDS.RDF.BaseEndpoint.ApplyCustomRequestOptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpWebRequest
    name: HttpWebRequest
    nameWithType: HttpWebRequest
    fullName: System.Net.HttpWebRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseEndpoint.ApplyCustomRequestOptions(System.Net.HttpWebRequest)
    name: ApplyCustomRequestOptions
    nameWithType: BaseEndpoint.ApplyCustomRequestOptions
    fullName: VDS.RDF.BaseEndpoint.ApplyCustomRequestOptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpWebRequest
    name: HttpWebRequest
    nameWithType: HttpWebRequest
    fullName: System.Net.HttpWebRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlRemoteEndpoint>()
  nameWithType: Extensions.AsEnumerable<SparqlRemoteEndpoint>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlRemoteEndpoint>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlRemoteEndpoint)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlRemoteEndpoint)()
  name.vb: AsEnumerable(Of SparqlRemoteEndpoint)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlRemoteEndpoint>
    nameWithType: Extensions.AsEnumerable<SparqlRemoteEndpoint>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlRemoteEndpoint>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlRemoteEndpoint)
    nameWithType: Extensions.AsEnumerable(Of SparqlRemoteEndpoint)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlRemoteEndpoint)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Configuration
  commentId: N:VDS.RDF.Configuration
  name: VDS.RDF.Configuration
  nameWithType: VDS.RDF.Configuration
  fullName: VDS.RDF.Configuration
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.#ctor*
  commentId: Overload:VDS.RDF.Query.SparqlRemoteEndpoint.#ctor
  name: SparqlRemoteEndpoint
  nameWithType: SparqlRemoteEndpoint.SparqlRemoteEndpoint
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SparqlRemoteEndpoint
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  commentId: T:System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  nameWithType.vb: IEnumerable(Of Uri)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Uri)
  name.vb: IEnumerable(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.DefaultGraphs*
  commentId: Overload:VDS.RDF.Query.SparqlRemoteEndpoint.DefaultGraphs
  name: DefaultGraphs
  nameWithType: SparqlRemoteEndpoint.DefaultGraphs
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.DefaultGraphs
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.NamedGraphs*
  commentId: Overload:VDS.RDF.Query.SparqlRemoteEndpoint.NamedGraphs
  name: NamedGraphs
  nameWithType: SparqlRemoteEndpoint.NamedGraphs
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.NamedGraphs
- uid: VDS.RDF.MimeTypesHelper.HttpSparqlAcceptHeader
  commentId: P:VDS.RDF.MimeTypesHelper.HttpSparqlAcceptHeader
  isExternal: true
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.ResultsAcceptHeader*
  commentId: Overload:VDS.RDF.Query.SparqlRemoteEndpoint.ResultsAcceptHeader
  name: ResultsAcceptHeader
  nameWithType: SparqlRemoteEndpoint.ResultsAcceptHeader
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.ResultsAcceptHeader
- uid: VDS.RDF.MimeTypesHelper.HttpAcceptHeader
  commentId: P:VDS.RDF.MimeTypesHelper.HttpAcceptHeader
  isExternal: true
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.RdfAcceptHeader*
  commentId: Overload:VDS.RDF.Query.SparqlRemoteEndpoint.RdfAcceptHeader
  name: RdfAcceptHeader
  nameWithType: SparqlRemoteEndpoint.RdfAcceptHeader
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.RdfAcceptHeader
- uid: VDS.RDF.Query.SparqlResultSet
  commentId: T:VDS.RDF.Query.SparqlResultSet
  parent: VDS.RDF.Query
  name: SparqlResultSet
  nameWithType: SparqlResultSet
  fullName: VDS.RDF.Query.SparqlResultSet
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet*
  commentId: Overload:VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet
  name: QueryWithResultSet
  nameWithType: SparqlRemoteEndpoint.QueryWithResultSet
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultSet
- uid: VDS.RDF.ISparqlResultsHandler
  commentId: T:VDS.RDF.ISparqlResultsHandler
  parent: VDS.RDF
  name: ISparqlResultsHandler
  nameWithType: ISparqlResultsHandler
  fullName: VDS.RDF.ISparqlResultsHandler
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph*
  commentId: Overload:VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph
  name: QueryWithResultGraph
  nameWithType: SparqlRemoteEndpoint.QueryWithResultGraph
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryWithResultGraph
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.IRdfHandler
  commentId: T:VDS.RDF.IRdfHandler
  parent: VDS.RDF
  name: IRdfHandler
  nameWithType: IRdfHandler
  fullName: VDS.RDF.IRdfHandler
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw*
  commentId: Overload:VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw
  name: QueryRaw
  nameWithType: SparqlRemoteEndpoint.QueryRaw
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.QueryRaw
- uid: System.Net.HttpWebResponse
  commentId: T:System.Net.HttpWebResponse
  parent: System.Net
  isExternal: true
  name: HttpWebResponse
  nameWithType: HttpWebResponse
  fullName: System.Net.HttpWebResponse
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: VDS.RDF.SparqlResultsCallback
  commentId: T:VDS.RDF.SparqlResultsCallback
  parent: VDS.RDF
  name: SparqlResultsCallback
  nameWithType: SparqlResultsCallback
  fullName: VDS.RDF.SparqlResultsCallback
- uid: VDS.RDF.QueryCallback
  commentId: T:VDS.RDF.QueryCallback
  parent: VDS.RDF
  name: QueryCallback
  nameWithType: QueryCallback
  fullName: VDS.RDF.QueryCallback
- uid: VDS.RDF.GraphCallback
  commentId: T:VDS.RDF.GraphCallback
  parent: VDS.RDF
  name: GraphCallback
  nameWithType: GraphCallback
  fullName: VDS.RDF.GraphCallback
- uid: VDS.RDF.BaseEndpoint.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  commentId: M:VDS.RDF.BaseEndpoint.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  parent: VDS.RDF.BaseEndpoint
  name: SerializeConfiguration(ConfigurationSerializationContext)
  nameWithType: BaseEndpoint.SerializeConfiguration(ConfigurationSerializationContext)
  fullName: VDS.RDF.BaseEndpoint.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  spec.csharp:
  - uid: VDS.RDF.BaseEndpoint.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
    name: SerializeConfiguration
    nameWithType: BaseEndpoint.SerializeConfiguration
    fullName: VDS.RDF.BaseEndpoint.SerializeConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Configuration.ConfigurationSerializationContext
    name: ConfigurationSerializationContext
    nameWithType: ConfigurationSerializationContext
    fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseEndpoint.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
    name: SerializeConfiguration
    nameWithType: BaseEndpoint.SerializeConfiguration
    fullName: VDS.RDF.BaseEndpoint.SerializeConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Configuration.ConfigurationSerializationContext
    name: ConfigurationSerializationContext
    nameWithType: ConfigurationSerializationContext
    fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.SerializeConfiguration*
  commentId: Overload:VDS.RDF.Query.SparqlRemoteEndpoint.SerializeConfiguration
  name: SerializeConfiguration
  nameWithType: SparqlRemoteEndpoint.SerializeConfiguration
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.SerializeConfiguration
- uid: VDS.RDF.Configuration.ConfigurationSerializationContext
  commentId: T:VDS.RDF.Configuration.ConfigurationSerializationContext
  parent: VDS.RDF.Configuration
  name: ConfigurationSerializationContext
  nameWithType: ConfigurationSerializationContext
  fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
