### YamlMime:ManagedReference
items:
- uid: VDS.RDF.JsonLd.IBlankNodeGenerator
  commentId: T:VDS.RDF.JsonLd.IBlankNodeGenerator
  id: IBlankNodeGenerator
  parent: VDS.RDF.JsonLd
  children:
  - VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
  langs:
  - csharp
  - vb
  name: IBlankNodeGenerator
  nameWithType: IBlankNodeGenerator
  fullName: VDS.RDF.JsonLd.IBlankNodeGenerator
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/IBlankNodeGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IBlankNodeGenerator
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/IBlankNodeGenerator.cs
    startLine: 32
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nInterface for a blank node identifier generator that generates a unique blank node identifier\nfor a given input identifier.\n"
  example: []
  syntax:
    content: public interface IBlankNodeGenerator
    content.vb: Public Interface IBlankNodeGenerator
  extensionMethods:
  - VDS.RDF.JsonLd.IBlankNodeGenerator.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
  commentId: M:VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
  id: GenerateBlankNodeIdentifier(System.String)
  parent: VDS.RDF.JsonLd.IBlankNodeGenerator
  langs:
  - csharp
  - vb
  name: GenerateBlankNodeIdentifier(String)
  nameWithType: IBlankNodeGenerator.GenerateBlankNodeIdentifier(String)
  fullName: VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/IBlankNodeGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GenerateBlankNodeIdentifier
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/IBlankNodeGenerator.cs
    startLine: 40
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nReturn a unique blank node identifier for the specified input identifier.\n"
  remarks: An implementation MUST guarantee to return the same blank node identifier when called multiple times with the same input identifier.
  example: []
  syntax:
    content: string GenerateBlankNodeIdentifier(string identifier)
    parameters:
    - id: identifier
      type: System.String
      description: ''
    return:
      type: System.String
      description: A blank node identifier string (using standard Turtle notation for blank node identifiers).
    content.vb: Function GenerateBlankNodeIdentifier(identifier As String) As String
  overload: VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier*
references:
- uid: VDS.RDF.JsonLd
  commentId: N:VDS.RDF.JsonLd
  name: VDS.RDF.JsonLd
  nameWithType: VDS.RDF.JsonLd
  fullName: VDS.RDF.JsonLd
- uid: VDS.RDF.JsonLd.IBlankNodeGenerator.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IBlankNodeGenerator>()
  nameWithType: Extensions.AsEnumerable<IBlankNodeGenerator>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.JsonLd.IBlankNodeGenerator>()
  nameWithType.vb: Extensions.AsEnumerable(Of IBlankNodeGenerator)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.JsonLd.IBlankNodeGenerator)()
  name.vb: AsEnumerable(Of IBlankNodeGenerator)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IBlankNodeGenerator>
    nameWithType: Extensions.AsEnumerable<IBlankNodeGenerator>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.JsonLd.IBlankNodeGenerator>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IBlankNodeGenerator)
    nameWithType: Extensions.AsEnumerable(Of IBlankNodeGenerator)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.JsonLd.IBlankNodeGenerator)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier*
  commentId: Overload:VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier
  name: GenerateBlankNodeIdentifier
  nameWithType: IBlankNodeGenerator.GenerateBlankNodeIdentifier
  fullName: VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
