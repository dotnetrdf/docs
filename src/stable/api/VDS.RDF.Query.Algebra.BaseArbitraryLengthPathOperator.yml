### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator
  commentId: T:VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator
  id: BaseArbitraryLengthPathOperator
  parent: VDS.RDF.Query.Algebra
  children:
  - VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.#ctor(VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Paths.ISparqlPath)
  - VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.EvaluateStep(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.INode},System.Boolean)
  - VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.GetPathStarts(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{System.Collections.Generic.List{VDS.RDF.INode}},System.Boolean)
  langs:
  - csharp
  - vb
  name: BaseArbitraryLengthPathOperator
  nameWithType: BaseArbitraryLengthPathOperator
  fullName: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/PropertyPathOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseArbitraryLengthPathOperator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Algebra/PropertyPathOperators.cs
    startLine: 164
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nAbstract Base Class for Arbitrary Length Path Operators.\n"
  example: []
  syntax:
    content: 'public abstract class BaseArbitraryLengthPathOperator : BasePathOperator, IPathOperator, ISparqlAlgebra'
    content.vb: >-
      Public MustInherit Class BaseArbitraryLengthPathOperator
          Inherits BasePathOperator
          Implements IPathOperator, ISparqlAlgebra
  inheritance:
  - System.Object
  - VDS.RDF.Query.Algebra.BasePathOperator
  derivedClasses:
  - VDS.RDF.Query.Algebra.OneOrMorePath
  - VDS.RDF.Query.Algebra.ZeroOrMorePath
  implements:
  - VDS.RDF.Query.Algebra.IPathOperator
  - VDS.RDF.Query.Algebra.ISparqlAlgebra
  inheritedMembers:
  - VDS.RDF.Query.Algebra.BasePathOperator.PathStart
  - VDS.RDF.Query.Algebra.BasePathOperator.PathEnd
  - VDS.RDF.Query.Algebra.BasePathOperator.Path
  - VDS.RDF.Query.Algebra.BasePathOperator.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Algebra.BasePathOperator.Variables
  - VDS.RDF.Query.Algebra.BasePathOperator.FixedVariables
  - VDS.RDF.Query.Algebra.BasePathOperator.FloatingVariables
  - VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
  - VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
  - VDS.RDF.Query.Algebra.BasePathOperator.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.#ctor(VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Paths.ISparqlPath)
  commentId: M:VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.#ctor(VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Paths.ISparqlPath)
  id: '#ctor(VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Paths.ISparqlPath)'
  parent: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator
  langs:
  - csharp
  - vb
  name: BaseArbitraryLengthPathOperator(PatternItem, PatternItem, ISparqlPath)
  nameWithType: BaseArbitraryLengthPathOperator.BaseArbitraryLengthPathOperator(PatternItem, PatternItem, ISparqlPath)
  fullName: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.BaseArbitraryLengthPathOperator(VDS.RDF.Query.Patterns.PatternItem, VDS.RDF.Query.Patterns.PatternItem, VDS.RDF.Query.Paths.ISparqlPath)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/PropertyPathOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Algebra/PropertyPathOperators.cs
    startLine: 172
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nCreates a new Arbitrary Lengh Path Operator.\n"
  example: []
  syntax:
    content: public BaseArbitraryLengthPathOperator(PatternItem start, PatternItem end, ISparqlPath path)
    parameters:
    - id: start
      type: VDS.RDF.Query.Patterns.PatternItem
      description: Path Start.
    - id: end
      type: VDS.RDF.Query.Patterns.PatternItem
      description: Path End.
    - id: path
      type: VDS.RDF.Query.Paths.ISparqlPath
      description: Property Path.
    content.vb: Public Sub New(start As PatternItem, end As PatternItem, path As ISparqlPath)
  overload: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.GetPathStarts(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{System.Collections.Generic.List{VDS.RDF.INode}},System.Boolean)
  commentId: M:VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.GetPathStarts(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{System.Collections.Generic.List{VDS.RDF.INode}},System.Boolean)
  id: GetPathStarts(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{System.Collections.Generic.List{VDS.RDF.INode}},System.Boolean)
  parent: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator
  langs:
  - csharp
  - vb
  name: GetPathStarts(SparqlEvaluationContext, List<List<INode>>, Boolean)
  nameWithType: BaseArbitraryLengthPathOperator.GetPathStarts(SparqlEvaluationContext, List<List<INode>>, Boolean)
  fullName: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.GetPathStarts(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.List<System.Collections.Generic.List<VDS.RDF.INode>>, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/PropertyPathOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetPathStarts
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Algebra/PropertyPathOperators.cs
    startLine: 181
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nDetermines the starting points for Path evaluation.\n"
  example: []
  syntax:
    content: protected void GetPathStarts(SparqlEvaluationContext context, List<List<INode>> paths, bool reverse)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    - id: paths
      type: System.Collections.Generic.List{System.Collections.Generic.List{VDS.RDF.INode}}
      description: Paths.
    - id: reverse
      type: System.Boolean
      description: Whether to evaluate Paths in reverse.
    content.vb: Protected Sub GetPathStarts(context As SparqlEvaluationContext, paths As List(Of List(Of INode)), reverse As Boolean)
  overload: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.GetPathStarts*
  nameWithType.vb: BaseArbitraryLengthPathOperator.GetPathStarts(SparqlEvaluationContext, List(Of List(Of INode)), Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.GetPathStarts(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.List(Of System.Collections.Generic.List(Of VDS.RDF.INode)), System.Boolean)
  name.vb: GetPathStarts(SparqlEvaluationContext, List(Of List(Of INode)), Boolean)
- uid: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.EvaluateStep(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.INode},System.Boolean)
  commentId: M:VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.EvaluateStep(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.INode},System.Boolean)
  id: EvaluateStep(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.INode},System.Boolean)
  parent: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator
  langs:
  - csharp
  - vb
  name: EvaluateStep(SparqlEvaluationContext, List<INode>, Boolean)
  nameWithType: BaseArbitraryLengthPathOperator.EvaluateStep(SparqlEvaluationContext, List<INode>, Boolean)
  fullName: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.EvaluateStep(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.List<VDS.RDF.INode>, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/PropertyPathOperators.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EvaluateStep
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Algebra/PropertyPathOperators.cs
    startLine: 239
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nEvaluates a setp of the Path.\n"
  example: []
  syntax:
    content: protected List<INode> EvaluateStep(SparqlEvaluationContext context, List<INode> path, bool reverse)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Context.
    - id: path
      type: System.Collections.Generic.List{VDS.RDF.INode}
      description: Paths.
    - id: reverse
      type: System.Boolean
      description: Whether to evaluate Paths in reverse.
    return:
      type: System.Collections.Generic.List{VDS.RDF.INode}
      description: ''
    content.vb: Protected Function EvaluateStep(context As SparqlEvaluationContext, path As List(Of INode), reverse As Boolean) As List(Of INode)
  overload: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.EvaluateStep*
  nameWithType.vb: BaseArbitraryLengthPathOperator.EvaluateStep(SparqlEvaluationContext, List(Of INode), Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.EvaluateStep(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.List(Of VDS.RDF.INode), System.Boolean)
  name.vb: EvaluateStep(SparqlEvaluationContext, List(Of INode), Boolean)
references:
- uid: VDS.RDF.Query.Algebra
  commentId: N:VDS.RDF.Query.Algebra
  name: VDS.RDF.Query.Algebra
  nameWithType: VDS.RDF.Query.Algebra
  fullName: VDS.RDF.Query.Algebra
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Algebra.BasePathOperator
  commentId: T:VDS.RDF.Query.Algebra.BasePathOperator
  parent: VDS.RDF.Query.Algebra
  name: BasePathOperator
  nameWithType: BasePathOperator
  fullName: VDS.RDF.Query.Algebra.BasePathOperator
- uid: VDS.RDF.Query.Algebra.IPathOperator
  commentId: T:VDS.RDF.Query.Algebra.IPathOperator
  parent: VDS.RDF.Query.Algebra
  name: IPathOperator
  nameWithType: IPathOperator
  fullName: VDS.RDF.Query.Algebra.IPathOperator
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra
  commentId: T:VDS.RDF.Query.Algebra.ISparqlAlgebra
  parent: VDS.RDF.Query.Algebra
  name: ISparqlAlgebra
  nameWithType: ISparqlAlgebra
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra
- uid: VDS.RDF.Query.Algebra.BasePathOperator.PathStart
  commentId: P:VDS.RDF.Query.Algebra.BasePathOperator.PathStart
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: PathStart
  nameWithType: BasePathOperator.PathStart
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.PathStart
- uid: VDS.RDF.Query.Algebra.BasePathOperator.PathEnd
  commentId: P:VDS.RDF.Query.Algebra.BasePathOperator.PathEnd
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: PathEnd
  nameWithType: BasePathOperator.PathEnd
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.PathEnd
- uid: VDS.RDF.Query.Algebra.BasePathOperator.Path
  commentId: P:VDS.RDF.Query.Algebra.BasePathOperator.Path
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: Path
  nameWithType: BasePathOperator.Path
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.Path
- uid: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Algebra.BasePathOperator.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: BasePathOperator.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: BasePathOperator.Evaluate
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: BasePathOperator.Evaluate
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.BasePathOperator.Variables
  commentId: P:VDS.RDF.Query.Algebra.BasePathOperator.Variables
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: Variables
  nameWithType: BasePathOperator.Variables
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.Variables
- uid: VDS.RDF.Query.Algebra.BasePathOperator.FixedVariables
  commentId: P:VDS.RDF.Query.Algebra.BasePathOperator.FixedVariables
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: FixedVariables
  nameWithType: BasePathOperator.FixedVariables
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.FixedVariables
- uid: VDS.RDF.Query.Algebra.BasePathOperator.FloatingVariables
  commentId: P:VDS.RDF.Query.Algebra.BasePathOperator.FloatingVariables
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: FloatingVariables
  nameWithType: BasePathOperator.FloatingVariables
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.FloatingVariables
- uid: VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
  commentId: M:VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: ToQuery()
  nameWithType: BasePathOperator.ToQuery()
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToQuery()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
    name: ToQuery
    nameWithType: BasePathOperator.ToQuery
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
    name: ToQuery
    nameWithType: BasePathOperator.ToQuery
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
  commentId: M:VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: ToGraphPattern()
  nameWithType: BasePathOperator.ToGraphPattern()
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
    name: ToGraphPattern
    nameWithType: BasePathOperator.ToGraphPattern
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
    name: ToGraphPattern
    nameWithType: BasePathOperator.ToGraphPattern
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.BasePathOperator.ToString
  commentId: M:VDS.RDF.Query.Algebra.BasePathOperator.ToString
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: ToString()
  nameWithType: BasePathOperator.ToString()
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToString()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.ToString
    name: ToString
    nameWithType: BasePathOperator.ToString
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.ToString
    name: ToString
    nameWithType: BasePathOperator.ToString
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseArbitraryLengthPathOperator>()
  nameWithType: Extensions.AsEnumerable<BaseArbitraryLengthPathOperator>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseArbitraryLengthPathOperator)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator)()
  name.vb: AsEnumerable(Of BaseArbitraryLengthPathOperator)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseArbitraryLengthPathOperator>
    nameWithType: Extensions.AsEnumerable<BaseArbitraryLengthPathOperator>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseArbitraryLengthPathOperator)
    nameWithType: Extensions.AsEnumerable(Of BaseArbitraryLengthPathOperator)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.#ctor*
  commentId: Overload:VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.#ctor
  name: BaseArbitraryLengthPathOperator
  nameWithType: BaseArbitraryLengthPathOperator.BaseArbitraryLengthPathOperator
  fullName: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.BaseArbitraryLengthPathOperator
- uid: VDS.RDF.Query.Patterns.PatternItem
  commentId: T:VDS.RDF.Query.Patterns.PatternItem
  parent: VDS.RDF.Query.Patterns
  name: PatternItem
  nameWithType: PatternItem
  fullName: VDS.RDF.Query.Patterns.PatternItem
- uid: VDS.RDF.Query.Paths.ISparqlPath
  commentId: T:VDS.RDF.Query.Paths.ISparqlPath
  parent: VDS.RDF.Query.Paths
  name: ISparqlPath
  nameWithType: ISparqlPath
  fullName: VDS.RDF.Query.Paths.ISparqlPath
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: VDS.RDF.Query.Paths
  commentId: N:VDS.RDF.Query.Paths
  name: VDS.RDF.Query.Paths
  nameWithType: VDS.RDF.Query.Paths
  fullName: VDS.RDF.Query.Paths
- uid: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.GetPathStarts*
  commentId: Overload:VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.GetPathStarts
  name: GetPathStarts
  nameWithType: BaseArbitraryLengthPathOperator.GetPathStarts
  fullName: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.GetPathStarts
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: System.Collections.Generic.List{System.Collections.Generic.List{VDS.RDF.INode}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{VDS.RDF.INode}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<List<INode>>
  nameWithType: List<List<INode>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.List<VDS.RDF.INode>>
  nameWithType.vb: List(Of List(Of INode))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.List(Of VDS.RDF.INode))
  name.vb: List(Of List(Of INode))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.EvaluateStep*
  commentId: Overload:VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.EvaluateStep
  name: EvaluateStep
  nameWithType: BaseArbitraryLengthPathOperator.EvaluateStep
  fullName: VDS.RDF.Query.Algebra.BaseArbitraryLengthPathOperator.EvaluateStep
- uid: System.Collections.Generic.List{VDS.RDF.INode}
  commentId: T:System.Collections.Generic.List{VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<INode>
  nameWithType: List<INode>
  fullName: System.Collections.Generic.List<VDS.RDF.INode>
  nameWithType.vb: List(Of INode)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.INode)
  name.vb: List(Of INode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
