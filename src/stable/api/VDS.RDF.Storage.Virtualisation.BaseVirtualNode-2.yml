### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  commentId: T:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  id: BaseVirtualNode`2
  parent: VDS.RDF.Storage.Virtualisation
  children:
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.#ctor(VDS.RDF.IGraph,VDS.RDF.NodeType,`0,VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{`0,`1})
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.#ctor(VDS.RDF.IGraph,VDS.RDF.NodeType,`0,VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{`0,`1},VDS.RDF.INode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2._value
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.IBlankNode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.IGraphLiteralNode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.ILiteralNode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.INode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.IUriNode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.IVariableNode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{`0,`1})
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1})
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareVirtualId(`0)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CopyNode(VDS.RDF.IGraph)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(System.Object)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.IBlankNode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.IGraphLiteralNode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.ILiteralNode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.INode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.IUriNode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.IVariableNode)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{`0,`1})
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1})
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetHashCode
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetSchema
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Graph
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GraphUri
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.IsMaterialised
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.MaterialisedValue
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.MaterialiseValue
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.NodeType
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.OnMaterialise
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Provider
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ReadXml(System.Xml.XmlReader)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.TryCompareVirtualId(VDS.RDF.INode,System.Int32@)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.TryVirtualEquality(VDS.RDF.INode,System.Boolean@)
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.VirtualID
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: BaseVirtualNode<TNodeID, TGraphID>
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseVirtualNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nAbstract Base implementation of a Virtual Node which is a Node that is represented only by some ID until such time as its value actually needs materialising.\n"
  remarks: "\n<p>\nAs far as possible equality checks are carried out using these IDs and limited comparisons may also be done this way.  More specific implementations may wish to derive from this class in order to override the default comparison implementation to further reduce the number of places where value materialisation is done.\n</p>\n<p>\nNote that this class does not implement any of the specialised Node interfaces and instead relies on the casting of its materialised value to an appropriately typed node to provide the true values to code that needs it.\n</p>\n"
  example: []
  syntax:
    content: 'public abstract class BaseVirtualNode<TNodeID, TGraphID> : IVirtualNode<TNodeID, TGraphID>, INode, IComparable<INode>, IComparable<IBlankNode>, IComparable<IGraphLiteralNode>, IComparable<ILiteralNode>, IComparable<IUriNode>, IComparable<IVariableNode>, IEquatable<INode>, IEquatable<IBlankNode>, IEquatable<IGraphLiteralNode>, IEquatable<ILiteralNode>, IEquatable<IUriNode>, IEquatable<IVariableNode>, ISerializable, IXmlSerializable, IEquatable<IVirtualNode<TNodeID, TGraphID>>, IComparable<IVirtualNode<TNodeID, TGraphID>>, IVirtualIdComparable, IEquatable<BaseVirtualNode<TNodeID, TGraphID>>, IComparable<BaseVirtualNode<TNodeID, TGraphID>>, ICanCopy'
    typeParameters:
    - id: TNodeID
      description: Node ID Type.
    - id: TGraphID
      description: Graph ID Type.
    content.vb: >-
      Public MustInherit Class BaseVirtualNode(Of TNodeID, TGraphID)
          Implements IVirtualNode(Of TNodeID, TGraphID), INode, IComparable(Of INode), IComparable(Of IBlankNode), IComparable(Of IGraphLiteralNode), IComparable(Of ILiteralNode), IComparable(Of IUriNode), IComparable(Of IVariableNode), IEquatable(Of INode), IEquatable(Of IBlankNode), IEquatable(Of IGraphLiteralNode), IEquatable(Of ILiteralNode), IEquatable(Of IUriNode), IEquatable(Of IVariableNode), ISerializable, IXmlSerializable, IEquatable(Of IVirtualNode(Of TNodeID, TGraphID)), IComparable(Of IVirtualNode(Of TNodeID, TGraphID)), IVirtualIdComparable, IEquatable(Of BaseVirtualNode(Of TNodeID, TGraphID)), IComparable(Of BaseVirtualNode(Of TNodeID, TGraphID)), ICanCopy
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Storage.Virtualisation.BaseVirtualBlankNode`2
  - VDS.RDF.Storage.Virtualisation.BaseVirtualGraphLiteralNode`2
  - VDS.RDF.Storage.Virtualisation.BaseVirtualLiteralNode`2
  - VDS.RDF.Storage.Virtualisation.BaseVirtualUriNode`2
  - VDS.RDF.Storage.Virtualisation.BaseVirtualVariableNode`2
  implements:
  - VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}
  - VDS.RDF.INode
  - System.IComparable{VDS.RDF.INode}
  - System.IComparable{VDS.RDF.IBlankNode}
  - System.IComparable{VDS.RDF.IGraphLiteralNode}
  - System.IComparable{VDS.RDF.ILiteralNode}
  - System.IComparable{VDS.RDF.IUriNode}
  - System.IComparable{VDS.RDF.IVariableNode}
  - System.IEquatable{VDS.RDF.INode}
  - System.IEquatable{VDS.RDF.IBlankNode}
  - System.IEquatable{VDS.RDF.IGraphLiteralNode}
  - System.IEquatable{VDS.RDF.ILiteralNode}
  - System.IEquatable{VDS.RDF.IUriNode}
  - System.IEquatable{VDS.RDF.IVariableNode}
  - System.Runtime.Serialization.ISerializable
  - System.Xml.Serialization.IXmlSerializable
  - System.IEquatable{VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}}
  - System.IComparable{VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}}
  - VDS.RDF.Storage.Virtualisation.IVirtualIdComparable
  - System.IEquatable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}
  - System.IComparable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}
  - VDS.RDF.Storage.Virtualisation.ICanCopy
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.VDS.RDF.Extensions.AsEnumerable``1
  - VDS.RDF.INode.VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  - VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  - VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.INode.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  - VDS.RDF.INode.VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID)
  name.vb: BaseVirtualNode(Of TNodeID, TGraphID)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2._value
  commentId: F:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2._value
  id: _value
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: _value
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>._value
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>._value
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _value
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nThe materialised value of the Virtual Node.\n"
  example: []
  syntax:
    content: protected INode _value
    return:
      type: VDS.RDF.INode
    content.vb: Protected _value As INode
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID)._value
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID)._value
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.#ctor(VDS.RDF.IGraph,VDS.RDF.NodeType,`0,VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{`0,`1})
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.#ctor(VDS.RDF.IGraph,VDS.RDF.NodeType,`0,VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{`0,`1})
  id: '#ctor(VDS.RDF.IGraph,VDS.RDF.NodeType,`0,VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{`0,`1})'
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: BaseVirtualNode(IGraph, NodeType, TNodeID, IVirtualRdfProvider<TNodeID, TGraphID>)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.BaseVirtualNode(IGraph, NodeType, TNodeID, IVirtualRdfProvider<TNodeID, TGraphID>)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.BaseVirtualNode(VDS.RDF.IGraph, VDS.RDF.NodeType, TNodeID, VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 72
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCreates a new Base Virtual Node.\n"
  example: []
  syntax:
    content: public BaseVirtualNode(IGraph g, NodeType type, TNodeID id, IVirtualRdfProvider<TNodeID, TGraphID> provider)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph the Node belongs to.
    - id: type
      type: VDS.RDF.NodeType
      description: Type of the node.
    - id: id
      type: '{TNodeID}'
      description: Virtual ID.
    - id: provider
      type: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{{TNodeID},{TGraphID}}
      description: Virtual RDF Provider.
    content.vb: Public Sub New(g As IGraph, type As NodeType, id As TNodeID, provider As IVirtualRdfProvider(Of TNodeID, TGraphID))
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.#ctor*
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).BaseVirtualNode(IGraph, NodeType, TNodeID, IVirtualRdfProvider(Of TNodeID, TGraphID))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).BaseVirtualNode(VDS.RDF.IGraph, VDS.RDF.NodeType, TNodeID, VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID))
  name.vb: BaseVirtualNode(IGraph, NodeType, TNodeID, IVirtualRdfProvider(Of TNodeID, TGraphID))
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.#ctor(VDS.RDF.IGraph,VDS.RDF.NodeType,`0,VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{`0,`1},VDS.RDF.INode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.#ctor(VDS.RDF.IGraph,VDS.RDF.NodeType,`0,VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{`0,`1},VDS.RDF.INode)
  id: '#ctor(VDS.RDF.IGraph,VDS.RDF.NodeType,`0,VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{`0,`1},VDS.RDF.INode)'
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: BaseVirtualNode(IGraph, NodeType, TNodeID, IVirtualRdfProvider<TNodeID, TGraphID>, INode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.BaseVirtualNode(IGraph, NodeType, TNodeID, IVirtualRdfProvider<TNodeID, TGraphID>, INode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.BaseVirtualNode(VDS.RDF.IGraph, VDS.RDF.NodeType, TNodeID, VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>, VDS.RDF.INode)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 89
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCreates a new Base Virtual Node.\n"
  example: []
  syntax:
    content: public BaseVirtualNode(IGraph g, NodeType type, TNodeID id, IVirtualRdfProvider<TNodeID, TGraphID> provider, INode value)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph the Node belongs to.
    - id: type
      type: VDS.RDF.NodeType
      description: Type of the node.
    - id: id
      type: '{TNodeID}'
      description: Virtual ID.
    - id: provider
      type: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{{TNodeID},{TGraphID}}
      description: Virtual RDF Provider.
    - id: value
      type: VDS.RDF.INode
      description: Materialised Value.
    content.vb: Public Sub New(g As IGraph, type As NodeType, id As TNodeID, provider As IVirtualRdfProvider(Of TNodeID, TGraphID), value As INode)
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.#ctor*
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).BaseVirtualNode(IGraph, NodeType, TNodeID, IVirtualRdfProvider(Of TNodeID, TGraphID), INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).BaseVirtualNode(VDS.RDF.IGraph, VDS.RDF.NodeType, TNodeID, VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID), VDS.RDF.INode)
  name.vb: BaseVirtualNode(IGraph, NodeType, TNodeID, IVirtualRdfProvider(Of TNodeID, TGraphID), INode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.MaterialiseValue
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.MaterialiseValue
  id: MaterialiseValue
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: MaterialiseValue()
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.MaterialiseValue()
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.MaterialiseValue()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MaterialiseValue
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nMaterialises the Value if it is not already materialised.\n"
  example: []
  syntax:
    content: protected void MaterialiseValue()
    content.vb: Protected Sub MaterialiseValue
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.MaterialiseValue*
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).MaterialiseValue()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).MaterialiseValue()
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.OnMaterialise
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.OnMaterialise
  id: OnMaterialise
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: OnMaterialise()
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.OnMaterialise()
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.OnMaterialise()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnMaterialise
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 114
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCalled after the value is materialised for the first time.\n"
  example: []
  syntax:
    content: protected virtual void OnMaterialise()
    content.vb: Protected Overridable Sub OnMaterialise
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.OnMaterialise*
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).OnMaterialise()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).OnMaterialise()
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.VirtualID
  commentId: P:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.VirtualID
  id: VirtualID
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: VirtualID
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.VirtualID
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.VirtualID
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: VirtualID
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 124
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the Virtual ID of the Node.\n"
  example: []
  syntax:
    content: public TNodeID VirtualID { get; }
    parameters: []
    return:
      type: '{TNodeID}'
    content.vb: Public ReadOnly Property VirtualID As TNodeID
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.VirtualID*
  implements:
  - VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}.VirtualID
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).VirtualID
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).VirtualID
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Provider
  commentId: P:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Provider
  id: Provider
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Provider
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Provider
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Provider
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 135
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the Virtual RDF Provider of the Node.\n"
  example: []
  syntax:
    content: public IVirtualRdfProvider<TNodeID, TGraphID> Provider { get; }
    parameters: []
    return:
      type: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{{TNodeID},{TGraphID}}
    content.vb: Public ReadOnly Property Provider As IVirtualRdfProvider(Of TNodeID, TGraphID)
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Provider*
  implements:
  - VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}.Provider
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Provider
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Provider
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.IsMaterialised
  commentId: P:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.IsMaterialised
  id: IsMaterialised
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: IsMaterialised
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.IsMaterialised
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.IsMaterialised
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsMaterialised
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 146
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets whether the Nodes value has been materialised.\n"
  example: []
  syntax:
    content: public bool IsMaterialised { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMaterialised As Boolean
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.IsMaterialised*
  implements:
  - VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}.IsMaterialised
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).IsMaterialised
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).IsMaterialised
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.MaterialisedValue
  commentId: P:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.MaterialisedValue
  id: MaterialisedValue
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: MaterialisedValue
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.MaterialisedValue
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.MaterialisedValue
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MaterialisedValue
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 157
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the materialised value of the Node forcing it to be materialised if it hasn&apos;t already.\n"
  example: []
  syntax:
    content: public INode MaterialisedValue { get; }
    parameters: []
    return:
      type: VDS.RDF.INode
    content.vb: Public ReadOnly Property MaterialisedValue As INode
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.MaterialisedValue*
  implements:
  - VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}.MaterialisedValue
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).MaterialisedValue
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).MaterialisedValue
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.NodeType
  commentId: P:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.NodeType
  id: NodeType
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: NodeType
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.NodeType
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.NodeType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NodeType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 173
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the Type of the Node.\n"
  example: []
  syntax:
    content: public NodeType NodeType { get; }
    parameters: []
    return:
      type: VDS.RDF.NodeType
    content.vb: Public ReadOnly Property NodeType As NodeType
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.NodeType*
  implements:
  - VDS.RDF.INode.NodeType
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).NodeType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).NodeType
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Graph
  commentId: P:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Graph
  id: Graph
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: Graph
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Graph
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Graph
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Graph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 184
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the Graph the Node belongs to.\n"
  example: []
  syntax:
    content: public IGraph Graph { get; }
    parameters: []
    return:
      type: VDS.RDF.IGraph
    content.vb: Public ReadOnly Property Graph As IGraph
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Graph*
  implements:
  - VDS.RDF.INode.Graph
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Graph
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Graph
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GraphUri
  commentId: P:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GraphUri
  id: GraphUri
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: GraphUri
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.GraphUri
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.GraphUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GraphUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 195
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets/Sets the Graph URI of the Node.\n"
  example: []
  syntax:
    content: public Uri GraphUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property GraphUri As Uri
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GraphUri*
  implements:
  - VDS.RDF.INode.GraphUri
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).GraphUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).GraphUri
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  id: ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: ToString(INodeFormatter)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.ToString(INodeFormatter)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 212
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the String representation of the Node formatted with the given Node formatter.\n"
  example: []
  syntax:
    content: public string ToString(INodeFormatter formatter)
    parameters:
    - id: formatter
      type: VDS.RDF.Writing.Formatting.INodeFormatter
      description: Formatter.
    return:
      type: System.String
      description: ''
    content.vb: Public Function ToString(formatter As INodeFormatter) As String
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString*
  implements:
  - VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).ToString(INodeFormatter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  id: ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: ToString(INodeFormatter, TripleSegment)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.ToString(INodeFormatter, TripleSegment)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.ToString(VDS.RDF.Writing.Formatting.INodeFormatter, VDS.RDF.Writing.TripleSegment)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 223
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the String representation of the Node formatted with the given Node formatter.\n"
  example: []
  syntax:
    content: public string ToString(INodeFormatter formatter, TripleSegment segment)
    parameters:
    - id: formatter
      type: VDS.RDF.Writing.Formatting.INodeFormatter
      description: Formatter.
    - id: segment
      type: VDS.RDF.Writing.TripleSegment
      description: Triple Segment.
    return:
      type: System.String
      description: ''
    content.vb: Public Function ToString(formatter As INodeFormatter, segment As TripleSegment) As String
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString*
  implements:
  - VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).ToString(INodeFormatter, TripleSegment)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).ToString(VDS.RDF.Writing.Formatting.INodeFormatter, VDS.RDF.Writing.TripleSegment)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1})
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1})
  id: CompareTo(VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1})
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: CompareTo(IVirtualNode<TNodeID, TGraphID>)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CompareTo(IVirtualNode<TNodeID, TGraphID>)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CompareTo(VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 240
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCompares this Node to another Virtual Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform comparison.\n"
  example: []
  syntax:
    content: public int CompareTo(IVirtualNode<TNodeID, TGraphID> other)
    parameters:
    - id: other
      type: VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}
      description: Other Virtual Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function CompareTo(other As IVirtualNode(Of TNodeID, TGraphID)) As Integer
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}}.CompareTo(VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}})
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(IVirtualNode(Of TNodeID, TGraphID))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID))
  name.vb: CompareTo(IVirtualNode(Of TNodeID, TGraphID))
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{`0,`1})
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{`0,`1})
  id: CompareTo(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{`0,`1})
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: CompareTo(BaseVirtualNode<TNodeID, TGraphID>)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CompareTo(BaseVirtualNode<TNodeID, TGraphID>)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CompareTo(VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 264
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCompares this Node to another Virtual Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform comparison.\n"
  example: []
  syntax:
    content: public int CompareTo(BaseVirtualNode<TNodeID, TGraphID> other)
    parameters:
    - id: other
      type: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
      description: Other Virtual Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function CompareTo(other As BaseVirtualNode(Of TNodeID, TGraphID)) As Integer
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}.CompareTo(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{{TNodeID},{TGraphID}})
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(BaseVirtualNode(Of TNodeID, TGraphID))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID))
  name.vb: CompareTo(BaseVirtualNode(Of TNodeID, TGraphID))
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.INode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.INode)
  id: CompareTo(VDS.RDF.INode)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: CompareTo(INode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CompareTo(INode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CompareTo(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 277
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCompares this Node to another Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform comparison.\n"
  example: []
  syntax:
    content: public int CompareTo(INode other)
    parameters:
    - id: other
      type: VDS.RDF.INode
      description: Other Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function CompareTo(other As INode) As Integer
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.INode}.CompareTo(VDS.RDF.INode)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(VDS.RDF.INode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.IBlankNode)
  id: CompareTo(VDS.RDF.IBlankNode)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: CompareTo(IBlankNode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CompareTo(IBlankNode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CompareTo(VDS.RDF.IBlankNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 375
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCompares this Node to another Blank Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform comparison.\n"
  example: []
  syntax:
    content: public virtual int CompareTo(IBlankNode other)
    parameters:
    - id: other
      type: VDS.RDF.IBlankNode
      description: Other Blank Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overridable Function CompareTo(other As IBlankNode) As Integer
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IBlankNode}.CompareTo(VDS.RDF.IBlankNode)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(IBlankNode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(VDS.RDF.IBlankNode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.IGraphLiteralNode)
  id: CompareTo(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: CompareTo(IGraphLiteralNode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CompareTo(IGraphLiteralNode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CompareTo(VDS.RDF.IGraphLiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 388
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCompares this Node to another Graph LiteralNode.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform comparison.\n"
  example: []
  syntax:
    content: public virtual int CompareTo(IGraphLiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.IGraphLiteralNode
      description: Other Graph Literal Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overridable Function CompareTo(other As IGraphLiteralNode) As Integer
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IGraphLiteralNode}.CompareTo(VDS.RDF.IGraphLiteralNode)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(IGraphLiteralNode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(VDS.RDF.IGraphLiteralNode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.ILiteralNode)
  id: CompareTo(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: CompareTo(ILiteralNode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CompareTo(ILiteralNode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CompareTo(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 401
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCompares this Node to another Literal Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform comparison.\n"
  example: []
  syntax:
    content: public virtual int CompareTo(ILiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.ILiteralNode
      description: Other Literal Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overridable Function CompareTo(other As ILiteralNode) As Integer
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.ILiteralNode}.CompareTo(VDS.RDF.ILiteralNode)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(ILiteralNode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(VDS.RDF.ILiteralNode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.IUriNode)
  id: CompareTo(VDS.RDF.IUriNode)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: CompareTo(IUriNode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CompareTo(IUriNode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CompareTo(VDS.RDF.IUriNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 414
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCompares this Node to another URI Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform comparison.\n"
  example: []
  syntax:
    content: public virtual int CompareTo(IUriNode other)
    parameters:
    - id: other
      type: VDS.RDF.IUriNode
      description: Other URI Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overridable Function CompareTo(other As IUriNode) As Integer
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IUriNode}.CompareTo(VDS.RDF.IUriNode)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(IUriNode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(VDS.RDF.IUriNode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo(VDS.RDF.IVariableNode)
  id: CompareTo(VDS.RDF.IVariableNode)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: CompareTo(IVariableNode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CompareTo(IVariableNode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CompareTo(VDS.RDF.IVariableNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 427
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCompares this Node to another Variable Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform comparison.\n"
  example: []
  syntax:
    content: public virtual int CompareTo(IVariableNode other)
    parameters:
    - id: other
      type: VDS.RDF.IVariableNode
      description: Other Variable Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overridable Function CompareTo(other As IVariableNode) As Integer
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IVariableNode}.CompareTo(VDS.RDF.IVariableNode)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(IVariableNode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CompareTo(VDS.RDF.IVariableNode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(System.Object)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(System.Object)
  id: Equals(System.Object)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Equals(Object)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 444
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nChecks this Node for equality against another Object.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform the equality check.\n"
  example: []
  syntax:
    content: public override sealed bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Other Object.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public NotOverridable Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals*
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Equals(Object)
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Equals(System.Object)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1})
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1})
  id: Equals(VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1})
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: Equals(IVirtualNode<TNodeID, TGraphID>)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Equals(IVirtualNode<TNodeID, TGraphID>)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Equals(VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 467
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nChecks this Node for equality against another Virtual Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform the equality check.\n"
  example: []
  syntax:
    content: public bool Equals(IVirtualNode<TNodeID, TGraphID> other)
    parameters:
    - id: other
      type: VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}
      description: Other Virtual Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Equals(other As IVirtualNode(Of TNodeID, TGraphID)) As Boolean
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals*
  implements:
  - System.IEquatable{VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}}.Equals(VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}})
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Equals(IVirtualNode(Of TNodeID, TGraphID))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Equals(VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID))
  name.vb: Equals(IVirtualNode(Of TNodeID, TGraphID))
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{`0,`1})
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{`0,`1})
  id: Equals(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{`0,`1})
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: Equals(BaseVirtualNode<TNodeID, TGraphID>)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Equals(BaseVirtualNode<TNodeID, TGraphID>)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Equals(VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 483
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nChecks this Node for equality against another Virtual Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform the equality check.\n"
  example: []
  syntax:
    content: public bool Equals(BaseVirtualNode<TNodeID, TGraphID> other)
    parameters:
    - id: other
      type: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
      description: Other Virtual Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Equals(other As BaseVirtualNode(Of TNodeID, TGraphID)) As Boolean
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals*
  implements:
  - System.IEquatable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}.Equals(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{{TNodeID},{TGraphID}})
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Equals(BaseVirtualNode(Of TNodeID, TGraphID))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Equals(VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID))
  name.vb: Equals(BaseVirtualNode(Of TNodeID, TGraphID))
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.INode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.INode)
  id: Equals(VDS.RDF.INode)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: Equals(INode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Equals(INode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Equals(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 496
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nChecks this Node for equality against another Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform the equality check.\n"
  example: []
  syntax:
    content: public bool Equals(INode other)
    parameters:
    - id: other
      type: VDS.RDF.INode
      description: Other Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Equals(other As INode) As Boolean
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals*
  implements:
  - System.IEquatable{VDS.RDF.INode}.Equals(VDS.RDF.INode)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Equals(INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Equals(VDS.RDF.INode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.TryVirtualEquality(VDS.RDF.INode,System.Boolean@)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.TryVirtualEquality(VDS.RDF.INode,System.Boolean@)
  id: TryVirtualEquality(VDS.RDF.INode,System.Boolean@)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: TryVirtualEquality(INode, out Boolean)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.TryVirtualEquality(INode, out Boolean)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.TryVirtualEquality(VDS.RDF.INode, out System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryVirtualEquality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 549
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nTries to check for equality using virtual node IDs.\n"
  example: []
  syntax:
    content: protected bool TryVirtualEquality(INode other, out bool areEqual)
    parameters:
    - id: other
      type: VDS.RDF.INode
      description: Node to test against.
    - id: areEqual
      type: System.Boolean
      description: Whether the virtual nodes are equal.
    return:
      type: System.Boolean
      description: "\nWhether the virtual equality test was valid, if false then other means must be used to determine equality.\n"
    content.vb: Protected Function TryVirtualEquality(other As INode, ByRef areEqual As Boolean) As Boolean
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.TryVirtualEquality*
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).TryVirtualEquality(INode, ByRef Boolean)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).TryVirtualEquality(VDS.RDF.INode, ByRef System.Boolean)
  name.vb: TryVirtualEquality(INode, ByRef Boolean)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.IBlankNode)
  id: Equals(VDS.RDF.IBlankNode)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: Equals(IBlankNode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Equals(IBlankNode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Equals(VDS.RDF.IBlankNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 579
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nChecks this Node for equality against another Blank Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform the equality check.\n"
  example: []
  syntax:
    content: public virtual bool Equals(IBlankNode other)
    parameters:
    - id: other
      type: VDS.RDF.IBlankNode
      description: Other Blank Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function Equals(other As IBlankNode) As Boolean
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IBlankNode}.Equals(VDS.RDF.IBlankNode)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Equals(IBlankNode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Equals(VDS.RDF.IBlankNode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.IGraphLiteralNode)
  id: Equals(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: Equals(IGraphLiteralNode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Equals(IGraphLiteralNode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Equals(VDS.RDF.IGraphLiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 592
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nChecks this Node for equality against another Graph Literal Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform the equality check.\n"
  example: []
  syntax:
    content: public virtual bool Equals(IGraphLiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.IGraphLiteralNode
      description: Other Graph Literal Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function Equals(other As IGraphLiteralNode) As Boolean
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IGraphLiteralNode}.Equals(VDS.RDF.IGraphLiteralNode)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Equals(IGraphLiteralNode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Equals(VDS.RDF.IGraphLiteralNode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.ILiteralNode)
  id: Equals(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: Equals(ILiteralNode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Equals(ILiteralNode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Equals(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 605
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nChecks this Node for equality against another Literal Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform the equality check.\n"
  example: []
  syntax:
    content: public virtual bool Equals(ILiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.ILiteralNode
      description: Other Literal Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function Equals(other As ILiteralNode) As Boolean
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals*
  implements:
  - System.IEquatable{VDS.RDF.ILiteralNode}.Equals(VDS.RDF.ILiteralNode)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Equals(ILiteralNode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Equals(VDS.RDF.ILiteralNode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.IUriNode)
  id: Equals(VDS.RDF.IUriNode)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: Equals(IUriNode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Equals(IUriNode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Equals(VDS.RDF.IUriNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 618
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nChecks this Node for equality against another URI Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform the equality check.\n"
  example: []
  syntax:
    content: public virtual bool Equals(IUriNode other)
    parameters:
    - id: other
      type: VDS.RDF.IUriNode
      description: Other URI Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function Equals(other As IUriNode) As Boolean
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IUriNode}.Equals(VDS.RDF.IUriNode)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Equals(IUriNode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Equals(VDS.RDF.IUriNode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals(VDS.RDF.IVariableNode)
  id: Equals(VDS.RDF.IVariableNode)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: Equals(IVariableNode)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Equals(IVariableNode)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Equals(VDS.RDF.IVariableNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 631
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nChecks this Node for equality against another Variable Node.\n"
  remarks: "\nUnless Virtual Equality (equality based on the Virtual RDF Provider and Virtual ID) can be determined or the Nodes are of different types then the Nodes value will have to be materialised in order to perform the equality check.\n"
  example: []
  syntax:
    content: public virtual bool Equals(IVariableNode other)
    parameters:
    - id: other
      type: VDS.RDF.IVariableNode
      description: Other Variable Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function Equals(other As IVariableNode) As Boolean
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IVariableNode}.Equals(VDS.RDF.IVariableNode)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Equals(IVariableNode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Equals(VDS.RDF.IVariableNode)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CopyNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CopyNode(VDS.RDF.IGraph)
  id: CopyNode(VDS.RDF.IGraph)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: CopyNode(IGraph)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CopyNode(IGraph)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CopyNode(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CopyNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 644
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCopies the Virtual Node into another Graph.\n"
  example: []
  syntax:
    content: public abstract INode CopyNode(IGraph target)
    parameters:
    - id: target
      type: VDS.RDF.IGraph
      description: Target Graph.
    return:
      type: VDS.RDF.INode
      description: ''
    content.vb: Public MustOverride Function CopyNode(target As IGraph) As INode
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CopyNode*
  implements:
  - VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode(VDS.RDF.IGraph)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CopyNode(IGraph)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CopyNode(VDS.RDF.IGraph)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetHashCode
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetHashCode
  id: GetHashCode
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.GetHashCode()
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.GetHashCode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetHashCode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 651
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the Hash Code of the Virtual Node.\n"
  example: []
  syntax:
    content: public override sealed int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public NotOverridable Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetHashCode*
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).GetHashCode()
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).GetHashCode()
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareVirtualId(`0)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareVirtualId(`0)
  id: CompareVirtualId(`0)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: CompareVirtualId(TNodeID)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CompareVirtualId(TNodeID)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CompareVirtualId(TNodeID)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareVirtualId
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 661
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nMethod to be implemented in derived classes to provide comparison of VirtualId values.\n"
  example: []
  syntax:
    content: public abstract int CompareVirtualId(TNodeID other)
    parameters:
    - id: other
      type: '{TNodeID}'
      description: The other virtual ID value to be compared with this node&apos;s virtual ID value.
    return:
      type: System.Int32
      description: The comparison result.
    content.vb: Public MustOverride Function CompareVirtualId(other As TNodeID) As Integer
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareVirtualId*
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CompareVirtualId(TNodeID)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CompareVirtualId(TNodeID)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.TryCompareVirtualId(VDS.RDF.INode,System.Int32@)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.TryCompareVirtualId(VDS.RDF.INode,System.Int32@)
  id: TryCompareVirtualId(VDS.RDF.INode,System.Int32@)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: TryCompareVirtualId(INode, out Int32)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.TryCompareVirtualId(INode, out Int32)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.TryCompareVirtualId(VDS.RDF.INode, out System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryCompareVirtualId
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 672
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nAttempt to compare this node with another node.\n"
  remarks: "This node can only be compared to <code data-dev-comment-type=\"paramref\" class=\"paramref\">other</code> if <code data-dev-comment-type=\"paramref\" class=\"paramref\">other</code>\nis a <xref href=\"VDS.RDF.Storage.Virtualisation.IVirtualNode%602\" data-throw-if-not-resolved=\"false\"></xref> from the same \n<xref href=\"VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider%602\" data-throw-if-not-resolved=\"false\"></xref> as this node."
  example: []
  syntax:
    content: public bool TryCompareVirtualId(INode other, out int comparisonResult)
    parameters:
    - id: other
      type: VDS.RDF.INode
      description: The node to compare to.
    - id: comparisonResult
      type: System.Int32
      description: The comparison result.
    return:
      type: System.Boolean
      description: True if the comparison could be performed, false otherwise.
    content.vb: Public Function TryCompareVirtualId(other As INode, ByRef comparisonResult As Integer) As Boolean
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.TryCompareVirtualId*
  implements:
  - VDS.RDF.Storage.Virtualisation.IVirtualIdComparable.TryCompareVirtualId(VDS.RDF.INode,System.Int32@)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).TryCompareVirtualId(INode, ByRef Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).TryCompareVirtualId(VDS.RDF.INode, ByRef System.Int32)
  name.vb: TryCompareVirtualId(INode, ByRef Int32)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString
  id: ToString
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.ToString()
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 698
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the String representation of the Node.\n"
  example: []
  syntax:
    content: public override sealed string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public NotOverridable Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString*
  implements:
  - VDS.RDF.INode.ToString
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).ToString()
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).ToString()
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetObjectData
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 711
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the data for serialization.\n"
  example: []
  syntax:
    content: public virtual void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Public Overridable Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetObjectData*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Thrown because serializing a Virtual Node would be lossy.
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).GetObjectData(SerializationInfo, StreamingContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetSchema
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetSchema
  id: GetSchema
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.GetSchema()
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.GetSchema()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSchema
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 720
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the schema for XML serialization.\n"
  example: []
  syntax:
    content: public XmlSchema GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
      description: ''
    content.vb: Public Function GetSchema As XmlSchema
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).GetSchema()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).GetSchema()
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.ReadXml(XmlReader)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ReadXml
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 730
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nReads the data for XML deserialization.\n"
  example: []
  syntax:
    content: public virtual void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: XML Reader.
    content.vb: Public Overridable Sub ReadXml(reader As XmlReader)
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ReadXml*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Thrown because serializing a Virtual Node would be lossy.
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).ReadXml(XmlReader)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).ReadXml(System.Xml.XmlReader)
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.WriteXml(XmlWriter)
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WriteXml
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Virtualisation/VirtualNode.cs
    startLine: 740
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nWrites the data for XML deserialization.\n"
  example: []
  syntax:
    content: public virtual void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: XML Writer.
    content.vb: Public Overridable Sub WriteXml(writer As XmlWriter)
  overload: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.WriteXml*
  exceptions:
  - type: System.NotImplementedException
    commentId: T:System.NotImplementedException
    description: Thrown because serializing a Virtual Node would be lossy.
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).WriteXml(XmlWriter)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).WriteXml(System.Xml.XmlWriter)
references:
- uid: VDS.RDF.Storage.Virtualisation
  commentId: N:VDS.RDF.Storage.Virtualisation
  name: VDS.RDF.Storage.Virtualisation
  nameWithType: VDS.RDF.Storage.Virtualisation
  fullName: VDS.RDF.Storage.Virtualisation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}
  commentId: T:VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1}
  parent: VDS.RDF.Storage.Virtualisation
  definition: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
  name: IVirtualNode<TNodeID, TGraphID>
  nameWithType: IVirtualNode<TNodeID, TGraphID>
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>
  nameWithType.vb: IVirtualNode(Of TNodeID, TGraphID)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID)
  name.vb: IVirtualNode(Of TNodeID, TGraphID)
  spec.csharp:
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
    name: IVirtualNode
    nameWithType: IVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
    name: IVirtualNode
    nameWithType: IVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: System.IComparable{VDS.RDF.INode}
  commentId: T:System.IComparable{VDS.RDF.INode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<INode>
  nameWithType: IComparable<INode>
  fullName: System.IComparable<VDS.RDF.INode>
  nameWithType.vb: IComparable(Of INode)
  fullName.vb: System.IComparable(Of VDS.RDF.INode)
  name.vb: IComparable(Of INode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IBlankNode}
  commentId: T:System.IComparable{VDS.RDF.IBlankNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IBlankNode>
  nameWithType: IComparable<IBlankNode>
  fullName: System.IComparable<VDS.RDF.IBlankNode>
  nameWithType.vb: IComparable(Of IBlankNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IBlankNode)
  name.vb: IComparable(Of IBlankNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IGraphLiteralNode}
  commentId: T:System.IComparable{VDS.RDF.IGraphLiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IGraphLiteralNode>
  nameWithType: IComparable<IGraphLiteralNode>
  fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>
  nameWithType.vb: IComparable(Of IGraphLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IGraphLiteralNode)
  name.vb: IComparable(Of IGraphLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.ILiteralNode}
  commentId: T:System.IComparable{VDS.RDF.ILiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ILiteralNode>
  nameWithType: IComparable<ILiteralNode>
  fullName: System.IComparable<VDS.RDF.ILiteralNode>
  nameWithType.vb: IComparable(Of ILiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.ILiteralNode)
  name.vb: IComparable(Of ILiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IUriNode}
  commentId: T:System.IComparable{VDS.RDF.IUriNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IUriNode>
  nameWithType: IComparable<IUriNode>
  fullName: System.IComparable<VDS.RDF.IUriNode>
  nameWithType.vb: IComparable(Of IUriNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IUriNode)
  name.vb: IComparable(Of IUriNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IVariableNode}
  commentId: T:System.IComparable{VDS.RDF.IVariableNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IVariableNode>
  nameWithType: IComparable<IVariableNode>
  fullName: System.IComparable<VDS.RDF.IVariableNode>
  nameWithType.vb: IComparable(Of IVariableNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IVariableNode)
  name.vb: IComparable(Of IVariableNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.INode}
  commentId: T:System.IEquatable{VDS.RDF.INode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<INode>
  nameWithType: IEquatable<INode>
  fullName: System.IEquatable<VDS.RDF.INode>
  nameWithType.vb: IEquatable(Of INode)
  fullName.vb: System.IEquatable(Of VDS.RDF.INode)
  name.vb: IEquatable(Of INode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IBlankNode}
  commentId: T:System.IEquatable{VDS.RDF.IBlankNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IBlankNode>
  nameWithType: IEquatable<IBlankNode>
  fullName: System.IEquatable<VDS.RDF.IBlankNode>
  nameWithType.vb: IEquatable(Of IBlankNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IBlankNode)
  name.vb: IEquatable(Of IBlankNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IGraphLiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.IGraphLiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IGraphLiteralNode>
  nameWithType: IEquatable<IGraphLiteralNode>
  fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>
  nameWithType.vb: IEquatable(Of IGraphLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IGraphLiteralNode)
  name.vb: IEquatable(Of IGraphLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.ILiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.ILiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ILiteralNode>
  nameWithType: IEquatable<ILiteralNode>
  fullName: System.IEquatable<VDS.RDF.ILiteralNode>
  nameWithType.vb: IEquatable(Of ILiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.ILiteralNode)
  name.vb: IEquatable(Of ILiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IUriNode}
  commentId: T:System.IEquatable{VDS.RDF.IUriNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IUriNode>
  nameWithType: IEquatable<IUriNode>
  fullName: System.IEquatable<VDS.RDF.IUriNode>
  nameWithType.vb: IEquatable(Of IUriNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IUriNode)
  name.vb: IEquatable(Of IUriNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IVariableNode}
  commentId: T:System.IEquatable{VDS.RDF.IVariableNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IVariableNode>
  nameWithType: IEquatable<IVariableNode>
  fullName: System.IEquatable<VDS.RDF.IVariableNode>
  nameWithType.vb: IEquatable(Of IVariableNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IVariableNode)
  name.vb: IEquatable(Of IVariableNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.IEquatable{VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}}
  commentId: T:System.IEquatable{VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1}}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IVirtualNode<TNodeID, TGraphID>>
  nameWithType: IEquatable<IVirtualNode<TNodeID, TGraphID>>
  fullName: System.IEquatable<VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>>
  nameWithType.vb: IEquatable(Of IVirtualNode(Of TNodeID, TGraphID))
  fullName.vb: System.IEquatable(Of VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID))
  name.vb: IEquatable(Of IVirtualNode(Of TNodeID, TGraphID))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
    name: IVirtualNode
    nameWithType: IVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
    name: IVirtualNode
    nameWithType: IVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}}
  commentId: T:System.IComparable{VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1}}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IVirtualNode<TNodeID, TGraphID>>
  nameWithType: IComparable<IVirtualNode<TNodeID, TGraphID>>
  fullName: System.IComparable<VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>>
  nameWithType.vb: IComparable(Of IVirtualNode(Of TNodeID, TGraphID))
  fullName.vb: System.IComparable(Of VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID))
  name.vb: IComparable(Of IVirtualNode(Of TNodeID, TGraphID))
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
    name: IVirtualNode
    nameWithType: IVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
    name: IVirtualNode
    nameWithType: IVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Virtualisation.IVirtualIdComparable
  commentId: T:VDS.RDF.Storage.Virtualisation.IVirtualIdComparable
  parent: VDS.RDF.Storage.Virtualisation
  name: IVirtualIdComparable
  nameWithType: IVirtualIdComparable
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualIdComparable
- uid: System.IEquatable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}
  commentId: T:System.IEquatable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<BaseVirtualNode<TNodeID, TGraphID>>
  nameWithType: IEquatable<BaseVirtualNode<TNodeID, TGraphID>>
  fullName: System.IEquatable<VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>>
  nameWithType.vb: IEquatable(Of BaseVirtualNode(Of TNodeID, TGraphID))
  fullName.vb: System.IEquatable(Of VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID))
  name.vb: IEquatable(Of BaseVirtualNode(Of TNodeID, TGraphID))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
    name: BaseVirtualNode
    nameWithType: BaseVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
    name: BaseVirtualNode
    nameWithType: BaseVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}
  commentId: T:System.IComparable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}
  parent: System
  definition: System.IComparable`1
  name: IComparable<BaseVirtualNode<TNodeID, TGraphID>>
  nameWithType: IComparable<BaseVirtualNode<TNodeID, TGraphID>>
  fullName: System.IComparable<VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>>
  nameWithType.vb: IComparable(Of BaseVirtualNode(Of TNodeID, TGraphID))
  fullName.vb: System.IComparable(Of VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID))
  name.vb: IComparable(Of BaseVirtualNode(Of TNodeID, TGraphID))
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
    name: BaseVirtualNode
    nameWithType: BaseVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
    name: BaseVirtualNode
    nameWithType: BaseVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Virtualisation.ICanCopy
  commentId: T:VDS.RDF.Storage.Virtualisation.ICanCopy
  parent: VDS.RDF.Storage.Virtualisation
  name: ICanCopy
  nameWithType: ICanCopy
  fullName: VDS.RDF.Storage.Virtualisation.ICanCopy
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseVirtualNode<TNodeID, TGraphID>>()
  nameWithType: Extensions.AsEnumerable<BaseVirtualNode<TNodeID, TGraphID>>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseVirtualNode(Of TNodeID, TGraphID))()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID))()
  name.vb: AsEnumerable(Of BaseVirtualNode(Of TNodeID, TGraphID))()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseVirtualNode<TNodeID, TGraphID>>
    nameWithType: Extensions.AsEnumerable<BaseVirtualNode<TNodeID, TGraphID>>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseVirtualNode(Of TNodeID, TGraphID))
    nameWithType: Extensions.AsEnumerable(Of BaseVirtualNode(Of TNodeID, TGraphID))
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  name: IsListRoot(IGraph)
  nameWithType: Extensions.IsListRoot(IGraph)
  fullName: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  name: CopyNode(IGraph)
  nameWithType: Extensions.CopyNode(IGraph)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  name: CopyNode(IGraph, Boolean)
  nameWithType: Extensions.CopyNode(IGraph, Boolean)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  parent: VDS.RDF.Dynamic.DynamicExtensions
  definition: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  name: AsDynamic(Uri)
  nameWithType: DynamicExtensions.AsDynamic(Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  parent: VDS.RDF.Nodes.ValuedNodeExtensions
  definition: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  name: AsValuedNode()
  nameWithType: ValuedNodeExtensions.AsValuedNode()
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode()
  spec.csharp:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
  commentId: T:VDS.RDF.Storage.Virtualisation.IVirtualNode`2
  name: IVirtualNode<TNodeID, TGraphID>
  nameWithType: IVirtualNode<TNodeID, TGraphID>
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>
  nameWithType.vb: IVirtualNode(Of TNodeID, TGraphID)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID)
  name.vb: IVirtualNode(Of TNodeID, TGraphID)
  spec.csharp:
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
    name: IVirtualNode
    nameWithType: IVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
    name: IVirtualNode
    nameWithType: IVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  name: IsListRoot(INode, IGraph)
  nameWithType: Extensions.IsListRoot(INode, IGraph)
  fullName: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode, VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  name: CopyNode(INode, IGraph)
  nameWithType: Extensions.CopyNode(INode, IGraph)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode, VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  isExternal: true
  name: CopyNode(INode, IGraph, Boolean)
  nameWithType: Extensions.CopyNode(INode, IGraph, Boolean)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode, VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  isExternal: true
  name: AsDynamic(INode, Uri)
  nameWithType: DynamicExtensions.AsDynamic(INode, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions
  commentId: T:VDS.RDF.Dynamic.DynamicExtensions
  parent: VDS.RDF.Dynamic
  name: DynamicExtensions
  nameWithType: DynamicExtensions
  fullName: VDS.RDF.Dynamic.DynamicExtensions
- uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  name: AsValuedNode(INode)
  nameWithType: ValuedNodeExtensions.AsValuedNode(INode)
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Nodes.ValuedNodeExtensions
  commentId: T:VDS.RDF.Nodes.ValuedNodeExtensions
  parent: VDS.RDF.Nodes
  name: ValuedNodeExtensions
  nameWithType: ValuedNodeExtensions
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions
- uid: VDS.RDF.Dynamic
  commentId: N:VDS.RDF.Dynamic
  name: VDS.RDF.Dynamic
  nameWithType: VDS.RDF.Dynamic
  fullName: VDS.RDF.Dynamic
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.#ctor*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.#ctor
  name: BaseVirtualNode
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.BaseVirtualNode
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.BaseVirtualNode
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).BaseVirtualNode
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).BaseVirtualNode
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.NodeType
  commentId: T:VDS.RDF.NodeType
  parent: VDS.RDF
  name: NodeType
  nameWithType: NodeType
  fullName: VDS.RDF.NodeType
- uid: '{TNodeID}'
  commentId: '!:TNodeID'
  definition: TNodeID
  name: TNodeID
  nameWithType: TNodeID
  fullName: TNodeID
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{{TNodeID},{TGraphID}}
  commentId: T:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider{`0,`1}
  parent: VDS.RDF.Storage.Virtualisation
  definition: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  name: IVirtualRdfProvider<TNodeID, TGraphID>
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID)
  name.vb: IVirtualRdfProvider(Of TNodeID, TGraphID)
  spec.csharp:
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
    name: IVirtualRdfProvider
    nameWithType: IVirtualRdfProvider
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
    name: IVirtualRdfProvider
    nameWithType: IVirtualRdfProvider
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
- uid: TNodeID
  name: TNodeID
  nameWithType: TNodeID
  fullName: TNodeID
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  commentId: T:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  name: IVirtualRdfProvider<TNodeID, TGraphID>
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID)
  name.vb: IVirtualRdfProvider(Of TNodeID, TGraphID)
  spec.csharp:
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
    name: IVirtualRdfProvider
    nameWithType: IVirtualRdfProvider
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
    name: IVirtualRdfProvider
    nameWithType: IVirtualRdfProvider
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.MaterialiseValue*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.MaterialiseValue
  name: MaterialiseValue
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.MaterialiseValue
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.MaterialiseValue
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).MaterialiseValue
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).MaterialiseValue
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.OnMaterialise*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.OnMaterialise
  name: OnMaterialise
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.OnMaterialise
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.OnMaterialise
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).OnMaterialise
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).OnMaterialise
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.VirtualID*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.VirtualID
  name: VirtualID
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.VirtualID
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.VirtualID
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).VirtualID
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).VirtualID
- uid: VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}.VirtualID
  commentId: P:VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1}.VirtualID
  parent: VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}
  definition: VDS.RDF.Storage.Virtualisation.IVirtualNode`2.VirtualID
  name: VirtualID
  nameWithType: IVirtualNode<TNodeID, TGraphID>.VirtualID
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>.VirtualID
  nameWithType.vb: IVirtualNode(Of TNodeID, TGraphID).VirtualID
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID).VirtualID
- uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2.VirtualID
  commentId: P:VDS.RDF.Storage.Virtualisation.IVirtualNode`2.VirtualID
  name: VirtualID
  nameWithType: IVirtualNode<TNodeID, TGraphID>.VirtualID
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>.VirtualID
  nameWithType.vb: IVirtualNode(Of TNodeID, TGraphID).VirtualID
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID).VirtualID
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Provider*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Provider
  name: Provider
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Provider
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Provider
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Provider
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Provider
- uid: VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}.Provider
  commentId: P:VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1}.Provider
  parent: VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}
  definition: VDS.RDF.Storage.Virtualisation.IVirtualNode`2.Provider
  name: Provider
  nameWithType: IVirtualNode<TNodeID, TGraphID>.Provider
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>.Provider
  nameWithType.vb: IVirtualNode(Of TNodeID, TGraphID).Provider
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID).Provider
- uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2.Provider
  commentId: P:VDS.RDF.Storage.Virtualisation.IVirtualNode`2.Provider
  name: Provider
  nameWithType: IVirtualNode<TNodeID, TGraphID>.Provider
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>.Provider
  nameWithType.vb: IVirtualNode(Of TNodeID, TGraphID).Provider
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID).Provider
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.IsMaterialised*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.IsMaterialised
  name: IsMaterialised
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.IsMaterialised
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.IsMaterialised
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).IsMaterialised
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).IsMaterialised
- uid: VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}.IsMaterialised
  commentId: P:VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1}.IsMaterialised
  parent: VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}
  definition: VDS.RDF.Storage.Virtualisation.IVirtualNode`2.IsMaterialised
  name: IsMaterialised
  nameWithType: IVirtualNode<TNodeID, TGraphID>.IsMaterialised
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>.IsMaterialised
  nameWithType.vb: IVirtualNode(Of TNodeID, TGraphID).IsMaterialised
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID).IsMaterialised
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2.IsMaterialised
  commentId: P:VDS.RDF.Storage.Virtualisation.IVirtualNode`2.IsMaterialised
  name: IsMaterialised
  nameWithType: IVirtualNode<TNodeID, TGraphID>.IsMaterialised
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>.IsMaterialised
  nameWithType.vb: IVirtualNode(Of TNodeID, TGraphID).IsMaterialised
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID).IsMaterialised
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.MaterialisedValue*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.MaterialisedValue
  name: MaterialisedValue
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.MaterialisedValue
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.MaterialisedValue
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).MaterialisedValue
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).MaterialisedValue
- uid: VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}.MaterialisedValue
  commentId: P:VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1}.MaterialisedValue
  parent: VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}
  definition: VDS.RDF.Storage.Virtualisation.IVirtualNode`2.MaterialisedValue
  name: MaterialisedValue
  nameWithType: IVirtualNode<TNodeID, TGraphID>.MaterialisedValue
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>.MaterialisedValue
  nameWithType.vb: IVirtualNode(Of TNodeID, TGraphID).MaterialisedValue
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID).MaterialisedValue
- uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2.MaterialisedValue
  commentId: P:VDS.RDF.Storage.Virtualisation.IVirtualNode`2.MaterialisedValue
  name: MaterialisedValue
  nameWithType: IVirtualNode<TNodeID, TGraphID>.MaterialisedValue
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>.MaterialisedValue
  nameWithType.vb: IVirtualNode(Of TNodeID, TGraphID).MaterialisedValue
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID).MaterialisedValue
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.NodeType*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.NodeType
  name: NodeType
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.NodeType
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.NodeType
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).NodeType
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).NodeType
- uid: VDS.RDF.INode.NodeType
  commentId: P:VDS.RDF.INode.NodeType
  parent: VDS.RDF.INode
  name: NodeType
  nameWithType: INode.NodeType
  fullName: VDS.RDF.INode.NodeType
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Graph*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Graph
  name: Graph
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Graph
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Graph
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Graph
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Graph
- uid: VDS.RDF.INode.Graph
  commentId: P:VDS.RDF.INode.Graph
  parent: VDS.RDF.INode
  name: Graph
  nameWithType: INode.Graph
  fullName: VDS.RDF.INode.Graph
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GraphUri*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GraphUri
  name: GraphUri
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.GraphUri
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.GraphUri
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).GraphUri
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).GraphUri
- uid: VDS.RDF.INode.GraphUri
  commentId: P:VDS.RDF.INode.GraphUri
  parent: VDS.RDF.INode
  name: GraphUri
  nameWithType: INode.GraphUri
  fullName: VDS.RDF.INode.GraphUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ToString
  name: ToString
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.ToString
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.ToString
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).ToString
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).ToString
- uid: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  commentId: M:VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  parent: VDS.RDF.INode
  name: ToString(INodeFormatter)
  nameWithType: INode.ToString(INodeFormatter)
  fullName: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  spec.csharp:
  - uid: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Writing.Formatting.INodeFormatter
  commentId: T:VDS.RDF.Writing.Formatting.INodeFormatter
  parent: VDS.RDF.Writing.Formatting
  name: INodeFormatter
  nameWithType: INodeFormatter
  fullName: VDS.RDF.Writing.Formatting.INodeFormatter
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Writing.Formatting
  commentId: N:VDS.RDF.Writing.Formatting
  name: VDS.RDF.Writing.Formatting
  nameWithType: VDS.RDF.Writing.Formatting
  fullName: VDS.RDF.Writing.Formatting
- uid: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  commentId: M:VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  parent: VDS.RDF.INode
  name: ToString(INodeFormatter, TripleSegment)
  nameWithType: INode.ToString(INodeFormatter, TripleSegment)
  fullName: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter, VDS.RDF.Writing.TripleSegment)
  spec.csharp:
  - uid: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Writing.TripleSegment
    name: TripleSegment
    nameWithType: TripleSegment
    fullName: VDS.RDF.Writing.TripleSegment
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Writing.TripleSegment
    name: TripleSegment
    nameWithType: TripleSegment
    fullName: VDS.RDF.Writing.TripleSegment
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Writing.TripleSegment
  commentId: T:VDS.RDF.Writing.TripleSegment
  parent: VDS.RDF.Writing
  name: TripleSegment
  nameWithType: TripleSegment
  fullName: VDS.RDF.Writing.TripleSegment
- uid: VDS.RDF.Writing
  commentId: N:VDS.RDF.Writing
  name: VDS.RDF.Writing
  nameWithType: VDS.RDF.Writing
  fullName: VDS.RDF.Writing
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareTo
  name: CompareTo
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CompareTo
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CompareTo
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CompareTo
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CompareTo
- uid: System.IComparable{VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}}.CompareTo(VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}})
  commentId: M:System.IComparable{VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1}}.CompareTo(VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1})
  parent: System.IComparable{VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IVirtualNode<TNodeID, TGraphID>)
  nameWithType: IComparable<IVirtualNode<TNodeID, TGraphID>>.CompareTo(IVirtualNode<TNodeID, TGraphID>)
  fullName: System.IComparable<VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>>.CompareTo(VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>)
  nameWithType.vb: IComparable(Of IVirtualNode(Of TNodeID, TGraphID)).CompareTo(IVirtualNode(Of TNodeID, TGraphID))
  fullName.vb: System.IComparable(Of VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID)).CompareTo(VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID))
  name.vb: CompareTo(IVirtualNode(Of TNodeID, TGraphID))
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IVirtualNode<TNodeID, TGraphID>>.CompareTo
    fullName: System.IComparable<VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
    name: IVirtualNode
    nameWithType: IVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IVirtualNode(Of TNodeID, TGraphID)).CompareTo
    fullName: System.IComparable(Of VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID)).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
    name: IVirtualNode
    nameWithType: IVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}.CompareTo(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{{TNodeID},{TGraphID}})
  commentId: M:System.IComparable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}.CompareTo(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{`0,`1})
  parent: System.IComparable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(BaseVirtualNode<TNodeID, TGraphID>)
  nameWithType: IComparable<BaseVirtualNode<TNodeID, TGraphID>>.CompareTo(BaseVirtualNode<TNodeID, TGraphID>)
  fullName: System.IComparable<VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>>.CompareTo(VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>)
  nameWithType.vb: IComparable(Of BaseVirtualNode(Of TNodeID, TGraphID)).CompareTo(BaseVirtualNode(Of TNodeID, TGraphID))
  fullName.vb: System.IComparable(Of VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID)).CompareTo(VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID))
  name.vb: CompareTo(BaseVirtualNode(Of TNodeID, TGraphID))
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<BaseVirtualNode<TNodeID, TGraphID>>.CompareTo
    fullName: System.IComparable<VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
    name: BaseVirtualNode
    nameWithType: BaseVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of BaseVirtualNode(Of TNodeID, TGraphID)).CompareTo
    fullName: System.IComparable(Of VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID)).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
    name: BaseVirtualNode
    nameWithType: BaseVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  commentId: T:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
  parent: VDS.RDF.Storage.Virtualisation
  name: BaseVirtualNode<TNodeID, TGraphID>
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID)
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID)
  name.vb: BaseVirtualNode(Of TNodeID, TGraphID)
  spec.csharp:
  - uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
    name: BaseVirtualNode
    nameWithType: BaseVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
    name: BaseVirtualNode
    nameWithType: BaseVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.INode}.CompareTo(VDS.RDF.INode)
  commentId: M:System.IComparable{VDS.RDF.INode}.CompareTo(VDS.RDF.INode)
  parent: System.IComparable{VDS.RDF.INode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(INode)
  nameWithType: IComparable<INode>.CompareTo(INode)
  fullName: System.IComparable<VDS.RDF.INode>.CompareTo(VDS.RDF.INode)
  nameWithType.vb: IComparable(Of INode).CompareTo(INode)
  fullName.vb: System.IComparable(Of VDS.RDF.INode).CompareTo(VDS.RDF.INode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<INode>.CompareTo
    fullName: System.IComparable<VDS.RDF.INode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of INode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.INode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IBlankNode}.CompareTo(VDS.RDF.IBlankNode)
  commentId: M:System.IComparable{VDS.RDF.IBlankNode}.CompareTo(VDS.RDF.IBlankNode)
  parent: System.IComparable{VDS.RDF.IBlankNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IBlankNode)
  nameWithType: IComparable<IBlankNode>.CompareTo(IBlankNode)
  fullName: System.IComparable<VDS.RDF.IBlankNode>.CompareTo(VDS.RDF.IBlankNode)
  nameWithType.vb: IComparable(Of IBlankNode).CompareTo(IBlankNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IBlankNode).CompareTo(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IBlankNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IBlankNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IBlankNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IBlankNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IBlankNode
  commentId: T:VDS.RDF.IBlankNode
  parent: VDS.RDF
  name: IBlankNode
  nameWithType: IBlankNode
  fullName: VDS.RDF.IBlankNode
- uid: System.IComparable{VDS.RDF.IGraphLiteralNode}.CompareTo(VDS.RDF.IGraphLiteralNode)
  commentId: M:System.IComparable{VDS.RDF.IGraphLiteralNode}.CompareTo(VDS.RDF.IGraphLiteralNode)
  parent: System.IComparable{VDS.RDF.IGraphLiteralNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IGraphLiteralNode)
  nameWithType: IComparable<IGraphLiteralNode>.CompareTo(IGraphLiteralNode)
  fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>.CompareTo(VDS.RDF.IGraphLiteralNode)
  nameWithType.vb: IComparable(Of IGraphLiteralNode).CompareTo(IGraphLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IGraphLiteralNode).CompareTo(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IGraphLiteralNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IGraphLiteralNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IGraphLiteralNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraphLiteralNode
  commentId: T:VDS.RDF.IGraphLiteralNode
  parent: VDS.RDF
  name: IGraphLiteralNode
  nameWithType: IGraphLiteralNode
  fullName: VDS.RDF.IGraphLiteralNode
- uid: System.IComparable{VDS.RDF.ILiteralNode}.CompareTo(VDS.RDF.ILiteralNode)
  commentId: M:System.IComparable{VDS.RDF.ILiteralNode}.CompareTo(VDS.RDF.ILiteralNode)
  parent: System.IComparable{VDS.RDF.ILiteralNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(ILiteralNode)
  nameWithType: IComparable<ILiteralNode>.CompareTo(ILiteralNode)
  fullName: System.IComparable<VDS.RDF.ILiteralNode>.CompareTo(VDS.RDF.ILiteralNode)
  nameWithType.vb: IComparable(Of ILiteralNode).CompareTo(ILiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.ILiteralNode).CompareTo(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<ILiteralNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.ILiteralNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of ILiteralNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.ILiteralNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: System.IComparable{VDS.RDF.IUriNode}.CompareTo(VDS.RDF.IUriNode)
  commentId: M:System.IComparable{VDS.RDF.IUriNode}.CompareTo(VDS.RDF.IUriNode)
  parent: System.IComparable{VDS.RDF.IUriNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IUriNode)
  nameWithType: IComparable<IUriNode>.CompareTo(IUriNode)
  fullName: System.IComparable<VDS.RDF.IUriNode>.CompareTo(VDS.RDF.IUriNode)
  nameWithType.vb: IComparable(Of IUriNode).CompareTo(IUriNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IUriNode).CompareTo(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IUriNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IUriNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IUriNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IUriNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IUriNode
  commentId: T:VDS.RDF.IUriNode
  parent: VDS.RDF
  name: IUriNode
  nameWithType: IUriNode
  fullName: VDS.RDF.IUriNode
- uid: System.IComparable{VDS.RDF.IVariableNode}.CompareTo(VDS.RDF.IVariableNode)
  commentId: M:System.IComparable{VDS.RDF.IVariableNode}.CompareTo(VDS.RDF.IVariableNode)
  parent: System.IComparable{VDS.RDF.IVariableNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IVariableNode)
  nameWithType: IComparable<IVariableNode>.CompareTo(IVariableNode)
  fullName: System.IComparable<VDS.RDF.IVariableNode>.CompareTo(VDS.RDF.IVariableNode)
  nameWithType.vb: IComparable(Of IVariableNode).CompareTo(IVariableNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IVariableNode).CompareTo(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IVariableNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IVariableNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IVariableNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IVariableNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IVariableNode
  commentId: T:VDS.RDF.IVariableNode
  parent: VDS.RDF
  name: IVariableNode
  nameWithType: IVariableNode
  fullName: VDS.RDF.IVariableNode
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.Equals
  name: Equals
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.Equals
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.Equals
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).Equals
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).Equals
- uid: System.IEquatable{VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}}.Equals(VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}})
  commentId: M:System.IEquatable{VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1}}.Equals(VDS.RDF.Storage.Virtualisation.IVirtualNode{`0,`1})
  parent: System.IEquatable{VDS.RDF.Storage.Virtualisation.IVirtualNode{{TNodeID},{TGraphID}}}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IVirtualNode<TNodeID, TGraphID>)
  nameWithType: IEquatable<IVirtualNode<TNodeID, TGraphID>>.Equals(IVirtualNode<TNodeID, TGraphID>)
  fullName: System.IEquatable<VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>>.Equals(VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>)
  nameWithType.vb: IEquatable(Of IVirtualNode(Of TNodeID, TGraphID)).Equals(IVirtualNode(Of TNodeID, TGraphID))
  fullName.vb: System.IEquatable(Of VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID)).Equals(VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID))
  name.vb: Equals(IVirtualNode(Of TNodeID, TGraphID))
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IVirtualNode<TNodeID, TGraphID>>.Equals
    fullName: System.IEquatable<VDS.RDF.Storage.Virtualisation.IVirtualNode<TNodeID, TGraphID>>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
    name: IVirtualNode
    nameWithType: IVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IVirtualNode(Of TNodeID, TGraphID)).Equals
    fullName: System.IEquatable(Of VDS.RDF.Storage.Virtualisation.IVirtualNode(Of TNodeID, TGraphID)).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualNode`2
    name: IVirtualNode
    nameWithType: IVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}.Equals(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{{TNodeID},{TGraphID}})
  commentId: M:System.IEquatable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}.Equals(VDS.RDF.Storage.Virtualisation.BaseVirtualNode{`0,`1})
  parent: System.IEquatable{VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(BaseVirtualNode<TNodeID, TGraphID>)
  nameWithType: IEquatable<BaseVirtualNode<TNodeID, TGraphID>>.Equals(BaseVirtualNode<TNodeID, TGraphID>)
  fullName: System.IEquatable<VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>>.Equals(VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>)
  nameWithType.vb: IEquatable(Of BaseVirtualNode(Of TNodeID, TGraphID)).Equals(BaseVirtualNode(Of TNodeID, TGraphID))
  fullName.vb: System.IEquatable(Of VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID)).Equals(VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID))
  name.vb: Equals(BaseVirtualNode(Of TNodeID, TGraphID))
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<BaseVirtualNode<TNodeID, TGraphID>>.Equals
    fullName: System.IEquatable<VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
    name: BaseVirtualNode
    nameWithType: BaseVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of BaseVirtualNode(Of TNodeID, TGraphID)).Equals
    fullName: System.IEquatable(Of VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID)).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2
    name: BaseVirtualNode
    nameWithType: BaseVirtualNode
    fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TGraphID
    nameWithType: TGraphID
    fullName: TGraphID
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.INode}.Equals(VDS.RDF.INode)
  commentId: M:System.IEquatable{VDS.RDF.INode}.Equals(VDS.RDF.INode)
  parent: System.IEquatable{VDS.RDF.INode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(INode)
  nameWithType: IEquatable<INode>.Equals(INode)
  fullName: System.IEquatable<VDS.RDF.INode>.Equals(VDS.RDF.INode)
  nameWithType.vb: IEquatable(Of INode).Equals(INode)
  fullName.vb: System.IEquatable(Of VDS.RDF.INode).Equals(VDS.RDF.INode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<INode>.Equals
    fullName: System.IEquatable<VDS.RDF.INode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of INode).Equals
    fullName: System.IEquatable(Of VDS.RDF.INode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.TryVirtualEquality*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.TryVirtualEquality
  name: TryVirtualEquality
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.TryVirtualEquality
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.TryVirtualEquality
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).TryVirtualEquality
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).TryVirtualEquality
- uid: System.IEquatable{VDS.RDF.IBlankNode}.Equals(VDS.RDF.IBlankNode)
  commentId: M:System.IEquatable{VDS.RDF.IBlankNode}.Equals(VDS.RDF.IBlankNode)
  parent: System.IEquatable{VDS.RDF.IBlankNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IBlankNode)
  nameWithType: IEquatable<IBlankNode>.Equals(IBlankNode)
  fullName: System.IEquatable<VDS.RDF.IBlankNode>.Equals(VDS.RDF.IBlankNode)
  nameWithType.vb: IEquatable(Of IBlankNode).Equals(IBlankNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IBlankNode).Equals(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IBlankNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IBlankNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IBlankNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IBlankNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IGraphLiteralNode}.Equals(VDS.RDF.IGraphLiteralNode)
  commentId: M:System.IEquatable{VDS.RDF.IGraphLiteralNode}.Equals(VDS.RDF.IGraphLiteralNode)
  parent: System.IEquatable{VDS.RDF.IGraphLiteralNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IGraphLiteralNode)
  nameWithType: IEquatable<IGraphLiteralNode>.Equals(IGraphLiteralNode)
  fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>.Equals(VDS.RDF.IGraphLiteralNode)
  nameWithType.vb: IEquatable(Of IGraphLiteralNode).Equals(IGraphLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IGraphLiteralNode).Equals(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IGraphLiteralNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IGraphLiteralNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IGraphLiteralNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.ILiteralNode}.Equals(VDS.RDF.ILiteralNode)
  commentId: M:System.IEquatable{VDS.RDF.ILiteralNode}.Equals(VDS.RDF.ILiteralNode)
  parent: System.IEquatable{VDS.RDF.ILiteralNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ILiteralNode)
  nameWithType: IEquatable<ILiteralNode>.Equals(ILiteralNode)
  fullName: System.IEquatable<VDS.RDF.ILiteralNode>.Equals(VDS.RDF.ILiteralNode)
  nameWithType.vb: IEquatable(Of ILiteralNode).Equals(ILiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.ILiteralNode).Equals(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ILiteralNode>.Equals
    fullName: System.IEquatable<VDS.RDF.ILiteralNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ILiteralNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.ILiteralNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IUriNode}.Equals(VDS.RDF.IUriNode)
  commentId: M:System.IEquatable{VDS.RDF.IUriNode}.Equals(VDS.RDF.IUriNode)
  parent: System.IEquatable{VDS.RDF.IUriNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IUriNode)
  nameWithType: IEquatable<IUriNode>.Equals(IUriNode)
  fullName: System.IEquatable<VDS.RDF.IUriNode>.Equals(VDS.RDF.IUriNode)
  nameWithType.vb: IEquatable(Of IUriNode).Equals(IUriNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IUriNode).Equals(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IUriNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IUriNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IUriNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IUriNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IVariableNode}.Equals(VDS.RDF.IVariableNode)
  commentId: M:System.IEquatable{VDS.RDF.IVariableNode}.Equals(VDS.RDF.IVariableNode)
  parent: System.IEquatable{VDS.RDF.IVariableNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IVariableNode)
  nameWithType: IEquatable<IVariableNode>.Equals(IVariableNode)
  fullName: System.IEquatable<VDS.RDF.IVariableNode>.Equals(VDS.RDF.IVariableNode)
  nameWithType.vb: IEquatable(Of IVariableNode).Equals(IVariableNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IVariableNode).Equals(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IVariableNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IVariableNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IVariableNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IVariableNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CopyNode*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CopyNode
  name: CopyNode
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CopyNode
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CopyNode
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CopyNode
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CopyNode
- uid: VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode(VDS.RDF.IGraph)
  parent: VDS.RDF.Storage.Virtualisation.ICanCopy
  name: CopyNode(IGraph)
  nameWithType: ICanCopy.CopyNode(IGraph)
  fullName: VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode(VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: ICanCopy.CopyNode
    fullName: VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode(VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: ICanCopy.CopyNode
    fullName: VDS.RDF.Storage.Virtualisation.ICanCopy.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetHashCode*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetHashCode
  name: GetHashCode
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.GetHashCode
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.GetHashCode
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).GetHashCode
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).GetHashCode
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareVirtualId*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.CompareVirtualId
  name: CompareVirtualId
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.CompareVirtualId
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.CompareVirtualId
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).CompareVirtualId
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).CompareVirtualId
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.TryCompareVirtualId*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.TryCompareVirtualId
  name: TryCompareVirtualId
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.TryCompareVirtualId
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.TryCompareVirtualId
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).TryCompareVirtualId
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).TryCompareVirtualId
- uid: VDS.RDF.Storage.Virtualisation.IVirtualIdComparable.TryCompareVirtualId(VDS.RDF.INode,System.Int32@)
  commentId: M:VDS.RDF.Storage.Virtualisation.IVirtualIdComparable.TryCompareVirtualId(VDS.RDF.INode,System.Int32@)
  parent: VDS.RDF.Storage.Virtualisation.IVirtualIdComparable
  isExternal: true
  name: TryCompareVirtualId(INode, Int32)
  nameWithType: IVirtualIdComparable.TryCompareVirtualId(INode, Int32)
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualIdComparable.TryCompareVirtualId(VDS.RDF.INode, System.Int32)
  spec.csharp:
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualIdComparable.TryCompareVirtualId(VDS.RDF.INode,System.Int32@)
    name: TryCompareVirtualId
    nameWithType: IVirtualIdComparable.TryCompareVirtualId
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualIdComparable.TryCompareVirtualId
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Virtualisation.IVirtualIdComparable.TryCompareVirtualId(VDS.RDF.INode,System.Int32@)
    name: TryCompareVirtualId
    nameWithType: IVirtualIdComparable.TryCompareVirtualId
    fullName: VDS.RDF.Storage.Virtualisation.IVirtualIdComparable.TryCompareVirtualId
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.ToString
  commentId: M:VDS.RDF.INode.ToString
  parent: VDS.RDF.INode
  name: ToString()
  nameWithType: INode.ToString()
  fullName: VDS.RDF.INode.ToString()
  spec.csharp:
  - uid: VDS.RDF.INode.ToString
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INode.ToString
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.NotImplementedException
  commentId: T:System.NotImplementedException
  isExternal: true
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetObjectData*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetObjectData
  name: GetObjectData
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.GetObjectData
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.GetObjectData
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).GetObjectData
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetSchema*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.GetSchema
  name: GetSchema
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.GetSchema
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.GetSchema
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).GetSchema
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: true
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ReadXml*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.ReadXml
  name: ReadXml
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.ReadXml
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.ReadXml
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).ReadXml
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.WriteXml*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.BaseVirtualNode`2.WriteXml
  name: WriteXml
  nameWithType: BaseVirtualNode<TNodeID, TGraphID>.WriteXml
  fullName: VDS.RDF.Storage.Virtualisation.BaseVirtualNode<TNodeID, TGraphID>.WriteXml
  nameWithType.vb: BaseVirtualNode(Of TNodeID, TGraphID).WriteXml
  fullName.vb: VDS.RDF.Storage.Virtualisation.BaseVirtualNode(Of TNodeID, TGraphID).WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
