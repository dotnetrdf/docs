### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Patterns.TriplePatternTypeComparer
  commentId: T:VDS.RDF.Query.Patterns.TriplePatternTypeComparer
  id: TriplePatternTypeComparer
  parent: VDS.RDF.Query.Patterns
  children:
  - VDS.RDF.Query.Patterns.TriplePatternTypeComparer.Compare(VDS.RDF.Query.Patterns.TriplePatternType,VDS.RDF.Query.Patterns.TriplePatternType)
  langs:
  - csharp
  - vb
  name: TriplePatternTypeComparer
  nameWithType: TriplePatternTypeComparer
  fullName: VDS.RDF.Query.Patterns.TriplePatternTypeComparer
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePatternType.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TriplePatternTypeComparer
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePatternType.cs
    startLine: 68
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nComparer for Triple Pattern Types.\n"
  example: []
  syntax:
    content: 'public class TriplePatternTypeComparer : IComparer<TriplePatternType>'
    content.vb: >-
      Public Class TriplePatternTypeComparer
          Implements IComparer(Of TriplePatternType)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.TriplePatternType}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Patterns.TriplePatternTypeComparer.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Patterns.TriplePatternTypeComparer.Compare(VDS.RDF.Query.Patterns.TriplePatternType,VDS.RDF.Query.Patterns.TriplePatternType)
  commentId: M:VDS.RDF.Query.Patterns.TriplePatternTypeComparer.Compare(VDS.RDF.Query.Patterns.TriplePatternType,VDS.RDF.Query.Patterns.TriplePatternType)
  id: Compare(VDS.RDF.Query.Patterns.TriplePatternType,VDS.RDF.Query.Patterns.TriplePatternType)
  parent: VDS.RDF.Query.Patterns.TriplePatternTypeComparer
  langs:
  - csharp
  - vb
  name: Compare(TriplePatternType, TriplePatternType)
  nameWithType: TriplePatternTypeComparer.Compare(TriplePatternType, TriplePatternType)
  fullName: VDS.RDF.Query.Patterns.TriplePatternTypeComparer.Compare(VDS.RDF.Query.Patterns.TriplePatternType, VDS.RDF.Query.Patterns.TriplePatternType)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePatternType.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Compare
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePatternType.cs
    startLine: 77
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nCompares two triple pattern types.\n"
  example: []
  syntax:
    content: public int Compare(TriplePatternType x, TriplePatternType y)
    parameters:
    - id: x
      type: VDS.RDF.Query.Patterns.TriplePatternType
      description: Pattern Type.
    - id: y
      type: VDS.RDF.Query.Patterns.TriplePatternType
      description: Pattern Type.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function Compare(x As TriplePatternType, y As TriplePatternType) As Integer
  overload: VDS.RDF.Query.Patterns.TriplePatternTypeComparer.Compare*
  implements:
  - System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.TriplePatternType}.Compare(VDS.RDF.Query.Patterns.TriplePatternType,VDS.RDF.Query.Patterns.TriplePatternType)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.TriplePatternType}
  commentId: T:System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.TriplePatternType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<TriplePatternType>
  nameWithType: IComparer<TriplePatternType>
  fullName: System.Collections.Generic.IComparer<VDS.RDF.Query.Patterns.TriplePatternType>
  nameWithType.vb: IComparer(Of TriplePatternType)
  fullName.vb: System.Collections.Generic.IComparer(Of VDS.RDF.Query.Patterns.TriplePatternType)
  name.vb: IComparer(Of TriplePatternType)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.TriplePatternType
    name: TriplePatternType
    nameWithType: TriplePatternType
    fullName: VDS.RDF.Query.Patterns.TriplePatternType
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.TriplePatternType
    name: TriplePatternType
    nameWithType: TriplePatternType
    fullName: VDS.RDF.Query.Patterns.TriplePatternType
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.TriplePatternTypeComparer.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TriplePatternTypeComparer>()
  nameWithType: Extensions.AsEnumerable<TriplePatternTypeComparer>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.TriplePatternTypeComparer>()
  nameWithType.vb: Extensions.AsEnumerable(Of TriplePatternTypeComparer)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.TriplePatternTypeComparer)()
  name.vb: AsEnumerable(Of TriplePatternTypeComparer)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TriplePatternTypeComparer>
    nameWithType: Extensions.AsEnumerable<TriplePatternTypeComparer>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.TriplePatternTypeComparer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TriplePatternTypeComparer)
    nameWithType: Extensions.AsEnumerable(Of TriplePatternTypeComparer)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.TriplePatternTypeComparer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Patterns.TriplePatternTypeComparer.Compare*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePatternTypeComparer.Compare
  name: Compare
  nameWithType: TriplePatternTypeComparer.Compare
  fullName: VDS.RDF.Query.Patterns.TriplePatternTypeComparer.Compare
- uid: System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.TriplePatternType}.Compare(VDS.RDF.Query.Patterns.TriplePatternType,VDS.RDF.Query.Patterns.TriplePatternType)
  commentId: M:System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.TriplePatternType}.Compare(VDS.RDF.Query.Patterns.TriplePatternType,VDS.RDF.Query.Patterns.TriplePatternType)
  parent: System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.TriplePatternType}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(TriplePatternType, TriplePatternType)
  nameWithType: IComparer<TriplePatternType>.Compare(TriplePatternType, TriplePatternType)
  fullName: System.Collections.Generic.IComparer<VDS.RDF.Query.Patterns.TriplePatternType>.Compare(VDS.RDF.Query.Patterns.TriplePatternType, VDS.RDF.Query.Patterns.TriplePatternType)
  nameWithType.vb: IComparer(Of TriplePatternType).Compare(TriplePatternType, TriplePatternType)
  fullName.vb: System.Collections.Generic.IComparer(Of VDS.RDF.Query.Patterns.TriplePatternType).Compare(VDS.RDF.Query.Patterns.TriplePatternType, VDS.RDF.Query.Patterns.TriplePatternType)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<TriplePatternType>.Compare
    fullName: System.Collections.Generic.IComparer<VDS.RDF.Query.Patterns.TriplePatternType>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.TriplePatternType
    name: TriplePatternType
    nameWithType: TriplePatternType
    fullName: VDS.RDF.Query.Patterns.TriplePatternType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Patterns.TriplePatternType
    name: TriplePatternType
    nameWithType: TriplePatternType
    fullName: VDS.RDF.Query.Patterns.TriplePatternType
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of TriplePatternType).Compare
    fullName: System.Collections.Generic.IComparer(Of VDS.RDF.Query.Patterns.TriplePatternType).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.TriplePatternType
    name: TriplePatternType
    nameWithType: TriplePatternType
    fullName: VDS.RDF.Query.Patterns.TriplePatternType
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Patterns.TriplePatternType
    name: TriplePatternType
    nameWithType: TriplePatternType
    fullName: VDS.RDF.Query.Patterns.TriplePatternType
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.TriplePatternType
  commentId: T:VDS.RDF.Query.Patterns.TriplePatternType
  parent: VDS.RDF.Query.Patterns
  name: TriplePatternType
  nameWithType: TriplePatternType
  fullName: VDS.RDF.Query.Patterns.TriplePatternType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
