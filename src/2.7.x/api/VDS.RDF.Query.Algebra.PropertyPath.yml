### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Algebra.PropertyPath
  commentId: T:VDS.RDF.Query.Algebra.PropertyPath
  id: PropertyPath
  parent: VDS.RDF.Query.Algebra
  children:
  - VDS.RDF.Query.Algebra.PropertyPath.#ctor(VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Paths.ISparqlPath,VDS.RDF.Query.Patterns.PatternItem)
  - VDS.RDF.Query.Algebra.PropertyPath.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Algebra.PropertyPath.ToGraphPattern
  - VDS.RDF.Query.Algebra.PropertyPath.ToString
  langs:
  - csharp
  - vb
  name: PropertyPath
  nameWithType: PropertyPath
  fullName: VDS.RDF.Query.Algebra.PropertyPath
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/PropertyPath.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PropertyPath
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Algebra/PropertyPath.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nRepresents an arbitrary property path in the algebra (only used when strict algebra is generated).\n"
  example: []
  syntax:
    content: 'public class PropertyPath : BasePathOperator, IPathOperator, ITerminalOperator, ISparqlAlgebra'
    content.vb: >-
      Public Class PropertyPath
          Inherits BasePathOperator
          Implements IPathOperator, ITerminalOperator, ISparqlAlgebra
  inheritance:
  - System.Object
  - VDS.RDF.Query.Algebra.BasePathOperator
  implements:
  - VDS.RDF.Query.Algebra.IPathOperator
  - VDS.RDF.Query.Algebra.ITerminalOperator
  - VDS.RDF.Query.Algebra.ISparqlAlgebra
  inheritedMembers:
  - VDS.RDF.Query.Algebra.BasePathOperator.PathStart
  - VDS.RDF.Query.Algebra.BasePathOperator.PathEnd
  - VDS.RDF.Query.Algebra.BasePathOperator.Path
  - VDS.RDF.Query.Algebra.BasePathOperator.Variables
  - VDS.RDF.Query.Algebra.BasePathOperator.FixedVariables
  - VDS.RDF.Query.Algebra.BasePathOperator.FloatingVariables
  - VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Algebra.PropertyPath.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Algebra.PropertyPath.#ctor(VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Paths.ISparqlPath,VDS.RDF.Query.Patterns.PatternItem)
  commentId: M:VDS.RDF.Query.Algebra.PropertyPath.#ctor(VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Paths.ISparqlPath,VDS.RDF.Query.Patterns.PatternItem)
  id: '#ctor(VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Paths.ISparqlPath,VDS.RDF.Query.Patterns.PatternItem)'
  parent: VDS.RDF.Query.Algebra.PropertyPath
  langs:
  - csharp
  - vb
  name: PropertyPath(PatternItem, ISparqlPath, PatternItem)
  nameWithType: PropertyPath.PropertyPath(PatternItem, ISparqlPath, PatternItem)
  fullName: VDS.RDF.Query.Algebra.PropertyPath.PropertyPath(VDS.RDF.Query.Patterns.PatternItem, VDS.RDF.Query.Paths.ISparqlPath, VDS.RDF.Query.Patterns.PatternItem)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/PropertyPath.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Algebra/PropertyPath.cs
    startLine: 43
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nCreates a new Property Path operator.\n"
  example: []
  syntax:
    content: public PropertyPath(PatternItem start, ISparqlPath path, PatternItem end)
    parameters:
    - id: start
      type: VDS.RDF.Query.Patterns.PatternItem
      description: Path Start.
    - id: path
      type: VDS.RDF.Query.Paths.ISparqlPath
      description: Path Expression.
    - id: end
      type: VDS.RDF.Query.Patterns.PatternItem
      description: Path End.
    content.vb: Public Sub New(start As PatternItem, path As ISparqlPath, end As PatternItem)
  overload: VDS.RDF.Query.Algebra.PropertyPath.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Algebra.PropertyPath.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Algebra.PropertyPath.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  id: Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Algebra.PropertyPath
  langs:
  - csharp
  - vb
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: PropertyPath.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Algebra.PropertyPath.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/PropertyPath.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Evaluate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Algebra/PropertyPath.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nEvaluates the Path in the given context.\n"
  example: []
  syntax:
    content: public override BaseMultiset Evaluate(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    return:
      type: VDS.RDF.Query.Algebra.BaseMultiset
      description: ''
    content.vb: Public Overrides Function Evaluate(context As SparqlEvaluationContext) As BaseMultiset
  overridden: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  overload: VDS.RDF.Query.Algebra.PropertyPath.Evaluate*
  implements:
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Algebra.PropertyPath.ToGraphPattern
  commentId: M:VDS.RDF.Query.Algebra.PropertyPath.ToGraphPattern
  id: ToGraphPattern
  parent: VDS.RDF.Query.Algebra.PropertyPath
  langs:
  - csharp
  - vb
  name: ToGraphPattern()
  nameWithType: PropertyPath.ToGraphPattern()
  fullName: VDS.RDF.Query.Algebra.PropertyPath.ToGraphPattern()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/PropertyPath.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToGraphPattern
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Algebra/PropertyPath.cs
    startLine: 99
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nConverts the algebra back into a Graph Pattern.\n"
  example: []
  syntax:
    content: public override GraphPattern ToGraphPattern()
    return:
      type: VDS.RDF.Query.Patterns.GraphPattern
      description: ''
    content.vb: Public Overrides Function ToGraphPattern As GraphPattern
  overridden: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
  overload: VDS.RDF.Query.Algebra.PropertyPath.ToGraphPattern*
  implements:
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Algebra.PropertyPath.ToString
  commentId: M:VDS.RDF.Query.Algebra.PropertyPath.ToString
  id: ToString
  parent: VDS.RDF.Query.Algebra.PropertyPath
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PropertyPath.ToString()
  fullName: VDS.RDF.Query.Algebra.PropertyPath.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/PropertyPath.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Algebra/PropertyPath.cs
    startLine: 110
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the string representation of the algebra.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: VDS.RDF.Query.Algebra.BasePathOperator.ToString
  overload: VDS.RDF.Query.Algebra.PropertyPath.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query.Algebra
  commentId: N:VDS.RDF.Query.Algebra
  name: VDS.RDF.Query.Algebra
  nameWithType: VDS.RDF.Query.Algebra
  fullName: VDS.RDF.Query.Algebra
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Algebra.BasePathOperator
  commentId: T:VDS.RDF.Query.Algebra.BasePathOperator
  parent: VDS.RDF.Query.Algebra
  name: BasePathOperator
  nameWithType: BasePathOperator
  fullName: VDS.RDF.Query.Algebra.BasePathOperator
- uid: VDS.RDF.Query.Algebra.IPathOperator
  commentId: T:VDS.RDF.Query.Algebra.IPathOperator
  parent: VDS.RDF.Query.Algebra
  name: IPathOperator
  nameWithType: IPathOperator
  fullName: VDS.RDF.Query.Algebra.IPathOperator
- uid: VDS.RDF.Query.Algebra.ITerminalOperator
  commentId: T:VDS.RDF.Query.Algebra.ITerminalOperator
  parent: VDS.RDF.Query.Algebra
  name: ITerminalOperator
  nameWithType: ITerminalOperator
  fullName: VDS.RDF.Query.Algebra.ITerminalOperator
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra
  commentId: T:VDS.RDF.Query.Algebra.ISparqlAlgebra
  parent: VDS.RDF.Query.Algebra
  name: ISparqlAlgebra
  nameWithType: ISparqlAlgebra
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra
- uid: VDS.RDF.Query.Algebra.BasePathOperator.PathStart
  commentId: P:VDS.RDF.Query.Algebra.BasePathOperator.PathStart
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: PathStart
  nameWithType: BasePathOperator.PathStart
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.PathStart
- uid: VDS.RDF.Query.Algebra.BasePathOperator.PathEnd
  commentId: P:VDS.RDF.Query.Algebra.BasePathOperator.PathEnd
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: PathEnd
  nameWithType: BasePathOperator.PathEnd
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.PathEnd
- uid: VDS.RDF.Query.Algebra.BasePathOperator.Path
  commentId: P:VDS.RDF.Query.Algebra.BasePathOperator.Path
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: Path
  nameWithType: BasePathOperator.Path
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.Path
- uid: VDS.RDF.Query.Algebra.BasePathOperator.Variables
  commentId: P:VDS.RDF.Query.Algebra.BasePathOperator.Variables
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: Variables
  nameWithType: BasePathOperator.Variables
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.Variables
- uid: VDS.RDF.Query.Algebra.BasePathOperator.FixedVariables
  commentId: P:VDS.RDF.Query.Algebra.BasePathOperator.FixedVariables
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: FixedVariables
  nameWithType: BasePathOperator.FixedVariables
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.FixedVariables
- uid: VDS.RDF.Query.Algebra.BasePathOperator.FloatingVariables
  commentId: P:VDS.RDF.Query.Algebra.BasePathOperator.FloatingVariables
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: FloatingVariables
  nameWithType: BasePathOperator.FloatingVariables
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.FloatingVariables
- uid: VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
  commentId: M:VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: ToQuery()
  nameWithType: BasePathOperator.ToQuery()
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToQuery()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
    name: ToQuery
    nameWithType: BasePathOperator.ToQuery
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
    name: ToQuery
    nameWithType: BasePathOperator.ToQuery
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.PropertyPath.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<PropertyPath>()
  nameWithType: Extensions.AsEnumerable<PropertyPath>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.PropertyPath>()
  nameWithType.vb: Extensions.AsEnumerable(Of PropertyPath)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.PropertyPath)()
  name.vb: AsEnumerable(Of PropertyPath)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<PropertyPath>
    nameWithType: Extensions.AsEnumerable<PropertyPath>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.PropertyPath>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of PropertyPath)
    nameWithType: Extensions.AsEnumerable(Of PropertyPath)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.PropertyPath)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Algebra.PropertyPath.#ctor*
  commentId: Overload:VDS.RDF.Query.Algebra.PropertyPath.#ctor
  name: PropertyPath
  nameWithType: PropertyPath.PropertyPath
  fullName: VDS.RDF.Query.Algebra.PropertyPath.PropertyPath
- uid: VDS.RDF.Query.Patterns.PatternItem
  commentId: T:VDS.RDF.Query.Patterns.PatternItem
  parent: VDS.RDF.Query.Patterns
  name: PatternItem
  nameWithType: PatternItem
  fullName: VDS.RDF.Query.Patterns.PatternItem
- uid: VDS.RDF.Query.Paths.ISparqlPath
  commentId: T:VDS.RDF.Query.Paths.ISparqlPath
  parent: VDS.RDF.Query.Paths
  name: ISparqlPath
  nameWithType: ISparqlPath
  fullName: VDS.RDF.Query.Paths.ISparqlPath
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: VDS.RDF.Query.Paths
  commentId: N:VDS.RDF.Query.Paths
  name: VDS.RDF.Query.Paths
  nameWithType: VDS.RDF.Query.Paths
  fullName: VDS.RDF.Query.Paths
- uid: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Algebra.BasePathOperator.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: BasePathOperator.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: BasePathOperator.Evaluate
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: BasePathOperator.Evaluate
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.PropertyPath.Evaluate*
  commentId: Overload:VDS.RDF.Query.Algebra.PropertyPath.Evaluate
  name: Evaluate
  nameWithType: PropertyPath.Evaluate
  fullName: VDS.RDF.Query.Algebra.PropertyPath.Evaluate
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ISparqlAlgebra.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ISparqlAlgebra.Evaluate
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ISparqlAlgebra.Evaluate
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.Query.Algebra.BaseMultiset
  commentId: T:VDS.RDF.Query.Algebra.BaseMultiset
  parent: VDS.RDF.Query.Algebra
  name: BaseMultiset
  nameWithType: BaseMultiset
  fullName: VDS.RDF.Query.Algebra.BaseMultiset
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
  commentId: M:VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: ToGraphPattern()
  nameWithType: BasePathOperator.ToGraphPattern()
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
    name: ToGraphPattern
    nameWithType: BasePathOperator.ToGraphPattern
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
    name: ToGraphPattern
    nameWithType: BasePathOperator.ToGraphPattern
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToGraphPattern
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.PropertyPath.ToGraphPattern*
  commentId: Overload:VDS.RDF.Query.Algebra.PropertyPath.ToGraphPattern
  name: ToGraphPattern
  nameWithType: PropertyPath.ToGraphPattern
  fullName: VDS.RDF.Query.Algebra.PropertyPath.ToGraphPattern
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: ToGraphPattern()
  nameWithType: ISparqlAlgebra.ToGraphPattern()
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
    name: ToGraphPattern
    nameWithType: ISparqlAlgebra.ToGraphPattern
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
    name: ToGraphPattern
    nameWithType: ISparqlAlgebra.ToGraphPattern
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.GraphPattern
  commentId: T:VDS.RDF.Query.Patterns.GraphPattern
  parent: VDS.RDF.Query.Patterns
  name: GraphPattern
  nameWithType: GraphPattern
  fullName: VDS.RDF.Query.Patterns.GraphPattern
- uid: VDS.RDF.Query.Algebra.BasePathOperator.ToString
  commentId: M:VDS.RDF.Query.Algebra.BasePathOperator.ToString
  parent: VDS.RDF.Query.Algebra.BasePathOperator
  name: ToString()
  nameWithType: BasePathOperator.ToString()
  fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToString()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.ToString
    name: ToString
    nameWithType: BasePathOperator.ToString
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.BasePathOperator.ToString
    name: ToString
    nameWithType: BasePathOperator.ToString
    fullName: VDS.RDF.Query.Algebra.BasePathOperator.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.PropertyPath.ToString*
  commentId: Overload:VDS.RDF.Query.Algebra.PropertyPath.ToString
  name: ToString
  nameWithType: PropertyPath.ToString
  fullName: VDS.RDF.Query.Algebra.PropertyPath.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
