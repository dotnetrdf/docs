### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Writing.Formatting.ICharFormatter
  commentId: T:VDS.RDF.Writing.Formatting.ICharFormatter
  id: ICharFormatter
  parent: VDS.RDF.Writing.Formatting
  children:
  - VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar(System.Char)
  - VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar(System.Char[])
  langs:
  - csharp
  - vb
  name: ICharFormatter
  nameWithType: ICharFormatter
  fullName: VDS.RDF.Writing.Formatting.ICharFormatter
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/Formatting/ICharFormatter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ICharFormatter
    path: Libraries/dotNetRDF/Writing/Formatting/ICharFormatter.cs
    startLine: 33
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing.Formatting
  summary: "\nInterface for Character Formatters.\n"
  example: []
  syntax:
    content: public interface ICharFormatter
    content.vb: Public Interface ICharFormatter
  extensionMethods:
  - VDS.RDF.Writing.Formatting.ICharFormatter.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar(System.Char)
  commentId: M:VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar(System.Char)
  id: FormatChar(System.Char)
  parent: VDS.RDF.Writing.Formatting.ICharFormatter
  langs:
  - csharp
  - vb
  name: FormatChar(Char)
  nameWithType: ICharFormatter.FormatChar(Char)
  fullName: VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/Formatting/ICharFormatter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FormatChar
    path: Libraries/dotNetRDF/Writing/Formatting/ICharFormatter.cs
    startLine: 40
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing.Formatting
  summary: "\nFormats a Character as a String.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This form of the FormatChar() method is considered obsolete as it is inefficient", false)]

      string FormatChar(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character.
    return:
      type: System.String
      description: ''
    content.vb: >-
      <Obsolete("This form of the FormatChar() method is considered obsolete as it is inefficient", False)>

      Function FormatChar(c As Char) As String
  overload: VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This form of the FormatChar() method is considered obsolete as it is inefficient
    - type: System.Boolean
      value: false
- uid: VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar(System.Char[])
  commentId: M:VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar(System.Char[])
  id: FormatChar(System.Char[])
  parent: VDS.RDF.Writing.Formatting.ICharFormatter
  langs:
  - csharp
  - vb
  name: FormatChar(Char[])
  nameWithType: ICharFormatter.FormatChar(Char[])
  fullName: VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar(System.Char[])
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/Formatting/ICharFormatter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FormatChar
    path: Libraries/dotNetRDF/Writing/Formatting/ICharFormatter.cs
    startLine: 48
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing.Formatting
  summary: "\nFormats a sequence of characters as a String.\n"
  example: []
  syntax:
    content: string FormatChar(char[] cs)
    parameters:
    - id: cs
      type: System.Char[]
      description: Characters.
    return:
      type: System.String
      description: String.
    content.vb: Function FormatChar(cs As Char()) As String
  overload: VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar*
  nameWithType.vb: ICharFormatter.FormatChar(Char())
  fullName.vb: VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar(System.Char())
  name.vb: FormatChar(Char())
references:
- uid: VDS.RDF.Writing.Formatting
  commentId: N:VDS.RDF.Writing.Formatting
  name: VDS.RDF.Writing.Formatting
  nameWithType: VDS.RDF.Writing.Formatting
  fullName: VDS.RDF.Writing.Formatting
- uid: VDS.RDF.Writing.Formatting.ICharFormatter.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ICharFormatter>()
  nameWithType: Extensions.AsEnumerable<ICharFormatter>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.Formatting.ICharFormatter>()
  nameWithType.vb: Extensions.AsEnumerable(Of ICharFormatter)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.Formatting.ICharFormatter)()
  name.vb: AsEnumerable(Of ICharFormatter)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ICharFormatter>
    nameWithType: Extensions.AsEnumerable<ICharFormatter>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.Formatting.ICharFormatter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ICharFormatter)
    nameWithType: Extensions.AsEnumerable(Of ICharFormatter)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.Formatting.ICharFormatter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar*
  commentId: Overload:VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar
  name: FormatChar
  nameWithType: ICharFormatter.FormatChar
  fullName: VDS.RDF.Writing.Formatting.ICharFormatter.FormatChar
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
shouldSkipMarkup: true
