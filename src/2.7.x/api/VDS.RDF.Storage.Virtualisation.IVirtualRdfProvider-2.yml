### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  commentId: T:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  id: IVirtualRdfProvider`2
  parent: VDS.RDF.Storage.Virtualisation
  children:
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetBlankNodeID(VDS.RDF.IBlankNode)
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetBlankNodeID(VDS.RDF.IBlankNode,System.Boolean)
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID(System.Uri)
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID(System.Uri,System.Boolean)
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID(VDS.RDF.IGraph)
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphUri(`1)
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetID(VDS.RDF.INode)
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetID(VDS.RDF.INode,System.Boolean)
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetValue(VDS.RDF.IGraph,`0)
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.LoadGraphVirtual(VDS.RDF.IGraph,System.Uri)
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.NullID
  langs:
  - csharp
  - vb
  name: IVirtualRdfProvider<TNodeID, TGraphID>
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IVirtualRdfProvider
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nA Virtual RDF Provider is a provider that transforms materialised values into virtual ID values.  These virtual values can be used to do much faster term equality checking and to minimise memory usage when accessing out of memory data.\n"
  remarks: "\n<p>\nAn implementation of this is typically in addition to a more general RDF store implementation (such as an <xref href=\"VDS.RDF.Storage.IStorageProvider\" data-throw-if-not-resolved=\"false\"></xref>) and was originally designed and intended for use in creating <xref href=\"VDS.RDF.Query.Datasets.ISparqlDataset\" data-throw-if-not-resolved=\"false\"></xref> instances which allow out of memory data to be queried more efficiently.\n</p>\n<p>\nIt is expected that most implementations will use a cache to ensure that repeated transformations are as fast as possible.\n</p>\n<h3>Important Note re: Blank Nodes</h3>\n<p>\nIn order for code that uses this class to function correctly it must be ensured that IDs issued for Blank Nodes are graph scoped, as such a specific method for converting Blank Nodes into Virtual Node IDs is given.\n</p>\n"
  example: []
  syntax:
    content: public interface IVirtualRdfProvider<TNodeID, TGraphID>
    typeParameters:
    - id: TNodeID
      description: Node ID Type.
    - id: TGraphID
      description: Graph ID Type.
    content.vb: Public Interface IVirtualRdfProvider(Of TNodeID, TGraphID)
  extensionMethods:
  - VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.VDS.RDF.Extensions.AsEnumerable``1
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID)
  name.vb: IVirtualRdfProvider(Of TNodeID, TGraphID)
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetValue(VDS.RDF.IGraph,`0)
  commentId: M:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetValue(VDS.RDF.IGraph,`0)
  id: GetValue(VDS.RDF.IGraph,`0)
  parent: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  langs:
  - csharp
  - vb
  name: GetValue(IGraph, TNodeID)
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetValue(IGraph, TNodeID)
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetValue(VDS.RDF.IGraph, TNodeID)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetValue
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGiven a Node ID returns the materialised value in the given Graph.\n"
  example: []
  syntax:
    content: INode GetValue(IGraph g, TNodeID id)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to create the Node in.
    - id: id
      type: '{TNodeID}'
      description: Node ID.
    return:
      type: VDS.RDF.INode
      description: ''
    content.vb: Function GetValue(g As IGraph, id As TNodeID) As INode
  overload: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetValue*
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetValue(IGraph, TNodeID)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetValue(VDS.RDF.IGraph, TNodeID)
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphUri(`1)
  commentId: M:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphUri(`1)
  id: GetGraphUri(`1)
  parent: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  langs:
  - csharp
  - vb
  name: GetGraphUri(TGraphID)
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphUri(TGraphID)
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphUri(TGraphID)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetGraphUri
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGiven a Graph ID returns the value of the Graph URI.\n"
  example: []
  syntax:
    content: Uri GetGraphUri(TGraphID id)
    parameters:
    - id: id
      type: '{TGraphID}'
      description: Graph ID.
    return:
      type: System.Uri
      description: ''
    content.vb: Function GetGraphUri(id As TGraphID) As Uri
  overload: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphUri*
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphUri(TGraphID)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphUri(TGraphID)
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetID(VDS.RDF.INode)
  commentId: M:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetID(VDS.RDF.INode)
  id: GetID(VDS.RDF.INode)
  parent: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  langs:
  - csharp
  - vb
  name: GetID(INode)
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetID(INode)
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetID(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetID
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 71
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGiven a non-blank Node returns the Node ID.\n"
  remarks: "\nShould function as equivalent to the two argument version with the <strong>createIfNotExists</strong> parameter set to false.\n"
  example: []
  syntax:
    content: TNodeID GetID(INode value)
    parameters:
    - id: value
      type: VDS.RDF.INode
      description: Node.
    return:
      type: '{TNodeID}'
    content.vb: Function GetID(value As INode) As TNodeID
  overload: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetID*
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetID(INode)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetID(VDS.RDF.INode)
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID(VDS.RDF.IGraph)
  id: GetGraphID(VDS.RDF.IGraph)
  parent: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  langs:
  - csharp
  - vb
  name: GetGraphID(IGraph)
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphID(IGraph)
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphID(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetGraphID
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 81
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the Graph ID for a Graph.\n"
  remarks: "\nShould function as equivalent to the two argument version with the <strong>createIfNotExists</strong> parameter set to false.\n"
  example: []
  syntax:
    content: TGraphID GetGraphID(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: '{TGraphID}'
      description: ''
    content.vb: Function GetGraphID(g As IGraph) As TGraphID
  overload: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID*
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphID(IGraph)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphID(VDS.RDF.IGraph)
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID(VDS.RDF.IGraph,System.Boolean)
  id: GetGraphID(VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  langs:
  - csharp
  - vb
  name: GetGraphID(IGraph, Boolean)
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphID(IGraph, Boolean)
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphID(VDS.RDF.IGraph, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetGraphID
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 89
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the Graph ID for a Graph creating it if necessary.\n"
  example: []
  syntax:
    content: TGraphID GetGraphID(IGraph g, bool createIfNotExists)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: createIfNotExists
      type: System.Boolean
      description: Determines whether to create a new Graph ID if there is not already one for the given Graph.
    return:
      type: '{TGraphID}'
      description: ''
    content.vb: Function GetGraphID(g As IGraph, createIfNotExists As Boolean) As TGraphID
  overload: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID*
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphID(IGraph, Boolean)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphID(VDS.RDF.IGraph, System.Boolean)
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID(System.Uri)
  commentId: M:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID(System.Uri)
  id: GetGraphID(System.Uri)
  parent: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  langs:
  - csharp
  - vb
  name: GetGraphID(Uri)
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphID(Uri)
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphID(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetGraphID
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 99
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the Graph ID for a Graph URI.\n"
  remarks: "\nShould function as equivalent to the two argument version with the <strong>createIfNotExists</strong> parameter set to false.\n"
  example: []
  syntax:
    content: TGraphID GetGraphID(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: '{TGraphID}'
      description: ''
    content.vb: Function GetGraphID(graphUri As Uri) As TGraphID
  overload: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID*
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphID(Uri)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphID(System.Uri)
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID(System.Uri,System.Boolean)
  commentId: M:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID(System.Uri,System.Boolean)
  id: GetGraphID(System.Uri,System.Boolean)
  parent: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  langs:
  - csharp
  - vb
  name: GetGraphID(Uri, Boolean)
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphID(Uri, Boolean)
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphID(System.Uri, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetGraphID
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 107
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the Graph ID for a Graph URI.\n"
  example: []
  syntax:
    content: TGraphID GetGraphID(Uri graphUri, bool createIfNotExists)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    - id: createIfNotExists
      type: System.Boolean
      description: Determines whether to create a new Graph ID if there is not already one for the given Graph URI.
    return:
      type: '{TGraphID}'
      description: ''
    content.vb: Function GetGraphID(graphUri As Uri, createIfNotExists As Boolean) As TGraphID
  overload: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID*
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphID(Uri, Boolean)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphID(System.Uri, System.Boolean)
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetID(VDS.RDF.INode,System.Boolean)
  commentId: M:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetID(VDS.RDF.INode,System.Boolean)
  id: GetID(VDS.RDF.INode,System.Boolean)
  parent: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  langs:
  - csharp
  - vb
  name: GetID(INode, Boolean)
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetID(INode, Boolean)
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetID(VDS.RDF.INode, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetID
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 115
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGiven a non-blank Node returns the Node ID.\n"
  example: []
  syntax:
    content: TNodeID GetID(INode value, bool createIfNotExists)
    parameters:
    - id: value
      type: VDS.RDF.INode
      description: Node.
    - id: createIfNotExists
      type: System.Boolean
      description: Determines whether to create a new Node ID if there is not already one for the given value.
    return:
      type: '{TNodeID}'
      description: ''
    content.vb: Function GetID(value As INode, createIfNotExists As Boolean) As TNodeID
  overload: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetID*
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetID(INode, Boolean)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetID(VDS.RDF.INode, System.Boolean)
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetBlankNodeID(VDS.RDF.IBlankNode,System.Boolean)
  commentId: M:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetBlankNodeID(VDS.RDF.IBlankNode,System.Boolean)
  id: GetBlankNodeID(VDS.RDF.IBlankNode,System.Boolean)
  parent: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  langs:
  - csharp
  - vb
  name: GetBlankNodeID(IBlankNode, Boolean)
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetBlankNodeID(IBlankNode, Boolean)
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetBlankNodeID(VDS.RDF.IBlankNode, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetBlankNodeID
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 123
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGiven a Blank Node returns a Graph scoped Node ID.\n"
  example: []
  syntax:
    content: TNodeID GetBlankNodeID(IBlankNode value, bool createIfNotExists)
    parameters:
    - id: value
      type: VDS.RDF.IBlankNode
      description: Blank Node.
    - id: createIfNotExists
      type: System.Boolean
      description: Determines whether to create a new Node ID if there is not already one for the given value.
    return:
      type: '{TNodeID}'
      description: ''
    content.vb: Function GetBlankNodeID(value As IBlankNode, createIfNotExists As Boolean) As TNodeID
  overload: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetBlankNodeID*
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetBlankNodeID(IBlankNode, Boolean)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetBlankNodeID(VDS.RDF.IBlankNode, System.Boolean)
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetBlankNodeID(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetBlankNodeID(VDS.RDF.IBlankNode)
  id: GetBlankNodeID(VDS.RDF.IBlankNode)
  parent: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  langs:
  - csharp
  - vb
  name: GetBlankNodeID(IBlankNode)
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetBlankNodeID(IBlankNode)
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetBlankNodeID(VDS.RDF.IBlankNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetBlankNodeID
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 133
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGiven a Blank Node returns a Graph scoped Node ID.\n"
  remarks: "\nShould function as equivalent to the two argument version with the <strong>createIfNotExists</strong> parameter set to false.\n"
  example: []
  syntax:
    content: TNodeID GetBlankNodeID(IBlankNode value)
    parameters:
    - id: value
      type: VDS.RDF.IBlankNode
      description: Blank Node.
    return:
      type: '{TNodeID}'
      description: ''
    content.vb: Function GetBlankNodeID(value As IBlankNode) As TNodeID
  overload: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetBlankNodeID*
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetBlankNodeID(IBlankNode)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetBlankNodeID(VDS.RDF.IBlankNode)
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.NullID
  commentId: P:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.NullID
  id: NullID
  parent: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  langs:
  - csharp
  - vb
  name: NullID
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.NullID
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.NullID
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NullID
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 138
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nGets the Node ID that is used to indicate that a Node does not exist in the underlying storage.\n"
  example: []
  syntax:
    content: TNodeID NullID { get; }
    parameters: []
    return:
      type: '{TNodeID}'
    content.vb: ReadOnly Property NullID As TNodeID
  overload: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.NullID*
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).NullID
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).NullID
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.LoadGraphVirtual(VDS.RDF.IGraph,System.Uri)
  commentId: M:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.LoadGraphVirtual(VDS.RDF.IGraph,System.Uri)
  id: LoadGraphVirtual(VDS.RDF.IGraph,System.Uri)
  parent: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2
  langs:
  - csharp
  - vb
  name: LoadGraphVirtual(IGraph, Uri)
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.LoadGraphVirtual(IGraph, Uri)
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.LoadGraphVirtual(VDS.RDF.IGraph, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadGraphVirtual
    path: Libraries/dotNetRDF/Storage/Virtualisation/IVirtualRdfProvider.cs
    startLine: 148
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nLoads a Graph creating all the Triples with virtual node values.\n"
  example: []
  syntax:
    content: void LoadGraphVirtual(IGraph g, Uri graphUri)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: graphUri
      type: System.Uri
      description: URI of the Graph to load.
    content.vb: Sub LoadGraphVirtual(g As IGraph, graphUri As Uri)
  overload: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.LoadGraphVirtual*
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).LoadGraphVirtual(IGraph, Uri)
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).LoadGraphVirtual(VDS.RDF.IGraph, System.Uri)
references:
- uid: VDS.RDF.Storage.IStorageProvider
  commentId: T:VDS.RDF.Storage.IStorageProvider
  parent: VDS.RDF.Storage
  name: IStorageProvider
  nameWithType: IStorageProvider
  fullName: VDS.RDF.Storage.IStorageProvider
- uid: VDS.RDF.Query.Datasets.ISparqlDataset
  commentId: T:VDS.RDF.Query.Datasets.ISparqlDataset
  parent: VDS.RDF.Query.Datasets
  name: ISparqlDataset
  nameWithType: ISparqlDataset
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset
- uid: VDS.RDF.Storage.Virtualisation
  commentId: N:VDS.RDF.Storage.Virtualisation
  name: VDS.RDF.Storage.Virtualisation
  nameWithType: VDS.RDF.Storage.Virtualisation
  fullName: VDS.RDF.Storage.Virtualisation
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IVirtualRdfProvider<TNodeID, TGraphID>>()
  nameWithType: Extensions.AsEnumerable<IVirtualRdfProvider<TNodeID, TGraphID>>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>>()
  nameWithType.vb: Extensions.AsEnumerable(Of IVirtualRdfProvider(Of TNodeID, TGraphID))()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID))()
  name.vb: AsEnumerable(Of IVirtualRdfProvider(Of TNodeID, TGraphID))()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IVirtualRdfProvider<TNodeID, TGraphID>>
    nameWithType: Extensions.AsEnumerable<IVirtualRdfProvider<TNodeID, TGraphID>>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IVirtualRdfProvider(Of TNodeID, TGraphID))
    nameWithType: Extensions.AsEnumerable(Of IVirtualRdfProvider(Of TNodeID, TGraphID))
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage
  commentId: N:VDS.RDF.Storage
  name: VDS.RDF.Storage
  nameWithType: VDS.RDF.Storage
  fullName: VDS.RDF.Storage
- uid: VDS.RDF.Query.Datasets
  commentId: N:VDS.RDF.Query.Datasets
  name: VDS.RDF.Query.Datasets
  nameWithType: VDS.RDF.Query.Datasets
  fullName: VDS.RDF.Query.Datasets
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetValue*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetValue
  name: GetValue
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetValue
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetValue
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetValue
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetValue
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: '{TNodeID}'
  commentId: '!:TNodeID'
  definition: TNodeID
  name: TNodeID
  nameWithType: TNodeID
  fullName: TNodeID
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: TNodeID
  name: TNodeID
  nameWithType: TNodeID
  fullName: TNodeID
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphUri*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphUri
  name: GetGraphUri
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphUri
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphUri
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphUri
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphUri
- uid: '{TGraphID}'
  commentId: '!:TGraphID'
  definition: TGraphID
  name: TGraphID
  nameWithType: TGraphID
  fullName: TGraphID
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: TGraphID
  name: TGraphID
  nameWithType: TGraphID
  fullName: TGraphID
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetID*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetID
  name: GetID
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetID
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetID
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetID
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetID
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetGraphID
  name: GetGraphID
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphID
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetGraphID
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphID
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetGraphID
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetBlankNodeID*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.GetBlankNodeID
  name: GetBlankNodeID
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.GetBlankNodeID
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.GetBlankNodeID
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).GetBlankNodeID
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).GetBlankNodeID
- uid: VDS.RDF.IBlankNode
  commentId: T:VDS.RDF.IBlankNode
  parent: VDS.RDF
  name: IBlankNode
  nameWithType: IBlankNode
  fullName: VDS.RDF.IBlankNode
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.NullID*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.NullID
  name: NullID
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.NullID
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.NullID
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).NullID
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).NullID
- uid: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.LoadGraphVirtual*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider`2.LoadGraphVirtual
  name: LoadGraphVirtual
  nameWithType: IVirtualRdfProvider<TNodeID, TGraphID>.LoadGraphVirtual
  fullName: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider<TNodeID, TGraphID>.LoadGraphVirtual
  nameWithType.vb: IVirtualRdfProvider(Of TNodeID, TGraphID).LoadGraphVirtual
  fullName.vb: VDS.RDF.Storage.Virtualisation.IVirtualRdfProvider(Of TNodeID, TGraphID).LoadGraphVirtual
shouldSkipMarkup: true
