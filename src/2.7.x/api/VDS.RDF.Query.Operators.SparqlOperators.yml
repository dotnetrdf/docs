### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Operators.SparqlOperators
  commentId: T:VDS.RDF.Query.Operators.SparqlOperators
  id: SparqlOperators
  parent: VDS.RDF.Query.Operators
  children:
  - VDS.RDF.Query.Operators.SparqlOperators.AddOperator(VDS.RDF.Query.Operators.ISparqlOperator)
  - VDS.RDF.Query.Operators.SparqlOperators.GetOperators
  - VDS.RDF.Query.Operators.SparqlOperators.GetOperators(VDS.RDF.Query.Operators.SparqlOperatorType)
  - VDS.RDF.Query.Operators.SparqlOperators.IsRegistered(VDS.RDF.Query.Operators.ISparqlOperator)
  - VDS.RDF.Query.Operators.SparqlOperators.RemoveOperator(VDS.RDF.Query.Operators.ISparqlOperator)
  - VDS.RDF.Query.Operators.SparqlOperators.RemoveOperatorByType(VDS.RDF.Query.Operators.ISparqlOperator)
  - VDS.RDF.Query.Operators.SparqlOperators.Reset
  - VDS.RDF.Query.Operators.SparqlOperators.TryGetOperator(VDS.RDF.Query.Operators.SparqlOperatorType,VDS.RDF.Query.Operators.ISparqlOperator@,VDS.RDF.Nodes.IValuedNode[])
  langs:
  - csharp
  - vb
  name: SparqlOperators
  nameWithType: SparqlOperators
  fullName: VDS.RDF.Query.Operators.SparqlOperators
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlOperators
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nRegistry of SPARQL Operators.\n"
  example: []
  syntax:
    content: public static class SparqlOperators
    content.vb: Public Module SparqlOperators
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Query.Operators.SparqlOperators.AddOperator(VDS.RDF.Query.Operators.ISparqlOperator)
  commentId: M:VDS.RDF.Query.Operators.SparqlOperators.AddOperator(VDS.RDF.Query.Operators.ISparqlOperator)
  id: AddOperator(VDS.RDF.Query.Operators.ISparqlOperator)
  parent: VDS.RDF.Query.Operators.SparqlOperators
  langs:
  - csharp
  - vb
  name: AddOperator(ISparqlOperator)
  nameWithType: SparqlOperators.AddOperator(ISparqlOperator)
  fullName: VDS.RDF.Query.Operators.SparqlOperators.AddOperator(VDS.RDF.Query.Operators.ISparqlOperator)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddOperator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
    startLine: 80
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nRegisters a new operator.\n"
  example: []
  syntax:
    content: public static void AddOperator(ISparqlOperator op)
    parameters:
    - id: op
      type: VDS.RDF.Query.Operators.ISparqlOperator
      description: Operator.
    content.vb: Public Shared Sub AddOperator(op As ISparqlOperator)
  overload: VDS.RDF.Query.Operators.SparqlOperators.AddOperator*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Operators.SparqlOperators.RemoveOperator(VDS.RDF.Query.Operators.ISparqlOperator)
  commentId: M:VDS.RDF.Query.Operators.SparqlOperators.RemoveOperator(VDS.RDF.Query.Operators.ISparqlOperator)
  id: RemoveOperator(VDS.RDF.Query.Operators.ISparqlOperator)
  parent: VDS.RDF.Query.Operators.SparqlOperators
  langs:
  - csharp
  - vb
  name: RemoveOperator(ISparqlOperator)
  nameWithType: SparqlOperators.RemoveOperator(ISparqlOperator)
  fullName: VDS.RDF.Query.Operators.SparqlOperators.RemoveOperator(VDS.RDF.Query.Operators.ISparqlOperator)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RemoveOperator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
    startLine: 93
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nRemoves the registration of an operator by instance reference.\n"
  example: []
  syntax:
    content: public static void RemoveOperator(ISparqlOperator op)
    parameters:
    - id: op
      type: VDS.RDF.Query.Operators.ISparqlOperator
      description: Operator Reference.
    content.vb: Public Shared Sub RemoveOperator(op As ISparqlOperator)
  overload: VDS.RDF.Query.Operators.SparqlOperators.RemoveOperator*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Operators.SparqlOperators.RemoveOperatorByType(VDS.RDF.Query.Operators.ISparqlOperator)
  commentId: M:VDS.RDF.Query.Operators.SparqlOperators.RemoveOperatorByType(VDS.RDF.Query.Operators.ISparqlOperator)
  id: RemoveOperatorByType(VDS.RDF.Query.Operators.ISparqlOperator)
  parent: VDS.RDF.Query.Operators.SparqlOperators
  langs:
  - csharp
  - vb
  name: RemoveOperatorByType(ISparqlOperator)
  nameWithType: SparqlOperators.RemoveOperatorByType(ISparqlOperator)
  fullName: VDS.RDF.Query.Operators.SparqlOperators.RemoveOperatorByType(VDS.RDF.Query.Operators.ISparqlOperator)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RemoveOperatorByType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
    startLine: 106
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nRemoves the registration of an operator by instance type of the operator.\n"
  example: []
  syntax:
    content: public static void RemoveOperatorByType(ISparqlOperator op)
    parameters:
    - id: op
      type: VDS.RDF.Query.Operators.ISparqlOperator
      description: Operator.
    content.vb: Public Shared Sub RemoveOperatorByType(op As ISparqlOperator)
  overload: VDS.RDF.Query.Operators.SparqlOperators.RemoveOperatorByType*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Operators.SparqlOperators.Reset
  commentId: M:VDS.RDF.Query.Operators.SparqlOperators.Reset
  id: Reset
  parent: VDS.RDF.Query.Operators.SparqlOperators
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: SparqlOperators.Reset()
  fullName: VDS.RDF.Query.Operators.SparqlOperators.Reset()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Reset
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
    startLine: 118
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nResets Operator registry to default state.\n"
  example: []
  syntax:
    content: public static void Reset()
    content.vb: Public Shared Sub Reset
  overload: VDS.RDF.Query.Operators.SparqlOperators.Reset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Operators.SparqlOperators.IsRegistered(VDS.RDF.Query.Operators.ISparqlOperator)
  commentId: M:VDS.RDF.Query.Operators.SparqlOperators.IsRegistered(VDS.RDF.Query.Operators.ISparqlOperator)
  id: IsRegistered(VDS.RDF.Query.Operators.ISparqlOperator)
  parent: VDS.RDF.Query.Operators.SparqlOperators
  langs:
  - csharp
  - vb
  name: IsRegistered(ISparqlOperator)
  nameWithType: SparqlOperators.IsRegistered(ISparqlOperator)
  fullName: VDS.RDF.Query.Operators.SparqlOperators.IsRegistered(VDS.RDF.Query.Operators.ISparqlOperator)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsRegistered
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
    startLine: 139
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nReturns whether the given operator is registered.\n"
  remarks: "\nChecking is done both by reference and instance type so you can check if an operator is registered even if you don&apos;t have the actual reference to the instance that registered.\n"
  example: []
  syntax:
    content: public static bool IsRegistered(ISparqlOperator op)
    parameters:
    - id: op
      type: VDS.RDF.Query.Operators.ISparqlOperator
      description: Operator.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsRegistered(op As ISparqlOperator) As Boolean
  overload: VDS.RDF.Query.Operators.SparqlOperators.IsRegistered*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Operators.SparqlOperators.GetOperators
  commentId: M:VDS.RDF.Query.Operators.SparqlOperators.GetOperators
  id: GetOperators
  parent: VDS.RDF.Query.Operators.SparqlOperators
  langs:
  - csharp
  - vb
  name: GetOperators()
  nameWithType: SparqlOperators.GetOperators()
  fullName: VDS.RDF.Query.Operators.SparqlOperators.GetOperators()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetOperators
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
    startLine: 152
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nGets all registered Operators.\n"
  example: []
  syntax:
    content: public static IEnumerable<ISparqlOperator> GetOperators()
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Operators.ISparqlOperator}
      description: ''
    content.vb: Public Shared Function GetOperators As IEnumerable(Of ISparqlOperator)
  overload: VDS.RDF.Query.Operators.SparqlOperators.GetOperators*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Operators.SparqlOperators.GetOperators(VDS.RDF.Query.Operators.SparqlOperatorType)
  commentId: M:VDS.RDF.Query.Operators.SparqlOperators.GetOperators(VDS.RDF.Query.Operators.SparqlOperatorType)
  id: GetOperators(VDS.RDF.Query.Operators.SparqlOperatorType)
  parent: VDS.RDF.Query.Operators.SparqlOperators
  langs:
  - csharp
  - vb
  name: GetOperators(SparqlOperatorType)
  nameWithType: SparqlOperators.GetOperators(SparqlOperatorType)
  fullName: VDS.RDF.Query.Operators.SparqlOperators.GetOperators(VDS.RDF.Query.Operators.SparqlOperatorType)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetOperators
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
    startLine: 168
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nGets all registered operators for the given Operator Type.\n"
  example: []
  syntax:
    content: public static IEnumerable<ISparqlOperator> GetOperators(SparqlOperatorType type)
    parameters:
    - id: type
      type: VDS.RDF.Query.Operators.SparqlOperatorType
      description: Operator Type.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Operators.ISparqlOperator}
      description: ''
    content.vb: Public Shared Function GetOperators(type As SparqlOperatorType) As IEnumerable(Of ISparqlOperator)
  overload: VDS.RDF.Query.Operators.SparqlOperators.GetOperators*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Operators.SparqlOperators.TryGetOperator(VDS.RDF.Query.Operators.SparqlOperatorType,VDS.RDF.Query.Operators.ISparqlOperator@,VDS.RDF.Nodes.IValuedNode[])
  commentId: M:VDS.RDF.Query.Operators.SparqlOperators.TryGetOperator(VDS.RDF.Query.Operators.SparqlOperatorType,VDS.RDF.Query.Operators.ISparqlOperator@,VDS.RDF.Nodes.IValuedNode[])
  id: TryGetOperator(VDS.RDF.Query.Operators.SparqlOperatorType,VDS.RDF.Query.Operators.ISparqlOperator@,VDS.RDF.Nodes.IValuedNode[])
  parent: VDS.RDF.Query.Operators.SparqlOperators
  langs:
  - csharp
  - vb
  name: TryGetOperator(SparqlOperatorType, out ISparqlOperator, IValuedNode[])
  nameWithType: SparqlOperators.TryGetOperator(SparqlOperatorType, out ISparqlOperator, IValuedNode[])
  fullName: VDS.RDF.Query.Operators.SparqlOperators.TryGetOperator(VDS.RDF.Query.Operators.SparqlOperatorType, out VDS.RDF.Query.Operators.ISparqlOperator, VDS.RDF.Nodes.IValuedNode[])
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryGetOperator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Operators/SparqlOperator.cs
    startLine: 184
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nTries to return the operator which applies for the given inputs.\n"
  example: []
  syntax:
    content: public static bool TryGetOperator(SparqlOperatorType type, out ISparqlOperator op, params IValuedNode[] ns)
    parameters:
    - id: type
      type: VDS.RDF.Query.Operators.SparqlOperatorType
      description: Operator Type.
    - id: op
      type: VDS.RDF.Query.Operators.ISparqlOperator
      description: Operator.
    - id: ns
      type: VDS.RDF.Nodes.IValuedNode[]
      description: Inputs.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TryGetOperator(type As SparqlOperatorType, ByRef op As ISparqlOperator, ParamArray ns As IValuedNode()) As Boolean
  overload: VDS.RDF.Query.Operators.SparqlOperators.TryGetOperator*
  nameWithType.vb: SparqlOperators.TryGetOperator(SparqlOperatorType, ByRef ISparqlOperator, IValuedNode())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.Query.Operators.SparqlOperators.TryGetOperator(VDS.RDF.Query.Operators.SparqlOperatorType, ByRef VDS.RDF.Query.Operators.ISparqlOperator, VDS.RDF.Nodes.IValuedNode())
  name.vb: TryGetOperator(SparqlOperatorType, ByRef ISparqlOperator, IValuedNode())
references:
- uid: VDS.RDF.Query.Operators
  commentId: N:VDS.RDF.Query.Operators
  name: VDS.RDF.Query.Operators
  nameWithType: VDS.RDF.Query.Operators
  fullName: VDS.RDF.Query.Operators
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Operators.SparqlOperators.AddOperator*
  commentId: Overload:VDS.RDF.Query.Operators.SparqlOperators.AddOperator
  name: AddOperator
  nameWithType: SparqlOperators.AddOperator
  fullName: VDS.RDF.Query.Operators.SparqlOperators.AddOperator
- uid: VDS.RDF.Query.Operators.ISparqlOperator
  commentId: T:VDS.RDF.Query.Operators.ISparqlOperator
  parent: VDS.RDF.Query.Operators
  name: ISparqlOperator
  nameWithType: ISparqlOperator
  fullName: VDS.RDF.Query.Operators.ISparqlOperator
- uid: VDS.RDF.Query.Operators.SparqlOperators.RemoveOperator*
  commentId: Overload:VDS.RDF.Query.Operators.SparqlOperators.RemoveOperator
  name: RemoveOperator
  nameWithType: SparqlOperators.RemoveOperator
  fullName: VDS.RDF.Query.Operators.SparqlOperators.RemoveOperator
- uid: VDS.RDF.Query.Operators.SparqlOperators.RemoveOperatorByType*
  commentId: Overload:VDS.RDF.Query.Operators.SparqlOperators.RemoveOperatorByType
  name: RemoveOperatorByType
  nameWithType: SparqlOperators.RemoveOperatorByType
  fullName: VDS.RDF.Query.Operators.SparqlOperators.RemoveOperatorByType
- uid: VDS.RDF.Query.Operators.SparqlOperators.Reset*
  commentId: Overload:VDS.RDF.Query.Operators.SparqlOperators.Reset
  name: Reset
  nameWithType: SparqlOperators.Reset
  fullName: VDS.RDF.Query.Operators.SparqlOperators.Reset
- uid: VDS.RDF.Query.Operators.SparqlOperators.IsRegistered*
  commentId: Overload:VDS.RDF.Query.Operators.SparqlOperators.IsRegistered
  name: IsRegistered
  nameWithType: SparqlOperators.IsRegistered
  fullName: VDS.RDF.Query.Operators.SparqlOperators.IsRegistered
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Operators.SparqlOperators.GetOperators*
  commentId: Overload:VDS.RDF.Query.Operators.SparqlOperators.GetOperators
  name: GetOperators
  nameWithType: SparqlOperators.GetOperators
  fullName: VDS.RDF.Query.Operators.SparqlOperators.GetOperators
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Operators.ISparqlOperator}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.Operators.ISparqlOperator}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISparqlOperator>
  nameWithType: IEnumerable<ISparqlOperator>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.Operators.ISparqlOperator>
  nameWithType.vb: IEnumerable(Of ISparqlOperator)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Operators.ISparqlOperator)
  name.vb: IEnumerable(Of ISparqlOperator)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Operators.ISparqlOperator
    name: ISparqlOperator
    nameWithType: ISparqlOperator
    fullName: VDS.RDF.Query.Operators.ISparqlOperator
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Operators.ISparqlOperator
    name: ISparqlOperator
    nameWithType: ISparqlOperator
    fullName: VDS.RDF.Query.Operators.ISparqlOperator
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Operators.SparqlOperatorType
  commentId: T:VDS.RDF.Query.Operators.SparqlOperatorType
  parent: VDS.RDF.Query.Operators
  name: SparqlOperatorType
  nameWithType: SparqlOperatorType
  fullName: VDS.RDF.Query.Operators.SparqlOperatorType
- uid: VDS.RDF.Query.Operators.SparqlOperators.TryGetOperator*
  commentId: Overload:VDS.RDF.Query.Operators.SparqlOperators.TryGetOperator
  name: TryGetOperator
  nameWithType: SparqlOperators.TryGetOperator
  fullName: VDS.RDF.Query.Operators.SparqlOperators.TryGetOperator
- uid: VDS.RDF.Nodes.IValuedNode[]
  isExternal: true
  name: IValuedNode[]
  nameWithType: IValuedNode[]
  fullName: VDS.RDF.Nodes.IValuedNode[]
  nameWithType.vb: IValuedNode()
  fullName.vb: VDS.RDF.Nodes.IValuedNode()
  name.vb: IValuedNode()
  spec.csharp:
  - uid: VDS.RDF.Nodes.IValuedNode
    name: IValuedNode
    nameWithType: IValuedNode
    fullName: VDS.RDF.Nodes.IValuedNode
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: VDS.RDF.Nodes.IValuedNode
    name: IValuedNode
    nameWithType: IValuedNode
    fullName: VDS.RDF.Nodes.IValuedNode
  - name: ()
    nameWithType: ()
    fullName: ()
