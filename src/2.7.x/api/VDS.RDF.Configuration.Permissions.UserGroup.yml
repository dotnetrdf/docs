### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Configuration.Permissions.UserGroup
  commentId: T:VDS.RDF.Configuration.Permissions.UserGroup
  id: UserGroup
  parent: VDS.RDF.Configuration.Permissions
  children:
  - VDS.RDF.Configuration.Permissions.UserGroup.#ctor
  - VDS.RDF.Configuration.Permissions.UserGroup.#ctor(System.Boolean)
  - VDS.RDF.Configuration.Permissions.UserGroup.AddAllowedAction(VDS.RDF.Configuration.Permissions.IPermission)
  - VDS.RDF.Configuration.Permissions.UserGroup.AddDeniedAction(VDS.RDF.Configuration.Permissions.IPermission)
  - VDS.RDF.Configuration.Permissions.UserGroup.AddUser(System.Net.NetworkCredential)
  - VDS.RDF.Configuration.Permissions.UserGroup.AllowGuests
  - VDS.RDF.Configuration.Permissions.UserGroup.HasMember(System.String)
  - VDS.RDF.Configuration.Permissions.UserGroup.HasMember(System.String,System.String)
  - VDS.RDF.Configuration.Permissions.UserGroup.IsActionPermitted(System.String)
  - VDS.RDF.Configuration.Permissions.UserGroup.PermissionModel
  langs:
  - csharp
  - vb
  name: UserGroup
  nameWithType: UserGroup
  fullName: VDS.RDF.Configuration.Permissions.UserGroup
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UserGroup
    path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nRepresents a Group of Users and the permissions they have to perform actions.\n"
  example: []
  syntax:
    content: public class UserGroup
    content.vb: Public Class UserGroup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Configuration.Permissions.UserGroup.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Configuration.Permissions.UserGroup.#ctor
  commentId: M:VDS.RDF.Configuration.Permissions.UserGroup.#ctor
  id: '#ctor'
  parent: VDS.RDF.Configuration.Permissions.UserGroup
  langs:
  - csharp
  - vb
  name: UserGroup()
  nameWithType: UserGroup.UserGroup()
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.UserGroup()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nCreates a new User Group.\n"
  example: []
  syntax:
    content: public UserGroup()
    content.vb: Public Sub New
  overload: VDS.RDF.Configuration.Permissions.UserGroup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Configuration.Permissions.UserGroup.#ctor(System.Boolean)
  commentId: M:VDS.RDF.Configuration.Permissions.UserGroup.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: VDS.RDF.Configuration.Permissions.UserGroup
  langs:
  - csharp
  - vb
  name: UserGroup(Boolean)
  nameWithType: UserGroup.UserGroup(Boolean)
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.UserGroup(System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nCreates a new User Group which may allow guests.\n"
  remarks: "\nIf guests are allowed then this Groups permissions apply to unauthenticated users.\n"
  example: []
  syntax:
    content: public UserGroup(bool allowGuest)
    parameters:
    - id: allowGuest
      type: System.Boolean
      description: Are guests allowed?.
    content.vb: Public Sub New(allowGuest As Boolean)
  overload: VDS.RDF.Configuration.Permissions.UserGroup.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Configuration.Permissions.UserGroup.AllowGuests
  commentId: P:VDS.RDF.Configuration.Permissions.UserGroup.AllowGuests
  id: AllowGuests
  parent: VDS.RDF.Configuration.Permissions.UserGroup
  langs:
  - csharp
  - vb
  name: AllowGuests
  nameWithType: UserGroup.AllowGuests
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.AllowGuests
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AllowGuests
    path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
    startLine: 67
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nGets/Sets whether Guests are allowed.\n"
  example: []
  syntax:
    content: public bool AllowGuests { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property AllowGuests As Boolean
  overload: VDS.RDF.Configuration.Permissions.UserGroup.AllowGuests*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Configuration.Permissions.UserGroup.PermissionModel
  commentId: P:VDS.RDF.Configuration.Permissions.UserGroup.PermissionModel
  id: PermissionModel
  parent: VDS.RDF.Configuration.Permissions.UserGroup
  langs:
  - csharp
  - vb
  name: PermissionModel
  nameWithType: UserGroup.PermissionModel
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.PermissionModel
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PermissionModel
    path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
    startLine: 82
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nGets/Sets the in-use Permission Model.\n"
  example: []
  syntax:
    content: public PermissionModel PermissionModel { get; set; }
    parameters: []
    return:
      type: VDS.RDF.Configuration.Permissions.PermissionModel
    content.vb: Public Property PermissionModel As PermissionModel
  overload: VDS.RDF.Configuration.Permissions.UserGroup.PermissionModel*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Configuration.Permissions.UserGroup.AddUser(System.Net.NetworkCredential)
  commentId: M:VDS.RDF.Configuration.Permissions.UserGroup.AddUser(System.Net.NetworkCredential)
  id: AddUser(System.Net.NetworkCredential)
  parent: VDS.RDF.Configuration.Permissions.UserGroup
  langs:
  - csharp
  - vb
  name: AddUser(NetworkCredential)
  nameWithType: UserGroup.AddUser(NetworkCredential)
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.AddUser(System.Net.NetworkCredential)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddUser
    path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
    startLine: 98
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nAdds a User to the Group.\n"
  example: []
  syntax:
    content: public void AddUser(NetworkCredential credentials)
    parameters:
    - id: credentials
      type: System.Net.NetworkCredential
      description: User Credentials.
    content.vb: Public Sub AddUser(credentials As NetworkCredential)
  overload: VDS.RDF.Configuration.Permissions.UserGroup.AddUser*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Configuration.Permissions.UserGroup.AddAllowedAction(VDS.RDF.Configuration.Permissions.IPermission)
  commentId: M:VDS.RDF.Configuration.Permissions.UserGroup.AddAllowedAction(VDS.RDF.Configuration.Permissions.IPermission)
  id: AddAllowedAction(VDS.RDF.Configuration.Permissions.IPermission)
  parent: VDS.RDF.Configuration.Permissions.UserGroup
  langs:
  - csharp
  - vb
  name: AddAllowedAction(IPermission)
  nameWithType: UserGroup.AddAllowedAction(IPermission)
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.AddAllowedAction(VDS.RDF.Configuration.Permissions.IPermission)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddAllowedAction
    path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
    startLine: 107
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nAdds an allow action permission to the Group.\n"
  example: []
  syntax:
    content: public void AddAllowedAction(IPermission permission)
    parameters:
    - id: permission
      type: VDS.RDF.Configuration.Permissions.IPermission
      description: Permission.
    content.vb: Public Sub AddAllowedAction(permission As IPermission)
  overload: VDS.RDF.Configuration.Permissions.UserGroup.AddAllowedAction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Configuration.Permissions.UserGroup.AddDeniedAction(VDS.RDF.Configuration.Permissions.IPermission)
  commentId: M:VDS.RDF.Configuration.Permissions.UserGroup.AddDeniedAction(VDS.RDF.Configuration.Permissions.IPermission)
  id: AddDeniedAction(VDS.RDF.Configuration.Permissions.IPermission)
  parent: VDS.RDF.Configuration.Permissions.UserGroup
  langs:
  - csharp
  - vb
  name: AddDeniedAction(IPermission)
  nameWithType: UserGroup.AddDeniedAction(IPermission)
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.AddDeniedAction(VDS.RDF.Configuration.Permissions.IPermission)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddDeniedAction
    path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
    startLine: 116
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nAdds a deny action permission to the Group.\n"
  example: []
  syntax:
    content: public void AddDeniedAction(IPermission permission)
    parameters:
    - id: permission
      type: VDS.RDF.Configuration.Permissions.IPermission
      description: Permission.
    content.vb: Public Sub AddDeniedAction(permission As IPermission)
  overload: VDS.RDF.Configuration.Permissions.UserGroup.AddDeniedAction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Configuration.Permissions.UserGroup.HasMember(System.String)
  commentId: M:VDS.RDF.Configuration.Permissions.UserGroup.HasMember(System.String)
  id: HasMember(System.String)
  parent: VDS.RDF.Configuration.Permissions.UserGroup
  langs:
  - csharp
  - vb
  name: HasMember(String)
  nameWithType: UserGroup.HasMember(String)
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.HasMember(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasMember
    path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
    startLine: 126
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nReturns whether the Group has a member with the given username.\n"
  example: []
  syntax:
    content: public bool HasMember(string username)
    parameters:
    - id: username
      type: System.String
      description: Username.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasMember(username As String) As Boolean
  overload: VDS.RDF.Configuration.Permissions.UserGroup.HasMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Configuration.Permissions.UserGroup.HasMember(System.String,System.String)
  commentId: M:VDS.RDF.Configuration.Permissions.UserGroup.HasMember(System.String,System.String)
  id: HasMember(System.String,System.String)
  parent: VDS.RDF.Configuration.Permissions.UserGroup
  langs:
  - csharp
  - vb
  name: HasMember(String, String)
  nameWithType: UserGroup.HasMember(String, String)
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.HasMember(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasMember
    path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
    startLine: 137
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nReturns whether the Group has a member with the given credentials.\n"
  example: []
  syntax:
    content: public bool HasMember(string username, string password)
    parameters:
    - id: username
      type: System.String
      description: Username.
    - id: password
      type: System.String
      description: Password.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasMember(username As String, password As String) As Boolean
  overload: VDS.RDF.Configuration.Permissions.UserGroup.HasMember*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Configuration.Permissions.UserGroup.IsActionPermitted(System.String)
  commentId: M:VDS.RDF.Configuration.Permissions.UserGroup.IsActionPermitted(System.String)
  id: IsActionPermitted(System.String)
  parent: VDS.RDF.Configuration.Permissions.UserGroup
  langs:
  - csharp
  - vb
  name: IsActionPermitted(String)
  nameWithType: UserGroup.IsActionPermitted(String)
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.IsActionPermitted(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsActionPermitted
    path: Libraries/dotNetRDF/Configuration/Permissions/UserGroup.cs
    startLine: 147
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nGets whether the Group permits the action.\n"
  example: []
  syntax:
    content: public bool IsActionPermitted(string action)
    parameters:
    - id: action
      type: System.String
      description: Action.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsActionPermitted(action As String) As Boolean
  overload: VDS.RDF.Configuration.Permissions.UserGroup.IsActionPermitted*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Configuration.Permissions
  commentId: N:VDS.RDF.Configuration.Permissions
  name: VDS.RDF.Configuration.Permissions
  nameWithType: VDS.RDF.Configuration.Permissions
  fullName: VDS.RDF.Configuration.Permissions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Configuration.Permissions.UserGroup.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<UserGroup>()
  nameWithType: Extensions.AsEnumerable<UserGroup>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Configuration.Permissions.UserGroup>()
  nameWithType.vb: Extensions.AsEnumerable(Of UserGroup)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Configuration.Permissions.UserGroup)()
  name.vb: AsEnumerable(Of UserGroup)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<UserGroup>
    nameWithType: Extensions.AsEnumerable<UserGroup>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Configuration.Permissions.UserGroup>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of UserGroup)
    nameWithType: Extensions.AsEnumerable(Of UserGroup)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Configuration.Permissions.UserGroup)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Configuration.Permissions.UserGroup.#ctor*
  commentId: Overload:VDS.RDF.Configuration.Permissions.UserGroup.#ctor
  name: UserGroup
  nameWithType: UserGroup.UserGroup
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.UserGroup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Configuration.Permissions.UserGroup.AllowGuests*
  commentId: Overload:VDS.RDF.Configuration.Permissions.UserGroup.AllowGuests
  name: AllowGuests
  nameWithType: UserGroup.AllowGuests
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.AllowGuests
- uid: VDS.RDF.Configuration.Permissions.UserGroup.PermissionModel*
  commentId: Overload:VDS.RDF.Configuration.Permissions.UserGroup.PermissionModel
  name: PermissionModel
  nameWithType: UserGroup.PermissionModel
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.PermissionModel
- uid: VDS.RDF.Configuration.Permissions.PermissionModel
  commentId: T:VDS.RDF.Configuration.Permissions.PermissionModel
  parent: VDS.RDF.Configuration.Permissions
  name: PermissionModel
  nameWithType: PermissionModel
  fullName: VDS.RDF.Configuration.Permissions.PermissionModel
- uid: VDS.RDF.Configuration.Permissions.UserGroup.AddUser*
  commentId: Overload:VDS.RDF.Configuration.Permissions.UserGroup.AddUser
  name: AddUser
  nameWithType: UserGroup.AddUser
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.AddUser
- uid: System.Net.NetworkCredential
  commentId: T:System.Net.NetworkCredential
  parent: System.Net
  isExternal: true
  name: NetworkCredential
  nameWithType: NetworkCredential
  fullName: System.Net.NetworkCredential
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: VDS.RDF.Configuration.Permissions.UserGroup.AddAllowedAction*
  commentId: Overload:VDS.RDF.Configuration.Permissions.UserGroup.AddAllowedAction
  name: AddAllowedAction
  nameWithType: UserGroup.AddAllowedAction
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.AddAllowedAction
- uid: VDS.RDF.Configuration.Permissions.IPermission
  commentId: T:VDS.RDF.Configuration.Permissions.IPermission
  parent: VDS.RDF.Configuration.Permissions
  name: IPermission
  nameWithType: IPermission
  fullName: VDS.RDF.Configuration.Permissions.IPermission
- uid: VDS.RDF.Configuration.Permissions.UserGroup.AddDeniedAction*
  commentId: Overload:VDS.RDF.Configuration.Permissions.UserGroup.AddDeniedAction
  name: AddDeniedAction
  nameWithType: UserGroup.AddDeniedAction
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.AddDeniedAction
- uid: VDS.RDF.Configuration.Permissions.UserGroup.HasMember*
  commentId: Overload:VDS.RDF.Configuration.Permissions.UserGroup.HasMember
  name: HasMember
  nameWithType: UserGroup.HasMember
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.HasMember
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Configuration.Permissions.UserGroup.IsActionPermitted*
  commentId: Overload:VDS.RDF.Configuration.Permissions.UserGroup.IsActionPermitted
  name: IsActionPermitted
  nameWithType: UserGroup.IsActionPermitted
  fullName: VDS.RDF.Configuration.Permissions.UserGroup.IsActionPermitted
shouldSkipMarkup: true
