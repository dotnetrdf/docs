### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  commentId: T:VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  id: ElementEvent
  parent: VDS.RDF.Parsing.Events.RdfXml
  children:
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor(System.String,System.String,System.String)
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor(System.String,System.String,System.String,System.String)
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor(System.String,System.String,System.String,System.String,VDS.RDF.Parsing.PositionInfo)
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor(System.String,System.String,System.String,VDS.RDF.Parsing.PositionInfo)
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Attributes
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.BaseUri
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Children
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Language
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ListCounter
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.LocalName
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Namespace
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.NamespaceAttributes
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ParseType
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.QName
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri(VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent)
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri(VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent,VDS.RDF.INamespaceMapper)
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Subject
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SubjectNode
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ToString
  langs:
  - csharp
  - vb
  name: ElementEvent
  nameWithType: ElementEvent
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ElementEvent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 155
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nEvent representing a Node from the XML Document.\n"
  example: []
  syntax:
    content: 'public class ElementEvent : BaseRdfXmlEvent, IRdfXmlEvent, IEvent'
    content.vb: >-
      Public Class ElementEvent
          Inherits BaseRdfXmlEvent
          Implements IRdfXmlEvent, IEvent
  inheritance:
  - System.Object
  - VDS.RDF.Parsing.Events.BaseEvent
  - VDS.RDF.Parsing.Events.BaseRdfXmlEvent
  implements:
  - VDS.RDF.Parsing.Events.IRdfXmlEvent
  - VDS.RDF.Parsing.Events.IEvent
  inheritedMembers:
  - VDS.RDF.Parsing.Events.BaseRdfXmlEvent.SourceXml
  - VDS.RDF.Parsing.Events.BaseEvent.EventType
  - VDS.RDF.Parsing.Events.BaseEvent.Position
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Parsing.Events.RdfXml.ElementEvent.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor(System.String,System.String,System.String,VDS.RDF.Parsing.PositionInfo)
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor(System.String,System.String,System.String,VDS.RDF.Parsing.PositionInfo)
  id: '#ctor(System.String,System.String,System.String,VDS.RDF.Parsing.PositionInfo)'
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: ElementEvent(String, String, String, PositionInfo)
  nameWithType: ElementEvent.ElementEvent(String, String, String, PositionInfo)
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ElementEvent(System.String, System.String, System.String, VDS.RDF.Parsing.PositionInfo)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 175
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nCreates a new Element Event.\n"
  example: []
  syntax:
    content: public ElementEvent(string qname, string baseUri, string sourceXml, PositionInfo pos)
    parameters:
    - id: qname
      type: System.String
      description: QName of the XML Node.
    - id: baseUri
      type: System.String
      description: Base Uri of the XML Node.
    - id: sourceXml
      type: System.String
      description: Source XML of the XML Node.
    - id: pos
      type: VDS.RDF.Parsing.PositionInfo
      description: Position Info.
    content.vb: Public Sub New(qname As String, baseUri As String, sourceXml As String, pos As PositionInfo)
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor(System.String,System.String,System.String)
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: ElementEvent(String, String, String)
  nameWithType: ElementEvent.ElementEvent(String, String, String)
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ElementEvent(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 201
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nCreates a new Element Event.\n"
  example: []
  syntax:
    content: public ElementEvent(string qname, string baseUri, string sourceXml)
    parameters:
    - id: qname
      type: System.String
      description: QName of the XML Node.
    - id: baseUri
      type: System.String
      description: Base Uri of the XML Node.
    - id: sourceXml
      type: System.String
      description: Source XML of the XML Node.
    content.vb: Public Sub New(qname As String, baseUri As String, sourceXml As String)
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor(System.String,System.String,System.String,System.String,VDS.RDF.Parsing.PositionInfo)
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor(System.String,System.String,System.String,System.String,VDS.RDF.Parsing.PositionInfo)
  id: '#ctor(System.String,System.String,System.String,System.String,VDS.RDF.Parsing.PositionInfo)'
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: ElementEvent(String, String, String, String, PositionInfo)
  nameWithType: ElementEvent.ElementEvent(String, String, String, String, PositionInfo)
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ElementEvent(System.String, System.String, System.String, System.String, VDS.RDF.Parsing.PositionInfo)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 212
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nCreates new Element Event.\n"
  example: []
  syntax:
    content: public ElementEvent(string localname, string ns, string baseUri, string sourceXml, PositionInfo pos)
    parameters:
    - id: localname
      type: System.String
      description: Local Name of the XML Node.
    - id: ns
      type: System.String
      description: Namespace Prefix of the XML Node.
    - id: baseUri
      type: System.String
      description: Base Uri of the XML Node.
    - id: sourceXml
      type: System.String
      description: Source XML of the XML Node.
    - id: pos
      type: VDS.RDF.Parsing.PositionInfo
      description: Position Info.
    content.vb: Public Sub New(localname As String, ns As String, baseUri As String, sourceXml As String, pos As PositionInfo)
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: ElementEvent(String, String, String, String)
  nameWithType: ElementEvent.ElementEvent(String, String, String, String)
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ElementEvent(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 227
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nCreates new Element Event.\n"
  example: []
  syntax:
    content: public ElementEvent(string localname, string ns, string baseUri, string sourceXml)
    parameters:
    - id: localname
      type: System.String
      description: Local Name of the XML Node.
    - id: ns
      type: System.String
      description: Namespace Prefix of the XML Node.
    - id: baseUri
      type: System.String
      description: Base Uri of the XML Node.
    - id: sourceXml
      type: System.String
      description: Source XML of the XML Node.
    content.vb: Public Sub New(localname As String, ns As String, baseUri As String, sourceXml As String)
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.LocalName
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.LocalName
  id: LocalName
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: LocalName
  nameWithType: ElementEvent.LocalName
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.LocalName
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LocalName
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 233
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets the Local Name of this Element Event.\n"
  example: []
  syntax:
    content: public string LocalName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LocalName As String
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.LocalName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Namespace
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Namespace
  id: Namespace
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: Namespace
  nameWithType: ElementEvent.Namespace
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Namespace
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Namespace
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 244
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets the Namespace of this Element Event.\n"
  example: []
  syntax:
    content: public string Namespace { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Namespace As String
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Namespace*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.QName
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.QName
  id: QName
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: QName
  nameWithType: ElementEvent.QName
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.QName
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QName
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 255
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets the QName of this Element Event.\n"
  example: []
  syntax:
    content: public string QName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property QName As String
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.QName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Children
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Children
  id: Children
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: Children
  nameWithType: ElementEvent.Children
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Children
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Children
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 267
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets the Child Element Events. \n"
  remarks: These correspond to the Child Nodes of the XML Node.
  example: []
  syntax:
    content: public List<IRdfXmlEvent> Children { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{VDS.RDF.Parsing.Events.IRdfXmlEvent}
    content.vb: Public ReadOnly Property Children As List(Of IRdfXmlEvent)
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Children*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.BaseUri
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.BaseUri
  id: BaseUri
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: ElementEvent.BaseUri
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.BaseUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 278
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets/Sets the Base Uri of the XML Node.\n"
  example: []
  syntax:
    content: public string BaseUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BaseUri As String
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.BaseUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Attributes
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Attributes
  id: Attributes
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: ElementEvent.Attributes
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Attributes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Attributes
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 294
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets the Attribute Events.\n"
  remarks: These correspond to the Attributes of the XML Node (with some exceptions as defined in the RDF/XML specification).
  example: []
  syntax:
    content: public List<AttributeEvent> Attributes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{VDS.RDF.Parsing.Events.RdfXml.AttributeEvent}
    content.vb: Public ReadOnly Property Attributes As List(Of AttributeEvent)
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Attributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.NamespaceAttributes
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.NamespaceAttributes
  id: NamespaceAttributes
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: NamespaceAttributes
  nameWithType: ElementEvent.NamespaceAttributes
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.NamespaceAttributes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NamespaceAttributes
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 308
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets the Namespace Attribute Events.\n"
  remarks: "\nThese correspond to all the Namespace Attributes of the XML Node.\n"
  example: []
  syntax:
    content: public List<NamespaceAttributeEvent> NamespaceAttributes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{VDS.RDF.Parsing.Events.RdfXml.NamespaceAttributeEvent}
    content.vb: Public ReadOnly Property NamespaceAttributes As List(Of NamespaceAttributeEvent)
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.NamespaceAttributes*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ListCounter
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ListCounter
  id: ListCounter
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: ListCounter
  nameWithType: ElementEvent.ListCounter
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ListCounter
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ListCounter
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 319
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets/Sets the List Counter.\n"
  example: []
  syntax:
    content: public int ListCounter { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ListCounter As Integer
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ListCounter*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Language
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Language
  id: Language
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: Language
  nameWithType: ElementEvent.Language
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Language
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Language
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 334
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets/Sets the Language of this Event.\n"
  example: []
  syntax:
    content: public string Language { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Language As String
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Language*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Subject
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Subject
  id: Subject
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: Subject
  nameWithType: ElementEvent.Subject
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Subject
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 350
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets/Sets the Subject Event of this Event.\n"
  remarks: Will be assigned according to the Parsing rules during the Parsing process and later used to generate a Subject Node.
  example: []
  syntax:
    content: public IRdfXmlEvent Subject { get; set; }
    parameters: []
    return:
      type: VDS.RDF.Parsing.Events.IRdfXmlEvent
    content.vb: Public Property Subject As IRdfXmlEvent
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Subject*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SubjectNode
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SubjectNode
  id: SubjectNode
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: SubjectNode
  nameWithType: ElementEvent.SubjectNode
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SubjectNode
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SubjectNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 366
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets/Sets the Subject Node of this Event.\n"
  remarks: Will be created from the Subject at some point during the Parsing process.
  example: []
  syntax:
    content: public INode SubjectNode { get; set; }
    parameters: []
    return:
      type: VDS.RDF.INode
    content.vb: Public Property SubjectNode As INode
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SubjectNode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ParseType
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ParseType
  id: ParseType
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: ParseType
  nameWithType: ElementEvent.ParseType
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ParseType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ParseType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 381
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets/Sets the Parse Type for this Event.\n"
  example: []
  syntax:
    content: public RdfXmlParseType ParseType { get; set; }
    parameters: []
    return:
      type: VDS.RDF.Parsing.RdfXmlParseType
    content.vb: Public Property ParseType As RdfXmlParseType
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ParseType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri(VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent)
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri(VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent)
  id: SetUri(VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent)
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: SetUri(UriReferenceEvent)
  nameWithType: ElementEvent.SetUri(UriReferenceEvent)
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri(VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 398
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nMethod which sets the Uri for this Element Event.\n"
  remarks: This can only be used on Elements which are rdf:li and thus need expanding into actual list elements according to List Expansion rules.  Attempting to set the Uri on any other Element Event will cause an Error message.
  example: []
  syntax:
    content: public void SetUri(UriReferenceEvent u)
    parameters:
    - id: u
      type: VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent
      description: Uri Reference to set Uri from.
    content.vb: Public Sub SetUri(u As UriReferenceEvent)
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri(VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent,VDS.RDF.INamespaceMapper)
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri(VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent,VDS.RDF.INamespaceMapper)
  id: SetUri(VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent,VDS.RDF.INamespaceMapper)
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: SetUri(UriReferenceEvent, INamespaceMapper)
  nameWithType: ElementEvent.SetUri(UriReferenceEvent, INamespaceMapper)
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri(VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent, VDS.RDF.INamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 420
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nMethod which sets the Uri for this Element Event.\n"
  remarks: This can only be used on Elements which are rdf:li and thus need expanding into actual list elements according to List Expansion rules.  Attempting to set the Uri on any other Element Event will cause an Error message.
  example: []
  syntax:
    content: public void SetUri(UriReferenceEvent u, INamespaceMapper nsMapper)
    parameters:
    - id: u
      type: VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent
      description: Uri Reference to set Uri from.
    - id: nsMapper
      type: VDS.RDF.INamespaceMapper
      description: Namespace prefix mappings to use for resolving the QName of this element event.
    content.vb: Public Sub SetUri(u As UriReferenceEvent, nsMapper As INamespaceMapper)
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ToString
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ToString
  id: ToString
  parent: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ElementEvent.ToString()
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 440
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets the String representation of the Event.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Parsing.Events.RdfXml
  commentId: N:VDS.RDF.Parsing.Events.RdfXml
  name: VDS.RDF.Parsing.Events.RdfXml
  nameWithType: VDS.RDF.Parsing.Events.RdfXml
  fullName: VDS.RDF.Parsing.Events.RdfXml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.Events.BaseEvent
  commentId: T:VDS.RDF.Parsing.Events.BaseEvent
  parent: VDS.RDF.Parsing.Events
  name: BaseEvent
  nameWithType: BaseEvent
  fullName: VDS.RDF.Parsing.Events.BaseEvent
- uid: VDS.RDF.Parsing.Events.BaseRdfXmlEvent
  commentId: T:VDS.RDF.Parsing.Events.BaseRdfXmlEvent
  parent: VDS.RDF.Parsing.Events
  name: BaseRdfXmlEvent
  nameWithType: BaseRdfXmlEvent
  fullName: VDS.RDF.Parsing.Events.BaseRdfXmlEvent
- uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
  commentId: T:VDS.RDF.Parsing.Events.IRdfXmlEvent
  parent: VDS.RDF.Parsing.Events
  name: IRdfXmlEvent
  nameWithType: IRdfXmlEvent
  fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
- uid: VDS.RDF.Parsing.Events.IEvent
  commentId: T:VDS.RDF.Parsing.Events.IEvent
  parent: VDS.RDF.Parsing.Events
  name: IEvent
  nameWithType: IEvent
  fullName: VDS.RDF.Parsing.Events.IEvent
- uid: VDS.RDF.Parsing.Events.BaseRdfXmlEvent.SourceXml
  commentId: P:VDS.RDF.Parsing.Events.BaseRdfXmlEvent.SourceXml
  parent: VDS.RDF.Parsing.Events.BaseRdfXmlEvent
  name: SourceXml
  nameWithType: BaseRdfXmlEvent.SourceXml
  fullName: VDS.RDF.Parsing.Events.BaseRdfXmlEvent.SourceXml
- uid: VDS.RDF.Parsing.Events.BaseEvent.EventType
  commentId: P:VDS.RDF.Parsing.Events.BaseEvent.EventType
  parent: VDS.RDF.Parsing.Events.BaseEvent
  name: EventType
  nameWithType: BaseEvent.EventType
  fullName: VDS.RDF.Parsing.Events.BaseEvent.EventType
- uid: VDS.RDF.Parsing.Events.BaseEvent.Position
  commentId: P:VDS.RDF.Parsing.Events.BaseEvent.Position
  parent: VDS.RDF.Parsing.Events.BaseEvent
  name: Position
  nameWithType: BaseEvent.Position
  fullName: VDS.RDF.Parsing.Events.BaseEvent.Position
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ElementEvent>()
  nameWithType: Extensions.AsEnumerable<ElementEvent>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.RdfXml.ElementEvent>()
  nameWithType.vb: Extensions.AsEnumerable(Of ElementEvent)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.RdfXml.ElementEvent)()
  name.vb: AsEnumerable(Of ElementEvent)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ElementEvent>
    nameWithType: Extensions.AsEnumerable<ElementEvent>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.RdfXml.ElementEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ElementEvent)
    nameWithType: Extensions.AsEnumerable(Of ElementEvent)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.RdfXml.ElementEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.Events
  commentId: N:VDS.RDF.Parsing.Events
  name: VDS.RDF.Parsing.Events
  nameWithType: VDS.RDF.Parsing.Events
  fullName: VDS.RDF.Parsing.Events
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.#ctor
  name: ElementEvent
  nameWithType: ElementEvent.ElementEvent
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ElementEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Parsing.PositionInfo
  commentId: T:VDS.RDF.Parsing.PositionInfo
  parent: VDS.RDF.Parsing
  name: PositionInfo
  nameWithType: PositionInfo
  fullName: VDS.RDF.Parsing.PositionInfo
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.LocalName*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.LocalName
  name: LocalName
  nameWithType: ElementEvent.LocalName
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.LocalName
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Namespace*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Namespace
  name: Namespace
  nameWithType: ElementEvent.Namespace
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Namespace
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.QName*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.QName
  name: QName
  nameWithType: ElementEvent.QName
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.QName
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Children*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Children
  name: Children
  nameWithType: ElementEvent.Children
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Children
- uid: System.Collections.Generic.List{VDS.RDF.Parsing.Events.IRdfXmlEvent}
  commentId: T:System.Collections.Generic.List{VDS.RDF.Parsing.Events.IRdfXmlEvent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IRdfXmlEvent>
  nameWithType: List<IRdfXmlEvent>
  fullName: System.Collections.Generic.List<VDS.RDF.Parsing.Events.IRdfXmlEvent>
  nameWithType.vb: List(Of IRdfXmlEvent)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.Parsing.Events.IRdfXmlEvent)
  name.vb: List(Of IRdfXmlEvent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
    name: IRdfXmlEvent
    nameWithType: IRdfXmlEvent
    fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
    name: IRdfXmlEvent
    nameWithType: IRdfXmlEvent
    fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.BaseUri*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.BaseUri
  name: BaseUri
  nameWithType: ElementEvent.BaseUri
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.BaseUri
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Attributes*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Attributes
  name: Attributes
  nameWithType: ElementEvent.Attributes
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Attributes
- uid: System.Collections.Generic.List{VDS.RDF.Parsing.Events.RdfXml.AttributeEvent}
  commentId: T:System.Collections.Generic.List{VDS.RDF.Parsing.Events.RdfXml.AttributeEvent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AttributeEvent>
  nameWithType: List<AttributeEvent>
  fullName: System.Collections.Generic.List<VDS.RDF.Parsing.Events.RdfXml.AttributeEvent>
  nameWithType.vb: List(Of AttributeEvent)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  name.vb: List(Of AttributeEvent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
    name: AttributeEvent
    nameWithType: AttributeEvent
    fullName: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
    name: AttributeEvent
    nameWithType: AttributeEvent
    fullName: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.NamespaceAttributes*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.NamespaceAttributes
  name: NamespaceAttributes
  nameWithType: ElementEvent.NamespaceAttributes
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.NamespaceAttributes
- uid: System.Collections.Generic.List{VDS.RDF.Parsing.Events.RdfXml.NamespaceAttributeEvent}
  commentId: T:System.Collections.Generic.List{VDS.RDF.Parsing.Events.RdfXml.NamespaceAttributeEvent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NamespaceAttributeEvent>
  nameWithType: List<NamespaceAttributeEvent>
  fullName: System.Collections.Generic.List<VDS.RDF.Parsing.Events.RdfXml.NamespaceAttributeEvent>
  nameWithType.vb: List(Of NamespaceAttributeEvent)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.Parsing.Events.RdfXml.NamespaceAttributeEvent)
  name.vb: List(Of NamespaceAttributeEvent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Parsing.Events.RdfXml.NamespaceAttributeEvent
    name: NamespaceAttributeEvent
    nameWithType: NamespaceAttributeEvent
    fullName: VDS.RDF.Parsing.Events.RdfXml.NamespaceAttributeEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Parsing.Events.RdfXml.NamespaceAttributeEvent
    name: NamespaceAttributeEvent
    nameWithType: NamespaceAttributeEvent
    fullName: VDS.RDF.Parsing.Events.RdfXml.NamespaceAttributeEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ListCounter*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ListCounter
  name: ListCounter
  nameWithType: ElementEvent.ListCounter
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ListCounter
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Language*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Language
  name: Language
  nameWithType: ElementEvent.Language
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Language
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Subject*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Subject
  name: Subject
  nameWithType: ElementEvent.Subject
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.Subject
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SubjectNode*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SubjectNode
  name: SubjectNode
  nameWithType: ElementEvent.SubjectNode
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SubjectNode
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ParseType*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ParseType
  name: ParseType
  nameWithType: ElementEvent.ParseType
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ParseType
- uid: VDS.RDF.Parsing.RdfXmlParseType
  commentId: T:VDS.RDF.Parsing.RdfXmlParseType
  parent: VDS.RDF.Parsing
  name: RdfXmlParseType
  nameWithType: RdfXmlParseType
  fullName: VDS.RDF.Parsing.RdfXmlParseType
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri
  name: SetUri
  nameWithType: ElementEvent.SetUri
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.SetUri
- uid: VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent
  commentId: T:VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent
  parent: VDS.RDF.Parsing.Events.RdfXml
  name: UriReferenceEvent
  nameWithType: UriReferenceEvent
  fullName: VDS.RDF.Parsing.Events.RdfXml.UriReferenceEvent
- uid: VDS.RDF.INamespaceMapper
  commentId: T:VDS.RDF.INamespaceMapper
  parent: VDS.RDF
  name: INamespaceMapper
  nameWithType: INamespaceMapper
  fullName: VDS.RDF.INamespaceMapper
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ToString*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ToString
  name: ToString
  nameWithType: ElementEvent.ToString
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent.ToString
