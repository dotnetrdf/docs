### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Inference.Pellet.Services.PredictService
  commentId: T:VDS.RDF.Query.Inference.Pellet.Services.PredictService
  id: PredictService
  parent: VDS.RDF.Query.Inference.Pellet.Services
  children:
  - VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict(System.String,System.String)
  - VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict(System.String,System.String,VDS.RDF.NodeListCallback,System.Object)
  - VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw(System.String,System.String)
  - VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw(System.String,System.String,VDS.RDF.GraphCallback,System.Object)
  langs:
  - csharp
  - vb
  name: PredictService
  nameWithType: PredictService
  fullName: VDS.RDF.Query.Inference.Pellet.Services.PredictService
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/PredictService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PredictService
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/PredictService.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nRepresents the Predict Service of a Pellet Knowledge Base.\n"
  example: []
  syntax:
    content: 'public class PredictService : PelletService'
    content.vb: >-
      Public Class PredictService
          Inherits PelletService
  inheritance:
  - System.Object
  - VDS.RDF.Query.Inference.Pellet.PelletService
  inheritedMembers:
  - VDS.RDF.Query.Inference.Pellet.PelletService.Name
  - VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
  - VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Inference.Pellet.Services.PredictService.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict(System.String,System.String)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict(System.String,System.String)
  id: Predict(System.String,System.String)
  parent: VDS.RDF.Query.Inference.Pellet.Services.PredictService
  langs:
  - csharp
  - vb
  name: Predict(String, String)
  nameWithType: PredictService.Predict(String, String)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/PredictService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Predict
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/PredictService.cs
    startLine: 67
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nGets the list of Predictions for the given Individual and Property.\n"
  example: []
  syntax:
    content: public List<INode> Predict(string individual, string property)
    parameters:
    - id: individual
      type: System.String
      description: QName of an Inidividual.
    - id: property
      type: System.String
      description: QName of a Property.
    return:
      type: System.Collections.Generic.List{VDS.RDF.INode}
      description: ''
    content.vb: Public Function Predict(individual As String, property As String) As List(Of INode)
  overload: VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw(System.String,System.String)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw(System.String,System.String)
  id: PredictRaw(System.String,System.String)
  parent: VDS.RDF.Query.Inference.Pellet.Services.PredictService
  langs:
  - csharp
  - vb
  name: PredictRaw(String, String)
  nameWithType: PredictService.PredictRaw(String, String)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/PredictService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PredictRaw
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/PredictService.cs
    startLine: 83
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nGets the Raw Predictions Graph from the Knowledge Base.\n"
  example: []
  syntax:
    content: public IGraph PredictRaw(string individual, string property)
    parameters:
    - id: individual
      type: System.String
      description: QName of an Individual.
    - id: property
      type: System.String
      description: QName of a Property.
    return:
      type: VDS.RDF.IGraph
      description: ''
    content.vb: Public Function PredictRaw(individual As String, property As String) As IGraph
  overload: VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict(System.String,System.String,VDS.RDF.NodeListCallback,System.Object)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict(System.String,System.String,VDS.RDF.NodeListCallback,System.Object)
  id: Predict(System.String,System.String,VDS.RDF.NodeListCallback,System.Object)
  parent: VDS.RDF.Query.Inference.Pellet.Services.PredictService
  langs:
  - csharp
  - vb
  name: Predict(String, String, NodeListCallback, Object)
  nameWithType: PredictService.Predict(String, String, NodeListCallback, Object)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict(System.String, System.String, VDS.RDF.NodeListCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/PredictService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Predict
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/PredictService.cs
    startLine: 124
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nGets the list of Predictions for the given Individual and Property.\n"
  remarks: "\nIf the operation succeeds the callback will be invoked normally, if there is an error the callback will be invoked with a instance of <xref href=\"VDS.RDF.AsyncError\" data-throw-if-not-resolved=\"false\"></xref> passed as the state which provides access to the error message and the original state passed in.\n"
  example: []
  syntax:
    content: public void Predict(string individual, string property, NodeListCallback callback, object state)
    parameters:
    - id: individual
      type: System.String
      description: QName of an Inidividual.
    - id: property
      type: System.String
      description: QName of a Property.
    - id: callback
      type: VDS.RDF.NodeListCallback
      description: Callback to invoke when the operation completes.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Public Sub Predict(individual As String, property As String, callback As NodeListCallback, state As Object)
  overload: VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw(System.String,System.String,VDS.RDF.GraphCallback,System.Object)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw(System.String,System.String,VDS.RDF.GraphCallback,System.Object)
  id: PredictRaw(System.String,System.String,VDS.RDF.GraphCallback,System.Object)
  parent: VDS.RDF.Query.Inference.Pellet.Services.PredictService
  langs:
  - csharp
  - vb
  name: PredictRaw(String, String, GraphCallback, Object)
  nameWithType: PredictService.PredictRaw(String, String, GraphCallback, Object)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw(System.String, System.String, VDS.RDF.GraphCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/PredictService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PredictRaw
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/PredictService.cs
    startLine: 152
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nGets the Raw Predictions Graph from the Knowledge Base.\n"
  remarks: "\nIf the operation succeeds the callback will be invoked normally, if there is an error the callback will be invoked with a instance of <xref href=\"VDS.RDF.AsyncError\" data-throw-if-not-resolved=\"false\"></xref> passed as the state which provides access to the error message and the original state passed in.\n"
  example: []
  syntax:
    content: public void PredictRaw(string individual, string property, GraphCallback callback, object state)
    parameters:
    - id: individual
      type: System.String
      description: QName of an Individual.
    - id: property
      type: System.String
      description: QName of a Property.
    - id: callback
      type: VDS.RDF.GraphCallback
      description: Callback to invoke when the operation completes.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Public Sub PredictRaw(individual As String, property As String, callback As GraphCallback, state As Object)
  overload: VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Inference.Pellet.Services
  commentId: N:VDS.RDF.Query.Inference.Pellet.Services
  name: VDS.RDF.Query.Inference.Pellet.Services
  nameWithType: VDS.RDF.Query.Inference.Pellet.Services
  fullName: VDS.RDF.Query.Inference.Pellet.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Inference.Pellet.PelletService
  commentId: T:VDS.RDF.Query.Inference.Pellet.PelletService
  parent: VDS.RDF.Query.Inference.Pellet
  name: PelletService
  nameWithType: PelletService
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService
- uid: VDS.RDF.Query.Inference.Pellet.PelletService.Name
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletService.Name
  parent: VDS.RDF.Query.Inference.Pellet.PelletService
  name: Name
  nameWithType: PelletService.Name
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService.Name
- uid: VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
  parent: VDS.RDF.Query.Inference.Pellet.PelletService
  name: Endpoint
  nameWithType: PelletService.Endpoint
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
- uid: VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
  parent: VDS.RDF.Query.Inference.Pellet.PelletService
  name: MimeTypes
  nameWithType: PelletService.MimeTypes
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.Pellet.Services.PredictService.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<PredictService>()
  nameWithType: Extensions.AsEnumerable<PredictService>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.Pellet.Services.PredictService>()
  nameWithType.vb: Extensions.AsEnumerable(Of PredictService)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.Pellet.Services.PredictService)()
  name.vb: AsEnumerable(Of PredictService)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<PredictService>
    nameWithType: Extensions.AsEnumerable<PredictService>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.Pellet.Services.PredictService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of PredictService)
    nameWithType: Extensions.AsEnumerable(Of PredictService)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.Pellet.Services.PredictService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Inference.Pellet
  commentId: N:VDS.RDF.Query.Inference.Pellet
  name: VDS.RDF.Query.Inference.Pellet
  nameWithType: VDS.RDF.Query.Inference.Pellet
  fullName: VDS.RDF.Query.Inference.Pellet
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict*
  commentId: Overload:VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict
  name: Predict
  nameWithType: PredictService.Predict
  fullName: VDS.RDF.Query.Inference.Pellet.Services.PredictService.Predict
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.List{VDS.RDF.INode}
  commentId: T:System.Collections.Generic.List{VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<INode>
  nameWithType: List<INode>
  fullName: System.Collections.Generic.List<VDS.RDF.INode>
  nameWithType.vb: List(Of INode)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.INode)
  name.vb: List(Of INode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw*
  commentId: Overload:VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw
  name: PredictRaw
  nameWithType: PredictService.PredictRaw
  fullName: VDS.RDF.Query.Inference.Pellet.Services.PredictService.PredictRaw
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.AsyncError
  commentId: T:VDS.RDF.AsyncError
  name: AsyncError
  nameWithType: AsyncError
  fullName: VDS.RDF.AsyncError
- uid: VDS.RDF.NodeListCallback
  commentId: T:VDS.RDF.NodeListCallback
  parent: VDS.RDF
  name: NodeListCallback
  nameWithType: NodeListCallback
  fullName: VDS.RDF.NodeListCallback
- uid: VDS.RDF.GraphCallback
  commentId: T:VDS.RDF.GraphCallback
  parent: VDS.RDF
  name: GraphCallback
  nameWithType: GraphCallback
  fullName: VDS.RDF.GraphCallback
shouldSkipMarkup: true
