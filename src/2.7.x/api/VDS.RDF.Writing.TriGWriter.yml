### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Writing.TriGWriter
  commentId: T:VDS.RDF.Writing.TriGWriter
  id: TriGWriter
  parent: VDS.RDF.Writing
  children:
  - VDS.RDF.Writing.TriGWriter.CompressionLevel
  - VDS.RDF.Writing.TriGWriter.HighSpeedModePermitted
  - VDS.RDF.Writing.TriGWriter.N3CompatabilityMode
  - VDS.RDF.Writing.TriGWriter.PrettyPrintMode
  - VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter)
  - VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter,System.Boolean)
  - VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore,System.String)
  - VDS.RDF.Writing.TriGWriter.ToString
  - VDS.RDF.Writing.TriGWriter.UseMultiThreadedWriting
  - VDS.RDF.Writing.TriGWriter.Warning
  langs:
  - csharp
  - vb
  name: TriGWriter
  nameWithType: TriGWriter
  fullName: VDS.RDF.Writing.TriGWriter
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/TriGWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TriGWriter
    path: Libraries/dotNetRDF/Writing/TriGWriter.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nClass for writing a Triple Store in named Graph TriG syntax to a file/stream.\n"
  remarks: "\n<p>\nFor efficiency the TriG Writer splits it&apos;s writing over several threads (currently 4), these threads share a reference to a Context object which gives Global writing context eg. the target <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> being written to.  Each thread generates temporary local writing contexts as it goes along, each of these is scoped to writing a specific Graph.  Graphs are written to a <xref href=\"VDS.RDF.Writing.StringWriter\" data-throw-if-not-resolved=\"false\"></xref> so the output for each Graph is built completely and then written in one go to the <xref href=\"System.IO.TextWriter\" data-throw-if-not-resolved=\"false\"></xref> specified as the target of the writing in the global context.\n</p>\n"
  example: []
  syntax:
    content: 'public class TriGWriter : IStoreWriter, IHighSpeedWriter, IPrettyPrintingWriter, ICompressingWriter, IMultiThreadedWriter'
    content.vb: >-
      Public Class TriGWriter
          Implements IStoreWriter, IHighSpeedWriter, IPrettyPrintingWriter, ICompressingWriter, IMultiThreadedWriter
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.IStoreWriter
  - VDS.RDF.Writing.IHighSpeedWriter
  - VDS.RDF.Writing.IPrettyPrintingWriter
  - VDS.RDF.Writing.ICompressingWriter
  - VDS.RDF.Writing.IMultiThreadedWriter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Writing.TriGWriter.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Writing.TriGWriter.HighSpeedModePermitted
  commentId: P:VDS.RDF.Writing.TriGWriter.HighSpeedModePermitted
  id: HighSpeedModePermitted
  parent: VDS.RDF.Writing.TriGWriter
  langs:
  - csharp
  - vb
  name: HighSpeedModePermitted
  nameWithType: TriGWriter.HighSpeedModePermitted
  fullName: VDS.RDF.Writing.TriGWriter.HighSpeedModePermitted
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/TriGWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HighSpeedModePermitted
    path: Libraries/dotNetRDF/Writing/TriGWriter.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGets/Sets whether High Speed Write Mode is permitted.\n"
  example: []
  syntax:
    content: public bool HighSpeedModePermitted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property HighSpeedModePermitted As Boolean
  overload: VDS.RDF.Writing.TriGWriter.HighSpeedModePermitted*
  implements:
  - VDS.RDF.Writing.IHighSpeedWriter.HighSpeedModePermitted
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.TriGWriter.PrettyPrintMode
  commentId: P:VDS.RDF.Writing.TriGWriter.PrettyPrintMode
  id: PrettyPrintMode
  parent: VDS.RDF.Writing.TriGWriter
  langs:
  - csharp
  - vb
  name: PrettyPrintMode
  nameWithType: TriGWriter.PrettyPrintMode
  fullName: VDS.RDF.Writing.TriGWriter.PrettyPrintMode
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/TriGWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PrettyPrintMode
    path: Libraries/dotNetRDF/Writing/TriGWriter.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGets/Sets whether Pretty Printing is used.\n"
  example: []
  syntax:
    content: public bool PrettyPrintMode { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PrettyPrintMode As Boolean
  overload: VDS.RDF.Writing.TriGWriter.PrettyPrintMode*
  implements:
  - VDS.RDF.Writing.IPrettyPrintingWriter.PrettyPrintMode
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.TriGWriter.CompressionLevel
  commentId: P:VDS.RDF.Writing.TriGWriter.CompressionLevel
  id: CompressionLevel
  parent: VDS.RDF.Writing.TriGWriter
  langs:
  - csharp
  - vb
  name: CompressionLevel
  nameWithType: TriGWriter.CompressionLevel
  fullName: VDS.RDF.Writing.TriGWriter.CompressionLevel
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/TriGWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompressionLevel
    path: Libraries/dotNetRDF/Writing/TriGWriter.cs
    startLine: 93
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGets/Sets the Compression Level for the writer.\n"
  example: []
  syntax:
    content: public int CompressionLevel { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CompressionLevel As Integer
  overload: VDS.RDF.Writing.TriGWriter.CompressionLevel*
  implements:
  - VDS.RDF.Writing.ICompressingWriter.CompressionLevel
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.TriGWriter.N3CompatabilityMode
  commentId: P:VDS.RDF.Writing.TriGWriter.N3CompatabilityMode
  id: N3CompatabilityMode
  parent: VDS.RDF.Writing.TriGWriter
  langs:
  - csharp
  - vb
  name: N3CompatabilityMode
  nameWithType: TriGWriter.N3CompatabilityMode
  fullName: VDS.RDF.Writing.TriGWriter.N3CompatabilityMode
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/TriGWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: N3CompatabilityMode
    path: Libraries/dotNetRDF/Writing/TriGWriter.cs
    startLine: 111
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGets/Sets whether N3 Compatability Mode is used, in this mode an = is written after Graph Names so an N3 parser can read the TriG file correctly.\n"
  remarks: "\nDefaults to <strong>false</strong> from the 0.4.1 release onwards.\n"
  example: []
  syntax:
    content: public bool N3CompatabilityMode { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property N3CompatabilityMode As Boolean
  overload: VDS.RDF.Writing.TriGWriter.N3CompatabilityMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.TriGWriter.UseMultiThreadedWriting
  commentId: P:VDS.RDF.Writing.TriGWriter.UseMultiThreadedWriting
  id: UseMultiThreadedWriting
  parent: VDS.RDF.Writing.TriGWriter
  langs:
  - csharp
  - vb
  name: UseMultiThreadedWriting
  nameWithType: TriGWriter.UseMultiThreadedWriting
  fullName: VDS.RDF.Writing.TriGWriter.UseMultiThreadedWriting
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/TriGWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UseMultiThreadedWriting
    path: Libraries/dotNetRDF/Writing/TriGWriter.cs
    startLine: 126
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGets/Sets whether multi-threaded writing will be used to generate output faster.\n"
  example: []
  syntax:
    content: public bool UseMultiThreadedWriting { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseMultiThreadedWriting As Boolean
  overload: VDS.RDF.Writing.TriGWriter.UseMultiThreadedWriting*
  implements:
  - VDS.RDF.Writing.IMultiThreadedWriter.UseMultiThreadedWriting
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore,System.String)
  commentId: M:VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore,System.String)
  id: Save(VDS.RDF.ITripleStore,System.String)
  parent: VDS.RDF.Writing.TriGWriter
  langs:
  - csharp
  - vb
  name: Save(ITripleStore, String)
  nameWithType: TriGWriter.Save(ITripleStore, String)
  fullName: VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/TriGWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Save
    path: Libraries/dotNetRDF/Writing/TriGWriter.cs
    startLine: 143
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nSaves a Store in TriG (Turtle with Named Graphs) format.\n"
  example: []
  syntax:
    content: public void Save(ITripleStore store, string filename)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Store to save.
    - id: filename
      type: System.String
      description: File to save to.
    content.vb: Public Sub Save(store As ITripleStore, filename As String)
  overload: VDS.RDF.Writing.TriGWriter.Save*
  implements:
  - VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter)
  commentId: M:VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter)
  id: Save(VDS.RDF.ITripleStore,System.IO.TextWriter)
  parent: VDS.RDF.Writing.TriGWriter
  langs:
  - csharp
  - vb
  name: Save(ITripleStore, TextWriter)
  nameWithType: TriGWriter.Save(ITripleStore, TextWriter)
  fullName: VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore, System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/TriGWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Save
    path: Libraries/dotNetRDF/Writing/TriGWriter.cs
    startLine: 157
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nSaves a Store in TriG (Turtle with Named Graphs) format.\n"
  example: []
  syntax:
    content: public void Save(ITripleStore store, TextWriter writer)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Store to save.
    - id: writer
      type: System.IO.TextWriter
      description: Writer to save to.
    content.vb: Public Sub Save(store As ITripleStore, writer As TextWriter)
  overload: VDS.RDF.Writing.TriGWriter.Save*
  implements:
  - VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter,System.Boolean)
  commentId: M:VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter,System.Boolean)
  id: Save(VDS.RDF.ITripleStore,System.IO.TextWriter,System.Boolean)
  parent: VDS.RDF.Writing.TriGWriter
  langs:
  - csharp
  - vb
  name: Save(ITripleStore, TextWriter, Boolean)
  nameWithType: TriGWriter.Save(ITripleStore, TextWriter, Boolean)
  fullName: VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore, System.IO.TextWriter, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/TriGWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Save
    path: Libraries/dotNetRDF/Writing/TriGWriter.cs
    startLine: 168
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nSaves a Store in TriG (Turtle with Named Graphs) format.\n"
  example: []
  syntax:
    content: public void Save(ITripleStore store, TextWriter writer, bool leaveOpen)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Store to save.
    - id: writer
      type: System.IO.TextWriter
      description: Writer to save to.
    - id: leaveOpen
      type: System.Boolean
      description: Boolean flag indicating if <code data-dev-comment-type="paramref" class="paramref">writer</code> should be left open after the store is saved.
    content.vb: Public Sub Save(store As ITripleStore, writer As TextWriter, leaveOpen As Boolean)
  overload: VDS.RDF.Writing.TriGWriter.Save*
  implements:
  - VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.TriGWriter.Warning
  commentId: E:VDS.RDF.Writing.TriGWriter.Warning
  id: Warning
  parent: VDS.RDF.Writing.TriGWriter
  langs:
  - csharp
  - vb
  name: Warning
  nameWithType: TriGWriter.Warning
  fullName: VDS.RDF.Writing.TriGWriter.Warning
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/TriGWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Warning
    path: Libraries/dotNetRDF/Writing/TriGWriter.cs
    startLine: 524
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nEvent which is raised when there is an issue with the Graphs being serialized that doesn&apos;t prevent serialization but the user should be aware of\n"
  example: []
  syntax:
    content: public event StoreWriterWarning Warning
    return:
      type: VDS.RDF.StoreWriterWarning
    content.vb: Public Event Warning As StoreWriterWarning
  implements:
  - VDS.RDF.IStoreWriter.Warning
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.TriGWriter.ToString
  commentId: M:VDS.RDF.Writing.TriGWriter.ToString
  id: ToString
  parent: VDS.RDF.Writing.TriGWriter
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TriGWriter.ToString()
  fullName: VDS.RDF.Writing.TriGWriter.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/TriGWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF/Writing/TriGWriter.cs
    startLine: 543
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGets the String representation of the writer which is a description of the syntax it produces.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VDS.RDF.Writing.TriGWriter.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: VDS.RDF.Writing.StringWriter
  commentId: T:VDS.RDF.Writing.StringWriter
  name: StringWriter
  nameWithType: StringWriter
  fullName: VDS.RDF.Writing.StringWriter
- uid: VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter)
  commentId: M:VDS.RDF.Writing.TriGWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter)
  isExternal: true
- uid: VDS.RDF.Writing
  commentId: N:VDS.RDF.Writing
  name: VDS.RDF.Writing
  nameWithType: VDS.RDF.Writing
  fullName: VDS.RDF.Writing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.IStoreWriter
  commentId: T:VDS.RDF.IStoreWriter
  parent: VDS.RDF
  name: IStoreWriter
  nameWithType: IStoreWriter
  fullName: VDS.RDF.IStoreWriter
- uid: VDS.RDF.Writing.IHighSpeedWriter
  commentId: T:VDS.RDF.Writing.IHighSpeedWriter
  parent: VDS.RDF.Writing
  name: IHighSpeedWriter
  nameWithType: IHighSpeedWriter
  fullName: VDS.RDF.Writing.IHighSpeedWriter
- uid: VDS.RDF.Writing.IPrettyPrintingWriter
  commentId: T:VDS.RDF.Writing.IPrettyPrintingWriter
  parent: VDS.RDF.Writing
  name: IPrettyPrintingWriter
  nameWithType: IPrettyPrintingWriter
  fullName: VDS.RDF.Writing.IPrettyPrintingWriter
- uid: VDS.RDF.Writing.ICompressingWriter
  commentId: T:VDS.RDF.Writing.ICompressingWriter
  parent: VDS.RDF.Writing
  name: ICompressingWriter
  nameWithType: ICompressingWriter
  fullName: VDS.RDF.Writing.ICompressingWriter
- uid: VDS.RDF.Writing.IMultiThreadedWriter
  commentId: T:VDS.RDF.Writing.IMultiThreadedWriter
  parent: VDS.RDF.Writing
  name: IMultiThreadedWriter
  nameWithType: IMultiThreadedWriter
  fullName: VDS.RDF.Writing.IMultiThreadedWriter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Writing.TriGWriter.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TriGWriter>()
  nameWithType: Extensions.AsEnumerable<TriGWriter>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.TriGWriter>()
  nameWithType.vb: Extensions.AsEnumerable(Of TriGWriter)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.TriGWriter)()
  name.vb: AsEnumerable(Of TriGWriter)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TriGWriter>
    nameWithType: Extensions.AsEnumerable<TriGWriter>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.TriGWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TriGWriter)
    nameWithType: Extensions.AsEnumerable(Of TriGWriter)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.TriGWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Writing.TriGWriter.HighSpeedModePermitted*
  commentId: Overload:VDS.RDF.Writing.TriGWriter.HighSpeedModePermitted
  name: HighSpeedModePermitted
  nameWithType: TriGWriter.HighSpeedModePermitted
  fullName: VDS.RDF.Writing.TriGWriter.HighSpeedModePermitted
- uid: VDS.RDF.Writing.IHighSpeedWriter.HighSpeedModePermitted
  commentId: P:VDS.RDF.Writing.IHighSpeedWriter.HighSpeedModePermitted
  parent: VDS.RDF.Writing.IHighSpeedWriter
  name: HighSpeedModePermitted
  nameWithType: IHighSpeedWriter.HighSpeedModePermitted
  fullName: VDS.RDF.Writing.IHighSpeedWriter.HighSpeedModePermitted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Writing.TriGWriter.PrettyPrintMode*
  commentId: Overload:VDS.RDF.Writing.TriGWriter.PrettyPrintMode
  name: PrettyPrintMode
  nameWithType: TriGWriter.PrettyPrintMode
  fullName: VDS.RDF.Writing.TriGWriter.PrettyPrintMode
- uid: VDS.RDF.Writing.IPrettyPrintingWriter.PrettyPrintMode
  commentId: P:VDS.RDF.Writing.IPrettyPrintingWriter.PrettyPrintMode
  parent: VDS.RDF.Writing.IPrettyPrintingWriter
  name: PrettyPrintMode
  nameWithType: IPrettyPrintingWriter.PrettyPrintMode
  fullName: VDS.RDF.Writing.IPrettyPrintingWriter.PrettyPrintMode
- uid: VDS.RDF.Writing.TriGWriter.CompressionLevel*
  commentId: Overload:VDS.RDF.Writing.TriGWriter.CompressionLevel
  name: CompressionLevel
  nameWithType: TriGWriter.CompressionLevel
  fullName: VDS.RDF.Writing.TriGWriter.CompressionLevel
- uid: VDS.RDF.Writing.ICompressingWriter.CompressionLevel
  commentId: P:VDS.RDF.Writing.ICompressingWriter.CompressionLevel
  parent: VDS.RDF.Writing.ICompressingWriter
  name: CompressionLevel
  nameWithType: ICompressingWriter.CompressionLevel
  fullName: VDS.RDF.Writing.ICompressingWriter.CompressionLevel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Writing.TriGWriter.N3CompatabilityMode*
  commentId: Overload:VDS.RDF.Writing.TriGWriter.N3CompatabilityMode
  name: N3CompatabilityMode
  nameWithType: TriGWriter.N3CompatabilityMode
  fullName: VDS.RDF.Writing.TriGWriter.N3CompatabilityMode
- uid: VDS.RDF.Writing.TriGWriter.UseMultiThreadedWriting*
  commentId: Overload:VDS.RDF.Writing.TriGWriter.UseMultiThreadedWriting
  name: UseMultiThreadedWriting
  nameWithType: TriGWriter.UseMultiThreadedWriting
  fullName: VDS.RDF.Writing.TriGWriter.UseMultiThreadedWriting
- uid: VDS.RDF.Writing.IMultiThreadedWriter.UseMultiThreadedWriting
  commentId: P:VDS.RDF.Writing.IMultiThreadedWriter.UseMultiThreadedWriting
  parent: VDS.RDF.Writing.IMultiThreadedWriter
  name: UseMultiThreadedWriting
  nameWithType: IMultiThreadedWriter.UseMultiThreadedWriting
  fullName: VDS.RDF.Writing.IMultiThreadedWriter.UseMultiThreadedWriting
- uid: VDS.RDF.Writing.TriGWriter.Save*
  commentId: Overload:VDS.RDF.Writing.TriGWriter.Save
  name: Save
  nameWithType: TriGWriter.Save
  fullName: VDS.RDF.Writing.TriGWriter.Save
- uid: VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.String)
  commentId: M:VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.String)
  parent: VDS.RDF.IStoreWriter
  isExternal: true
  name: Save(ITripleStore, String)
  nameWithType: IStoreWriter.Save(ITripleStore, String)
  fullName: VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore, System.String)
  spec.csharp:
  - uid: VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.String)
    name: Save
    nameWithType: IStoreWriter.Save
    fullName: VDS.RDF.IStoreWriter.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.String)
    name: Save
    nameWithType: IStoreWriter.Save
    fullName: VDS.RDF.IStoreWriter.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ITripleStore
  commentId: T:VDS.RDF.ITripleStore
  parent: VDS.RDF
  name: ITripleStore
  nameWithType: ITripleStore
  fullName: VDS.RDF.ITripleStore
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter)
  commentId: M:VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter)
  parent: VDS.RDF.IStoreWriter
  isExternal: true
  name: Save(ITripleStore, TextWriter)
  nameWithType: IStoreWriter.Save(ITripleStore, TextWriter)
  fullName: VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore, System.IO.TextWriter)
  spec.csharp:
  - uid: VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter)
    name: Save
    nameWithType: IStoreWriter.Save
    fullName: VDS.RDF.IStoreWriter.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter)
    name: Save
    nameWithType: IStoreWriter.Save
    fullName: VDS.RDF.IStoreWriter.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter,System.Boolean)
  commentId: M:VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter,System.Boolean)
  parent: VDS.RDF.IStoreWriter
  isExternal: true
  name: Save(ITripleStore, TextWriter, Boolean)
  nameWithType: IStoreWriter.Save(ITripleStore, TextWriter, Boolean)
  fullName: VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore, System.IO.TextWriter, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter,System.Boolean)
    name: Save
    nameWithType: IStoreWriter.Save
    fullName: VDS.RDF.IStoreWriter.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IStoreWriter.Save(VDS.RDF.ITripleStore,System.IO.TextWriter,System.Boolean)
    name: Save
    nameWithType: IStoreWriter.Save
    fullName: VDS.RDF.IStoreWriter.Save
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IStoreWriter.Warning
  commentId: E:VDS.RDF.IStoreWriter.Warning
  parent: VDS.RDF.IStoreWriter
  name: Warning
  nameWithType: IStoreWriter.Warning
  fullName: VDS.RDF.IStoreWriter.Warning
- uid: VDS.RDF.StoreWriterWarning
  commentId: T:VDS.RDF.StoreWriterWarning
  parent: VDS.RDF
  name: StoreWriterWarning
  nameWithType: StoreWriterWarning
  fullName: VDS.RDF.StoreWriterWarning
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Writing.TriGWriter.ToString*
  commentId: Overload:VDS.RDF.Writing.TriGWriter.ToString
  name: ToString
  nameWithType: TriGWriter.ToString
  fullName: VDS.RDF.Writing.TriGWriter.ToString
shouldSkipMarkup: true
