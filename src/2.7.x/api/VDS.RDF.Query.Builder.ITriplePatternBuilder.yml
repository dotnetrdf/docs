### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder
  commentId: T:VDS.RDF.Query.Builder.ITriplePatternBuilder
  id: ITriplePatternBuilder
  parent: VDS.RDF.Query.Builder
  children:
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.String)
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.Uri)
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.INode)
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject``1(System.String)
  langs:
  - csharp
  - vb
  name: ITriplePatternBuilder
  nameWithType: ITriplePatternBuilder
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ITriplePatternBuilder
    path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nProvides methods for building triple patterns.\n"
  example: []
  syntax:
    content: public interface ITriplePatternBuilder
    content.vb: Public Interface ITriplePatternBuilder
  extensionMethods:
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
  id: Subject(VDS.RDF.Query.SparqlVariable)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Subject(SparqlVariable)
  nameWithType: ITriplePatternBuilder.Subject(SparqlVariable)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a variable as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: TriplePatternPredicatePart Subject(SparqlVariable variable)
    parameters:
    - id: variable
      type: VDS.RDF.Query.SparqlVariable
    return:
      type: VDS.RDF.Query.Builder.TriplePatternPredicatePart
    content.vb: Function Subject(variable As SparqlVariable) As TriplePatternPredicatePart
  overload: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject*
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.String)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.String)
  id: Subject(System.String)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Subject(String)
  nameWithType: ITriplePatternBuilder.Subject(String)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
    startLine: 44
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a variable as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: TriplePatternPredicatePart Subject(string subjectVariableName)
    parameters:
    - id: subjectVariableName
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.TriplePatternPredicatePart
    content.vb: Function Subject(subjectVariableName As String) As TriplePatternPredicatePart
  overload: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject*
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject``1(System.String)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject``1(System.String)
  id: Subject``1(System.String)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Subject<TNode>(String)
  nameWithType: ITriplePatternBuilder.Subject<TNode>(String)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject<TNode>(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nDepending on the generic parameter type, sets a literal, a QName or a blank node as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: A relevant prefix/base URI must be added to <xref href="VDS.RDF.Query.Builder.IQueryBuilder.Prefixes" data-throw-if-not-resolved="false"></xref> to accept a QName.
  example: []
  syntax:
    content: >-
      TriplePatternPredicatePart Subject<TNode>(string subject)
          where TNode : INode
    parameters:
    - id: subject
      type: System.String
      description: Either a variable name, a literal, a QName or a blank node identifier.
    typeParameters:
    - id: TNode
    return:
      type: VDS.RDF.Query.Builder.TriplePatternPredicatePart
    content.vb: Function Subject(Of TNode As INode)(subject As String) As TriplePatternPredicatePart
  overload: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject*
  nameWithType.vb: ITriplePatternBuilder.Subject(Of TNode)(String)
  fullName.vb: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(Of TNode)(System.String)
  name.vb: Subject(Of TNode)(String)
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.INode)
  id: Subject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Subject(INode)
  nameWithType: ITriplePatternBuilder.Subject(INode)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
    startLine: 57
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nDepending on the <code data-dev-comment-type=\"paramref\" class=\"paramref\">subjectNode</code>&apos;s type, sets a literal, a QName or a blank node as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: A relevant prefix/base URI must be added to <xref href="VDS.RDF.Query.Builder.IQueryBuilder.Prefixes" data-throw-if-not-resolved="false"></xref> to accept a QName.
  example: []
  syntax:
    content: TriplePatternPredicatePart Subject(INode subjectNode)
    parameters:
    - id: subjectNode
      type: VDS.RDF.INode
    return:
      type: VDS.RDF.Query.Builder.TriplePatternPredicatePart
    content.vb: Function Subject(subjectNode As INode) As TriplePatternPredicatePart
  overload: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject*
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.Uri)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.Uri)
  id: Subject(System.Uri)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Subject(Uri)
  nameWithType: ITriplePatternBuilder.Subject(Uri)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: TriplePatternPredicatePart Subject(Uri subject)
    parameters:
    - id: subject
      type: System.Uri
    return:
      type: VDS.RDF.Query.Builder.TriplePatternPredicatePart
    content.vb: Function Subject(subject As Uri) As TriplePatternPredicatePart
  overload: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject*
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
  id: Subject(VDS.RDF.Query.Patterns.PatternItem)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Subject(PatternItem)
  nameWithType: ITriplePatternBuilder.Subject(PatternItem)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: Libraries/dotNetRDF/Query/Builder/ITriplePatternBuilder.cs
    startLine: 67
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a <xref href=\"VDS.RDF.Query.Patterns.PatternItem\" data-throw-if-not-resolved=\"false\"></xref> as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: TriplePatternPredicatePart Subject(PatternItem subject)
    parameters:
    - id: subject
      type: VDS.RDF.Query.Patterns.PatternItem
    return:
      type: VDS.RDF.Query.Builder.TriplePatternPredicatePart
    content.vb: Function Subject(subject As PatternItem) As TriplePatternPredicatePart
  overload: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject*
references:
- uid: VDS.RDF.Query.Builder
  commentId: N:VDS.RDF.Query.Builder
  name: VDS.RDF.Query.Builder
  nameWithType: VDS.RDF.Query.Builder
  fullName: VDS.RDF.Query.Builder
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ITriplePatternBuilder>()
  nameWithType: Extensions.AsEnumerable<ITriplePatternBuilder>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.ITriplePatternBuilder>()
  nameWithType.vb: Extensions.AsEnumerable(Of ITriplePatternBuilder)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.ITriplePatternBuilder)()
  name.vb: AsEnumerable(Of ITriplePatternBuilder)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ITriplePatternBuilder>
    nameWithType: Extensions.AsEnumerable<ITriplePatternBuilder>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.ITriplePatternBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ITriplePatternBuilder)
    nameWithType: Extensions.AsEnumerable(Of ITriplePatternBuilder)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.ITriplePatternBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
  commentId: P:VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  name: Subject
  nameWithType: IMatchTriplePattern.Subject
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject*
  commentId: Overload:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject
  name: Subject
  nameWithType: ITriplePatternBuilder.Subject
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject
- uid: VDS.RDF.Query.SparqlVariable
  commentId: T:VDS.RDF.Query.SparqlVariable
  parent: VDS.RDF.Query
  name: SparqlVariable
  nameWithType: SparqlVariable
  fullName: VDS.RDF.Query.SparqlVariable
- uid: VDS.RDF.Query.Builder.TriplePatternPredicatePart
  commentId: T:VDS.RDF.Query.Builder.TriplePatternPredicatePart
  parent: VDS.RDF.Query.Builder
  name: TriplePatternPredicatePart
  nameWithType: TriplePatternPredicatePart
  fullName: VDS.RDF.Query.Builder.TriplePatternPredicatePart
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern
  commentId: T:VDS.RDF.Query.Patterns.IMatchTriplePattern
  parent: VDS.RDF.Query.Patterns
  name: IMatchTriplePattern
  nameWithType: IMatchTriplePattern
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Builder.IQueryBuilder.Prefixes
  commentId: P:VDS.RDF.Query.Builder.IQueryBuilder.Prefixes
  parent: VDS.RDF.Query.Builder.IQueryBuilder
  name: Prefixes
  nameWithType: IQueryBuilder.Prefixes
  fullName: VDS.RDF.Query.Builder.IQueryBuilder.Prefixes
- uid: VDS.RDF.Query.Builder.IQueryBuilder
  commentId: T:VDS.RDF.Query.Builder.IQueryBuilder
  parent: VDS.RDF.Query.Builder
  name: IQueryBuilder
  nameWithType: IQueryBuilder
  fullName: VDS.RDF.Query.Builder.IQueryBuilder
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Query.Patterns.PatternItem
  commentId: T:VDS.RDF.Query.Patterns.PatternItem
  parent: VDS.RDF.Query.Patterns
  name: PatternItem
  nameWithType: PatternItem
  fullName: VDS.RDF.Query.Patterns.PatternItem
shouldSkipMarkup: true
