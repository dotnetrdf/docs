### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue
  commentId: T:VDS.RDF.Parsing.Tokens.ITokenQueue
  id: ITokenQueue
  parent: VDS.RDF.Parsing.Tokens
  children:
  - VDS.RDF.Parsing.Tokens.ITokenQueue.Clear
  - VDS.RDF.Parsing.Tokens.ITokenQueue.Count
  - VDS.RDF.Parsing.Tokens.ITokenQueue.Dequeue
  - VDS.RDF.Parsing.Tokens.ITokenQueue.Enqueue(VDS.RDF.Parsing.Tokens.IToken)
  - VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer
  - VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer(System.Int32)
  - VDS.RDF.Parsing.Tokens.ITokenQueue.LastTokenType
  - VDS.RDF.Parsing.Tokens.ITokenQueue.Peek
  - VDS.RDF.Parsing.Tokens.ITokenQueue.Tokeniser
  - VDS.RDF.Parsing.Tokens.ITokenQueue.Tokens
  - VDS.RDF.Parsing.Tokens.ITokenQueue.Tracing
  langs:
  - csharp
  - vb
  name: ITokenQueue
  nameWithType: ITokenQueue
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ITokenQueue
    path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
    startLine: 33
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nInterface for implementing Token Queues which provide Bufferable wrappers to Tokenisers.\n"
  example: []
  syntax:
    content: public interface ITokenQueue
    content.vb: Public Interface ITokenQueue
  extensionMethods:
  - VDS.RDF.Parsing.Tokens.ITokenQueue.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Dequeue
  commentId: M:VDS.RDF.Parsing.Tokens.ITokenQueue.Dequeue
  id: Dequeue
  parent: VDS.RDF.Parsing.Tokens.ITokenQueue
  langs:
  - csharp
  - vb
  name: Dequeue()
  nameWithType: ITokenQueue.Dequeue()
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Dequeue()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dequeue
    path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nRemoves the first Token from the Queue.\n"
  example: []
  syntax:
    content: IToken Dequeue()
    return:
      type: VDS.RDF.Parsing.Tokens.IToken
      description: ''
    content.vb: Function Dequeue As IToken
  overload: VDS.RDF.Parsing.Tokens.ITokenQueue.Dequeue*
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Enqueue(VDS.RDF.Parsing.Tokens.IToken)
  commentId: M:VDS.RDF.Parsing.Tokens.ITokenQueue.Enqueue(VDS.RDF.Parsing.Tokens.IToken)
  id: Enqueue(VDS.RDF.Parsing.Tokens.IToken)
  parent: VDS.RDF.Parsing.Tokens.ITokenQueue
  langs:
  - csharp
  - vb
  name: Enqueue(IToken)
  nameWithType: ITokenQueue.Enqueue(IToken)
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Enqueue(VDS.RDF.Parsing.Tokens.IToken)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Enqueue
    path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
    startLine: 45
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nAdds a Token to the end of the Queue.\n"
  example: []
  syntax:
    content: void Enqueue(IToken t)
    parameters:
    - id: t
      type: VDS.RDF.Parsing.Tokens.IToken
      description: Token to add.
    content.vb: Sub Enqueue(t As IToken)
  overload: VDS.RDF.Parsing.Tokens.ITokenQueue.Enqueue*
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Peek
  commentId: M:VDS.RDF.Parsing.Tokens.ITokenQueue.Peek
  id: Peek
  parent: VDS.RDF.Parsing.Tokens.ITokenQueue
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: ITokenQueue.Peek()
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Peek()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Peek
    path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nGets the first Token from the Queue without removing it.\n"
  example: []
  syntax:
    content: IToken Peek()
    return:
      type: VDS.RDF.Parsing.Tokens.IToken
      description: ''
    content.vb: Function Peek As IToken
  overload: VDS.RDF.Parsing.Tokens.ITokenQueue.Peek*
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Tokeniser
  commentId: P:VDS.RDF.Parsing.Tokens.ITokenQueue.Tokeniser
  id: Tokeniser
  parent: VDS.RDF.Parsing.Tokens.ITokenQueue
  langs:
  - csharp
  - vb
  name: Tokeniser
  nameWithType: ITokenQueue.Tokeniser
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Tokeniser
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Tokeniser
    path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nTokeniser that this is a Queue for.\n"
  example: []
  syntax:
    content: ITokeniser Tokeniser { get; set; }
    parameters: []
    return:
      type: VDS.RDF.Parsing.Tokens.ITokeniser
    content.vb: Property Tokeniser As ITokeniser
  overload: VDS.RDF.Parsing.Tokens.ITokenQueue.Tokeniser*
  modifiers.csharp:
  - get
  - set
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Clear
  commentId: M:VDS.RDF.Parsing.Tokens.ITokenQueue.Clear
  id: Clear
  parent: VDS.RDF.Parsing.Tokens.ITokenQueue
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: ITokenQueue.Clear()
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Clear()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Clear
    path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
    startLine: 65
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nClears the Token Queue.\n"
  example: []
  syntax:
    content: void Clear()
    content.vb: Sub Clear
  overload: VDS.RDF.Parsing.Tokens.ITokenQueue.Clear*
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Count
  commentId: P:VDS.RDF.Parsing.Tokens.ITokenQueue.Count
  id: Count
  parent: VDS.RDF.Parsing.Tokens.ITokenQueue
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ITokenQueue.Count
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Count
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Count
    path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nGets the number of Tokens in the Queue.\n"
  example: []
  syntax:
    content: int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property Count As Integer
  overload: VDS.RDF.Parsing.Tokens.ITokenQueue.Count*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer
  commentId: M:VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer
  id: InitialiseBuffer
  parent: VDS.RDF.Parsing.Tokens.ITokenQueue
  langs:
  - csharp
  - vb
  name: InitialiseBuffer()
  nameWithType: ITokenQueue.InitialiseBuffer()
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: InitialiseBuffer
    path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nInitialises the Buffer.\n"
  example: []
  syntax:
    content: void InitialiseBuffer()
    content.vb: Sub InitialiseBuffer
  overload: VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer*
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer(System.Int32)
  commentId: M:VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer(System.Int32)
  id: InitialiseBuffer(System.Int32)
  parent: VDS.RDF.Parsing.Tokens.ITokenQueue
  langs:
  - csharp
  - vb
  name: InitialiseBuffer(Int32)
  nameWithType: ITokenQueue.InitialiseBuffer(Int32)
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer(System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: InitialiseBuffer
    path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
    startLine: 84
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nInitialises the Buffer and sets the Buffering Level.\n"
  example: []
  syntax:
    content: void InitialiseBuffer(int amount)
    parameters:
    - id: amount
      type: System.Int32
      description: Buffering Amount.
    content.vb: Sub InitialiseBuffer(amount As Integer)
  overload: VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer*
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Tokens
  commentId: P:VDS.RDF.Parsing.Tokens.ITokenQueue.Tokens
  id: Tokens
  parent: VDS.RDF.Parsing.Tokens.ITokenQueue
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: ITokenQueue.Tokens
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Tokens
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Tokens
    path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
    startLine: 89
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nGets the underlying Queue of Tokens.\n"
  example: []
  syntax:
    content: Queue<IToken> Tokens { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Queue{VDS.RDF.Parsing.Tokens.IToken}
    content.vb: ReadOnly Property Tokens As Queue(Of IToken)
  overload: VDS.RDF.Parsing.Tokens.ITokenQueue.Tokens*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Tracing
  commentId: P:VDS.RDF.Parsing.Tokens.ITokenQueue.Tracing
  id: Tracing
  parent: VDS.RDF.Parsing.Tokens.ITokenQueue
  langs:
  - csharp
  - vb
  name: Tracing
  nameWithType: ITokenQueue.Tracing
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Tracing
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Tracing
    path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
    startLine: 97
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nGets/Sets whether Tokeniser Tracing should be used.\n"
  example: []
  syntax:
    content: bool Tracing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property Tracing As Boolean
  overload: VDS.RDF.Parsing.Tokens.ITokenQueue.Tracing*
  modifiers.csharp:
  - get
  - set
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.LastTokenType
  commentId: P:VDS.RDF.Parsing.Tokens.ITokenQueue.LastTokenType
  id: LastTokenType
  parent: VDS.RDF.Parsing.Tokens.ITokenQueue
  langs:
  - csharp
  - vb
  name: LastTokenType
  nameWithType: ITokenQueue.LastTokenType
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.LastTokenType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LastTokenType
    path: Libraries/dotNetRDF/Parsing/Tokens/ITokenQueue.cs
    startLine: 106
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Tokens
  summary: "\nGets the Token Type of the last Token dequeued.\n"
  example: []
  syntax:
    content: int LastTokenType { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property LastTokenType As Integer
  overload: VDS.RDF.Parsing.Tokens.ITokenQueue.LastTokenType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VDS.RDF.Parsing.Tokens
  commentId: N:VDS.RDF.Parsing.Tokens
  name: VDS.RDF.Parsing.Tokens
  nameWithType: VDS.RDF.Parsing.Tokens
  fullName: VDS.RDF.Parsing.Tokens
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ITokenQueue>()
  nameWithType: Extensions.AsEnumerable<ITokenQueue>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Tokens.ITokenQueue>()
  nameWithType.vb: Extensions.AsEnumerable(Of ITokenQueue)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Tokens.ITokenQueue)()
  name.vb: AsEnumerable(Of ITokenQueue)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ITokenQueue>
    nameWithType: Extensions.AsEnumerable<ITokenQueue>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Tokens.ITokenQueue>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ITokenQueue)
    nameWithType: Extensions.AsEnumerable(Of ITokenQueue)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Tokens.ITokenQueue)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Dequeue*
  commentId: Overload:VDS.RDF.Parsing.Tokens.ITokenQueue.Dequeue
  name: Dequeue
  nameWithType: ITokenQueue.Dequeue
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Dequeue
- uid: VDS.RDF.Parsing.Tokens.IToken
  commentId: T:VDS.RDF.Parsing.Tokens.IToken
  parent: VDS.RDF.Parsing.Tokens
  name: IToken
  nameWithType: IToken
  fullName: VDS.RDF.Parsing.Tokens.IToken
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Enqueue*
  commentId: Overload:VDS.RDF.Parsing.Tokens.ITokenQueue.Enqueue
  name: Enqueue
  nameWithType: ITokenQueue.Enqueue
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Enqueue
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Peek*
  commentId: Overload:VDS.RDF.Parsing.Tokens.ITokenQueue.Peek
  name: Peek
  nameWithType: ITokenQueue.Peek
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Peek
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Tokeniser*
  commentId: Overload:VDS.RDF.Parsing.Tokens.ITokenQueue.Tokeniser
  name: Tokeniser
  nameWithType: ITokenQueue.Tokeniser
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Tokeniser
- uid: VDS.RDF.Parsing.Tokens.ITokeniser
  commentId: T:VDS.RDF.Parsing.Tokens.ITokeniser
  parent: VDS.RDF.Parsing.Tokens
  name: ITokeniser
  nameWithType: ITokeniser
  fullName: VDS.RDF.Parsing.Tokens.ITokeniser
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Clear*
  commentId: Overload:VDS.RDF.Parsing.Tokens.ITokenQueue.Clear
  name: Clear
  nameWithType: ITokenQueue.Clear
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Clear
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Count*
  commentId: Overload:VDS.RDF.Parsing.Tokens.ITokenQueue.Count
  name: Count
  nameWithType: ITokenQueue.Count
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer*
  commentId: Overload:VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer
  name: InitialiseBuffer
  nameWithType: ITokenQueue.InitialiseBuffer
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.InitialiseBuffer
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Tokens*
  commentId: Overload:VDS.RDF.Parsing.Tokens.ITokenQueue.Tokens
  name: Tokens
  nameWithType: ITokenQueue.Tokens
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Tokens
- uid: System.Collections.Generic.Queue{VDS.RDF.Parsing.Tokens.IToken}
  commentId: T:System.Collections.Generic.Queue{VDS.RDF.Parsing.Tokens.IToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Queue`1
  name: Queue<IToken>
  nameWithType: Queue<IToken>
  fullName: System.Collections.Generic.Queue<VDS.RDF.Parsing.Tokens.IToken>
  nameWithType.vb: Queue(Of IToken)
  fullName.vb: System.Collections.Generic.Queue(Of VDS.RDF.Parsing.Tokens.IToken)
  name.vb: Queue(Of IToken)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Parsing.Tokens.IToken
    name: IToken
    nameWithType: IToken
    fullName: VDS.RDF.Parsing.Tokens.IToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Parsing.Tokens.IToken
    name: IToken
    nameWithType: IToken
    fullName: VDS.RDF.Parsing.Tokens.IToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Queue`1
  commentId: T:System.Collections.Generic.Queue`1
  isExternal: true
  name: Queue<T>
  nameWithType: Queue<T>
  fullName: System.Collections.Generic.Queue<T>
  nameWithType.vb: Queue(Of T)
  fullName.vb: System.Collections.Generic.Queue(Of T)
  name.vb: Queue(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    nameWithType: Queue
    fullName: System.Collections.Generic.Queue
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.Tracing*
  commentId: Overload:VDS.RDF.Parsing.Tokens.ITokenQueue.Tracing
  name: Tracing
  nameWithType: ITokenQueue.Tracing
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.Tracing
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue.LastTokenType*
  commentId: Overload:VDS.RDF.Parsing.Tokens.ITokenQueue.LastTokenType
  name: LastTokenType
  nameWithType: ITokenQueue.LastTokenType
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue.LastTokenType
shouldSkipMarkup: true
