### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Configuration.ObjectFactoryFactory
  commentId: T:VDS.RDF.Configuration.ObjectFactoryFactory
  id: ObjectFactoryFactory
  parent: VDS.RDF.Configuration
  children:
  - VDS.RDF.Configuration.ObjectFactoryFactory.CanLoadObject(System.Type)
  - VDS.RDF.Configuration.ObjectFactoryFactory.TryLoadObject(VDS.RDF.IGraph,VDS.RDF.INode,System.Type,System.Object@)
  langs:
  - csharp
  - vb
  name: ObjectFactoryFactory
  nameWithType: ObjectFactoryFactory
  fullName: VDS.RDF.Configuration.ObjectFactoryFactory
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/ObjectFactoryFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ObjectFactoryFactory
    path: Libraries/dotNetRDF/Configuration/ObjectFactoryFactory.cs
    startLine: 40
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration
  summary: "\nFactory class for producing <xref href=\"VDS.RDF.Configuration.IObjectFactory\" data-throw-if-not-resolved=\"false\"></xref> instances from Configuration Graphs.\n"
  remarks: "\n<p>\nThis essentially reflexive implementation allows for defining additional <xref href=\"VDS.RDF.Configuration.IObjectFactory\" data-throw-if-not-resolved=\"false\"></xref> instances that can load custom/user defined types based on user definable Configuration.  If your Configuration Graphs contain custom object factory definitions then you should call <xref href=\"VDS.RDF.Configuration.ConfigurationLoader.AutoConfigureObjectFactories(VDS.RDF.IGraph)\" data-throw-if-not-resolved=\"false\"></xref> before attempting to load any Configuration.\n</p>\n"
  example: []
  syntax:
    content: 'public class ObjectFactoryFactory : IObjectFactory'
    content.vb: >-
      Public Class ObjectFactoryFactory
          Implements IObjectFactory
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Configuration.IObjectFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Configuration.ObjectFactoryFactory.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Configuration.ObjectFactoryFactory.TryLoadObject(VDS.RDF.IGraph,VDS.RDF.INode,System.Type,System.Object@)
  commentId: M:VDS.RDF.Configuration.ObjectFactoryFactory.TryLoadObject(VDS.RDF.IGraph,VDS.RDF.INode,System.Type,System.Object@)
  id: TryLoadObject(VDS.RDF.IGraph,VDS.RDF.INode,System.Type,System.Object@)
  parent: VDS.RDF.Configuration.ObjectFactoryFactory
  langs:
  - csharp
  - vb
  name: TryLoadObject(IGraph, INode, Type, out Object)
  nameWithType: ObjectFactoryFactory.TryLoadObject(IGraph, INode, Type, out Object)
  fullName: VDS.RDF.Configuration.ObjectFactoryFactory.TryLoadObject(VDS.RDF.IGraph, VDS.RDF.INode, System.Type, out System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/ObjectFactoryFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryLoadObject
    path: Libraries/dotNetRDF/Configuration/ObjectFactoryFactory.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration
  summary: "\nTries to load an Object Factory based on information from the Configuration Graph.\n"
  example: []
  syntax:
    content: public bool TryLoadObject(IGraph g, INode objNode, Type targetType, out object obj)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Configuration Graph.
    - id: objNode
      type: VDS.RDF.INode
      description: Object Node.
    - id: targetType
      type: System.Type
      description: Target Type.
    - id: obj
      type: System.Object
      description: Output Object.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function TryLoadObject(g As IGraph, objNode As INode, targetType As Type, ByRef obj As Object) As Boolean
  overload: VDS.RDF.Configuration.ObjectFactoryFactory.TryLoadObject*
  implements:
  - VDS.RDF.Configuration.IObjectFactory.TryLoadObject(VDS.RDF.IGraph,VDS.RDF.INode,System.Type,System.Object@)
  nameWithType.vb: ObjectFactoryFactory.TryLoadObject(IGraph, INode, Type, ByRef Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Configuration.ObjectFactoryFactory.TryLoadObject(VDS.RDF.IGraph, VDS.RDF.INode, System.Type, ByRef System.Object)
  name.vb: TryLoadObject(IGraph, INode, Type, ByRef Object)
- uid: VDS.RDF.Configuration.ObjectFactoryFactory.CanLoadObject(System.Type)
  commentId: M:VDS.RDF.Configuration.ObjectFactoryFactory.CanLoadObject(System.Type)
  id: CanLoadObject(System.Type)
  parent: VDS.RDF.Configuration.ObjectFactoryFactory
  langs:
  - csharp
  - vb
  name: CanLoadObject(Type)
  nameWithType: ObjectFactoryFactory.CanLoadObject(Type)
  fullName: VDS.RDF.Configuration.ObjectFactoryFactory.CanLoadObject(System.Type)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/ObjectFactoryFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CanLoadObject
    path: Libraries/dotNetRDF/Configuration/ObjectFactoryFactory.cs
    startLine: 74
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration
  summary: "\nGets whether this Factory can load objects of the given Type.\n"
  example: []
  syntax:
    content: public bool CanLoadObject(Type t)
    parameters:
    - id: t
      type: System.Type
      description: Type.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function CanLoadObject(t As Type) As Boolean
  overload: VDS.RDF.Configuration.ObjectFactoryFactory.CanLoadObject*
  implements:
  - VDS.RDF.Configuration.IObjectFactory.CanLoadObject(System.Type)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Configuration.IObjectFactory
  commentId: T:VDS.RDF.Configuration.IObjectFactory
  parent: VDS.RDF.Configuration
  name: IObjectFactory
  nameWithType: IObjectFactory
  fullName: VDS.RDF.Configuration.IObjectFactory
- uid: VDS.RDF.Configuration.ConfigurationLoader.AutoConfigureObjectFactories(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Configuration.ConfigurationLoader.AutoConfigureObjectFactories(VDS.RDF.IGraph)
  isExternal: true
- uid: VDS.RDF.Configuration
  commentId: N:VDS.RDF.Configuration
  name: VDS.RDF.Configuration
  nameWithType: VDS.RDF.Configuration
  fullName: VDS.RDF.Configuration
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Configuration.ObjectFactoryFactory.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ObjectFactoryFactory>()
  nameWithType: Extensions.AsEnumerable<ObjectFactoryFactory>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Configuration.ObjectFactoryFactory>()
  nameWithType.vb: Extensions.AsEnumerable(Of ObjectFactoryFactory)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Configuration.ObjectFactoryFactory)()
  name.vb: AsEnumerable(Of ObjectFactoryFactory)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ObjectFactoryFactory>
    nameWithType: Extensions.AsEnumerable<ObjectFactoryFactory>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Configuration.ObjectFactoryFactory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ObjectFactoryFactory)
    nameWithType: Extensions.AsEnumerable(Of ObjectFactoryFactory)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Configuration.ObjectFactoryFactory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Configuration.ObjectFactoryFactory.TryLoadObject*
  commentId: Overload:VDS.RDF.Configuration.ObjectFactoryFactory.TryLoadObject
  name: TryLoadObject
  nameWithType: ObjectFactoryFactory.TryLoadObject
  fullName: VDS.RDF.Configuration.ObjectFactoryFactory.TryLoadObject
- uid: VDS.RDF.Configuration.IObjectFactory.TryLoadObject(VDS.RDF.IGraph,VDS.RDF.INode,System.Type,System.Object@)
  commentId: M:VDS.RDF.Configuration.IObjectFactory.TryLoadObject(VDS.RDF.IGraph,VDS.RDF.INode,System.Type,System.Object@)
  parent: VDS.RDF.Configuration.IObjectFactory
  isExternal: true
  name: TryLoadObject(IGraph, INode, Type, Object)
  nameWithType: IObjectFactory.TryLoadObject(IGraph, INode, Type, Object)
  fullName: VDS.RDF.Configuration.IObjectFactory.TryLoadObject(VDS.RDF.IGraph, VDS.RDF.INode, System.Type, System.Object)
  spec.csharp:
  - uid: VDS.RDF.Configuration.IObjectFactory.TryLoadObject(VDS.RDF.IGraph,VDS.RDF.INode,System.Type,System.Object@)
    name: TryLoadObject
    nameWithType: IObjectFactory.TryLoadObject
    fullName: VDS.RDF.Configuration.IObjectFactory.TryLoadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Configuration.IObjectFactory.TryLoadObject(VDS.RDF.IGraph,VDS.RDF.INode,System.Type,System.Object@)
    name: TryLoadObject
    nameWithType: IObjectFactory.TryLoadObject
    fullName: VDS.RDF.Configuration.IObjectFactory.TryLoadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Configuration.ObjectFactoryFactory.CanLoadObject*
  commentId: Overload:VDS.RDF.Configuration.ObjectFactoryFactory.CanLoadObject
  name: CanLoadObject
  nameWithType: ObjectFactoryFactory.CanLoadObject
  fullName: VDS.RDF.Configuration.ObjectFactoryFactory.CanLoadObject
- uid: VDS.RDF.Configuration.IObjectFactory.CanLoadObject(System.Type)
  commentId: M:VDS.RDF.Configuration.IObjectFactory.CanLoadObject(System.Type)
  parent: VDS.RDF.Configuration.IObjectFactory
  isExternal: true
  name: CanLoadObject(Type)
  nameWithType: IObjectFactory.CanLoadObject(Type)
  fullName: VDS.RDF.Configuration.IObjectFactory.CanLoadObject(System.Type)
  spec.csharp:
  - uid: VDS.RDF.Configuration.IObjectFactory.CanLoadObject(System.Type)
    name: CanLoadObject
    nameWithType: IObjectFactory.CanLoadObject
    fullName: VDS.RDF.Configuration.IObjectFactory.CanLoadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Configuration.IObjectFactory.CanLoadObject(System.Type)
    name: CanLoadObject
    nameWithType: IObjectFactory.CanLoadObject
    fullName: VDS.RDF.Configuration.IObjectFactory.CanLoadObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
