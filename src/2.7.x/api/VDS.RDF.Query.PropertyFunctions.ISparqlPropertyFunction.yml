### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction
  commentId: T:VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction
  id: ISparqlPropertyFunction
  parent: VDS.RDF.Query.PropertyFunctions
  children:
  - VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.FunctionUri
  - VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Variables
  langs:
  - csharp
  - vb
  name: ISparqlPropertyFunction
  nameWithType: ISparqlPropertyFunction
  fullName: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/PropertyFunctions/ISparqlPropertyFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ISparqlPropertyFunction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/PropertyFunctions/ISparqlPropertyFunction.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.PropertyFunctions
  summary: "\nInterface for SPARQL property functions.\n"
  example: []
  syntax:
    content: public interface ISparqlPropertyFunction
    content.vb: Public Interface ISparqlPropertyFunction
  extensionMethods:
  - VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.FunctionUri
  commentId: P:VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.FunctionUri
  id: FunctionUri
  parent: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction
  langs:
  - csharp
  - vb
  name: FunctionUri
  nameWithType: ISparqlPropertyFunction.FunctionUri
  fullName: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.FunctionUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/PropertyFunctions/ISparqlPropertyFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FunctionUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/PropertyFunctions/ISparqlPropertyFunction.cs
    startLine: 40
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.PropertyFunctions
  summary: "\nGets the Function URI.\n"
  example: []
  syntax:
    content: Uri FunctionUri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: ReadOnly Property FunctionUri As Uri
  overload: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.FunctionUri*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  id: Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction
  langs:
  - csharp
  - vb
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ISparqlPropertyFunction.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/PropertyFunctions/ISparqlPropertyFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Evaluate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/PropertyFunctions/ISparqlPropertyFunction.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.PropertyFunctions
  summary: "\nEvaluates the function in the given context.\n"
  example: []
  syntax:
    content: BaseMultiset Evaluate(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Context.
    return:
      type: VDS.RDF.Query.Algebra.BaseMultiset
      description: ''
    content.vb: Function Evaluate(context As SparqlEvaluationContext) As BaseMultiset
  overload: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Evaluate*
- uid: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Variables
  commentId: P:VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Variables
  id: Variables
  parent: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: ISparqlPropertyFunction.Variables
  fullName: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Variables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/PropertyFunctions/ISparqlPropertyFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/PropertyFunctions/ISparqlPropertyFunction.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.PropertyFunctions
  summary: "\nGets the variables used in the function.\n"
  example: []
  syntax:
    content: IEnumerable<string> Variables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: ReadOnly Property Variables As IEnumerable(Of String)
  overload: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Variables*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VDS.RDF.Query.PropertyFunctions
  commentId: N:VDS.RDF.Query.PropertyFunctions
  name: VDS.RDF.Query.PropertyFunctions
  nameWithType: VDS.RDF.Query.PropertyFunctions
  fullName: VDS.RDF.Query.PropertyFunctions
- uid: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ISparqlPropertyFunction>()
  nameWithType: Extensions.AsEnumerable<ISparqlPropertyFunction>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction>()
  nameWithType.vb: Extensions.AsEnumerable(Of ISparqlPropertyFunction)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction)()
  name.vb: AsEnumerable(Of ISparqlPropertyFunction)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ISparqlPropertyFunction>
    nameWithType: Extensions.AsEnumerable<ISparqlPropertyFunction>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ISparqlPropertyFunction)
    nameWithType: Extensions.AsEnumerable(Of ISparqlPropertyFunction)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.FunctionUri*
  commentId: Overload:VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.FunctionUri
  name: FunctionUri
  nameWithType: ISparqlPropertyFunction.FunctionUri
  fullName: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.FunctionUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Evaluate*
  commentId: Overload:VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Evaluate
  name: Evaluate
  nameWithType: ISparqlPropertyFunction.Evaluate
  fullName: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Evaluate
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.Query.Algebra.BaseMultiset
  commentId: T:VDS.RDF.Query.Algebra.BaseMultiset
  parent: VDS.RDF.Query.Algebra
  name: BaseMultiset
  nameWithType: BaseMultiset
  fullName: VDS.RDF.Query.Algebra.BaseMultiset
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Algebra
  commentId: N:VDS.RDF.Query.Algebra
  name: VDS.RDF.Query.Algebra
  nameWithType: VDS.RDF.Query.Algebra
  fullName: VDS.RDF.Query.Algebra
- uid: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Variables*
  commentId: Overload:VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Variables
  name: Variables
  nameWithType: ISparqlPropertyFunction.Variables
  fullName: VDS.RDF.Query.PropertyFunctions.ISparqlPropertyFunction.Variables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
