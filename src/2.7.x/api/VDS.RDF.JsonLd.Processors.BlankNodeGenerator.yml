### YamlMime:ManagedReference
items:
- uid: VDS.RDF.JsonLd.Processors.BlankNodeGenerator
  commentId: T:VDS.RDF.JsonLd.Processors.BlankNodeGenerator
  id: BlankNodeGenerator
  parent: VDS.RDF.JsonLd.Processors
  children:
  - VDS.RDF.JsonLd.Processors.BlankNodeGenerator.#ctor(System.String)
  - VDS.RDF.JsonLd.Processors.BlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
  langs:
  - csharp
  - vb
  name: BlankNodeGenerator
  nameWithType: BlankNodeGenerator
  fullName: VDS.RDF.JsonLd.Processors.BlankNodeGenerator
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/Processors/BlankNodeGenerator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BlankNodeGenerator
    path: Libraries/dotNetRDF/JsonLd/Processors/BlankNodeGenerator.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd.Processors
  summary: "\nDefault implementation of the <xref href=\"VDS.RDF.JsonLd.IBlankNodeGenerator\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: 'public class BlankNodeGenerator : IBlankNodeGenerator'
    content.vb: >-
      Public Class BlankNodeGenerator
          Implements IBlankNodeGenerator
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.JsonLd.IBlankNodeGenerator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.JsonLd.Processors.BlankNodeGenerator.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.JsonLd.Processors.BlankNodeGenerator.#ctor(System.String)
  commentId: M:VDS.RDF.JsonLd.Processors.BlankNodeGenerator.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VDS.RDF.JsonLd.Processors.BlankNodeGenerator
  langs:
  - csharp
  - vb
  name: BlankNodeGenerator(String)
  nameWithType: BlankNodeGenerator.BlankNodeGenerator(String)
  fullName: VDS.RDF.JsonLd.Processors.BlankNodeGenerator.BlankNodeGenerator(System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/Processors/BlankNodeGenerator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/JsonLd/Processors/BlankNodeGenerator.cs
    startLine: 44
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd.Processors
  summary: "\nCreate a new generator instance.\n"
  example: []
  syntax:
    content: public BlankNodeGenerator(string counterPrefix = "b")
    parameters:
    - id: counterPrefix
      type: System.String
      description: The value to insert before the counter part of the generated blank node identifier. Must be a non-empty string.
    content.vb: Public Sub New(counterPrefix As String = "b")
  overload: VDS.RDF.JsonLd.Processors.BlankNodeGenerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.Processors.BlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
  commentId: M:VDS.RDF.JsonLd.Processors.BlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
  id: GenerateBlankNodeIdentifier(System.String)
  parent: VDS.RDF.JsonLd.Processors.BlankNodeGenerator
  langs:
  - csharp
  - vb
  name: GenerateBlankNodeIdentifier(String)
  nameWithType: BlankNodeGenerator.GenerateBlankNodeIdentifier(String)
  fullName: VDS.RDF.JsonLd.Processors.BlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/Processors/BlankNodeGenerator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GenerateBlankNodeIdentifier
    path: Libraries/dotNetRDF/JsonLd/Processors/BlankNodeGenerator.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd.Processors
  summary: "\nGenerates a unique blank node identifier for the specified input identifier.\n"
  remarks: >-
    Blank node identifiers are of the form _:{counterPrefix}{count} where {counterPrefix} is the

    string provided in the constructor of this class and {count} is a monotonically increasing integer value.
  example: []
  syntax:
    content: public string GenerateBlankNodeIdentifier(string identifier)
    parameters:
    - id: identifier
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Function GenerateBlankNodeIdentifier(identifier As String) As String
  overload: VDS.RDF.JsonLd.Processors.BlankNodeGenerator.GenerateBlankNodeIdentifier*
  implements:
  - VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.JsonLd.IBlankNodeGenerator
  commentId: T:VDS.RDF.JsonLd.IBlankNodeGenerator
  parent: VDS.RDF.JsonLd
  name: IBlankNodeGenerator
  nameWithType: IBlankNodeGenerator
  fullName: VDS.RDF.JsonLd.IBlankNodeGenerator
- uid: VDS.RDF.JsonLd.Processors
  commentId: N:VDS.RDF.JsonLd.Processors
  name: VDS.RDF.JsonLd.Processors
  nameWithType: VDS.RDF.JsonLd.Processors
  fullName: VDS.RDF.JsonLd.Processors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.JsonLd.Processors.BlankNodeGenerator.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BlankNodeGenerator>()
  nameWithType: Extensions.AsEnumerable<BlankNodeGenerator>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.JsonLd.Processors.BlankNodeGenerator>()
  nameWithType.vb: Extensions.AsEnumerable(Of BlankNodeGenerator)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.JsonLd.Processors.BlankNodeGenerator)()
  name.vb: AsEnumerable(Of BlankNodeGenerator)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BlankNodeGenerator>
    nameWithType: Extensions.AsEnumerable<BlankNodeGenerator>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.JsonLd.Processors.BlankNodeGenerator>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BlankNodeGenerator)
    nameWithType: Extensions.AsEnumerable(Of BlankNodeGenerator)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.JsonLd.Processors.BlankNodeGenerator)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.JsonLd
  commentId: N:VDS.RDF.JsonLd
  name: VDS.RDF.JsonLd
  nameWithType: VDS.RDF.JsonLd
  fullName: VDS.RDF.JsonLd
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.JsonLd.Processors.BlankNodeGenerator.#ctor*
  commentId: Overload:VDS.RDF.JsonLd.Processors.BlankNodeGenerator.#ctor
  name: BlankNodeGenerator
  nameWithType: BlankNodeGenerator.BlankNodeGenerator
  fullName: VDS.RDF.JsonLd.Processors.BlankNodeGenerator.BlankNodeGenerator
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.JsonLd.Processors.BlankNodeGenerator.GenerateBlankNodeIdentifier*
  commentId: Overload:VDS.RDF.JsonLd.Processors.BlankNodeGenerator.GenerateBlankNodeIdentifier
  name: GenerateBlankNodeIdentifier
  nameWithType: BlankNodeGenerator.GenerateBlankNodeIdentifier
  fullName: VDS.RDF.JsonLd.Processors.BlankNodeGenerator.GenerateBlankNodeIdentifier
- uid: VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
  commentId: M:VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
  parent: VDS.RDF.JsonLd.IBlankNodeGenerator
  isExternal: true
  name: GenerateBlankNodeIdentifier(String)
  nameWithType: IBlankNodeGenerator.GenerateBlankNodeIdentifier(String)
  fullName: VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
  spec.csharp:
  - uid: VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
    name: GenerateBlankNodeIdentifier
    nameWithType: IBlankNodeGenerator.GenerateBlankNodeIdentifier
    fullName: VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier(System.String)
    name: GenerateBlankNodeIdentifier
    nameWithType: IBlankNodeGenerator.GenerateBlankNodeIdentifier
    fullName: VDS.RDF.JsonLd.IBlankNodeGenerator.GenerateBlankNodeIdentifier
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
