### YamlMime:ManagedReference
items:
- uid: VDS.RDF.AsyncError
  commentId: T:VDS.RDF.AsyncError
  id: AsyncError
  parent: VDS.RDF
  children:
  - VDS.RDF.AsyncError.#ctor(System.Exception,System.Object)
  - VDS.RDF.AsyncError.Error
  - VDS.RDF.AsyncError.State
  langs:
  - csharp
  - vb
  name: AsyncError
  nameWithType: AsyncError
  fullName: VDS.RDF.AsyncError
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Callbacks.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsyncError
    path: ../../dotNetRDF/Libraries/dotNetRDF/Callbacks.cs
    startLine: 128
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMarker that will be passed to your callback in the event that an async error occurs, provides access to the error and any state that you passed in originally.\n"
  example: []
  syntax:
    content: public class AsyncError
    content.vb: Public Class AsyncError
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.AsyncError.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.AsyncError.#ctor(System.Exception,System.Object)
  commentId: M:VDS.RDF.AsyncError.#ctor(System.Exception,System.Object)
  id: '#ctor(System.Exception,System.Object)'
  parent: VDS.RDF.AsyncError
  langs:
  - csharp
  - vb
  name: AsyncError(Exception, Object)
  nameWithType: AsyncError.AsyncError(Exception, Object)
  fullName: VDS.RDF.AsyncError.AsyncError(System.Exception, System.Object)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Callbacks.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Callbacks.cs
    startLine: 135
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates new async error.\n"
  example: []
  syntax:
    content: public AsyncError(Exception ex, object state)
    parameters:
    - id: ex
      type: System.Exception
      description: Exception.
    - id: state
      type: System.Object
      description: State.
    content.vb: Public Sub New(ex As Exception, state As Object)
  overload: VDS.RDF.AsyncError.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.AsyncError.Error
  commentId: P:VDS.RDF.AsyncError.Error
  id: Error
  parent: VDS.RDF.AsyncError
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: AsyncError.Error
  fullName: VDS.RDF.AsyncError.Error
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Callbacks.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Error
    path: ../../dotNetRDF/Libraries/dotNetRDF/Callbacks.cs
    startLine: 144
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the error that occurred.\n"
  example: []
  syntax:
    content: public Exception Error { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Error As Exception
  overload: VDS.RDF.AsyncError.Error*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.AsyncError.State
  commentId: P:VDS.RDF.AsyncError.State
  id: State
  parent: VDS.RDF.AsyncError
  langs:
  - csharp
  - vb
  name: State
  nameWithType: AsyncError.State
  fullName: VDS.RDF.AsyncError.State
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Callbacks.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: State
    path: ../../dotNetRDF/Libraries/dotNetRDF/Callbacks.cs
    startLine: 149
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the original state that was passed in to the async call.\n"
  example: []
  syntax:
    content: public object State { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property State As Object
  overload: VDS.RDF.AsyncError.State*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.AsyncError.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<AsyncError>()
  nameWithType: Extensions.AsEnumerable<AsyncError>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.AsyncError>()
  nameWithType.vb: Extensions.AsEnumerable(Of AsyncError)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.AsyncError)()
  name.vb: AsEnumerable(Of AsyncError)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<AsyncError>
    nameWithType: Extensions.AsEnumerable<AsyncError>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.AsyncError>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of AsyncError)
    nameWithType: Extensions.AsEnumerable(Of AsyncError)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.AsyncError)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.AsyncError.#ctor*
  commentId: Overload:VDS.RDF.AsyncError.#ctor
  name: AsyncError
  nameWithType: AsyncError.AsyncError
  fullName: VDS.RDF.AsyncError.AsyncError
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: VDS.RDF.AsyncError.Error*
  commentId: Overload:VDS.RDF.AsyncError.Error
  name: Error
  nameWithType: AsyncError.Error
  fullName: VDS.RDF.AsyncError.Error
- uid: VDS.RDF.AsyncError.State*
  commentId: Overload:VDS.RDF.AsyncError.State
  name: State
  nameWithType: AsyncError.State
  fullName: VDS.RDF.AsyncError.State
