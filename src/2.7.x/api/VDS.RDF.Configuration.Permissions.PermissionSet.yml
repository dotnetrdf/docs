### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Configuration.Permissions.PermissionSet
  commentId: T:VDS.RDF.Configuration.Permissions.PermissionSet
  id: PermissionSet
  parent: VDS.RDF.Configuration.Permissions
  children:
  - VDS.RDF.Configuration.Permissions.PermissionSet.#ctor(System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.Configuration.Permissions.PermissionSet.#ctor(System.String)
  - VDS.RDF.Configuration.Permissions.PermissionSet.IsPermissionFor(System.String)
  langs:
  - csharp
  - vb
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: VDS.RDF.Configuration.Permissions.PermissionSet
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/Permission.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PermissionSet
    path: Libraries/dotNetRDF/Configuration/Permissions/Permission.cs
    startLine: 98
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nRepresents a set of Permissions that can be allowed/denied.\n"
  example: []
  syntax:
    content: 'public class PermissionSet : IPermission'
    content.vb: >-
      Public Class PermissionSet
          Implements IPermission
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Configuration.Permissions.IPermission
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Configuration.Permissions.PermissionSet.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Configuration.Permissions.PermissionSet.#ctor(System.String)
  commentId: M:VDS.RDF.Configuration.Permissions.PermissionSet.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VDS.RDF.Configuration.Permissions.PermissionSet
  langs:
  - csharp
  - vb
  name: PermissionSet(String)
  nameWithType: PermissionSet.PermissionSet(String)
  fullName: VDS.RDF.Configuration.Permissions.PermissionSet.PermissionSet(System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/Permission.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Configuration/Permissions/Permission.cs
    startLine: 106
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nCreates a new Permissions Set.\n"
  example: []
  syntax:
    content: public PermissionSet(string action)
    parameters:
    - id: action
      type: System.String
      description: Action.
    content.vb: Public Sub New(action As String)
  overload: VDS.RDF.Configuration.Permissions.PermissionSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Configuration.Permissions.PermissionSet.#ctor(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.Configuration.Permissions.PermissionSet.#ctor(System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String})'
  parent: VDS.RDF.Configuration.Permissions.PermissionSet
  langs:
  - csharp
  - vb
  name: PermissionSet(IEnumerable<String>)
  nameWithType: PermissionSet.PermissionSet(IEnumerable<String>)
  fullName: VDS.RDF.Configuration.Permissions.PermissionSet.PermissionSet(System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/Permission.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Configuration/Permissions/Permission.cs
    startLine: 115
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nCreates a new Permissions Set.\n"
  example: []
  syntax:
    content: public PermissionSet(IEnumerable<string> actions)
    parameters:
    - id: actions
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Actions.
    content.vb: Public Sub New(actions As IEnumerable(Of String))
  overload: VDS.RDF.Configuration.Permissions.PermissionSet.#ctor*
  nameWithType.vb: PermissionSet.PermissionSet(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Configuration.Permissions.PermissionSet.PermissionSet(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: PermissionSet(IEnumerable(Of String))
- uid: VDS.RDF.Configuration.Permissions.PermissionSet.IsPermissionFor(System.String)
  commentId: M:VDS.RDF.Configuration.Permissions.PermissionSet.IsPermissionFor(System.String)
  id: IsPermissionFor(System.String)
  parent: VDS.RDF.Configuration.Permissions.PermissionSet
  langs:
  - csharp
  - vb
  name: IsPermissionFor(String)
  nameWithType: PermissionSet.IsPermissionFor(String)
  fullName: VDS.RDF.Configuration.Permissions.PermissionSet.IsPermissionFor(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Configuration/Permissions/Permission.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPermissionFor
    path: Libraries/dotNetRDF/Configuration/Permissions/Permission.cs
    startLine: 125
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Configuration.Permissions
  summary: "\nGets whether the Permission is for the given action.\n"
  example: []
  syntax:
    content: public bool IsPermissionFor(string action)
    parameters:
    - id: action
      type: System.String
      description: Action.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsPermissionFor(action As String) As Boolean
  overload: VDS.RDF.Configuration.Permissions.PermissionSet.IsPermissionFor*
  implements:
  - VDS.RDF.Configuration.Permissions.IPermission.IsPermissionFor(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Configuration.Permissions
  commentId: N:VDS.RDF.Configuration.Permissions
  name: VDS.RDF.Configuration.Permissions
  nameWithType: VDS.RDF.Configuration.Permissions
  fullName: VDS.RDF.Configuration.Permissions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Configuration.Permissions.IPermission
  commentId: T:VDS.RDF.Configuration.Permissions.IPermission
  parent: VDS.RDF.Configuration.Permissions
  name: IPermission
  nameWithType: IPermission
  fullName: VDS.RDF.Configuration.Permissions.IPermission
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Configuration.Permissions.PermissionSet.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<PermissionSet>()
  nameWithType: Extensions.AsEnumerable<PermissionSet>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Configuration.Permissions.PermissionSet>()
  nameWithType.vb: Extensions.AsEnumerable(Of PermissionSet)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Configuration.Permissions.PermissionSet)()
  name.vb: AsEnumerable(Of PermissionSet)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<PermissionSet>
    nameWithType: Extensions.AsEnumerable<PermissionSet>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Configuration.Permissions.PermissionSet>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of PermissionSet)
    nameWithType: Extensions.AsEnumerable(Of PermissionSet)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Configuration.Permissions.PermissionSet)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Configuration.Permissions.PermissionSet.#ctor*
  commentId: Overload:VDS.RDF.Configuration.Permissions.PermissionSet.#ctor
  name: PermissionSet
  nameWithType: PermissionSet.PermissionSet
  fullName: VDS.RDF.Configuration.Permissions.PermissionSet.PermissionSet
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Configuration.Permissions.PermissionSet.IsPermissionFor*
  commentId: Overload:VDS.RDF.Configuration.Permissions.PermissionSet.IsPermissionFor
  name: IsPermissionFor
  nameWithType: PermissionSet.IsPermissionFor
  fullName: VDS.RDF.Configuration.Permissions.PermissionSet.IsPermissionFor
- uid: VDS.RDF.Configuration.Permissions.IPermission.IsPermissionFor(System.String)
  commentId: M:VDS.RDF.Configuration.Permissions.IPermission.IsPermissionFor(System.String)
  parent: VDS.RDF.Configuration.Permissions.IPermission
  isExternal: true
  name: IsPermissionFor(String)
  nameWithType: IPermission.IsPermissionFor(String)
  fullName: VDS.RDF.Configuration.Permissions.IPermission.IsPermissionFor(System.String)
  spec.csharp:
  - uid: VDS.RDF.Configuration.Permissions.IPermission.IsPermissionFor(System.String)
    name: IsPermissionFor
    nameWithType: IPermission.IsPermissionFor
    fullName: VDS.RDF.Configuration.Permissions.IPermission.IsPermissionFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Configuration.Permissions.IPermission.IsPermissionFor(System.String)
    name: IsPermissionFor
    nameWithType: IPermission.IsPermissionFor
    fullName: VDS.RDF.Configuration.Permissions.IPermission.IsPermissionFor
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
shouldSkipMarkup: true
