### YamlMime:ManagedReference
items:
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions
  commentId: T:VDS.RDF.JsonLd.JsonLdProcessorOptions
  id: JsonLdProcessorOptions
  parent: VDS.RDF.JsonLd
  children:
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.Base
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.Clone
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.CompactArrays
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.CompactToRelative
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.DocumentLoader
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.Embed
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.ExpandContext
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.Explicit
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.ExtractAllScripts
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.FrameDefault
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.FrameExpansion
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.Loader
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.OmitDefault
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.OmitGraph
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.Ordered
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.ProcessingMode
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.ProduceGeneralizedRdf
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.PruneBlankNodeIdentifiers
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.RdfDirection
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.RemoteContextLimit
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.RequireAll
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.UseNativeTypes
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.UseRdfType
  langs:
  - csharp
  - vb
  name: JsonLdProcessorOptions
  nameWithType: JsonLdProcessorOptions
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: JsonLdProcessorOptions
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nA collection of options for setting up the JSON-LD processor.\n"
  example: []
  syntax:
    content: public class JsonLdProcessorOptions
    content.vb: Public Class JsonLdProcessorOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.JsonLd.JsonLdProcessorOptions.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.Base
  commentId: P:VDS.RDF.JsonLd.JsonLdProcessorOptions.Base
  id: Base
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: Base
  nameWithType: JsonLdProcessorOptions.Base
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.Base
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Base
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 43
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nThe base IRI to use when expanding or compacting the document.\n"
  remarks: If set, this overrides the input document&apos;s IRI.
  example: []
  syntax:
    content: public Uri Base { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property Base As Uri
  overload: VDS.RDF.JsonLd.JsonLdProcessorOptions.Base*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.CompactArrays
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.CompactArrays
  id: CompactArrays
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: CompactArrays
  nameWithType: JsonLdProcessorOptions.CompactArrays
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.CompactArrays
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompactArrays
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 53
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nFlag indicating if arrays of one element should be replaced by the single value during compaction.\n"
  remarks: "\n<p>If set to true, the JSON-LD processor replaces arrays with just one element with that element during compaction.\nIf set to false, all arrays will remain arrays even if they have just one element. </p>\n<p>Defaults to true.</p>\n"
  example: []
  syntax:
    content: public bool CompactArrays
    return:
      type: System.Boolean
    content.vb: Public CompactArrays As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.CompactToRelative
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.CompactToRelative
  id: CompactToRelative
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: CompactToRelative
  nameWithType: JsonLdProcessorOptions.CompactToRelative
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.CompactToRelative
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompactToRelative
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nDetermines if IRIs are compacted relative to the base option or document location when compacting.\n"
  remarks: Defaults to true.
  example: []
  syntax:
    content: public bool CompactToRelative
    return:
      type: System.Boolean
    content.vb: Public CompactToRelative As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.DocumentLoader
  commentId: P:VDS.RDF.JsonLd.JsonLdProcessorOptions.DocumentLoader
  id: DocumentLoader
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: DocumentLoader
  nameWithType: JsonLdProcessorOptions.DocumentLoader
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.DocumentLoader
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DocumentLoader
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 68
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nThe callback of the loader to be used to retrieve remote documents and contexts.\n"
  remarks: "\n<p> If specified, the <xref href=\"VDS.RDF.JsonLd.JsonLdProcessorOptions.DocumentLoader\" data-throw-if-not-resolved=\"false\"></xref> is used to retrieve remote documents and contexts; otherwise, if not specified, the processor&apos;s built-in loader is used.</p>\n<p>If the function returns null or throws an exception, it will be assumed that dereferencing the IRI has failed.</p>\n"
  example: []
  syntax:
    content: public Func<Uri, JsonLdLoaderOptions, RemoteDocument> DocumentLoader { get; set; }
    parameters: []
    return:
      type: System.Func{System.Uri,VDS.RDF.JsonLd.JsonLdLoaderOptions,VDS.RDF.JsonLd.RemoteDocument}
    content.vb: Public Property DocumentLoader As Func(Of Uri, JsonLdLoaderOptions, RemoteDocument)
  overload: VDS.RDF.JsonLd.JsonLdProcessorOptions.DocumentLoader*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.Loader
  commentId: P:VDS.RDF.JsonLd.JsonLdProcessorOptions.Loader
  id: Loader
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: Loader
  nameWithType: JsonLdProcessorOptions.Loader
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.Loader
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Loader
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 74
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nThe callback of the loader to be used to retrieve remote documents and contexts.\n"
  remarks: This property has been replaced by the <xref href="VDS.RDF.JsonLd.JsonLdProcessorOptions.DocumentLoader" data-throw-if-not-resolved="false"></xref> property whose name matches that defined by the JSON-LD 1.1 API specification.
  example: []
  syntax:
    content: >-
      [Obsolete("The Loader property has been deprecated in favor of the DocumentLoader property.")]

      public Func<Uri, JsonLdLoaderOptions, RemoteDocument> Loader { get; set; }
    parameters: []
    return:
      type: System.Func{System.Uri,VDS.RDF.JsonLd.JsonLdLoaderOptions,VDS.RDF.JsonLd.RemoteDocument}
    content.vb: >-
      <Obsolete("The Loader property has been deprecated in favor of the DocumentLoader property.")>

      Public Property Loader As Func(Of Uri, JsonLdLoaderOptions, RemoteDocument)
  overload: VDS.RDF.JsonLd.JsonLdProcessorOptions.Loader*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: The Loader property has been deprecated in favor of the DocumentLoader property.
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.ExpandContext
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.ExpandContext
  id: ExpandContext
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: ExpandContext
  nameWithType: JsonLdProcessorOptions.ExpandContext
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.ExpandContext
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExpandContext
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 80
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nA context that is used to initialize the active context when expanding a document.\n"
  example: []
  syntax:
    content: public JToken ExpandContext
    return:
      type: Newtonsoft.Json.Linq.JToken
    content.vb: Public ExpandContext As JToken
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.ExtractAllScripts
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.ExtractAllScripts
  id: ExtractAllScripts
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: ExtractAllScripts
  nameWithType: JsonLdProcessorOptions.ExtractAllScripts
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.ExtractAllScripts
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExtractAllScripts
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 87
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nSpecifies whether HTML document processing should target all of the JSON-LD script elements in the document or not.\n"
  remarks: >-
    If set to true, when extracting JSON-LD script elements from HTML, unless a specific fragment identifier is targeted,

    extracts all encountered JSON-LD script elements using an array form, if necessary. Defaults to false.
  example: []
  syntax:
    content: public bool ExtractAllScripts
    return:
      type: System.Boolean
    content.vb: Public ExtractAllScripts As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.FrameExpansion
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.FrameExpansion
  id: FrameExpansion
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: FrameExpansion
  nameWithType: JsonLdProcessorOptions.FrameExpansion
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.FrameExpansion
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FrameExpansion
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 97
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nSpecifies whether special frame expansion rules should be applied during expansion and/or RDF serialization.\n"
  remarks: "\n<p>Enables special frame processing rules for the Expansion Algorithm.</p>\n<p>Enables special rules for the Serialize RDF as JSON-LD Algorithm to use JSON-LD native types as values, where possible.</p>\n<p>Defaults to false.</p>\n"
  example: []
  syntax:
    content: public bool FrameExpansion
    return:
      type: System.Boolean
    content.vb: Public FrameExpansion As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.Ordered
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.Ordered
  id: Ordered
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: Ordered
  nameWithType: JsonLdProcessorOptions.Ordered
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.Ordered
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Ordered
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 106
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nSpecifies whether the processor should operate on properties in lexicographical order or not.\n"
  remarks: "\n<p>If set to true, certain algorithm processing steps where indicated are ordered lexicographically. If false, order is not considered in processing.</p>\n<p>Defaults to false.</p>\n"
  example: []
  syntax:
    content: public bool Ordered
    return:
      type: System.Boolean
    content.vb: Public Ordered As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.ProcessingMode
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.ProcessingMode
  id: ProcessingMode
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: ProcessingMode
  nameWithType: JsonLdProcessorOptions.ProcessingMode
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.ProcessingMode
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ProcessingMode
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 116
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the processing model that the processor will use.\n"
  remarks: "\n<p>This implementation supports only the json-ld-1.0 (using <xref href=\"VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode.JsonLd10\" data-throw-if-not-resolved=\"false\"></xref>) and json-ld-1.1 (using <xref href=\"VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode.JsonLd11\" data-throw-if-not-resolved=\"false\"></xref>)\nprocessing modes as defined in the JSON-LD 1.1 specification.</p>\n<p>Defaults to <xref href=\"VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode.JsonLd11\" data-throw-if-not-resolved=\"false\"></xref>.</p>\n"
  example: []
  syntax:
    content: public JsonLdProcessingMode? ProcessingMode
    return:
      type: System.Nullable{VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode}
    content.vb: Public ProcessingMode As JsonLdProcessingMode?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.ProduceGeneralizedRdf
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.ProduceGeneralizedRdf
  id: ProduceGeneralizedRdf
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: ProduceGeneralizedRdf
  nameWithType: JsonLdProcessorOptions.ProduceGeneralizedRdf
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.ProduceGeneralizedRdf
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ProduceGeneralizedRdf
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 125
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nIf set to true, the JSON-LD processor may emit blank nodes for triple predicates, otherwise they will be omitted.\n"
  remarks: "\n<p>This feature of JSON-LD is deprecated in JSON-LD 1.1 and may be removed in future versions of the specification.</p>\n<p>Default to false.</p>\n"
  example: []
  syntax:
    content: public bool ProduceGeneralizedRdf
    return:
      type: System.Boolean
    content.vb: Public ProduceGeneralizedRdf As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.RdfDirection
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.RdfDirection
  id: RdfDirection
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: RdfDirection
  nameWithType: JsonLdProcessorOptions.RdfDirection
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.RdfDirection
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RdfDirection
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 134
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the method by which literal values containing a base direction are transformed to and from RDF.\n"
  example: []
  syntax:
    content: public JsonLdRdfDirectionMode? RdfDirection
    return:
      type: System.Nullable{VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode}
    content.vb: Public RdfDirection As JsonLdRdfDirectionMode?
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.UseNativeTypes
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.UseNativeTypes
  id: UseNativeTypes
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: UseNativeTypes
  nameWithType: JsonLdProcessorOptions.UseNativeTypes
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.UseNativeTypes
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UseNativeTypes
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 143
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the flag that determines whether or not JSON native values should be used in literals.\n"
  remarks: "\n<p>If enabled, causes the Serialize RDF as JSON-LD Algorithm to use native JSON values in value objects avoiding the need for an explicitly @type.</p>\n<p>Defaults to false.</p>\n"
  example: []
  syntax:
    content: public bool UseNativeTypes
    return:
      type: System.Boolean
    content.vb: Public UseNativeTypes As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.UseRdfType
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.UseRdfType
  id: UseRdfType
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: UseRdfType
  nameWithType: JsonLdProcessorOptions.UseRdfType
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.UseRdfType
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UseRdfType
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 151
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the flag that controls the serialization of rdf:type properties when serializing RDF as JSON-LD.\n"
  remarks: "\nEnables special rules for the Serialize RDF as JSON-LD Algorithm causing rdf:type properties to be kept as IRIs in the output, rather than use @type. Defaults to false.\n"
  example: []
  syntax:
    content: public bool UseRdfType
    return:
      type: System.Boolean
    content.vb: Public UseRdfType As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.Embed
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.Embed
  id: Embed
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: Embed
  nameWithType: JsonLdProcessorOptions.Embed
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.Embed
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Embed
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 156
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nSets the value object embed flag used in the Framing Algorithm.\n"
  example: []
  syntax:
    content: public JsonLdEmbed Embed
    return:
      type: VDS.RDF.JsonLd.Syntax.JsonLdEmbed
    content.vb: Public Embed As JsonLdEmbed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.Explicit
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.Explicit
  id: Explicit
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: Explicit
  nameWithType: JsonLdProcessorOptions.Explicit
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.Explicit
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Explicit
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 161
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nSets the value explicit inclusion flag used in the Framing Algorithm.\n"
  example: []
  syntax:
    content: public bool Explicit
    return:
      type: System.Boolean
    content.vb: Public Explicit As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.OmitDefault
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.OmitDefault
  id: OmitDefault
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: OmitDefault
  nameWithType: JsonLdProcessorOptions.OmitDefault
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.OmitDefault
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OmitDefault
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 166
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nSets the value omit default flag used in the Framing Algorithm.\n"
  example: []
  syntax:
    content: public bool OmitDefault
    return:
      type: System.Boolean
    content.vb: Public OmitDefault As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.OmitGraph
  commentId: P:VDS.RDF.JsonLd.JsonLdProcessorOptions.OmitGraph
  id: OmitGraph
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: OmitGraph
  nameWithType: JsonLdProcessorOptions.OmitGraph
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.OmitGraph
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OmitGraph
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 173
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGEt or set the value of the omit graph flag used in the Framing Algorithm.\n"
  remarks: Defaults to false if <xref href="VDS.RDF.JsonLd.JsonLdProcessorOptions.ProcessingMode" data-throw-if-not-resolved="false"></xref> is <xref href="VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode.JsonLd10" data-throw-if-not-resolved="false"></xref>, true otherwise.
  example: []
  syntax:
    content: public bool OmitGraph { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OmitGraph As Boolean
  overload: VDS.RDF.JsonLd.JsonLdProcessorOptions.OmitGraph*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.RequireAll
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.RequireAll
  id: RequireAll
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: RequireAll
  nameWithType: JsonLdProcessorOptions.RequireAll
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.RequireAll
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RequireAll
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 182
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nSets the value require all flag used in the Framing Algorithm.\n"
  example: []
  syntax:
    content: public bool RequireAll
    return:
      type: System.Boolean
    content.vb: Public RequireAll As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.FrameDefault
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.FrameDefault
  id: FrameDefault
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: FrameDefault
  nameWithType: JsonLdProcessorOptions.FrameDefault
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.FrameDefault
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FrameDefault
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 187
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nInstead of framing a merged graph, frame only the default graph.\n"
  example: []
  syntax:
    content: public bool FrameDefault
    return:
      type: System.Boolean
    content.vb: Public FrameDefault As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.PruneBlankNodeIdentifiers
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.PruneBlankNodeIdentifiers
  id: PruneBlankNodeIdentifiers
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: PruneBlankNodeIdentifiers
  nameWithType: JsonLdProcessorOptions.PruneBlankNodeIdentifiers
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.PruneBlankNodeIdentifiers
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PruneBlankNodeIdentifiers
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 193
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nRemoves @id from node objects where the value is a blank node identifier used only once within the document.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This property is no longer part of the JSON-LD specification")]

      public bool PruneBlankNodeIdentifiers
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("This property is no longer part of the JSON-LD specification")>

      Public PruneBlankNodeIdentifiers As Boolean
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This property is no longer part of the JSON-LD specification
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.RemoteContextLimit
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.RemoteContextLimit
  id: RemoteContextLimit
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: RemoteContextLimit
  nameWithType: JsonLdProcessorOptions.RemoteContextLimit
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.RemoteContextLimit
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RemoteContextLimit
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 207
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nThe maximum number of remote context references to load during processing.\n"
  remarks: "\n<p>\n    If set to a value less than 0, there is no limit on the number of remote contexts that can be processed.\n    Defaults to -1 (no limit).\n</p>\n<p>This property is no longer part of the JSON-LD specification but is provided as as convenience for\ndevelopers to ensure that there is a limit to remote context processing (or that remote context processing\nis completely disabled by setting this property to 0).</p>\n"
  example: []
  syntax:
    content: public int RemoteContextLimit
    return:
      type: System.Int32
    content.vb: Public RemoteContextLimit As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.Clone
  commentId: M:VDS.RDF.JsonLd.JsonLdProcessorOptions.Clone
  id: Clone
  parent: VDS.RDF.JsonLd.JsonLdProcessorOptions
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: JsonLdProcessorOptions.Clone()
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.Clone()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Clone
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessorOptions.cs
    startLine: 213
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nCreate a copy of this instance, cloning all of its values.\n"
  example: []
  syntax:
    content: public JsonLdProcessorOptions Clone()
    return:
      type: VDS.RDF.JsonLd.JsonLdProcessorOptions
      description: ''
    content.vb: Public Function Clone As JsonLdProcessorOptions
  overload: VDS.RDF.JsonLd.JsonLdProcessorOptions.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.JsonLd
  commentId: N:VDS.RDF.JsonLd
  name: VDS.RDF.JsonLd
  nameWithType: VDS.RDF.JsonLd
  fullName: VDS.RDF.JsonLd
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<JsonLdProcessorOptions>()
  nameWithType: Extensions.AsEnumerable<JsonLdProcessorOptions>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.JsonLd.JsonLdProcessorOptions>()
  nameWithType.vb: Extensions.AsEnumerable(Of JsonLdProcessorOptions)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.JsonLd.JsonLdProcessorOptions)()
  name.vb: AsEnumerable(Of JsonLdProcessorOptions)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<JsonLdProcessorOptions>
    nameWithType: Extensions.AsEnumerable<JsonLdProcessorOptions>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.JsonLd.JsonLdProcessorOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of JsonLdProcessorOptions)
    nameWithType: Extensions.AsEnumerable(Of JsonLdProcessorOptions)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.JsonLd.JsonLdProcessorOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.Base*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdProcessorOptions.Base
  name: Base
  nameWithType: JsonLdProcessorOptions.Base
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.Base
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.DocumentLoader
  commentId: P:VDS.RDF.JsonLd.JsonLdProcessorOptions.DocumentLoader
  isExternal: true
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.DocumentLoader*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdProcessorOptions.DocumentLoader
  name: DocumentLoader
  nameWithType: JsonLdProcessorOptions.DocumentLoader
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.DocumentLoader
- uid: System.Func{System.Uri,VDS.RDF.JsonLd.JsonLdLoaderOptions,VDS.RDF.JsonLd.RemoteDocument}
  commentId: T:System.Func{System.Uri,VDS.RDF.JsonLd.JsonLdLoaderOptions,VDS.RDF.JsonLd.RemoteDocument}
  parent: System
  definition: System.Func`3
  name: Func<Uri, JsonLdLoaderOptions, RemoteDocument>
  nameWithType: Func<Uri, JsonLdLoaderOptions, RemoteDocument>
  fullName: System.Func<System.Uri, VDS.RDF.JsonLd.JsonLdLoaderOptions, VDS.RDF.JsonLd.RemoteDocument>
  nameWithType.vb: Func(Of Uri, JsonLdLoaderOptions, RemoteDocument)
  fullName.vb: System.Func(Of System.Uri, VDS.RDF.JsonLd.JsonLdLoaderOptions, VDS.RDF.JsonLd.RemoteDocument)
  name.vb: Func(Of Uri, JsonLdLoaderOptions, RemoteDocument)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.JsonLd.JsonLdLoaderOptions
    name: JsonLdLoaderOptions
    nameWithType: JsonLdLoaderOptions
    fullName: VDS.RDF.JsonLd.JsonLdLoaderOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.JsonLd.RemoteDocument
    name: RemoteDocument
    nameWithType: RemoteDocument
    fullName: VDS.RDF.JsonLd.RemoteDocument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.JsonLd.JsonLdLoaderOptions
    name: JsonLdLoaderOptions
    nameWithType: JsonLdLoaderOptions
    fullName: VDS.RDF.JsonLd.JsonLdLoaderOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.JsonLd.RemoteDocument
    name: RemoteDocument
    nameWithType: RemoteDocument
    fullName: VDS.RDF.JsonLd.RemoteDocument
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`3
  commentId: T:System.Func`3
  isExternal: true
  name: Func<T1, T2, TResult>
  nameWithType: Func<T1, T2, TResult>
  fullName: System.Func<T1, T2, TResult>
  nameWithType.vb: Func(Of T1, T2, TResult)
  fullName.vb: System.Func(Of T1, T2, TResult)
  name.vb: Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.Loader*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdProcessorOptions.Loader
  name: Loader
  nameWithType: JsonLdProcessorOptions.Loader
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.Loader
- uid: Newtonsoft.Json.Linq.JToken
  commentId: T:Newtonsoft.Json.Linq.JToken
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JToken
  nameWithType: JToken
  fullName: Newtonsoft.Json.Linq.JToken
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode.JsonLd10
  commentId: F:VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode.JsonLd10
  isExternal: true
- uid: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode.JsonLd11
  commentId: F:VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode.JsonLd11
  isExternal: true
- uid: System.Nullable{VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode}
  commentId: T:System.Nullable{VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<JsonLdProcessingMode>
  nameWithType: Nullable<JsonLdProcessingMode>
  fullName: System.Nullable<VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode>
  nameWithType.vb: Nullable(Of JsonLdProcessingMode)
  fullName.vb: System.Nullable(Of VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode)
  name.vb: Nullable(Of JsonLdProcessingMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode
    name: JsonLdProcessingMode
    nameWithType: JsonLdProcessingMode
    fullName: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode
    name: JsonLdProcessingMode
    nameWithType: JsonLdProcessingMode
    fullName: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode.I18NDatatype
  commentId: F:VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode.I18NDatatype
  isExternal: true
- uid: VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode.CompoundLiteral
  commentId: F:VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode.CompoundLiteral
  isExternal: true
- uid: System.Nullable{VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode}
  commentId: T:System.Nullable{VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<JsonLdRdfDirectionMode>
  nameWithType: Nullable<JsonLdRdfDirectionMode>
  fullName: System.Nullable<VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode>
  nameWithType.vb: Nullable(Of JsonLdRdfDirectionMode)
  fullName.vb: System.Nullable(Of VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode)
  name.vb: Nullable(Of JsonLdRdfDirectionMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode
    name: JsonLdRdfDirectionMode
    nameWithType: JsonLdRdfDirectionMode
    fullName: VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode
    name: JsonLdRdfDirectionMode
    nameWithType: JsonLdRdfDirectionMode
    fullName: VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.JsonLd.Syntax.JsonLdEmbed
  commentId: T:VDS.RDF.JsonLd.Syntax.JsonLdEmbed
  parent: VDS.RDF.JsonLd.Syntax
  name: JsonLdEmbed
  nameWithType: JsonLdEmbed
  fullName: VDS.RDF.JsonLd.Syntax.JsonLdEmbed
- uid: VDS.RDF.JsonLd.Syntax
  commentId: N:VDS.RDF.JsonLd.Syntax
  name: VDS.RDF.JsonLd.Syntax
  nameWithType: VDS.RDF.JsonLd.Syntax
  fullName: VDS.RDF.JsonLd.Syntax
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.ProcessingMode
  commentId: F:VDS.RDF.JsonLd.JsonLdProcessorOptions.ProcessingMode
  isExternal: true
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.OmitGraph*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdProcessorOptions.OmitGraph
  name: OmitGraph
  nameWithType: JsonLdProcessorOptions.OmitGraph
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.OmitGraph
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions.Clone*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdProcessorOptions.Clone
  name: Clone
  nameWithType: JsonLdProcessorOptions.Clone
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions.Clone
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions
  commentId: T:VDS.RDF.JsonLd.JsonLdProcessorOptions
  parent: VDS.RDF.JsonLd
  name: JsonLdProcessorOptions
  nameWithType: JsonLdProcessorOptions
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions
shouldSkipMarkup: true
