### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Events.IJitEventGenerator`1
  commentId: T:VDS.RDF.Parsing.Events.IJitEventGenerator`1
  id: IJitEventGenerator`1
  parent: VDS.RDF.Parsing.Events
  children:
  - VDS.RDF.Parsing.Events.IJitEventGenerator`1.Finished
  - VDS.RDF.Parsing.Events.IJitEventGenerator`1.GetNextEvent
  langs:
  - csharp
  - vb
  name: IJitEventGenerator<T>
  nameWithType: IJitEventGenerator<T>
  fullName: VDS.RDF.Parsing.Events.IJitEventGenerator<T>
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventGenerator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IJitEventGenerator
    path: Libraries/dotNetRDF/Parsing/Events/IEventGenerator.cs
    startLine: 76
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nInterface for Just-in-time event generators.\n"
  example: []
  syntax:
    content: 'public interface IJitEventGenerator<T> : IEventGenerator<T> where T : IEvent'
    typeParameters:
    - id: T
      description: Event Type.
    content.vb: >-
      Public Interface IJitEventGenerator(Of T As IEvent)
          Inherits IEventGenerator(Of T)
  extensionMethods:
  - VDS.RDF.Parsing.Events.IJitEventGenerator`1.VDS.RDF.Extensions.AsEnumerable``1
  nameWithType.vb: IJitEventGenerator(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: VDS.RDF.Parsing.Events.IJitEventGenerator(Of T)
  name.vb: IJitEventGenerator(Of T)
- uid: VDS.RDF.Parsing.Events.IJitEventGenerator`1.GetNextEvent
  commentId: M:VDS.RDF.Parsing.Events.IJitEventGenerator`1.GetNextEvent
  id: GetNextEvent
  parent: VDS.RDF.Parsing.Events.IJitEventGenerator`1
  langs:
  - csharp
  - vb
  name: GetNextEvent()
  nameWithType: IJitEventGenerator<T>.GetNextEvent()
  fullName: VDS.RDF.Parsing.Events.IJitEventGenerator<T>.GetNextEvent()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventGenerator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetNextEvent
    path: Libraries/dotNetRDF/Parsing/Events/IEventGenerator.cs
    startLine: 84
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets the next available event.\n"
  example: []
  syntax:
    content: T GetNextEvent()
    return:
      type: '{T}'
      description: ''
    content.vb: Function GetNextEvent As T
  overload: VDS.RDF.Parsing.Events.IJitEventGenerator`1.GetNextEvent*
  nameWithType.vb: IJitEventGenerator(Of T).GetNextEvent()
  fullName.vb: VDS.RDF.Parsing.Events.IJitEventGenerator(Of T).GetNextEvent()
- uid: VDS.RDF.Parsing.Events.IJitEventGenerator`1.Finished
  commentId: P:VDS.RDF.Parsing.Events.IJitEventGenerator`1.Finished
  id: Finished
  parent: VDS.RDF.Parsing.Events.IJitEventGenerator`1
  langs:
  - csharp
  - vb
  name: Finished
  nameWithType: IJitEventGenerator<T>.Finished
  fullName: VDS.RDF.Parsing.Events.IJitEventGenerator<T>.Finished
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventGenerator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Finished
    path: Libraries/dotNetRDF/Parsing/Events/IEventGenerator.cs
    startLine: 89
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets whether the Event Generator has finished reading events i.e. there are no further events available.\n"
  example: []
  syntax:
    content: bool Finished { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property Finished As Boolean
  overload: VDS.RDF.Parsing.Events.IJitEventGenerator`1.Finished*
  nameWithType.vb: IJitEventGenerator(Of T).Finished
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: VDS.RDF.Parsing.Events.IJitEventGenerator(Of T).Finished
references:
- uid: VDS.RDF.Parsing.Events
  commentId: N:VDS.RDF.Parsing.Events
  name: VDS.RDF.Parsing.Events
  nameWithType: VDS.RDF.Parsing.Events
  fullName: VDS.RDF.Parsing.Events
- uid: VDS.RDF.Parsing.Events.IJitEventGenerator`1.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IJitEventGenerator<T>>()
  nameWithType: Extensions.AsEnumerable<IJitEventGenerator<T>>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.IJitEventGenerator<T>>()
  nameWithType.vb: Extensions.AsEnumerable(Of IJitEventGenerator(Of T))()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.IJitEventGenerator(Of T))()
  name.vb: AsEnumerable(Of IJitEventGenerator(Of T))()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IJitEventGenerator<T>>
    nameWithType: Extensions.AsEnumerable<IJitEventGenerator<T>>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.IJitEventGenerator<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IJitEventGenerator(Of T))
    nameWithType: Extensions.AsEnumerable(Of IJitEventGenerator(Of T))
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.IJitEventGenerator(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Events.IJitEventGenerator`1.GetNextEvent*
  commentId: Overload:VDS.RDF.Parsing.Events.IJitEventGenerator`1.GetNextEvent
  name: GetNextEvent
  nameWithType: IJitEventGenerator<T>.GetNextEvent
  fullName: VDS.RDF.Parsing.Events.IJitEventGenerator<T>.GetNextEvent
  nameWithType.vb: IJitEventGenerator(Of T).GetNextEvent
  fullName.vb: VDS.RDF.Parsing.Events.IJitEventGenerator(Of T).GetNextEvent
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VDS.RDF.Parsing.Events.IJitEventGenerator`1.Finished*
  commentId: Overload:VDS.RDF.Parsing.Events.IJitEventGenerator`1.Finished
  name: Finished
  nameWithType: IJitEventGenerator<T>.Finished
  fullName: VDS.RDF.Parsing.Events.IJitEventGenerator<T>.Finished
  nameWithType.vb: IJitEventGenerator(Of T).Finished
  fullName.vb: VDS.RDF.Parsing.Events.IJitEventGenerator(Of T).Finished
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
shouldSkipMarkup: true
