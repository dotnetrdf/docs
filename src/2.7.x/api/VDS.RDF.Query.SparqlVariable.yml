### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.SparqlVariable
  commentId: T:VDS.RDF.Query.SparqlVariable
  id: SparqlVariable
  parent: VDS.RDF.Query
  children:
  - VDS.RDF.Query.SparqlVariable.#ctor(System.String)
  - VDS.RDF.Query.SparqlVariable.#ctor(System.String,System.Boolean)
  - VDS.RDF.Query.SparqlVariable.#ctor(System.String,VDS.RDF.Query.Aggregates.ISparqlAggregate)
  - VDS.RDF.Query.SparqlVariable.#ctor(System.String,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.SparqlVariable.Aggregate
  - VDS.RDF.Query.SparqlVariable.IsAggregate
  - VDS.RDF.Query.SparqlVariable.IsProjection
  - VDS.RDF.Query.SparqlVariable.IsResultVariable
  - VDS.RDF.Query.SparqlVariable.Name
  - VDS.RDF.Query.SparqlVariable.Projection
  - VDS.RDF.Query.SparqlVariable.ToString
  langs:
  - csharp
  - vb
  name: SparqlVariable
  nameWithType: SparqlVariable
  fullName: VDS.RDF.Query.SparqlVariable
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlVariable
    path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nClass of Sparql Variables.\n"
  example: []
  syntax:
    content: public class SparqlVariable
    content.vb: Public Class SparqlVariable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.SparqlVariable.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.SparqlVariable.#ctor(System.String,System.Boolean)
  commentId: M:VDS.RDF.Query.SparqlVariable.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: VDS.RDF.Query.SparqlVariable
  langs:
  - csharp
  - vb
  name: SparqlVariable(String, Boolean)
  nameWithType: SparqlVariable.SparqlVariable(String, Boolean)
  fullName: VDS.RDF.Query.SparqlVariable.SparqlVariable(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
    startLine: 48
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new Sparql Variable.\n"
  example: []
  syntax:
    content: public SparqlVariable(string name, bool isResultVar)
    parameters:
    - id: name
      type: System.String
      description: Variable Name.
    - id: isResultVar
      type: System.Boolean
      description: Does this Variable appear in the Result Set?.
    content.vb: Public Sub New(name As String, isResultVar As Boolean)
  overload: VDS.RDF.Query.SparqlVariable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlVariable.#ctor(System.String)
  commentId: M:VDS.RDF.Query.SparqlVariable.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VDS.RDF.Query.SparqlVariable
  langs:
  - csharp
  - vb
  name: SparqlVariable(String)
  nameWithType: SparqlVariable.SparqlVariable(String)
  fullName: VDS.RDF.Query.SparqlVariable.SparqlVariable(System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new Sparql Variable.\n"
  example: []
  syntax:
    content: public SparqlVariable(string name)
    parameters:
    - id: name
      type: System.String
      description: Variable Name (with leading ?/$ removed).
    content.vb: Public Sub New(name As String)
  overload: VDS.RDF.Query.SparqlVariable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlVariable.#ctor(System.String,VDS.RDF.Query.Aggregates.ISparqlAggregate)
  commentId: M:VDS.RDF.Query.SparqlVariable.#ctor(System.String,VDS.RDF.Query.Aggregates.ISparqlAggregate)
  id: '#ctor(System.String,VDS.RDF.Query.Aggregates.ISparqlAggregate)'
  parent: VDS.RDF.Query.SparqlVariable
  langs:
  - csharp
  - vb
  name: SparqlVariable(String, ISparqlAggregate)
  nameWithType: SparqlVariable.SparqlVariable(String, ISparqlAggregate)
  fullName: VDS.RDF.Query.SparqlVariable.SparqlVariable(System.String, VDS.RDF.Query.Aggregates.ISparqlAggregate)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
    startLine: 72
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new Sparql Variable which is an Aggregate.\n"
  remarks: All Aggregate Variables are automatically considered as Result Variables.
  example: []
  syntax:
    content: public SparqlVariable(string name, ISparqlAggregate aggregate)
    parameters:
    - id: name
      type: System.String
      description: Variable Name (with leading ?/$ removed).
    - id: aggregate
      type: VDS.RDF.Query.Aggregates.ISparqlAggregate
      description: Aggregate Function.
    content.vb: Public Sub New(name As String, aggregate As ISparqlAggregate)
  overload: VDS.RDF.Query.SparqlVariable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlVariable.#ctor(System.String,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.SparqlVariable.#ctor(System.String,VDS.RDF.Query.Expressions.ISparqlExpression)
  id: '#ctor(System.String,VDS.RDF.Query.Expressions.ISparqlExpression)'
  parent: VDS.RDF.Query.SparqlVariable
  langs:
  - csharp
  - vb
  name: SparqlVariable(String, ISparqlExpression)
  nameWithType: SparqlVariable.SparqlVariable(String, ISparqlExpression)
  fullName: VDS.RDF.Query.SparqlVariable.SparqlVariable(System.String, VDS.RDF.Query.Expressions.ISparqlExpression)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
    startLine: 83
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new Sparql Variable which is a Projection Expression.\n"
  example: []
  syntax:
    content: public SparqlVariable(string name, ISparqlExpression expr)
    parameters:
    - id: name
      type: System.String
      description: Variable Name (with leading ?/$ removed).
    - id: expr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: Projection Expression.
    content.vb: Public Sub New(name As String, expr As ISparqlExpression)
  overload: VDS.RDF.Query.SparqlVariable.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlVariable.Name
  commentId: P:VDS.RDF.Query.SparqlVariable.Name
  id: Name
  parent: VDS.RDF.Query.SparqlVariable
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SparqlVariable.Name
  fullName: VDS.RDF.Query.SparqlVariable.Name
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Name
    path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
    startLine: 92
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nVariable Name.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: VDS.RDF.Query.SparqlVariable.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlVariable.IsResultVariable
  commentId: P:VDS.RDF.Query.SparqlVariable.IsResultVariable
  id: IsResultVariable
  parent: VDS.RDF.Query.SparqlVariable
  langs:
  - csharp
  - vb
  name: IsResultVariable
  nameWithType: SparqlVariable.IsResultVariable
  fullName: VDS.RDF.Query.SparqlVariable.IsResultVariable
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsResultVariable
    path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
    startLine: 103
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets whether the Variable appears in the Result Set.\n"
  example: []
  syntax:
    content: public bool IsResultVariable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsResultVariable As Boolean
  overload: VDS.RDF.Query.SparqlVariable.IsResultVariable*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlVariable.IsAggregate
  commentId: P:VDS.RDF.Query.SparqlVariable.IsAggregate
  id: IsAggregate
  parent: VDS.RDF.Query.SparqlVariable
  langs:
  - csharp
  - vb
  name: IsAggregate
  nameWithType: SparqlVariable.IsAggregate
  fullName: VDS.RDF.Query.SparqlVariable.IsAggregate
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAggregate
    path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
    startLine: 114
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets whether the Variable is an Aggregate. \n"
  example: []
  syntax:
    content: public bool IsAggregate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAggregate As Boolean
  overload: VDS.RDF.Query.SparqlVariable.IsAggregate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlVariable.IsProjection
  commentId: P:VDS.RDF.Query.SparqlVariable.IsProjection
  id: IsProjection
  parent: VDS.RDF.Query.SparqlVariable
  langs:
  - csharp
  - vb
  name: IsProjection
  nameWithType: SparqlVariable.IsProjection
  fullName: VDS.RDF.Query.SparqlVariable.IsProjection
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsProjection
    path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
    startLine: 125
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets whether the Variable is a Projection Expression.\n"
  example: []
  syntax:
    content: public bool IsProjection { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsProjection As Boolean
  overload: VDS.RDF.Query.SparqlVariable.IsProjection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlVariable.Aggregate
  commentId: P:VDS.RDF.Query.SparqlVariable.Aggregate
  id: Aggregate
  parent: VDS.RDF.Query.SparqlVariable
  langs:
  - csharp
  - vb
  name: Aggregate
  nameWithType: SparqlVariable.Aggregate
  fullName: VDS.RDF.Query.SparqlVariable.Aggregate
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Aggregate
    path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
    startLine: 136
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the Aggregate Function for this Variable.\n"
  example: []
  syntax:
    content: public ISparqlAggregate Aggregate { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Aggregates.ISparqlAggregate
    content.vb: Public ReadOnly Property Aggregate As ISparqlAggregate
  overload: VDS.RDF.Query.SparqlVariable.Aggregate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlVariable.Projection
  commentId: P:VDS.RDF.Query.SparqlVariable.Projection
  id: Projection
  parent: VDS.RDF.Query.SparqlVariable
  langs:
  - csharp
  - vb
  name: Projection
  nameWithType: SparqlVariable.Projection
  fullName: VDS.RDF.Query.SparqlVariable.Projection
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Projection
    path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
    startLine: 147
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the Projection Expression for this Variable.\n"
  example: []
  syntax:
    content: public ISparqlExpression Projection { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Expressions.ISparqlExpression
    content.vb: Public ReadOnly Property Projection As ISparqlExpression
  overload: VDS.RDF.Query.SparqlVariable.Projection*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlVariable.ToString
  commentId: M:VDS.RDF.Query.SparqlVariable.ToString
  id: ToString
  parent: VDS.RDF.Query.SparqlVariable
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SparqlVariable.ToString()
  fullName: VDS.RDF.Query.SparqlVariable.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF/Query/SPARQLVariable.cs
    startLine: 159
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGet the String representation of the Variable.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VDS.RDF.Query.SparqlVariable.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlVariable.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlVariable>()
  nameWithType: Extensions.AsEnumerable<SparqlVariable>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlVariable>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlVariable)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlVariable)()
  name.vb: AsEnumerable(Of SparqlVariable)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlVariable>
    nameWithType: Extensions.AsEnumerable<SparqlVariable>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlVariable>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlVariable)
    nameWithType: Extensions.AsEnumerable(Of SparqlVariable)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlVariable)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.SparqlVariable.#ctor*
  commentId: Overload:VDS.RDF.Query.SparqlVariable.#ctor
  name: SparqlVariable
  nameWithType: SparqlVariable.SparqlVariable
  fullName: VDS.RDF.Query.SparqlVariable.SparqlVariable
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate
  commentId: T:VDS.RDF.Query.Aggregates.ISparqlAggregate
  parent: VDS.RDF.Query.Aggregates
  name: ISparqlAggregate
  nameWithType: ISparqlAggregate
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate
- uid: VDS.RDF.Query.Aggregates
  commentId: N:VDS.RDF.Query.Aggregates
  name: VDS.RDF.Query.Aggregates
  nameWithType: VDS.RDF.Query.Aggregates
  fullName: VDS.RDF.Query.Aggregates
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Query.SparqlVariable.Name*
  commentId: Overload:VDS.RDF.Query.SparqlVariable.Name
  name: Name
  nameWithType: SparqlVariable.Name
  fullName: VDS.RDF.Query.SparqlVariable.Name
- uid: VDS.RDF.Query.SparqlVariable.IsResultVariable*
  commentId: Overload:VDS.RDF.Query.SparqlVariable.IsResultVariable
  name: IsResultVariable
  nameWithType: SparqlVariable.IsResultVariable
  fullName: VDS.RDF.Query.SparqlVariable.IsResultVariable
- uid: VDS.RDF.Query.SparqlVariable.IsAggregate*
  commentId: Overload:VDS.RDF.Query.SparqlVariable.IsAggregate
  name: IsAggregate
  nameWithType: SparqlVariable.IsAggregate
  fullName: VDS.RDF.Query.SparqlVariable.IsAggregate
- uid: VDS.RDF.Query.SparqlVariable.IsProjection*
  commentId: Overload:VDS.RDF.Query.SparqlVariable.IsProjection
  name: IsProjection
  nameWithType: SparqlVariable.IsProjection
  fullName: VDS.RDF.Query.SparqlVariable.IsProjection
- uid: VDS.RDF.Query.SparqlVariable.Aggregate*
  commentId: Overload:VDS.RDF.Query.SparqlVariable.Aggregate
  name: Aggregate
  nameWithType: SparqlVariable.Aggregate
  fullName: VDS.RDF.Query.SparqlVariable.Aggregate
- uid: VDS.RDF.Query.SparqlVariable.Projection*
  commentId: Overload:VDS.RDF.Query.SparqlVariable.Projection
  name: Projection
  nameWithType: SparqlVariable.Projection
  fullName: VDS.RDF.Query.SparqlVariable.Projection
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlVariable.ToString*
  commentId: Overload:VDS.RDF.Query.SparqlVariable.ToString
  name: ToString
  nameWithType: SparqlVariable.ToString
  fullName: VDS.RDF.Query.SparqlVariable.ToString
shouldSkipMarkup: true
