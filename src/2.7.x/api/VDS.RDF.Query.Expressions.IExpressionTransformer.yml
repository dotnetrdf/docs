### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Expressions.IExpressionTransformer
  commentId: T:VDS.RDF.Query.Expressions.IExpressionTransformer
  id: IExpressionTransformer
  parent: VDS.RDF.Query.Expressions
  children:
  - VDS.RDF.Query.Expressions.IExpressionTransformer.Transform(VDS.RDF.Query.Expressions.ISparqlExpression)
  langs:
  - csharp
  - vb
  name: IExpressionTransformer
  nameWithType: IExpressionTransformer
  fullName: VDS.RDF.Query.Expressions.IExpressionTransformer
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/IExpressionTransformer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IExpressionTransformer
    path: Libraries/dotNetRDF/Query/Expressions/IExpressionTransformer.cs
    startLine: 31
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nAn Expression Transformer is a class that can traverse a SPARQL Expression tree and apply transformations to it.\n"
  example: []
  syntax:
    content: public interface IExpressionTransformer
    content.vb: Public Interface IExpressionTransformer
  extensionMethods:
  - VDS.RDF.Query.Expressions.IExpressionTransformer.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Expressions.IExpressionTransformer.Transform(VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Expressions.IExpressionTransformer.Transform(VDS.RDF.Query.Expressions.ISparqlExpression)
  id: Transform(VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Expressions.IExpressionTransformer
  langs:
  - csharp
  - vb
  name: Transform(ISparqlExpression)
  nameWithType: IExpressionTransformer.Transform(ISparqlExpression)
  fullName: VDS.RDF.Query.Expressions.IExpressionTransformer.Transform(VDS.RDF.Query.Expressions.ISparqlExpression)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/IExpressionTransformer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Transform
    path: Libraries/dotNetRDF/Query/Expressions/IExpressionTransformer.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nTransforms the expression using this transformer.\n"
  example: []
  syntax:
    content: ISparqlExpression Transform(ISparqlExpression expr)
    parameters:
    - id: expr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: Expression.
    return:
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: ''
    content.vb: Function Transform(expr As ISparqlExpression) As ISparqlExpression
  overload: VDS.RDF.Query.Expressions.IExpressionTransformer.Transform*
references:
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Query.Expressions.IExpressionTransformer.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IExpressionTransformer>()
  nameWithType: Extensions.AsEnumerable<IExpressionTransformer>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.IExpressionTransformer>()
  nameWithType.vb: Extensions.AsEnumerable(Of IExpressionTransformer)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.IExpressionTransformer)()
  name.vb: AsEnumerable(Of IExpressionTransformer)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IExpressionTransformer>
    nameWithType: Extensions.AsEnumerable<IExpressionTransformer>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.IExpressionTransformer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IExpressionTransformer)
    nameWithType: Extensions.AsEnumerable(Of IExpressionTransformer)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.IExpressionTransformer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Expressions.IExpressionTransformer.Transform*
  commentId: Overload:VDS.RDF.Query.Expressions.IExpressionTransformer.Transform
  name: Transform
  nameWithType: IExpressionTransformer.Transform
  fullName: VDS.RDF.Query.Expressions.IExpressionTransformer.Transform
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
shouldSkipMarkup: true
