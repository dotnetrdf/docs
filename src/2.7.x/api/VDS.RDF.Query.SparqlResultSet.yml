### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.SparqlResultSet
  commentId: T:VDS.RDF.Query.SparqlResultSet
  id: SparqlResultSet
  parent: VDS.RDF.Query
  children:
  - VDS.RDF.Query.SparqlResultSet.#ctor
  - VDS.RDF.Query.SparqlResultSet.#ctor(System.Boolean)
  - VDS.RDF.Query.SparqlResultSet.#ctor(System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult})
  - VDS.RDF.Query.SparqlResultSet.#ctor(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.SparqlResultSet.Count
  - VDS.RDF.Query.SparqlResultSet.Dispose
  - VDS.RDF.Query.SparqlResultSet.Equals(System.Object)
  - VDS.RDF.Query.SparqlResultSet.GetEnumerator
  - VDS.RDF.Query.SparqlResultSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.Query.SparqlResultSet.GetSchema
  - VDS.RDF.Query.SparqlResultSet.IsEmpty
  - VDS.RDF.Query.SparqlResultSet.Item(System.Int32)
  - VDS.RDF.Query.SparqlResultSet.ReadXml(System.Xml.XmlReader)
  - VDS.RDF.Query.SparqlResultSet.Result
  - VDS.RDF.Query.SparqlResultSet.Results
  - VDS.RDF.Query.SparqlResultSet.ResultsType
  - VDS.RDF.Query.SparqlResultSet.System#Collections#IEnumerable#GetEnumerator
  - VDS.RDF.Query.SparqlResultSet.ToTripleCollection(VDS.RDF.IGraph)
  - VDS.RDF.Query.SparqlResultSet.ToTripleCollection(VDS.RDF.IGraph,System.String,System.String,System.String)
  - VDS.RDF.Query.SparqlResultSet.Trim
  - VDS.RDF.Query.SparqlResultSet.Variables
  - VDS.RDF.Query.SparqlResultSet.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: SparqlResultSet
  nameWithType: SparqlResultSet
  fullName: VDS.RDF.Query.SparqlResultSet
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlResultSet
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nClass for representing Sparql Result Sets.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public sealed class SparqlResultSet : IEnumerable<SparqlResult>, IEnumerable, IDisposable, ISerializable, IXmlSerializable
    content.vb: >-
      <Serializable>

      Public NotInheritable Class SparqlResultSet
          Implements IEnumerable(Of SparqlResult), IEnumerable, IDisposable, ISerializable, IXmlSerializable
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult}
  - System.Collections.IEnumerable
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.SparqlResultSet.VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable
  - VDS.RDF.Query.SparqlResultSet.VDS.RDF.Extensions.AsEnumerable``1
  - System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult}.VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult})
  - System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult}.VDS.RDF.Extensions.ChunkBy``1(System.Int32)
  - VDS.RDF.Query.SparqlResultSet.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: VDS.RDF.Query.SparqlResultSet.#ctor
  commentId: M:VDS.RDF.Query.SparqlResultSet.#ctor
  id: '#ctor'
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: SparqlResultSet()
  nameWithType: SparqlResultSet.SparqlResultSet()
  fullName: VDS.RDF.Query.SparqlResultSet.SparqlResultSet()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 93
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates an Empty Sparql Result Set.\n"
  remarks: Useful where you need a possible guarentee of returning an result set even if it proves to be empty and also necessary for the implementation of Result Set Parsers.
  example: []
  syntax:
    content: public SparqlResultSet()
    content.vb: Public Sub New
  overload: VDS.RDF.Query.SparqlResultSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlResultSet.#ctor(System.Boolean)
  commentId: M:VDS.RDF.Query.SparqlResultSet.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: SparqlResultSet(Boolean)
  nameWithType: SparqlResultSet.SparqlResultSet(Boolean)
  fullName: VDS.RDF.Query.SparqlResultSet.SparqlResultSet(System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 102
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a Sparql Result Set for the Results of an ASK Query with the given Result value.\n"
  example: []
  syntax:
    content: public SparqlResultSet(bool result)
    parameters:
    - id: result
      type: System.Boolean
      description: ''
    content.vb: Public Sub New(result As Boolean)
  overload: VDS.RDF.Query.SparqlResultSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlResultSet.#ctor(System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult})
  commentId: M:VDS.RDF.Query.SparqlResultSet.#ctor(System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult})
  id: '#ctor(System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult})'
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: SparqlResultSet(IEnumerable<SparqlResult>)
  nameWithType: SparqlResultSet.SparqlResultSet(IEnumerable<SparqlResult>)
  fullName: VDS.RDF.Query.SparqlResultSet.SparqlResultSet(System.Collections.Generic.IEnumerable<VDS.RDF.Query.SparqlResult>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a Sparql Result Set for the collection of results.\n"
  example: []
  syntax:
    content: public SparqlResultSet(IEnumerable<SparqlResult> results)
    parameters:
    - id: results
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult}
      description: Results.
    content.vb: Public Sub New(results As IEnumerable(Of SparqlResult))
  overload: VDS.RDF.Query.SparqlResultSet.#ctor*
  nameWithType.vb: SparqlResultSet.SparqlResultSet(IEnumerable(Of SparqlResult))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.SparqlResultSet.SparqlResultSet(System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.SparqlResult))
  name.vb: SparqlResultSet(IEnumerable(Of SparqlResult))
- uid: VDS.RDF.Query.SparqlResultSet.#ctor(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.SparqlResultSet.#ctor(VDS.RDF.Query.SparqlEvaluationContext)
  id: '#ctor(VDS.RDF.Query.SparqlEvaluationContext)'
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: SparqlResultSet(SparqlEvaluationContext)
  nameWithType: SparqlResultSet.SparqlResultSet(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.SparqlResultSet.SparqlResultSet(VDS.RDF.Query.SparqlEvaluationContext)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 127
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a SPARQL Result Set for the Results of a Query with the Leviathan Engine.\n"
  example: []
  syntax:
    content: public SparqlResultSet(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: SPARQL Evaluation Context.
    content.vb: Public Sub New(context As SparqlEvaluationContext)
  overload: VDS.RDF.Query.SparqlResultSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlResultSet.ResultsType
  commentId: P:VDS.RDF.Query.SparqlResultSet.ResultsType
  id: ResultsType
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: ResultsType
  nameWithType: SparqlResultSet.ResultsType
  fullName: VDS.RDF.Query.SparqlResultSet.ResultsType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResultsType
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 175
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the Type of the Results Set.\n"
  example: []
  syntax:
    content: public SparqlResultsType ResultsType { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.SparqlResultsType
    content.vb: Public ReadOnly Property ResultsType As SparqlResultsType
  overload: VDS.RDF.Query.SparqlResultSet.ResultsType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlResultSet.Result
  commentId: P:VDS.RDF.Query.SparqlResultSet.Result
  id: Result
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: SparqlResultSet.Result
  fullName: VDS.RDF.Query.SparqlResultSet.Result
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Result
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 187
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the Result of an ASK Query.\n"
  remarks: Result Set is deemed to refer to an ASK query if the Variables list is empty since an ASK Query result has an empty &lt;head>.  It is always true for any other Query type where one/more variables were requested even if the Result Set is empty.
  example: []
  syntax:
    content: public bool Result { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Result As Boolean
  overload: VDS.RDF.Query.SparqlResultSet.Result*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlResultSet.Count
  commentId: P:VDS.RDF.Query.SparqlResultSet.Count
  id: Count
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: SparqlResultSet.Count
  fullName: VDS.RDF.Query.SparqlResultSet.Count
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Count
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 208
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the number of Results in the Result Set.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: VDS.RDF.Query.SparqlResultSet.Count*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlResultSet.IsEmpty
  commentId: P:VDS.RDF.Query.SparqlResultSet.IsEmpty
  id: IsEmpty
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: SparqlResultSet.IsEmpty
  fullName: VDS.RDF.Query.SparqlResultSet.IsEmpty
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsEmpty
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 221
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets whether the Result Set is empty and can have Results loaded into it.\n"
  remarks: "\n"
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: VDS.RDF.Query.SparqlResultSet.IsEmpty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlResultSet.Results
  commentId: P:VDS.RDF.Query.SparqlResultSet.Results
  id: Results
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: Results
  nameWithType: SparqlResultSet.Results
  fullName: VDS.RDF.Query.SparqlResultSet.Results
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Results
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 242
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the List of Results.\n"
  example: []
  syntax:
    content: public List<SparqlResult> Results { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{VDS.RDF.Query.SparqlResult}
    content.vb: Public ReadOnly Property Results As List(Of SparqlResult)
  overload: VDS.RDF.Query.SparqlResultSet.Results*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlResultSet.Item(System.Int32)
  commentId: P:VDS.RDF.Query.SparqlResultSet.Item(System.Int32)
  id: Item(System.Int32)
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: SparqlResultSet.Item[Int32]
  fullName: VDS.RDF.Query.SparqlResultSet.Item[System.Int32]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 255
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nIndex directly into the Results.\n"
  example: []
  syntax:
    content: public SparqlResult this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: Index of the Result you wish to retrieve.
    return:
      type: VDS.RDF.Query.SparqlResult
      description: ''
    content.vb: Public ReadOnly Property Item(index As Integer) As SparqlResult
  overload: VDS.RDF.Query.SparqlResultSet.Item*
  nameWithType.vb: SparqlResultSet.Item(Int32)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VDS.RDF.Query.SparqlResultSet.Item(System.Int32)
  name.vb: Item(Int32)
- uid: VDS.RDF.Query.SparqlResultSet.Variables
  commentId: P:VDS.RDF.Query.SparqlResultSet.Variables
  id: Variables
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: SparqlResultSet.Variables
  fullName: VDS.RDF.Query.SparqlResultSet.Variables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variables
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 269
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the Variables used in the Result Set.\n"
  remarks: "\nAs of 1.0 where possible dotNetRDF tries to preserve the ordering of variables however this may not be possible depending on where the result set originates from or how it is populated.\n"
  example: []
  syntax:
    content: public IEnumerable<string> Variables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property Variables As IEnumerable(Of String)
  overload: VDS.RDF.Query.SparqlResultSet.Variables*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlResultSet.Trim
  commentId: M:VDS.RDF.Query.SparqlResultSet.Trim
  id: Trim
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: Trim()
  nameWithType: SparqlResultSet.Trim()
  fullName: VDS.RDF.Query.SparqlResultSet.Trim()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Trim
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 286
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nTrims the Result Set to remove unbound variables from results.\n"
  remarks: "\n<strong>Note: </strong> This does not remove empty results this only removes unbound variables from individual results.\n"
  example: []
  syntax:
    content: public void Trim()
    content.vb: Public Sub Trim
  overload: VDS.RDF.Query.SparqlResultSet.Trim*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlResultSet.GetEnumerator
  commentId: M:VDS.RDF.Query.SparqlResultSet.GetEnumerator
  id: GetEnumerator
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: SparqlResultSet.GetEnumerator()
  fullName: VDS.RDF.Query.SparqlResultSet.GetEnumerator()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetEnumerator
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 336
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets an Enumerator for the Results List.\n"
  example: []
  syntax:
    content: public IEnumerator<SparqlResult> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{VDS.RDF.Query.SparqlResult}
      description: ''
    content.vb: Public Function GetEnumerator As IEnumerator(Of SparqlResult)
  overload: VDS.RDF.Query.SparqlResultSet.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlResultSet.System#Collections#IEnumerable#GetEnumerator
  commentId: M:VDS.RDF.Query.SparqlResultSet.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: SparqlResultSet.IEnumerable.GetEnumerator()
  fullName: VDS.RDF.Query.SparqlResultSet.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 345
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets an Enumerator for the Results List.\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: ''
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: VDS.RDF.Query.SparqlResultSet.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: SparqlResultSet.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: VDS.RDF.Query.SparqlResultSet.Equals(System.Object)
  commentId: M:VDS.RDF.Query.SparqlResultSet.Equals(System.Object)
  id: Equals(System.Object)
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: SparqlResultSet.Equals(Object)
  fullName: VDS.RDF.Query.SparqlResultSet.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 360
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nDetermines whether two Result Sets are equal.\n"
  remarks: "\nExperimental and not yet complete.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: VDS.RDF.Query.SparqlResultSet.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.SparqlResultSet.ToTripleCollection(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.SparqlResultSet.ToTripleCollection(VDS.RDF.IGraph)
  id: ToTripleCollection(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: ToTripleCollection(IGraph)
  nameWithType: SparqlResultSet.ToTripleCollection(IGraph)
  fullName: VDS.RDF.Query.SparqlResultSet.ToTripleCollection(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToTripleCollection
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 442
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nConverts a Result Set into a Triple Collection.\n"
  remarks: "\nAssumes the Result Set contains three variables ?s, ?p and ?o to use as the Subject, Predicate and Object respectively.  Only Results for which all three variables have bound values will generate Triples.\n"
  example: []
  syntax:
    content: public BaseTripleCollection ToTripleCollection(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to generate the Nodes in.
    return:
      type: VDS.RDF.BaseTripleCollection
      description: ''
    content.vb: Public Function ToTripleCollection(g As IGraph) As BaseTripleCollection
  overload: VDS.RDF.Query.SparqlResultSet.ToTripleCollection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlResultSet.ToTripleCollection(VDS.RDF.IGraph,System.String,System.String,System.String)
  commentId: M:VDS.RDF.Query.SparqlResultSet.ToTripleCollection(VDS.RDF.IGraph,System.String,System.String,System.String)
  id: ToTripleCollection(VDS.RDF.IGraph,System.String,System.String,System.String)
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: ToTripleCollection(IGraph, String, String, String)
  nameWithType: SparqlResultSet.ToTripleCollection(IGraph, String, String, String)
  fullName: VDS.RDF.Query.SparqlResultSet.ToTripleCollection(VDS.RDF.IGraph, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToTripleCollection
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 458
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nConverts a Result Set into a Triple Collection.\n"
  remarks: "\nOnly Results for which all three variables have bound values will generate Triples.\n"
  example: []
  syntax:
    content: public BaseTripleCollection ToTripleCollection(IGraph g, string subjVar, string predVar, string objVar)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to generate the Nodes in.
    - id: subjVar
      type: System.String
      description: Variable whose value should be used for Subjects of Triples.
    - id: predVar
      type: System.String
      description: Variable whose value should be used for Predicates of Triples.
    - id: objVar
      type: System.String
      description: Variable whose value should be used for Object of Triples.
    return:
      type: VDS.RDF.BaseTripleCollection
      description: ''
    content.vb: Public Function ToTripleCollection(g As IGraph, subjVar As String, predVar As String, objVar As String) As BaseTripleCollection
  overload: VDS.RDF.Query.SparqlResultSet.ToTripleCollection*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlResultSet.Dispose
  commentId: M:VDS.RDF.Query.SparqlResultSet.Dispose
  id: Dispose
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SparqlResultSet.Dispose()
  fullName: VDS.RDF.Query.SparqlResultSet.Dispose()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dispose
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 481
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nDisposes of a Result Set.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: VDS.RDF.Query.SparqlResultSet.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlResultSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.Query.SparqlResultSet.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: SparqlResultSet.GetObjectData(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.Query.SparqlResultSet.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetObjectData
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 497
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the data for serialization.\n"
  example: []
  syntax:
    content: public void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: VDS.RDF.Query.SparqlResultSet.GetObjectData*
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlResultSet.GetSchema
  commentId: M:VDS.RDF.Query.SparqlResultSet.GetSchema
  id: GetSchema
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: SparqlResultSet.GetSchema()
  fullName: VDS.RDF.Query.SparqlResultSet.GetSchema()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSchema
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 508
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the schema for XML serialization.\n"
  example: []
  syntax:
    content: public XmlSchema GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
      description: ''
    content.vb: Public Function GetSchema As XmlSchema
  overload: VDS.RDF.Query.SparqlResultSet.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlResultSet.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.Query.SparqlResultSet.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: SparqlResultSet.WriteXml(XmlWriter)
  fullName: VDS.RDF.Query.SparqlResultSet.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WriteXml
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 517
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nWrites the data for XML serialization (.Net serialization not the official SPARQL results serialization).\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: XML Writer.
    content.vb: Public Sub WriteXml(writer As XmlWriter)
  overload: VDS.RDF.Query.SparqlResultSet.WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlResultSet.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.Query.SparqlResultSet.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.Query.SparqlResultSet
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: SparqlResultSet.ReadXml(XmlReader)
  fullName: VDS.RDF.Query.SparqlResultSet.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ReadXml
    path: Libraries/dotNetRDF/Query/SPARQLResultSet.cs
    startLine: 553
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nReads the data for XML deserialization (.Net serialization not the official SPARQL results serialization).\n"
  example: []
  syntax:
    content: public void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: XML Reader.
    content.vb: Public Sub ReadXml(reader As XmlReader)
  overload: VDS.RDF.Query.SparqlResultSet.ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<SparqlResult>
  nameWithType: IEnumerable<SparqlResult>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.SparqlResult>
  nameWithType.vb: IEnumerable(Of SparqlResult)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.SparqlResult)
  name.vb: IEnumerable(Of SparqlResult)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.SparqlResult
    name: SparqlResult
    nameWithType: SparqlResult
    fullName: VDS.RDF.Query.SparqlResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.SparqlResult
    name: SparqlResult
    nameWithType: SparqlResult
    fullName: VDS.RDF.Query.SparqlResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlResultSet.VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable
  commentId: M:VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable(VDS.RDF.Query.SparqlResultSet)
  parent: VDS.RDF.Data.DataTables.SparqlResultSetExtensions
  definition: VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable(VDS.RDF.Query.SparqlResultSet)
  name: ToDataTable()
  nameWithType: SparqlResultSetExtensions.ToDataTable()
  fullName: VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable()
  spec.csharp:
  - uid: VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable
    name: ToDataTable
    nameWithType: SparqlResultSetExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable
    name: ToDataTable
    nameWithType: SparqlResultSetExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlResultSet.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlResultSet>()
  nameWithType: Extensions.AsEnumerable<SparqlResultSet>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlResultSet>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlResultSet)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlResultSet)()
  name.vb: AsEnumerable(Of SparqlResultSet)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlResultSet>
    nameWithType: Extensions.AsEnumerable<SparqlResultSet>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlResultSet>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlResultSet)
    nameWithType: Extensions.AsEnumerable(Of SparqlResultSet)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlResultSet)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult}.VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult})
  commentId: M:VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsDisjoint<SparqlResult>(IEnumerable<SparqlResult>)
  nameWithType: Extensions.IsDisjoint<SparqlResult>(IEnumerable<SparqlResult>)
  fullName: VDS.RDF.Extensions.IsDisjoint<VDS.RDF.Query.SparqlResult>(System.Collections.Generic.IEnumerable<VDS.RDF.Query.SparqlResult>)
  nameWithType.vb: Extensions.IsDisjoint(Of SparqlResult)(IEnumerable(Of SparqlResult))
  fullName.vb: VDS.RDF.Extensions.IsDisjoint(Of VDS.RDF.Query.SparqlResult)(System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.SparqlResult))
  name.vb: IsDisjoint(Of SparqlResult)(IEnumerable(Of SparqlResult))
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0})
    name: IsDisjoint<SparqlResult>
    nameWithType: Extensions.IsDisjoint<SparqlResult>
    fullName: VDS.RDF.Extensions.IsDisjoint<VDS.RDF.Query.SparqlResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.SparqlResult
    name: SparqlResult
    nameWithType: SparqlResult
    fullName: VDS.RDF.Query.SparqlResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0})
    name: IsDisjoint(Of SparqlResult)
    nameWithType: Extensions.IsDisjoint(Of SparqlResult)
    fullName: VDS.RDF.Extensions.IsDisjoint(Of VDS.RDF.Query.SparqlResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.SparqlResult
    name: SparqlResult
    nameWithType: SparqlResult
    fullName: VDS.RDF.Query.SparqlResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult}.VDS.RDF.Extensions.ChunkBy``1(System.Int32)
  commentId: M:VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: ChunkBy<SparqlResult>(Int32)
  nameWithType: Extensions.ChunkBy<SparqlResult>(Int32)
  fullName: VDS.RDF.Extensions.ChunkBy<VDS.RDF.Query.SparqlResult>(System.Int32)
  nameWithType.vb: Extensions.ChunkBy(Of SparqlResult)(Int32)
  fullName.vb: VDS.RDF.Extensions.ChunkBy(Of VDS.RDF.Query.SparqlResult)(System.Int32)
  name.vb: ChunkBy(Of SparqlResult)(Int32)
  spec.csharp:
  - uid: VDS.RDF.Extensions.ChunkBy``1(System.Int32)
    name: ChunkBy<SparqlResult>
    nameWithType: Extensions.ChunkBy<SparqlResult>
    fullName: VDS.RDF.Extensions.ChunkBy<VDS.RDF.Query.SparqlResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.ChunkBy``1(System.Int32)
    name: ChunkBy(Of SparqlResult)
    nameWithType: Extensions.ChunkBy(Of SparqlResult)
    fullName: VDS.RDF.Extensions.ChunkBy(Of VDS.RDF.Query.SparqlResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlResultSet.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.Query.SparqlResultSet)
  parent: VDS.RDF.Dynamic.DynamicExtensions
  definition: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.Query.SparqlResultSet)
  name: AsDynamic()
  nameWithType: DynamicExtensions.AsDynamic()
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic()
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable(VDS.RDF.Query.SparqlResultSet)
  commentId: M:VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable(VDS.RDF.Query.SparqlResultSet)
  name: ToDataTable(SparqlResultSet)
  nameWithType: SparqlResultSetExtensions.ToDataTable(SparqlResultSet)
  fullName: VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable(VDS.RDF.Query.SparqlResultSet)
  spec.csharp:
  - uid: VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable(VDS.RDF.Query.SparqlResultSet)
    name: ToDataTable
    nameWithType: SparqlResultSetExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlResultSet
    name: SparqlResultSet
    nameWithType: SparqlResultSet
    fullName: VDS.RDF.Query.SparqlResultSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable(VDS.RDF.Query.SparqlResultSet)
    name: ToDataTable
    nameWithType: SparqlResultSetExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.SparqlResultSetExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlResultSet
    name: SparqlResultSet
    nameWithType: SparqlResultSet
    fullName: VDS.RDF.Query.SparqlResultSet
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Data.DataTables.SparqlResultSetExtensions
  commentId: T:VDS.RDF.Data.DataTables.SparqlResultSetExtensions
  parent: VDS.RDF.Data.DataTables
  name: SparqlResultSetExtensions
  nameWithType: SparqlResultSetExtensions
  fullName: VDS.RDF.Data.DataTables.SparqlResultSetExtensions
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: IsDisjoint<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType: Extensions.IsDisjoint<T>(IEnumerable<T>, IEnumerable<T>)
  fullName: VDS.RDF.Extensions.IsDisjoint<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Extensions.IsDisjoint(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName.vb: VDS.RDF.Extensions.IsDisjoint(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsDisjoint(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: IsDisjoint<T>
    nameWithType: Extensions.IsDisjoint<T>
    fullName: VDS.RDF.Extensions.IsDisjoint<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: IsDisjoint(Of T)
    nameWithType: Extensions.IsDisjoint(Of T)
    fullName: VDS.RDF.Extensions.IsDisjoint(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: ChunkBy<T>(IEnumerable<T>, Int32)
  nameWithType: Extensions.ChunkBy<T>(IEnumerable<T>, Int32)
  fullName: VDS.RDF.Extensions.ChunkBy<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  nameWithType.vb: Extensions.ChunkBy(Of T)(IEnumerable(Of T), Int32)
  fullName.vb: VDS.RDF.Extensions.ChunkBy(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: ChunkBy(Of T)(IEnumerable(Of T), Int32)
  spec.csharp:
  - uid: VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ChunkBy<T>
    nameWithType: Extensions.ChunkBy<T>
    fullName: VDS.RDF.Extensions.ChunkBy<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ChunkBy(Of T)
    nameWithType: Extensions.ChunkBy(Of T)
    fullName: VDS.RDF.Extensions.ChunkBy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.Query.SparqlResultSet)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.Query.SparqlResultSet)
  name: AsDynamic(SparqlResultSet)
  nameWithType: DynamicExtensions.AsDynamic(SparqlResultSet)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.Query.SparqlResultSet)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.Query.SparqlResultSet)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlResultSet
    name: SparqlResultSet
    nameWithType: SparqlResultSet
    fullName: VDS.RDF.Query.SparqlResultSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.Query.SparqlResultSet)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlResultSet
    name: SparqlResultSet
    nameWithType: SparqlResultSet
    fullName: VDS.RDF.Query.SparqlResultSet
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions
  commentId: T:VDS.RDF.Dynamic.DynamicExtensions
  parent: VDS.RDF.Dynamic
  name: DynamicExtensions
  nameWithType: DynamicExtensions
  fullName: VDS.RDF.Dynamic.DynamicExtensions
- uid: VDS.RDF.Data.DataTables
  commentId: N:VDS.RDF.Data.DataTables
  name: VDS.RDF.Data.DataTables
  nameWithType: VDS.RDF.Data.DataTables
  fullName: VDS.RDF.Data.DataTables
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Dynamic
  commentId: N:VDS.RDF.Dynamic
  name: VDS.RDF.Dynamic
  nameWithType: VDS.RDF.Dynamic
  fullName: VDS.RDF.Dynamic
- uid: VDS.RDF.Query.SparqlResultSet.#ctor*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.#ctor
  name: SparqlResultSet
  nameWithType: SparqlResultSet.SparqlResultSet
  fullName: VDS.RDF.Query.SparqlResultSet.SparqlResultSet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.Query.SparqlResultSet.ResultsType*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.ResultsType
  name: ResultsType
  nameWithType: SparqlResultSet.ResultsType
  fullName: VDS.RDF.Query.SparqlResultSet.ResultsType
- uid: VDS.RDF.Query.SparqlResultsType
  commentId: T:VDS.RDF.Query.SparqlResultsType
  parent: VDS.RDF.Query
  name: SparqlResultsType
  nameWithType: SparqlResultsType
  fullName: VDS.RDF.Query.SparqlResultsType
- uid: VDS.RDF.Query.SparqlResultSet.Result*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.Result
  name: Result
  nameWithType: SparqlResultSet.Result
  fullName: VDS.RDF.Query.SparqlResultSet.Result
- uid: VDS.RDF.Query.SparqlResultSet.Count*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.Count
  name: Count
  nameWithType: SparqlResultSet.Count
  fullName: VDS.RDF.Query.SparqlResultSet.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Query.SparqlResultSet.IsEmpty*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.IsEmpty
  name: IsEmpty
  nameWithType: SparqlResultSet.IsEmpty
  fullName: VDS.RDF.Query.SparqlResultSet.IsEmpty
- uid: VDS.RDF.Query.SparqlResultSet.Results*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.Results
  name: Results
  nameWithType: SparqlResultSet.Results
  fullName: VDS.RDF.Query.SparqlResultSet.Results
- uid: System.Collections.Generic.List{VDS.RDF.Query.SparqlResult}
  commentId: T:System.Collections.Generic.List{VDS.RDF.Query.SparqlResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SparqlResult>
  nameWithType: List<SparqlResult>
  fullName: System.Collections.Generic.List<VDS.RDF.Query.SparqlResult>
  nameWithType.vb: List(Of SparqlResult)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.Query.SparqlResult)
  name.vb: List(Of SparqlResult)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.SparqlResult
    name: SparqlResult
    nameWithType: SparqlResult
    fullName: VDS.RDF.Query.SparqlResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.SparqlResult
    name: SparqlResult
    nameWithType: SparqlResult
    fullName: VDS.RDF.Query.SparqlResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlResultSet.Item*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.Item
  name: Item
  nameWithType: SparqlResultSet.Item
  fullName: VDS.RDF.Query.SparqlResultSet.Item
- uid: VDS.RDF.Query.SparqlResult
  commentId: T:VDS.RDF.Query.SparqlResult
  parent: VDS.RDF.Query
  name: SparqlResult
  nameWithType: SparqlResult
  fullName: VDS.RDF.Query.SparqlResult
- uid: VDS.RDF.Query.SparqlResultSet.Variables*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.Variables
  name: Variables
  nameWithType: SparqlResultSet.Variables
  fullName: VDS.RDF.Query.SparqlResultSet.Variables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlResultSet.Trim*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.Trim
  name: Trim
  nameWithType: SparqlResultSet.Trim
  fullName: VDS.RDF.Query.SparqlResultSet.Trim
- uid: VDS.RDF.Query.SparqlResultSet.GetEnumerator*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.GetEnumerator
  name: GetEnumerator
  nameWithType: SparqlResultSet.GetEnumerator
  fullName: VDS.RDF.Query.SparqlResultSet.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{VDS.RDF.Query.SparqlResult}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<SparqlResult>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.SparqlResult>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of SparqlResult).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.SparqlResult).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<SparqlResult>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.SparqlResult>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of SparqlResult).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.SparqlResult).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{VDS.RDF.Query.SparqlResult}
  commentId: T:System.Collections.Generic.IEnumerator{VDS.RDF.Query.SparqlResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<SparqlResult>
  nameWithType: IEnumerator<SparqlResult>
  fullName: System.Collections.Generic.IEnumerator<VDS.RDF.Query.SparqlResult>
  nameWithType.vb: IEnumerator(Of SparqlResult)
  fullName.vb: System.Collections.Generic.IEnumerator(Of VDS.RDF.Query.SparqlResult)
  name.vb: IEnumerator(Of SparqlResult)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.SparqlResult
    name: SparqlResult
    nameWithType: SparqlResult
    fullName: VDS.RDF.Query.SparqlResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.SparqlResult
    name: SparqlResult
    nameWithType: SparqlResult
    fullName: VDS.RDF.Query.SparqlResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlResultSet.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: SparqlResultSet.IEnumerable.GetEnumerator
  fullName: VDS.RDF.Query.SparqlResultSet.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: SparqlResultSet.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlResultSet.Equals*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.Equals
  name: Equals
  nameWithType: SparqlResultSet.Equals
  fullName: VDS.RDF.Query.SparqlResultSet.Equals
- uid: VDS.RDF.Query.SparqlResultSet.ToTripleCollection*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.ToTripleCollection
  name: ToTripleCollection
  nameWithType: SparqlResultSet.ToTripleCollection
  fullName: VDS.RDF.Query.SparqlResultSet.ToTripleCollection
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.BaseTripleCollection
  commentId: T:VDS.RDF.BaseTripleCollection
  parent: VDS.RDF
  name: BaseTripleCollection
  nameWithType: BaseTripleCollection
  fullName: VDS.RDF.BaseTripleCollection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.SparqlResultSet.Dispose*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.Dispose
  name: Dispose
  nameWithType: SparqlResultSet.Dispose
  fullName: VDS.RDF.Query.SparqlResultSet.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlResultSet.GetObjectData*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.GetObjectData
  name: GetObjectData
  nameWithType: SparqlResultSet.GetObjectData
  fullName: VDS.RDF.Query.SparqlResultSet.GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: VDS.RDF.Query.SparqlResultSet.GetSchema*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.GetSchema
  name: GetSchema
  nameWithType: SparqlResultSet.GetSchema
  fullName: VDS.RDF.Query.SparqlResultSet.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: true
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: VDS.RDF.Query.SparqlResultSet.WriteXml*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.WriteXml
  name: WriteXml
  nameWithType: SparqlResultSet.WriteXml
  fullName: VDS.RDF.Query.SparqlResultSet.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: VDS.RDF.Query.SparqlResultSet.ReadXml*
  commentId: Overload:VDS.RDF.Query.SparqlResultSet.ReadXml
  name: ReadXml
  nameWithType: SparqlResultSet.ReadXml
  fullName: VDS.RDF.Query.SparqlResultSet.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
shouldSkipMarkup: true
