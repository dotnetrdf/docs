### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Patterns.FilterPattern
  commentId: T:VDS.RDF.Query.Patterns.FilterPattern
  id: FilterPattern
  parent: VDS.RDF.Query.Patterns
  children:
  - VDS.RDF.Query.Patterns.FilterPattern.#ctor(VDS.RDF.Query.Filters.ISparqlFilter)
  - VDS.RDF.Query.Patterns.FilterPattern.CompareTo(VDS.RDF.Query.Patterns.FilterPattern)
  - VDS.RDF.Query.Patterns.FilterPattern.CompareTo(VDS.RDF.Query.Patterns.IFilterPattern)
  - VDS.RDF.Query.Patterns.FilterPattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Patterns.FilterPattern.Filter
  - VDS.RDF.Query.Patterns.FilterPattern.FixedVariables
  - VDS.RDF.Query.Patterns.FilterPattern.FloatingVariables
  - VDS.RDF.Query.Patterns.FilterPattern.HasNoBlankVariables
  - VDS.RDF.Query.Patterns.FilterPattern.IsAcceptAll
  - VDS.RDF.Query.Patterns.FilterPattern.PatternType
  - VDS.RDF.Query.Patterns.FilterPattern.ToString
  - VDS.RDF.Query.Patterns.FilterPattern.UsesDefaultDataset
  langs:
  - csharp
  - vb
  name: FilterPattern
  nameWithType: FilterPattern
  fullName: VDS.RDF.Query.Patterns.FilterPattern
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FilterPattern
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nClass for representing Filter Patterns in SPARQL Queries.\n"
  remarks: "\nA Filter Pattern is any FILTER clause that can be executed during the process of executing Triple Patterns rather than after all the Triple Patterns and Child Graph Patterns have been executed.\n"
  example: []
  syntax:
    content: 'public class FilterPattern : BaseTriplePattern, IFilterPattern, ITriplePattern, IComparable<ITriplePattern>, IComparable<IFilterPattern>, IComparable<FilterPattern>'
    content.vb: >-
      Public Class FilterPattern
          Inherits BaseTriplePattern
          Implements IFilterPattern, ITriplePattern, IComparable(Of ITriplePattern), IComparable(Of IFilterPattern), IComparable(Of FilterPattern)
  inheritance:
  - System.Object
  - VDS.RDF.Query.Patterns.BaseTriplePattern
  implements:
  - VDS.RDF.Query.Patterns.IFilterPattern
  - VDS.RDF.Query.Patterns.ITriplePattern
  - System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  - System.IComparable{VDS.RDF.Query.Patterns.IFilterPattern}
  - System.IComparable{VDS.RDF.Query.Patterns.FilterPattern}
  inheritedMembers:
  - VDS.RDF.Query.Patterns.BaseTriplePattern._vars
  - VDS.RDF.Query.Patterns.BaseTriplePattern.Variables
  - VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Patterns.FilterPattern.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Patterns.FilterPattern.#ctor(VDS.RDF.Query.Filters.ISparqlFilter)
  commentId: M:VDS.RDF.Query.Patterns.FilterPattern.#ctor(VDS.RDF.Query.Filters.ISparqlFilter)
  id: '#ctor(VDS.RDF.Query.Filters.ISparqlFilter)'
  parent: VDS.RDF.Query.Patterns.FilterPattern
  langs:
  - csharp
  - vb
  name: FilterPattern(ISparqlFilter)
  nameWithType: FilterPattern.FilterPattern(ISparqlFilter)
  fullName: VDS.RDF.Query.Patterns.FilterPattern.FilterPattern(VDS.RDF.Query.Filters.ISparqlFilter)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nCreates a new Filter Pattern with the given Filter.\n"
  example: []
  syntax:
    content: public FilterPattern(ISparqlFilter filter)
    parameters:
    - id: filter
      type: VDS.RDF.Query.Filters.ISparqlFilter
      description: Filter.
    content.vb: Public Sub New(filter As ISparqlFilter)
  overload: VDS.RDF.Query.Patterns.FilterPattern.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.FilterPattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.FilterPattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  id: Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.FilterPattern
  langs:
  - csharp
  - vb
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: FilterPattern.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.FilterPattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Evaluate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nEvaluates a Filter in the given Evaluation Context.\n"
  example: []
  syntax:
    content: public override void Evaluate(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    content.vb: Public Overrides Sub Evaluate(context As SparqlEvaluationContext)
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  overload: VDS.RDF.Query.Patterns.FilterPattern.Evaluate*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Patterns.FilterPattern.PatternType
  commentId: P:VDS.RDF.Query.Patterns.FilterPattern.PatternType
  id: PatternType
  parent: VDS.RDF.Query.Patterns.FilterPattern
  langs:
  - csharp
  - vb
  name: PatternType
  nameWithType: FilterPattern.PatternType
  fullName: VDS.RDF.Query.Patterns.FilterPattern.PatternType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PatternType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 99
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Pattern Type.\n"
  example: []
  syntax:
    content: public override TriplePatternType PatternType { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Patterns.TriplePatternType
    content.vb: Public Overrides ReadOnly Property PatternType As TriplePatternType
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.PatternType
  overload: VDS.RDF.Query.Patterns.FilterPattern.PatternType*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.FilterPattern.IsAcceptAll
  commentId: P:VDS.RDF.Query.Patterns.FilterPattern.IsAcceptAll
  id: IsAcceptAll
  parent: VDS.RDF.Query.Patterns.FilterPattern
  langs:
  - csharp
  - vb
  name: IsAcceptAll
  nameWithType: FilterPattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.FilterPattern.IsAcceptAll
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAcceptAll
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 110
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nReturns that the Pattern is not an accept all (since it&apos;s a Filter).\n"
  example: []
  syntax:
    content: public override bool IsAcceptAll { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsAcceptAll As Boolean
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.IsAcceptAll
  overload: VDS.RDF.Query.Patterns.FilterPattern.IsAcceptAll*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.FilterPattern.Filter
  commentId: P:VDS.RDF.Query.Patterns.FilterPattern.Filter
  id: Filter
  parent: VDS.RDF.Query.Patterns.FilterPattern
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: FilterPattern.Filter
  fullName: VDS.RDF.Query.Patterns.FilterPattern.Filter
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Filter
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 121
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Filter that this Pattern uses.\n"
  example: []
  syntax:
    content: public ISparqlFilter Filter { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Filters.ISparqlFilter
    content.vb: Public ReadOnly Property Filter As ISparqlFilter
  overload: VDS.RDF.Query.Patterns.FilterPattern.Filter*
  implements:
  - VDS.RDF.Query.Patterns.IFilterPattern.Filter
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.FilterPattern.FixedVariables
  commentId: P:VDS.RDF.Query.Patterns.FilterPattern.FixedVariables
  id: FixedVariables
  parent: VDS.RDF.Query.Patterns.FilterPattern
  langs:
  - csharp
  - vb
  name: FixedVariables
  nameWithType: FilterPattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.FilterPattern.FixedVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FixedVariables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 132
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nReturns the empty enumerable as don&apos;t know which variables will be bound.\n"
  example: []
  syntax:
    content: public override IEnumerable<string> FixedVariables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overrides ReadOnly Property FixedVariables As IEnumerable(Of String)
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.FixedVariables
  overload: VDS.RDF.Query.Patterns.FilterPattern.FixedVariables*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.FilterPattern.FloatingVariables
  commentId: P:VDS.RDF.Query.Patterns.FilterPattern.FloatingVariables
  id: FloatingVariables
  parent: VDS.RDF.Query.Patterns.FilterPattern
  langs:
  - csharp
  - vb
  name: FloatingVariables
  nameWithType: FilterPattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.FilterPattern.FloatingVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FloatingVariables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 140
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nReturns the empty enumerable as don&apos;t know which variables will be bound.\n"
  example: []
  syntax:
    content: public override IEnumerable<string> FloatingVariables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overrides ReadOnly Property FloatingVariables As IEnumerable(Of String)
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.FloatingVariables
  overload: VDS.RDF.Query.Patterns.FilterPattern.FloatingVariables*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.FilterPattern.UsesDefaultDataset
  commentId: P:VDS.RDF.Query.Patterns.FilterPattern.UsesDefaultDataset
  id: UsesDefaultDataset
  parent: VDS.RDF.Query.Patterns.FilterPattern
  langs:
  - csharp
  - vb
  name: UsesDefaultDataset
  nameWithType: FilterPattern.UsesDefaultDataset
  fullName: VDS.RDF.Query.Patterns.FilterPattern.UsesDefaultDataset
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UsesDefaultDataset
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 145
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether the Pattern uses the Default Dataset.\n"
  example: []
  syntax:
    content: public override bool UsesDefaultDataset { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property UsesDefaultDataset As Boolean
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.UsesDefaultDataset
  overload: VDS.RDF.Query.Patterns.FilterPattern.UsesDefaultDataset*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.FilterPattern.HasNoBlankVariables
  commentId: P:VDS.RDF.Query.Patterns.FilterPattern.HasNoBlankVariables
  id: HasNoBlankVariables
  parent: VDS.RDF.Query.Patterns.FilterPattern
  langs:
  - csharp
  - vb
  name: HasNoBlankVariables
  nameWithType: FilterPattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.FilterPattern.HasNoBlankVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasNoBlankVariables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 159
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nReturns true as a FILTER cannot contain blank variables.\n"
  remarks: "\nTechnically blank nodes may appear in a FILTER as part of an EXISTS/NOT EXISTS clause but in that case they would not be visible outside of the FILTER and so are not relevant.\n"
  example: []
  syntax:
    content: public override bool HasNoBlankVariables { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property HasNoBlankVariables As Boolean
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.HasNoBlankVariables
  overload: VDS.RDF.Query.Patterns.FilterPattern.HasNoBlankVariables*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.FilterPattern.CompareTo(VDS.RDF.Query.Patterns.FilterPattern)
  commentId: M:VDS.RDF.Query.Patterns.FilterPattern.CompareTo(VDS.RDF.Query.Patterns.FilterPattern)
  id: CompareTo(VDS.RDF.Query.Patterns.FilterPattern)
  parent: VDS.RDF.Query.Patterns.FilterPattern
  langs:
  - csharp
  - vb
  name: CompareTo(FilterPattern)
  nameWithType: FilterPattern.CompareTo(FilterPattern)
  fullName: VDS.RDF.Query.Patterns.FilterPattern.CompareTo(VDS.RDF.Query.Patterns.FilterPattern)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 172
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nCompares a filter pattern to another.\n"
  example: []
  syntax:
    content: public int CompareTo(FilterPattern other)
    parameters:
    - id: other
      type: VDS.RDF.Query.Patterns.FilterPattern
      description: Pattern.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function CompareTo(other As FilterPattern) As Integer
  overload: VDS.RDF.Query.Patterns.FilterPattern.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.Query.Patterns.FilterPattern}.CompareTo(VDS.RDF.Query.Patterns.FilterPattern)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.FilterPattern.CompareTo(VDS.RDF.Query.Patterns.IFilterPattern)
  commentId: M:VDS.RDF.Query.Patterns.FilterPattern.CompareTo(VDS.RDF.Query.Patterns.IFilterPattern)
  id: CompareTo(VDS.RDF.Query.Patterns.IFilterPattern)
  parent: VDS.RDF.Query.Patterns.FilterPattern
  langs:
  - csharp
  - vb
  name: CompareTo(IFilterPattern)
  nameWithType: FilterPattern.CompareTo(IFilterPattern)
  fullName: VDS.RDF.Query.Patterns.FilterPattern.CompareTo(VDS.RDF.Query.Patterns.IFilterPattern)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 182
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nCompares a filter pattern to another.\n"
  example: []
  syntax:
    content: public int CompareTo(IFilterPattern other)
    parameters:
    - id: other
      type: VDS.RDF.Query.Patterns.IFilterPattern
      description: Pattern.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function CompareTo(other As IFilterPattern) As Integer
  overload: VDS.RDF.Query.Patterns.FilterPattern.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.Query.Patterns.IFilterPattern}.CompareTo(VDS.RDF.Query.Patterns.IFilterPattern)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.FilterPattern.ToString
  commentId: M:VDS.RDF.Query.Patterns.FilterPattern.ToString
  id: ToString
  parent: VDS.RDF.Query.Patterns.FilterPattern
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FilterPattern.ToString()
  fullName: VDS.RDF.Query.Patterns.FilterPattern.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/FilterPattern.cs
    startLine: 191
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nReturns the string representation of the Pattern.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  overload: VDS.RDF.Query.Patterns.FilterPattern.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern
  commentId: T:VDS.RDF.Query.Patterns.BaseTriplePattern
  parent: VDS.RDF.Query.Patterns
  name: BaseTriplePattern
  nameWithType: BaseTriplePattern
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern
- uid: VDS.RDF.Query.Patterns.IFilterPattern
  commentId: T:VDS.RDF.Query.Patterns.IFilterPattern
  parent: VDS.RDF.Query.Patterns
  name: IFilterPattern
  nameWithType: IFilterPattern
  fullName: VDS.RDF.Query.Patterns.IFilterPattern
- uid: VDS.RDF.Query.Patterns.ITriplePattern
  commentId: T:VDS.RDF.Query.Patterns.ITriplePattern
  parent: VDS.RDF.Query.Patterns
  name: ITriplePattern
  nameWithType: ITriplePattern
  fullName: VDS.RDF.Query.Patterns.ITriplePattern
- uid: System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  commentId: T:System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ITriplePattern>
  nameWithType: IComparable<ITriplePattern>
  fullName: System.IComparable<VDS.RDF.Query.Patterns.ITriplePattern>
  nameWithType.vb: IComparable(Of ITriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.ITriplePattern)
  name.vb: IComparable(Of ITriplePattern)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Query.Patterns.IFilterPattern}
  commentId: T:System.IComparable{VDS.RDF.Query.Patterns.IFilterPattern}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IFilterPattern>
  nameWithType: IComparable<IFilterPattern>
  fullName: System.IComparable<VDS.RDF.Query.Patterns.IFilterPattern>
  nameWithType.vb: IComparable(Of IFilterPattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.IFilterPattern)
  name.vb: IComparable(Of IFilterPattern)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.IFilterPattern
    name: IFilterPattern
    nameWithType: IFilterPattern
    fullName: VDS.RDF.Query.Patterns.IFilterPattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.IFilterPattern
    name: IFilterPattern
    nameWithType: IFilterPattern
    fullName: VDS.RDF.Query.Patterns.IFilterPattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Query.Patterns.FilterPattern}
  commentId: T:System.IComparable{VDS.RDF.Query.Patterns.FilterPattern}
  parent: System
  definition: System.IComparable`1
  name: IComparable<FilterPattern>
  nameWithType: IComparable<FilterPattern>
  fullName: System.IComparable<VDS.RDF.Query.Patterns.FilterPattern>
  nameWithType.vb: IComparable(Of FilterPattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.FilterPattern)
  name.vb: IComparable(Of FilterPattern)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.FilterPattern
    name: FilterPattern
    nameWithType: FilterPattern
    fullName: VDS.RDF.Query.Patterns.FilterPattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.FilterPattern
    name: FilterPattern
    nameWithType: FilterPattern
    fullName: VDS.RDF.Query.Patterns.FilterPattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern._vars
  commentId: F:VDS.RDF.Query.Patterns.BaseTriplePattern._vars
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: _vars
  nameWithType: BaseTriplePattern._vars
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern._vars
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.Variables
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.Variables
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: Variables
  nameWithType: BaseTriplePattern.Variables
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.Variables
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  commentId: M:VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: CompareTo(ITriplePattern)
  nameWithType: BaseTriplePattern.CompareTo(ITriplePattern)
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
    name: CompareTo
    nameWithType: BaseTriplePattern.CompareTo
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
    name: CompareTo
    nameWithType: BaseTriplePattern.CompareTo
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.FilterPattern.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<FilterPattern>()
  nameWithType: Extensions.AsEnumerable<FilterPattern>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.FilterPattern>()
  nameWithType.vb: Extensions.AsEnumerable(Of FilterPattern)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.FilterPattern)()
  name.vb: AsEnumerable(Of FilterPattern)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<FilterPattern>
    nameWithType: Extensions.AsEnumerable<FilterPattern>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.FilterPattern>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of FilterPattern)
    nameWithType: Extensions.AsEnumerable(Of FilterPattern)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.FilterPattern)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Patterns.FilterPattern.#ctor*
  commentId: Overload:VDS.RDF.Query.Patterns.FilterPattern.#ctor
  name: FilterPattern
  nameWithType: FilterPattern.FilterPattern
  fullName: VDS.RDF.Query.Patterns.FilterPattern.FilterPattern
- uid: VDS.RDF.Query.Filters.ISparqlFilter
  commentId: T:VDS.RDF.Query.Filters.ISparqlFilter
  parent: VDS.RDF.Query.Filters
  name: ISparqlFilter
  nameWithType: ISparqlFilter
  fullName: VDS.RDF.Query.Filters.ISparqlFilter
- uid: VDS.RDF.Query.Filters
  commentId: N:VDS.RDF.Query.Filters
  name: VDS.RDF.Query.Filters
  nameWithType: VDS.RDF.Query.Filters
  fullName: VDS.RDF.Query.Filters
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: BaseTriplePattern.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: BaseTriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: BaseTriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.FilterPattern.Evaluate*
  commentId: Overload:VDS.RDF.Query.Patterns.FilterPattern.Evaluate
  name: Evaluate
  nameWithType: FilterPattern.Evaluate
  fullName: VDS.RDF.Query.Patterns.FilterPattern.Evaluate
- uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ITriplePattern.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ITriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ITriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.PatternType
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.PatternType
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: PatternType
  nameWithType: BaseTriplePattern.PatternType
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.PatternType
- uid: VDS.RDF.Query.Patterns.FilterPattern.PatternType*
  commentId: Overload:VDS.RDF.Query.Patterns.FilterPattern.PatternType
  name: PatternType
  nameWithType: FilterPattern.PatternType
  fullName: VDS.RDF.Query.Patterns.FilterPattern.PatternType
- uid: VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: PatternType
  nameWithType: ITriplePattern.PatternType
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.PatternType
- uid: VDS.RDF.Query.Patterns.TriplePatternType
  commentId: T:VDS.RDF.Query.Patterns.TriplePatternType
  parent: VDS.RDF.Query.Patterns
  name: TriplePatternType
  nameWithType: TriplePatternType
  fullName: VDS.RDF.Query.Patterns.TriplePatternType
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.IsAcceptAll
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.IsAcceptAll
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: IsAcceptAll
  nameWithType: BaseTriplePattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.IsAcceptAll
- uid: VDS.RDF.Query.Patterns.FilterPattern.IsAcceptAll*
  commentId: Overload:VDS.RDF.Query.Patterns.FilterPattern.IsAcceptAll
  name: IsAcceptAll
  nameWithType: FilterPattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.FilterPattern.IsAcceptAll
- uid: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: IsAcceptAll
  nameWithType: ITriplePattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Patterns.FilterPattern.Filter*
  commentId: Overload:VDS.RDF.Query.Patterns.FilterPattern.Filter
  name: Filter
  nameWithType: FilterPattern.Filter
  fullName: VDS.RDF.Query.Patterns.FilterPattern.Filter
- uid: VDS.RDF.Query.Patterns.IFilterPattern.Filter
  commentId: P:VDS.RDF.Query.Patterns.IFilterPattern.Filter
  parent: VDS.RDF.Query.Patterns.IFilterPattern
  name: Filter
  nameWithType: IFilterPattern.Filter
  fullName: VDS.RDF.Query.Patterns.IFilterPattern.Filter
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.FixedVariables
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.FixedVariables
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: FixedVariables
  nameWithType: BaseTriplePattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.FixedVariables
- uid: VDS.RDF.Query.Patterns.FilterPattern.FixedVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.FilterPattern.FixedVariables
  name: FixedVariables
  nameWithType: FilterPattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.FilterPattern.FixedVariables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: FixedVariables
  nameWithType: ITriplePattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.FloatingVariables
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.FloatingVariables
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: FloatingVariables
  nameWithType: BaseTriplePattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.FloatingVariables
- uid: VDS.RDF.Query.Patterns.FilterPattern.FloatingVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.FilterPattern.FloatingVariables
  name: FloatingVariables
  nameWithType: FilterPattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.FilterPattern.FloatingVariables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: FloatingVariables
  nameWithType: ITriplePattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.UsesDefaultDataset
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.UsesDefaultDataset
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: UsesDefaultDataset
  nameWithType: BaseTriplePattern.UsesDefaultDataset
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.UsesDefaultDataset
- uid: VDS.RDF.Query.Patterns.FilterPattern.UsesDefaultDataset*
  commentId: Overload:VDS.RDF.Query.Patterns.FilterPattern.UsesDefaultDataset
  name: UsesDefaultDataset
  nameWithType: FilterPattern.UsesDefaultDataset
  fullName: VDS.RDF.Query.Patterns.FilterPattern.UsesDefaultDataset
- uid: VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: UsesDefaultDataset
  nameWithType: ITriplePattern.UsesDefaultDataset
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.HasNoBlankVariables
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.HasNoBlankVariables
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: HasNoBlankVariables
  nameWithType: BaseTriplePattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.HasNoBlankVariables
- uid: VDS.RDF.Query.Patterns.FilterPattern.HasNoBlankVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.FilterPattern.HasNoBlankVariables
  name: HasNoBlankVariables
  nameWithType: FilterPattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.FilterPattern.HasNoBlankVariables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: HasNoBlankVariables
  nameWithType: ITriplePattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
- uid: VDS.RDF.Query.Patterns.FilterPattern.CompareTo*
  commentId: Overload:VDS.RDF.Query.Patterns.FilterPattern.CompareTo
  name: CompareTo
  nameWithType: FilterPattern.CompareTo
  fullName: VDS.RDF.Query.Patterns.FilterPattern.CompareTo
- uid: System.IComparable{VDS.RDF.Query.Patterns.FilterPattern}.CompareTo(VDS.RDF.Query.Patterns.FilterPattern)
  commentId: M:System.IComparable{VDS.RDF.Query.Patterns.FilterPattern}.CompareTo(VDS.RDF.Query.Patterns.FilterPattern)
  parent: System.IComparable{VDS.RDF.Query.Patterns.FilterPattern}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(FilterPattern)
  nameWithType: IComparable<FilterPattern>.CompareTo(FilterPattern)
  fullName: System.IComparable<VDS.RDF.Query.Patterns.FilterPattern>.CompareTo(VDS.RDF.Query.Patterns.FilterPattern)
  nameWithType.vb: IComparable(Of FilterPattern).CompareTo(FilterPattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.FilterPattern).CompareTo(VDS.RDF.Query.Patterns.FilterPattern)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<FilterPattern>.CompareTo
    fullName: System.IComparable<VDS.RDF.Query.Patterns.FilterPattern>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.FilterPattern
    name: FilterPattern
    nameWithType: FilterPattern
    fullName: VDS.RDF.Query.Patterns.FilterPattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of FilterPattern).CompareTo
    fullName: System.IComparable(Of VDS.RDF.Query.Patterns.FilterPattern).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.FilterPattern
    name: FilterPattern
    nameWithType: FilterPattern
    fullName: VDS.RDF.Query.Patterns.FilterPattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.FilterPattern
  commentId: T:VDS.RDF.Query.Patterns.FilterPattern
  parent: VDS.RDF.Query.Patterns
  name: FilterPattern
  nameWithType: FilterPattern
  fullName: VDS.RDF.Query.Patterns.FilterPattern
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Query.Patterns.IFilterPattern}.CompareTo(VDS.RDF.Query.Patterns.IFilterPattern)
  commentId: M:System.IComparable{VDS.RDF.Query.Patterns.IFilterPattern}.CompareTo(VDS.RDF.Query.Patterns.IFilterPattern)
  parent: System.IComparable{VDS.RDF.Query.Patterns.IFilterPattern}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IFilterPattern)
  nameWithType: IComparable<IFilterPattern>.CompareTo(IFilterPattern)
  fullName: System.IComparable<VDS.RDF.Query.Patterns.IFilterPattern>.CompareTo(VDS.RDF.Query.Patterns.IFilterPattern)
  nameWithType.vb: IComparable(Of IFilterPattern).CompareTo(IFilterPattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.IFilterPattern).CompareTo(VDS.RDF.Query.Patterns.IFilterPattern)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IFilterPattern>.CompareTo
    fullName: System.IComparable<VDS.RDF.Query.Patterns.IFilterPattern>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.IFilterPattern
    name: IFilterPattern
    nameWithType: IFilterPattern
    fullName: VDS.RDF.Query.Patterns.IFilterPattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IFilterPattern).CompareTo
    fullName: System.IComparable(Of VDS.RDF.Query.Patterns.IFilterPattern).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.IFilterPattern
    name: IFilterPattern
    nameWithType: IFilterPattern
    fullName: VDS.RDF.Query.Patterns.IFilterPattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  commentId: M:VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: ToString()
  nameWithType: BaseTriplePattern.ToString()
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString()
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
    name: ToString
    nameWithType: BaseTriplePattern.ToString
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
    name: ToString
    nameWithType: BaseTriplePattern.ToString
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.FilterPattern.ToString*
  commentId: Overload:VDS.RDF.Query.Patterns.FilterPattern.ToString
  name: ToString
  nameWithType: FilterPattern.ToString
  fullName: VDS.RDF.Query.Patterns.FilterPattern.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
