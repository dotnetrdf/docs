### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Paths.BaseBinaryPath
  commentId: T:VDS.RDF.Query.Paths.BaseBinaryPath
  id: BaseBinaryPath
  parent: VDS.RDF.Query.Paths
  children:
  - VDS.RDF.Query.Paths.BaseBinaryPath.#ctor(VDS.RDF.Query.Paths.ISparqlPath,VDS.RDF.Query.Paths.ISparqlPath)
  - VDS.RDF.Query.Paths.BaseBinaryPath._lhs
  - VDS.RDF.Query.Paths.BaseBinaryPath._rhs
  - VDS.RDF.Query.Paths.BaseBinaryPath.LhsPath
  - VDS.RDF.Query.Paths.BaseBinaryPath.RhsPath
  - VDS.RDF.Query.Paths.BaseBinaryPath.ToAlgebra(VDS.RDF.Query.Paths.PathTransformContext)
  - VDS.RDF.Query.Paths.BaseBinaryPath.ToString
  langs:
  - csharp
  - vb
  name: BaseBinaryPath
  nameWithType: BaseBinaryPath
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseBinaryPath
    path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Paths
  summary: "\nAbstract Base Class for Binary Path operators.\n"
  example: []
  syntax:
    content: 'public abstract class BaseBinaryPath : ISparqlPath'
    content.vb: >-
      Public MustInherit Class BaseBinaryPath
          Implements ISparqlPath
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Query.Paths.AlternativePath
  - VDS.RDF.Query.Paths.SequencePath
  implements:
  - VDS.RDF.Query.Paths.ISparqlPath
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Paths.BaseBinaryPath.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.Query.Paths.BaseBinaryPath._lhs
  commentId: F:VDS.RDF.Query.Paths.BaseBinaryPath._lhs
  id: _lhs
  parent: VDS.RDF.Query.Paths.BaseBinaryPath
  langs:
  - csharp
  - vb
  name: _lhs
  nameWithType: BaseBinaryPath._lhs
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath._lhs
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _lhs
    path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Paths
  summary: "\nParts of the Path.\n"
  example: []
  syntax:
    content: protected ISparqlPath _lhs
    return:
      type: VDS.RDF.Query.Paths.ISparqlPath
    content.vb: Protected _lhs As ISparqlPath
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Query.Paths.BaseBinaryPath._rhs
  commentId: F:VDS.RDF.Query.Paths.BaseBinaryPath._rhs
  id: _rhs
  parent: VDS.RDF.Query.Paths.BaseBinaryPath
  langs:
  - csharp
  - vb
  name: _rhs
  nameWithType: BaseBinaryPath._rhs
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath._rhs
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _rhs
    path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Paths
  summary: "\nParts of the Path.\n"
  example: []
  syntax:
    content: protected ISparqlPath _rhs
    return:
      type: VDS.RDF.Query.Paths.ISparqlPath
    content.vb: Protected _rhs As ISparqlPath
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Query.Paths.BaseBinaryPath.#ctor(VDS.RDF.Query.Paths.ISparqlPath,VDS.RDF.Query.Paths.ISparqlPath)
  commentId: M:VDS.RDF.Query.Paths.BaseBinaryPath.#ctor(VDS.RDF.Query.Paths.ISparqlPath,VDS.RDF.Query.Paths.ISparqlPath)
  id: '#ctor(VDS.RDF.Query.Paths.ISparqlPath,VDS.RDF.Query.Paths.ISparqlPath)'
  parent: VDS.RDF.Query.Paths.BaseBinaryPath
  langs:
  - csharp
  - vb
  name: BaseBinaryPath(ISparqlPath, ISparqlPath)
  nameWithType: BaseBinaryPath.BaseBinaryPath(ISparqlPath, ISparqlPath)
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath.BaseBinaryPath(VDS.RDF.Query.Paths.ISparqlPath, VDS.RDF.Query.Paths.ISparqlPath)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Paths
  summary: "\nCreates a new Binary Path.\n"
  example: []
  syntax:
    content: public BaseBinaryPath(ISparqlPath lhs, ISparqlPath rhs)
    parameters:
    - id: lhs
      type: VDS.RDF.Query.Paths.ISparqlPath
      description: LHS Path.
    - id: rhs
      type: VDS.RDF.Query.Paths.ISparqlPath
      description: RHS Path.
    content.vb: Public Sub New(lhs As ISparqlPath, rhs As ISparqlPath)
  overload: VDS.RDF.Query.Paths.BaseBinaryPath.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Paths.BaseBinaryPath.LhsPath
  commentId: P:VDS.RDF.Query.Paths.BaseBinaryPath.LhsPath
  id: LhsPath
  parent: VDS.RDF.Query.Paths.BaseBinaryPath
  langs:
  - csharp
  - vb
  name: LhsPath
  nameWithType: BaseBinaryPath.LhsPath
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath.LhsPath
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LhsPath
    path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Paths
  summary: "\nGets the LHS Path component.\n"
  example: []
  syntax:
    content: public ISparqlPath LhsPath { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Paths.ISparqlPath
    content.vb: Public ReadOnly Property LhsPath As ISparqlPath
  overload: VDS.RDF.Query.Paths.BaseBinaryPath.LhsPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Paths.BaseBinaryPath.RhsPath
  commentId: P:VDS.RDF.Query.Paths.BaseBinaryPath.RhsPath
  id: RhsPath
  parent: VDS.RDF.Query.Paths.BaseBinaryPath
  langs:
  - csharp
  - vb
  name: RhsPath
  nameWithType: BaseBinaryPath.RhsPath
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath.RhsPath
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RhsPath
    path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Paths
  summary: "\nGets the RHS Path component.\n"
  example: []
  syntax:
    content: public ISparqlPath RhsPath { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Paths.ISparqlPath
    content.vb: Public ReadOnly Property RhsPath As ISparqlPath
  overload: VDS.RDF.Query.Paths.BaseBinaryPath.RhsPath*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Paths.BaseBinaryPath.ToAlgebra(VDS.RDF.Query.Paths.PathTransformContext)
  commentId: M:VDS.RDF.Query.Paths.BaseBinaryPath.ToAlgebra(VDS.RDF.Query.Paths.PathTransformContext)
  id: ToAlgebra(VDS.RDF.Query.Paths.PathTransformContext)
  parent: VDS.RDF.Query.Paths.BaseBinaryPath
  langs:
  - csharp
  - vb
  name: ToAlgebra(PathTransformContext)
  nameWithType: BaseBinaryPath.ToAlgebra(PathTransformContext)
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath.ToAlgebra(VDS.RDF.Query.Paths.PathTransformContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToAlgebra
    path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
    startLine: 79
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Paths
  summary: "\nConverts a Path into its Algebra Form.\n"
  example: []
  syntax:
    content: public abstract ISparqlAlgebra ToAlgebra(PathTransformContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.Paths.PathTransformContext
      description: Path Transformation Context.
    return:
      type: VDS.RDF.Query.Algebra.ISparqlAlgebra
      description: ''
    content.vb: Public MustOverride Function ToAlgebra(context As PathTransformContext) As ISparqlAlgebra
  overload: VDS.RDF.Query.Paths.BaseBinaryPath.ToAlgebra*
  implements:
  - VDS.RDF.Query.Paths.ISparqlPath.ToAlgebra(VDS.RDF.Query.Paths.PathTransformContext)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.Query.Paths.BaseBinaryPath.ToString
  commentId: M:VDS.RDF.Query.Paths.BaseBinaryPath.ToString
  id: ToString
  parent: VDS.RDF.Query.Paths.BaseBinaryPath
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BaseBinaryPath.ToString()
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF/Query/Paths/BaseBinaryPath.cs
    startLine: 85
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Paths
  summary: "\nGets the String representation of the Path.\n"
  example: []
  syntax:
    content: public abstract override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public MustOverride Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VDS.RDF.Query.Paths.BaseBinaryPath.ToString*
  implements:
  - VDS.RDF.Query.Paths.ISparqlPath.ToString
  modifiers.csharp:
  - public
  - abstract
  - override
  modifiers.vb:
  - Public
  - MustOverride
  - Overrides
references:
- uid: VDS.RDF.Query.Paths
  commentId: N:VDS.RDF.Query.Paths
  name: VDS.RDF.Query.Paths
  nameWithType: VDS.RDF.Query.Paths
  fullName: VDS.RDF.Query.Paths
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Paths.ISparqlPath
  commentId: T:VDS.RDF.Query.Paths.ISparqlPath
  parent: VDS.RDF.Query.Paths
  name: ISparqlPath
  nameWithType: ISparqlPath
  fullName: VDS.RDF.Query.Paths.ISparqlPath
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Paths.BaseBinaryPath.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseBinaryPath>()
  nameWithType: Extensions.AsEnumerable<BaseBinaryPath>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Paths.BaseBinaryPath>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseBinaryPath)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Paths.BaseBinaryPath)()
  name.vb: AsEnumerable(Of BaseBinaryPath)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseBinaryPath>
    nameWithType: Extensions.AsEnumerable<BaseBinaryPath>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Paths.BaseBinaryPath>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseBinaryPath)
    nameWithType: Extensions.AsEnumerable(Of BaseBinaryPath)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Paths.BaseBinaryPath)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Paths.BaseBinaryPath.#ctor*
  commentId: Overload:VDS.RDF.Query.Paths.BaseBinaryPath.#ctor
  name: BaseBinaryPath
  nameWithType: BaseBinaryPath.BaseBinaryPath
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath.BaseBinaryPath
- uid: VDS.RDF.Query.Paths.BaseBinaryPath.LhsPath*
  commentId: Overload:VDS.RDF.Query.Paths.BaseBinaryPath.LhsPath
  name: LhsPath
  nameWithType: BaseBinaryPath.LhsPath
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath.LhsPath
- uid: VDS.RDF.Query.Paths.BaseBinaryPath.RhsPath*
  commentId: Overload:VDS.RDF.Query.Paths.BaseBinaryPath.RhsPath
  name: RhsPath
  nameWithType: BaseBinaryPath.RhsPath
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath.RhsPath
- uid: VDS.RDF.Query.Paths.BaseBinaryPath.ToAlgebra*
  commentId: Overload:VDS.RDF.Query.Paths.BaseBinaryPath.ToAlgebra
  name: ToAlgebra
  nameWithType: BaseBinaryPath.ToAlgebra
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath.ToAlgebra
- uid: VDS.RDF.Query.Paths.ISparqlPath.ToAlgebra(VDS.RDF.Query.Paths.PathTransformContext)
  commentId: M:VDS.RDF.Query.Paths.ISparqlPath.ToAlgebra(VDS.RDF.Query.Paths.PathTransformContext)
  parent: VDS.RDF.Query.Paths.ISparqlPath
  name: ToAlgebra(PathTransformContext)
  nameWithType: ISparqlPath.ToAlgebra(PathTransformContext)
  fullName: VDS.RDF.Query.Paths.ISparqlPath.ToAlgebra(VDS.RDF.Query.Paths.PathTransformContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Paths.ISparqlPath.ToAlgebra(VDS.RDF.Query.Paths.PathTransformContext)
    name: ToAlgebra
    nameWithType: ISparqlPath.ToAlgebra
    fullName: VDS.RDF.Query.Paths.ISparqlPath.ToAlgebra
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Paths.PathTransformContext
    name: PathTransformContext
    nameWithType: PathTransformContext
    fullName: VDS.RDF.Query.Paths.PathTransformContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Paths.ISparqlPath.ToAlgebra(VDS.RDF.Query.Paths.PathTransformContext)
    name: ToAlgebra
    nameWithType: ISparqlPath.ToAlgebra
    fullName: VDS.RDF.Query.Paths.ISparqlPath.ToAlgebra
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Paths.PathTransformContext
    name: PathTransformContext
    nameWithType: PathTransformContext
    fullName: VDS.RDF.Query.Paths.PathTransformContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Paths.PathTransformContext
  commentId: T:VDS.RDF.Query.Paths.PathTransformContext
  parent: VDS.RDF.Query.Paths
  name: PathTransformContext
  nameWithType: PathTransformContext
  fullName: VDS.RDF.Query.Paths.PathTransformContext
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra
  commentId: T:VDS.RDF.Query.Algebra.ISparqlAlgebra
  parent: VDS.RDF.Query.Algebra
  name: ISparqlAlgebra
  nameWithType: ISparqlAlgebra
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra
- uid: VDS.RDF.Query.Algebra
  commentId: N:VDS.RDF.Query.Algebra
  name: VDS.RDF.Query.Algebra
  nameWithType: VDS.RDF.Query.Algebra
  fullName: VDS.RDF.Query.Algebra
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Paths.BaseBinaryPath.ToString*
  commentId: Overload:VDS.RDF.Query.Paths.BaseBinaryPath.ToString
  name: ToString
  nameWithType: BaseBinaryPath.ToString
  fullName: VDS.RDF.Query.Paths.BaseBinaryPath.ToString
- uid: VDS.RDF.Query.Paths.ISparqlPath.ToString
  commentId: M:VDS.RDF.Query.Paths.ISparqlPath.ToString
  parent: VDS.RDF.Query.Paths.ISparqlPath
  name: ToString()
  nameWithType: ISparqlPath.ToString()
  fullName: VDS.RDF.Query.Paths.ISparqlPath.ToString()
  spec.csharp:
  - uid: VDS.RDF.Query.Paths.ISparqlPath.ToString
    name: ToString
    nameWithType: ISparqlPath.ToString
    fullName: VDS.RDF.Query.Paths.ISparqlPath.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Paths.ISparqlPath.ToString
    name: ToString
    nameWithType: ISparqlPath.ToString
    fullName: VDS.RDF.Query.Paths.ISparqlPath.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
shouldSkipMarkup: true
