### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Patterns.TriplePattern
  commentId: T:VDS.RDF.Query.Patterns.TriplePattern
  id: TriplePattern
  parent: VDS.RDF.Query.Patterns
  children:
  - VDS.RDF.Query.Patterns.TriplePattern.#ctor(VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Patterns.PatternItem)
  - VDS.RDF.Query.Patterns.TriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
  - VDS.RDF.Query.Patterns.TriplePattern.CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  - VDS.RDF.Query.Patterns.TriplePattern.CompareTo(VDS.RDF.Query.Patterns.TriplePattern)
  - VDS.RDF.Query.Patterns.TriplePattern.Construct(VDS.RDF.Query.Construct.ConstructContext)
  - VDS.RDF.Query.Patterns.TriplePattern.CreateResult(VDS.RDF.Triple)
  - VDS.RDF.Query.Patterns.TriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Patterns.TriplePattern.FixedVariables
  - VDS.RDF.Query.Patterns.TriplePattern.FloatingVariables
  - VDS.RDF.Query.Patterns.TriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Patterns.TriplePattern.HasNoBlankVariables
  - VDS.RDF.Query.Patterns.TriplePattern.HasNoExplicitVariables
  - VDS.RDF.Query.Patterns.TriplePattern.HasNoVariables
  - VDS.RDF.Query.Patterns.TriplePattern.IndexType
  - VDS.RDF.Query.Patterns.TriplePattern.IsAcceptAll
  - VDS.RDF.Query.Patterns.TriplePattern.Object
  - VDS.RDF.Query.Patterns.TriplePattern.PatternType
  - VDS.RDF.Query.Patterns.TriplePattern.Predicate
  - VDS.RDF.Query.Patterns.TriplePattern.Subject
  - VDS.RDF.Query.Patterns.TriplePattern.ToString
  langs:
  - csharp
  - vb
  name: TriplePattern
  nameWithType: TriplePattern
  fullName: VDS.RDF.Query.Patterns.TriplePattern
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TriplePattern
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nClass for representing Triple Patterns in SPARQL Queries.\n"
  example: []
  syntax:
    content: 'public class TriplePattern : BaseTriplePattern, IMatchTriplePattern, IComparable<IMatchTriplePattern>, IConstructTriplePattern, ITriplePattern, IComparable<ITriplePattern>, IComparable<TriplePattern>'
    content.vb: >-
      Public Class TriplePattern
          Inherits BaseTriplePattern
          Implements IMatchTriplePattern, IComparable(Of IMatchTriplePattern), IConstructTriplePattern, ITriplePattern, IComparable(Of ITriplePattern), IComparable(Of TriplePattern)
  inheritance:
  - System.Object
  - VDS.RDF.Query.Patterns.BaseTriplePattern
  implements:
  - VDS.RDF.Query.Patterns.IMatchTriplePattern
  - System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}
  - VDS.RDF.Query.Patterns.IConstructTriplePattern
  - VDS.RDF.Query.Patterns.ITriplePattern
  - System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  - System.IComparable{VDS.RDF.Query.Patterns.TriplePattern}
  inheritedMembers:
  - VDS.RDF.Query.Patterns.BaseTriplePattern._vars
  - VDS.RDF.Query.Patterns.BaseTriplePattern.Variables
  - VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  - VDS.RDF.Query.Patterns.BaseTriplePattern.UsesDefaultDataset
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Patterns.TriplePattern.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Patterns.TriplePattern.#ctor(VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Patterns.PatternItem)
  commentId: M:VDS.RDF.Query.Patterns.TriplePattern.#ctor(VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Patterns.PatternItem)
  id: '#ctor(VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Patterns.PatternItem,VDS.RDF.Query.Patterns.PatternItem)'
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: TriplePattern(PatternItem, PatternItem, PatternItem)
  nameWithType: TriplePattern.TriplePattern(PatternItem, PatternItem, PatternItem)
  fullName: VDS.RDF.Query.Patterns.TriplePattern.TriplePattern(VDS.RDF.Query.Patterns.PatternItem, VDS.RDF.Query.Patterns.PatternItem, VDS.RDF.Query.Patterns.PatternItem)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nCreates a new Triple Pattern.\n"
  example: []
  syntax:
    content: public TriplePattern(PatternItem subj, PatternItem pred, PatternItem obj)
    parameters:
    - id: subj
      type: VDS.RDF.Query.Patterns.PatternItem
      description: Subject Pattern.
    - id: pred
      type: VDS.RDF.Query.Patterns.PatternItem
      description: Predicate Pattern.
    - id: obj
      type: VDS.RDF.Query.Patterns.PatternItem
      description: Object Pattern.
    content.vb: Public Sub New(subj As PatternItem, pred As PatternItem, obj As PatternItem)
  overload: VDS.RDF.Query.Patterns.TriplePattern.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.TriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Patterns.TriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
  id: Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: Accepts(SparqlEvaluationContext, Triple)
  nameWithType: TriplePattern.Accepts(SparqlEvaluationContext, Triple)
  fullName: VDS.RDF.Query.Patterns.TriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext, VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Accepts
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 141
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether a given Triple is accepted by this Pattern in the given Context.\n"
  example: []
  syntax:
    content: public bool Accepts(SparqlEvaluationContext context, Triple obj)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    - id: obj
      type: VDS.RDF.Triple
      description: Triple to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Accepts(context As SparqlEvaluationContext, obj As Triple) As Boolean
  overload: VDS.RDF.Query.Patterns.TriplePattern.Accepts*
  implements:
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.TriplePattern.PatternType
  commentId: P:VDS.RDF.Query.Patterns.TriplePattern.PatternType
  id: PatternType
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: PatternType
  nameWithType: TriplePattern.PatternType
  fullName: VDS.RDF.Query.Patterns.TriplePattern.PatternType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PatternType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 164
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the pattern type.\n"
  example: []
  syntax:
    content: public override TriplePatternType PatternType { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Patterns.TriplePatternType
    content.vb: Public Overrides ReadOnly Property PatternType As TriplePatternType
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.PatternType
  overload: VDS.RDF.Query.Patterns.TriplePattern.PatternType*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.TriplePattern.IndexType
  commentId: P:VDS.RDF.Query.Patterns.TriplePattern.IndexType
  id: IndexType
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: IndexType
  nameWithType: TriplePattern.IndexType
  fullName: VDS.RDF.Query.Patterns.TriplePattern.IndexType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IndexType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 175
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Index Type we will use for this Pattern.\n"
  example: []
  syntax:
    content: public TripleIndexType IndexType { get; }
    parameters: []
    return:
      type: VDS.RDF.TripleIndexType
    content.vb: Public ReadOnly Property IndexType As TripleIndexType
  overload: VDS.RDF.Query.Patterns.TriplePattern.IndexType*
  implements:
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.IndexType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.TriplePattern.Subject
  commentId: P:VDS.RDF.Query.Patterns.TriplePattern.Subject
  id: Subject
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: Subject
  nameWithType: TriplePattern.Subject
  fullName: VDS.RDF.Query.Patterns.TriplePattern.Subject
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 186
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nSubject Pattern.\n"
  example: []
  syntax:
    content: public PatternItem Subject { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
    content.vb: Public ReadOnly Property Subject As PatternItem
  overload: VDS.RDF.Query.Patterns.TriplePattern.Subject*
  implements:
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
  - VDS.RDF.Query.Patterns.IConstructTriplePattern.Subject
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.TriplePattern.Predicate
  commentId: P:VDS.RDF.Query.Patterns.TriplePattern.Predicate
  id: Predicate
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: Predicate
  nameWithType: TriplePattern.Predicate
  fullName: VDS.RDF.Query.Patterns.TriplePattern.Predicate
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Predicate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 197
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nPredicate Pattern.\n"
  example: []
  syntax:
    content: public PatternItem Predicate { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
    content.vb: Public ReadOnly Property Predicate As PatternItem
  overload: VDS.RDF.Query.Patterns.TriplePattern.Predicate*
  implements:
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
  - VDS.RDF.Query.Patterns.IConstructTriplePattern.Predicate
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.TriplePattern.Object
  commentId: P:VDS.RDF.Query.Patterns.TriplePattern.Object
  id: Object
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: Object
  nameWithType: TriplePattern.Object
  fullName: VDS.RDF.Query.Patterns.TriplePattern.Object
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Object
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 208
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nObject Pattern.\n"
  example: []
  syntax:
    content: public PatternItem Object { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
    content.vb: Public ReadOnly Property Object As PatternItem
  overload: VDS.RDF.Query.Patterns.TriplePattern.Object*
  implements:
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.Object
  - VDS.RDF.Query.Patterns.IConstructTriplePattern.Object
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.TriplePattern.FixedVariables
  commentId: P:VDS.RDF.Query.Patterns.TriplePattern.FixedVariables
  id: FixedVariables
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: FixedVariables
  nameWithType: TriplePattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.TriplePattern.FixedVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FixedVariables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 219
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nReturns all variables mentioned as a match guarantees all variables are bound.\n"
  example: []
  syntax:
    content: public override IEnumerable<string> FixedVariables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overrides ReadOnly Property FixedVariables As IEnumerable(Of String)
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.FixedVariables
  overload: VDS.RDF.Query.Patterns.TriplePattern.FixedVariables*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.TriplePattern.FloatingVariables
  commentId: P:VDS.RDF.Query.Patterns.TriplePattern.FloatingVariables
  id: FloatingVariables
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: FloatingVariables
  nameWithType: TriplePattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.TriplePattern.FloatingVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FloatingVariables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 227
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nReturns an empty enumeration as a match guarantees all variables are bound.\n"
  example: []
  syntax:
    content: public override IEnumerable<string> FloatingVariables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overrides ReadOnly Property FloatingVariables As IEnumerable(Of String)
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.FloatingVariables
  overload: VDS.RDF.Query.Patterns.TriplePattern.FloatingVariables*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.TriplePattern.IsAcceptAll
  commentId: P:VDS.RDF.Query.Patterns.TriplePattern.IsAcceptAll
  id: IsAcceptAll
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: IsAcceptAll
  nameWithType: TriplePattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.TriplePattern.IsAcceptAll
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAcceptAll
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 235
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nReturns whether the Triple Pattern is an accept all.\n"
  remarks: "\nTrue if all three Pattern Items are <xref href=\"VDS.RDF.Query.Patterns.VariablePattern\" data-throw-if-not-resolved=\"false\"></xref> and all the Variables names are distinct.\n"
  example: []
  syntax:
    content: public override bool IsAcceptAll { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsAcceptAll As Boolean
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.IsAcceptAll
  overload: VDS.RDF.Query.Patterns.TriplePattern.IsAcceptAll*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.TriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.TriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  id: Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: TriplePattern.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.TriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Evaluate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 249
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nEvaluates a Triple Pattern in the given Evaluation Context.\n"
  example: []
  syntax:
    content: public override void Evaluate(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    content.vb: Public Overrides Sub Evaluate(context As SparqlEvaluationContext)
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  overload: VDS.RDF.Query.Patterns.TriplePattern.Evaluate*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Patterns.TriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.TriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  id: GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: GetTriples(SparqlEvaluationContext)
  nameWithType: TriplePattern.GetTriples(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.TriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 277
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Enumeration of Triples that should be assessed for matching the pattern.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriples(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriples(context As SparqlEvaluationContext) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Patterns.TriplePattern.GetTriples*
  implements:
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.TriplePattern.CreateResult(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Patterns.TriplePattern.CreateResult(VDS.RDF.Triple)
  id: CreateResult(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: CreateResult(Triple)
  nameWithType: TriplePattern.CreateResult(Triple)
  fullName: VDS.RDF.Query.Patterns.TriplePattern.CreateResult(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateResult
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 573
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGenerates a Result Set for a Triple that matches the Pattern.\n"
  example: []
  syntax:
    content: public ISet CreateResult(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: VDS.RDF.Query.Algebra.ISet
      description: ''
    content.vb: Public Function CreateResult(t As Triple) As ISet
  overload: VDS.RDF.Query.Patterns.TriplePattern.CreateResult*
  implements:
  - VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.TriplePattern.Construct(VDS.RDF.Query.Construct.ConstructContext)
  commentId: M:VDS.RDF.Query.Patterns.TriplePattern.Construct(VDS.RDF.Query.Construct.ConstructContext)
  id: Construct(VDS.RDF.Query.Construct.ConstructContext)
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: Construct(ConstructContext)
  nameWithType: TriplePattern.Construct(ConstructContext)
  fullName: VDS.RDF.Query.Patterns.TriplePattern.Construct(VDS.RDF.Query.Construct.ConstructContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Construct
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 596
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nConstructs a Triple from a Set based on this Triple Pattern.\n"
  example: []
  syntax:
    content: public Triple Construct(ConstructContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.Construct.ConstructContext
      description: Construct Context.
    return:
      type: VDS.RDF.Triple
      description: ''
    content.vb: Public Function Construct(context As ConstructContext) As Triple
  overload: VDS.RDF.Query.Patterns.TriplePattern.Construct*
  implements:
  - VDS.RDF.Query.Patterns.IConstructTriplePattern.Construct(VDS.RDF.Query.Construct.ConstructContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.TriplePattern.HasNoVariables
  commentId: P:VDS.RDF.Query.Patterns.TriplePattern.HasNoVariables
  id: HasNoVariables
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: HasNoVariables
  nameWithType: TriplePattern.HasNoVariables
  fullName: VDS.RDF.Query.Patterns.TriplePattern.HasNoVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasNoVariables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 604
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether the Pattern contains no Variables of any kind.\n"
  example: []
  syntax:
    content: public bool HasNoVariables { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasNoVariables As Boolean
  overload: VDS.RDF.Query.Patterns.TriplePattern.HasNoVariables*
  implements:
  - VDS.RDF.Query.Patterns.IConstructTriplePattern.HasNoVariables
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.TriplePattern.HasNoExplicitVariables
  commentId: P:VDS.RDF.Query.Patterns.TriplePattern.HasNoExplicitVariables
  id: HasNoExplicitVariables
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: HasNoExplicitVariables
  nameWithType: TriplePattern.HasNoExplicitVariables
  fullName: VDS.RDF.Query.Patterns.TriplePattern.HasNoExplicitVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasNoExplicitVariables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 615
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether the Pattern contains no Explicit Variables (i.e. Blank Node Variables are ignored).\n"
  example: []
  syntax:
    content: public bool HasNoExplicitVariables { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasNoExplicitVariables As Boolean
  overload: VDS.RDF.Query.Patterns.TriplePattern.HasNoExplicitVariables*
  implements:
  - VDS.RDF.Query.Patterns.IConstructTriplePattern.HasNoExplicitVariables
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.TriplePattern.HasNoBlankVariables
  commentId: P:VDS.RDF.Query.Patterns.TriplePattern.HasNoBlankVariables
  id: HasNoBlankVariables
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: HasNoBlankVariables
  nameWithType: TriplePattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.TriplePattern.HasNoBlankVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasNoBlankVariables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 628
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether the Pattern contains no Explicit Variables (i.e. Blank Node Variables are ignored).\n"
  example: []
  syntax:
    content: public override bool HasNoBlankVariables { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property HasNoBlankVariables As Boolean
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.HasNoBlankVariables
  overload: VDS.RDF.Query.Patterns.TriplePattern.HasNoBlankVariables*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.TriplePattern.CompareTo(VDS.RDF.Query.Patterns.TriplePattern)
  commentId: M:VDS.RDF.Query.Patterns.TriplePattern.CompareTo(VDS.RDF.Query.Patterns.TriplePattern)
  id: CompareTo(VDS.RDF.Query.Patterns.TriplePattern)
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: CompareTo(TriplePattern)
  nameWithType: TriplePattern.CompareTo(TriplePattern)
  fullName: VDS.RDF.Query.Patterns.TriplePattern.CompareTo(VDS.RDF.Query.Patterns.TriplePattern)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 643
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nCompares a triple pattern to another.\n"
  example: []
  syntax:
    content: public int CompareTo(TriplePattern other)
    parameters:
    - id: other
      type: VDS.RDF.Query.Patterns.TriplePattern
      description: Pattern.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function CompareTo(other As TriplePattern) As Integer
  overload: VDS.RDF.Query.Patterns.TriplePattern.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.Query.Patterns.TriplePattern}.CompareTo(VDS.RDF.Query.Patterns.TriplePattern)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.TriplePattern.CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  commentId: M:VDS.RDF.Query.Patterns.TriplePattern.CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  id: CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: CompareTo(IMatchTriplePattern)
  nameWithType: TriplePattern.CompareTo(IMatchTriplePattern)
  fullName: VDS.RDF.Query.Patterns.TriplePattern.CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 653
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nCompares a triple pattern to another.\n"
  example: []
  syntax:
    content: public int CompareTo(IMatchTriplePattern other)
    parameters:
    - id: other
      type: VDS.RDF.Query.Patterns.IMatchTriplePattern
      description: Pattern.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function CompareTo(other As IMatchTriplePattern) As Integer
  overload: VDS.RDF.Query.Patterns.TriplePattern.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}.CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.TriplePattern.ToString
  commentId: M:VDS.RDF.Query.Patterns.TriplePattern.ToString
  id: ToString
  parent: VDS.RDF.Query.Patterns.TriplePattern
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TriplePattern.ToString()
  fullName: VDS.RDF.Query.Patterns.TriplePattern.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Patterns/TriplePattern.cs
    startLine: 662
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the String representation of this Pattern.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  overload: VDS.RDF.Query.Patterns.TriplePattern.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern
  commentId: T:VDS.RDF.Query.Patterns.BaseTriplePattern
  parent: VDS.RDF.Query.Patterns
  name: BaseTriplePattern
  nameWithType: BaseTriplePattern
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern
  commentId: T:VDS.RDF.Query.Patterns.IMatchTriplePattern
  parent: VDS.RDF.Query.Patterns
  name: IMatchTriplePattern
  nameWithType: IMatchTriplePattern
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern
- uid: System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}
  commentId: T:System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IMatchTriplePattern>
  nameWithType: IComparable<IMatchTriplePattern>
  fullName: System.IComparable<VDS.RDF.Query.Patterns.IMatchTriplePattern>
  nameWithType.vb: IComparable(Of IMatchTriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.IMatchTriplePattern)
  name.vb: IComparable(Of IMatchTriplePattern)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern
    name: IMatchTriplePattern
    nameWithType: IMatchTriplePattern
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern
    name: IMatchTriplePattern
    nameWithType: IMatchTriplePattern
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.IConstructTriplePattern
  commentId: T:VDS.RDF.Query.Patterns.IConstructTriplePattern
  parent: VDS.RDF.Query.Patterns
  name: IConstructTriplePattern
  nameWithType: IConstructTriplePattern
  fullName: VDS.RDF.Query.Patterns.IConstructTriplePattern
- uid: VDS.RDF.Query.Patterns.ITriplePattern
  commentId: T:VDS.RDF.Query.Patterns.ITriplePattern
  parent: VDS.RDF.Query.Patterns
  name: ITriplePattern
  nameWithType: ITriplePattern
  fullName: VDS.RDF.Query.Patterns.ITriplePattern
- uid: System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  commentId: T:System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ITriplePattern>
  nameWithType: IComparable<ITriplePattern>
  fullName: System.IComparable<VDS.RDF.Query.Patterns.ITriplePattern>
  nameWithType.vb: IComparable(Of ITriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.ITriplePattern)
  name.vb: IComparable(Of ITriplePattern)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Query.Patterns.TriplePattern}
  commentId: T:System.IComparable{VDS.RDF.Query.Patterns.TriplePattern}
  parent: System
  definition: System.IComparable`1
  name: IComparable<TriplePattern>
  nameWithType: IComparable<TriplePattern>
  fullName: System.IComparable<VDS.RDF.Query.Patterns.TriplePattern>
  nameWithType.vb: IComparable(Of TriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.TriplePattern)
  name.vb: IComparable(Of TriplePattern)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.TriplePattern
    name: TriplePattern
    nameWithType: TriplePattern
    fullName: VDS.RDF.Query.Patterns.TriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.TriplePattern
    name: TriplePattern
    nameWithType: TriplePattern
    fullName: VDS.RDF.Query.Patterns.TriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern._vars
  commentId: F:VDS.RDF.Query.Patterns.BaseTriplePattern._vars
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: _vars
  nameWithType: BaseTriplePattern._vars
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern._vars
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.Variables
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.Variables
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: Variables
  nameWithType: BaseTriplePattern.Variables
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.Variables
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  commentId: M:VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: CompareTo(ITriplePattern)
  nameWithType: BaseTriplePattern.CompareTo(ITriplePattern)
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
    name: CompareTo
    nameWithType: BaseTriplePattern.CompareTo
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
    name: CompareTo
    nameWithType: BaseTriplePattern.CompareTo
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.UsesDefaultDataset
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.UsesDefaultDataset
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: UsesDefaultDataset
  nameWithType: BaseTriplePattern.UsesDefaultDataset
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.UsesDefaultDataset
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.TriplePattern.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TriplePattern>()
  nameWithType: Extensions.AsEnumerable<TriplePattern>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.TriplePattern>()
  nameWithType.vb: Extensions.AsEnumerable(Of TriplePattern)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.TriplePattern)()
  name.vb: AsEnumerable(Of TriplePattern)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TriplePattern>
    nameWithType: Extensions.AsEnumerable<TriplePattern>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.TriplePattern>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TriplePattern)
    nameWithType: Extensions.AsEnumerable(Of TriplePattern)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.TriplePattern)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Patterns.TriplePattern.#ctor*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.#ctor
  name: TriplePattern
  nameWithType: TriplePattern.TriplePattern
  fullName: VDS.RDF.Query.Patterns.TriplePattern.TriplePattern
- uid: VDS.RDF.Query.Patterns.PatternItem
  commentId: T:VDS.RDF.Query.Patterns.PatternItem
  parent: VDS.RDF.Query.Patterns
  name: PatternItem
  nameWithType: PatternItem
  fullName: VDS.RDF.Query.Patterns.PatternItem
- uid: VDS.RDF.Query.Patterns.TriplePattern.Accepts*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.Accepts
  name: Accepts
  nameWithType: TriplePattern.Accepts
  fullName: VDS.RDF.Query.Patterns.TriplePattern.Accepts
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  name: Accepts(SparqlEvaluationContext, Triple)
  nameWithType: IMatchTriplePattern.Accepts(SparqlEvaluationContext, Triple)
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext, VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
    name: Accepts
    nameWithType: IMatchTriplePattern.Accepts
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts(VDS.RDF.Query.SparqlEvaluationContext,VDS.RDF.Triple)
    name: Accepts
    nameWithType: IMatchTriplePattern.Accepts
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Accepts
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.PatternType
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.PatternType
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: PatternType
  nameWithType: BaseTriplePattern.PatternType
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.PatternType
- uid: VDS.RDF.Query.Patterns.TriplePattern.PatternType*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.PatternType
  name: PatternType
  nameWithType: TriplePattern.PatternType
  fullName: VDS.RDF.Query.Patterns.TriplePattern.PatternType
- uid: VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: PatternType
  nameWithType: ITriplePattern.PatternType
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.PatternType
- uid: VDS.RDF.Query.Patterns.TriplePatternType
  commentId: T:VDS.RDF.Query.Patterns.TriplePatternType
  parent: VDS.RDF.Query.Patterns
  name: TriplePatternType
  nameWithType: TriplePatternType
  fullName: VDS.RDF.Query.Patterns.TriplePatternType
- uid: VDS.RDF.Query.Patterns.TriplePattern.IndexType*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.IndexType
  name: IndexType
  nameWithType: TriplePattern.IndexType
  fullName: VDS.RDF.Query.Patterns.TriplePattern.IndexType
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.IndexType
  commentId: P:VDS.RDF.Query.Patterns.IMatchTriplePattern.IndexType
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  name: IndexType
  nameWithType: IMatchTriplePattern.IndexType
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.IndexType
- uid: VDS.RDF.TripleIndexType
  commentId: T:VDS.RDF.TripleIndexType
  parent: VDS.RDF
  name: TripleIndexType
  nameWithType: TripleIndexType
  fullName: VDS.RDF.TripleIndexType
- uid: VDS.RDF.Query.Patterns.TriplePattern.Subject*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.Subject
  name: Subject
  nameWithType: TriplePattern.Subject
  fullName: VDS.RDF.Query.Patterns.TriplePattern.Subject
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
  commentId: P:VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  name: Subject
  nameWithType: IMatchTriplePattern.Subject
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject
- uid: VDS.RDF.Query.Patterns.IConstructTriplePattern.Subject
  commentId: P:VDS.RDF.Query.Patterns.IConstructTriplePattern.Subject
  parent: VDS.RDF.Query.Patterns.IConstructTriplePattern
  name: Subject
  nameWithType: IConstructTriplePattern.Subject
  fullName: VDS.RDF.Query.Patterns.IConstructTriplePattern.Subject
- uid: VDS.RDF.Query.Patterns.TriplePattern.Predicate*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.Predicate
  name: Predicate
  nameWithType: TriplePattern.Predicate
  fullName: VDS.RDF.Query.Patterns.TriplePattern.Predicate
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
  commentId: P:VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  name: Predicate
  nameWithType: IMatchTriplePattern.Predicate
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Predicate
- uid: VDS.RDF.Query.Patterns.IConstructTriplePattern.Predicate
  commentId: P:VDS.RDF.Query.Patterns.IConstructTriplePattern.Predicate
  parent: VDS.RDF.Query.Patterns.IConstructTriplePattern
  name: Predicate
  nameWithType: IConstructTriplePattern.Predicate
  fullName: VDS.RDF.Query.Patterns.IConstructTriplePattern.Predicate
- uid: VDS.RDF.Query.Patterns.TriplePattern.Object*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.Object
  name: Object
  nameWithType: TriplePattern.Object
  fullName: VDS.RDF.Query.Patterns.TriplePattern.Object
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.Object
  commentId: P:VDS.RDF.Query.Patterns.IMatchTriplePattern.Object
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  name: Object
  nameWithType: IMatchTriplePattern.Object
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.Object
- uid: VDS.RDF.Query.Patterns.IConstructTriplePattern.Object
  commentId: P:VDS.RDF.Query.Patterns.IConstructTriplePattern.Object
  parent: VDS.RDF.Query.Patterns.IConstructTriplePattern
  name: Object
  nameWithType: IConstructTriplePattern.Object
  fullName: VDS.RDF.Query.Patterns.IConstructTriplePattern.Object
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.FixedVariables
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.FixedVariables
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: FixedVariables
  nameWithType: BaseTriplePattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.FixedVariables
- uid: VDS.RDF.Query.Patterns.TriplePattern.FixedVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.FixedVariables
  name: FixedVariables
  nameWithType: TriplePattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.TriplePattern.FixedVariables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: FixedVariables
  nameWithType: ITriplePattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.FloatingVariables
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.FloatingVariables
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: FloatingVariables
  nameWithType: BaseTriplePattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.FloatingVariables
- uid: VDS.RDF.Query.Patterns.TriplePattern.FloatingVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.FloatingVariables
  name: FloatingVariables
  nameWithType: TriplePattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.TriplePattern.FloatingVariables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: FloatingVariables
  nameWithType: ITriplePattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
- uid: VDS.RDF.Query.Patterns.VariablePattern
  commentId: T:VDS.RDF.Query.Patterns.VariablePattern
  name: VariablePattern
  nameWithType: VariablePattern
  fullName: VDS.RDF.Query.Patterns.VariablePattern
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.IsAcceptAll
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.IsAcceptAll
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: IsAcceptAll
  nameWithType: BaseTriplePattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.IsAcceptAll
- uid: VDS.RDF.Query.Patterns.TriplePattern.IsAcceptAll*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.IsAcceptAll
  name: IsAcceptAll
  nameWithType: TriplePattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.TriplePattern.IsAcceptAll
- uid: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: IsAcceptAll
  nameWithType: ITriplePattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: BaseTriplePattern.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: BaseTriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: BaseTriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.TriplePattern.Evaluate*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.Evaluate
  name: Evaluate
  nameWithType: TriplePattern.Evaluate
  fullName: VDS.RDF.Query.Patterns.TriplePattern.Evaluate
- uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ITriplePattern.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ITriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ITriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.TriplePattern.GetTriples*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.GetTriples
  name: GetTriples
  nameWithType: TriplePattern.GetTriples
  fullName: VDS.RDF.Query.Patterns.TriplePattern.GetTriples
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  name: GetTriples(SparqlEvaluationContext)
  nameWithType: IMatchTriplePattern.GetTriples(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
    name: GetTriples
    nameWithType: IMatchTriplePattern.GetTriples
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples(VDS.RDF.Query.SparqlEvaluationContext)
    name: GetTriples
    nameWithType: IMatchTriplePattern.GetTriples
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Triple>
  nameWithType: IEnumerable<Triple>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Triple>
  nameWithType.vb: IEnumerable(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple)
  name.vb: IEnumerable(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.TriplePattern.CreateResult*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.CreateResult
  name: CreateResult
  nameWithType: TriplePattern.CreateResult
  fullName: VDS.RDF.Query.Patterns.TriplePattern.CreateResult
- uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Patterns.IMatchTriplePattern
  name: CreateResult(Triple)
  nameWithType: IMatchTriplePattern.CreateResult(Triple)
  fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult(VDS.RDF.Triple)
    name: CreateResult
    nameWithType: IMatchTriplePattern.CreateResult
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult(VDS.RDF.Triple)
    name: CreateResult
    nameWithType: IMatchTriplePattern.CreateResult
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern.CreateResult
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.ISet
  commentId: T:VDS.RDF.Query.Algebra.ISet
  parent: VDS.RDF.Query.Algebra
  name: ISet
  nameWithType: ISet
  fullName: VDS.RDF.Query.Algebra.ISet
- uid: VDS.RDF.Query.Algebra
  commentId: N:VDS.RDF.Query.Algebra
  name: VDS.RDF.Query.Algebra
  nameWithType: VDS.RDF.Query.Algebra
  fullName: VDS.RDF.Query.Algebra
- uid: VDS.RDF.Query.Patterns.TriplePattern.Construct*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.Construct
  name: Construct
  nameWithType: TriplePattern.Construct
  fullName: VDS.RDF.Query.Patterns.TriplePattern.Construct
- uid: VDS.RDF.Query.Patterns.IConstructTriplePattern.Construct(VDS.RDF.Query.Construct.ConstructContext)
  commentId: M:VDS.RDF.Query.Patterns.IConstructTriplePattern.Construct(VDS.RDF.Query.Construct.ConstructContext)
  parent: VDS.RDF.Query.Patterns.IConstructTriplePattern
  name: Construct(ConstructContext)
  nameWithType: IConstructTriplePattern.Construct(ConstructContext)
  fullName: VDS.RDF.Query.Patterns.IConstructTriplePattern.Construct(VDS.RDF.Query.Construct.ConstructContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.IConstructTriplePattern.Construct(VDS.RDF.Query.Construct.ConstructContext)
    name: Construct
    nameWithType: IConstructTriplePattern.Construct
    fullName: VDS.RDF.Query.Patterns.IConstructTriplePattern.Construct
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Construct.ConstructContext
    name: ConstructContext
    nameWithType: ConstructContext
    fullName: VDS.RDF.Query.Construct.ConstructContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.IConstructTriplePattern.Construct(VDS.RDF.Query.Construct.ConstructContext)
    name: Construct
    nameWithType: IConstructTriplePattern.Construct
    fullName: VDS.RDF.Query.Patterns.IConstructTriplePattern.Construct
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Construct.ConstructContext
    name: ConstructContext
    nameWithType: ConstructContext
    fullName: VDS.RDF.Query.Construct.ConstructContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Construct.ConstructContext
  commentId: T:VDS.RDF.Query.Construct.ConstructContext
  parent: VDS.RDF.Query.Construct
  name: ConstructContext
  nameWithType: ConstructContext
  fullName: VDS.RDF.Query.Construct.ConstructContext
- uid: VDS.RDF.Query.Construct
  commentId: N:VDS.RDF.Query.Construct
  name: VDS.RDF.Query.Construct
  nameWithType: VDS.RDF.Query.Construct
  fullName: VDS.RDF.Query.Construct
- uid: VDS.RDF.Query.Patterns.TriplePattern.HasNoVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.HasNoVariables
  name: HasNoVariables
  nameWithType: TriplePattern.HasNoVariables
  fullName: VDS.RDF.Query.Patterns.TriplePattern.HasNoVariables
- uid: VDS.RDF.Query.Patterns.IConstructTriplePattern.HasNoVariables
  commentId: P:VDS.RDF.Query.Patterns.IConstructTriplePattern.HasNoVariables
  parent: VDS.RDF.Query.Patterns.IConstructTriplePattern
  name: HasNoVariables
  nameWithType: IConstructTriplePattern.HasNoVariables
  fullName: VDS.RDF.Query.Patterns.IConstructTriplePattern.HasNoVariables
- uid: VDS.RDF.Query.Patterns.TriplePattern.HasNoExplicitVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.HasNoExplicitVariables
  name: HasNoExplicitVariables
  nameWithType: TriplePattern.HasNoExplicitVariables
  fullName: VDS.RDF.Query.Patterns.TriplePattern.HasNoExplicitVariables
- uid: VDS.RDF.Query.Patterns.IConstructTriplePattern.HasNoExplicitVariables
  commentId: P:VDS.RDF.Query.Patterns.IConstructTriplePattern.HasNoExplicitVariables
  parent: VDS.RDF.Query.Patterns.IConstructTriplePattern
  name: HasNoExplicitVariables
  nameWithType: IConstructTriplePattern.HasNoExplicitVariables
  fullName: VDS.RDF.Query.Patterns.IConstructTriplePattern.HasNoExplicitVariables
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.HasNoBlankVariables
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.HasNoBlankVariables
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: HasNoBlankVariables
  nameWithType: BaseTriplePattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.HasNoBlankVariables
- uid: VDS.RDF.Query.Patterns.TriplePattern.HasNoBlankVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.HasNoBlankVariables
  name: HasNoBlankVariables
  nameWithType: TriplePattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.TriplePattern.HasNoBlankVariables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: HasNoBlankVariables
  nameWithType: ITriplePattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
- uid: VDS.RDF.Query.Patterns.TriplePattern.CompareTo*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.CompareTo
  name: CompareTo
  nameWithType: TriplePattern.CompareTo
  fullName: VDS.RDF.Query.Patterns.TriplePattern.CompareTo
- uid: System.IComparable{VDS.RDF.Query.Patterns.TriplePattern}.CompareTo(VDS.RDF.Query.Patterns.TriplePattern)
  commentId: M:System.IComparable{VDS.RDF.Query.Patterns.TriplePattern}.CompareTo(VDS.RDF.Query.Patterns.TriplePattern)
  parent: System.IComparable{VDS.RDF.Query.Patterns.TriplePattern}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(TriplePattern)
  nameWithType: IComparable<TriplePattern>.CompareTo(TriplePattern)
  fullName: System.IComparable<VDS.RDF.Query.Patterns.TriplePattern>.CompareTo(VDS.RDF.Query.Patterns.TriplePattern)
  nameWithType.vb: IComparable(Of TriplePattern).CompareTo(TriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.TriplePattern).CompareTo(VDS.RDF.Query.Patterns.TriplePattern)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<TriplePattern>.CompareTo
    fullName: System.IComparable<VDS.RDF.Query.Patterns.TriplePattern>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.TriplePattern
    name: TriplePattern
    nameWithType: TriplePattern
    fullName: VDS.RDF.Query.Patterns.TriplePattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of TriplePattern).CompareTo
    fullName: System.IComparable(Of VDS.RDF.Query.Patterns.TriplePattern).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.TriplePattern
    name: TriplePattern
    nameWithType: TriplePattern
    fullName: VDS.RDF.Query.Patterns.TriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.TriplePattern
  commentId: T:VDS.RDF.Query.Patterns.TriplePattern
  parent: VDS.RDF.Query.Patterns
  name: TriplePattern
  nameWithType: TriplePattern
  fullName: VDS.RDF.Query.Patterns.TriplePattern
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}.CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  commentId: M:System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}.CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  parent: System.IComparable{VDS.RDF.Query.Patterns.IMatchTriplePattern}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IMatchTriplePattern)
  nameWithType: IComparable<IMatchTriplePattern>.CompareTo(IMatchTriplePattern)
  fullName: System.IComparable<VDS.RDF.Query.Patterns.IMatchTriplePattern>.CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  nameWithType.vb: IComparable(Of IMatchTriplePattern).CompareTo(IMatchTriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.IMatchTriplePattern).CompareTo(VDS.RDF.Query.Patterns.IMatchTriplePattern)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IMatchTriplePattern>.CompareTo
    fullName: System.IComparable<VDS.RDF.Query.Patterns.IMatchTriplePattern>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern
    name: IMatchTriplePattern
    nameWithType: IMatchTriplePattern
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IMatchTriplePattern).CompareTo
    fullName: System.IComparable(Of VDS.RDF.Query.Patterns.IMatchTriplePattern).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.IMatchTriplePattern
    name: IMatchTriplePattern
    nameWithType: IMatchTriplePattern
    fullName: VDS.RDF.Query.Patterns.IMatchTriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  commentId: M:VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: ToString()
  nameWithType: BaseTriplePattern.ToString()
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString()
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
    name: ToString
    nameWithType: BaseTriplePattern.ToString
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
    name: ToString
    nameWithType: BaseTriplePattern.ToString
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.TriplePattern.ToString*
  commentId: Overload:VDS.RDF.Query.Patterns.TriplePattern.ToString
  name: ToString
  nameWithType: TriplePattern.ToString
  fullName: VDS.RDF.Query.Patterns.TriplePattern.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
