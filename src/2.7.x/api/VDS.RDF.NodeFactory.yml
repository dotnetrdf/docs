### YamlMime:ManagedReference
items:
- uid: VDS.RDF.NodeFactory
  commentId: T:VDS.RDF.NodeFactory
  id: NodeFactory
  parent: VDS.RDF
  children:
  - VDS.RDF.NodeFactory.#ctor
  - VDS.RDF.NodeFactory.CreateBlankNode
  - VDS.RDF.NodeFactory.CreateBlankNode(System.String)
  - VDS.RDF.NodeFactory.CreateGraphLiteralNode
  - VDS.RDF.NodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  - VDS.RDF.NodeFactory.CreateLiteralNode(System.String)
  - VDS.RDF.NodeFactory.CreateLiteralNode(System.String,System.String)
  - VDS.RDF.NodeFactory.CreateLiteralNode(System.String,System.Uri)
  - VDS.RDF.NodeFactory.CreateUriNode(System.Uri)
  - VDS.RDF.NodeFactory.CreateVariableNode(System.String)
  - VDS.RDF.NodeFactory.GetNextBlankNodeID
  langs:
  - csharp
  - vb
  name: NodeFactory
  nameWithType: NodeFactory
  fullName: VDS.RDF.NodeFactory
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/NodeFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NodeFactory
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/NodeFactory.cs
    startLine: 33
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nA default implementation of a Node Factory which generates Nodes unrelated to Graphs (wherever possible we suggest using a Graph based implementation instead).\n"
  example: []
  syntax:
    content: 'public class NodeFactory : INodeFactory'
    content.vb: >-
      Public Class NodeFactory
          Implements INodeFactory
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Query.SparqlQuery
  implements:
  - VDS.RDF.INodeFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.NodeFactory.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.NodeFactory.#ctor
  commentId: M:VDS.RDF.NodeFactory.#ctor
  id: '#ctor'
  parent: VDS.RDF.NodeFactory
  langs:
  - csharp
  - vb
  name: NodeFactory()
  nameWithType: NodeFactory.NodeFactory()
  fullName: VDS.RDF.NodeFactory.NodeFactory()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/NodeFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/NodeFactory.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Node Factory.\n"
  example: []
  syntax:
    content: public NodeFactory()
    content.vb: Public Sub New
  overload: VDS.RDF.NodeFactory.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.NodeFactory.CreateBlankNode
  commentId: M:VDS.RDF.NodeFactory.CreateBlankNode
  id: CreateBlankNode
  parent: VDS.RDF.NodeFactory
  langs:
  - csharp
  - vb
  name: CreateBlankNode()
  nameWithType: NodeFactory.CreateBlankNode()
  fullName: VDS.RDF.NodeFactory.CreateBlankNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/NodeFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlankNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/NodeFactory.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Blank Node with a new automatically generated ID.\n"
  example: []
  syntax:
    content: public IBlankNode CreateBlankNode()
    return:
      type: VDS.RDF.IBlankNode
      description: ''
    content.vb: Public Function CreateBlankNode As IBlankNode
  overload: VDS.RDF.NodeFactory.CreateBlankNode*
  implements:
  - VDS.RDF.INodeFactory.CreateBlankNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.NodeFactory.CreateBlankNode(System.String)
  commentId: M:VDS.RDF.NodeFactory.CreateBlankNode(System.String)
  id: CreateBlankNode(System.String)
  parent: VDS.RDF.NodeFactory
  langs:
  - csharp
  - vb
  name: CreateBlankNode(String)
  nameWithType: NodeFactory.CreateBlankNode(String)
  fullName: VDS.RDF.NodeFactory.CreateBlankNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/NodeFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlankNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/NodeFactory.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Blank Node with the given Node ID.\n"
  example: []
  syntax:
    content: public IBlankNode CreateBlankNode(string nodeId)
    parameters:
    - id: nodeId
      type: System.String
      description: Node ID.
    return:
      type: VDS.RDF.IBlankNode
      description: ''
    content.vb: Public Function CreateBlankNode(nodeId As String) As IBlankNode
  overload: VDS.RDF.NodeFactory.CreateBlankNode*
  implements:
  - VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.NodeFactory.CreateGraphLiteralNode
  commentId: M:VDS.RDF.NodeFactory.CreateGraphLiteralNode
  id: CreateGraphLiteralNode
  parent: VDS.RDF.NodeFactory
  langs:
  - csharp
  - vb
  name: CreateGraphLiteralNode()
  nameWithType: NodeFactory.CreateGraphLiteralNode()
  fullName: VDS.RDF.NodeFactory.CreateGraphLiteralNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/NodeFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateGraphLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/NodeFactory.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Graph Literal Node which represents the empty Subgraph.\n"
  example: []
  syntax:
    content: public IGraphLiteralNode CreateGraphLiteralNode()
    return:
      type: VDS.RDF.IGraphLiteralNode
      description: ''
    content.vb: Public Function CreateGraphLiteralNode As IGraphLiteralNode
  overload: VDS.RDF.NodeFactory.CreateGraphLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateGraphLiteralNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.NodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.NodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  id: CreateGraphLiteralNode(VDS.RDF.IGraph)
  parent: VDS.RDF.NodeFactory
  langs:
  - csharp
  - vb
  name: CreateGraphLiteralNode(IGraph)
  nameWithType: NodeFactory.CreateGraphLiteralNode(IGraph)
  fullName: VDS.RDF.NodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/NodeFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateGraphLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/NodeFactory.cs
    startLine: 80
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Graph Literal Node which represents the given Subgraph.\n"
  example: []
  syntax:
    content: public IGraphLiteralNode CreateGraphLiteralNode(IGraph subgraph)
    parameters:
    - id: subgraph
      type: VDS.RDF.IGraph
      description: Subgraph.
    return:
      type: VDS.RDF.IGraphLiteralNode
      description: ''
    content.vb: Public Function CreateGraphLiteralNode(subgraph As IGraph) As IGraphLiteralNode
  overload: VDS.RDF.NodeFactory.CreateGraphLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.NodeFactory.CreateLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.NodeFactory.CreateLiteralNode(System.String,System.Uri)
  id: CreateLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.NodeFactory
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String, Uri)
  nameWithType: NodeFactory.CreateLiteralNode(String, Uri)
  fullName: VDS.RDF.NodeFactory.CreateLiteralNode(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/NodeFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/NodeFactory.cs
    startLine: 91
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Literal Node with the given Value and Data Type.\n"
  example: []
  syntax:
    content: public ILiteralNode CreateLiteralNode(string literal, Uri datatype)
    parameters:
    - id: literal
      type: System.String
      description: Value of the Literal.
    - id: datatype
      type: System.Uri
      description: Data Type URI of the Literal.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Function CreateLiteralNode(literal As String, datatype As Uri) As ILiteralNode
  overload: VDS.RDF.NodeFactory.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.NodeFactory.CreateLiteralNode(System.String)
  commentId: M:VDS.RDF.NodeFactory.CreateLiteralNode(System.String)
  id: CreateLiteralNode(System.String)
  parent: VDS.RDF.NodeFactory
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String)
  nameWithType: NodeFactory.CreateLiteralNode(String)
  fullName: VDS.RDF.NodeFactory.CreateLiteralNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/NodeFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/NodeFactory.cs
    startLine: 101
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Literal Node with the given Value.\n"
  example: []
  syntax:
    content: public ILiteralNode CreateLiteralNode(string literal)
    parameters:
    - id: literal
      type: System.String
      description: Value of the Literal.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Function CreateLiteralNode(literal As String) As ILiteralNode
  overload: VDS.RDF.NodeFactory.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.NodeFactory.CreateLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.NodeFactory.CreateLiteralNode(System.String,System.String)
  id: CreateLiteralNode(System.String,System.String)
  parent: VDS.RDF.NodeFactory
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String, String)
  nameWithType: NodeFactory.CreateLiteralNode(String, String)
  fullName: VDS.RDF.NodeFactory.CreateLiteralNode(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/NodeFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/NodeFactory.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Literal Node with the given Value and Language.\n"
  example: []
  syntax:
    content: public ILiteralNode CreateLiteralNode(string literal, string langspec)
    parameters:
    - id: literal
      type: System.String
      description: Value of the Literal.
    - id: langspec
      type: System.String
      description: Language Specifier for the Literal.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Function CreateLiteralNode(literal As String, langspec As String) As ILiteralNode
  overload: VDS.RDF.NodeFactory.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.NodeFactory.CreateUriNode(System.Uri)
  commentId: M:VDS.RDF.NodeFactory.CreateUriNode(System.Uri)
  id: CreateUriNode(System.Uri)
  parent: VDS.RDF.NodeFactory
  langs:
  - csharp
  - vb
  name: CreateUriNode(Uri)
  nameWithType: NodeFactory.CreateUriNode(Uri)
  fullName: VDS.RDF.NodeFactory.CreateUriNode(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/NodeFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/NodeFactory.cs
    startLine: 122
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a URI Node for the given URI.\n"
  example: []
  syntax:
    content: public IUriNode CreateUriNode(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: URI.
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Function CreateUriNode(uri As Uri) As IUriNode
  overload: VDS.RDF.NodeFactory.CreateUriNode*
  implements:
  - VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.NodeFactory.CreateVariableNode(System.String)
  commentId: M:VDS.RDF.NodeFactory.CreateVariableNode(System.String)
  id: CreateVariableNode(System.String)
  parent: VDS.RDF.NodeFactory
  langs:
  - csharp
  - vb
  name: CreateVariableNode(String)
  nameWithType: NodeFactory.CreateVariableNode(String)
  fullName: VDS.RDF.NodeFactory.CreateVariableNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/NodeFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateVariableNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/NodeFactory.cs
    startLine: 132
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Variable Node for the given Variable Name.\n"
  example: []
  syntax:
    content: public IVariableNode CreateVariableNode(string varname)
    parameters:
    - id: varname
      type: System.String
      description: ''
    return:
      type: VDS.RDF.IVariableNode
      description: ''
    content.vb: Public Function CreateVariableNode(varname As String) As IVariableNode
  overload: VDS.RDF.NodeFactory.CreateVariableNode*
  implements:
  - VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.NodeFactory.GetNextBlankNodeID
  commentId: M:VDS.RDF.NodeFactory.GetNextBlankNodeID
  id: GetNextBlankNodeID
  parent: VDS.RDF.NodeFactory
  langs:
  - csharp
  - vb
  name: GetNextBlankNodeID()
  nameWithType: NodeFactory.GetNextBlankNodeID()
  fullName: VDS.RDF.NodeFactory.GetNextBlankNodeID()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/NodeFactory.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetNextBlankNodeID
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/NodeFactory.cs
    startLine: 141
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new unused Blank Node ID and returns it.\n"
  example: []
  syntax:
    content: public string GetNextBlankNodeID()
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetNextBlankNodeID As String
  overload: VDS.RDF.NodeFactory.GetNextBlankNodeID*
  implements:
  - VDS.RDF.INodeFactory.GetNextBlankNodeID
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.INodeFactory
  commentId: T:VDS.RDF.INodeFactory
  parent: VDS.RDF
  name: INodeFactory
  nameWithType: INodeFactory
  fullName: VDS.RDF.INodeFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.NodeFactory.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<NodeFactory>()
  nameWithType: Extensions.AsEnumerable<NodeFactory>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.NodeFactory>()
  nameWithType.vb: Extensions.AsEnumerable(Of NodeFactory)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.NodeFactory)()
  name.vb: AsEnumerable(Of NodeFactory)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<NodeFactory>
    nameWithType: Extensions.AsEnumerable<NodeFactory>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.NodeFactory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of NodeFactory)
    nameWithType: Extensions.AsEnumerable(Of NodeFactory)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.NodeFactory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.NodeFactory.#ctor*
  commentId: Overload:VDS.RDF.NodeFactory.#ctor
  name: NodeFactory
  nameWithType: NodeFactory.NodeFactory
  fullName: VDS.RDF.NodeFactory.NodeFactory
- uid: VDS.RDF.NodeFactory.CreateBlankNode*
  commentId: Overload:VDS.RDF.NodeFactory.CreateBlankNode
  name: CreateBlankNode
  nameWithType: NodeFactory.CreateBlankNode
  fullName: VDS.RDF.NodeFactory.CreateBlankNode
- uid: VDS.RDF.INodeFactory.CreateBlankNode
  commentId: M:VDS.RDF.INodeFactory.CreateBlankNode
  parent: VDS.RDF.INodeFactory
  name: CreateBlankNode()
  nameWithType: INodeFactory.CreateBlankNode()
  fullName: VDS.RDF.INodeFactory.CreateBlankNode()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IBlankNode
  commentId: T:VDS.RDF.IBlankNode
  parent: VDS.RDF
  name: IBlankNode
  nameWithType: IBlankNode
  fullName: VDS.RDF.IBlankNode
- uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateBlankNode(String)
  nameWithType: INodeFactory.CreateBlankNode(String)
  fullName: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.NodeFactory.CreateGraphLiteralNode*
  commentId: Overload:VDS.RDF.NodeFactory.CreateGraphLiteralNode
  name: CreateGraphLiteralNode
  nameWithType: NodeFactory.CreateGraphLiteralNode
  fullName: VDS.RDF.NodeFactory.CreateGraphLiteralNode
- uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  commentId: M:VDS.RDF.INodeFactory.CreateGraphLiteralNode
  parent: VDS.RDF.INodeFactory
  name: CreateGraphLiteralNode()
  nameWithType: INodeFactory.CreateGraphLiteralNode()
  fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraphLiteralNode
  commentId: T:VDS.RDF.IGraphLiteralNode
  parent: VDS.RDF
  name: IGraphLiteralNode
  nameWithType: IGraphLiteralNode
  fullName: VDS.RDF.IGraphLiteralNode
- uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  parent: VDS.RDF.INodeFactory
  name: CreateGraphLiteralNode(IGraph)
  nameWithType: INodeFactory.CreateGraphLiteralNode(IGraph)
  fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.NodeFactory.CreateLiteralNode*
  commentId: Overload:VDS.RDF.NodeFactory.CreateLiteralNode
  name: CreateLiteralNode
  nameWithType: NodeFactory.CreateLiteralNode
  fullName: VDS.RDF.NodeFactory.CreateLiteralNode
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String, Uri)
  nameWithType: INodeFactory.CreateLiteralNode(String, Uri)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String)
  nameWithType: INodeFactory.CreateLiteralNode(String)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String, String)
  nameWithType: INodeFactory.CreateLiteralNode(String, String)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.NodeFactory.CreateUriNode*
  commentId: Overload:VDS.RDF.NodeFactory.CreateUriNode
  name: CreateUriNode
  nameWithType: NodeFactory.CreateUriNode
  fullName: VDS.RDF.NodeFactory.CreateUriNode
- uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  commentId: M:VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateUriNode(Uri)
  nameWithType: INodeFactory.CreateUriNode(Uri)
  fullName: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
    name: CreateUriNode
    nameWithType: INodeFactory.CreateUriNode
    fullName: VDS.RDF.INodeFactory.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
    name: CreateUriNode
    nameWithType: INodeFactory.CreateUriNode
    fullName: VDS.RDF.INodeFactory.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IUriNode
  commentId: T:VDS.RDF.IUriNode
  parent: VDS.RDF
  name: IUriNode
  nameWithType: IUriNode
  fullName: VDS.RDF.IUriNode
- uid: VDS.RDF.NodeFactory.CreateVariableNode*
  commentId: Overload:VDS.RDF.NodeFactory.CreateVariableNode
  name: CreateVariableNode
  nameWithType: NodeFactory.CreateVariableNode
  fullName: VDS.RDF.NodeFactory.CreateVariableNode
- uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateVariableNode(String)
  nameWithType: INodeFactory.CreateVariableNode(String)
  fullName: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
    name: CreateVariableNode
    nameWithType: INodeFactory.CreateVariableNode
    fullName: VDS.RDF.INodeFactory.CreateVariableNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
    name: CreateVariableNode
    nameWithType: INodeFactory.CreateVariableNode
    fullName: VDS.RDF.INodeFactory.CreateVariableNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IVariableNode
  commentId: T:VDS.RDF.IVariableNode
  parent: VDS.RDF
  name: IVariableNode
  nameWithType: IVariableNode
  fullName: VDS.RDF.IVariableNode
- uid: VDS.RDF.NodeFactory.GetNextBlankNodeID*
  commentId: Overload:VDS.RDF.NodeFactory.GetNextBlankNodeID
  name: GetNextBlankNodeID
  nameWithType: NodeFactory.GetNextBlankNodeID
  fullName: VDS.RDF.NodeFactory.GetNextBlankNodeID
- uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
  commentId: M:VDS.RDF.INodeFactory.GetNextBlankNodeID
  parent: VDS.RDF.INodeFactory
  name: GetNextBlankNodeID()
  nameWithType: INodeFactory.GetNextBlankNodeID()
  fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
    name: GetNextBlankNodeID
    nameWithType: INodeFactory.GetNextBlankNodeID
    fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
    name: GetNextBlankNodeID
    nameWithType: INodeFactory.GetNextBlankNodeID
    fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
