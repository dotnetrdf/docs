### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.ParsingTextReader
  commentId: T:VDS.RDF.Parsing.ParsingTextReader
  id: ParsingTextReader
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.Stream)
  - VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.Stream,System.Int32)
  - VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.TextReader)
  - VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.TextReader,System.Int32)
  - VDS.RDF.Parsing.ParsingTextReader.CreateBlocking(System.IO.TextReader)
  - VDS.RDF.Parsing.ParsingTextReader.CreateBlocking(System.IO.TextReader,System.Int32)
  - VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking(System.IO.TextReader)
  - VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking(System.IO.TextReader,System.Int32)
  - VDS.RDF.Parsing.ParsingTextReader.EndOfStream
  langs:
  - csharp
  - vb
  name: ParsingTextReader
  nameWithType: ParsingTextReader
  fullName: VDS.RDF.Parsing.ParsingTextReader
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ParsingTextReader
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAn extended <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref> for use in parsing.\n"
  example: []
  syntax:
    content: 'public abstract class ParsingTextReader : TextReader, IDisposable'
    content.vb: >-
      Public MustInherit Class ParsingTextReader
          Inherits TextReader
          Implements IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.IO.TextReader
  derivedClasses:
  - VDS.RDF.Parsing.BufferedTextReader
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.TextReader.Null
  - System.IO.TextReader.Close
  - System.IO.TextReader.Dispose
  - System.IO.TextReader.Dispose(System.Boolean)
  - System.IO.TextReader.Peek
  - System.IO.TextReader.Read
  - System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadLine
  - System.IO.TextReader.ReadLineAsync
  - System.IO.TextReader.ReadToEnd
  - System.IO.TextReader.ReadToEndAsync
  - System.IO.TextReader.Synchronized(System.IO.TextReader)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.ParsingTextReader.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.Parsing.ParsingTextReader.EndOfStream
  commentId: P:VDS.RDF.Parsing.ParsingTextReader.EndOfStream
  id: EndOfStream
  parent: VDS.RDF.Parsing.ParsingTextReader
  langs:
  - csharp
  - vb
  name: EndOfStream
  nameWithType: ParsingTextReader.EndOfStream
  fullName: VDS.RDF.Parsing.ParsingTextReader.EndOfStream
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EndOfStream
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
    startLine: 40
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether the end of the stream has been reached.\n"
  example: []
  syntax:
    content: public abstract bool EndOfStream { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public MustOverride ReadOnly Property EndOfStream As Boolean
  overload: VDS.RDF.Parsing.ParsingTextReader.EndOfStream*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.TextReader,System.Int32)
  commentId: M:VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.TextReader,System.Int32)
  id: Create(System.IO.TextReader,System.Int32)
  parent: VDS.RDF.Parsing.ParsingTextReader
  langs:
  - csharp
  - vb
  name: Create(TextReader, Int32)
  nameWithType: ParsingTextReader.Create(TextReader, Int32)
  fullName: VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.TextReader, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Create
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
    startLine: 53
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new Blocking Text Reader.\n"
  remarks: "\nIf the given <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref> is already a Blocking Text Reader this is a no-op.\n"
  example: []
  syntax:
    content: public static ParsingTextReader Create(TextReader input, int bufferSize)
    parameters:
    - id: input
      type: System.IO.TextReader
      description: Text Reader to wrap.
    - id: bufferSize
      type: System.Int32
      description: Buffer Size.
    return:
      type: VDS.RDF.Parsing.ParsingTextReader
    content.vb: Public Shared Function Create(input As TextReader, bufferSize As Integer) As ParsingTextReader
  overload: VDS.RDF.Parsing.ParsingTextReader.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.TextReader)
  commentId: M:VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.TextReader)
  id: Create(System.IO.TextReader)
  parent: VDS.RDF.Parsing.ParsingTextReader
  langs:
  - csharp
  - vb
  name: Create(TextReader)
  nameWithType: ParsingTextReader.Create(TextReader)
  fullName: VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Create
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
    startLine: 81
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new Blocking Text Reader.\n"
  remarks: "\nIf the given <xref href=\"System.IO.TextReader\" data-throw-if-not-resolved=\"false\"></xref> is already a Blocking Text Reader this is a no-op.\n"
  example: []
  syntax:
    content: public static ParsingTextReader Create(TextReader input)
    parameters:
    - id: input
      type: System.IO.TextReader
      description: Text Reader to wrap.
    return:
      type: VDS.RDF.Parsing.ParsingTextReader
    content.vb: Public Shared Function Create(input As TextReader) As ParsingTextReader
  overload: VDS.RDF.Parsing.ParsingTextReader.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.Stream,System.Int32)
  commentId: M:VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.Stream,System.Int32)
  id: Create(System.IO.Stream,System.Int32)
  parent: VDS.RDF.Parsing.ParsingTextReader
  langs:
  - csharp
  - vb
  name: Create(Stream, Int32)
  nameWithType: ParsingTextReader.Create(Stream, Int32)
  fullName: VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.Stream, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Create
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
    startLine: 91
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new Blocking Text Reader.\n"
  example: []
  syntax:
    content: public static ParsingTextReader Create(Stream input, int bufferSize)
    parameters:
    - id: input
      type: System.IO.Stream
      description: Input Stream.
    - id: bufferSize
      type: System.Int32
      description: Buffer Size.
    return:
      type: VDS.RDF.Parsing.ParsingTextReader
    content.vb: Public Shared Function Create(input As Stream, bufferSize As Integer) As ParsingTextReader
  overload: VDS.RDF.Parsing.ParsingTextReader.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.Stream)
  commentId: M:VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.Stream)
  id: Create(System.IO.Stream)
  parent: VDS.RDF.Parsing.ParsingTextReader
  langs:
  - csharp
  - vb
  name: Create(Stream)
  nameWithType: ParsingTextReader.Create(Stream)
  fullName: VDS.RDF.Parsing.ParsingTextReader.Create(System.IO.Stream)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Create
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
    startLine: 107
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new Blocking Text Reader.\n"
  example: []
  syntax:
    content: public static ParsingTextReader Create(Stream input)
    parameters:
    - id: input
      type: System.IO.Stream
      description: Input Stream.
    return:
      type: VDS.RDF.Parsing.ParsingTextReader
    content.vb: Public Shared Function Create(input As Stream) As ParsingTextReader
  overload: VDS.RDF.Parsing.ParsingTextReader.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParsingTextReader.CreateBlocking(System.IO.TextReader)
  commentId: M:VDS.RDF.Parsing.ParsingTextReader.CreateBlocking(System.IO.TextReader)
  id: CreateBlocking(System.IO.TextReader)
  parent: VDS.RDF.Parsing.ParsingTextReader
  langs:
  - csharp
  - vb
  name: CreateBlocking(TextReader)
  nameWithType: ParsingTextReader.CreateBlocking(TextReader)
  fullName: VDS.RDF.Parsing.ParsingTextReader.CreateBlocking(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlocking
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
    startLine: 117
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new Blocking Text Reader.\n"
  example: []
  syntax:
    content: public static BlockingTextReader CreateBlocking(TextReader input)
    parameters:
    - id: input
      type: System.IO.TextReader
      description: Input reader.
    return:
      type: VDS.RDF.Parsing.BlockingTextReader
      description: ''
    content.vb: Public Shared Function CreateBlocking(input As TextReader) As BlockingTextReader
  overload: VDS.RDF.Parsing.ParsingTextReader.CreateBlocking*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParsingTextReader.CreateBlocking(System.IO.TextReader,System.Int32)
  commentId: M:VDS.RDF.Parsing.ParsingTextReader.CreateBlocking(System.IO.TextReader,System.Int32)
  id: CreateBlocking(System.IO.TextReader,System.Int32)
  parent: VDS.RDF.Parsing.ParsingTextReader
  langs:
  - csharp
  - vb
  name: CreateBlocking(TextReader, Int32)
  nameWithType: ParsingTextReader.CreateBlocking(TextReader, Int32)
  fullName: VDS.RDF.Parsing.ParsingTextReader.CreateBlocking(System.IO.TextReader, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlocking
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
    startLine: 128
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new Blocking Text Reader.\n"
  example: []
  syntax:
    content: public static BlockingTextReader CreateBlocking(TextReader input, int bufferSize)
    parameters:
    - id: input
      type: System.IO.TextReader
      description: Input reader.
    - id: bufferSize
      type: System.Int32
      description: Buffer Size.
    return:
      type: VDS.RDF.Parsing.BlockingTextReader
      description: ''
    content.vb: Public Shared Function CreateBlocking(input As TextReader, bufferSize As Integer) As BlockingTextReader
  overload: VDS.RDF.Parsing.ParsingTextReader.CreateBlocking*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking(System.IO.TextReader)
  commentId: M:VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking(System.IO.TextReader)
  id: CreateNonBlocking(System.IO.TextReader)
  parent: VDS.RDF.Parsing.ParsingTextReader
  langs:
  - csharp
  - vb
  name: CreateNonBlocking(TextReader)
  nameWithType: ParsingTextReader.CreateNonBlocking(TextReader)
  fullName: VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateNonBlocking
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
    startLine: 139
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new non-blocking Text Reader.\n"
  example: []
  syntax:
    content: public static NonBlockingTextReader CreateNonBlocking(TextReader input)
    parameters:
    - id: input
      type: System.IO.TextReader
      description: Input reader.
    return:
      type: VDS.RDF.Parsing.NonBlockingTextReader
      description: ''
    content.vb: Public Shared Function CreateNonBlocking(input As TextReader) As NonBlockingTextReader
  overload: VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking(System.IO.TextReader,System.Int32)
  commentId: M:VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking(System.IO.TextReader,System.Int32)
  id: CreateNonBlocking(System.IO.TextReader,System.Int32)
  parent: VDS.RDF.Parsing.ParsingTextReader
  langs:
  - csharp
  - vb
  name: CreateNonBlocking(TextReader, Int32)
  nameWithType: ParsingTextReader.CreateNonBlocking(TextReader, Int32)
  fullName: VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking(System.IO.TextReader, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateNonBlocking
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/BlockingTextReader.cs
    startLine: 151
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new non-blocking Text Reader.\n"
  example: []
  syntax:
    content: public static NonBlockingTextReader CreateNonBlocking(TextReader input, int bufferSize)
    parameters:
    - id: input
      type: System.IO.TextReader
      description: Input reader.
    - id: bufferSize
      type: System.Int32
      description: Buffer Size.
    return:
      type: VDS.RDF.Parsing.NonBlockingTextReader
      description: ''
    content.vb: Public Shared Function CreateNonBlocking(input As TextReader, bufferSize As Integer) As NonBlockingTextReader
  overload: VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IO.TextReader.Null
  commentId: F:System.IO.TextReader.Null
  parent: System.IO.TextReader
  isExternal: true
  name: "Null"
  nameWithType: TextReader.Null
  fullName: System.IO.TextReader.Null
- uid: System.IO.TextReader.Close
  commentId: M:System.IO.TextReader.Close
  parent: System.IO.TextReader
  isExternal: true
  name: Close()
  nameWithType: TextReader.Close()
  fullName: System.IO.TextReader.Close()
  spec.csharp:
  - uid: System.IO.TextReader.Close
    name: Close
    nameWithType: TextReader.Close
    fullName: System.IO.TextReader.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.Close
    name: Close
    nameWithType: TextReader.Close
    fullName: System.IO.TextReader.Close
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.Dispose
  commentId: M:System.IO.TextReader.Dispose
  parent: System.IO.TextReader
  isExternal: true
  name: Dispose()
  nameWithType: TextReader.Dispose()
  fullName: System.IO.TextReader.Dispose()
  spec.csharp:
  - uid: System.IO.TextReader.Dispose
    name: Dispose
    nameWithType: TextReader.Dispose
    fullName: System.IO.TextReader.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.Dispose
    name: Dispose
    nameWithType: TextReader.Dispose
    fullName: System.IO.TextReader.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.Dispose(System.Boolean)
  commentId: M:System.IO.TextReader.Dispose(System.Boolean)
  parent: System.IO.TextReader
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: TextReader.Dispose(Boolean)
  fullName: System.IO.TextReader.Dispose(System.Boolean)
  spec.csharp:
  - uid: System.IO.TextReader.Dispose(System.Boolean)
    name: Dispose
    nameWithType: TextReader.Dispose
    fullName: System.IO.TextReader.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.Dispose(System.Boolean)
    name: Dispose
    nameWithType: TextReader.Dispose
    fullName: System.IO.TextReader.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.Peek
  commentId: M:System.IO.TextReader.Peek
  parent: System.IO.TextReader
  isExternal: true
  name: Peek()
  nameWithType: TextReader.Peek()
  fullName: System.IO.TextReader.Peek()
  spec.csharp:
  - uid: System.IO.TextReader.Peek
    name: Peek
    nameWithType: TextReader.Peek
    fullName: System.IO.TextReader.Peek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.Peek
    name: Peek
    nameWithType: TextReader.Peek
    fullName: System.IO.TextReader.Peek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.Read
  commentId: M:System.IO.TextReader.Read
  parent: System.IO.TextReader
  isExternal: true
  name: Read()
  nameWithType: TextReader.Read()
  fullName: System.IO.TextReader.Read()
  spec.csharp:
  - uid: System.IO.TextReader.Read
    name: Read
    nameWithType: TextReader.Read
    fullName: System.IO.TextReader.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.Read
    name: Read
    nameWithType: TextReader.Read
    fullName: System.IO.TextReader.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  isExternal: true
  name: Read(Char[], Int32, Int32)
  nameWithType: TextReader.Read(Char[], Int32, Int32)
  fullName: System.IO.TextReader.Read(System.Char[], System.Int32, System.Int32)
  nameWithType.vb: TextReader.Read(Char(), Int32, Int32)
  fullName.vb: System.IO.TextReader.Read(System.Char(), System.Int32, System.Int32)
  name.vb: Read(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
    name: Read
    nameWithType: TextReader.Read
    fullName: System.IO.TextReader.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
    name: Read
    nameWithType: TextReader.Read
    fullName: System.IO.TextReader.Read
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  isExternal: true
  name: ReadAsync(Char[], Int32, Int32)
  nameWithType: TextReader.ReadAsync(Char[], Int32, Int32)
  fullName: System.IO.TextReader.ReadAsync(System.Char[], System.Int32, System.Int32)
  nameWithType.vb: TextReader.ReadAsync(Char(), Int32, Int32)
  fullName.vb: System.IO.TextReader.ReadAsync(System.Char(), System.Int32, System.Int32)
  name.vb: ReadAsync(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
    name: ReadAsync
    nameWithType: TextReader.ReadAsync
    fullName: System.IO.TextReader.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
    name: ReadAsync
    nameWithType: TextReader.ReadAsync
    fullName: System.IO.TextReader.ReadAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  isExternal: true
  name: ReadBlock(Char[], Int32, Int32)
  nameWithType: TextReader.ReadBlock(Char[], Int32, Int32)
  fullName: System.IO.TextReader.ReadBlock(System.Char[], System.Int32, System.Int32)
  nameWithType.vb: TextReader.ReadBlock(Char(), Int32, Int32)
  fullName.vb: System.IO.TextReader.ReadBlock(System.Char(), System.Int32, System.Int32)
  name.vb: ReadBlock(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
    name: ReadBlock
    nameWithType: TextReader.ReadBlock
    fullName: System.IO.TextReader.ReadBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
    name: ReadBlock
    nameWithType: TextReader.ReadBlock
    fullName: System.IO.TextReader.ReadBlock
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  isExternal: true
  name: ReadBlockAsync(Char[], Int32, Int32)
  nameWithType: TextReader.ReadBlockAsync(Char[], Int32, Int32)
  fullName: System.IO.TextReader.ReadBlockAsync(System.Char[], System.Int32, System.Int32)
  nameWithType.vb: TextReader.ReadBlockAsync(Char(), Int32, Int32)
  fullName.vb: System.IO.TextReader.ReadBlockAsync(System.Char(), System.Int32, System.Int32)
  name.vb: ReadBlockAsync(Char(), Int32, Int32)
  spec.csharp:
  - uid: System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
    name: ReadBlockAsync
    nameWithType: TextReader.ReadBlockAsync
    fullName: System.IO.TextReader.ReadBlockAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
    name: ReadBlockAsync
    nameWithType: TextReader.ReadBlockAsync
    fullName: System.IO.TextReader.ReadBlockAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.ReadLine
  commentId: M:System.IO.TextReader.ReadLine
  parent: System.IO.TextReader
  isExternal: true
  name: ReadLine()
  nameWithType: TextReader.ReadLine()
  fullName: System.IO.TextReader.ReadLine()
  spec.csharp:
  - uid: System.IO.TextReader.ReadLine
    name: ReadLine
    nameWithType: TextReader.ReadLine
    fullName: System.IO.TextReader.ReadLine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.ReadLine
    name: ReadLine
    nameWithType: TextReader.ReadLine
    fullName: System.IO.TextReader.ReadLine
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.ReadLineAsync
  commentId: M:System.IO.TextReader.ReadLineAsync
  parent: System.IO.TextReader
  isExternal: true
  name: ReadLineAsync()
  nameWithType: TextReader.ReadLineAsync()
  fullName: System.IO.TextReader.ReadLineAsync()
  spec.csharp:
  - uid: System.IO.TextReader.ReadLineAsync
    name: ReadLineAsync
    nameWithType: TextReader.ReadLineAsync
    fullName: System.IO.TextReader.ReadLineAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.ReadLineAsync
    name: ReadLineAsync
    nameWithType: TextReader.ReadLineAsync
    fullName: System.IO.TextReader.ReadLineAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.ReadToEnd
  commentId: M:System.IO.TextReader.ReadToEnd
  parent: System.IO.TextReader
  isExternal: true
  name: ReadToEnd()
  nameWithType: TextReader.ReadToEnd()
  fullName: System.IO.TextReader.ReadToEnd()
  spec.csharp:
  - uid: System.IO.TextReader.ReadToEnd
    name: ReadToEnd
    nameWithType: TextReader.ReadToEnd
    fullName: System.IO.TextReader.ReadToEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.ReadToEnd
    name: ReadToEnd
    nameWithType: TextReader.ReadToEnd
    fullName: System.IO.TextReader.ReadToEnd
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.ReadToEndAsync
  commentId: M:System.IO.TextReader.ReadToEndAsync
  parent: System.IO.TextReader
  isExternal: true
  name: ReadToEndAsync()
  nameWithType: TextReader.ReadToEndAsync()
  fullName: System.IO.TextReader.ReadToEndAsync()
  spec.csharp:
  - uid: System.IO.TextReader.ReadToEndAsync
    name: ReadToEndAsync
    nameWithType: TextReader.ReadToEndAsync
    fullName: System.IO.TextReader.ReadToEndAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.ReadToEndAsync
    name: ReadToEndAsync
    nameWithType: TextReader.ReadToEndAsync
    fullName: System.IO.TextReader.ReadToEndAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader.Synchronized(System.IO.TextReader)
  commentId: M:System.IO.TextReader.Synchronized(System.IO.TextReader)
  parent: System.IO.TextReader
  isExternal: true
  name: Synchronized(TextReader)
  nameWithType: TextReader.Synchronized(TextReader)
  fullName: System.IO.TextReader.Synchronized(System.IO.TextReader)
  spec.csharp:
  - uid: System.IO.TextReader.Synchronized(System.IO.TextReader)
    name: Synchronized
    nameWithType: TextReader.Synchronized
    fullName: System.IO.TextReader.Synchronized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IO.TextReader.Synchronized(System.IO.TextReader)
    name: Synchronized
    nameWithType: TextReader.Synchronized
    fullName: System.IO.TextReader.Synchronized
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    nameWithType: MarshalByRefObject.GetLifetimeService
    fullName: System.MarshalByRefObject.GetLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    nameWithType: MarshalByRefObject.InitializeLifetimeService
    fullName: System.MarshalByRefObject.InitializeLifetimeService
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    nameWithType: MarshalByRefObject.MemberwiseClone
    fullName: System.MarshalByRefObject.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.ParsingTextReader.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ParsingTextReader>()
  nameWithType: Extensions.AsEnumerable<ParsingTextReader>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.ParsingTextReader>()
  nameWithType.vb: Extensions.AsEnumerable(Of ParsingTextReader)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.ParsingTextReader)()
  name.vb: AsEnumerable(Of ParsingTextReader)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ParsingTextReader>
    nameWithType: Extensions.AsEnumerable<ParsingTextReader>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.ParsingTextReader>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ParsingTextReader)
    nameWithType: Extensions.AsEnumerable(Of ParsingTextReader)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.ParsingTextReader)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.ParsingTextReader.EndOfStream*
  commentId: Overload:VDS.RDF.Parsing.ParsingTextReader.EndOfStream
  name: EndOfStream
  nameWithType: ParsingTextReader.EndOfStream
  fullName: VDS.RDF.Parsing.ParsingTextReader.EndOfStream
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Parsing.ParsingTextReader.Create*
  commentId: Overload:VDS.RDF.Parsing.ParsingTextReader.Create
  name: Create
  nameWithType: ParsingTextReader.Create
  fullName: VDS.RDF.Parsing.ParsingTextReader.Create
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Parsing.ParsingTextReader
  commentId: T:VDS.RDF.Parsing.ParsingTextReader
  parent: VDS.RDF.Parsing
  name: ParsingTextReader
  nameWithType: ParsingTextReader
  fullName: VDS.RDF.Parsing.ParsingTextReader
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: VDS.RDF.Parsing.ParsingTextReader.CreateBlocking*
  commentId: Overload:VDS.RDF.Parsing.ParsingTextReader.CreateBlocking
  name: CreateBlocking
  nameWithType: ParsingTextReader.CreateBlocking
  fullName: VDS.RDF.Parsing.ParsingTextReader.CreateBlocking
- uid: VDS.RDF.Parsing.BlockingTextReader
  commentId: T:VDS.RDF.Parsing.BlockingTextReader
  parent: VDS.RDF.Parsing
  name: BlockingTextReader
  nameWithType: BlockingTextReader
  fullName: VDS.RDF.Parsing.BlockingTextReader
- uid: VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking*
  commentId: Overload:VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking
  name: CreateNonBlocking
  nameWithType: ParsingTextReader.CreateNonBlocking
  fullName: VDS.RDF.Parsing.ParsingTextReader.CreateNonBlocking
- uid: VDS.RDF.Parsing.NonBlockingTextReader
  commentId: T:VDS.RDF.Parsing.NonBlockingTextReader
  parent: VDS.RDF.Parsing
  name: NonBlockingTextReader
  nameWithType: NonBlockingTextReader
  fullName: VDS.RDF.Parsing.NonBlockingTextReader
