### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Events.StreamingEventQueue`1
  commentId: T:VDS.RDF.Parsing.Events.StreamingEventQueue`1
  id: StreamingEventQueue`1
  parent: VDS.RDF.Parsing.Events
  children:
  - VDS.RDF.Parsing.Events.StreamingEventQueue`1.#ctor(VDS.RDF.Parsing.Events.IJitEventGenerator{`0})
  - VDS.RDF.Parsing.Events.StreamingEventQueue`1.Count
  - VDS.RDF.Parsing.Events.StreamingEventQueue`1.Dequeue
  - VDS.RDF.Parsing.Events.StreamingEventQueue`1.Enqueue(`0)
  - VDS.RDF.Parsing.Events.StreamingEventQueue`1.Peek
  langs:
  - csharp
  - vb
  name: StreamingEventQueue<T>
  nameWithType: StreamingEventQueue<T>
  fullName: VDS.RDF.Parsing.Events.StreamingEventQueue<T>
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/EventQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: StreamingEventQueue
    path: Libraries/dotNetRDF/Parsing/Events/EventQueue.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nRepresents a Queue of events which are streamed from an instance of a <xref href=\"VDS.RDF.Parsing.Events.IJitEventGenerator%601\" data-throw-if-not-resolved=\"false\"></xref> for use by an event based parser.\n"
  example: []
  syntax:
    content: 'public class StreamingEventQueue<T> : EventQueue<T>, IEventQueue<T> where T : IEvent'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class StreamingEventQueue(Of T As IEvent)
          Inherits EventQueue(Of T)
          Implements IEventQueue(Of T)
  inheritance:
  - System.Object
  - VDS.RDF.Parsing.Events.BaseEventQueue{{T}}
  - VDS.RDF.Parsing.Events.EventQueue{{T}}
  implements:
  - VDS.RDF.Parsing.Events.IEventQueue{{T}}
  inheritedMembers:
  - VDS.RDF.Parsing.Events.EventQueue{{T}}._events
  - VDS.RDF.Parsing.Events.EventQueue{{T}}.Clear
  - VDS.RDF.Parsing.Events.BaseEventQueue{{T}}._eventgen
  - VDS.RDF.Parsing.Events.BaseEventQueue{{T}}._tracing
  - VDS.RDF.Parsing.Events.BaseEventQueue{{T}}._lasteventtype
  - VDS.RDF.Parsing.Events.BaseEventQueue{{T}}.EventGenerator
  - VDS.RDF.Parsing.Events.BaseEventQueue{{T}}.Tracing
  - VDS.RDF.Parsing.Events.BaseEventQueue{{T}}.LastEventType
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.Events.StreamingEventQueue`1.VDS.RDF.Extensions.AsEnumerable``1
  nameWithType.vb: StreamingEventQueue(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: VDS.RDF.Parsing.Events.StreamingEventQueue(Of T)
  name.vb: StreamingEventQueue(Of T)
- uid: VDS.RDF.Parsing.Events.StreamingEventQueue`1.#ctor(VDS.RDF.Parsing.Events.IJitEventGenerator{`0})
  commentId: M:VDS.RDF.Parsing.Events.StreamingEventQueue`1.#ctor(VDS.RDF.Parsing.Events.IJitEventGenerator{`0})
  id: '#ctor(VDS.RDF.Parsing.Events.IJitEventGenerator{`0})'
  parent: VDS.RDF.Parsing.Events.StreamingEventQueue`1
  langs:
  - csharp
  - vb
  name: StreamingEventQueue(IJitEventGenerator<T>)
  nameWithType: StreamingEventQueue<T>.StreamingEventQueue(IJitEventGenerator<T>)
  fullName: VDS.RDF.Parsing.Events.StreamingEventQueue<T>.StreamingEventQueue(VDS.RDF.Parsing.Events.IJitEventGenerator<T>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/EventQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/Events/EventQueue.cs
    startLine: 121
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nCreates a new Streaming Event Queue.\n"
  example: []
  syntax:
    content: public StreamingEventQueue(IJitEventGenerator<T> generator)
    parameters:
    - id: generator
      type: VDS.RDF.Parsing.Events.IJitEventGenerator{{T}}
      description: Event Generator.
    content.vb: Public Sub New(generator As IJitEventGenerator(Of T))
  overload: VDS.RDF.Parsing.Events.StreamingEventQueue`1.#ctor*
  nameWithType.vb: StreamingEventQueue(Of T).StreamingEventQueue(IJitEventGenerator(Of T))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Parsing.Events.StreamingEventQueue(Of T).StreamingEventQueue(VDS.RDF.Parsing.Events.IJitEventGenerator(Of T))
  name.vb: StreamingEventQueue(IJitEventGenerator(Of T))
- uid: VDS.RDF.Parsing.Events.StreamingEventQueue`1.Count
  commentId: P:VDS.RDF.Parsing.Events.StreamingEventQueue`1.Count
  id: Count
  parent: VDS.RDF.Parsing.Events.StreamingEventQueue`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: StreamingEventQueue<T>.Count
  fullName: VDS.RDF.Parsing.Events.StreamingEventQueue<T>.Count
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/EventQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Count
    path: Libraries/dotNetRDF/Parsing/Events/EventQueue.cs
    startLine: 130
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets the Count of events in the queue.\n"
  example: []
  syntax:
    content: public override int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property Count As Integer
  overridden: VDS.RDF.Parsing.Events.EventQueue{{T}}.Count
  overload: VDS.RDF.Parsing.Events.StreamingEventQueue`1.Count*
  nameWithType.vb: StreamingEventQueue(Of T).Count
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: VDS.RDF.Parsing.Events.StreamingEventQueue(Of T).Count
- uid: VDS.RDF.Parsing.Events.StreamingEventQueue`1.Enqueue(`0)
  commentId: M:VDS.RDF.Parsing.Events.StreamingEventQueue`1.Enqueue(`0)
  id: Enqueue(`0)
  parent: VDS.RDF.Parsing.Events.StreamingEventQueue`1
  langs:
  - csharp
  - vb
  name: Enqueue(T)
  nameWithType: StreamingEventQueue<T>.Enqueue(T)
  fullName: VDS.RDF.Parsing.Events.StreamingEventQueue<T>.Enqueue(T)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/EventQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Enqueue
    path: Libraries/dotNetRDF/Parsing/Events/EventQueue.cs
    startLine: 148
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nAdds an event to the Queue.\n"
  example: []
  syntax:
    content: public override void Enqueue(T e)
    parameters:
    - id: e
      type: '{T}'
      description: Event.
    content.vb: Public Overrides Sub Enqueue(e As T)
  overridden: VDS.RDF.Parsing.Events.EventQueue{{T}}.Enqueue({T})
  overload: VDS.RDF.Parsing.Events.StreamingEventQueue`1.Enqueue*
  nameWithType.vb: StreamingEventQueue(Of T).Enqueue(T)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: VDS.RDF.Parsing.Events.StreamingEventQueue(Of T).Enqueue(T)
- uid: VDS.RDF.Parsing.Events.StreamingEventQueue`1.Dequeue
  commentId: M:VDS.RDF.Parsing.Events.StreamingEventQueue`1.Dequeue
  id: Dequeue
  parent: VDS.RDF.Parsing.Events.StreamingEventQueue`1
  langs:
  - csharp
  - vb
  name: Dequeue()
  nameWithType: StreamingEventQueue<T>.Dequeue()
  fullName: VDS.RDF.Parsing.Events.StreamingEventQueue<T>.Dequeue()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/EventQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dequeue
    path: Libraries/dotNetRDF/Parsing/Events/EventQueue.cs
    startLine: 167
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets the next event from the Queue and removes it from the Queue.\n"
  example: []
  syntax:
    content: public override T Dequeue()
    return:
      type: '{T}'
      description: ''
    content.vb: Public Overrides Function Dequeue As T
  overridden: VDS.RDF.Parsing.Events.EventQueue{{T}}.Dequeue
  overload: VDS.RDF.Parsing.Events.StreamingEventQueue`1.Dequeue*
  nameWithType.vb: StreamingEventQueue(Of T).Dequeue()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: VDS.RDF.Parsing.Events.StreamingEventQueue(Of T).Dequeue()
- uid: VDS.RDF.Parsing.Events.StreamingEventQueue`1.Peek
  commentId: M:VDS.RDF.Parsing.Events.StreamingEventQueue`1.Peek
  id: Peek
  parent: VDS.RDF.Parsing.Events.StreamingEventQueue`1
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: StreamingEventQueue<T>.Peek()
  fullName: VDS.RDF.Parsing.Events.StreamingEventQueue<T>.Peek()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/EventQueue.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Peek
    path: Libraries/dotNetRDF/Parsing/Events/EventQueue.cs
    startLine: 180
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets the next event from the Queue while leaving the Queue unchanged.\n"
  example: []
  syntax:
    content: public override T Peek()
    return:
      type: '{T}'
      description: ''
    content.vb: Public Overrides Function Peek As T
  overridden: VDS.RDF.Parsing.Events.EventQueue{{T}}.Peek
  overload: VDS.RDF.Parsing.Events.StreamingEventQueue`1.Peek*
  nameWithType.vb: StreamingEventQueue(Of T).Peek()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: VDS.RDF.Parsing.Events.StreamingEventQueue(Of T).Peek()
references:
- uid: VDS.RDF.Parsing.Events.IJitEventGenerator`1
  commentId: T:VDS.RDF.Parsing.Events.IJitEventGenerator`1
  name: IJitEventGenerator<T>
  nameWithType: IJitEventGenerator<T>
  fullName: VDS.RDF.Parsing.Events.IJitEventGenerator<T>
  nameWithType.vb: IJitEventGenerator(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.IJitEventGenerator(Of T)
  name.vb: IJitEventGenerator(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IJitEventGenerator`1
    name: IJitEventGenerator
    nameWithType: IJitEventGenerator
    fullName: VDS.RDF.Parsing.Events.IJitEventGenerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IJitEventGenerator`1
    name: IJitEventGenerator
    nameWithType: IJitEventGenerator
    fullName: VDS.RDF.Parsing.Events.IJitEventGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events
  commentId: N:VDS.RDF.Parsing.Events
  name: VDS.RDF.Parsing.Events
  nameWithType: VDS.RDF.Parsing.Events
  fullName: VDS.RDF.Parsing.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}
  commentId: T:VDS.RDF.Parsing.Events.BaseEventQueue{`0}
  parent: VDS.RDF.Parsing.Events
  definition: VDS.RDF.Parsing.Events.BaseEventQueue`1
  name: BaseEventQueue<T>
  nameWithType: BaseEventQueue<T>
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>
  nameWithType.vb: BaseEventQueue(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T)
  name.vb: BaseEventQueue(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.BaseEventQueue`1
    name: BaseEventQueue
    nameWithType: BaseEventQueue
    fullName: VDS.RDF.Parsing.Events.BaseEventQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.BaseEventQueue`1
    name: BaseEventQueue
    nameWithType: BaseEventQueue
    fullName: VDS.RDF.Parsing.Events.BaseEventQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.EventQueue{{T}}
  commentId: T:VDS.RDF.Parsing.Events.EventQueue{`0}
  parent: VDS.RDF.Parsing.Events
  definition: VDS.RDF.Parsing.Events.EventQueue`1
  name: EventQueue<T>
  nameWithType: EventQueue<T>
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>
  nameWithType.vb: EventQueue(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T)
  name.vb: EventQueue(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1
    name: EventQueue
    nameWithType: EventQueue
    fullName: VDS.RDF.Parsing.Events.EventQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1
    name: EventQueue
    nameWithType: EventQueue
    fullName: VDS.RDF.Parsing.Events.EventQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.IEventQueue{{T}}
  commentId: T:VDS.RDF.Parsing.Events.IEventQueue{`0}
  parent: VDS.RDF.Parsing.Events
  definition: VDS.RDF.Parsing.Events.IEventQueue`1
  name: IEventQueue<T>
  nameWithType: IEventQueue<T>
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>
  nameWithType.vb: IEventQueue(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T)
  name.vb: IEventQueue(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.EventQueue{{T}}._events
  commentId: F:VDS.RDF.Parsing.Events.EventQueue{`0}._events
  parent: VDS.RDF.Parsing.Events.EventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.EventQueue`1._events
  name: _events
  nameWithType: EventQueue<T>._events
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>._events
  nameWithType.vb: EventQueue(Of T)._events
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T)._events
- uid: VDS.RDF.Parsing.Events.EventQueue{{T}}.Clear
  commentId: M:VDS.RDF.Parsing.Events.EventQueue{`0}.Clear
  parent: VDS.RDF.Parsing.Events.EventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.EventQueue`1.Clear
  name: Clear()
  nameWithType: EventQueue<T>.Clear()
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Clear()
  nameWithType.vb: EventQueue(Of T).Clear()
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T).Clear()
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Clear
    name: Clear
    nameWithType: EventQueue<T>.Clear
    fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Clear
    name: Clear
    nameWithType: EventQueue(Of T).Clear
    fullName: VDS.RDF.Parsing.Events.EventQueue(Of T).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}._eventgen
  commentId: F:VDS.RDF.Parsing.Events.BaseEventQueue{`0}._eventgen
  parent: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.BaseEventQueue`1._eventgen
  name: _eventgen
  nameWithType: BaseEventQueue<T>._eventgen
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>._eventgen
  nameWithType.vb: BaseEventQueue(Of T)._eventgen
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T)._eventgen
- uid: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}._tracing
  commentId: F:VDS.RDF.Parsing.Events.BaseEventQueue{`0}._tracing
  parent: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.BaseEventQueue`1._tracing
  name: _tracing
  nameWithType: BaseEventQueue<T>._tracing
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>._tracing
  nameWithType.vb: BaseEventQueue(Of T)._tracing
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T)._tracing
- uid: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}._lasteventtype
  commentId: F:VDS.RDF.Parsing.Events.BaseEventQueue{`0}._lasteventtype
  parent: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.BaseEventQueue`1._lasteventtype
  name: _lasteventtype
  nameWithType: BaseEventQueue<T>._lasteventtype
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>._lasteventtype
  nameWithType.vb: BaseEventQueue(Of T)._lasteventtype
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T)._lasteventtype
- uid: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}.EventGenerator
  commentId: P:VDS.RDF.Parsing.Events.BaseEventQueue{`0}.EventGenerator
  parent: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.BaseEventQueue`1.EventGenerator
  name: EventGenerator
  nameWithType: BaseEventQueue<T>.EventGenerator
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.EventGenerator
  nameWithType.vb: BaseEventQueue(Of T).EventGenerator
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).EventGenerator
- uid: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}.Tracing
  commentId: P:VDS.RDF.Parsing.Events.BaseEventQueue{`0}.Tracing
  parent: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.BaseEventQueue`1.Tracing
  name: Tracing
  nameWithType: BaseEventQueue<T>.Tracing
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Tracing
  nameWithType.vb: BaseEventQueue(Of T).Tracing
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Tracing
- uid: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}.LastEventType
  commentId: P:VDS.RDF.Parsing.Events.BaseEventQueue{`0}.LastEventType
  parent: VDS.RDF.Parsing.Events.BaseEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.BaseEventQueue`1.LastEventType
  name: LastEventType
  nameWithType: BaseEventQueue<T>.LastEventType
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.LastEventType
  nameWithType.vb: BaseEventQueue(Of T).LastEventType
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).LastEventType
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.StreamingEventQueue`1.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<StreamingEventQueue<T>>()
  nameWithType: Extensions.AsEnumerable<StreamingEventQueue<T>>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.StreamingEventQueue<T>>()
  nameWithType.vb: Extensions.AsEnumerable(Of StreamingEventQueue(Of T))()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.StreamingEventQueue(Of T))()
  name.vb: AsEnumerable(Of StreamingEventQueue(Of T))()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<StreamingEventQueue<T>>
    nameWithType: Extensions.AsEnumerable<StreamingEventQueue<T>>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.StreamingEventQueue<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of StreamingEventQueue(Of T))
    nameWithType: Extensions.AsEnumerable(Of StreamingEventQueue(Of T))
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.StreamingEventQueue(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1
  commentId: T:VDS.RDF.Parsing.Events.BaseEventQueue`1
  name: BaseEventQueue<T>
  nameWithType: BaseEventQueue<T>
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>
  nameWithType.vb: BaseEventQueue(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T)
  name.vb: BaseEventQueue(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.BaseEventQueue`1
    name: BaseEventQueue
    nameWithType: BaseEventQueue
    fullName: VDS.RDF.Parsing.Events.BaseEventQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.BaseEventQueue`1
    name: BaseEventQueue
    nameWithType: BaseEventQueue
    fullName: VDS.RDF.Parsing.Events.BaseEventQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.EventQueue`1
  commentId: T:VDS.RDF.Parsing.Events.EventQueue`1
  name: EventQueue<T>
  nameWithType: EventQueue<T>
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>
  nameWithType.vb: EventQueue(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T)
  name.vb: EventQueue(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1
    name: EventQueue
    nameWithType: EventQueue
    fullName: VDS.RDF.Parsing.Events.EventQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1
    name: EventQueue
    nameWithType: EventQueue
    fullName: VDS.RDF.Parsing.Events.EventQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.IEventQueue`1
  commentId: T:VDS.RDF.Parsing.Events.IEventQueue`1
  name: IEventQueue<T>
  nameWithType: IEventQueue<T>
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>
  nameWithType.vb: IEventQueue(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T)
  name.vb: IEventQueue(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.EventQueue`1._events
  commentId: F:VDS.RDF.Parsing.Events.EventQueue`1._events
  name: _events
  nameWithType: EventQueue<T>._events
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>._events
  nameWithType.vb: EventQueue(Of T)._events
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T)._events
- uid: VDS.RDF.Parsing.Events.EventQueue`1.Clear
  commentId: M:VDS.RDF.Parsing.Events.EventQueue`1.Clear
  name: Clear()
  nameWithType: EventQueue<T>.Clear()
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Clear()
  nameWithType.vb: EventQueue(Of T).Clear()
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T).Clear()
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Clear
    name: Clear
    nameWithType: EventQueue<T>.Clear
    fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Clear
    name: Clear
    nameWithType: EventQueue(Of T).Clear
    fullName: VDS.RDF.Parsing.Events.EventQueue(Of T).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1._eventgen
  commentId: F:VDS.RDF.Parsing.Events.BaseEventQueue`1._eventgen
  name: _eventgen
  nameWithType: BaseEventQueue<T>._eventgen
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>._eventgen
  nameWithType.vb: BaseEventQueue(Of T)._eventgen
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T)._eventgen
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1._tracing
  commentId: F:VDS.RDF.Parsing.Events.BaseEventQueue`1._tracing
  name: _tracing
  nameWithType: BaseEventQueue<T>._tracing
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>._tracing
  nameWithType.vb: BaseEventQueue(Of T)._tracing
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T)._tracing
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1._lasteventtype
  commentId: F:VDS.RDF.Parsing.Events.BaseEventQueue`1._lasteventtype
  name: _lasteventtype
  nameWithType: BaseEventQueue<T>._lasteventtype
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>._lasteventtype
  nameWithType.vb: BaseEventQueue(Of T)._lasteventtype
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T)._lasteventtype
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.EventGenerator
  commentId: P:VDS.RDF.Parsing.Events.BaseEventQueue`1.EventGenerator
  name: EventGenerator
  nameWithType: BaseEventQueue<T>.EventGenerator
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.EventGenerator
  nameWithType.vb: BaseEventQueue(Of T).EventGenerator
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).EventGenerator
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Tracing
  commentId: P:VDS.RDF.Parsing.Events.BaseEventQueue`1.Tracing
  name: Tracing
  nameWithType: BaseEventQueue<T>.Tracing
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Tracing
  nameWithType.vb: BaseEventQueue(Of T).Tracing
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Tracing
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.LastEventType
  commentId: P:VDS.RDF.Parsing.Events.BaseEventQueue`1.LastEventType
  name: LastEventType
  nameWithType: BaseEventQueue<T>.LastEventType
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.LastEventType
  nameWithType.vb: BaseEventQueue(Of T).LastEventType
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).LastEventType
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Events.StreamingEventQueue`1.#ctor*
  commentId: Overload:VDS.RDF.Parsing.Events.StreamingEventQueue`1.#ctor
  name: StreamingEventQueue
  nameWithType: StreamingEventQueue<T>.StreamingEventQueue
  fullName: VDS.RDF.Parsing.Events.StreamingEventQueue<T>.StreamingEventQueue
  nameWithType.vb: StreamingEventQueue(Of T).StreamingEventQueue
  fullName.vb: VDS.RDF.Parsing.Events.StreamingEventQueue(Of T).StreamingEventQueue
- uid: VDS.RDF.Parsing.Events.IJitEventGenerator{{T}}
  commentId: T:VDS.RDF.Parsing.Events.IJitEventGenerator{`0}
  parent: VDS.RDF.Parsing.Events
  definition: VDS.RDF.Parsing.Events.IJitEventGenerator`1
  name: IJitEventGenerator<T>
  nameWithType: IJitEventGenerator<T>
  fullName: VDS.RDF.Parsing.Events.IJitEventGenerator<T>
  nameWithType.vb: IJitEventGenerator(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.IJitEventGenerator(Of T)
  name.vb: IJitEventGenerator(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IJitEventGenerator`1
    name: IJitEventGenerator
    nameWithType: IJitEventGenerator
    fullName: VDS.RDF.Parsing.Events.IJitEventGenerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IJitEventGenerator`1
    name: IJitEventGenerator
    nameWithType: IJitEventGenerator
    fullName: VDS.RDF.Parsing.Events.IJitEventGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.EventQueue{{T}}.Count
  commentId: P:VDS.RDF.Parsing.Events.EventQueue{`0}.Count
  parent: VDS.RDF.Parsing.Events.EventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.EventQueue`1.Count
  name: Count
  nameWithType: EventQueue<T>.Count
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Count
  nameWithType.vb: EventQueue(Of T).Count
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T).Count
- uid: VDS.RDF.Parsing.Events.StreamingEventQueue`1.Count*
  commentId: Overload:VDS.RDF.Parsing.Events.StreamingEventQueue`1.Count
  name: Count
  nameWithType: StreamingEventQueue<T>.Count
  fullName: VDS.RDF.Parsing.Events.StreamingEventQueue<T>.Count
  nameWithType.vb: StreamingEventQueue(Of T).Count
  fullName.vb: VDS.RDF.Parsing.Events.StreamingEventQueue(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Parsing.Events.EventQueue`1.Count
  commentId: P:VDS.RDF.Parsing.Events.EventQueue`1.Count
  name: Count
  nameWithType: EventQueue<T>.Count
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Count
  nameWithType.vb: EventQueue(Of T).Count
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T).Count
- uid: VDS.RDF.Parsing.Events.EventQueue{{T}}.Enqueue({T})
  commentId: M:VDS.RDF.Parsing.Events.EventQueue{`0}.Enqueue(`0)
  parent: VDS.RDF.Parsing.Events.EventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.EventQueue`1.Enqueue(`0)
  name: Enqueue(T)
  nameWithType: EventQueue<T>.Enqueue(T)
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Enqueue(T)
  nameWithType.vb: EventQueue(Of T).Enqueue(T)
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T).Enqueue(T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Enqueue(`0)
    name: Enqueue
    nameWithType: EventQueue<T>.Enqueue
    fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Enqueue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Enqueue(`0)
    name: Enqueue
    nameWithType: EventQueue(Of T).Enqueue
    fullName: VDS.RDF.Parsing.Events.EventQueue(Of T).Enqueue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.StreamingEventQueue`1.Enqueue*
  commentId: Overload:VDS.RDF.Parsing.Events.StreamingEventQueue`1.Enqueue
  name: Enqueue
  nameWithType: StreamingEventQueue<T>.Enqueue
  fullName: VDS.RDF.Parsing.Events.StreamingEventQueue<T>.Enqueue
  nameWithType.vb: StreamingEventQueue(Of T).Enqueue
  fullName.vb: VDS.RDF.Parsing.Events.StreamingEventQueue(Of T).Enqueue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: VDS.RDF.Parsing.Events.EventQueue`1.Enqueue(`0)
  commentId: M:VDS.RDF.Parsing.Events.EventQueue`1.Enqueue(`0)
  name: Enqueue(T)
  nameWithType: EventQueue<T>.Enqueue(T)
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Enqueue(T)
  nameWithType.vb: EventQueue(Of T).Enqueue(T)
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T).Enqueue(T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Enqueue(`0)
    name: Enqueue
    nameWithType: EventQueue<T>.Enqueue
    fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Enqueue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Enqueue(`0)
    name: Enqueue
    nameWithType: EventQueue(Of T).Enqueue
    fullName: VDS.RDF.Parsing.Events.EventQueue(Of T).Enqueue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VDS.RDF.Parsing.Events.EventQueue{{T}}.Dequeue
  commentId: M:VDS.RDF.Parsing.Events.EventQueue{`0}.Dequeue
  parent: VDS.RDF.Parsing.Events.EventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.EventQueue`1.Dequeue
  name: Dequeue()
  nameWithType: EventQueue<T>.Dequeue()
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Dequeue()
  nameWithType.vb: EventQueue(Of T).Dequeue()
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T).Dequeue()
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Dequeue
    name: Dequeue
    nameWithType: EventQueue<T>.Dequeue
    fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Dequeue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Dequeue
    name: Dequeue
    nameWithType: EventQueue(Of T).Dequeue
    fullName: VDS.RDF.Parsing.Events.EventQueue(Of T).Dequeue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.StreamingEventQueue`1.Dequeue*
  commentId: Overload:VDS.RDF.Parsing.Events.StreamingEventQueue`1.Dequeue
  name: Dequeue
  nameWithType: StreamingEventQueue<T>.Dequeue
  fullName: VDS.RDF.Parsing.Events.StreamingEventQueue<T>.Dequeue
  nameWithType.vb: StreamingEventQueue(Of T).Dequeue
  fullName.vb: VDS.RDF.Parsing.Events.StreamingEventQueue(Of T).Dequeue
- uid: VDS.RDF.Parsing.Events.EventQueue`1.Dequeue
  commentId: M:VDS.RDF.Parsing.Events.EventQueue`1.Dequeue
  name: Dequeue()
  nameWithType: EventQueue<T>.Dequeue()
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Dequeue()
  nameWithType.vb: EventQueue(Of T).Dequeue()
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T).Dequeue()
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Dequeue
    name: Dequeue
    nameWithType: EventQueue<T>.Dequeue
    fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Dequeue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Dequeue
    name: Dequeue
    nameWithType: EventQueue(Of T).Dequeue
    fullName: VDS.RDF.Parsing.Events.EventQueue(Of T).Dequeue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.EventQueue{{T}}.Peek
  commentId: M:VDS.RDF.Parsing.Events.EventQueue{`0}.Peek
  parent: VDS.RDF.Parsing.Events.EventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.EventQueue`1.Peek
  name: Peek()
  nameWithType: EventQueue<T>.Peek()
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Peek()
  nameWithType.vb: EventQueue(Of T).Peek()
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T).Peek()
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Peek
    name: Peek
    nameWithType: EventQueue<T>.Peek
    fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Peek
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Peek
    name: Peek
    nameWithType: EventQueue(Of T).Peek
    fullName: VDS.RDF.Parsing.Events.EventQueue(Of T).Peek
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.StreamingEventQueue`1.Peek*
  commentId: Overload:VDS.RDF.Parsing.Events.StreamingEventQueue`1.Peek
  name: Peek
  nameWithType: StreamingEventQueue<T>.Peek
  fullName: VDS.RDF.Parsing.Events.StreamingEventQueue<T>.Peek
  nameWithType.vb: StreamingEventQueue(Of T).Peek
  fullName.vb: VDS.RDF.Parsing.Events.StreamingEventQueue(Of T).Peek
- uid: VDS.RDF.Parsing.Events.EventQueue`1.Peek
  commentId: M:VDS.RDF.Parsing.Events.EventQueue`1.Peek
  name: Peek()
  nameWithType: EventQueue<T>.Peek()
  fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Peek()
  nameWithType.vb: EventQueue(Of T).Peek()
  fullName.vb: VDS.RDF.Parsing.Events.EventQueue(Of T).Peek()
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Peek
    name: Peek
    nameWithType: EventQueue<T>.Peek
    fullName: VDS.RDF.Parsing.Events.EventQueue<T>.Peek
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.EventQueue`1.Peek
    name: Peek
    nameWithType: EventQueue(Of T).Peek
    fullName: VDS.RDF.Parsing.Events.EventQueue(Of T).Peek
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
