### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.TermMappings
  commentId: T:VDS.RDF.Parsing.TermMappings
  id: TermMappings
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.TermMappings.#ctor
  - VDS.RDF.Parsing.TermMappings.#ctor(System.String)
  - VDS.RDF.Parsing.TermMappings.#ctor(VDS.RDF.Parsing.IRdfAVocabulary)
  - VDS.RDF.Parsing.TermMappings.AddNamespace(System.String,System.String)
  - VDS.RDF.Parsing.TermMappings.AddTerm(System.String,System.String)
  - VDS.RDF.Parsing.TermMappings.HasTerm(System.String)
  - VDS.RDF.Parsing.TermMappings.Mappings
  - VDS.RDF.Parsing.TermMappings.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  - VDS.RDF.Parsing.TermMappings.Namespaces
  - VDS.RDF.Parsing.TermMappings.ResolveTerm(System.String)
  - VDS.RDF.Parsing.TermMappings.VocabularyUri
  langs:
  - csharp
  - vb
  name: TermMappings
  nameWithType: TermMappings
  fullName: VDS.RDF.Parsing.TermMappings
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TermMappings
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 226
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nRepresents a dynamic vocabulary for RDFa.\n"
  example: []
  syntax:
    content: 'public class TermMappings : IRdfAVocabulary'
    content.vb: >-
      Public Class TermMappings
          Implements IRdfAVocabulary
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.TermMappings.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.TermMappings.#ctor
  commentId: M:VDS.RDF.Parsing.TermMappings.#ctor
  id: '#ctor'
  parent: VDS.RDF.Parsing.TermMappings
  langs:
  - csharp
  - vb
  name: TermMappings()
  nameWithType: TermMappings.TermMappings()
  fullName: VDS.RDF.Parsing.TermMappings.TermMappings()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 235
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new set of Term Mappings.\n"
  example: []
  syntax:
    content: public TermMappings()
    content.vb: Public Sub New
  overload: VDS.RDF.Parsing.TermMappings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.TermMappings.#ctor(System.String)
  commentId: M:VDS.RDF.Parsing.TermMappings.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VDS.RDF.Parsing.TermMappings
  langs:
  - csharp
  - vb
  name: TermMappings(String)
  nameWithType: TermMappings.TermMappings(String)
  fullName: VDS.RDF.Parsing.TermMappings.TermMappings(System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 243
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new set of Term Mappings with the given Vocabulary URI.\n"
  example: []
  syntax:
    content: public TermMappings(string vocabUri)
    parameters:
    - id: vocabUri
      type: System.String
      description: Vocabulary URI.
    content.vb: Public Sub New(vocabUri As String)
  overload: VDS.RDF.Parsing.TermMappings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.TermMappings.#ctor(VDS.RDF.Parsing.IRdfAVocabulary)
  commentId: M:VDS.RDF.Parsing.TermMappings.#ctor(VDS.RDF.Parsing.IRdfAVocabulary)
  id: '#ctor(VDS.RDF.Parsing.IRdfAVocabulary)'
  parent: VDS.RDF.Parsing.TermMappings
  langs:
  - csharp
  - vb
  name: TermMappings(IRdfAVocabulary)
  nameWithType: TermMappings.TermMappings(IRdfAVocabulary)
  fullName: VDS.RDF.Parsing.TermMappings.TermMappings(VDS.RDF.Parsing.IRdfAVocabulary)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 252
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new set of Term Mappings from the given Vocabulary.\n"
  example: []
  syntax:
    content: public TermMappings(IRdfAVocabulary vocab)
    parameters:
    - id: vocab
      type: VDS.RDF.Parsing.IRdfAVocabulary
      description: Vocabulary.
    content.vb: Public Sub New(vocab As IRdfAVocabulary)
  overload: VDS.RDF.Parsing.TermMappings.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.TermMappings.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  commentId: M:VDS.RDF.Parsing.TermMappings.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  id: Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  parent: VDS.RDF.Parsing.TermMappings
  langs:
  - csharp
  - vb
  name: Merge(IRdfAVocabulary)
  nameWithType: TermMappings.Merge(IRdfAVocabulary)
  fullName: VDS.RDF.Parsing.TermMappings.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merge
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 265
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nMerges another Vocabulary into this one.\n"
  example: []
  syntax:
    content: public void Merge(IRdfAVocabulary vocab)
    parameters:
    - id: vocab
      type: VDS.RDF.Parsing.IRdfAVocabulary
      description: Vocabulary.
    content.vb: Public Sub Merge(vocab As IRdfAVocabulary)
  overload: VDS.RDF.Parsing.TermMappings.Merge*
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.TermMappings.HasTerm(System.String)
  commentId: M:VDS.RDF.Parsing.TermMappings.HasTerm(System.String)
  id: HasTerm(System.String)
  parent: VDS.RDF.Parsing.TermMappings
  langs:
  - csharp
  - vb
  name: HasTerm(String)
  nameWithType: TermMappings.HasTerm(String)
  fullName: VDS.RDF.Parsing.TermMappings.HasTerm(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasTerm
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 283
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether the Vocabulary contains a Term.\n"
  example: []
  syntax:
    content: public bool HasTerm(string term)
    parameters:
    - id: term
      type: System.String
      description: Term.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasTerm(term As String) As Boolean
  overload: VDS.RDF.Parsing.TermMappings.HasTerm*
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.TermMappings.ResolveTerm(System.String)
  commentId: M:VDS.RDF.Parsing.TermMappings.ResolveTerm(System.String)
  id: ResolveTerm(System.String)
  parent: VDS.RDF.Parsing.TermMappings
  langs:
  - csharp
  - vb
  name: ResolveTerm(String)
  nameWithType: TermMappings.ResolveTerm(String)
  fullName: VDS.RDF.Parsing.TermMappings.ResolveTerm(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResolveTerm
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 293
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nResolves a Term in the Vocabulary.\n"
  example: []
  syntax:
    content: public string ResolveTerm(string term)
    parameters:
    - id: term
      type: System.String
      description: Term.
    return:
      type: System.String
      description: ''
    content.vb: Public Function ResolveTerm(term As String) As String
  overload: VDS.RDF.Parsing.TermMappings.ResolveTerm*
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.TermMappings.AddNamespace(System.String,System.String)
  commentId: M:VDS.RDF.Parsing.TermMappings.AddNamespace(System.String,System.String)
  id: AddNamespace(System.String,System.String)
  parent: VDS.RDF.Parsing.TermMappings
  langs:
  - csharp
  - vb
  name: AddNamespace(String, String)
  nameWithType: TermMappings.AddNamespace(String, String)
  fullName: VDS.RDF.Parsing.TermMappings.AddNamespace(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddNamespace
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 315
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAdds a Namespace to the Vocabulary.\n"
  example: []
  syntax:
    content: public void AddNamespace(string prefix, string nsUri)
    parameters:
    - id: prefix
      type: System.String
      description: Prefix.
    - id: nsUri
      type: System.String
      description: Namespace URI.
    content.vb: Public Sub AddNamespace(prefix As String, nsUri As String)
  overload: VDS.RDF.Parsing.TermMappings.AddNamespace*
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.TermMappings.AddTerm(System.String,System.String)
  commentId: M:VDS.RDF.Parsing.TermMappings.AddTerm(System.String,System.String)
  id: AddTerm(System.String,System.String)
  parent: VDS.RDF.Parsing.TermMappings
  langs:
  - csharp
  - vb
  name: AddTerm(String, String)
  nameWithType: TermMappings.AddTerm(String, String)
  fullName: VDS.RDF.Parsing.TermMappings.AddTerm(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddTerm
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 332
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAdds a Term to the Vocabulary.\n"
  example: []
  syntax:
    content: public void AddTerm(string term, string uri)
    parameters:
    - id: term
      type: System.String
      description: Term.
    - id: uri
      type: System.String
      description: URI.
    content.vb: Public Sub AddTerm(term As String, uri As String)
  overload: VDS.RDF.Parsing.TermMappings.AddTerm*
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.TermMappings.Mappings
  commentId: P:VDS.RDF.Parsing.TermMappings.Mappings
  id: Mappings
  parent: VDS.RDF.Parsing.TermMappings
  langs:
  - csharp
  - vb
  name: Mappings
  nameWithType: TermMappings.Mappings
  fullName: VDS.RDF.Parsing.TermMappings.Mappings
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Mappings
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 347
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets the Term Mappings.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, string>> Mappings { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: Public ReadOnly Property Mappings As IEnumerable(Of KeyValuePair(Of String, String))
  overload: VDS.RDF.Parsing.TermMappings.Mappings*
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.Mappings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.TermMappings.Namespaces
  commentId: P:VDS.RDF.Parsing.TermMappings.Namespaces
  id: Namespaces
  parent: VDS.RDF.Parsing.TermMappings
  langs:
  - csharp
  - vb
  name: Namespaces
  nameWithType: TermMappings.Namespaces
  fullName: VDS.RDF.Parsing.TermMappings.Namespaces
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Namespaces
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 358
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets the Namespace Mappings.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, string>> Namespaces { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: Public ReadOnly Property Namespaces As IEnumerable(Of KeyValuePair(Of String, String))
  overload: VDS.RDF.Parsing.TermMappings.Namespaces*
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.TermMappings.VocabularyUri
  commentId: P:VDS.RDF.Parsing.TermMappings.VocabularyUri
  id: VocabularyUri
  parent: VDS.RDF.Parsing.TermMappings
  langs:
  - csharp
  - vb
  name: VocabularyUri
  nameWithType: TermMappings.VocabularyUri
  fullName: VDS.RDF.Parsing.TermMappings.VocabularyUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: VocabularyUri
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 369
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets/Sets the Vocabulary URI.\n"
  example: []
  syntax:
    content: public string VocabularyUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VocabularyUri As String
  overload: VDS.RDF.Parsing.TermMappings.VocabularyUri*
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.IRdfAVocabulary
  commentId: T:VDS.RDF.Parsing.IRdfAVocabulary
  parent: VDS.RDF.Parsing
  name: IRdfAVocabulary
  nameWithType: IRdfAVocabulary
  fullName: VDS.RDF.Parsing.IRdfAVocabulary
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.TermMappings.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TermMappings>()
  nameWithType: Extensions.AsEnumerable<TermMappings>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.TermMappings>()
  nameWithType.vb: Extensions.AsEnumerable(Of TermMappings)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.TermMappings)()
  name.vb: AsEnumerable(Of TermMappings)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TermMappings>
    nameWithType: Extensions.AsEnumerable<TermMappings>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.TermMappings>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TermMappings)
    nameWithType: Extensions.AsEnumerable(Of TermMappings)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.TermMappings)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.TermMappings.#ctor*
  commentId: Overload:VDS.RDF.Parsing.TermMappings.#ctor
  name: TermMappings
  nameWithType: TermMappings.TermMappings
  fullName: VDS.RDF.Parsing.TermMappings.TermMappings
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Parsing.TermMappings.Merge*
  commentId: Overload:VDS.RDF.Parsing.TermMappings.Merge
  name: Merge
  nameWithType: TermMappings.Merge
  fullName: VDS.RDF.Parsing.TermMappings.Merge
- uid: VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  name: Merge(IRdfAVocabulary)
  nameWithType: IRdfAVocabulary.Merge(IRdfAVocabulary)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  spec.csharp:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
    name: Merge
    nameWithType: IRdfAVocabulary.Merge
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Parsing.IRdfAVocabulary
    name: IRdfAVocabulary
    nameWithType: IRdfAVocabulary
    fullName: VDS.RDF.Parsing.IRdfAVocabulary
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
    name: Merge
    nameWithType: IRdfAVocabulary.Merge
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Parsing.IRdfAVocabulary
    name: IRdfAVocabulary
    nameWithType: IRdfAVocabulary
    fullName: VDS.RDF.Parsing.IRdfAVocabulary
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.TermMappings.HasTerm*
  commentId: Overload:VDS.RDF.Parsing.TermMappings.HasTerm
  name: HasTerm
  nameWithType: TermMappings.HasTerm
  fullName: VDS.RDF.Parsing.TermMappings.HasTerm
- uid: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  isExternal: true
  name: HasTerm(String)
  nameWithType: IRdfAVocabulary.HasTerm(String)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
  spec.csharp:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
    name: HasTerm
    nameWithType: IRdfAVocabulary.HasTerm
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
    name: HasTerm
    nameWithType: IRdfAVocabulary.HasTerm
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Parsing.TermMappings.ResolveTerm*
  commentId: Overload:VDS.RDF.Parsing.TermMappings.ResolveTerm
  name: ResolveTerm
  nameWithType: TermMappings.ResolveTerm
  fullName: VDS.RDF.Parsing.TermMappings.ResolveTerm
- uid: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  isExternal: true
  name: ResolveTerm(String)
  nameWithType: IRdfAVocabulary.ResolveTerm(String)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
  spec.csharp:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
    name: ResolveTerm
    nameWithType: IRdfAVocabulary.ResolveTerm
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
    name: ResolveTerm
    nameWithType: IRdfAVocabulary.ResolveTerm
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.TermMappings.AddNamespace*
  commentId: Overload:VDS.RDF.Parsing.TermMappings.AddNamespace
  name: AddNamespace
  nameWithType: TermMappings.AddNamespace
  fullName: VDS.RDF.Parsing.TermMappings.AddNamespace
- uid: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  isExternal: true
  name: AddNamespace(String, String)
  nameWithType: IRdfAVocabulary.AddNamespace(String, String)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
    name: AddNamespace
    nameWithType: IRdfAVocabulary.AddNamespace
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
    name: AddNamespace
    nameWithType: IRdfAVocabulary.AddNamespace
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.TermMappings.AddTerm*
  commentId: Overload:VDS.RDF.Parsing.TermMappings.AddTerm
  name: AddTerm
  nameWithType: TermMappings.AddTerm
  fullName: VDS.RDF.Parsing.TermMappings.AddTerm
- uid: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  isExternal: true
  name: AddTerm(String, String)
  nameWithType: IRdfAVocabulary.AddTerm(String, String)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
    name: AddTerm
    nameWithType: IRdfAVocabulary.AddTerm
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
    name: AddTerm
    nameWithType: IRdfAVocabulary.AddTerm
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.TermMappings.Mappings*
  commentId: Overload:VDS.RDF.Parsing.TermMappings.Mappings
  name: Mappings
  nameWithType: TermMappings.Mappings
  fullName: VDS.RDF.Parsing.TermMappings.Mappings
- uid: VDS.RDF.Parsing.IRdfAVocabulary.Mappings
  commentId: P:VDS.RDF.Parsing.IRdfAVocabulary.Mappings
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  name: Mappings
  nameWithType: IRdfAVocabulary.Mappings
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.Mappings
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Parsing.TermMappings.Namespaces*
  commentId: Overload:VDS.RDF.Parsing.TermMappings.Namespaces
  name: Namespaces
  nameWithType: TermMappings.Namespaces
  fullName: VDS.RDF.Parsing.TermMappings.Namespaces
- uid: VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
  commentId: P:VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  name: Namespaces
  nameWithType: IRdfAVocabulary.Namespaces
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
- uid: VDS.RDF.Parsing.TermMappings.VocabularyUri*
  commentId: Overload:VDS.RDF.Parsing.TermMappings.VocabularyUri
  name: VocabularyUri
  nameWithType: TermMappings.VocabularyUri
  fullName: VDS.RDF.Parsing.TermMappings.VocabularyUri
- uid: VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
  commentId: P:VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  name: VocabularyUri
  nameWithType: IRdfAVocabulary.VocabularyUri
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
shouldSkipMarkup: true
