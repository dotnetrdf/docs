### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Handlers.HandlerExtensions
  commentId: T:VDS.RDF.Parsing.Handlers.HandlerExtensions
  id: HandlerExtensions
  parent: VDS.RDF.Parsing.Handlers
  children:
  - VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.IRdfHandler,System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.IRdfHandler,VDS.RDF.IGraph)
  - VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlResultSet)
  langs:
  - csharp
  - vb
  name: HandlerExtensions
  nameWithType: HandlerExtensions
  fullName: VDS.RDF.Parsing.Handlers.HandlerExtensions
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Handlers/HandlerExtensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HandlerExtensions
    path: Libraries/dotNetRDF/Parsing/Handlers/HandlerExtensions.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Handlers
  summary: "\nStatic Class of extension methods for use with Handler classes.\n"
  example: []
  syntax:
    content: public static class HandlerExtensions
    content.vb: Public Module HandlerExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.IRdfHandler,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.IRdfHandler,VDS.RDF.IGraph)
  id: Apply(VDS.RDF.IRdfHandler,VDS.RDF.IGraph)
  isExtensionMethod: true
  parent: VDS.RDF.Parsing.Handlers.HandlerExtensions
  langs:
  - csharp
  - vb
  name: Apply(IRdfHandler, IGraph)
  nameWithType: HandlerExtensions.Apply(IRdfHandler, IGraph)
  fullName: VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.IRdfHandler, VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Handlers/HandlerExtensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: Libraries/dotNetRDF/Parsing/Handlers/HandlerExtensions.cs
    startLine: 72
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Handlers
  summary: "\nApplies the triples of a Graph to an RDF Handler.\n"
  example: []
  syntax:
    content: public static void Apply(this IRdfHandler handler, IGraph g)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Apply(handler As IRdfHandler, g As IGraph)
  overload: VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.IRdfHandler,System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.IRdfHandler,System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  id: Apply(VDS.RDF.IRdfHandler,System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  isExtensionMethod: true
  parent: VDS.RDF.Parsing.Handlers.HandlerExtensions
  langs:
  - csharp
  - vb
  name: Apply(IRdfHandler, IEnumerable<Triple>)
  nameWithType: HandlerExtensions.Apply(IRdfHandler, IEnumerable<Triple>)
  fullName: VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.IRdfHandler, System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Handlers/HandlerExtensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: Libraries/dotNetRDF/Parsing/Handlers/HandlerExtensions.cs
    startLine: 114
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Handlers
  summary: "\nApplies the triples to an RDF Handler.\n"
  example: []
  syntax:
    content: public static void Apply(this IRdfHandler handler, IEnumerable<Triple> ts)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: ts
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Triples.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Apply(handler As IRdfHandler, ts As IEnumerable(Of Triple))
  overload: VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply*
  nameWithType.vb: HandlerExtensions.Apply(IRdfHandler, IEnumerable(Of Triple))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.IRdfHandler, System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Apply(IRdfHandler, IEnumerable(Of Triple))
- uid: VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlResultSet)
  commentId: M:VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlResultSet)
  id: Apply(VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlResultSet)
  isExtensionMethod: true
  parent: VDS.RDF.Parsing.Handlers.HandlerExtensions
  langs:
  - csharp
  - vb
  name: Apply(ISparqlResultsHandler, SparqlResultSet)
  nameWithType: HandlerExtensions.Apply(ISparqlResultsHandler, SparqlResultSet)
  fullName: VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply(VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlResultSet)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Handlers/HandlerExtensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: Libraries/dotNetRDF/Parsing/Handlers/HandlerExtensions.cs
    startLine: 141
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Handlers
  summary: "\nApplies the result set to a Results Handler.\n"
  example: []
  syntax:
    content: public static void Apply(this ISparqlResultsHandler handler, SparqlResultSet results)
    parameters:
    - id: handler
      type: VDS.RDF.ISparqlResultsHandler
      description: Results Handler.
    - id: results
      type: VDS.RDF.Query.SparqlResultSet
      description: Result Set.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub Apply(handler As ISparqlResultsHandler, results As SparqlResultSet)
  overload: VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.Parsing.Handlers
  commentId: N:VDS.RDF.Parsing.Handlers
  name: VDS.RDF.Parsing.Handlers
  nameWithType: VDS.RDF.Parsing.Handlers
  fullName: VDS.RDF.Parsing.Handlers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply*
  commentId: Overload:VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply
  name: Apply
  nameWithType: HandlerExtensions.Apply
  fullName: VDS.RDF.Parsing.Handlers.HandlerExtensions.Apply
- uid: VDS.RDF.IRdfHandler
  commentId: T:VDS.RDF.IRdfHandler
  parent: VDS.RDF
  name: IRdfHandler
  nameWithType: IRdfHandler
  fullName: VDS.RDF.IRdfHandler
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Triple>
  nameWithType: IEnumerable<Triple>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Triple>
  nameWithType.vb: IEnumerable(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple)
  name.vb: IEnumerable(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.ISparqlResultsHandler
  commentId: T:VDS.RDF.ISparqlResultsHandler
  parent: VDS.RDF
  name: ISparqlResultsHandler
  nameWithType: ISparqlResultsHandler
  fullName: VDS.RDF.ISparqlResultsHandler
- uid: VDS.RDF.Query.SparqlResultSet
  commentId: T:VDS.RDF.Query.SparqlResultSet
  parent: VDS.RDF.Query
  name: SparqlResultSet
  nameWithType: SparqlResultSet
  fullName: VDS.RDF.Query.SparqlResultSet
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
shouldSkipMarkup: true
