### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Inference.RdfsReasoner
  commentId: T:VDS.RDF.Query.Inference.RdfsReasoner
  id: RdfsReasoner
  parent: VDS.RDF.Query.Inference
  children:
  - VDS.RDF.Query.Inference.RdfsReasoner.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  langs:
  - csharp
  - vb
  name: RdfsReasoner
  nameWithType: RdfsReasoner
  fullName: VDS.RDF.Query.Inference.RdfsReasoner
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/RDFSReasoner.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RdfsReasoner
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/RDFSReasoner.cs
    startLine: 292
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nAn Inference Engine which uses RDFS reasoning.\n"
  remarks: "\nDoes basic RDFS inferencing as detailed in the remarks for the <xref href=\"VDS.RDF.Query.Inference.StaticRdfsReasoner\" data-throw-if-not-resolved=\"false\"></xref> except every Graph that inference is applied to has the potential to alter the schema which is in use.\n"
  example: []
  syntax:
    content: 'public class RdfsReasoner : StaticRdfsReasoner, IInferenceEngine'
    content.vb: >-
      Public Class RdfsReasoner
          Inherits StaticRdfsReasoner
          Implements IInferenceEngine
  inheritance:
  - System.Object
  - VDS.RDF.Query.Inference.StaticRdfsReasoner
  implements:
  - VDS.RDF.Query.Inference.IInferenceEngine
  inheritedMembers:
  - VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply(VDS.RDF.IGraph)
  - VDS.RDF.Query.Inference.StaticRdfsReasoner.Initialise(VDS.RDF.IGraph)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Inference.RdfsReasoner.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Inference.RdfsReasoner.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Inference.RdfsReasoner.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  id: Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Inference.RdfsReasoner
  langs:
  - csharp
  - vb
  name: Apply(IGraph, IGraph)
  nameWithType: RdfsReasoner.Apply(IGraph, IGraph)
  fullName: VDS.RDF.Query.Inference.RdfsReasoner.Apply(VDS.RDF.IGraph, VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/RDFSReasoner.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/RDFSReasoner.cs
    startLine: 300
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nApplies inference to the Input Graph and outputs the inferred information to the Output Graph.\n"
  example: []
  syntax:
    content: public override void Apply(IGraph input, IGraph output)
    parameters:
    - id: input
      type: VDS.RDF.IGraph
      description: Graph to apply inference to.
    - id: output
      type: VDS.RDF.IGraph
      description: Graph inferred information is output to.
    content.vb: Public Overrides Sub Apply(input As IGraph, output As IGraph)
  overridden: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  overload: VDS.RDF.Query.Inference.RdfsReasoner.Apply*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query.Inference.StaticRdfsReasoner
  commentId: T:VDS.RDF.Query.Inference.StaticRdfsReasoner
  parent: VDS.RDF.Query.Inference
  name: StaticRdfsReasoner
  nameWithType: StaticRdfsReasoner
  fullName: VDS.RDF.Query.Inference.StaticRdfsReasoner
- uid: VDS.RDF.Query.Inference
  commentId: N:VDS.RDF.Query.Inference
  name: VDS.RDF.Query.Inference
  nameWithType: VDS.RDF.Query.Inference
  fullName: VDS.RDF.Query.Inference
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Inference.IInferenceEngine
  commentId: T:VDS.RDF.Query.Inference.IInferenceEngine
  parent: VDS.RDF.Query.Inference
  name: IInferenceEngine
  nameWithType: IInferenceEngine
  fullName: VDS.RDF.Query.Inference.IInferenceEngine
- uid: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Inference.StaticRdfsReasoner
  name: Apply(IGraph)
  nameWithType: StaticRdfsReasoner.Apply(IGraph)
  fullName: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply(VDS.RDF.IGraph)
    name: Apply
    nameWithType: StaticRdfsReasoner.Apply
    fullName: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply(VDS.RDF.IGraph)
    name: Apply
    nameWithType: StaticRdfsReasoner.Apply
    fullName: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.StaticRdfsReasoner.Initialise(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Inference.StaticRdfsReasoner.Initialise(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Inference.StaticRdfsReasoner
  name: Initialise(IGraph)
  nameWithType: StaticRdfsReasoner.Initialise(IGraph)
  fullName: VDS.RDF.Query.Inference.StaticRdfsReasoner.Initialise(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.StaticRdfsReasoner.Initialise(VDS.RDF.IGraph)
    name: Initialise
    nameWithType: StaticRdfsReasoner.Initialise
    fullName: VDS.RDF.Query.Inference.StaticRdfsReasoner.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.StaticRdfsReasoner.Initialise(VDS.RDF.IGraph)
    name: Initialise
    nameWithType: StaticRdfsReasoner.Initialise
    fullName: VDS.RDF.Query.Inference.StaticRdfsReasoner.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.RdfsReasoner.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<RdfsReasoner>()
  nameWithType: Extensions.AsEnumerable<RdfsReasoner>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.RdfsReasoner>()
  nameWithType.vb: Extensions.AsEnumerable(Of RdfsReasoner)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.RdfsReasoner)()
  name.vb: AsEnumerable(Of RdfsReasoner)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<RdfsReasoner>
    nameWithType: Extensions.AsEnumerable<RdfsReasoner>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.RdfsReasoner>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of RdfsReasoner)
    nameWithType: Extensions.AsEnumerable(Of RdfsReasoner)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.RdfsReasoner)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Inference.StaticRdfsReasoner
  name: Apply(IGraph, IGraph)
  nameWithType: StaticRdfsReasoner.Apply(IGraph, IGraph)
  fullName: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply(VDS.RDF.IGraph, VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
    name: Apply
    nameWithType: StaticRdfsReasoner.Apply
    fullName: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
    name: Apply
    nameWithType: StaticRdfsReasoner.Apply
    fullName: VDS.RDF.Query.Inference.StaticRdfsReasoner.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.RdfsReasoner.Apply*
  commentId: Overload:VDS.RDF.Query.Inference.RdfsReasoner.Apply
  name: Apply
  nameWithType: RdfsReasoner.Apply
  fullName: VDS.RDF.Query.Inference.RdfsReasoner.Apply
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
