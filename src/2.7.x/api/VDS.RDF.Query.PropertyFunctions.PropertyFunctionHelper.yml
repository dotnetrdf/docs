### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper
  commentId: T:VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper
  id: PropertyFunctionHelper
  parent: VDS.RDF.Query.PropertyFunctions
  children:
  - VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns(System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern})
  - VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns(System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern},System.Collections.Generic.IEnumerable{VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory})
  langs:
  - csharp
  - vb
  name: PropertyFunctionHelper
  nameWithType: PropertyFunctionHelper
  fullName: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/PropertyFunctions/PropertyFunctionHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PropertyFunctionHelper
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/PropertyFunctions/PropertyFunctionHelper.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.PropertyFunctions
  summary: "\nHelper Class containing functions useful in working with property functions.\n"
  example: []
  syntax:
    content: public static class PropertyFunctionHelper
    content.vb: Public Module PropertyFunctionHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns(System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern})
  commentId: M:VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns(System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern})
  id: ExtractPatterns(System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern})
  parent: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper
  langs:
  - csharp
  - vb
  name: ExtractPatterns(IEnumerable<ITriplePattern>)
  nameWithType: PropertyFunctionHelper.ExtractPatterns(IEnumerable<ITriplePattern>)
  fullName: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns(System.Collections.Generic.IEnumerable<VDS.RDF.Query.Patterns.ITriplePattern>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/PropertyFunctions/PropertyFunctionHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExtractPatterns
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/PropertyFunctions/PropertyFunctionHelper.cs
    startLine: 43
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.PropertyFunctions
  summary: "\nUsed to extract the patterns that make up property functions.\n"
  example: []
  syntax:
    content: public static List<IPropertyFunctionPattern> ExtractPatterns(IEnumerable<ITriplePattern> patterns)
    parameters:
    - id: patterns
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern}
      description: Triple Patterns.
    return:
      type: System.Collections.Generic.List{VDS.RDF.Query.Patterns.IPropertyFunctionPattern}
      description: ''
    content.vb: Public Shared Function ExtractPatterns(patterns As IEnumerable(Of ITriplePattern)) As List(Of IPropertyFunctionPattern)
  overload: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns*
  nameWithType.vb: PropertyFunctionHelper.ExtractPatterns(IEnumerable(Of ITriplePattern))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns(System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Patterns.ITriplePattern))
  name.vb: ExtractPatterns(IEnumerable(Of ITriplePattern))
- uid: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns(System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern},System.Collections.Generic.IEnumerable{VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory})
  commentId: M:VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns(System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern},System.Collections.Generic.IEnumerable{VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory})
  id: ExtractPatterns(System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern},System.Collections.Generic.IEnumerable{VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory})
  parent: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper
  langs:
  - csharp
  - vb
  name: ExtractPatterns(IEnumerable<ITriplePattern>, IEnumerable<IPropertyFunctionFactory>)
  nameWithType: PropertyFunctionHelper.ExtractPatterns(IEnumerable<ITriplePattern>, IEnumerable<IPropertyFunctionFactory>)
  fullName: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns(System.Collections.Generic.IEnumerable<VDS.RDF.Query.Patterns.ITriplePattern>, System.Collections.Generic.IEnumerable<VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/PropertyFunctions/PropertyFunctionHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExtractPatterns
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/PropertyFunctions/PropertyFunctionHelper.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.PropertyFunctions
  summary: "\nUsed to extract the patterns that make up property functions.\n"
  example: []
  syntax:
    content: public static List<IPropertyFunctionPattern> ExtractPatterns(IEnumerable<ITriplePattern> patterns, IEnumerable<IPropertyFunctionFactory> localFactories)
    parameters:
    - id: patterns
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern}
      description: Triple Patterns.
    - id: localFactories
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory}
      description: Locally scoped factories.
    return:
      type: System.Collections.Generic.List{VDS.RDF.Query.Patterns.IPropertyFunctionPattern}
      description: ''
    content.vb: Public Shared Function ExtractPatterns(patterns As IEnumerable(Of ITriplePattern), localFactories As IEnumerable(Of IPropertyFunctionFactory)) As List(Of IPropertyFunctionPattern)
  overload: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns*
  nameWithType.vb: PropertyFunctionHelper.ExtractPatterns(IEnumerable(Of ITriplePattern), IEnumerable(Of IPropertyFunctionFactory))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns(System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Patterns.ITriplePattern), System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory))
  name.vb: ExtractPatterns(IEnumerable(Of ITriplePattern), IEnumerable(Of IPropertyFunctionFactory))
references:
- uid: VDS.RDF.Query.PropertyFunctions
  commentId: N:VDS.RDF.Query.PropertyFunctions
  name: VDS.RDF.Query.PropertyFunctions
  nameWithType: VDS.RDF.Query.PropertyFunctions
  fullName: VDS.RDF.Query.PropertyFunctions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns*
  commentId: Overload:VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns
  name: ExtractPatterns
  nameWithType: PropertyFunctionHelper.ExtractPatterns
  fullName: VDS.RDF.Query.PropertyFunctions.PropertyFunctionHelper.ExtractPatterns
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ITriplePattern>
  nameWithType: IEnumerable<ITriplePattern>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.Patterns.ITriplePattern>
  nameWithType.vb: IEnumerable(Of ITriplePattern)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Patterns.ITriplePattern)
  name.vb: IEnumerable(Of ITriplePattern)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{VDS.RDF.Query.Patterns.IPropertyFunctionPattern}
  commentId: T:System.Collections.Generic.List{VDS.RDF.Query.Patterns.IPropertyFunctionPattern}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IPropertyFunctionPattern>
  nameWithType: List<IPropertyFunctionPattern>
  fullName: System.Collections.Generic.List<VDS.RDF.Query.Patterns.IPropertyFunctionPattern>
  nameWithType.vb: List(Of IPropertyFunctionPattern)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.Query.Patterns.IPropertyFunctionPattern)
  name.vb: List(Of IPropertyFunctionPattern)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.IPropertyFunctionPattern
    name: IPropertyFunctionPattern
    nameWithType: IPropertyFunctionPattern
    fullName: VDS.RDF.Query.Patterns.IPropertyFunctionPattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.IPropertyFunctionPattern
    name: IPropertyFunctionPattern
    nameWithType: IPropertyFunctionPattern
    fullName: VDS.RDF.Query.Patterns.IPropertyFunctionPattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IPropertyFunctionFactory>
  nameWithType: IEnumerable<IPropertyFunctionFactory>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory>
  nameWithType.vb: IEnumerable(Of IPropertyFunctionFactory)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory)
  name.vb: IEnumerable(Of IPropertyFunctionFactory)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory
    name: IPropertyFunctionFactory
    nameWithType: IPropertyFunctionFactory
    fullName: VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory
    name: IPropertyFunctionFactory
    nameWithType: IPropertyFunctionFactory
    fullName: VDS.RDF.Query.PropertyFunctions.IPropertyFunctionFactory
  - name: )
    nameWithType: )
    fullName: )
