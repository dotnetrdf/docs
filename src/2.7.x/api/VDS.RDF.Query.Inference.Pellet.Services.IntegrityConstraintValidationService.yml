### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService
  commentId: T:VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService
  id: IntegrityConstraintValidationService
  parent: VDS.RDF.Query.Inference.Pellet.Services
  children:
  - VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate
  - VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate(VDS.RDF.TripleStoreCallback,System.Object)
  langs:
  - csharp
  - vb
  name: IntegrityConstraintValidationService
  nameWithType: IntegrityConstraintValidationService
  fullName: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/IntegrityConstraintValidationService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IntegrityConstraintValidationService
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/IntegrityConstraintValidationService.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nRepresents the Integrity Constraint Validation Service provided by a Pellet Knowledge Base.\n"
  example: []
  syntax:
    content: 'public class IntegrityConstraintValidationService : PelletService'
    content.vb: >-
      Public Class IntegrityConstraintValidationService
          Inherits PelletService
  inheritance:
  - System.Object
  - VDS.RDF.Query.Inference.Pellet.PelletService
  inheritedMembers:
  - VDS.RDF.Query.Inference.Pellet.PelletService.Name
  - VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
  - VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate
  id: Validate
  parent: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: IntegrityConstraintValidationService.Validate()
  fullName: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/IntegrityConstraintValidationService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Validate
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/IntegrityConstraintValidationService.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nExtracts an RDF Dataset which details the Constraints violated (if any) and whether Constraints are satisified.\n"
  example: []
  syntax:
    content: public ITripleStore Validate()
    return:
      type: VDS.RDF.ITripleStore
      description: ''
    content.vb: Public Function Validate As ITripleStore
  overload: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate(VDS.RDF.TripleStoreCallback,System.Object)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate(VDS.RDF.TripleStoreCallback,System.Object)
  id: Validate(VDS.RDF.TripleStoreCallback,System.Object)
  parent: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService
  langs:
  - csharp
  - vb
  name: Validate(TripleStoreCallback, Object)
  nameWithType: IntegrityConstraintValidationService.Validate(TripleStoreCallback, Object)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate(VDS.RDF.TripleStoreCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/IntegrityConstraintValidationService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Validate
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/IntegrityConstraintValidationService.cs
    startLine: 87
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nExtracts an RDF Dataset which details the Constraints violated (if any) and whether Constraints are satisified.\n"
  remarks: "\nIf the operation succeeds the callback will be invoked normally, if there is an error the callback will be invoked with a instance of <xref href=\"VDS.RDF.AsyncError\" data-throw-if-not-resolved=\"false\"></xref> passed as the state which provides access to the error message and the original state passed in.\n"
  example: []
  syntax:
    content: public void Validate(TripleStoreCallback callback, object state)
    parameters:
    - id: callback
      type: VDS.RDF.TripleStoreCallback
      description: Callback to invoke when the operation completes.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Public Sub Validate(callback As TripleStoreCallback, state As Object)
  overload: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Inference.Pellet.Services
  commentId: N:VDS.RDF.Query.Inference.Pellet.Services
  name: VDS.RDF.Query.Inference.Pellet.Services
  nameWithType: VDS.RDF.Query.Inference.Pellet.Services
  fullName: VDS.RDF.Query.Inference.Pellet.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Inference.Pellet.PelletService
  commentId: T:VDS.RDF.Query.Inference.Pellet.PelletService
  parent: VDS.RDF.Query.Inference.Pellet
  name: PelletService
  nameWithType: PelletService
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService
- uid: VDS.RDF.Query.Inference.Pellet.PelletService.Name
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletService.Name
  parent: VDS.RDF.Query.Inference.Pellet.PelletService
  name: Name
  nameWithType: PelletService.Name
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService.Name
- uid: VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
  parent: VDS.RDF.Query.Inference.Pellet.PelletService
  name: Endpoint
  nameWithType: PelletService.Endpoint
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
- uid: VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
  parent: VDS.RDF.Query.Inference.Pellet.PelletService
  name: MimeTypes
  nameWithType: PelletService.MimeTypes
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IntegrityConstraintValidationService>()
  nameWithType: Extensions.AsEnumerable<IntegrityConstraintValidationService>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService>()
  nameWithType.vb: Extensions.AsEnumerable(Of IntegrityConstraintValidationService)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService)()
  name.vb: AsEnumerable(Of IntegrityConstraintValidationService)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IntegrityConstraintValidationService>
    nameWithType: Extensions.AsEnumerable<IntegrityConstraintValidationService>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IntegrityConstraintValidationService)
    nameWithType: Extensions.AsEnumerable(Of IntegrityConstraintValidationService)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Inference.Pellet
  commentId: N:VDS.RDF.Query.Inference.Pellet
  name: VDS.RDF.Query.Inference.Pellet
  nameWithType: VDS.RDF.Query.Inference.Pellet
  fullName: VDS.RDF.Query.Inference.Pellet
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate*
  commentId: Overload:VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate
  name: Validate
  nameWithType: IntegrityConstraintValidationService.Validate
  fullName: VDS.RDF.Query.Inference.Pellet.Services.IntegrityConstraintValidationService.Validate
- uid: VDS.RDF.ITripleStore
  commentId: T:VDS.RDF.ITripleStore
  parent: VDS.RDF
  name: ITripleStore
  nameWithType: ITripleStore
  fullName: VDS.RDF.ITripleStore
- uid: VDS.RDF.AsyncError
  commentId: T:VDS.RDF.AsyncError
  name: AsyncError
  nameWithType: AsyncError
  fullName: VDS.RDF.AsyncError
- uid: VDS.RDF.TripleStoreCallback
  commentId: T:VDS.RDF.TripleStoreCallback
  parent: VDS.RDF
  name: TripleStoreCallback
  nameWithType: TripleStoreCallback
  fullName: VDS.RDF.TripleStoreCallback
shouldSkipMarkup: true
