### YamlMime:ManagedReference
items:
- uid: VDS.RDF.GraphPersistenceWrapper
  commentId: T:VDS.RDF.GraphPersistenceWrapper
  id: GraphPersistenceWrapper
  parent: VDS.RDF
  children:
  - VDS.RDF.GraphPersistenceWrapper.#ctor
  - VDS.RDF.GraphPersistenceWrapper.#ctor(System.Boolean)
  - VDS.RDF.GraphPersistenceWrapper.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.GraphPersistenceWrapper.#ctor(VDS.RDF.IGraph)
  - VDS.RDF.GraphPersistenceWrapper.#ctor(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.GraphPersistenceWrapper._g
  - VDS.RDF.GraphPersistenceWrapper.AllNodes
  - VDS.RDF.GraphPersistenceWrapper.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.GraphPersistenceWrapper.Assert(VDS.RDF.Triple)
  - VDS.RDF.GraphPersistenceWrapper.AttachEventHandlers(VDS.RDF.BaseTripleCollection)
  - VDS.RDF.GraphPersistenceWrapper.BaseUri
  - VDS.RDF.GraphPersistenceWrapper.Changed
  - VDS.RDF.GraphPersistenceWrapper.Clear
  - VDS.RDF.GraphPersistenceWrapper.Cleared
  - VDS.RDF.GraphPersistenceWrapper.ClearRequested
  - VDS.RDF.GraphPersistenceWrapper.ContainsTriple(VDS.RDF.Triple)
  - VDS.RDF.GraphPersistenceWrapper.CreateBlankNode
  - VDS.RDF.GraphPersistenceWrapper.CreateBlankNode(System.String)
  - VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode
  - VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode(VDS.RDF.IGraph)
  - VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode(System.String)
  - VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode(System.String,System.String)
  - VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode(System.String,System.Uri)
  - VDS.RDF.GraphPersistenceWrapper.CreateUriNode
  - VDS.RDF.GraphPersistenceWrapper.CreateUriNode(System.String)
  - VDS.RDF.GraphPersistenceWrapper.CreateUriNode(System.Uri)
  - VDS.RDF.GraphPersistenceWrapper.CreateVariableNode(System.String)
  - VDS.RDF.GraphPersistenceWrapper.DetachEventHandlers(VDS.RDF.BaseTripleCollection)
  - VDS.RDF.GraphPersistenceWrapper.Difference(VDS.RDF.IGraph)
  - VDS.RDF.GraphPersistenceWrapper.Discard
  - VDS.RDF.GraphPersistenceWrapper.Dispose
  - VDS.RDF.GraphPersistenceWrapper.Dispose(System.Boolean)
  - VDS.RDF.GraphPersistenceWrapper.Equals(System.Object)
  - VDS.RDF.GraphPersistenceWrapper.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.GraphPersistenceWrapper.Finalize
  - VDS.RDF.GraphPersistenceWrapper.Flush
  - VDS.RDF.GraphPersistenceWrapper.GetBlankNode(System.String)
  - VDS.RDF.GraphPersistenceWrapper.GetLiteralNode(System.String)
  - VDS.RDF.GraphPersistenceWrapper.GetLiteralNode(System.String,System.String)
  - VDS.RDF.GraphPersistenceWrapper.GetLiteralNode(System.String,System.Uri)
  - VDS.RDF.GraphPersistenceWrapper.GetNextBlankNodeID
  - VDS.RDF.GraphPersistenceWrapper.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.GraphPersistenceWrapper.GetSchema
  - VDS.RDF.GraphPersistenceWrapper.GetTriples(System.Uri)
  - VDS.RDF.GraphPersistenceWrapper.GetTriples(VDS.RDF.INode)
  - VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject(System.Uri)
  - VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject(VDS.RDF.INode)
  - VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate(System.Uri)
  - VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate(VDS.RDF.INode)
  - VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject(System.Uri)
  - VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject(VDS.RDF.INode)
  - VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.GraphPersistenceWrapper.GetUriNode(System.String)
  - VDS.RDF.GraphPersistenceWrapper.GetUriNode(System.Uri)
  - VDS.RDF.GraphPersistenceWrapper.HasSubGraph(VDS.RDF.IGraph)
  - VDS.RDF.GraphPersistenceWrapper.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.GraphPersistenceWrapper.IsEmpty
  - VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf(VDS.RDF.IGraph)
  - VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.GraphPersistenceWrapper.Merge(VDS.RDF.IGraph)
  - VDS.RDF.GraphPersistenceWrapper.Merge(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.GraphPersistenceWrapper.Merged
  - VDS.RDF.GraphPersistenceWrapper.MergeRequested
  - VDS.RDF.GraphPersistenceWrapper.NamespaceMap
  - VDS.RDF.GraphPersistenceWrapper.Nodes
  - VDS.RDF.GraphPersistenceWrapper.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  - VDS.RDF.GraphPersistenceWrapper.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  - VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.GraphPersistenceWrapper.PersistGraph
  - VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.GraphPersistenceWrapper.RaiseCleared
  - VDS.RDF.GraphPersistenceWrapper.RaiseClearRequested
  - VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged
  - VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  - VDS.RDF.GraphPersistenceWrapper.RaiseMerged
  - VDS.RDF.GraphPersistenceWrapper.RaiseMergeRequested
  - VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted(VDS.RDF.Triple)
  - VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  - VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted(VDS.RDF.Triple)
  - VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  - VDS.RDF.GraphPersistenceWrapper.ReadXml(System.Xml.XmlReader)
  - VDS.RDF.GraphPersistenceWrapper.ResolveQName(System.String)
  - VDS.RDF.GraphPersistenceWrapper.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.GraphPersistenceWrapper.Retract(VDS.RDF.Triple)
  - VDS.RDF.GraphPersistenceWrapper.SupportsTriplePersistence
  - VDS.RDF.GraphPersistenceWrapper.TripleAsserted
  - VDS.RDF.GraphPersistenceWrapper.TripleRetracted
  - VDS.RDF.GraphPersistenceWrapper.Triples
  - VDS.RDF.GraphPersistenceWrapper.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: GraphPersistenceWrapper
  nameWithType: GraphPersistenceWrapper
  fullName: VDS.RDF.GraphPersistenceWrapper
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GraphPersistenceWrapper
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nThe Graph Persistence Wrapper is a wrapper around another Graph that can be used to batch persistence actions with the ability to Flush/Discard changes as desired.\n"
  remarks: "\n<p>\nWhen disposed any outstanding changes are always flushed so if you make changes which you don&apos;t want to persist be sure to call the <xref href=\"VDS.RDF.GraphPersistenceWrapper.Discard\" data-throw-if-not-resolved=\"false\"></xref> method before disposing of the Graph.\n</p>\n<p>\nImplementors who wish to make persistent graphs should extend this class and override the <xref href=\"VDS.RDF.GraphPersistenceWrapper.SupportsTriplePersistence\" data-throw-if-not-resolved=\"false\"></xref> property and the <xref href=\"VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable%7bVDS.RDF.Triple%7d)\" data-throw-if-not-resolved=\"false\"></xref>, <xref href=\"VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable%7bVDS.RDF.Triple%7d)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"VDS.RDF.GraphPersistenceWrapper.PersistGraph\" data-throw-if-not-resolved=\"false\"></xref> methods.  If you return true for the property then the <xref href=\"VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable%7bVDS.RDF.Triple%7d)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable%7bVDS.RDF.Triple%7d)\" data-throw-if-not-resolved=\"false\"></xref> methods will be invoked to do persistence on batches of Triples.  If your persistence mechanism requires persisting the entire graph at once return false for the property and override the <xref href=\"VDS.RDF.GraphPersistenceWrapper.PersistGraph\" data-throw-if-not-resolved=\"false\"></xref> method appropriately.\n</p>\n<h3>Warning</h3>\n<p>\nNote that the wrapper does not automatically dispose of the wrapped graph when the wrapper is Dispose, this is by design since disposing of the wrapped Graph can have unintended consequences.\n</p>\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class GraphPersistenceWrapper : ITransactionalGraph, IGraph, INodeFactory, IDisposable, IXmlSerializable
    content.vb: >-
      <Serializable>

      Public Class GraphPersistenceWrapper
          Implements ITransactionalGraph, IGraph, INodeFactory, IDisposable, IXmlSerializable
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.FileGraphPersistenceWrapper
  - VDS.RDF.StoreGraphPersistenceWrapper
  implements:
  - VDS.RDF.ITransactionalGraph
  - VDS.RDF.IGraph
  - VDS.RDF.INodeFactory
  - System.IDisposable
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.GraphPersistenceWrapper.VDS.RDF.Extensions.AsEnumerable``1
  - VDS.RDF.IGraph.VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
  - VDS.RDF.IGraph.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
  - VDS.RDF.IGraph.VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.GraphPersistenceWrapper._g
  commentId: F:VDS.RDF.GraphPersistenceWrapper._g
  id: _g
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: _g
  nameWithType: GraphPersistenceWrapper._g
  fullName: VDS.RDF.GraphPersistenceWrapper._g
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _g
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nUnderlying Graph this is a wrapper around.\n"
  example: []
  syntax:
    content: protected readonly IGraph _g
    return:
      type: VDS.RDF.IGraph
    content.vb: Protected ReadOnly _g As IGraph
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: VDS.RDF.GraphPersistenceWrapper.#ctor
  commentId: M:VDS.RDF.GraphPersistenceWrapper.#ctor
  id: '#ctor'
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GraphPersistenceWrapper()
  nameWithType: GraphPersistenceWrapper.GraphPersistenceWrapper()
  fullName: VDS.RDF.GraphPersistenceWrapper.GraphPersistenceWrapper()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Graph Persistence Wrapper around a new Graph.\n"
  example: []
  syntax:
    content: public GraphPersistenceWrapper()
    content.vb: Public Sub New
  overload: VDS.RDF.GraphPersistenceWrapper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.#ctor(System.Boolean)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GraphPersistenceWrapper(Boolean)
  nameWithType: GraphPersistenceWrapper.GraphPersistenceWrapper(Boolean)
  fullName: VDS.RDF.GraphPersistenceWrapper.GraphPersistenceWrapper(System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 80
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Graph Persistence Wrapper around a new Graph with the given always queue setting.\n"
  remarks: "\nThe <code data-dev-comment-type=\"paramref\" class=\"paramref\">alwaysQueueActions</code> setting when enabled will cause the wrapper to queue Asserts and Retracts for persistence regardless of whether the relevant Triples already exist (i.e. normally if a Triple exists is cannot be asserted again and if it doesn&apos;t exist it cannot be retracted).  This is useful for creating derived wrappers which operate in write-only mode i.e. append mode for an existing graph that may be too large to reasonably load into memory.\n"
  example: []
  syntax:
    content: public GraphPersistenceWrapper(bool alwaysQueueActions)
    parameters:
    - id: alwaysQueueActions
      type: System.Boolean
      description: Whether to always queue actions.
    content.vb: Public Sub New(alwaysQueueActions As Boolean)
  overload: VDS.RDF.GraphPersistenceWrapper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.#ctor(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.#ctor(VDS.RDF.IGraph)
  id: '#ctor(VDS.RDF.IGraph)'
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GraphPersistenceWrapper(IGraph)
  nameWithType: GraphPersistenceWrapper.GraphPersistenceWrapper(IGraph)
  fullName: VDS.RDF.GraphPersistenceWrapper.GraphPersistenceWrapper(VDS.RDF.IGraph)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 87
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Graph Persistence Wrapper around the given Graph.\n"
  example: []
  syntax:
    content: public GraphPersistenceWrapper(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    content.vb: Public Sub New(g As IGraph)
  overload: VDS.RDF.GraphPersistenceWrapper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.#ctor(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.#ctor(VDS.RDF.IGraph,System.Boolean)
  id: '#ctor(VDS.RDF.IGraph,System.Boolean)'
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GraphPersistenceWrapper(IGraph, Boolean)
  nameWithType: GraphPersistenceWrapper.GraphPersistenceWrapper(IGraph, Boolean)
  fullName: VDS.RDF.GraphPersistenceWrapper.GraphPersistenceWrapper(VDS.RDF.IGraph, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 105
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Graph Persistence Wrapper around the given Graph with the given always queue setting.\n"
  remarks: "\nThe <code data-dev-comment-type=\"paramref\" class=\"paramref\">alwaysQueueActions</code> setting when enabled will cause the wrapper to queue Asserts and Retracts for persistence regardless of whether the relevant Triples already exist (i.e. normally if a Triple exists is cannot be asserted again and if it doesn&apos;t exist it cannot be retracted).  This is useful for creating derived wrappers which operate in write-only mode i.e. append mode for an existing graph that may be too large to reasonably load into memory.\n"
  example: []
  syntax:
    content: public GraphPersistenceWrapper(IGraph g, bool alwaysQueueActions)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: alwaysQueueActions
      type: System.Boolean
      description: Whether to always queue actions.
    content.vb: Public Sub New(g As IGraph, alwaysQueueActions As Boolean)
  overload: VDS.RDF.GraphPersistenceWrapper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GraphPersistenceWrapper(SerializationInfo, StreamingContext)
  nameWithType: GraphPersistenceWrapper.GraphPersistenceWrapper(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.GraphPersistenceWrapper.GraphPersistenceWrapper(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 118
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDeserialization Constructor.\n"
  example: []
  syntax:
    content: protected GraphPersistenceWrapper(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: VDS.RDF.GraphPersistenceWrapper.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.Finalize
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Finalize
  id: Finalize
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: GraphPersistenceWrapper.Finalize()
  fullName: VDS.RDF.GraphPersistenceWrapper.Finalize()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Finalize
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 137
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDestructor for the wrapper to ensure that <xref href=\"VDS.RDF.GraphPersistenceWrapper.Dispose\" data-throw-if-not-resolved=\"false\"></xref> is called and thus that persistence happens\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: VDS.RDF.GraphPersistenceWrapper.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.BaseUri
  commentId: P:VDS.RDF.GraphPersistenceWrapper.BaseUri
  id: BaseUri
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: GraphPersistenceWrapper.BaseUri
  fullName: VDS.RDF.GraphPersistenceWrapper.BaseUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 147
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets/Sets the Base URI of the Graph.\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property BaseUri As Uri
  overload: VDS.RDF.GraphPersistenceWrapper.BaseUri*
  implements:
  - VDS.RDF.IGraph.BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.IsEmpty
  commentId: P:VDS.RDF.GraphPersistenceWrapper.IsEmpty
  id: IsEmpty
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: GraphPersistenceWrapper.IsEmpty
  fullName: VDS.RDF.GraphPersistenceWrapper.IsEmpty
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsEmpty
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 156
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether the Graph is empty.\n"
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.IsEmpty*
  implements:
  - VDS.RDF.IGraph.IsEmpty
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.GraphPersistenceWrapper.NamespaceMap
  commentId: P:VDS.RDF.GraphPersistenceWrapper.NamespaceMap
  id: NamespaceMap
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: NamespaceMap
  nameWithType: GraphPersistenceWrapper.NamespaceMap
  fullName: VDS.RDF.GraphPersistenceWrapper.NamespaceMap
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NamespaceMap
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 161
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Namespace Map for the Graph.\n"
  example: []
  syntax:
    content: public INamespaceMapper NamespaceMap { get; }
    parameters: []
    return:
      type: VDS.RDF.INamespaceMapper
    content.vb: Public ReadOnly Property NamespaceMap As INamespaceMapper
  overload: VDS.RDF.GraphPersistenceWrapper.NamespaceMap*
  implements:
  - VDS.RDF.IGraph.NamespaceMap
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.GraphPersistenceWrapper.Nodes
  commentId: P:VDS.RDF.GraphPersistenceWrapper.Nodes
  id: Nodes
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Nodes
  nameWithType: GraphPersistenceWrapper.Nodes
  fullName: VDS.RDF.GraphPersistenceWrapper.Nodes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Nodes
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 164
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the unique Subject and Object nodes of the Graph.\n"
  remarks: This property returns only nodes that appear in the Subject or Object position in triples. To retrieve a list of all INode instances in a graph including those in Predicate position in a triple, use the <xref href="VDS.RDF.IGraph.AllNodes" data-throw-if-not-resolved="false"></xref> property.
  example: []
  syntax:
    content: public IEnumerable<INode> Nodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public ReadOnly Property Nodes As IEnumerable(Of INode)
  overload: VDS.RDF.GraphPersistenceWrapper.Nodes*
  implements:
  - VDS.RDF.IGraph.Nodes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.GraphPersistenceWrapper.AllNodes
  commentId: P:VDS.RDF.GraphPersistenceWrapper.AllNodes
  id: AllNodes
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: AllNodes
  nameWithType: GraphPersistenceWrapper.AllNodes
  fullName: VDS.RDF.GraphPersistenceWrapper.AllNodes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AllNodes
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 167
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the unique Subject, Predicate and Object nodes of the Graph.\n"
  example: []
  syntax:
    content: public IEnumerable<INode> AllNodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public ReadOnly Property AllNodes As IEnumerable(Of INode)
  overload: VDS.RDF.GraphPersistenceWrapper.AllNodes*
  implements:
  - VDS.RDF.IGraph.AllNodes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.GraphPersistenceWrapper.Triples
  commentId: P:VDS.RDF.GraphPersistenceWrapper.Triples
  id: Triples
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Triples
  nameWithType: GraphPersistenceWrapper.Triples
  fullName: VDS.RDF.GraphPersistenceWrapper.Triples
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Triples
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 172
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Triple Collection for the Graph.\n"
  example: []
  syntax:
    content: public BaseTripleCollection Triples { get; }
    parameters: []
    return:
      type: VDS.RDF.BaseTripleCollection
    content.vb: Public ReadOnly Property Triples As BaseTripleCollection
  overload: VDS.RDF.GraphPersistenceWrapper.Triples*
  implements:
  - VDS.RDF.IGraph.Triples
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.GraphPersistenceWrapper.Assert(VDS.RDF.Triple)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Assert(VDS.RDF.Triple)
  id: Assert(VDS.RDF.Triple)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Assert(Triple)
  nameWithType: GraphPersistenceWrapper.Assert(Triple)
  fullName: VDS.RDF.GraphPersistenceWrapper.Assert(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Assert
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 178
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAsserts a Triple in the Graph.\n"
  example: []
  syntax:
    content: public virtual bool Assert(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Assert(t As Triple) As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.Assert*
  implements:
  - VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.GraphPersistenceWrapper.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  id: Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Assert(IEnumerable<Triple>)
  nameWithType: GraphPersistenceWrapper.Assert(IEnumerable<Triple>)
  fullName: VDS.RDF.GraphPersistenceWrapper.Assert(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Assert
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 194
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAsserts Triples in the Graph.\n"
  example: []
  syntax:
    content: public bool Assert(IEnumerable<Triple> ts)
    parameters:
    - id: ts
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Triples.
    return:
      type: System.Boolean
    content.vb: Public Function Assert(ts As IEnumerable(Of Triple)) As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.Assert*
  implements:
  - VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  nameWithType.vb: GraphPersistenceWrapper.Assert(IEnumerable(Of Triple))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.GraphPersistenceWrapper.Assert(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Assert(IEnumerable(Of Triple))
- uid: VDS.RDF.GraphPersistenceWrapper.Retract(VDS.RDF.Triple)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Retract(VDS.RDF.Triple)
  id: Retract(VDS.RDF.Triple)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Retract(Triple)
  nameWithType: GraphPersistenceWrapper.Retract(Triple)
  fullName: VDS.RDF.GraphPersistenceWrapper.Retract(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Retract
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 208
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRetracts a Triple from the Graph.\n"
  example: []
  syntax:
    content: public virtual bool Retract(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Retract(t As Triple) As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.Retract*
  implements:
  - VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.GraphPersistenceWrapper.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  id: Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Retract(IEnumerable<Triple>)
  nameWithType: GraphPersistenceWrapper.Retract(IEnumerable<Triple>)
  fullName: VDS.RDF.GraphPersistenceWrapper.Retract(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Retract
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 223
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRetracts Triples from the Graph.\n"
  example: []
  syntax:
    content: public bool Retract(IEnumerable<Triple> ts)
    parameters:
    - id: ts
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Triples.
    return:
      type: System.Boolean
    content.vb: Public Function Retract(ts As IEnumerable(Of Triple)) As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.Retract*
  implements:
  - VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  nameWithType.vb: GraphPersistenceWrapper.Retract(IEnumerable(Of Triple))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.GraphPersistenceWrapper.Retract(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Retract(IEnumerable(Of Triple))
- uid: VDS.RDF.GraphPersistenceWrapper.Clear
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Clear
  id: Clear
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: GraphPersistenceWrapper.Clear()
  fullName: VDS.RDF.GraphPersistenceWrapper.Clear()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Clear
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 236
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nClears the Graph.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: VDS.RDF.GraphPersistenceWrapper.Clear*
  implements:
  - VDS.RDF.IGraph.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.CreateBlankNode(System.String)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.CreateBlankNode(System.String)
  id: CreateBlankNode(System.String)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: CreateBlankNode(String)
  nameWithType: GraphPersistenceWrapper.CreateBlankNode(String)
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateBlankNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlankNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 250
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Blank Node with the given Node ID.\n"
  example: []
  syntax:
    content: public IBlankNode CreateBlankNode(string nodeId)
    parameters:
    - id: nodeId
      type: System.String
      description: Node ID.
    return:
      type: VDS.RDF.IBlankNode
      description: ''
    content.vb: Public Function CreateBlankNode(nodeId As String) As IBlankNode
  overload: VDS.RDF.GraphPersistenceWrapper.CreateBlankNode*
  implements:
  - VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.CreateBlankNode
  commentId: M:VDS.RDF.GraphPersistenceWrapper.CreateBlankNode
  id: CreateBlankNode
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: CreateBlankNode()
  nameWithType: GraphPersistenceWrapper.CreateBlankNode()
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateBlankNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlankNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 259
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Blank Node.\n"
  example: []
  syntax:
    content: public IBlankNode CreateBlankNode()
    return:
      type: VDS.RDF.IBlankNode
      description: ''
    content.vb: Public Function CreateBlankNode As IBlankNode
  overload: VDS.RDF.GraphPersistenceWrapper.CreateBlankNode*
  implements:
  - VDS.RDF.INodeFactory.CreateBlankNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetNextBlankNodeID
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetNextBlankNodeID
  id: GetNextBlankNodeID
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetNextBlankNodeID()
  nameWithType: GraphPersistenceWrapper.GetNextBlankNodeID()
  fullName: VDS.RDF.GraphPersistenceWrapper.GetNextBlankNodeID()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetNextBlankNodeID
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 268
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the next available Blank Node ID.\n"
  example: []
  syntax:
    content: public string GetNextBlankNodeID()
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetNextBlankNodeID As String
  overload: VDS.RDF.GraphPersistenceWrapper.GetNextBlankNodeID*
  implements:
  - VDS.RDF.INodeFactory.GetNextBlankNodeID
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode(VDS.RDF.IGraph)
  id: CreateGraphLiteralNode(VDS.RDF.IGraph)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: CreateGraphLiteralNode(IGraph)
  nameWithType: GraphPersistenceWrapper.CreateGraphLiteralNode(IGraph)
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateGraphLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 278
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Graph Literal Node with the given sub-graph.\n"
  example: []
  syntax:
    content: public IGraphLiteralNode CreateGraphLiteralNode(IGraph subgraph)
    parameters:
    - id: subgraph
      type: VDS.RDF.IGraph
      description: Sub-graph.
    return:
      type: VDS.RDF.IGraphLiteralNode
      description: ''
    content.vb: Public Function CreateGraphLiteralNode(subgraph As IGraph) As IGraphLiteralNode
  overload: VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode
  commentId: M:VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode
  id: CreateGraphLiteralNode
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: CreateGraphLiteralNode()
  nameWithType: GraphPersistenceWrapper.CreateGraphLiteralNode()
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateGraphLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 287
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Graph Literal Node.\n"
  example: []
  syntax:
    content: public IGraphLiteralNode CreateGraphLiteralNode()
    return:
      type: VDS.RDF.IGraphLiteralNode
      description: ''
    content.vb: Public Function CreateGraphLiteralNode As IGraphLiteralNode
  overload: VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateGraphLiteralNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode(System.String)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode(System.String)
  id: CreateLiteralNode(System.String)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String)
  nameWithType: GraphPersistenceWrapper.CreateLiteralNode(String)
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 297
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Literal Node.\n"
  example: []
  syntax:
    content: public ILiteralNode CreateLiteralNode(string literal)
    parameters:
    - id: literal
      type: System.String
      description: Value.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Function CreateLiteralNode(literal As String) As ILiteralNode
  overload: VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode(System.String,System.Uri)
  id: CreateLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String, Uri)
  nameWithType: GraphPersistenceWrapper.CreateLiteralNode(String, Uri)
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 308
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Literal Node with the given Datatype.\n"
  example: []
  syntax:
    content: public ILiteralNode CreateLiteralNode(string literal, Uri datatype)
    parameters:
    - id: literal
      type: System.String
      description: Value.
    - id: datatype
      type: System.Uri
      description: Datatype URI.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Function CreateLiteralNode(literal As String, datatype As Uri) As ILiteralNode
  overload: VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode(System.String,System.String)
  id: CreateLiteralNode(System.String,System.String)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String, String)
  nameWithType: GraphPersistenceWrapper.CreateLiteralNode(String, String)
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 319
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Literal Node with the given Language.\n"
  example: []
  syntax:
    content: public ILiteralNode CreateLiteralNode(string literal, string langspec)
    parameters:
    - id: literal
      type: System.String
      description: Value.
    - id: langspec
      type: System.String
      description: Language.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Function CreateLiteralNode(literal As String, langspec As String) As ILiteralNode
  overload: VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.CreateUriNode
  commentId: M:VDS.RDF.GraphPersistenceWrapper.CreateUriNode
  id: CreateUriNode
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: CreateUriNode()
  nameWithType: GraphPersistenceWrapper.CreateUriNode()
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateUriNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 328
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new URI Node that references the Graphs Base URI.\n"
  example: []
  syntax:
    content: public IUriNode CreateUriNode()
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Function CreateUriNode As IUriNode
  overload: VDS.RDF.GraphPersistenceWrapper.CreateUriNode*
  implements:
  - VDS.RDF.IGraph.CreateUriNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.CreateUriNode(System.String)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.CreateUriNode(System.String)
  id: CreateUriNode(System.String)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: CreateUriNode(String)
  nameWithType: GraphPersistenceWrapper.CreateUriNode(String)
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateUriNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 338
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new URI Node from a QName.\n"
  example: []
  syntax:
    content: public IUriNode CreateUriNode(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName.
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Function CreateUriNode(qname As String) As IUriNode
  overload: VDS.RDF.GraphPersistenceWrapper.CreateUriNode*
  implements:
  - VDS.RDF.IGraph.CreateUriNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.CreateUriNode(System.Uri)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.CreateUriNode(System.Uri)
  id: CreateUriNode(System.Uri)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: CreateUriNode(Uri)
  nameWithType: GraphPersistenceWrapper.CreateUriNode(Uri)
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateUriNode(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 348
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new URI Node.\n"
  example: []
  syntax:
    content: public IUriNode CreateUriNode(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: URI.
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Function CreateUriNode(uri As Uri) As IUriNode
  overload: VDS.RDF.GraphPersistenceWrapper.CreateUriNode*
  implements:
  - VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.CreateVariableNode(System.String)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.CreateVariableNode(System.String)
  id: CreateVariableNode(System.String)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: CreateVariableNode(String)
  nameWithType: GraphPersistenceWrapper.CreateVariableNode(String)
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateVariableNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateVariableNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 358
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Variable Node.\n"
  example: []
  syntax:
    content: public IVariableNode CreateVariableNode(string varname)
    parameters:
    - id: varname
      type: System.String
      description: Variable Name.
    return:
      type: VDS.RDF.IVariableNode
      description: ''
    content.vb: Public Function CreateVariableNode(varname As String) As IVariableNode
  overload: VDS.RDF.GraphPersistenceWrapper.CreateVariableNode*
  implements:
  - VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetBlankNode(System.String)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetBlankNode(System.String)
  id: GetBlankNode(System.String)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetBlankNode(String)
  nameWithType: GraphPersistenceWrapper.GetBlankNode(String)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetBlankNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetBlankNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 368
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAttempts to get the Blank Node with the given ID.\n"
  example: []
  syntax:
    content: public IBlankNode GetBlankNode(string nodeId)
    parameters:
    - id: nodeId
      type: System.String
      description: Node ID.
    return:
      type: VDS.RDF.IBlankNode
      description: The Node if it exists or null.
    content.vb: Public Function GetBlankNode(nodeId As String) As IBlankNode
  overload: VDS.RDF.GraphPersistenceWrapper.GetBlankNode*
  implements:
  - VDS.RDF.IGraph.GetBlankNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetLiteralNode(System.String,System.String)
  id: GetLiteralNode(System.String,System.String)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetLiteralNode(String, String)
  nameWithType: GraphPersistenceWrapper.GetLiteralNode(String, String)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetLiteralNode(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 379
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAttempts to get the Literal Node with the given Value and Language.\n"
  example: []
  syntax:
    content: public ILiteralNode GetLiteralNode(string literal, string langspec)
    parameters:
    - id: literal
      type: System.String
      description: Value.
    - id: langspec
      type: System.String
      description: Language.
    return:
      type: VDS.RDF.ILiteralNode
      description: The Node if it exists or null.
    content.vb: Public Function GetLiteralNode(literal As String, langspec As String) As ILiteralNode
  overload: VDS.RDF.GraphPersistenceWrapper.GetLiteralNode*
  implements:
  - VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetLiteralNode(System.String)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetLiteralNode(System.String)
  id: GetLiteralNode(System.String)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetLiteralNode(String)
  nameWithType: GraphPersistenceWrapper.GetLiteralNode(String)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetLiteralNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 389
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAttempts to get the Literal Node with the given Value.\n"
  example: []
  syntax:
    content: public ILiteralNode GetLiteralNode(string literal)
    parameters:
    - id: literal
      type: System.String
      description: Value.
    return:
      type: VDS.RDF.ILiteralNode
      description: The Node if it exists or null.
    content.vb: Public Function GetLiteralNode(literal As String) As ILiteralNode
  overload: VDS.RDF.GraphPersistenceWrapper.GetLiteralNode*
  implements:
  - VDS.RDF.IGraph.GetLiteralNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetLiteralNode(System.String,System.Uri)
  id: GetLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetLiteralNode(String, Uri)
  nameWithType: GraphPersistenceWrapper.GetLiteralNode(String, Uri)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetLiteralNode(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 400
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAttempts to get the Literal Node with the given Value and Datatype.\n"
  example: []
  syntax:
    content: public ILiteralNode GetLiteralNode(string literal, Uri datatype)
    parameters:
    - id: literal
      type: System.String
      description: Value.
    - id: datatype
      type: System.Uri
      description: Datatype URI.
    return:
      type: VDS.RDF.ILiteralNode
      description: The Node if it exists or null otherwise.
    content.vb: Public Function GetLiteralNode(literal As String, datatype As Uri) As ILiteralNode
  overload: VDS.RDF.GraphPersistenceWrapper.GetLiteralNode*
  implements:
  - VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriples(System.Uri)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetTriples(System.Uri)
  id: GetTriples(System.Uri)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetTriples(Uri)
  nameWithType: GraphPersistenceWrapper.GetTriples(Uri)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriples(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 410
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples involving the given URI.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriples(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The URI to find Triples involving.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public Function GetTriples(uri As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.GetTriples*
  implements:
  - VDS.RDF.IGraph.GetTriples(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetTriples(VDS.RDF.INode)
  id: GetTriples(VDS.RDF.INode)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetTriples(INode)
  nameWithType: GraphPersistenceWrapper.GetTriples(INode)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriples(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 420
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples involving the given Node.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriples(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: The Node to find Triples involving.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public Function GetTriples(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.GetTriples*
  implements:
  - VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject(System.Uri)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject(System.Uri)
  id: GetTriplesWithObject(System.Uri)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(Uri)
  nameWithType: GraphPersistenceWrapper.GetTriplesWithObject(Uri)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 430
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given URI as the Object.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithObject(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: The URI to find Triples with it as the Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public Function GetTriplesWithObject(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject(VDS.RDF.INode)
  id: GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(INode)
  nameWithType: GraphPersistenceWrapper.GetTriplesWithObject(INode)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 440
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Node as the Object.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithObject(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: The Node to find Triples with it as the Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithObject(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate(VDS.RDF.INode)
  id: GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(INode)
  nameWithType: GraphPersistenceWrapper.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 450
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Node as the Predicate.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicate(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: The Node to find Triples with it as the Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicate(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate(System.Uri)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate(System.Uri)
  id: GetTriplesWithPredicate(System.Uri)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(Uri)
  nameWithType: GraphPersistenceWrapper.GetTriplesWithPredicate(Uri)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 460
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Uri as the Predicate.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicate(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: The Uri to find Triples with it as the Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public Function GetTriplesWithPredicate(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject(VDS.RDF.INode)
  id: GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(INode)
  nameWithType: GraphPersistenceWrapper.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 470
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Node as the Subject.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubject(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: The Node to find Triples with it as the Subject.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public Function GetTriplesWithSubject(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject(System.Uri)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject(System.Uri)
  id: GetTriplesWithSubject(System.Uri)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(Uri)
  nameWithType: GraphPersistenceWrapper.GetTriplesWithSubject(Uri)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 480
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Uri as the Subject.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubject(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: The Uri to find Triples with it as the Subject.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public Function GetTriplesWithSubject(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: GraphPersistenceWrapper.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectPredicate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 491
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples with the given Subject and Predicate.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubjectPredicate(INode subj, INode pred)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubjectPredicate(subj As INode, pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectPredicate*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: GraphPersistenceWrapper.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectObject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 502
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples with the given Subject and Object.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubjectObject(INode subj, INode obj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubjectObject(subj As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: GraphPersistenceWrapper.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicateObject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 513
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples with the given Predicate and Object.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicateObject(INode pred, INode obj)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicateObject(pred As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicateObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetUriNode(System.String)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetUriNode(System.String)
  id: GetUriNode(System.String)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetUriNode(String)
  nameWithType: GraphPersistenceWrapper.GetUriNode(String)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetUriNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetUriNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 523
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns the UriNode with the given QName if it exists.\n"
  example: []
  syntax:
    content: public IUriNode GetUriNode(string qname)
    parameters:
    - id: qname
      type: System.String
      description: The QName of the Node to select.
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Function GetUriNode(qname As String) As IUriNode
  overload: VDS.RDF.GraphPersistenceWrapper.GetUriNode*
  implements:
  - VDS.RDF.IGraph.GetUriNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetUriNode(System.Uri)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetUriNode(System.Uri)
  id: GetUriNode(System.Uri)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetUriNode(Uri)
  nameWithType: GraphPersistenceWrapper.GetUriNode(Uri)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetUriNode(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetUriNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 533
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns the UriNode with the given Uri if it exists.\n"
  example: []
  syntax:
    content: public IUriNode GetUriNode(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The Uri of the Node to select.
    return:
      type: VDS.RDF.IUriNode
      description: Either the UriNode Or null if no Node with the given Uri exists.
    content.vb: Public Function GetUriNode(uri As Uri) As IUriNode
  overload: VDS.RDF.GraphPersistenceWrapper.GetUriNode*
  implements:
  - VDS.RDF.IGraph.GetUriNode(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.ContainsTriple(VDS.RDF.Triple)
  id: ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: ContainsTriple(Triple)
  nameWithType: GraphPersistenceWrapper.ContainsTriple(Triple)
  fullName: VDS.RDF.GraphPersistenceWrapper.ContainsTriple(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ContainsTriple
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 543
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether a given Triple exists in this Graph.\n"
  example: []
  syntax:
    content: public virtual bool ContainsTriple(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function ContainsTriple(t As Triple) As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.ContainsTriple*
  implements:
  - VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.GraphPersistenceWrapper.Merge(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Merge(VDS.RDF.IGraph)
  id: Merge(VDS.RDF.IGraph)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Merge(IGraph)
  nameWithType: GraphPersistenceWrapper.Merge(IGraph)
  fullName: VDS.RDF.GraphPersistenceWrapper.Merge(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merge
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 553
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMerges another Graph into the current Graph.\n"
  remarks: The Graph on which you invoke this method will preserve its Blank Node IDs while the Blank Nodes from the Graph being merged in will be given new IDs as required in the scope of this Graph.
  example: []
  syntax:
    content: public virtual void Merge(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to Merge into this Graph.
    content.vb: Public Overridable Sub Merge(g As IGraph)
  overload: VDS.RDF.GraphPersistenceWrapper.Merge*
  implements:
  - VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.GraphPersistenceWrapper.Merge(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Merge(VDS.RDF.IGraph,System.Boolean)
  id: Merge(VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Merge(IGraph, Boolean)
  nameWithType: GraphPersistenceWrapper.Merge(IGraph, Boolean)
  fullName: VDS.RDF.GraphPersistenceWrapper.Merge(VDS.RDF.IGraph, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merge
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 571
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMerges another Graph into the current Graph.\n"
  remarks: "\n<p>\nThe Graph on which you invoke this method will preserve its Blank Node IDs while the Blank Nodes from the Graph being merged in will be given new IDs as required in the scope of this Graph.\n</p>\n<p>\nThe Graph will raise the <xref href=\"VDS.RDF.GraphPersistenceWrapper.MergeRequested\" data-throw-if-not-resolved=\"false\"></xref> event before the Merge operation which gives any event handlers the oppurtunity to cancel this event.  When the Merge operation is completed the <xref href=\"VDS.RDF.GraphPersistenceWrapper.Merged\" data-throw-if-not-resolved=\"false\"></xref> event is raised.\n</p>\n"
  example: []
  syntax:
    content: public virtual void Merge(IGraph g, bool keepOriginalGraphUri)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to Merge into this Graph.
    - id: keepOriginalGraphUri
      type: System.Boolean
      description: Indicates that the Merge should preserve the Graph URIs of Nodes so they refer to the Graph they originated in.
    content.vb: Public Overridable Sub Merge(g As IGraph, keepOriginalGraphUri As Boolean)
  overload: VDS.RDF.GraphPersistenceWrapper.Merge*
  implements:
  - VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.GraphPersistenceWrapper.Equals(System.Object)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Equals(System.Object)
  id: Equals(System.Object)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: GraphPersistenceWrapper.Equals(Object)
  fullName: VDS.RDF.GraphPersistenceWrapper.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 654
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether a Graph is equal to another Object.\n"
  remarks: "\n<p>\nA Graph can only be equal to another Object which is an <xref href=\"VDS.RDF.IGraph\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nGraph Equality is determined by a somewhat complex algorithm which is explained in the remarks of the other overload for Equals.\n</p>\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: VDS.RDF.GraphPersistenceWrapper.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.GraphPersistenceWrapper.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  id: Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Equals(IGraph, out Dictionary<INode, INode>)
  nameWithType: GraphPersistenceWrapper.Equals(IGraph, out Dictionary<INode, INode>)
  fullName: VDS.RDF.GraphPersistenceWrapper.Equals(VDS.RDF.IGraph, out System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 713
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Graph is equal to the given Graph.\n"
  remarks: "\n<p>\nThe algorithm used to determine Graph equality is based in part on a Iterative Vertex Classification Algorithm described in a Technical Report from HP by Jeremy J Carroll -. <a href=\"http://www.hpl.hp.com/techreports/2001/HPL-2001-293.html\">Matching RDF Graphs</a>\n</p>\n<p>\nGraph Equality is determined according to the following algorithm:.\n</p>\n<ol>\n<li>If the given Graph is null Graphs are not equal</li>\n<li>If the given Graph is this Graph (as determined by Reference Equality) then Graphs are equal</li>\n<li>If the Graphs have a different number of Triples they are not equal</li>\n<li>Declare a list of Triples which are the Triples of the given Graph called <em>OtherTriples</em></li>\n<li>Declare two dictionaries of Nodes to Integers which are called <em>LocalClassification</em> and <em>OtherClassification</em></li>\n<li>For Each Triple in this Graph\n<ol>\n<li>If it is a Ground Triple and cannot be found and removed from <em>OtherTriples</em> then Graphs are not equal since the Triple does not exist in both Graphs</li>\n<li>If it contains Blank Nodes track the number of usages of this Blank Node in <em>LocalClassification</em></li>\n</ol>\n</li> \n<li>If there are any Triples remaining in <em>OtherTriples</em> which are Ground Triples then Graphs are not equal since this Graph does not contain them</li>\n<li>If all the Triples from both Graphs were Ground Triples and there were no Blank Nodes then the Graphs are equal</li>\n<li>Iterate over the remaining Triples in <em>OtherTriples</em> and populate the <em>OtherClassification</em></li>\n<li>If the count of the two classifications is different the Graphs are not equal since there are differing numbers of Blank Nodes in the Graph</li>\n<li>Now build two additional dictionaries of Integers to Integers which are called <em>LocalDegreeClassification</em> and <em>OtherDegreeClassification</em>.  Iterate over <em>LocalClassification</em> and <em>OtherClassification</em> such that the corresponding degree classifications contain a mapping of the number of Blank Nodes with a given degree</li>\n<li>If the count of the two degree classifications is different the Graphs are not equal since there are not the same range of Blank Node degrees in both Graphs</li>\n<li>For All classifications in <em>LocalDegreeClassification</em> there must be a matching classification in <em>OtherDegreeClassification</em> else the Graphs are not equal</li>\n<li>Then build a possible mapping using the following rules:\n<ol>\n<li>Any Blank Node used only once should be mapped to an equivalent Blank Node in the other Graph.  If this is not possible then the Graphs are not equal</li>\n<li>Any Blank Node with a unique degree should be mapped to an equivalent Blank Node in the other Graph.  If this is not possible then the Graphs are not equal</li>\n<li>Keep a copy of the mapping up to this point as a Base Mapping for use as a fallback in later steps</li>\n<li>Build up lists of dependent pairs of Blank Nodes for both Graphs</li>\n<li>Use these lists to determine if there are any independent nodes not yet mapped.  These should be mapped to equivalent Blank Nodes in the other Graph, if this is not possible the Graphs are not equal</li>\n<li>Use the Dependencies and existing mappings to generate a possible mapping</li>\n<li>If a Complete Possible Mapping (there is a Mapping for each Blank Node from this Graph to the Other Graph) then test this mapping.  If it succeeds then the Graphs are equal</li>\n<li>Otherwise we now fallback to the Base Mapping and use it as a basis for Brute Forcing the possible solution space and testing every possibility until either a mapping works or we find the Graphs to be non-equal</li>\n</ol>\n</li>\n</ol>\n"
  example: []
  syntax:
    content: public bool Equals(IGraph g, out Dictionary<INode, INode> mapping)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to test for equality.
    - id: mapping
      type: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
      description: Mapping of Blank Nodes iff the Graphs are equal and contain some Blank Nodes.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Equals(g As IGraph, ByRef mapping As Dictionary(Of INode, INode)) As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.Equals*
  implements:
  - VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  nameWithType.vb: GraphPersistenceWrapper.Equals(IGraph, ByRef Dictionary(Of INode, INode))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.GraphPersistenceWrapper.Equals(VDS.RDF.IGraph, ByRef System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: Equals(IGraph, ByRef Dictionary(Of INode, INode))
- uid: VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf(VDS.RDF.IGraph)
  id: IsSubGraphOf(VDS.RDF.IGraph)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: IsSubGraphOf(IGraph)
  nameWithType: GraphPersistenceWrapper.IsSubGraphOf(IGraph)
  fullName: VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSubGraphOf
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 723
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether this Graph is a sub-graph of the given Graph.\n"
  example: []
  syntax:
    content: public bool IsSubGraphOf(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsSubGraphOf(g As IGraph) As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf*
  implements:
  - VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  id: IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: IsSubGraphOf(IGraph, out Dictionary<INode, INode>)
  nameWithType: GraphPersistenceWrapper.IsSubGraphOf(IGraph, out Dictionary<INode, INode>)
  fullName: VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf(VDS.RDF.IGraph, out System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSubGraphOf
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 734
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether this Graph is a sub-graph of the given Graph.\n"
  example: []
  syntax:
    content: public bool IsSubGraphOf(IGraph g, out Dictionary<INode, INode> mapping)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: mapping
      type: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
      description: Mapping of Blank Nodes.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsSubGraphOf(g As IGraph, ByRef mapping As Dictionary(Of INode, INode)) As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf*
  implements:
  - VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  nameWithType.vb: GraphPersistenceWrapper.IsSubGraphOf(IGraph, ByRef Dictionary(Of INode, INode))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf(VDS.RDF.IGraph, ByRef System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: IsSubGraphOf(IGraph, ByRef Dictionary(Of INode, INode))
- uid: VDS.RDF.GraphPersistenceWrapper.HasSubGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.HasSubGraph(VDS.RDF.IGraph)
  id: HasSubGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: HasSubGraph(IGraph)
  nameWithType: GraphPersistenceWrapper.HasSubGraph(IGraph)
  fullName: VDS.RDF.GraphPersistenceWrapper.HasSubGraph(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasSubGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 744
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether this Graph has the given Graph as a sub-graph.\n"
  example: []
  syntax:
    content: public bool HasSubGraph(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasSubGraph(g As IGraph) As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.HasSubGraph*
  implements:
  - VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  id: HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: HasSubGraph(IGraph, out Dictionary<INode, INode>)
  nameWithType: GraphPersistenceWrapper.HasSubGraph(IGraph, out Dictionary<INode, INode>)
  fullName: VDS.RDF.GraphPersistenceWrapper.HasSubGraph(VDS.RDF.IGraph, out System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasSubGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 755
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether this Graph has the given Graph as a sub-graph.\n"
  example: []
  syntax:
    content: public bool HasSubGraph(IGraph g, out Dictionary<INode, INode> mapping)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: mapping
      type: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
      description: Mapping of Blank Nodes.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasSubGraph(g As IGraph, ByRef mapping As Dictionary(Of INode, INode)) As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.HasSubGraph*
  implements:
  - VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  nameWithType.vb: GraphPersistenceWrapper.HasSubGraph(IGraph, ByRef Dictionary(Of INode, INode))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.GraphPersistenceWrapper.HasSubGraph(VDS.RDF.IGraph, ByRef System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: HasSubGraph(IGraph, ByRef Dictionary(Of INode, INode))
- uid: VDS.RDF.GraphPersistenceWrapper.Difference(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Difference(VDS.RDF.IGraph)
  id: Difference(VDS.RDF.IGraph)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Difference(IGraph)
  nameWithType: GraphPersistenceWrapper.Difference(IGraph)
  fullName: VDS.RDF.GraphPersistenceWrapper.Difference(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Difference
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 770
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nComputes the Difference between this Graph the given Graph.\n"
  remarks: "\n<p>\nProduces a report which shows the changes that must be made to this Graph to produce the given Graph.\n</p>\n"
  example: []
  syntax:
    content: public GraphDiffReport Difference(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: VDS.RDF.GraphDiffReport
      description: ''
    content.vb: Public Function Difference(g As IGraph) As GraphDiffReport
  overload: VDS.RDF.GraphPersistenceWrapper.Difference*
  implements:
  - VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.ResolveQName(System.String)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.ResolveQName(System.String)
  id: ResolveQName(System.String)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: ResolveQName(String)
  nameWithType: GraphPersistenceWrapper.ResolveQName(String)
  fullName: VDS.RDF.GraphPersistenceWrapper.ResolveQName(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResolveQName
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 780
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper function for Resolving QNames to URIs.\n"
  example: []
  syntax:
    content: public Uri ResolveQName(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName to resolve to a Uri.
    return:
      type: System.Uri
      description: ''
    content.vb: Public Function ResolveQName(qname As String) As Uri
  overload: VDS.RDF.GraphPersistenceWrapper.ResolveQName*
  implements:
  - VDS.RDF.IGraph.ResolveQName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.TripleAsserted
  commentId: E:VDS.RDF.GraphPersistenceWrapper.TripleAsserted
  id: TripleAsserted
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: TripleAsserted
  nameWithType: GraphPersistenceWrapper.TripleAsserted
  fullName: VDS.RDF.GraphPersistenceWrapper.TripleAsserted
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TripleAsserted
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 792
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when a Triple is asserted in the Graph\n"
  example: []
  syntax:
    content: public event TripleEventHandler TripleAsserted
    return:
      type: VDS.RDF.TripleEventHandler
    content.vb: Public Event TripleAsserted As TripleEventHandler
  implements:
  - VDS.RDF.IGraph.TripleAsserted
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.TripleRetracted
  commentId: E:VDS.RDF.GraphPersistenceWrapper.TripleRetracted
  id: TripleRetracted
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: TripleRetracted
  nameWithType: GraphPersistenceWrapper.TripleRetracted
  fullName: VDS.RDF.GraphPersistenceWrapper.TripleRetracted
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TripleRetracted
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 797
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when a Triple is retracted from the Graph\n"
  example: []
  syntax:
    content: public event TripleEventHandler TripleRetracted
    return:
      type: VDS.RDF.TripleEventHandler
    content.vb: Public Event TripleRetracted As TripleEventHandler
  implements:
  - VDS.RDF.IGraph.TripleRetracted
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.Changed
  commentId: E:VDS.RDF.GraphPersistenceWrapper.Changed
  id: Changed
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Changed
  nameWithType: GraphPersistenceWrapper.Changed
  fullName: VDS.RDF.GraphPersistenceWrapper.Changed
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Changed
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 802
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when the Graph contents change\n"
  example: []
  syntax:
    content: public event GraphEventHandler Changed
    return:
      type: VDS.RDF.GraphEventHandler
    content.vb: Public Event Changed As GraphEventHandler
  implements:
  - VDS.RDF.IGraph.Changed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.ClearRequested
  commentId: E:VDS.RDF.GraphPersistenceWrapper.ClearRequested
  id: ClearRequested
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: ClearRequested
  nameWithType: GraphPersistenceWrapper.ClearRequested
  fullName: VDS.RDF.GraphPersistenceWrapper.ClearRequested
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ClearRequested
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 807
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised just before the Graph is cleared of its contents\n"
  example: []
  syntax:
    content: public event CancellableGraphEventHandler ClearRequested
    return:
      type: VDS.RDF.CancellableGraphEventHandler
    content.vb: Public Event ClearRequested As CancellableGraphEventHandler
  implements:
  - VDS.RDF.IGraph.ClearRequested
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.Cleared
  commentId: E:VDS.RDF.GraphPersistenceWrapper.Cleared
  id: Cleared
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Cleared
  nameWithType: GraphPersistenceWrapper.Cleared
  fullName: VDS.RDF.GraphPersistenceWrapper.Cleared
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Cleared
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 812
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised after the Graph is cleared of its contents\n"
  example: []
  syntax:
    content: public event GraphEventHandler Cleared
    return:
      type: VDS.RDF.GraphEventHandler
    content.vb: Public Event Cleared As GraphEventHandler
  implements:
  - VDS.RDF.IGraph.Cleared
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.MergeRequested
  commentId: E:VDS.RDF.GraphPersistenceWrapper.MergeRequested
  id: MergeRequested
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: MergeRequested
  nameWithType: GraphPersistenceWrapper.MergeRequested
  fullName: VDS.RDF.GraphPersistenceWrapper.MergeRequested
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MergeRequested
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 817
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when a Merge operation is requested on the Graph\n"
  example: []
  syntax:
    content: public event CancellableGraphEventHandler MergeRequested
    return:
      type: VDS.RDF.CancellableGraphEventHandler
    content.vb: Public Event MergeRequested As CancellableGraphEventHandler
  implements:
  - VDS.RDF.IGraph.MergeRequested
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.Merged
  commentId: E:VDS.RDF.GraphPersistenceWrapper.Merged
  id: Merged
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Merged
  nameWithType: GraphPersistenceWrapper.Merged
  fullName: VDS.RDF.GraphPersistenceWrapper.Merged
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merged
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 822
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when a Merge operation is completed on the Graph\n"
  example: []
  syntax:
    content: public event GraphEventHandler Merged
    return:
      type: VDS.RDF.GraphEventHandler
    content.vb: Public Event Merged As GraphEventHandler
  implements:
  - VDS.RDF.IGraph.Merged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  id: OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: OnTripleAsserted(Object, TripleEventArgs)
  nameWithType: GraphPersistenceWrapper.OnTripleAsserted(Object, TripleEventArgs)
  fullName: VDS.RDF.GraphPersistenceWrapper.OnTripleAsserted(System.Object, VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnTripleAsserted
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 829
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent Handler which handles the <xref href=\"VDS.RDF.BaseTripleCollection.TripleAdded\" data-throw-if-not-resolved=\"false\"></xref> event from the underlying Triple Collection by raising the Graph&apos;s <xref href=\"VDS.RDF.GraphPersistenceWrapper.TripleAsserted\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected virtual void OnTripleAsserted(object sender, TripleEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Sender.
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: Triple Event Arguments.
    content.vb: Protected Overridable Sub OnTripleAsserted(sender As Object, args As TripleEventArgs)
  overload: VDS.RDF.GraphPersistenceWrapper.OnTripleAsserted*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  id: RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: RaiseTripleAsserted(TripleEventArgs)
  nameWithType: GraphPersistenceWrapper.RaiseTripleAsserted(TripleEventArgs)
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleAsserted
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 838
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.GraphPersistenceWrapper.TripleAsserted\" data-throw-if-not-resolved=\"false\"></xref> event manually.\n"
  example: []
  syntax:
    content: protected void RaiseTripleAsserted(TripleEventArgs args)
    parameters:
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: Triple Event Arguments.
    content.vb: Protected Sub RaiseTripleAsserted(args As TripleEventArgs)
  overload: VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted(VDS.RDF.Triple)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted(VDS.RDF.Triple)
  id: RaiseTripleAsserted(VDS.RDF.Triple)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: RaiseTripleAsserted(Triple)
  nameWithType: GraphPersistenceWrapper.RaiseTripleAsserted(Triple)
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleAsserted
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 853
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.GraphPersistenceWrapper.TripleAsserted\" data-throw-if-not-resolved=\"false\"></xref> event manually.\n"
  example: []
  syntax:
    content: protected void RaiseTripleAsserted(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    content.vb: Protected Sub RaiseTripleAsserted(t As Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  id: OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: OnTripleRetracted(Object, TripleEventArgs)
  nameWithType: GraphPersistenceWrapper.OnTripleRetracted(Object, TripleEventArgs)
  fullName: VDS.RDF.GraphPersistenceWrapper.OnTripleRetracted(System.Object, VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnTripleRetracted
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 870
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent Handler which handles the <xref href=\"VDS.RDF.BaseTripleCollection.TripleRemoved\" data-throw-if-not-resolved=\"false\"></xref> event from the underlying Triple Collection by raising the Graph&apos;s <xref href=\"VDS.RDF.GraphPersistenceWrapper.TripleRetracted\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected virtual void OnTripleRetracted(object sender, TripleEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Sender.
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: Triple Event Arguments.
    content.vb: Protected Overridable Sub OnTripleRetracted(sender As Object, args As TripleEventArgs)
  overload: VDS.RDF.GraphPersistenceWrapper.OnTripleRetracted*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  id: RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: RaiseTripleRetracted(TripleEventArgs)
  nameWithType: GraphPersistenceWrapper.RaiseTripleRetracted(TripleEventArgs)
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleRetracted
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 879
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.GraphPersistenceWrapper.TripleRetracted\" data-throw-if-not-resolved=\"false\"></xref> event manually.\n"
  example: []
  syntax:
    content: protected void RaiseTripleRetracted(TripleEventArgs args)
    parameters:
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: ''
    content.vb: Protected Sub RaiseTripleRetracted(args As TripleEventArgs)
  overload: VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted(VDS.RDF.Triple)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted(VDS.RDF.Triple)
  id: RaiseTripleRetracted(VDS.RDF.Triple)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: RaiseTripleRetracted(Triple)
  nameWithType: GraphPersistenceWrapper.RaiseTripleRetracted(Triple)
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleRetracted
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 894
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.GraphPersistenceWrapper.TripleRetracted\" data-throw-if-not-resolved=\"false\"></xref> event manually.\n"
  example: []
  syntax:
    content: protected void RaiseTripleRetracted(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    content.vb: Protected Sub RaiseTripleRetracted(t As Triple)
  overload: VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  id: RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: RaiseGraphChanged(TripleEventArgs)
  nameWithType: GraphPersistenceWrapper.RaiseGraphChanged(TripleEventArgs)
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseGraphChanged
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 910
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.GraphPersistenceWrapper.Changed\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void RaiseGraphChanged(TripleEventArgs args)
    parameters:
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: Triple Event Arguments.
    content.vb: Protected Sub RaiseGraphChanged(args As TripleEventArgs)
  overload: VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged
  commentId: M:VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged
  id: RaiseGraphChanged
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: RaiseGraphChanged()
  nameWithType: GraphPersistenceWrapper.RaiseGraphChanged()
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseGraphChanged
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 922
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.GraphPersistenceWrapper.Changed\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void RaiseGraphChanged()
    content.vb: Protected Sub RaiseGraphChanged
  overload: VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseClearRequested
  commentId: M:VDS.RDF.GraphPersistenceWrapper.RaiseClearRequested
  id: RaiseClearRequested
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: RaiseClearRequested()
  nameWithType: GraphPersistenceWrapper.RaiseClearRequested()
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseClearRequested()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseClearRequested
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 935
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.GraphPersistenceWrapper.ClearRequested\" data-throw-if-not-resolved=\"false\"></xref> event and returning whether any of the Event Handlers cancelled the operation.\n"
  example: []
  syntax:
    content: protected bool RaiseClearRequested()
    return:
      type: System.Boolean
      description: True if the operation can continue, false if it should be aborted.
    content.vb: Protected Function RaiseClearRequested As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.RaiseClearRequested*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseCleared
  commentId: M:VDS.RDF.GraphPersistenceWrapper.RaiseCleared
  id: RaiseCleared
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: RaiseCleared()
  nameWithType: GraphPersistenceWrapper.RaiseCleared()
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseCleared()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseCleared
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 953
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.GraphPersistenceWrapper.Cleared\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void RaiseCleared()
    content.vb: Protected Sub RaiseCleared
  overload: VDS.RDF.GraphPersistenceWrapper.RaiseCleared*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseMergeRequested
  commentId: M:VDS.RDF.GraphPersistenceWrapper.RaiseMergeRequested
  id: RaiseMergeRequested
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: RaiseMergeRequested()
  nameWithType: GraphPersistenceWrapper.RaiseMergeRequested()
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseMergeRequested()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseMergeRequested
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 966
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.GraphPersistenceWrapper.MergeRequested\" data-throw-if-not-resolved=\"false\"></xref> event and returning whether any of the Event Handlers cancelled the operation.\n"
  example: []
  syntax:
    content: protected bool RaiseMergeRequested()
    return:
      type: System.Boolean
      description: True if the operation can continue, false if it should be aborted.
    content.vb: Protected Function RaiseMergeRequested As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.RaiseMergeRequested*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseMerged
  commentId: M:VDS.RDF.GraphPersistenceWrapper.RaiseMerged
  id: RaiseMerged
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: RaiseMerged()
  nameWithType: GraphPersistenceWrapper.RaiseMerged()
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseMerged()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseMerged
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 984
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.GraphPersistenceWrapper.Merged\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void RaiseMerged()
    content.vb: Protected Sub RaiseMerged
  overload: VDS.RDF.GraphPersistenceWrapper.RaiseMerged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.AttachEventHandlers(VDS.RDF.BaseTripleCollection)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.AttachEventHandlers(VDS.RDF.BaseTripleCollection)
  id: AttachEventHandlers(VDS.RDF.BaseTripleCollection)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: AttachEventHandlers(BaseTripleCollection)
  nameWithType: GraphPersistenceWrapper.AttachEventHandlers(BaseTripleCollection)
  fullName: VDS.RDF.GraphPersistenceWrapper.AttachEventHandlers(VDS.RDF.BaseTripleCollection)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AttachEventHandlers
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1000
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for attaching the necessary event Handlers to a Triple Collection.\n"
  remarks: "\nMay be useful if you replace the Triple Collection after instantiation e.g. as done in <xref href=\"VDS.RDF.Query.SparqlView\" data-throw-if-not-resolved=\"false\"></xref>&apos;s.\n"
  example: []
  syntax:
    content: protected void AttachEventHandlers(BaseTripleCollection tripleCollection)
    parameters:
    - id: tripleCollection
      type: VDS.RDF.BaseTripleCollection
      description: Triple Collection.
    content.vb: Protected Sub AttachEventHandlers(tripleCollection As BaseTripleCollection)
  overload: VDS.RDF.GraphPersistenceWrapper.AttachEventHandlers*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.DetachEventHandlers(VDS.RDF.BaseTripleCollection)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.DetachEventHandlers(VDS.RDF.BaseTripleCollection)
  id: DetachEventHandlers(VDS.RDF.BaseTripleCollection)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: DetachEventHandlers(BaseTripleCollection)
  nameWithType: GraphPersistenceWrapper.DetachEventHandlers(BaseTripleCollection)
  fullName: VDS.RDF.GraphPersistenceWrapper.DetachEventHandlers(VDS.RDF.BaseTripleCollection)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DetachEventHandlers
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1013
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for detaching the necessary event Handlers from a Triple Collection.\n"
  remarks: "\nMay be useful if you replace the Triple Collection after instantiation e.g. as done in <xref href=\"VDS.RDF.Query.SparqlView\" data-throw-if-not-resolved=\"false\"></xref>&apos;s.\n"
  example: []
  syntax:
    content: protected void DetachEventHandlers(BaseTripleCollection tripleCollection)
    parameters:
    - id: tripleCollection
      type: VDS.RDF.BaseTripleCollection
      description: Triple Collection.
    content.vb: Protected Sub DetachEventHandlers(tripleCollection As BaseTripleCollection)
  overload: VDS.RDF.GraphPersistenceWrapper.DetachEventHandlers*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.Flush
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Flush
  id: Flush
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: GraphPersistenceWrapper.Flush()
  fullName: VDS.RDF.GraphPersistenceWrapper.Flush()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Flush
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1026
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nFlushes all changes which have yet to be persisted to the underlying storage.\n"
  example: []
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  overload: VDS.RDF.GraphPersistenceWrapper.Flush*
  implements:
  - VDS.RDF.ITransactionalGraph.Flush
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.Discard
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Discard
  id: Discard
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Discard()
  nameWithType: GraphPersistenceWrapper.Discard()
  fullName: VDS.RDF.GraphPersistenceWrapper.Discard()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Discard
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1083
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDiscards all changes which have yet to be persisted so that they are not persisted to the underlying storage.\n"
  example: []
  syntax:
    content: public void Discard()
    content.vb: Public Sub Discard
  overload: VDS.RDF.GraphPersistenceWrapper.Discard*
  implements:
  - VDS.RDF.ITransactionalGraph.Discard
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.SupportsTriplePersistence
  commentId: P:VDS.RDF.GraphPersistenceWrapper.SupportsTriplePersistence
  id: SupportsTriplePersistence
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: SupportsTriplePersistence
  nameWithType: GraphPersistenceWrapper.SupportsTriplePersistence
  fullName: VDS.RDF.GraphPersistenceWrapper.SupportsTriplePersistence
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SupportsTriplePersistence
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1119
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nUsed to indicate whether the persistence mechansim can persist batches of Triples.\n"
  remarks: "\n<p>\nIf <strong>true</strong> then the <xref href=\"VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable%7bVDS.RDF.Triple%7d)\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable%7bVDS.RDF.Triple%7d)\" data-throw-if-not-resolved=\"false\"></xref> methods are used to persist changes when the <xref href=\"VDS.RDF.GraphPersistenceWrapper.Flush\" data-throw-if-not-resolved=\"false\"></xref> method is called.  If <strong>false</strong> then the <xref href=\"VDS.RDF.GraphPersistenceWrapper.PersistGraph\" data-throw-if-not-resolved=\"false\"></xref> method will be invoked instead.\n</p>\n"
  example: []
  syntax:
    content: protected virtual bool SupportsTriplePersistence { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property SupportsTriplePersistence As Boolean
  overload: VDS.RDF.GraphPersistenceWrapper.SupportsTriplePersistence*
  modifiers.csharp:
  - protected
  - virtual
  - get
  modifiers.vb:
  - Protected
  - Overridable
  - ReadOnly
- uid: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  id: PersistInsertedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: PersistInsertedTriples(IEnumerable<Triple>)
  nameWithType: GraphPersistenceWrapper.PersistInsertedTriples(IEnumerable<Triple>)
  fullName: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PersistInsertedTriples
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1125
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nPersists inserted Triples to the underlying Storage.\n"
  example: []
  syntax:
    content: protected virtual void PersistInsertedTriples(IEnumerable<Triple> ts)
    parameters:
    - id: ts
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Triples.
    content.vb: Protected Overridable Sub PersistInsertedTriples(ts As IEnumerable(Of Triple))
  overload: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples*
  nameWithType.vb: GraphPersistenceWrapper.PersistInsertedTriples(IEnumerable(Of Triple))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: PersistInsertedTriples(IEnumerable(Of Triple))
- uid: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  id: PersistDeletedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: PersistDeletedTriples(IEnumerable<Triple>)
  nameWithType: GraphPersistenceWrapper.PersistDeletedTriples(IEnumerable<Triple>)
  fullName: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PersistDeletedTriples
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1134
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nPersists deleted Triples to the underlying Storage.\n"
  example: []
  syntax:
    content: protected virtual void PersistDeletedTriples(IEnumerable<Triple> ts)
    parameters:
    - id: ts
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Protected Overridable Sub PersistDeletedTriples(ts As IEnumerable(Of Triple))
  overload: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples*
  nameWithType.vb: GraphPersistenceWrapper.PersistDeletedTriples(IEnumerable(Of Triple))
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: PersistDeletedTriples(IEnumerable(Of Triple))
- uid: VDS.RDF.GraphPersistenceWrapper.PersistGraph
  commentId: M:VDS.RDF.GraphPersistenceWrapper.PersistGraph
  id: PersistGraph
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: PersistGraph()
  nameWithType: GraphPersistenceWrapper.PersistGraph()
  fullName: VDS.RDF.GraphPersistenceWrapper.PersistGraph()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PersistGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1142
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nPersists the entire Graph to the underlying Storage.\n"
  example: []
  syntax:
    content: protected virtual void PersistGraph()
    content.vb: Protected Overridable Sub PersistGraph
  overload: VDS.RDF.GraphPersistenceWrapper.PersistGraph*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.GraphPersistenceWrapper.Dispose
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Dispose
  id: Dispose
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: GraphPersistenceWrapper.Dispose()
  fullName: VDS.RDF.GraphPersistenceWrapper.Dispose()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dispose
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1152
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDisposes of the persistence wrapper and in doing so persists any changes to the underlying storage.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: VDS.RDF.GraphPersistenceWrapper.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.Dispose(System.Boolean)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: Dispose(Boolean)
  nameWithType: GraphPersistenceWrapper.Dispose(Boolean)
  fullName: VDS.RDF.GraphPersistenceWrapper.Dispose(System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dispose
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1161
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDisposes of the persistence wrapper and in doing so persists any changes to the underlying storage.\n"
  example: []
  syntax:
    content: protected void Dispose(bool disposing)
    parameters:
    - id: disposing
      type: System.Boolean
      description: Whether the method was called from Dispose() or the destructor.
    content.vb: Protected Sub Dispose(disposing As Boolean)
  overload: VDS.RDF.GraphPersistenceWrapper.Dispose*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.GraphPersistenceWrapper.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: GraphPersistenceWrapper.GetObjectData(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.GraphPersistenceWrapper.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetObjectData
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1176
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Serialization Information.\n"
  example: []
  syntax:
    content: public void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: VDS.RDF.GraphPersistenceWrapper.GetObjectData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.GetSchema
  commentId: M:VDS.RDF.GraphPersistenceWrapper.GetSchema
  id: GetSchema
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: GraphPersistenceWrapper.GetSchema()
  fullName: VDS.RDF.GraphPersistenceWrapper.GetSchema()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSchema
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1189
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Schema for XML serialization.\n"
  example: []
  syntax:
    content: public XmlSchema GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
      description: ''
    content.vb: Public Function GetSchema As XmlSchema
  overload: VDS.RDF.GraphPersistenceWrapper.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: GraphPersistenceWrapper.ReadXml(XmlReader)
  fullName: VDS.RDF.GraphPersistenceWrapper.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ReadXml
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1198
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReads the data for XML deserialization.\n"
  example: []
  syntax:
    content: public void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: XML Reader.
    content.vb: Public Sub ReadXml(reader As XmlReader)
  overload: VDS.RDF.GraphPersistenceWrapper.ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.GraphPersistenceWrapper.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.GraphPersistenceWrapper.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.GraphPersistenceWrapper
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: GraphPersistenceWrapper.WriteXml(XmlWriter)
  fullName: VDS.RDF.GraphPersistenceWrapper.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WriteXml
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphPersistenceWrapper.cs
    startLine: 1232
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nWrites the data for XML serialization.\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: XML Writer.
    content.vb: Public Sub WriteXml(writer As XmlWriter)
  overload: VDS.RDF.GraphPersistenceWrapper.WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.GraphPersistenceWrapper.Discard
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Discard
  parent: VDS.RDF.GraphPersistenceWrapper
  name: Discard()
  nameWithType: GraphPersistenceWrapper.Discard()
  fullName: VDS.RDF.GraphPersistenceWrapper.Discard()
  spec.csharp:
  - uid: VDS.RDF.GraphPersistenceWrapper.Discard
    name: Discard
    nameWithType: GraphPersistenceWrapper.Discard
    fullName: VDS.RDF.GraphPersistenceWrapper.Discard
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphPersistenceWrapper.Discard
    name: Discard
    nameWithType: GraphPersistenceWrapper.Discard
    fullName: VDS.RDF.GraphPersistenceWrapper.Discard
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.SupportsTriplePersistence
  commentId: P:VDS.RDF.GraphPersistenceWrapper.SupportsTriplePersistence
  parent: VDS.RDF.GraphPersistenceWrapper
  name: SupportsTriplePersistence
  nameWithType: GraphPersistenceWrapper.SupportsTriplePersistence
  fullName: VDS.RDF.GraphPersistenceWrapper.SupportsTriplePersistence
- uid: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.GraphPersistenceWrapper
  isExternal: true
  name: PersistInsertedTriples(IEnumerable<Triple>)
  nameWithType: GraphPersistenceWrapper.PersistInsertedTriples(IEnumerable<Triple>)
  fullName: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: GraphPersistenceWrapper.PersistInsertedTriples(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: PersistInsertedTriples(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: PersistInsertedTriples
    nameWithType: GraphPersistenceWrapper.PersistInsertedTriples
    fullName: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: PersistInsertedTriples
    nameWithType: GraphPersistenceWrapper.PersistInsertedTriples
    fullName: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.GraphPersistenceWrapper
  isExternal: true
  name: PersistDeletedTriples(IEnumerable<Triple>)
  nameWithType: GraphPersistenceWrapper.PersistDeletedTriples(IEnumerable<Triple>)
  fullName: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: GraphPersistenceWrapper.PersistDeletedTriples(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: PersistDeletedTriples(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: PersistDeletedTriples
    nameWithType: GraphPersistenceWrapper.PersistDeletedTriples
    fullName: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: PersistDeletedTriples
    nameWithType: GraphPersistenceWrapper.PersistDeletedTriples
    fullName: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.PersistGraph
  commentId: M:VDS.RDF.GraphPersistenceWrapper.PersistGraph
  parent: VDS.RDF.GraphPersistenceWrapper
  name: PersistGraph()
  nameWithType: GraphPersistenceWrapper.PersistGraph()
  fullName: VDS.RDF.GraphPersistenceWrapper.PersistGraph()
  spec.csharp:
  - uid: VDS.RDF.GraphPersistenceWrapper.PersistGraph
    name: PersistGraph
    nameWithType: GraphPersistenceWrapper.PersistGraph
    fullName: VDS.RDF.GraphPersistenceWrapper.PersistGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphPersistenceWrapper.PersistGraph
    name: PersistGraph
    nameWithType: GraphPersistenceWrapper.PersistGraph
    fullName: VDS.RDF.GraphPersistenceWrapper.PersistGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.ITransactionalGraph
  commentId: T:VDS.RDF.ITransactionalGraph
  parent: VDS.RDF
  name: ITransactionalGraph
  nameWithType: ITransactionalGraph
  fullName: VDS.RDF.ITransactionalGraph
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.INodeFactory
  commentId: T:VDS.RDF.INodeFactory
  parent: VDS.RDF
  name: INodeFactory
  nameWithType: INodeFactory
  fullName: VDS.RDF.INodeFactory
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<GraphPersistenceWrapper>()
  nameWithType: Extensions.AsEnumerable<GraphPersistenceWrapper>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.GraphPersistenceWrapper>()
  nameWithType.vb: Extensions.AsEnumerable(Of GraphPersistenceWrapper)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.GraphPersistenceWrapper)()
  name.vb: AsEnumerable(Of GraphPersistenceWrapper)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<GraphPersistenceWrapper>
    nameWithType: Extensions.AsEnumerable<GraphPersistenceWrapper>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.GraphPersistenceWrapper>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of GraphPersistenceWrapper)
    nameWithType: Extensions.AsEnumerable(Of GraphPersistenceWrapper)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.GraphPersistenceWrapper)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Assert(INode, INode, INode)
  nameWithType: Extensions.Assert(INode, INode, INode)
  fullName: VDS.RDF.Extensions.Assert(VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Retract(INode, INode, INode)
  nameWithType: Extensions.Retract(INode, INode, INode)
  fullName: VDS.RDF.Extensions.Retract(VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: AssertList<T>(IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: AssertList<T>(INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: AssertList(IEnumerable<INode>)
  nameWithType: Extensions.AssertList(IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: AssertList(INode, IEnumerable<INode>)
  nameWithType: Extensions.AssertList(INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListAsTriples(INode)
  nameWithType: Extensions.GetListAsTriples(INode)
  fullName: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListItems(INode)
  nameWithType: Extensions.GetListItems(INode)
  fullName: VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListNodes(INode)
  nameWithType: Extensions.GetListNodes(INode)
  fullName: VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  name: RetractList(INode)
  nameWithType: Extensions.RetractList(INode)
  fullName: VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: AddToList<T>(INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AddToList<T>(INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AddToList<T>(VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(Of T)(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AddToList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList<T>
    nameWithType: Extensions.AddToList<T>
    fullName: VDS.RDF.Extensions.AddToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList(Of T)
    nameWithType: Extensions.AddToList(Of T)
    fullName: VDS.RDF.Extensions.AddToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: AddToList(INode, IEnumerable<INode>)
  nameWithType: Extensions.AddToList(INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AddToList(VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AddToList(INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: RemoveFromList<T>(INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.RemoveFromList<T>(INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList<T>(VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(Of T)(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: RemoveFromList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList<T>
    nameWithType: Extensions.RemoveFromList<T>
    fullName: VDS.RDF.Extensions.RemoveFromList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList(Of T)
    nameWithType: Extensions.RemoveFromList(Of T)
    fullName: VDS.RDF.Extensions.RemoveFromList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: RemoveFromList(INode, IEnumerable<INode>)
  nameWithType: Extensions.RemoveFromList(INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: RemoveFromList(INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  name: ExecuteQuery(String)
  nameWithType: GraphExtensions.ExecuteQuery(String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, String)
  nameWithType: GraphExtensions.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  name: LoadFromFile(String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromFile(String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  name: LoadFromFile(String)
  nameWithType: GraphExtensions.LoadFromFile(String)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  name: LoadFromUri(Uri, IRdfReader)
  nameWithType: GraphExtensions.LoadFromUri(Uri, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  name: LoadFromUri(Uri)
  nameWithType: GraphExtensions.LoadFromUri(Uri)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  name: LoadFromString(String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromString(String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  name: LoadFromString(String)
  nameWithType: GraphExtensions.LoadFromString(String)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  name: LoadFromEmbeddedResource(String)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(String)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  name: LoadFromEmbeddedResource(String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  name: SaveToFile(String, IRdfWriter)
  nameWithType: GraphExtensions.SaveToFile(String, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(System.String, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  name: SaveToFile(String, IStoreWriter)
  nameWithType: GraphExtensions.SaveToFile(String, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(System.String, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  name: SaveToFile(String)
  nameWithType: GraphExtensions.SaveToFile(String)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  name: SaveToStream(TextWriter, IRdfWriter)
  nameWithType: GraphExtensions.SaveToStream(TextWriter, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  name: SaveToStream(TextWriter, IStoreWriter)
  nameWithType: GraphExtensions.SaveToStream(TextWriter, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  name: SaveToStream(String, TextWriter)
  nameWithType: GraphExtensions.SaveToStream(String, TextWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(System.String, System.IO.TextWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  parent: VDS.RDF.Dynamic.DynamicExtensions
  definition: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  name: AsDynamic(Uri, Uri)
  nameWithType: DynamicExtensions.AsDynamic(Uri, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  commentId: M:VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  parent: VDS.RDF.Data.DataTables.GraphExtensions
  definition: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  name: ToDataTable()
  nameWithType: GraphExtensions.ToDataTable()
  fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable()
  spec.csharp:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper
  commentId: T:VDS.RDF.GraphPersistenceWrapper
  parent: VDS.RDF
  name: GraphPersistenceWrapper
  nameWithType: GraphPersistenceWrapper
  fullName: VDS.RDF.GraphPersistenceWrapper
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Assert(IGraph, INode, INode, INode)
  nameWithType: Extensions.Assert(IGraph, INode, INode, INode)
  fullName: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph, VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Retract(IGraph, INode, INode, INode)
  nameWithType: Extensions.Retract(IGraph, INode, INode, INode)
  fullName: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph, VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: AssertList<T>(IGraph, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(IGraph, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(IGraph, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(IGraph, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: AssertList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: AssertList(IGraph, IEnumerable<INode>)
  nameWithType: Extensions.AssertList(IGraph, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(IGraph, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(IGraph, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: AssertList(IGraph, INode, IEnumerable<INode>)
  nameWithType: Extensions.AssertList(IGraph, INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(IGraph, INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(IGraph, INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListAsTriples(IGraph, INode)
  nameWithType: Extensions.GetListAsTriples(IGraph, INode)
  fullName: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListItems(IGraph, INode)
  nameWithType: Extensions.GetListItems(IGraph, INode)
  fullName: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListNodes(IGraph, INode)
  nameWithType: Extensions.GetListNodes(IGraph, INode)
  fullName: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  name: RetractList(IGraph, INode)
  nameWithType: Extensions.RetractList(IGraph, INode)
  fullName: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: AddToList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AddToList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AddToList<T>(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(Of T)(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AddToList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList<T>
    nameWithType: Extensions.AddToList<T>
    fullName: VDS.RDF.Extensions.AddToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList(Of T)
    nameWithType: Extensions.AddToList(Of T)
    fullName: VDS.RDF.Extensions.AddToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: AddToList(IGraph, INode, IEnumerable<INode>)
  nameWithType: Extensions.AddToList(IGraph, INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(IGraph, INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AddToList(IGraph, INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: RemoveFromList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.RemoveFromList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList<T>(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(Of T)(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: RemoveFromList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList<T>
    nameWithType: Extensions.RemoveFromList<T>
    fullName: VDS.RDF.Extensions.RemoveFromList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList(Of T)
    nameWithType: Extensions.RemoveFromList(Of T)
    fullName: VDS.RDF.Extensions.RemoveFromList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: RemoveFromList(IGraph, INode, IEnumerable<INode>)
  nameWithType: Extensions.RemoveFromList(IGraph, INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(IGraph, INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: RemoveFromList(IGraph, INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: ExecuteQuery(IGraph, String)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions
  commentId: T:VDS.RDF.GraphExtensions
  parent: VDS.RDF
  name: GraphExtensions
  nameWithType: GraphExtensions
  fullName: VDS.RDF.GraphExtensions
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  isExternal: true
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, String)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(IGraph, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(IGraph, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromFile(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromFile(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: LoadFromFile(IGraph, String)
  nameWithType: GraphExtensions.LoadFromFile(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromUri(IGraph, Uri, IRdfReader)
  nameWithType: GraphExtensions.LoadFromUri(IGraph, Uri, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph, System.Uri, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  isExternal: true
  name: LoadFromUri(IGraph, Uri)
  nameWithType: GraphExtensions.LoadFromUri(IGraph, Uri)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromString(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromString(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: LoadFromString(IGraph, String)
  nameWithType: GraphExtensions.LoadFromString(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: LoadFromEmbeddedResource(IGraph, String)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromEmbeddedResource(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  isExternal: true
  name: SaveToFile(IGraph, String, IRdfWriter)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  isExternal: true
  name: SaveToFile(IGraph, String, IStoreWriter)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: SaveToFile(IGraph, String)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  isExternal: true
  name: SaveToStream(IGraph, TextWriter, IRdfWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, TextWriter, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.IO.TextWriter, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  isExternal: true
  name: SaveToStream(IGraph, TextWriter, IStoreWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, TextWriter, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.IO.TextWriter, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  isExternal: true
  name: SaveToStream(IGraph, String, TextWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, String, TextWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.String, System.IO.TextWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  isExternal: true
  name: AsDynamic(IGraph, Uri, Uri)
  nameWithType: DynamicExtensions.AsDynamic(IGraph, Uri, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph, System.Uri, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions
  commentId: T:VDS.RDF.Dynamic.DynamicExtensions
  parent: VDS.RDF.Dynamic
  name: DynamicExtensions
  nameWithType: DynamicExtensions
  fullName: VDS.RDF.Dynamic.DynamicExtensions
- uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  name: ToDataTable(IGraph)
  nameWithType: GraphExtensions.ToDataTable(IGraph)
  fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Data.DataTables.GraphExtensions
  commentId: T:VDS.RDF.Data.DataTables.GraphExtensions
  parent: VDS.RDF.Data.DataTables
  name: GraphExtensions
  nameWithType: GraphExtensions
  fullName: VDS.RDF.Data.DataTables.GraphExtensions
- uid: VDS.RDF.Dynamic
  commentId: N:VDS.RDF.Dynamic
  name: VDS.RDF.Dynamic
  nameWithType: VDS.RDF.Dynamic
  fullName: VDS.RDF.Dynamic
- uid: VDS.RDF.Data.DataTables
  commentId: N:VDS.RDF.Data.DataTables
  name: VDS.RDF.Data.DataTables
  nameWithType: VDS.RDF.Data.DataTables
  fullName: VDS.RDF.Data.DataTables
- uid: VDS.RDF.GraphPersistenceWrapper.#ctor*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.#ctor
  name: GraphPersistenceWrapper
  nameWithType: GraphPersistenceWrapper.GraphPersistenceWrapper
  fullName: VDS.RDF.GraphPersistenceWrapper.GraphPersistenceWrapper
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: VDS.RDF.GraphPersistenceWrapper.Dispose
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Dispose
  parent: VDS.RDF.GraphPersistenceWrapper
  name: Dispose()
  nameWithType: GraphPersistenceWrapper.Dispose()
  fullName: VDS.RDF.GraphPersistenceWrapper.Dispose()
  spec.csharp:
  - uid: VDS.RDF.GraphPersistenceWrapper.Dispose
    name: Dispose
    nameWithType: GraphPersistenceWrapper.Dispose
    fullName: VDS.RDF.GraphPersistenceWrapper.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphPersistenceWrapper.Dispose
    name: Dispose
    nameWithType: GraphPersistenceWrapper.Dispose
    fullName: VDS.RDF.GraphPersistenceWrapper.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.Finalize*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.Finalize
  name: Finalize
  nameWithType: GraphPersistenceWrapper.Finalize
  fullName: VDS.RDF.GraphPersistenceWrapper.Finalize
- uid: VDS.RDF.GraphPersistenceWrapper.BaseUri*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.BaseUri
  name: BaseUri
  nameWithType: GraphPersistenceWrapper.BaseUri
  fullName: VDS.RDF.GraphPersistenceWrapper.BaseUri
- uid: VDS.RDF.IGraph.BaseUri
  commentId: P:VDS.RDF.IGraph.BaseUri
  parent: VDS.RDF.IGraph
  name: BaseUri
  nameWithType: IGraph.BaseUri
  fullName: VDS.RDF.IGraph.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.GraphPersistenceWrapper.IsEmpty*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.IsEmpty
  name: IsEmpty
  nameWithType: GraphPersistenceWrapper.IsEmpty
  fullName: VDS.RDF.GraphPersistenceWrapper.IsEmpty
- uid: VDS.RDF.IGraph.IsEmpty
  commentId: P:VDS.RDF.IGraph.IsEmpty
  parent: VDS.RDF.IGraph
  name: IsEmpty
  nameWithType: IGraph.IsEmpty
  fullName: VDS.RDF.IGraph.IsEmpty
- uid: VDS.RDF.GraphPersistenceWrapper.NamespaceMap*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.NamespaceMap
  name: NamespaceMap
  nameWithType: GraphPersistenceWrapper.NamespaceMap
  fullName: VDS.RDF.GraphPersistenceWrapper.NamespaceMap
- uid: VDS.RDF.IGraph.NamespaceMap
  commentId: P:VDS.RDF.IGraph.NamespaceMap
  parent: VDS.RDF.IGraph
  name: NamespaceMap
  nameWithType: IGraph.NamespaceMap
  fullName: VDS.RDF.IGraph.NamespaceMap
- uid: VDS.RDF.INamespaceMapper
  commentId: T:VDS.RDF.INamespaceMapper
  parent: VDS.RDF
  name: INamespaceMapper
  nameWithType: INamespaceMapper
  fullName: VDS.RDF.INamespaceMapper
- uid: VDS.RDF.GraphPersistenceWrapper.Nodes*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.Nodes
  name: Nodes
  nameWithType: GraphPersistenceWrapper.Nodes
  fullName: VDS.RDF.GraphPersistenceWrapper.Nodes
- uid: VDS.RDF.IGraph.Nodes
  commentId: P:VDS.RDF.IGraph.Nodes
  parent: VDS.RDF.IGraph
  name: Nodes
  nameWithType: IGraph.Nodes
  fullName: VDS.RDF.IGraph.Nodes
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INode>
  nameWithType: IEnumerable<INode>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.INode>
  nameWithType.vb: IEnumerable(Of INode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.INode)
  name.vb: IEnumerable(Of INode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.GraphPersistenceWrapper.AllNodes*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.AllNodes
  name: AllNodes
  nameWithType: GraphPersistenceWrapper.AllNodes
  fullName: VDS.RDF.GraphPersistenceWrapper.AllNodes
- uid: VDS.RDF.IGraph.AllNodes
  commentId: P:VDS.RDF.IGraph.AllNodes
  parent: VDS.RDF.IGraph
  name: AllNodes
  nameWithType: IGraph.AllNodes
  fullName: VDS.RDF.IGraph.AllNodes
- uid: VDS.RDF.GraphPersistenceWrapper.Triples*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.Triples
  name: Triples
  nameWithType: GraphPersistenceWrapper.Triples
  fullName: VDS.RDF.GraphPersistenceWrapper.Triples
- uid: VDS.RDF.IGraph.Triples
  commentId: P:VDS.RDF.IGraph.Triples
  parent: VDS.RDF.IGraph
  name: Triples
  nameWithType: IGraph.Triples
  fullName: VDS.RDF.IGraph.Triples
- uid: VDS.RDF.BaseTripleCollection
  commentId: T:VDS.RDF.BaseTripleCollection
  parent: VDS.RDF
  name: BaseTripleCollection
  nameWithType: BaseTripleCollection
  fullName: VDS.RDF.BaseTripleCollection
- uid: VDS.RDF.GraphPersistenceWrapper.Assert*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.Assert
  name: Assert
  nameWithType: GraphPersistenceWrapper.Assert
  fullName: VDS.RDF.GraphPersistenceWrapper.Assert
- uid: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  parent: VDS.RDF.IGraph
  name: Assert(Triple)
  nameWithType: IGraph.Assert(Triple)
  fullName: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Assert(IEnumerable<Triple>)
  nameWithType: IGraph.Assert(IEnumerable<Triple>)
  fullName: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: IGraph.Assert(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Assert(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Triple>
  nameWithType: IEnumerable<Triple>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Triple>
  nameWithType.vb: IEnumerable(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple)
  name.vb: IEnumerable(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.Retract*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.Retract
  name: Retract
  nameWithType: GraphPersistenceWrapper.Retract
  fullName: VDS.RDF.GraphPersistenceWrapper.Retract
- uid: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  parent: VDS.RDF.IGraph
  name: Retract(Triple)
  nameWithType: IGraph.Retract(Triple)
  fullName: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Retract(IEnumerable<Triple>)
  nameWithType: IGraph.Retract(IEnumerable<Triple>)
  fullName: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: IGraph.Retract(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Retract(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.Clear*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.Clear
  name: Clear
  nameWithType: GraphPersistenceWrapper.Clear
  fullName: VDS.RDF.GraphPersistenceWrapper.Clear
- uid: VDS.RDF.IGraph.Clear
  commentId: M:VDS.RDF.IGraph.Clear
  parent: VDS.RDF.IGraph
  name: Clear()
  nameWithType: IGraph.Clear()
  fullName: VDS.RDF.IGraph.Clear()
  spec.csharp:
  - uid: VDS.RDF.IGraph.Clear
    name: Clear
    nameWithType: IGraph.Clear
    fullName: VDS.RDF.IGraph.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Clear
    name: Clear
    nameWithType: IGraph.Clear
    fullName: VDS.RDF.IGraph.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.CreateBlankNode*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.CreateBlankNode
  name: CreateBlankNode
  nameWithType: GraphPersistenceWrapper.CreateBlankNode
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateBlankNode
- uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateBlankNode(String)
  nameWithType: INodeFactory.CreateBlankNode(String)
  fullName: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.IBlankNode
  commentId: T:VDS.RDF.IBlankNode
  parent: VDS.RDF
  name: IBlankNode
  nameWithType: IBlankNode
  fullName: VDS.RDF.IBlankNode
- uid: VDS.RDF.INodeFactory.CreateBlankNode
  commentId: M:VDS.RDF.INodeFactory.CreateBlankNode
  parent: VDS.RDF.INodeFactory
  name: CreateBlankNode()
  nameWithType: INodeFactory.CreateBlankNode()
  fullName: VDS.RDF.INodeFactory.CreateBlankNode()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.GetNextBlankNodeID*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetNextBlankNodeID
  name: GetNextBlankNodeID
  nameWithType: GraphPersistenceWrapper.GetNextBlankNodeID
  fullName: VDS.RDF.GraphPersistenceWrapper.GetNextBlankNodeID
- uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
  commentId: M:VDS.RDF.INodeFactory.GetNextBlankNodeID
  parent: VDS.RDF.INodeFactory
  name: GetNextBlankNodeID()
  nameWithType: INodeFactory.GetNextBlankNodeID()
  fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
    name: GetNextBlankNodeID
    nameWithType: INodeFactory.GetNextBlankNodeID
    fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
    name: GetNextBlankNodeID
    nameWithType: INodeFactory.GetNextBlankNodeID
    fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode
  name: CreateGraphLiteralNode
  nameWithType: GraphPersistenceWrapper.CreateGraphLiteralNode
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateGraphLiteralNode
- uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  parent: VDS.RDF.INodeFactory
  name: CreateGraphLiteralNode(IGraph)
  nameWithType: INodeFactory.CreateGraphLiteralNode(IGraph)
  fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraphLiteralNode
  commentId: T:VDS.RDF.IGraphLiteralNode
  parent: VDS.RDF
  name: IGraphLiteralNode
  nameWithType: IGraphLiteralNode
  fullName: VDS.RDF.IGraphLiteralNode
- uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  commentId: M:VDS.RDF.INodeFactory.CreateGraphLiteralNode
  parent: VDS.RDF.INodeFactory
  name: CreateGraphLiteralNode()
  nameWithType: INodeFactory.CreateGraphLiteralNode()
  fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode
  name: CreateLiteralNode
  nameWithType: GraphPersistenceWrapper.CreateLiteralNode
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateLiteralNode
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String)
  nameWithType: INodeFactory.CreateLiteralNode(String)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String, Uri)
  nameWithType: INodeFactory.CreateLiteralNode(String, Uri)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String, String)
  nameWithType: INodeFactory.CreateLiteralNode(String, String)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.CreateUriNode*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.CreateUriNode
  name: CreateUriNode
  nameWithType: GraphPersistenceWrapper.CreateUriNode
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateUriNode
- uid: VDS.RDF.IGraph.CreateUriNode
  commentId: M:VDS.RDF.IGraph.CreateUriNode
  parent: VDS.RDF.IGraph
  name: CreateUriNode()
  nameWithType: IGraph.CreateUriNode()
  fullName: VDS.RDF.IGraph.CreateUriNode()
  spec.csharp:
  - uid: VDS.RDF.IGraph.CreateUriNode
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.CreateUriNode
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IUriNode
  commentId: T:VDS.RDF.IUriNode
  parent: VDS.RDF
  name: IUriNode
  nameWithType: IUriNode
  fullName: VDS.RDF.IUriNode
- uid: VDS.RDF.IGraph.CreateUriNode(System.String)
  commentId: M:VDS.RDF.IGraph.CreateUriNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: CreateUriNode(String)
  nameWithType: IGraph.CreateUriNode(String)
  fullName: VDS.RDF.IGraph.CreateUriNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.CreateUriNode(System.String)
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.CreateUriNode(System.String)
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  commentId: M:VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateUriNode(Uri)
  nameWithType: INodeFactory.CreateUriNode(Uri)
  fullName: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
    name: CreateUriNode
    nameWithType: INodeFactory.CreateUriNode
    fullName: VDS.RDF.INodeFactory.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
    name: CreateUriNode
    nameWithType: INodeFactory.CreateUriNode
    fullName: VDS.RDF.INodeFactory.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.CreateVariableNode*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.CreateVariableNode
  name: CreateVariableNode
  nameWithType: GraphPersistenceWrapper.CreateVariableNode
  fullName: VDS.RDF.GraphPersistenceWrapper.CreateVariableNode
- uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateVariableNode(String)
  nameWithType: INodeFactory.CreateVariableNode(String)
  fullName: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
    name: CreateVariableNode
    nameWithType: INodeFactory.CreateVariableNode
    fullName: VDS.RDF.INodeFactory.CreateVariableNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
    name: CreateVariableNode
    nameWithType: INodeFactory.CreateVariableNode
    fullName: VDS.RDF.INodeFactory.CreateVariableNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IVariableNode
  commentId: T:VDS.RDF.IVariableNode
  parent: VDS.RDF
  name: IVariableNode
  nameWithType: IVariableNode
  fullName: VDS.RDF.IVariableNode
- uid: VDS.RDF.GraphPersistenceWrapper.GetBlankNode*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetBlankNode
  name: GetBlankNode
  nameWithType: GraphPersistenceWrapper.GetBlankNode
  fullName: VDS.RDF.GraphPersistenceWrapper.GetBlankNode
- uid: VDS.RDF.IGraph.GetBlankNode(System.String)
  commentId: M:VDS.RDF.IGraph.GetBlankNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetBlankNode(String)
  nameWithType: IGraph.GetBlankNode(String)
  fullName: VDS.RDF.IGraph.GetBlankNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetBlankNode(System.String)
    name: GetBlankNode
    nameWithType: IGraph.GetBlankNode
    fullName: VDS.RDF.IGraph.GetBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetBlankNode(System.String)
    name: GetBlankNode
    nameWithType: IGraph.GetBlankNode
    fullName: VDS.RDF.IGraph.GetBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.GetLiteralNode*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetLiteralNode
  name: GetLiteralNode
  nameWithType: GraphPersistenceWrapper.GetLiteralNode
  fullName: VDS.RDF.GraphPersistenceWrapper.GetLiteralNode
- uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetLiteralNode(String, String)
  nameWithType: IGraph.GetLiteralNode(String, String)
  fullName: VDS.RDF.IGraph.GetLiteralNode(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetLiteralNode(System.String)
  commentId: M:VDS.RDF.IGraph.GetLiteralNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetLiteralNode(String)
  nameWithType: IGraph.GetLiteralNode(String)
  fullName: VDS.RDF.IGraph.GetLiteralNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetLiteralNode(String, Uri)
  nameWithType: IGraph.GetLiteralNode(String, Uri)
  fullName: VDS.RDF.IGraph.GetLiteralNode(System.String, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriples*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetTriples
  name: GetTriples
  nameWithType: GraphPersistenceWrapper.GetTriples
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriples
- uid: VDS.RDF.IGraph.GetTriples(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriples(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriples(Uri)
  nameWithType: IGraph.GetTriples(Uri)
  fullName: VDS.RDF.IGraph.GetTriples(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriples(System.Uri)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriples(System.Uri)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriples(INode)
  nameWithType: IGraph.GetTriples(INode)
  fullName: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject
  name: GetTriplesWithObject
  nameWithType: GraphPersistenceWrapper.GetTriplesWithObject
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithObject
- uid: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriplesWithObject(Uri)
  nameWithType: IGraph.GetTriplesWithObject(Uri)
  fullName: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithObject(INode)
  nameWithType: IGraph.GetTriplesWithObject(INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate
  name: GetTriplesWithPredicate
  nameWithType: GraphPersistenceWrapper.GetTriplesWithPredicate
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicate
- uid: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithPredicate(INode)
  nameWithType: IGraph.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriplesWithPredicate(Uri)
  nameWithType: IGraph.GetTriplesWithPredicate(Uri)
  fullName: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject
  name: GetTriplesWithSubject
  nameWithType: GraphPersistenceWrapper.GetTriplesWithSubject
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubject
- uid: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithSubject(INode)
  nameWithType: IGraph.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriplesWithSubject(Uri)
  nameWithType: IGraph.GetTriplesWithSubject(Uri)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectPredicate*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectPredicate
  name: GetTriplesWithSubjectPredicate
  nameWithType: GraphPersistenceWrapper.GetTriplesWithSubjectPredicate
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectPredicate
- uid: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: IGraph.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: IGraph.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: IGraph.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectObject*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectObject
  name: GetTriplesWithSubjectObject
  nameWithType: GraphPersistenceWrapper.GetTriplesWithSubjectObject
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithSubjectObject
- uid: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: IGraph.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: IGraph.GetTriplesWithSubjectObject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: IGraph.GetTriplesWithSubjectObject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicateObject*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicateObject
  name: GetTriplesWithPredicateObject
  nameWithType: GraphPersistenceWrapper.GetTriplesWithPredicateObject
  fullName: VDS.RDF.GraphPersistenceWrapper.GetTriplesWithPredicateObject
- uid: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: IGraph.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: IGraph.GetTriplesWithPredicateObject
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: IGraph.GetTriplesWithPredicateObject
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.GetUriNode*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetUriNode
  name: GetUriNode
  nameWithType: GraphPersistenceWrapper.GetUriNode
  fullName: VDS.RDF.GraphPersistenceWrapper.GetUriNode
- uid: VDS.RDF.IGraph.GetUriNode(System.String)
  commentId: M:VDS.RDF.IGraph.GetUriNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetUriNode(String)
  nameWithType: IGraph.GetUriNode(String)
  fullName: VDS.RDF.IGraph.GetUriNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetUriNode(System.String)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetUriNode(System.String)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetUriNode(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetUriNode(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetUriNode(Uri)
  nameWithType: IGraph.GetUriNode(Uri)
  fullName: VDS.RDF.IGraph.GetUriNode(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetUriNode(System.Uri)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetUriNode(System.Uri)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.ContainsTriple*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.ContainsTriple
  name: ContainsTriple
  nameWithType: GraphPersistenceWrapper.ContainsTriple
  fullName: VDS.RDF.GraphPersistenceWrapper.ContainsTriple
- uid: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.IGraph
  name: ContainsTriple(Triple)
  nameWithType: IGraph.ContainsTriple(Triple)
  fullName: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: IGraph.ContainsTriple
    fullName: VDS.RDF.IGraph.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: IGraph.ContainsTriple
    fullName: VDS.RDF.IGraph.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.Merge*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.Merge
  name: Merge
  nameWithType: GraphPersistenceWrapper.Merge
  fullName: VDS.RDF.GraphPersistenceWrapper.Merge
- uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: Merge(IGraph)
  nameWithType: IGraph.Merge(IGraph)
  fullName: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.MergeRequested
  commentId: E:VDS.RDF.GraphPersistenceWrapper.MergeRequested
  parent: VDS.RDF.GraphPersistenceWrapper
  name: MergeRequested
  nameWithType: GraphPersistenceWrapper.MergeRequested
  fullName: VDS.RDF.GraphPersistenceWrapper.MergeRequested
- uid: VDS.RDF.GraphPersistenceWrapper.Merged
  commentId: E:VDS.RDF.GraphPersistenceWrapper.Merged
  parent: VDS.RDF.GraphPersistenceWrapper
  name: Merged
  nameWithType: GraphPersistenceWrapper.Merged
  fullName: VDS.RDF.GraphPersistenceWrapper.Merged
- uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Merge(IGraph, Boolean)
  nameWithType: IGraph.Merge(IGraph, Boolean)
  fullName: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.Equals*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.Equals
  name: Equals
  nameWithType: GraphPersistenceWrapper.Equals
  fullName: VDS.RDF.GraphPersistenceWrapper.Equals
- uid: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Equals(IGraph, Dictionary<INode, INode>)
  nameWithType: IGraph.Equals(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: IGraph.Equals(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: Equals(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: Equals
    nameWithType: IGraph.Equals
    fullName: VDS.RDF.IGraph.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: Equals
    nameWithType: IGraph.Equals
    fullName: VDS.RDF.IGraph.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
  commentId: T:System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<INode, INode>
  nameWithType: Dictionary<INode, INode>
  fullName: System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>
  nameWithType.vb: Dictionary(Of INode, INode)
  fullName.vb: System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode)
  name.vb: Dictionary(Of INode, INode)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf
  name: IsSubGraphOf
  nameWithType: GraphPersistenceWrapper.IsSubGraphOf
  fullName: VDS.RDF.GraphPersistenceWrapper.IsSubGraphOf
- uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: IsSubGraphOf(IGraph)
  nameWithType: IGraph.IsSubGraphOf(IGraph)
  fullName: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: IsSubGraphOf(IGraph, Dictionary<INode, INode>)
  nameWithType: IGraph.IsSubGraphOf(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: IGraph.IsSubGraphOf(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: IsSubGraphOf(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.HasSubGraph*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.HasSubGraph
  name: HasSubGraph
  nameWithType: GraphPersistenceWrapper.HasSubGraph
  fullName: VDS.RDF.GraphPersistenceWrapper.HasSubGraph
- uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: HasSubGraph(IGraph)
  nameWithType: IGraph.HasSubGraph(IGraph)
  fullName: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: HasSubGraph(IGraph, Dictionary<INode, INode>)
  nameWithType: IGraph.HasSubGraph(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: IGraph.HasSubGraph(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: HasSubGraph(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.Difference*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.Difference
  name: Difference
  nameWithType: GraphPersistenceWrapper.Difference
  fullName: VDS.RDF.GraphPersistenceWrapper.Difference
- uid: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: Difference(IGraph)
  nameWithType: IGraph.Difference(IGraph)
  fullName: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
    name: Difference
    nameWithType: IGraph.Difference
    fullName: VDS.RDF.IGraph.Difference
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
    name: Difference
    nameWithType: IGraph.Difference
    fullName: VDS.RDF.IGraph.Difference
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphDiffReport
  commentId: T:VDS.RDF.GraphDiffReport
  parent: VDS.RDF
  name: GraphDiffReport
  nameWithType: GraphDiffReport
  fullName: VDS.RDF.GraphDiffReport
- uid: VDS.RDF.GraphPersistenceWrapper.ResolveQName*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.ResolveQName
  name: ResolveQName
  nameWithType: GraphPersistenceWrapper.ResolveQName
  fullName: VDS.RDF.GraphPersistenceWrapper.ResolveQName
- uid: VDS.RDF.IGraph.ResolveQName(System.String)
  commentId: M:VDS.RDF.IGraph.ResolveQName(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: ResolveQName(String)
  nameWithType: IGraph.ResolveQName(String)
  fullName: VDS.RDF.IGraph.ResolveQName(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.ResolveQName(System.String)
    name: ResolveQName
    nameWithType: IGraph.ResolveQName
    fullName: VDS.RDF.IGraph.ResolveQName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.ResolveQName(System.String)
    name: ResolveQName
    nameWithType: IGraph.ResolveQName
    fullName: VDS.RDF.IGraph.ResolveQName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.TripleAsserted
  commentId: E:VDS.RDF.IGraph.TripleAsserted
  parent: VDS.RDF.IGraph
  name: TripleAsserted
  nameWithType: IGraph.TripleAsserted
  fullName: VDS.RDF.IGraph.TripleAsserted
- uid: VDS.RDF.TripleEventHandler
  commentId: T:VDS.RDF.TripleEventHandler
  parent: VDS.RDF
  name: TripleEventHandler
  nameWithType: TripleEventHandler
  fullName: VDS.RDF.TripleEventHandler
- uid: VDS.RDF.IGraph.TripleRetracted
  commentId: E:VDS.RDF.IGraph.TripleRetracted
  parent: VDS.RDF.IGraph
  name: TripleRetracted
  nameWithType: IGraph.TripleRetracted
  fullName: VDS.RDF.IGraph.TripleRetracted
- uid: VDS.RDF.IGraph.Changed
  commentId: E:VDS.RDF.IGraph.Changed
  parent: VDS.RDF.IGraph
  name: Changed
  nameWithType: IGraph.Changed
  fullName: VDS.RDF.IGraph.Changed
- uid: VDS.RDF.GraphEventHandler
  commentId: T:VDS.RDF.GraphEventHandler
  parent: VDS.RDF
  name: GraphEventHandler
  nameWithType: GraphEventHandler
  fullName: VDS.RDF.GraphEventHandler
- uid: VDS.RDF.IGraph.ClearRequested
  commentId: E:VDS.RDF.IGraph.ClearRequested
  parent: VDS.RDF.IGraph
  name: ClearRequested
  nameWithType: IGraph.ClearRequested
  fullName: VDS.RDF.IGraph.ClearRequested
- uid: VDS.RDF.CancellableGraphEventHandler
  commentId: T:VDS.RDF.CancellableGraphEventHandler
  parent: VDS.RDF
  name: CancellableGraphEventHandler
  nameWithType: CancellableGraphEventHandler
  fullName: VDS.RDF.CancellableGraphEventHandler
- uid: VDS.RDF.IGraph.Cleared
  commentId: E:VDS.RDF.IGraph.Cleared
  parent: VDS.RDF.IGraph
  name: Cleared
  nameWithType: IGraph.Cleared
  fullName: VDS.RDF.IGraph.Cleared
- uid: VDS.RDF.IGraph.MergeRequested
  commentId: E:VDS.RDF.IGraph.MergeRequested
  parent: VDS.RDF.IGraph
  name: MergeRequested
  nameWithType: IGraph.MergeRequested
  fullName: VDS.RDF.IGraph.MergeRequested
- uid: VDS.RDF.IGraph.Merged
  commentId: E:VDS.RDF.IGraph.Merged
  parent: VDS.RDF.IGraph
  name: Merged
  nameWithType: IGraph.Merged
  fullName: VDS.RDF.IGraph.Merged
- uid: VDS.RDF.BaseTripleCollection.TripleAdded
  commentId: E:VDS.RDF.BaseTripleCollection.TripleAdded
  parent: VDS.RDF.BaseTripleCollection
  name: TripleAdded
  nameWithType: BaseTripleCollection.TripleAdded
  fullName: VDS.RDF.BaseTripleCollection.TripleAdded
- uid: VDS.RDF.GraphPersistenceWrapper.TripleAsserted
  commentId: E:VDS.RDF.GraphPersistenceWrapper.TripleAsserted
  parent: VDS.RDF.GraphPersistenceWrapper
  name: TripleAsserted
  nameWithType: GraphPersistenceWrapper.TripleAsserted
  fullName: VDS.RDF.GraphPersistenceWrapper.TripleAsserted
- uid: VDS.RDF.GraphPersistenceWrapper.OnTripleAsserted*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.OnTripleAsserted
  name: OnTripleAsserted
  nameWithType: GraphPersistenceWrapper.OnTripleAsserted
  fullName: VDS.RDF.GraphPersistenceWrapper.OnTripleAsserted
- uid: VDS.RDF.TripleEventArgs
  commentId: T:VDS.RDF.TripleEventArgs
  parent: VDS.RDF
  name: TripleEventArgs
  nameWithType: TripleEventArgs
  fullName: VDS.RDF.TripleEventArgs
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted
  name: RaiseTripleAsserted
  nameWithType: GraphPersistenceWrapper.RaiseTripleAsserted
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseTripleAsserted
- uid: VDS.RDF.BaseTripleCollection.TripleRemoved
  commentId: E:VDS.RDF.BaseTripleCollection.TripleRemoved
  parent: VDS.RDF.BaseTripleCollection
  name: TripleRemoved
  nameWithType: BaseTripleCollection.TripleRemoved
  fullName: VDS.RDF.BaseTripleCollection.TripleRemoved
- uid: VDS.RDF.GraphPersistenceWrapper.TripleRetracted
  commentId: E:VDS.RDF.GraphPersistenceWrapper.TripleRetracted
  parent: VDS.RDF.GraphPersistenceWrapper
  name: TripleRetracted
  nameWithType: GraphPersistenceWrapper.TripleRetracted
  fullName: VDS.RDF.GraphPersistenceWrapper.TripleRetracted
- uid: VDS.RDF.GraphPersistenceWrapper.OnTripleRetracted*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.OnTripleRetracted
  name: OnTripleRetracted
  nameWithType: GraphPersistenceWrapper.OnTripleRetracted
  fullName: VDS.RDF.GraphPersistenceWrapper.OnTripleRetracted
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted
  name: RaiseTripleRetracted
  nameWithType: GraphPersistenceWrapper.RaiseTripleRetracted
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseTripleRetracted
- uid: VDS.RDF.GraphPersistenceWrapper.Changed
  commentId: E:VDS.RDF.GraphPersistenceWrapper.Changed
  parent: VDS.RDF.GraphPersistenceWrapper
  name: Changed
  nameWithType: GraphPersistenceWrapper.Changed
  fullName: VDS.RDF.GraphPersistenceWrapper.Changed
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged
  name: RaiseGraphChanged
  nameWithType: GraphPersistenceWrapper.RaiseGraphChanged
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseGraphChanged
- uid: VDS.RDF.GraphPersistenceWrapper.ClearRequested
  commentId: E:VDS.RDF.GraphPersistenceWrapper.ClearRequested
  parent: VDS.RDF.GraphPersistenceWrapper
  name: ClearRequested
  nameWithType: GraphPersistenceWrapper.ClearRequested
  fullName: VDS.RDF.GraphPersistenceWrapper.ClearRequested
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseClearRequested*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.RaiseClearRequested
  name: RaiseClearRequested
  nameWithType: GraphPersistenceWrapper.RaiseClearRequested
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseClearRequested
- uid: VDS.RDF.GraphPersistenceWrapper.Cleared
  commentId: E:VDS.RDF.GraphPersistenceWrapper.Cleared
  parent: VDS.RDF.GraphPersistenceWrapper
  name: Cleared
  nameWithType: GraphPersistenceWrapper.Cleared
  fullName: VDS.RDF.GraphPersistenceWrapper.Cleared
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseCleared*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.RaiseCleared
  name: RaiseCleared
  nameWithType: GraphPersistenceWrapper.RaiseCleared
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseCleared
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseMergeRequested*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.RaiseMergeRequested
  name: RaiseMergeRequested
  nameWithType: GraphPersistenceWrapper.RaiseMergeRequested
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseMergeRequested
- uid: VDS.RDF.GraphPersistenceWrapper.RaiseMerged*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.RaiseMerged
  name: RaiseMerged
  nameWithType: GraphPersistenceWrapper.RaiseMerged
  fullName: VDS.RDF.GraphPersistenceWrapper.RaiseMerged
- uid: VDS.RDF.Query.SparqlView
  commentId: T:VDS.RDF.Query.SparqlView
  name: SparqlView
  nameWithType: SparqlView
  fullName: VDS.RDF.Query.SparqlView
- uid: VDS.RDF.GraphPersistenceWrapper.AttachEventHandlers*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.AttachEventHandlers
  name: AttachEventHandlers
  nameWithType: GraphPersistenceWrapper.AttachEventHandlers
  fullName: VDS.RDF.GraphPersistenceWrapper.AttachEventHandlers
- uid: VDS.RDF.GraphPersistenceWrapper.DetachEventHandlers*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.DetachEventHandlers
  name: DetachEventHandlers
  nameWithType: GraphPersistenceWrapper.DetachEventHandlers
  fullName: VDS.RDF.GraphPersistenceWrapper.DetachEventHandlers
- uid: VDS.RDF.GraphPersistenceWrapper.Flush*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.Flush
  name: Flush
  nameWithType: GraphPersistenceWrapper.Flush
  fullName: VDS.RDF.GraphPersistenceWrapper.Flush
- uid: VDS.RDF.ITransactionalGraph.Flush
  commentId: M:VDS.RDF.ITransactionalGraph.Flush
  parent: VDS.RDF.ITransactionalGraph
  name: Flush()
  nameWithType: ITransactionalGraph.Flush()
  fullName: VDS.RDF.ITransactionalGraph.Flush()
  spec.csharp:
  - uid: VDS.RDF.ITransactionalGraph.Flush
    name: Flush
    nameWithType: ITransactionalGraph.Flush
    fullName: VDS.RDF.ITransactionalGraph.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.ITransactionalGraph.Flush
    name: Flush
    nameWithType: ITransactionalGraph.Flush
    fullName: VDS.RDF.ITransactionalGraph.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.Discard*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.Discard
  name: Discard
  nameWithType: GraphPersistenceWrapper.Discard
  fullName: VDS.RDF.GraphPersistenceWrapper.Discard
- uid: VDS.RDF.ITransactionalGraph.Discard
  commentId: M:VDS.RDF.ITransactionalGraph.Discard
  parent: VDS.RDF.ITransactionalGraph
  name: Discard()
  nameWithType: ITransactionalGraph.Discard()
  fullName: VDS.RDF.ITransactionalGraph.Discard()
  spec.csharp:
  - uid: VDS.RDF.ITransactionalGraph.Discard
    name: Discard
    nameWithType: ITransactionalGraph.Discard
    fullName: VDS.RDF.ITransactionalGraph.Discard
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.ITransactionalGraph.Discard
    name: Discard
    nameWithType: ITransactionalGraph.Discard
    fullName: VDS.RDF.ITransactionalGraph.Discard
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.Flush
  commentId: M:VDS.RDF.GraphPersistenceWrapper.Flush
  parent: VDS.RDF.GraphPersistenceWrapper
  name: Flush()
  nameWithType: GraphPersistenceWrapper.Flush()
  fullName: VDS.RDF.GraphPersistenceWrapper.Flush()
  spec.csharp:
  - uid: VDS.RDF.GraphPersistenceWrapper.Flush
    name: Flush
    nameWithType: GraphPersistenceWrapper.Flush
    fullName: VDS.RDF.GraphPersistenceWrapper.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphPersistenceWrapper.Flush
    name: Flush
    nameWithType: GraphPersistenceWrapper.Flush
    fullName: VDS.RDF.GraphPersistenceWrapper.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.SupportsTriplePersistence*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.SupportsTriplePersistence
  name: SupportsTriplePersistence
  nameWithType: GraphPersistenceWrapper.SupportsTriplePersistence
  fullName: VDS.RDF.GraphPersistenceWrapper.SupportsTriplePersistence
- uid: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples
  name: PersistInsertedTriples
  nameWithType: GraphPersistenceWrapper.PersistInsertedTriples
  fullName: VDS.RDF.GraphPersistenceWrapper.PersistInsertedTriples
- uid: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples
  name: PersistDeletedTriples
  nameWithType: GraphPersistenceWrapper.PersistDeletedTriples
  fullName: VDS.RDF.GraphPersistenceWrapper.PersistDeletedTriples
- uid: VDS.RDF.GraphPersistenceWrapper.PersistGraph*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.PersistGraph
  name: PersistGraph
  nameWithType: GraphPersistenceWrapper.PersistGraph
  fullName: VDS.RDF.GraphPersistenceWrapper.PersistGraph
- uid: VDS.RDF.GraphPersistenceWrapper.Dispose*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.Dispose
  name: Dispose
  nameWithType: GraphPersistenceWrapper.Dispose
  fullName: VDS.RDF.GraphPersistenceWrapper.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphPersistenceWrapper.GetObjectData*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetObjectData
  name: GetObjectData
  nameWithType: GraphPersistenceWrapper.GetObjectData
  fullName: VDS.RDF.GraphPersistenceWrapper.GetObjectData
- uid: VDS.RDF.GraphPersistenceWrapper.GetSchema*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.GetSchema
  name: GetSchema
  nameWithType: GraphPersistenceWrapper.GetSchema
  fullName: VDS.RDF.GraphPersistenceWrapper.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: true
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: VDS.RDF.GraphPersistenceWrapper.ReadXml*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.ReadXml
  name: ReadXml
  nameWithType: GraphPersistenceWrapper.ReadXml
  fullName: VDS.RDF.GraphPersistenceWrapper.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: VDS.RDF.GraphPersistenceWrapper.WriteXml*
  commentId: Overload:VDS.RDF.GraphPersistenceWrapper.WriteXml
  name: WriteXml
  nameWithType: GraphPersistenceWrapper.WriteXml
  fullName: VDS.RDF.GraphPersistenceWrapper.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
