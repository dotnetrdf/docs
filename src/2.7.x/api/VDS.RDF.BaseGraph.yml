### YamlMime:ManagedReference
items:
- uid: VDS.RDF.BaseGraph
  commentId: T:VDS.RDF.BaseGraph
  id: BaseGraph
  parent: VDS.RDF
  children:
  - VDS.RDF.BaseGraph.#ctor
  - VDS.RDF.BaseGraph.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.BaseGraph.#ctor(VDS.RDF.BaseTripleCollection)
  - VDS.RDF.BaseGraph._baseuri
  - VDS.RDF.BaseGraph._bnodemapper
  - VDS.RDF.BaseGraph._nsmapper
  - VDS.RDF.BaseGraph._triples
  - VDS.RDF.BaseGraph.AllNodes
  - VDS.RDF.BaseGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.BaseGraph.Assert(VDS.RDF.Triple)
  - VDS.RDF.BaseGraph.AttachEventHandlers(VDS.RDF.BaseTripleCollection)
  - VDS.RDF.BaseGraph.BaseUri
  - VDS.RDF.BaseGraph.Changed
  - VDS.RDF.BaseGraph.Clear
  - VDS.RDF.BaseGraph.Cleared
  - VDS.RDF.BaseGraph.ClearRequested
  - VDS.RDF.BaseGraph.ContainsTriple(VDS.RDF.Triple)
  - VDS.RDF.BaseGraph.CreateBlankNode
  - VDS.RDF.BaseGraph.CreateBlankNode(System.String)
  - VDS.RDF.BaseGraph.CreateGraphLiteralNode
  - VDS.RDF.BaseGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  - VDS.RDF.BaseGraph.CreateLiteralNode(System.String)
  - VDS.RDF.BaseGraph.CreateLiteralNode(System.String,System.String)
  - VDS.RDF.BaseGraph.CreateLiteralNode(System.String,System.Uri)
  - VDS.RDF.BaseGraph.CreateUriNode
  - VDS.RDF.BaseGraph.CreateUriNode(System.String)
  - VDS.RDF.BaseGraph.CreateUriNode(System.Uri)
  - VDS.RDF.BaseGraph.CreateVariableNode(System.String)
  - VDS.RDF.BaseGraph.DetachEventHandlers(VDS.RDF.BaseTripleCollection)
  - VDS.RDF.BaseGraph.Difference(VDS.RDF.IGraph)
  - VDS.RDF.BaseGraph.Dispose
  - VDS.RDF.BaseGraph.Equals(System.Object)
  - VDS.RDF.BaseGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.BaseGraph.GetBlankNode(System.String)
  - VDS.RDF.BaseGraph.GetLiteralNode(System.String)
  - VDS.RDF.BaseGraph.GetLiteralNode(System.String,System.String)
  - VDS.RDF.BaseGraph.GetLiteralNode(System.String,System.Uri)
  - VDS.RDF.BaseGraph.GetNextBlankNodeID
  - VDS.RDF.BaseGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.BaseGraph.GetSchema
  - VDS.RDF.BaseGraph.GetTriples(System.Uri)
  - VDS.RDF.BaseGraph.GetTriples(VDS.RDF.INode)
  - VDS.RDF.BaseGraph.GetTriplesWithObject(System.Uri)
  - VDS.RDF.BaseGraph.GetTriplesWithObject(VDS.RDF.INode)
  - VDS.RDF.BaseGraph.GetTriplesWithPredicate(System.Uri)
  - VDS.RDF.BaseGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  - VDS.RDF.BaseGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.BaseGraph.GetTriplesWithSubject(System.Uri)
  - VDS.RDF.BaseGraph.GetTriplesWithSubject(VDS.RDF.INode)
  - VDS.RDF.BaseGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.BaseGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.BaseGraph.GetUriNode(System.String)
  - VDS.RDF.BaseGraph.GetUriNode(System.Uri)
  - VDS.RDF.BaseGraph.HasSubGraph(VDS.RDF.IGraph)
  - VDS.RDF.BaseGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.BaseGraph.IsEmpty
  - VDS.RDF.BaseGraph.IsSubGraphOf(VDS.RDF.IGraph)
  - VDS.RDF.BaseGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.BaseGraph.Merge(VDS.RDF.IGraph)
  - VDS.RDF.BaseGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.BaseGraph.Merged
  - VDS.RDF.BaseGraph.MergeRequested
  - VDS.RDF.BaseGraph.NamespaceMap
  - VDS.RDF.BaseGraph.Nodes
  - VDS.RDF.BaseGraph.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  - VDS.RDF.BaseGraph.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  - VDS.RDF.BaseGraph.RaiseCleared
  - VDS.RDF.BaseGraph.RaiseClearRequested
  - VDS.RDF.BaseGraph.RaiseGraphChanged
  - VDS.RDF.BaseGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  - VDS.RDF.BaseGraph.RaiseMerged
  - VDS.RDF.BaseGraph.RaiseMergeRequested
  - VDS.RDF.BaseGraph.RaiseTripleAsserted(VDS.RDF.Triple)
  - VDS.RDF.BaseGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  - VDS.RDF.BaseGraph.RaiseTripleRetracted(VDS.RDF.Triple)
  - VDS.RDF.BaseGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  - VDS.RDF.BaseGraph.ReadXml(System.Xml.XmlReader)
  - VDS.RDF.BaseGraph.ResolveQName(System.String)
  - VDS.RDF.BaseGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.BaseGraph.Retract(VDS.RDF.Triple)
  - VDS.RDF.BaseGraph.TripleAsserted
  - VDS.RDF.BaseGraph.TripleRetracted
  - VDS.RDF.BaseGraph.Triples
  - VDS.RDF.BaseGraph.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: BaseGraph
  nameWithType: BaseGraph
  fullName: VDS.RDF.BaseGraph
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseGraph
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAbstract Base Implementation of the <xref href=\"VDS.RDF.IGraph\" data-throw-if-not-resolved=\"false\"></xref> interface.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public abstract class BaseGraph : IGraph, INodeFactory, IDisposable, IXmlSerializable, ISerializable
    content.vb: >-
      <Serializable>

      Public MustInherit Class BaseGraph
          Implements IGraph, INodeFactory, IDisposable, IXmlSerializable, ISerializable
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Graph
  implements:
  - VDS.RDF.IGraph
  - VDS.RDF.INodeFactory
  - System.IDisposable
  - System.Xml.Serialization.IXmlSerializable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.IGraph.VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - VDS.RDF.BaseGraph.VDS.RDF.Extensions.AsEnumerable``1
  - VDS.RDF.IGraph.VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
  - VDS.RDF.IGraph.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.BaseGraph._triples
  commentId: F:VDS.RDF.BaseGraph._triples
  id: _triples
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: _triples
  nameWithType: BaseGraph._triples
  fullName: VDS.RDF.BaseGraph._triples
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _triples
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCollection of Triples in the Graph.\n"
  example: []
  syntax:
    content: protected BaseTripleCollection _triples
    return:
      type: VDS.RDF.BaseTripleCollection
    content.vb: Protected _triples As BaseTripleCollection
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph._nsmapper
  commentId: F:VDS.RDF.BaseGraph._nsmapper
  id: _nsmapper
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: _nsmapper
  nameWithType: BaseGraph._nsmapper
  fullName: VDS.RDF.BaseGraph._nsmapper
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _nsmapper
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 53
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNamespace Mapper.\n"
  example: []
  syntax:
    content: protected NamespaceMapper _nsmapper
    return:
      type: VDS.RDF.NamespaceMapper
    content.vb: Protected _nsmapper As NamespaceMapper
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph._baseuri
  commentId: F:VDS.RDF.BaseGraph._baseuri
  id: _baseuri
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: _baseuri
  nameWithType: BaseGraph._baseuri
  fullName: VDS.RDF.BaseGraph._baseuri
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _baseuri
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 57
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nBase Uri of the Graph.\n"
  example: []
  syntax:
    content: protected Uri _baseuri
    return:
      type: System.Uri
    content.vb: Protected _baseuri As Uri
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph._bnodemapper
  commentId: F:VDS.RDF.BaseGraph._bnodemapper
  id: _bnodemapper
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: _bnodemapper
  nameWithType: BaseGraph._bnodemapper
  fullName: VDS.RDF.BaseGraph._bnodemapper
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _bnodemapper
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nBlank Node ID Mapper.\n"
  example: []
  syntax:
    content: protected BlankNodeMapper _bnodemapper
    return:
      type: VDS.RDF.BlankNodeMapper
    content.vb: Protected _bnodemapper As BlankNodeMapper
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.#ctor(VDS.RDF.BaseTripleCollection)
  commentId: M:VDS.RDF.BaseGraph.#ctor(VDS.RDF.BaseTripleCollection)
  id: '#ctor(VDS.RDF.BaseTripleCollection)'
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: BaseGraph(BaseTripleCollection)
  nameWithType: BaseGraph.BaseGraph(BaseTripleCollection)
  fullName: VDS.RDF.BaseGraph.BaseGraph(VDS.RDF.BaseTripleCollection)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 76
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Base Graph using the given Triple Collection.\n"
  example: []
  syntax:
    content: protected BaseGraph(BaseTripleCollection tripleCollection)
    parameters:
    - id: tripleCollection
      type: VDS.RDF.BaseTripleCollection
      description: Triple Collection to use.
    content.vb: Protected Sub New(tripleCollection As BaseTripleCollection)
  overload: VDS.RDF.BaseGraph.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.#ctor
  commentId: M:VDS.RDF.BaseGraph.#ctor
  id: '#ctor'
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: BaseGraph()
  nameWithType: BaseGraph.BaseGraph()
  fullName: VDS.RDF.BaseGraph.BaseGraph()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 91
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Base Graph which uses the default <xref href=\"VDS.RDF.TreeIndexedTripleCollection\" data-throw-if-not-resolved=\"false\"></xref> as the Triple Collection.\n"
  example: []
  syntax:
    content: protected BaseGraph()
    content.vb: Protected Sub New
  overload: VDS.RDF.BaseGraph.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.BaseGraph.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: BaseGraph(SerializationInfo, StreamingContext)
  nameWithType: BaseGraph.BaseGraph(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.BaseGraph.BaseGraph(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Graph from the given Serialization Information.\n"
  example: []
  syntax:
    content: protected BaseGraph(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: VDS.RDF.BaseGraph.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.Triples
  commentId: P:VDS.RDF.BaseGraph.Triples
  id: Triples
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Triples
  nameWithType: BaseGraph.Triples
  fullName: VDS.RDF.BaseGraph.Triples
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Triples
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 120
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the set of Triples described in this Graph.\n"
  example: []
  syntax:
    content: public virtual BaseTripleCollection Triples { get; }
    parameters: []
    return:
      type: VDS.RDF.BaseTripleCollection
    content.vb: Public Overridable ReadOnly Property Triples As BaseTripleCollection
  overload: VDS.RDF.BaseGraph.Triples*
  implements:
  - VDS.RDF.IGraph.Triples
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.BaseGraph.Nodes
  commentId: P:VDS.RDF.BaseGraph.Nodes
  id: Nodes
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Nodes
  nameWithType: BaseGraph.Nodes
  fullName: VDS.RDF.BaseGraph.Nodes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Nodes
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 123
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the unique Subject and Object nodes of the Graph.\n"
  remarks: This property returns only nodes that appear in the Subject or Object position in triples. To retrieve a list of all INode instances in a graph including those in Predicate position in a triple, use the <xref href="VDS.RDF.IGraph.AllNodes" data-throw-if-not-resolved="false"></xref> property.
  example: []
  syntax:
    content: public virtual IEnumerable<INode> Nodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public Overridable ReadOnly Property Nodes As IEnumerable(Of INode)
  overload: VDS.RDF.BaseGraph.Nodes*
  implements:
  - VDS.RDF.IGraph.Nodes
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.BaseGraph.AllNodes
  commentId: P:VDS.RDF.BaseGraph.AllNodes
  id: AllNodes
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: AllNodes
  nameWithType: BaseGraph.AllNodes
  fullName: VDS.RDF.BaseGraph.AllNodes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AllNodes
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 126
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the unique Subject, Predicate and Object nodes of the Graph.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<INode> AllNodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public Overridable ReadOnly Property AllNodes As IEnumerable(Of INode)
  overload: VDS.RDF.BaseGraph.AllNodes*
  implements:
  - VDS.RDF.IGraph.AllNodes
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.BaseGraph.NamespaceMap
  commentId: P:VDS.RDF.BaseGraph.NamespaceMap
  id: NamespaceMap
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: NamespaceMap
  nameWithType: BaseGraph.NamespaceMap
  fullName: VDS.RDF.BaseGraph.NamespaceMap
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NamespaceMap
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 138
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Namespace Mapper for this Graph which contains all in use Namespace Prefixes and their URIs.\n"
  example: []
  syntax:
    content: public virtual INamespaceMapper NamespaceMap { get; }
    parameters: []
    return:
      type: VDS.RDF.INamespaceMapper
      description: ''
    content.vb: Public Overridable ReadOnly Property NamespaceMap As INamespaceMapper
  overload: VDS.RDF.BaseGraph.NamespaceMap*
  implements:
  - VDS.RDF.IGraph.NamespaceMap
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.BaseGraph.BaseUri
  commentId: P:VDS.RDF.BaseGraph.BaseUri
  id: BaseUri
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: BaseGraph.BaseUri
  fullName: VDS.RDF.BaseGraph.BaseUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseUri
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 146
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the current Base Uri for the Graph.\n"
  remarks: "\nThis value may be changed during Graph population depending on whether the Concrete syntax allows the Base Uri to be changed and how the Parser handles this.\n"
  example: []
  syntax:
    content: public virtual Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Overridable Property BaseUri As Uri
  overload: VDS.RDF.BaseGraph.BaseUri*
  implements:
  - VDS.RDF.IGraph.BaseUri
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.IsEmpty
  commentId: P:VDS.RDF.BaseGraph.IsEmpty
  id: IsEmpty
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: BaseGraph.IsEmpty
  fullName: VDS.RDF.BaseGraph.IsEmpty
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsEmpty
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 155
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether a Graph is Empty ie. Contains No Triples or Nodes.\n"
  example: []
  syntax:
    content: public virtual bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsEmpty As Boolean
  overload: VDS.RDF.BaseGraph.IsEmpty*
  implements:
  - VDS.RDF.IGraph.IsEmpty
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.BaseGraph.Assert(VDS.RDF.Triple)
  commentId: M:VDS.RDF.BaseGraph.Assert(VDS.RDF.Triple)
  id: Assert(VDS.RDF.Triple)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Assert(Triple)
  nameWithType: BaseGraph.Assert(Triple)
  fullName: VDS.RDF.BaseGraph.Assert(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Assert
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 165
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAsserts a Triple in the Graph.\n"
  example: []
  syntax:
    content: public abstract bool Assert(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: The Triple to add to the Graph.
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function Assert(t As Triple) As Boolean
  overload: VDS.RDF.BaseGraph.Assert*
  implements:
  - VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.BaseGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  id: Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Assert(IEnumerable<Triple>)
  nameWithType: BaseGraph.Assert(IEnumerable<Triple>)
  fullName: VDS.RDF.BaseGraph.Assert(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Assert
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 171
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAsserts a List of Triples in the graph.\n"
  example: []
  syntax:
    content: public abstract bool Assert(IEnumerable<Triple> ts)
    parameters:
    - id: ts
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: List of Triples in the form of an IEnumerable.
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function Assert(ts As IEnumerable(Of Triple)) As Boolean
  overload: VDS.RDF.BaseGraph.Assert*
  implements:
  - VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  nameWithType.vb: BaseGraph.Assert(IEnumerable(Of Triple))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VDS.RDF.BaseGraph.Assert(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Assert(IEnumerable(Of Triple))
- uid: VDS.RDF.BaseGraph.Retract(VDS.RDF.Triple)
  commentId: M:VDS.RDF.BaseGraph.Retract(VDS.RDF.Triple)
  id: Retract(VDS.RDF.Triple)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Retract(Triple)
  nameWithType: BaseGraph.Retract(Triple)
  fullName: VDS.RDF.BaseGraph.Retract(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Retract
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 178
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRetracts a Triple from the Graph.\n"
  remarks: Current implementation may have some defunct Nodes left in the Graph as only the Triple is retracted.
  example: []
  syntax:
    content: public abstract bool Retract(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple to Retract.
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function Retract(t As Triple) As Boolean
  overload: VDS.RDF.BaseGraph.Retract*
  implements:
  - VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.BaseGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  id: Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Retract(IEnumerable<Triple>)
  nameWithType: BaseGraph.Retract(IEnumerable<Triple>)
  fullName: VDS.RDF.BaseGraph.Retract(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Retract
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 184
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRetracts a enumeration of Triples from the graph.\n"
  example: []
  syntax:
    content: public abstract bool Retract(IEnumerable<Triple> ts)
    parameters:
    - id: ts
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Enumeration of Triples to retract.
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function Retract(ts As IEnumerable(Of Triple)) As Boolean
  overload: VDS.RDF.BaseGraph.Retract*
  implements:
  - VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  nameWithType.vb: BaseGraph.Retract(IEnumerable(Of Triple))
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VDS.RDF.BaseGraph.Retract(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Retract(IEnumerable(Of Triple))
- uid: VDS.RDF.BaseGraph.Clear
  commentId: M:VDS.RDF.BaseGraph.Clear
  id: Clear
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: BaseGraph.Clear()
  fullName: VDS.RDF.BaseGraph.Clear()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Clear
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 194
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nClears all Triples from the Graph.\n"
  remarks: "\n<p>\nThe Graph will raise the <xref href=\"VDS.RDF.BaseGraph.ClearRequested\" data-throw-if-not-resolved=\"false\"></xref> event at the start of the Clear operation which allows for aborting the operation if the operation is cancelled by an event handler.  On completing the Clear the <xref href=\"VDS.RDF.BaseGraph.Cleared\" data-throw-if-not-resolved=\"false\"></xref> event will be raised.\n</p>\n"
  example: []
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  overload: VDS.RDF.BaseGraph.Clear*
  implements:
  - VDS.RDF.IGraph.Clear
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.CreateBlankNode
  commentId: M:VDS.RDF.BaseGraph.CreateBlankNode
  id: CreateBlankNode
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: CreateBlankNode()
  nameWithType: BaseGraph.CreateBlankNode()
  fullName: VDS.RDF.BaseGraph.CreateBlankNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlankNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 211
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a New Blank Node with an auto-generated Blank Node ID.\n"
  example: []
  syntax:
    content: public virtual IBlankNode CreateBlankNode()
    return:
      type: VDS.RDF.IBlankNode
      description: ''
    content.vb: Public Overridable Function CreateBlankNode As IBlankNode
  overload: VDS.RDF.BaseGraph.CreateBlankNode*
  implements:
  - VDS.RDF.INodeFactory.CreateBlankNode
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.CreateBlankNode(System.String)
  commentId: M:VDS.RDF.BaseGraph.CreateBlankNode(System.String)
  id: CreateBlankNode(System.String)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: CreateBlankNode(String)
  nameWithType: BaseGraph.CreateBlankNode(String)
  fullName: VDS.RDF.BaseGraph.CreateBlankNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlankNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 221
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a New Blank Node with a user-defined Blank Node ID.\n"
  example: []
  syntax:
    content: public virtual IBlankNode CreateBlankNode(string nodeId)
    parameters:
    - id: nodeId
      type: System.String
      description: Node ID to use.
    return:
      type: VDS.RDF.IBlankNode
      description: ''
    content.vb: Public Overridable Function CreateBlankNode(nodeId As String) As IBlankNode
  overload: VDS.RDF.BaseGraph.CreateBlankNode*
  implements:
  - VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.CreateLiteralNode(System.String)
  commentId: M:VDS.RDF.BaseGraph.CreateLiteralNode(System.String)
  id: CreateLiteralNode(System.String)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String)
  nameWithType: BaseGraph.CreateLiteralNode(String)
  fullName: VDS.RDF.BaseGraph.CreateLiteralNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 240
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a New Literal Node with the given Value.\n"
  example: []
  syntax:
    content: public virtual ILiteralNode CreateLiteralNode(string literal)
    parameters:
    - id: literal
      type: System.String
      description: String value of the Literal.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Overridable Function CreateLiteralNode(literal As String) As ILiteralNode
  overload: VDS.RDF.BaseGraph.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.CreateLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.BaseGraph.CreateLiteralNode(System.String,System.String)
  id: CreateLiteralNode(System.String,System.String)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String, String)
  nameWithType: BaseGraph.CreateLiteralNode(String, String)
  fullName: VDS.RDF.BaseGraph.CreateLiteralNode(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 251
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a New Literal Node with the given Value and Language Specifier.\n"
  example: []
  syntax:
    content: public virtual ILiteralNode CreateLiteralNode(string literal, string langspec)
    parameters:
    - id: literal
      type: System.String
      description: String value of the Literal.
    - id: langspec
      type: System.String
      description: Language Specifier of the Literal.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Overridable Function CreateLiteralNode(literal As String, langspec As String) As ILiteralNode
  overload: VDS.RDF.BaseGraph.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.CreateLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.BaseGraph.CreateLiteralNode(System.String,System.Uri)
  id: CreateLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String, Uri)
  nameWithType: BaseGraph.CreateLiteralNode(String, Uri)
  fullName: VDS.RDF.BaseGraph.CreateLiteralNode(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 262
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Literal Node with the given Value and Data Type.\n"
  example: []
  syntax:
    content: public virtual ILiteralNode CreateLiteralNode(string literal, Uri datatype)
    parameters:
    - id: literal
      type: System.String
      description: String value of the Literal.
    - id: datatype
      type: System.Uri
      description: URI of the Data Type.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Overridable Function CreateLiteralNode(literal As String, datatype As Uri) As ILiteralNode
  overload: VDS.RDF.BaseGraph.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.CreateUriNode
  commentId: M:VDS.RDF.BaseGraph.CreateUriNode
  id: CreateUriNode
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: CreateUriNode()
  nameWithType: BaseGraph.CreateUriNode()
  fullName: VDS.RDF.BaseGraph.CreateUriNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 271
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new URI Node that refers to the Base Uri of the Graph.\n"
  example: []
  syntax:
    content: public virtual IUriNode CreateUriNode()
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Overridable Function CreateUriNode As IUriNode
  overload: VDS.RDF.BaseGraph.CreateUriNode*
  implements:
  - VDS.RDF.IGraph.CreateUriNode
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.CreateUriNode(System.Uri)
  commentId: M:VDS.RDF.BaseGraph.CreateUriNode(System.Uri)
  id: CreateUriNode(System.Uri)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: CreateUriNode(Uri)
  nameWithType: BaseGraph.CreateUriNode(Uri)
  fullName: VDS.RDF.BaseGraph.CreateUriNode(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 284
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new URI Node with the given URI.\n"
  remarks: "\nGenerally we expect to be passed an absolute URI, while relative URIs are permitted the behaviour is less well defined.  If there is a Base URI defined for the Graph then relative URIs will be automatically resolved against that Base, if the Base URI is not defined then relative URIs will be left as is.  In this case issues may occur when trying to serialize the data or when accurate round tripping is required.\n"
  example: []
  syntax:
    content: public virtual IUriNode CreateUriNode(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: URI for the Node.
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Overridable Function CreateUriNode(uri As Uri) As IUriNode
  overload: VDS.RDF.BaseGraph.CreateUriNode*
  implements:
  - VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.CreateUriNode(System.String)
  commentId: M:VDS.RDF.BaseGraph.CreateUriNode(System.String)
  id: CreateUriNode(System.String)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: CreateUriNode(String)
  nameWithType: BaseGraph.CreateUriNode(String)
  fullName: VDS.RDF.BaseGraph.CreateUriNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 296
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new URI Node with the given QName.\n"
  remarks: Internally the Graph will resolve the QName to a full URI, throws an RDF Exception when this is not possible.
  example: []
  syntax:
    content: public virtual IUriNode CreateUriNode(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName for the Node.
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Overridable Function CreateUriNode(qname As String) As IUriNode
  overload: VDS.RDF.BaseGraph.CreateUriNode*
  implements:
  - VDS.RDF.IGraph.CreateUriNode(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.CreateVariableNode(System.String)
  commentId: M:VDS.RDF.BaseGraph.CreateVariableNode(System.String)
  id: CreateVariableNode(System.String)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: CreateVariableNode(String)
  nameWithType: BaseGraph.CreateVariableNode(String)
  fullName: VDS.RDF.BaseGraph.CreateVariableNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateVariableNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 306
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Variable Node.\n"
  example: []
  syntax:
    content: public virtual IVariableNode CreateVariableNode(string varname)
    parameters:
    - id: varname
      type: System.String
      description: Variable Name.
    return:
      type: VDS.RDF.IVariableNode
      description: ''
    content.vb: Public Overridable Function CreateVariableNode(varname As String) As IVariableNode
  overload: VDS.RDF.BaseGraph.CreateVariableNode*
  implements:
  - VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.CreateGraphLiteralNode
  commentId: M:VDS.RDF.BaseGraph.CreateGraphLiteralNode
  id: CreateGraphLiteralNode
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: CreateGraphLiteralNode()
  nameWithType: BaseGraph.CreateGraphLiteralNode()
  fullName: VDS.RDF.BaseGraph.CreateGraphLiteralNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateGraphLiteralNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 315
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Graph Literal Node with its value being an Empty Subgraph.\n"
  example: []
  syntax:
    content: public virtual IGraphLiteralNode CreateGraphLiteralNode()
    return:
      type: VDS.RDF.IGraphLiteralNode
      description: ''
    content.vb: Public Overridable Function CreateGraphLiteralNode As IGraphLiteralNode
  overload: VDS.RDF.BaseGraph.CreateGraphLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateGraphLiteralNode
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  id: CreateGraphLiteralNode(VDS.RDF.IGraph)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: CreateGraphLiteralNode(IGraph)
  nameWithType: BaseGraph.CreateGraphLiteralNode(IGraph)
  fullName: VDS.RDF.BaseGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateGraphLiteralNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 325
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Graph Literal Node with its value being the given Subgraph.\n"
  example: []
  syntax:
    content: public virtual IGraphLiteralNode CreateGraphLiteralNode(IGraph subgraph)
    parameters:
    - id: subgraph
      type: VDS.RDF.IGraph
      description: Subgraph this Node represents.
    return:
      type: VDS.RDF.IGraphLiteralNode
      description: ''
    content.vb: Public Overridable Function CreateGraphLiteralNode(subgraph As IGraph) As IGraphLiteralNode
  overload: VDS.RDF.BaseGraph.CreateGraphLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.GetBlankNode(System.String)
  commentId: M:VDS.RDF.BaseGraph.GetBlankNode(System.String)
  id: GetBlankNode(System.String)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetBlankNode(String)
  nameWithType: BaseGraph.GetBlankNode(String)
  fullName: VDS.RDF.BaseGraph.GetBlankNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetBlankNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 339
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns the Blank Node with the given Identifier.\n"
  example: []
  syntax:
    content: public abstract IBlankNode GetBlankNode(string nodeId)
    parameters:
    - id: nodeId
      type: System.String
      description: The Identifier of the Blank Node to select.
    return:
      type: VDS.RDF.IBlankNode
      description: Either the Blank Node or null if no Node with the given Identifier exists.
    content.vb: Public MustOverride Function GetBlankNode(nodeId As String) As IBlankNode
  overload: VDS.RDF.BaseGraph.GetBlankNode*
  implements:
  - VDS.RDF.IGraph.GetBlankNode(System.String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.BaseGraph.GetLiteralNode(System.String,System.String)
  id: GetLiteralNode(System.String,System.String)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetLiteralNode(String, String)
  nameWithType: BaseGraph.GetLiteralNode(String, String)
  fullName: VDS.RDF.BaseGraph.GetLiteralNode(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetLiteralNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 347
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns the LiteralNode with the given Value in the given Language if it exists.\n"
  example: []
  syntax:
    content: public abstract ILiteralNode GetLiteralNode(string literal, string langspec)
    parameters:
    - id: literal
      type: System.String
      description: The literal value of the Node to select.
    - id: langspec
      type: System.String
      description: The Language Specifier for the Node to select.
    return:
      type: VDS.RDF.ILiteralNode
      description: Either the LiteralNode Or null if no Node with the given Value and Language Specifier exists.
    content.vb: Public MustOverride Function GetLiteralNode(literal As String, langspec As String) As ILiteralNode
  overload: VDS.RDF.BaseGraph.GetLiteralNode*
  implements:
  - VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetLiteralNode(System.String)
  commentId: M:VDS.RDF.BaseGraph.GetLiteralNode(System.String)
  id: GetLiteralNode(System.String)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetLiteralNode(String)
  nameWithType: BaseGraph.GetLiteralNode(String)
  fullName: VDS.RDF.BaseGraph.GetLiteralNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetLiteralNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 355
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns the LiteralNode with the given Value if it exists.\n"
  remarks: The LiteralNode in the Graph must have no Language or DataType set.
  example: []
  syntax:
    content: public abstract ILiteralNode GetLiteralNode(string literal)
    parameters:
    - id: literal
      type: System.String
      description: The literal value of the Node to select.
    return:
      type: VDS.RDF.ILiteralNode
      description: Either the LiteralNode Or null if no Node with the given Value exists.
    content.vb: Public MustOverride Function GetLiteralNode(literal As String) As ILiteralNode
  overload: VDS.RDF.BaseGraph.GetLiteralNode*
  implements:
  - VDS.RDF.IGraph.GetLiteralNode(System.String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.BaseGraph.GetLiteralNode(System.String,System.Uri)
  id: GetLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetLiteralNode(String, Uri)
  nameWithType: BaseGraph.GetLiteralNode(String, Uri)
  fullName: VDS.RDF.BaseGraph.GetLiteralNode(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetLiteralNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 363
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns the LiteralNode with the given Value and given Data Type if it exists.\n"
  example: []
  syntax:
    content: public abstract ILiteralNode GetLiteralNode(string literal, Uri datatype)
    parameters:
    - id: literal
      type: System.String
      description: The literal value of the Node to select.
    - id: datatype
      type: System.Uri
      description: The Uri for the Data Type of the Literal to select.
    return:
      type: VDS.RDF.ILiteralNode
      description: Either the LiteralNode Or null if no Node with the given Value and Data Type exists.
    content.vb: Public MustOverride Function GetLiteralNode(literal As String, datatype As Uri) As ILiteralNode
  overload: VDS.RDF.BaseGraph.GetLiteralNode*
  implements:
  - VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetUriNode(System.String)
  commentId: M:VDS.RDF.BaseGraph.GetUriNode(System.String)
  id: GetUriNode(System.String)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetUriNode(String)
  nameWithType: BaseGraph.GetUriNode(String)
  fullName: VDS.RDF.BaseGraph.GetUriNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetUriNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 370
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns the UriNode with the given QName if it exists.\n"
  example: []
  syntax:
    content: public abstract IUriNode GetUriNode(string qname)
    parameters:
    - id: qname
      type: System.String
      description: The QName of the Node to select.
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public MustOverride Function GetUriNode(qname As String) As IUriNode
  overload: VDS.RDF.BaseGraph.GetUriNode*
  implements:
  - VDS.RDF.IGraph.GetUriNode(System.String)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetUriNode(System.Uri)
  commentId: M:VDS.RDF.BaseGraph.GetUriNode(System.Uri)
  id: GetUriNode(System.Uri)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetUriNode(Uri)
  nameWithType: BaseGraph.GetUriNode(Uri)
  fullName: VDS.RDF.BaseGraph.GetUriNode(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetUriNode
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 377
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns the UriNode with the given Uri if it exists.\n"
  example: []
  syntax:
    content: public abstract IUriNode GetUriNode(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The Uri of the Node to select.
    return:
      type: VDS.RDF.IUriNode
      description: Either the UriNode Or null if no Node with the given Uri exists.
    content.vb: Public MustOverride Function GetUriNode(uri As Uri) As IUriNode
  overload: VDS.RDF.BaseGraph.GetUriNode*
  implements:
  - VDS.RDF.IGraph.GetUriNode(System.Uri)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetTriples(System.Uri)
  commentId: M:VDS.RDF.BaseGraph.GetTriples(System.Uri)
  id: GetTriples(System.Uri)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetTriples(Uri)
  nameWithType: BaseGraph.GetTriples(Uri)
  fullName: VDS.RDF.BaseGraph.GetTriples(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 388
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples involving the given Uri.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Triple> GetTriples(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The Uri to find Triples involving.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public MustOverride Function GetTriples(uri As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.BaseGraph.GetTriples*
  implements:
  - VDS.RDF.IGraph.GetTriples(System.Uri)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseGraph.GetTriples(VDS.RDF.INode)
  id: GetTriples(VDS.RDF.INode)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetTriples(INode)
  nameWithType: BaseGraph.GetTriples(INode)
  fullName: VDS.RDF.BaseGraph.GetTriples(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 395
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples involving the given Node.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Triple> GetTriples(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: The Node to find Triples involving.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public MustOverride Function GetTriples(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.BaseGraph.GetTriples*
  implements:
  - VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetTriplesWithObject(System.Uri)
  commentId: M:VDS.RDF.BaseGraph.GetTriplesWithObject(System.Uri)
  id: GetTriplesWithObject(System.Uri)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(Uri)
  nameWithType: BaseGraph.GetTriplesWithObject(Uri)
  fullName: VDS.RDF.BaseGraph.GetTriplesWithObject(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 402
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Uri as the Object.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Triple> GetTriplesWithObject(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: The Uri to find Triples with it as the Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public MustOverride Function GetTriplesWithObject(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.BaseGraph.GetTriplesWithObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseGraph.GetTriplesWithObject(VDS.RDF.INode)
  id: GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(INode)
  nameWithType: BaseGraph.GetTriplesWithObject(INode)
  fullName: VDS.RDF.BaseGraph.GetTriplesWithObject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 409
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Node as the Object.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Triple> GetTriplesWithObject(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: The Node to find Triples with it as the Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public MustOverride Function GetTriplesWithObject(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.BaseGraph.GetTriplesWithObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  id: GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(INode)
  nameWithType: BaseGraph.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.BaseGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 416
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Node as the Predicate.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Triple> GetTriplesWithPredicate(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: The Node to find Triples with it as the Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public MustOverride Function GetTriplesWithPredicate(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.BaseGraph.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetTriplesWithPredicate(System.Uri)
  commentId: M:VDS.RDF.BaseGraph.GetTriplesWithPredicate(System.Uri)
  id: GetTriplesWithPredicate(System.Uri)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(Uri)
  nameWithType: BaseGraph.GetTriplesWithPredicate(Uri)
  fullName: VDS.RDF.BaseGraph.GetTriplesWithPredicate(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 423
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Uri as the Predicate.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Triple> GetTriplesWithPredicate(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: The Uri to find Triples with it as the Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public MustOverride Function GetTriplesWithPredicate(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.BaseGraph.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseGraph.GetTriplesWithSubject(VDS.RDF.INode)
  id: GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(INode)
  nameWithType: BaseGraph.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.BaseGraph.GetTriplesWithSubject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 430
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Node as the Subject.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Triple> GetTriplesWithSubject(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: The Node to find Triples with it as the Subject.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public MustOverride Function GetTriplesWithSubject(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.BaseGraph.GetTriplesWithSubject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetTriplesWithSubject(System.Uri)
  commentId: M:VDS.RDF.BaseGraph.GetTriplesWithSubject(System.Uri)
  id: GetTriplesWithSubject(System.Uri)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(Uri)
  nameWithType: BaseGraph.GetTriplesWithSubject(Uri)
  fullName: VDS.RDF.BaseGraph.GetTriplesWithSubject(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 437
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Uri as the Subject.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Triple> GetTriplesWithSubject(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: The Uri to find Triples with it as the Subject.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public MustOverride Function GetTriplesWithSubject(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.BaseGraph.GetTriplesWithSubject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: BaseGraph.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.BaseGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectPredicate
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 445
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples with the given Subject and Predicate.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Triple> GetTriplesWithSubjectPredicate(INode subj, INode pred)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public MustOverride Function GetTriplesWithSubjectPredicate(subj As INode, pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.BaseGraph.GetTriplesWithSubjectPredicate*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: BaseGraph.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.BaseGraph.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectObject
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 453
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples with the given Subject and Object.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Triple> GetTriplesWithSubjectObject(INode subj, INode obj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public MustOverride Function GetTriplesWithSubjectObject(subj As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.BaseGraph.GetTriplesWithSubjectObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: BaseGraph.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.BaseGraph.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicateObject
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 461
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples with the given Predicate and Object.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Triple> GetTriplesWithPredicateObject(INode pred, INode obj)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public MustOverride Function GetTriplesWithPredicateObject(pred As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.BaseGraph.GetTriplesWithPredicateObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseGraph.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.BaseGraph.ContainsTriple(VDS.RDF.Triple)
  id: ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: ContainsTriple(Triple)
  nameWithType: BaseGraph.ContainsTriple(Triple)
  fullName: VDS.RDF.BaseGraph.ContainsTriple(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ContainsTriple
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 468
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether a given Triple exists in this Graph.\n"
  example: []
  syntax:
    content: public virtual bool ContainsTriple(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function ContainsTriple(t As Triple) As Boolean
  overload: VDS.RDF.BaseGraph.ContainsTriple*
  implements:
  - VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.Merge(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseGraph.Merge(VDS.RDF.IGraph)
  id: Merge(VDS.RDF.IGraph)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Merge(IGraph)
  nameWithType: BaseGraph.Merge(IGraph)
  fullName: VDS.RDF.BaseGraph.Merge(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merge
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 482
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMerges another Graph into the current Graph.\n"
  remarks: The Graph on which you invoke this method will preserve its Blank Node IDs while the Blank Nodes from the Graph being merged in will be given new IDs as required in the scope of this Graph.
  example: []
  syntax:
    content: public virtual void Merge(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to Merge into this Graph.
    content.vb: Public Overridable Sub Merge(g As IGraph)
  overload: VDS.RDF.BaseGraph.Merge*
  implements:
  - VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.BaseGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  id: Merge(VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Merge(IGraph, Boolean)
  nameWithType: BaseGraph.Merge(IGraph, Boolean)
  fullName: VDS.RDF.BaseGraph.Merge(VDS.RDF.IGraph, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merge
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 500
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMerges another Graph into the current Graph.\n"
  remarks: "\n<p>\nThe Graph on which you invoke this method will preserve its Blank Node IDs while the Blank Nodes from the Graph being merged in will be given new IDs as required in the scope of this Graph.\n</p>\n<p>\nThe Graph will raise the <xref href=\"VDS.RDF.BaseGraph.MergeRequested\" data-throw-if-not-resolved=\"false\"></xref> event before the Merge operation which gives any event handlers the oppurtunity to cancel this event.  When the Merge operation is completed the <xref href=\"VDS.RDF.BaseGraph.Merged\" data-throw-if-not-resolved=\"false\"></xref> event is raised.\n</p>\n"
  example: []
  syntax:
    content: public virtual void Merge(IGraph g, bool keepOriginalGraphUri)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to Merge into this Graph.
    - id: keepOriginalGraphUri
      type: System.Boolean
      description: Indicates that the Merge should preserve the Graph URIs of Nodes so they refer to the Graph they originated in.
    content.vb: Public Overridable Sub Merge(g As IGraph, keepOriginalGraphUri As Boolean)
  overload: VDS.RDF.BaseGraph.Merge*
  implements:
  - VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.Equals(System.Object)
  commentId: M:VDS.RDF.BaseGraph.Equals(System.Object)
  id: Equals(System.Object)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BaseGraph.Equals(Object)
  fullName: VDS.RDF.BaseGraph.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 595
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether a Graph is equal to another Object.\n"
  remarks: "\n<p>\nA Graph can only be equal to another Object which is an <xref href=\"VDS.RDF.IGraph\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nGraph Equality is determined by a somewhat complex algorithm which is explained in the remarks of the other overload for Equals.\n</p>\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: VDS.RDF.BaseGraph.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.BaseGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  id: Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Equals(IGraph, out Dictionary<INode, INode>)
  nameWithType: BaseGraph.Equals(IGraph, out Dictionary<INode, INode>)
  fullName: VDS.RDF.BaseGraph.Equals(VDS.RDF.IGraph, out System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 617
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Graph is equal to the given Graph.\n"
  remarks: "\nSee <xref href=\"VDS.RDF.GraphMatcher\" data-throw-if-not-resolved=\"false\"></xref> for documentation of the equality algorithm used.\n"
  example: []
  syntax:
    content: public virtual bool Equals(IGraph g, out Dictionary<INode, INode> mapping)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to test for equality.
    - id: mapping
      type: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
      description: Mapping of Blank Nodes iff the Graphs are equal and contain some Blank Nodes.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function Equals(g As IGraph, ByRef mapping As Dictionary(Of INode, INode)) As Boolean
  overload: VDS.RDF.BaseGraph.Equals*
  implements:
  - VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  nameWithType.vb: BaseGraph.Equals(IGraph, ByRef Dictionary(Of INode, INode))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.BaseGraph.Equals(VDS.RDF.IGraph, ByRef System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: Equals(IGraph, ByRef Dictionary(Of INode, INode))
- uid: VDS.RDF.BaseGraph.IsSubGraphOf(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseGraph.IsSubGraphOf(VDS.RDF.IGraph)
  id: IsSubGraphOf(VDS.RDF.IGraph)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: IsSubGraphOf(IGraph)
  nameWithType: BaseGraph.IsSubGraphOf(IGraph)
  fullName: VDS.RDF.BaseGraph.IsSubGraphOf(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSubGraphOf
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 643
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether this Graph is a sub-graph of the given Graph.\n"
  example: []
  syntax:
    content: public bool IsSubGraphOf(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsSubGraphOf(g As IGraph) As Boolean
  overload: VDS.RDF.BaseGraph.IsSubGraphOf*
  implements:
  - VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.BaseGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  id: IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: IsSubGraphOf(IGraph, out Dictionary<INode, INode>)
  nameWithType: BaseGraph.IsSubGraphOf(IGraph, out Dictionary<INode, INode>)
  fullName: VDS.RDF.BaseGraph.IsSubGraphOf(VDS.RDF.IGraph, out System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSubGraphOf
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 654
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether this Graph is a sub-graph of the given Graph.\n"
  example: []
  syntax:
    content: public bool IsSubGraphOf(IGraph g, out Dictionary<INode, INode> mapping)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: mapping
      type: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
      description: Mapping of Blank Nodes.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsSubGraphOf(g As IGraph, ByRef mapping As Dictionary(Of INode, INode)) As Boolean
  overload: VDS.RDF.BaseGraph.IsSubGraphOf*
  implements:
  - VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  nameWithType.vb: BaseGraph.IsSubGraphOf(IGraph, ByRef Dictionary(Of INode, INode))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.BaseGraph.IsSubGraphOf(VDS.RDF.IGraph, ByRef System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: IsSubGraphOf(IGraph, ByRef Dictionary(Of INode, INode))
- uid: VDS.RDF.BaseGraph.HasSubGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseGraph.HasSubGraph(VDS.RDF.IGraph)
  id: HasSubGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: HasSubGraph(IGraph)
  nameWithType: BaseGraph.HasSubGraph(IGraph)
  fullName: VDS.RDF.BaseGraph.HasSubGraph(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasSubGraph
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 676
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether this Graph has the given Graph as a sub-graph.\n"
  example: []
  syntax:
    content: public bool HasSubGraph(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasSubGraph(g As IGraph) As Boolean
  overload: VDS.RDF.BaseGraph.HasSubGraph*
  implements:
  - VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.BaseGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  id: HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: HasSubGraph(IGraph, out Dictionary<INode, INode>)
  nameWithType: BaseGraph.HasSubGraph(IGraph, out Dictionary<INode, INode>)
  fullName: VDS.RDF.BaseGraph.HasSubGraph(VDS.RDF.IGraph, out System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasSubGraph
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 687
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether this Graph has the given Graph as a sub-graph.\n"
  example: []
  syntax:
    content: public bool HasSubGraph(IGraph g, out Dictionary<INode, INode> mapping)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: mapping
      type: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
      description: Mapping of Blank Nodes.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasSubGraph(g As IGraph, ByRef mapping As Dictionary(Of INode, INode)) As Boolean
  overload: VDS.RDF.BaseGraph.HasSubGraph*
  implements:
  - VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  nameWithType.vb: BaseGraph.HasSubGraph(IGraph, ByRef Dictionary(Of INode, INode))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.BaseGraph.HasSubGraph(VDS.RDF.IGraph, ByRef System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: HasSubGraph(IGraph, ByRef Dictionary(Of INode, INode))
- uid: VDS.RDF.BaseGraph.Difference(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseGraph.Difference(VDS.RDF.IGraph)
  id: Difference(VDS.RDF.IGraph)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Difference(IGraph)
  nameWithType: BaseGraph.Difference(IGraph)
  fullName: VDS.RDF.BaseGraph.Difference(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Difference
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 706
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nComputes the Difference between this Graph the given Graph.\n"
  remarks: "\n<p>\nProduces a report which shows the changes that must be made to this Graph to produce the given Graph.\n</p>\n"
  example: []
  syntax:
    content: public GraphDiffReport Difference(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: VDS.RDF.GraphDiffReport
      description: ''
    content.vb: Public Function Difference(g As IGraph) As GraphDiffReport
  overload: VDS.RDF.BaseGraph.Difference*
  implements:
  - VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.ResolveQName(System.String)
  commentId: M:VDS.RDF.BaseGraph.ResolveQName(System.String)
  id: ResolveQName(System.String)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: ResolveQName(String)
  nameWithType: BaseGraph.ResolveQName(String)
  fullName: VDS.RDF.BaseGraph.ResolveQName(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResolveQName
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 721
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper function for Resolving QNames to URIs.\n"
  example: []
  syntax:
    content: public virtual Uri ResolveQName(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName to resolve to a Uri.
    return:
      type: System.Uri
      description: ''
    content.vb: Public Overridable Function ResolveQName(qname As String) As Uri
  overload: VDS.RDF.BaseGraph.ResolveQName*
  implements:
  - VDS.RDF.IGraph.ResolveQName(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.GetNextBlankNodeID
  commentId: M:VDS.RDF.BaseGraph.GetNextBlankNodeID
  id: GetNextBlankNodeID
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetNextBlankNodeID()
  nameWithType: BaseGraph.GetNextBlankNodeID()
  fullName: VDS.RDF.BaseGraph.GetNextBlankNodeID()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetNextBlankNodeID
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 730
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new unused Blank Node ID and returns it.\n"
  example: []
  syntax:
    content: public virtual string GetNextBlankNodeID()
    return:
      type: System.String
      description: ''
    content.vb: Public Overridable Function GetNextBlankNodeID As String
  overload: VDS.RDF.BaseGraph.GetNextBlankNodeID*
  implements:
  - VDS.RDF.INodeFactory.GetNextBlankNodeID
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.TripleAsserted
  commentId: E:VDS.RDF.BaseGraph.TripleAsserted
  id: TripleAsserted
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: TripleAsserted
  nameWithType: BaseGraph.TripleAsserted
  fullName: VDS.RDF.BaseGraph.TripleAsserted
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TripleAsserted
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 750
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when a Triple is asserted in the Graph\n"
  example: []
  syntax:
    content: public event TripleEventHandler TripleAsserted
    return:
      type: VDS.RDF.TripleEventHandler
    content.vb: Public Event TripleAsserted As TripleEventHandler
  implements:
  - VDS.RDF.IGraph.TripleAsserted
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.TripleRetracted
  commentId: E:VDS.RDF.BaseGraph.TripleRetracted
  id: TripleRetracted
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: TripleRetracted
  nameWithType: BaseGraph.TripleRetracted
  fullName: VDS.RDF.BaseGraph.TripleRetracted
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TripleRetracted
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 755
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when a Triple is retracted from the Graph\n"
  example: []
  syntax:
    content: public event TripleEventHandler TripleRetracted
    return:
      type: VDS.RDF.TripleEventHandler
    content.vb: Public Event TripleRetracted As TripleEventHandler
  implements:
  - VDS.RDF.IGraph.TripleRetracted
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.Changed
  commentId: E:VDS.RDF.BaseGraph.Changed
  id: Changed
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Changed
  nameWithType: BaseGraph.Changed
  fullName: VDS.RDF.BaseGraph.Changed
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Changed
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 760
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when the Graph contents change\n"
  example: []
  syntax:
    content: public event GraphEventHandler Changed
    return:
      type: VDS.RDF.GraphEventHandler
    content.vb: Public Event Changed As GraphEventHandler
  implements:
  - VDS.RDF.IGraph.Changed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.ClearRequested
  commentId: E:VDS.RDF.BaseGraph.ClearRequested
  id: ClearRequested
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: ClearRequested
  nameWithType: BaseGraph.ClearRequested
  fullName: VDS.RDF.BaseGraph.ClearRequested
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ClearRequested
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 765
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised just before the Graph is cleared of its contents\n"
  example: []
  syntax:
    content: public event CancellableGraphEventHandler ClearRequested
    return:
      type: VDS.RDF.CancellableGraphEventHandler
    content.vb: Public Event ClearRequested As CancellableGraphEventHandler
  implements:
  - VDS.RDF.IGraph.ClearRequested
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.Cleared
  commentId: E:VDS.RDF.BaseGraph.Cleared
  id: Cleared
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Cleared
  nameWithType: BaseGraph.Cleared
  fullName: VDS.RDF.BaseGraph.Cleared
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Cleared
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 770
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised after the Graph is cleared of its contents\n"
  example: []
  syntax:
    content: public event GraphEventHandler Cleared
    return:
      type: VDS.RDF.GraphEventHandler
    content.vb: Public Event Cleared As GraphEventHandler
  implements:
  - VDS.RDF.IGraph.Cleared
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.MergeRequested
  commentId: E:VDS.RDF.BaseGraph.MergeRequested
  id: MergeRequested
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: MergeRequested
  nameWithType: BaseGraph.MergeRequested
  fullName: VDS.RDF.BaseGraph.MergeRequested
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MergeRequested
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 775
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when a Merge operation is requested on the Graph\n"
  example: []
  syntax:
    content: public event CancellableGraphEventHandler MergeRequested
    return:
      type: VDS.RDF.CancellableGraphEventHandler
    content.vb: Public Event MergeRequested As CancellableGraphEventHandler
  implements:
  - VDS.RDF.IGraph.MergeRequested
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.Merged
  commentId: E:VDS.RDF.BaseGraph.Merged
  id: Merged
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Merged
  nameWithType: BaseGraph.Merged
  fullName: VDS.RDF.BaseGraph.Merged
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merged
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 780
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when a Merge operation is completed on the Graph\n"
  example: []
  syntax:
    content: public event GraphEventHandler Merged
    return:
      type: VDS.RDF.GraphEventHandler
    content.vb: Public Event Merged As GraphEventHandler
  implements:
  - VDS.RDF.IGraph.Merged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.BaseGraph.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  id: OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: OnTripleAsserted(Object, TripleEventArgs)
  nameWithType: BaseGraph.OnTripleAsserted(Object, TripleEventArgs)
  fullName: VDS.RDF.BaseGraph.OnTripleAsserted(System.Object, VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnTripleAsserted
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 787
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent Handler which handles the <xref href=\"VDS.RDF.BaseTripleCollection.TripleAdded\" data-throw-if-not-resolved=\"false\"></xref> event from the underlying Triple Collection by raising the Graph&apos;s <xref href=\"VDS.RDF.BaseGraph.TripleAsserted\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected virtual void OnTripleAsserted(object sender, TripleEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Sender.
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: Triple Event Arguments.
    content.vb: Protected Overridable Sub OnTripleAsserted(sender As Object, args As TripleEventArgs)
  overload: VDS.RDF.BaseGraph.OnTripleAsserted*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.BaseGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.BaseGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  id: RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: RaiseTripleAsserted(TripleEventArgs)
  nameWithType: BaseGraph.RaiseTripleAsserted(TripleEventArgs)
  fullName: VDS.RDF.BaseGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleAsserted
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 796
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.BaseGraph.TripleAsserted\" data-throw-if-not-resolved=\"false\"></xref> event manually.\n"
  example: []
  syntax:
    content: protected void RaiseTripleAsserted(TripleEventArgs args)
    parameters:
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: Triple Event Arguments.
    content.vb: Protected Sub RaiseTripleAsserted(args As TripleEventArgs)
  overload: VDS.RDF.BaseGraph.RaiseTripleAsserted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.RaiseTripleAsserted(VDS.RDF.Triple)
  commentId: M:VDS.RDF.BaseGraph.RaiseTripleAsserted(VDS.RDF.Triple)
  id: RaiseTripleAsserted(VDS.RDF.Triple)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: RaiseTripleAsserted(Triple)
  nameWithType: BaseGraph.RaiseTripleAsserted(Triple)
  fullName: VDS.RDF.BaseGraph.RaiseTripleAsserted(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleAsserted
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 807
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.BaseGraph.TripleAsserted\" data-throw-if-not-resolved=\"false\"></xref> event manually.\n"
  example: []
  syntax:
    content: protected void RaiseTripleAsserted(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    content.vb: Protected Sub RaiseTripleAsserted(t As Triple)
  overload: VDS.RDF.BaseGraph.RaiseTripleAsserted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.BaseGraph.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  id: OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: OnTripleRetracted(Object, TripleEventArgs)
  nameWithType: BaseGraph.OnTripleRetracted(Object, TripleEventArgs)
  fullName: VDS.RDF.BaseGraph.OnTripleRetracted(System.Object, VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnTripleRetracted
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 824
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent Handler which handles the <xref href=\"VDS.RDF.BaseTripleCollection.TripleRemoved\" data-throw-if-not-resolved=\"false\"></xref> event from the underlying Triple Collection by raising the Graph&apos;s <xref href=\"VDS.RDF.BaseGraph.TripleRetracted\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected virtual void OnTripleRetracted(object sender, TripleEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Sender.
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: Triple Event Arguments.
    content.vb: Protected Overridable Sub OnTripleRetracted(sender As Object, args As TripleEventArgs)
  overload: VDS.RDF.BaseGraph.OnTripleRetracted*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.BaseGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.BaseGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  id: RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: RaiseTripleRetracted(TripleEventArgs)
  nameWithType: BaseGraph.RaiseTripleRetracted(TripleEventArgs)
  fullName: VDS.RDF.BaseGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleRetracted
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 833
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.BaseGraph.TripleRetracted\" data-throw-if-not-resolved=\"false\"></xref> event manually.\n"
  example: []
  syntax:
    content: protected void RaiseTripleRetracted(TripleEventArgs args)
    parameters:
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: ''
    content.vb: Protected Sub RaiseTripleRetracted(args As TripleEventArgs)
  overload: VDS.RDF.BaseGraph.RaiseTripleRetracted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.RaiseTripleRetracted(VDS.RDF.Triple)
  commentId: M:VDS.RDF.BaseGraph.RaiseTripleRetracted(VDS.RDF.Triple)
  id: RaiseTripleRetracted(VDS.RDF.Triple)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: RaiseTripleRetracted(Triple)
  nameWithType: BaseGraph.RaiseTripleRetracted(Triple)
  fullName: VDS.RDF.BaseGraph.RaiseTripleRetracted(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleRetracted
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 845
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.BaseGraph.TripleRetracted\" data-throw-if-not-resolved=\"false\"></xref> event manually.\n"
  example: []
  syntax:
    content: protected void RaiseTripleRetracted(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    content.vb: Protected Sub RaiseTripleRetracted(t As Triple)
  overload: VDS.RDF.BaseGraph.RaiseTripleRetracted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.BaseGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  id: RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: RaiseGraphChanged(TripleEventArgs)
  nameWithType: BaseGraph.RaiseGraphChanged(TripleEventArgs)
  fullName: VDS.RDF.BaseGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseGraphChanged
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 861
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.BaseGraph.Changed\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void RaiseGraphChanged(TripleEventArgs args)
    parameters:
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: Triple Event Arguments.
    content.vb: Protected Sub RaiseGraphChanged(args As TripleEventArgs)
  overload: VDS.RDF.BaseGraph.RaiseGraphChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.RaiseGraphChanged
  commentId: M:VDS.RDF.BaseGraph.RaiseGraphChanged
  id: RaiseGraphChanged
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: RaiseGraphChanged()
  nameWithType: BaseGraph.RaiseGraphChanged()
  fullName: VDS.RDF.BaseGraph.RaiseGraphChanged()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseGraphChanged
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 869
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.BaseGraph.Changed\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void RaiseGraphChanged()
    content.vb: Protected Sub RaiseGraphChanged
  overload: VDS.RDF.BaseGraph.RaiseGraphChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.RaiseClearRequested
  commentId: M:VDS.RDF.BaseGraph.RaiseClearRequested
  id: RaiseClearRequested
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: RaiseClearRequested()
  nameWithType: BaseGraph.RaiseClearRequested()
  fullName: VDS.RDF.BaseGraph.RaiseClearRequested()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseClearRequested
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 878
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.BaseGraph.ClearRequested\" data-throw-if-not-resolved=\"false\"></xref> event and returning whether any of the Event Handlers cancelled the operation.\n"
  example: []
  syntax:
    content: protected bool RaiseClearRequested()
    return:
      type: System.Boolean
      description: True if the operation can continue, false if it should be aborted.
    content.vb: Protected Function RaiseClearRequested As Boolean
  overload: VDS.RDF.BaseGraph.RaiseClearRequested*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.RaiseCleared
  commentId: M:VDS.RDF.BaseGraph.RaiseCleared
  id: RaiseCleared
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: RaiseCleared()
  nameWithType: BaseGraph.RaiseCleared()
  fullName: VDS.RDF.BaseGraph.RaiseCleared()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseCleared
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 896
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.BaseGraph.Cleared\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void RaiseCleared()
    content.vb: Protected Sub RaiseCleared
  overload: VDS.RDF.BaseGraph.RaiseCleared*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.RaiseMergeRequested
  commentId: M:VDS.RDF.BaseGraph.RaiseMergeRequested
  id: RaiseMergeRequested
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: RaiseMergeRequested()
  nameWithType: BaseGraph.RaiseMergeRequested()
  fullName: VDS.RDF.BaseGraph.RaiseMergeRequested()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseMergeRequested
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 905
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.BaseGraph.MergeRequested\" data-throw-if-not-resolved=\"false\"></xref> event and returning whether any of the Event Handlers cancelled the operation.\n"
  example: []
  syntax:
    content: protected bool RaiseMergeRequested()
    return:
      type: System.Boolean
      description: True if the operation can continue, false if it should be aborted.
    content.vb: Protected Function RaiseMergeRequested As Boolean
  overload: VDS.RDF.BaseGraph.RaiseMergeRequested*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.RaiseMerged
  commentId: M:VDS.RDF.BaseGraph.RaiseMerged
  id: RaiseMerged
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: RaiseMerged()
  nameWithType: BaseGraph.RaiseMerged()
  fullName: VDS.RDF.BaseGraph.RaiseMerged()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseMerged
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 923
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.BaseGraph.Merged\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void RaiseMerged()
    content.vb: Protected Sub RaiseMerged
  overload: VDS.RDF.BaseGraph.RaiseMerged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.AttachEventHandlers(VDS.RDF.BaseTripleCollection)
  commentId: M:VDS.RDF.BaseGraph.AttachEventHandlers(VDS.RDF.BaseTripleCollection)
  id: AttachEventHandlers(VDS.RDF.BaseTripleCollection)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: AttachEventHandlers(BaseTripleCollection)
  nameWithType: BaseGraph.AttachEventHandlers(BaseTripleCollection)
  fullName: VDS.RDF.BaseGraph.AttachEventHandlers(VDS.RDF.BaseTripleCollection)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AttachEventHandlers
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 935
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for attaching the necessary event Handlers to a Triple Collection.\n"
  remarks: "\nMay be useful if you replace the Triple Collection after instantiation e.g. as done in <xref href=\"VDS.RDF.Query.SparqlView\" data-throw-if-not-resolved=\"false\"></xref>&apos;s.\n"
  example: []
  syntax:
    content: protected void AttachEventHandlers(BaseTripleCollection tripleCollection)
    parameters:
    - id: tripleCollection
      type: VDS.RDF.BaseTripleCollection
      description: Triple Collection.
    content.vb: Protected Sub AttachEventHandlers(tripleCollection As BaseTripleCollection)
  overload: VDS.RDF.BaseGraph.AttachEventHandlers*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.DetachEventHandlers(VDS.RDF.BaseTripleCollection)
  commentId: M:VDS.RDF.BaseGraph.DetachEventHandlers(VDS.RDF.BaseTripleCollection)
  id: DetachEventHandlers(VDS.RDF.BaseTripleCollection)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: DetachEventHandlers(BaseTripleCollection)
  nameWithType: BaseGraph.DetachEventHandlers(BaseTripleCollection)
  fullName: VDS.RDF.BaseGraph.DetachEventHandlers(VDS.RDF.BaseTripleCollection)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DetachEventHandlers
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 948
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for detaching the necessary event Handlers from a Triple Collection.\n"
  remarks: "\nMay be useful if you replace the Triple Collection after instantiation e.g. as done in <xref href=\"VDS.RDF.Query.SparqlView\" data-throw-if-not-resolved=\"false\"></xref>&apos;s.\n"
  example: []
  syntax:
    content: protected void DetachEventHandlers(BaseTripleCollection tripleCollection)
    parameters:
    - id: tripleCollection
      type: VDS.RDF.BaseTripleCollection
      description: Triple Collection.
    content.vb: Protected Sub DetachEventHandlers(tripleCollection As BaseTripleCollection)
  overload: VDS.RDF.BaseGraph.DetachEventHandlers*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraph.Dispose
  commentId: M:VDS.RDF.BaseGraph.Dispose
  id: Dispose
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: BaseGraph.Dispose()
  fullName: VDS.RDF.BaseGraph.Dispose()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dispose
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 959
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDisposes of a Graph.\n"
  example: []
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  overload: VDS.RDF.BaseGraph.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.BaseGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: BaseGraph.GetObjectData(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.BaseGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetObjectData
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 971
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Serialization Information for serializing a Graph.\n"
  example: []
  syntax:
    content: public void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Public Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: VDS.RDF.BaseGraph.GetObjectData*
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.GetSchema
  commentId: M:VDS.RDF.BaseGraph.GetSchema
  id: GetSchema
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: BaseGraph.GetSchema()
  fullName: VDS.RDF.BaseGraph.GetSchema()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSchema
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 988
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Schema for XML Serialization.\n"
  example: []
  syntax:
    content: public XmlSchema GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
      description: ''
    content.vb: Public Function GetSchema As XmlSchema
  overload: VDS.RDF.BaseGraph.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.BaseGraph.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: BaseGraph.ReadXml(XmlReader)
  fullName: VDS.RDF.BaseGraph.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ReadXml
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 997
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReads the data for XML deserialization.\n"
  example: []
  syntax:
    content: public void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: XML Reader.
    content.vb: Public Sub ReadXml(reader As XmlReader)
  overload: VDS.RDF.BaseGraph.ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraph.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.BaseGraph.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.BaseGraph
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: BaseGraph.WriteXml(XmlWriter)
  fullName: VDS.RDF.BaseGraph.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WriteXml
    path: Libraries/dotNetRDF/Core/BaseGraph.cs
    startLine: 1060
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nWrites the data for XML serialization.\n"
  example: []
  syntax:
    content: public void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: XML Writer.
    content.vb: Public Sub WriteXml(writer As XmlWriter)
  overload: VDS.RDF.BaseGraph.WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.INodeFactory
  commentId: T:VDS.RDF.INodeFactory
  parent: VDS.RDF
  name: INodeFactory
  nameWithType: INodeFactory
  fullName: VDS.RDF.INodeFactory
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  commentId: M:VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  parent: VDS.RDF.Data.DataTables.GraphExtensions
  definition: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  name: ToDataTable()
  nameWithType: GraphExtensions.ToDataTable()
  fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable()
  spec.csharp:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseGraph>()
  nameWithType: Extensions.AsEnumerable<BaseGraph>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.BaseGraph>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseGraph)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.BaseGraph)()
  name.vb: AsEnumerable(Of BaseGraph)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseGraph>
    nameWithType: Extensions.AsEnumerable<BaseGraph>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.BaseGraph>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseGraph)
    nameWithType: Extensions.AsEnumerable(Of BaseGraph)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.BaseGraph)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Assert(INode, INode, INode)
  nameWithType: Extensions.Assert(INode, INode, INode)
  fullName: VDS.RDF.Extensions.Assert(VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Retract(INode, INode, INode)
  nameWithType: Extensions.Retract(INode, INode, INode)
  fullName: VDS.RDF.Extensions.Retract(VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: AssertList<T>(IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: AssertList<T>(INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: AssertList(IEnumerable<INode>)
  nameWithType: Extensions.AssertList(IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: AssertList(INode, IEnumerable<INode>)
  nameWithType: Extensions.AssertList(INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListAsTriples(INode)
  nameWithType: Extensions.GetListAsTriples(INode)
  fullName: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListItems(INode)
  nameWithType: Extensions.GetListItems(INode)
  fullName: VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListNodes(INode)
  nameWithType: Extensions.GetListNodes(INode)
  fullName: VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  name: RetractList(INode)
  nameWithType: Extensions.RetractList(INode)
  fullName: VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: AddToList<T>(INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AddToList<T>(INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AddToList<T>(VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(Of T)(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AddToList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList<T>
    nameWithType: Extensions.AddToList<T>
    fullName: VDS.RDF.Extensions.AddToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList(Of T)
    nameWithType: Extensions.AddToList(Of T)
    fullName: VDS.RDF.Extensions.AddToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: AddToList(INode, IEnumerable<INode>)
  nameWithType: Extensions.AddToList(INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AddToList(VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AddToList(INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: RemoveFromList<T>(INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.RemoveFromList<T>(INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList<T>(VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(Of T)(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: RemoveFromList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList<T>
    nameWithType: Extensions.RemoveFromList<T>
    fullName: VDS.RDF.Extensions.RemoveFromList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList(Of T)
    nameWithType: Extensions.RemoveFromList(Of T)
    fullName: VDS.RDF.Extensions.RemoveFromList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: RemoveFromList(INode, IEnumerable<INode>)
  nameWithType: Extensions.RemoveFromList(INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: RemoveFromList(INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  name: ExecuteQuery(String)
  nameWithType: GraphExtensions.ExecuteQuery(String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, String)
  nameWithType: GraphExtensions.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  name: LoadFromFile(String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromFile(String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  name: LoadFromFile(String)
  nameWithType: GraphExtensions.LoadFromFile(String)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  name: LoadFromUri(Uri, IRdfReader)
  nameWithType: GraphExtensions.LoadFromUri(Uri, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  name: LoadFromUri(Uri)
  nameWithType: GraphExtensions.LoadFromUri(Uri)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  name: LoadFromString(String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromString(String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  name: LoadFromString(String)
  nameWithType: GraphExtensions.LoadFromString(String)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  name: LoadFromEmbeddedResource(String)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(String)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  name: LoadFromEmbeddedResource(String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  name: SaveToFile(String, IRdfWriter)
  nameWithType: GraphExtensions.SaveToFile(String, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(System.String, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  name: SaveToFile(String, IStoreWriter)
  nameWithType: GraphExtensions.SaveToFile(String, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(System.String, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  name: SaveToFile(String)
  nameWithType: GraphExtensions.SaveToFile(String)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  name: SaveToStream(TextWriter, IRdfWriter)
  nameWithType: GraphExtensions.SaveToStream(TextWriter, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  name: SaveToStream(TextWriter, IStoreWriter)
  nameWithType: GraphExtensions.SaveToStream(TextWriter, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  name: SaveToStream(String, TextWriter)
  nameWithType: GraphExtensions.SaveToStream(String, TextWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(System.String, System.IO.TextWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  parent: VDS.RDF.Dynamic.DynamicExtensions
  definition: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  name: AsDynamic(Uri, Uri)
  nameWithType: DynamicExtensions.AsDynamic(Uri, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  name: ToDataTable(IGraph)
  nameWithType: GraphExtensions.ToDataTable(IGraph)
  fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Data.DataTables.GraphExtensions
  commentId: T:VDS.RDF.Data.DataTables.GraphExtensions
  parent: VDS.RDF.Data.DataTables
  name: GraphExtensions
  nameWithType: GraphExtensions
  fullName: VDS.RDF.Data.DataTables.GraphExtensions
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Assert(IGraph, INode, INode, INode)
  nameWithType: Extensions.Assert(IGraph, INode, INode, INode)
  fullName: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph, VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Retract(IGraph, INode, INode, INode)
  nameWithType: Extensions.Retract(IGraph, INode, INode, INode)
  fullName: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph, VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: AssertList<T>(IGraph, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(IGraph, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(IGraph, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(IGraph, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: AssertList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: AssertList(IGraph, IEnumerable<INode>)
  nameWithType: Extensions.AssertList(IGraph, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(IGraph, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(IGraph, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: AssertList(IGraph, INode, IEnumerable<INode>)
  nameWithType: Extensions.AssertList(IGraph, INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(IGraph, INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(IGraph, INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListAsTriples(IGraph, INode)
  nameWithType: Extensions.GetListAsTriples(IGraph, INode)
  fullName: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListItems(IGraph, INode)
  nameWithType: Extensions.GetListItems(IGraph, INode)
  fullName: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListNodes(IGraph, INode)
  nameWithType: Extensions.GetListNodes(IGraph, INode)
  fullName: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  name: RetractList(IGraph, INode)
  nameWithType: Extensions.RetractList(IGraph, INode)
  fullName: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: AddToList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AddToList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AddToList<T>(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(Of T)(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AddToList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList<T>
    nameWithType: Extensions.AddToList<T>
    fullName: VDS.RDF.Extensions.AddToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList(Of T)
    nameWithType: Extensions.AddToList(Of T)
    fullName: VDS.RDF.Extensions.AddToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: AddToList(IGraph, INode, IEnumerable<INode>)
  nameWithType: Extensions.AddToList(IGraph, INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(IGraph, INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AddToList(IGraph, INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: RemoveFromList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.RemoveFromList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList<T>(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(Of T)(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: RemoveFromList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList<T>
    nameWithType: Extensions.RemoveFromList<T>
    fullName: VDS.RDF.Extensions.RemoveFromList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList(Of T)
    nameWithType: Extensions.RemoveFromList(Of T)
    fullName: VDS.RDF.Extensions.RemoveFromList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: RemoveFromList(IGraph, INode, IEnumerable<INode>)
  nameWithType: Extensions.RemoveFromList(IGraph, INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(IGraph, INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: RemoveFromList(IGraph, INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: ExecuteQuery(IGraph, String)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions
  commentId: T:VDS.RDF.GraphExtensions
  parent: VDS.RDF
  name: GraphExtensions
  nameWithType: GraphExtensions
  fullName: VDS.RDF.GraphExtensions
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  isExternal: true
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, String)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(IGraph, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(IGraph, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromFile(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromFile(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: LoadFromFile(IGraph, String)
  nameWithType: GraphExtensions.LoadFromFile(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromUri(IGraph, Uri, IRdfReader)
  nameWithType: GraphExtensions.LoadFromUri(IGraph, Uri, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph, System.Uri, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  isExternal: true
  name: LoadFromUri(IGraph, Uri)
  nameWithType: GraphExtensions.LoadFromUri(IGraph, Uri)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromString(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromString(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: LoadFromString(IGraph, String)
  nameWithType: GraphExtensions.LoadFromString(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: LoadFromEmbeddedResource(IGraph, String)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromEmbeddedResource(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  isExternal: true
  name: SaveToFile(IGraph, String, IRdfWriter)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  isExternal: true
  name: SaveToFile(IGraph, String, IStoreWriter)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: SaveToFile(IGraph, String)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  isExternal: true
  name: SaveToStream(IGraph, TextWriter, IRdfWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, TextWriter, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.IO.TextWriter, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  isExternal: true
  name: SaveToStream(IGraph, TextWriter, IStoreWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, TextWriter, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.IO.TextWriter, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  isExternal: true
  name: SaveToStream(IGraph, String, TextWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, String, TextWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.String, System.IO.TextWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  isExternal: true
  name: AsDynamic(IGraph, Uri, Uri)
  nameWithType: DynamicExtensions.AsDynamic(IGraph, Uri, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph, System.Uri, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions
  commentId: T:VDS.RDF.Dynamic.DynamicExtensions
  parent: VDS.RDF.Dynamic
  name: DynamicExtensions
  nameWithType: DynamicExtensions
  fullName: VDS.RDF.Dynamic.DynamicExtensions
- uid: VDS.RDF.Data.DataTables
  commentId: N:VDS.RDF.Data.DataTables
  name: VDS.RDF.Data.DataTables
  nameWithType: VDS.RDF.Data.DataTables
  fullName: VDS.RDF.Data.DataTables
- uid: VDS.RDF.Dynamic
  commentId: N:VDS.RDF.Dynamic
  name: VDS.RDF.Dynamic
  nameWithType: VDS.RDF.Dynamic
  fullName: VDS.RDF.Dynamic
- uid: VDS.RDF.BaseTripleCollection
  commentId: T:VDS.RDF.BaseTripleCollection
  parent: VDS.RDF
  name: BaseTripleCollection
  nameWithType: BaseTripleCollection
  fullName: VDS.RDF.BaseTripleCollection
- uid: VDS.RDF.NamespaceMapper
  commentId: T:VDS.RDF.NamespaceMapper
  parent: VDS.RDF
  name: NamespaceMapper
  nameWithType: NamespaceMapper
  fullName: VDS.RDF.NamespaceMapper
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.BlankNodeMapper
  commentId: T:VDS.RDF.BlankNodeMapper
  parent: VDS.RDF
  name: BlankNodeMapper
  nameWithType: BlankNodeMapper
  fullName: VDS.RDF.BlankNodeMapper
- uid: VDS.RDF.BaseGraph.#ctor*
  commentId: Overload:VDS.RDF.BaseGraph.#ctor
  name: BaseGraph
  nameWithType: BaseGraph.BaseGraph
  fullName: VDS.RDF.BaseGraph.BaseGraph
- uid: VDS.RDF.TreeIndexedTripleCollection
  commentId: T:VDS.RDF.TreeIndexedTripleCollection
  name: TreeIndexedTripleCollection
  nameWithType: TreeIndexedTripleCollection
  fullName: VDS.RDF.TreeIndexedTripleCollection
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: VDS.RDF.BaseGraph.Triples*
  commentId: Overload:VDS.RDF.BaseGraph.Triples
  name: Triples
  nameWithType: BaseGraph.Triples
  fullName: VDS.RDF.BaseGraph.Triples
- uid: VDS.RDF.IGraph.Triples
  commentId: P:VDS.RDF.IGraph.Triples
  parent: VDS.RDF.IGraph
  name: Triples
  nameWithType: IGraph.Triples
  fullName: VDS.RDF.IGraph.Triples
- uid: VDS.RDF.BaseGraph.Nodes*
  commentId: Overload:VDS.RDF.BaseGraph.Nodes
  name: Nodes
  nameWithType: BaseGraph.Nodes
  fullName: VDS.RDF.BaseGraph.Nodes
- uid: VDS.RDF.IGraph.Nodes
  commentId: P:VDS.RDF.IGraph.Nodes
  parent: VDS.RDF.IGraph
  name: Nodes
  nameWithType: IGraph.Nodes
  fullName: VDS.RDF.IGraph.Nodes
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INode>
  nameWithType: IEnumerable<INode>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.INode>
  nameWithType.vb: IEnumerable(Of INode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.INode)
  name.vb: IEnumerable(Of INode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.BaseGraph.AllNodes*
  commentId: Overload:VDS.RDF.BaseGraph.AllNodes
  name: AllNodes
  nameWithType: BaseGraph.AllNodes
  fullName: VDS.RDF.BaseGraph.AllNodes
- uid: VDS.RDF.IGraph.AllNodes
  commentId: P:VDS.RDF.IGraph.AllNodes
  parent: VDS.RDF.IGraph
  name: AllNodes
  nameWithType: IGraph.AllNodes
  fullName: VDS.RDF.IGraph.AllNodes
- uid: VDS.RDF.BaseGraph.NamespaceMap*
  commentId: Overload:VDS.RDF.BaseGraph.NamespaceMap
  name: NamespaceMap
  nameWithType: BaseGraph.NamespaceMap
  fullName: VDS.RDF.BaseGraph.NamespaceMap
- uid: VDS.RDF.IGraph.NamespaceMap
  commentId: P:VDS.RDF.IGraph.NamespaceMap
  parent: VDS.RDF.IGraph
  name: NamespaceMap
  nameWithType: IGraph.NamespaceMap
  fullName: VDS.RDF.IGraph.NamespaceMap
- uid: VDS.RDF.INamespaceMapper
  commentId: T:VDS.RDF.INamespaceMapper
  parent: VDS.RDF
  name: INamespaceMapper
  nameWithType: INamespaceMapper
  fullName: VDS.RDF.INamespaceMapper
- uid: VDS.RDF.BaseGraph.BaseUri*
  commentId: Overload:VDS.RDF.BaseGraph.BaseUri
  name: BaseUri
  nameWithType: BaseGraph.BaseUri
  fullName: VDS.RDF.BaseGraph.BaseUri
- uid: VDS.RDF.IGraph.BaseUri
  commentId: P:VDS.RDF.IGraph.BaseUri
  parent: VDS.RDF.IGraph
  name: BaseUri
  nameWithType: IGraph.BaseUri
  fullName: VDS.RDF.IGraph.BaseUri
- uid: VDS.RDF.BaseGraph.IsEmpty*
  commentId: Overload:VDS.RDF.BaseGraph.IsEmpty
  name: IsEmpty
  nameWithType: BaseGraph.IsEmpty
  fullName: VDS.RDF.BaseGraph.IsEmpty
- uid: VDS.RDF.IGraph.IsEmpty
  commentId: P:VDS.RDF.IGraph.IsEmpty
  parent: VDS.RDF.IGraph
  name: IsEmpty
  nameWithType: IGraph.IsEmpty
  fullName: VDS.RDF.IGraph.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.BaseGraph.Assert*
  commentId: Overload:VDS.RDF.BaseGraph.Assert
  name: Assert
  nameWithType: BaseGraph.Assert
  fullName: VDS.RDF.BaseGraph.Assert
- uid: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  parent: VDS.RDF.IGraph
  name: Assert(Triple)
  nameWithType: IGraph.Assert(Triple)
  fullName: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Assert(IEnumerable<Triple>)
  nameWithType: IGraph.Assert(IEnumerable<Triple>)
  fullName: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: IGraph.Assert(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Assert(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Triple>
  nameWithType: IEnumerable<Triple>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Triple>
  nameWithType.vb: IEnumerable(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple)
  name.vb: IEnumerable(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.Retract*
  commentId: Overload:VDS.RDF.BaseGraph.Retract
  name: Retract
  nameWithType: BaseGraph.Retract
  fullName: VDS.RDF.BaseGraph.Retract
- uid: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  parent: VDS.RDF.IGraph
  name: Retract(Triple)
  nameWithType: IGraph.Retract(Triple)
  fullName: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Retract(IEnumerable<Triple>)
  nameWithType: IGraph.Retract(IEnumerable<Triple>)
  fullName: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: IGraph.Retract(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Retract(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.ClearRequested
  commentId: E:VDS.RDF.BaseGraph.ClearRequested
  parent: VDS.RDF.BaseGraph
  name: ClearRequested
  nameWithType: BaseGraph.ClearRequested
  fullName: VDS.RDF.BaseGraph.ClearRequested
- uid: VDS.RDF.BaseGraph.Cleared
  commentId: E:VDS.RDF.BaseGraph.Cleared
  parent: VDS.RDF.BaseGraph
  name: Cleared
  nameWithType: BaseGraph.Cleared
  fullName: VDS.RDF.BaseGraph.Cleared
- uid: VDS.RDF.BaseGraph.Clear*
  commentId: Overload:VDS.RDF.BaseGraph.Clear
  name: Clear
  nameWithType: BaseGraph.Clear
  fullName: VDS.RDF.BaseGraph.Clear
- uid: VDS.RDF.IGraph.Clear
  commentId: M:VDS.RDF.IGraph.Clear
  parent: VDS.RDF.IGraph
  name: Clear()
  nameWithType: IGraph.Clear()
  fullName: VDS.RDF.IGraph.Clear()
  spec.csharp:
  - uid: VDS.RDF.IGraph.Clear
    name: Clear
    nameWithType: IGraph.Clear
    fullName: VDS.RDF.IGraph.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Clear
    name: Clear
    nameWithType: IGraph.Clear
    fullName: VDS.RDF.IGraph.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph
  commentId: T:VDS.RDF.BaseGraph
  parent: VDS.RDF
  name: BaseGraph
  nameWithType: BaseGraph
  fullName: VDS.RDF.BaseGraph
- uid: VDS.RDF.BaseGraph.CreateBlankNode*
  commentId: Overload:VDS.RDF.BaseGraph.CreateBlankNode
  name: CreateBlankNode
  nameWithType: BaseGraph.CreateBlankNode
  fullName: VDS.RDF.BaseGraph.CreateBlankNode
- uid: VDS.RDF.INodeFactory.CreateBlankNode
  commentId: M:VDS.RDF.INodeFactory.CreateBlankNode
  parent: VDS.RDF.INodeFactory
  name: CreateBlankNode()
  nameWithType: INodeFactory.CreateBlankNode()
  fullName: VDS.RDF.INodeFactory.CreateBlankNode()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IBlankNode
  commentId: T:VDS.RDF.IBlankNode
  parent: VDS.RDF
  name: IBlankNode
  nameWithType: IBlankNode
  fullName: VDS.RDF.IBlankNode
- uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateBlankNode(String)
  nameWithType: INodeFactory.CreateBlankNode(String)
  fullName: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.BaseGraph.CreateLiteralNode*
  commentId: Overload:VDS.RDF.BaseGraph.CreateLiteralNode
  name: CreateLiteralNode
  nameWithType: BaseGraph.CreateLiteralNode
  fullName: VDS.RDF.BaseGraph.CreateLiteralNode
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String)
  nameWithType: INodeFactory.CreateLiteralNode(String)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String, String)
  nameWithType: INodeFactory.CreateLiteralNode(String, String)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String, Uri)
  nameWithType: INodeFactory.CreateLiteralNode(String, Uri)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.CreateUriNode*
  commentId: Overload:VDS.RDF.BaseGraph.CreateUriNode
  name: CreateUriNode
  nameWithType: BaseGraph.CreateUriNode
  fullName: VDS.RDF.BaseGraph.CreateUriNode
- uid: VDS.RDF.IGraph.CreateUriNode
  commentId: M:VDS.RDF.IGraph.CreateUriNode
  parent: VDS.RDF.IGraph
  name: CreateUriNode()
  nameWithType: IGraph.CreateUriNode()
  fullName: VDS.RDF.IGraph.CreateUriNode()
  spec.csharp:
  - uid: VDS.RDF.IGraph.CreateUriNode
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.CreateUriNode
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IUriNode
  commentId: T:VDS.RDF.IUriNode
  parent: VDS.RDF
  name: IUriNode
  nameWithType: IUriNode
  fullName: VDS.RDF.IUriNode
- uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  commentId: M:VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateUriNode(Uri)
  nameWithType: INodeFactory.CreateUriNode(Uri)
  fullName: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
    name: CreateUriNode
    nameWithType: INodeFactory.CreateUriNode
    fullName: VDS.RDF.INodeFactory.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
    name: CreateUriNode
    nameWithType: INodeFactory.CreateUriNode
    fullName: VDS.RDF.INodeFactory.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.CreateUriNode(System.String)
  commentId: M:VDS.RDF.IGraph.CreateUriNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: CreateUriNode(String)
  nameWithType: IGraph.CreateUriNode(String)
  fullName: VDS.RDF.IGraph.CreateUriNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.CreateUriNode(System.String)
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.CreateUriNode(System.String)
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.CreateVariableNode*
  commentId: Overload:VDS.RDF.BaseGraph.CreateVariableNode
  name: CreateVariableNode
  nameWithType: BaseGraph.CreateVariableNode
  fullName: VDS.RDF.BaseGraph.CreateVariableNode
- uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateVariableNode(String)
  nameWithType: INodeFactory.CreateVariableNode(String)
  fullName: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
    name: CreateVariableNode
    nameWithType: INodeFactory.CreateVariableNode
    fullName: VDS.RDF.INodeFactory.CreateVariableNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
    name: CreateVariableNode
    nameWithType: INodeFactory.CreateVariableNode
    fullName: VDS.RDF.INodeFactory.CreateVariableNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IVariableNode
  commentId: T:VDS.RDF.IVariableNode
  parent: VDS.RDF
  name: IVariableNode
  nameWithType: IVariableNode
  fullName: VDS.RDF.IVariableNode
- uid: VDS.RDF.BaseGraph.CreateGraphLiteralNode*
  commentId: Overload:VDS.RDF.BaseGraph.CreateGraphLiteralNode
  name: CreateGraphLiteralNode
  nameWithType: BaseGraph.CreateGraphLiteralNode
  fullName: VDS.RDF.BaseGraph.CreateGraphLiteralNode
- uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  commentId: M:VDS.RDF.INodeFactory.CreateGraphLiteralNode
  parent: VDS.RDF.INodeFactory
  name: CreateGraphLiteralNode()
  nameWithType: INodeFactory.CreateGraphLiteralNode()
  fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraphLiteralNode
  commentId: T:VDS.RDF.IGraphLiteralNode
  parent: VDS.RDF
  name: IGraphLiteralNode
  nameWithType: IGraphLiteralNode
  fullName: VDS.RDF.IGraphLiteralNode
- uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  parent: VDS.RDF.INodeFactory
  name: CreateGraphLiteralNode(IGraph)
  nameWithType: INodeFactory.CreateGraphLiteralNode(IGraph)
  fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.GetBlankNode*
  commentId: Overload:VDS.RDF.BaseGraph.GetBlankNode
  name: GetBlankNode
  nameWithType: BaseGraph.GetBlankNode
  fullName: VDS.RDF.BaseGraph.GetBlankNode
- uid: VDS.RDF.IGraph.GetBlankNode(System.String)
  commentId: M:VDS.RDF.IGraph.GetBlankNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetBlankNode(String)
  nameWithType: IGraph.GetBlankNode(String)
  fullName: VDS.RDF.IGraph.GetBlankNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetBlankNode(System.String)
    name: GetBlankNode
    nameWithType: IGraph.GetBlankNode
    fullName: VDS.RDF.IGraph.GetBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetBlankNode(System.String)
    name: GetBlankNode
    nameWithType: IGraph.GetBlankNode
    fullName: VDS.RDF.IGraph.GetBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.GetLiteralNode*
  commentId: Overload:VDS.RDF.BaseGraph.GetLiteralNode
  name: GetLiteralNode
  nameWithType: BaseGraph.GetLiteralNode
  fullName: VDS.RDF.BaseGraph.GetLiteralNode
- uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetLiteralNode(String, String)
  nameWithType: IGraph.GetLiteralNode(String, String)
  fullName: VDS.RDF.IGraph.GetLiteralNode(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetLiteralNode(System.String)
  commentId: M:VDS.RDF.IGraph.GetLiteralNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetLiteralNode(String)
  nameWithType: IGraph.GetLiteralNode(String)
  fullName: VDS.RDF.IGraph.GetLiteralNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetLiteralNode(String, Uri)
  nameWithType: IGraph.GetLiteralNode(String, Uri)
  fullName: VDS.RDF.IGraph.GetLiteralNode(System.String, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.GetUriNode*
  commentId: Overload:VDS.RDF.BaseGraph.GetUriNode
  name: GetUriNode
  nameWithType: BaseGraph.GetUriNode
  fullName: VDS.RDF.BaseGraph.GetUriNode
- uid: VDS.RDF.IGraph.GetUriNode(System.String)
  commentId: M:VDS.RDF.IGraph.GetUriNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetUriNode(String)
  nameWithType: IGraph.GetUriNode(String)
  fullName: VDS.RDF.IGraph.GetUriNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetUriNode(System.String)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetUriNode(System.String)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetUriNode(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetUriNode(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetUriNode(Uri)
  nameWithType: IGraph.GetUriNode(Uri)
  fullName: VDS.RDF.IGraph.GetUriNode(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetUriNode(System.Uri)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetUriNode(System.Uri)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.GetTriples*
  commentId: Overload:VDS.RDF.BaseGraph.GetTriples
  name: GetTriples
  nameWithType: BaseGraph.GetTriples
  fullName: VDS.RDF.BaseGraph.GetTriples
- uid: VDS.RDF.IGraph.GetTriples(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriples(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriples(Uri)
  nameWithType: IGraph.GetTriples(Uri)
  fullName: VDS.RDF.IGraph.GetTriples(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriples(System.Uri)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriples(System.Uri)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriples(INode)
  nameWithType: IGraph.GetTriples(INode)
  fullName: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.BaseGraph.GetTriplesWithObject*
  commentId: Overload:VDS.RDF.BaseGraph.GetTriplesWithObject
  name: GetTriplesWithObject
  nameWithType: BaseGraph.GetTriplesWithObject
  fullName: VDS.RDF.BaseGraph.GetTriplesWithObject
- uid: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriplesWithObject(Uri)
  nameWithType: IGraph.GetTriplesWithObject(Uri)
  fullName: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithObject(INode)
  nameWithType: IGraph.GetTriplesWithObject(INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.GetTriplesWithPredicate*
  commentId: Overload:VDS.RDF.BaseGraph.GetTriplesWithPredicate
  name: GetTriplesWithPredicate
  nameWithType: BaseGraph.GetTriplesWithPredicate
  fullName: VDS.RDF.BaseGraph.GetTriplesWithPredicate
- uid: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithPredicate(INode)
  nameWithType: IGraph.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriplesWithPredicate(Uri)
  nameWithType: IGraph.GetTriplesWithPredicate(Uri)
  fullName: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.GetTriplesWithSubject*
  commentId: Overload:VDS.RDF.BaseGraph.GetTriplesWithSubject
  name: GetTriplesWithSubject
  nameWithType: BaseGraph.GetTriplesWithSubject
  fullName: VDS.RDF.BaseGraph.GetTriplesWithSubject
- uid: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithSubject(INode)
  nameWithType: IGraph.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriplesWithSubject(Uri)
  nameWithType: IGraph.GetTriplesWithSubject(Uri)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.GetTriplesWithSubjectPredicate*
  commentId: Overload:VDS.RDF.BaseGraph.GetTriplesWithSubjectPredicate
  name: GetTriplesWithSubjectPredicate
  nameWithType: BaseGraph.GetTriplesWithSubjectPredicate
  fullName: VDS.RDF.BaseGraph.GetTriplesWithSubjectPredicate
- uid: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: IGraph.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: IGraph.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: IGraph.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.GetTriplesWithSubjectObject*
  commentId: Overload:VDS.RDF.BaseGraph.GetTriplesWithSubjectObject
  name: GetTriplesWithSubjectObject
  nameWithType: BaseGraph.GetTriplesWithSubjectObject
  fullName: VDS.RDF.BaseGraph.GetTriplesWithSubjectObject
- uid: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: IGraph.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: IGraph.GetTriplesWithSubjectObject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: IGraph.GetTriplesWithSubjectObject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.GetTriplesWithPredicateObject*
  commentId: Overload:VDS.RDF.BaseGraph.GetTriplesWithPredicateObject
  name: GetTriplesWithPredicateObject
  nameWithType: BaseGraph.GetTriplesWithPredicateObject
  fullName: VDS.RDF.BaseGraph.GetTriplesWithPredicateObject
- uid: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: IGraph.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: IGraph.GetTriplesWithPredicateObject
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: IGraph.GetTriplesWithPredicateObject
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.ContainsTriple*
  commentId: Overload:VDS.RDF.BaseGraph.ContainsTriple
  name: ContainsTriple
  nameWithType: BaseGraph.ContainsTriple
  fullName: VDS.RDF.BaseGraph.ContainsTriple
- uid: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.IGraph
  name: ContainsTriple(Triple)
  nameWithType: IGraph.ContainsTriple(Triple)
  fullName: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: IGraph.ContainsTriple
    fullName: VDS.RDF.IGraph.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: IGraph.ContainsTriple
    fullName: VDS.RDF.IGraph.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.Merge*
  commentId: Overload:VDS.RDF.BaseGraph.Merge
  name: Merge
  nameWithType: BaseGraph.Merge
  fullName: VDS.RDF.BaseGraph.Merge
- uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: Merge(IGraph)
  nameWithType: IGraph.Merge(IGraph)
  fullName: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.MergeRequested
  commentId: E:VDS.RDF.BaseGraph.MergeRequested
  parent: VDS.RDF.BaseGraph
  name: MergeRequested
  nameWithType: BaseGraph.MergeRequested
  fullName: VDS.RDF.BaseGraph.MergeRequested
- uid: VDS.RDF.BaseGraph.Merged
  commentId: E:VDS.RDF.BaseGraph.Merged
  parent: VDS.RDF.BaseGraph
  name: Merged
  nameWithType: BaseGraph.Merged
  fullName: VDS.RDF.BaseGraph.Merged
- uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Merge(IGraph, Boolean)
  nameWithType: IGraph.Merge(IGraph, Boolean)
  fullName: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.Equals*
  commentId: Overload:VDS.RDF.BaseGraph.Equals
  name: Equals
  nameWithType: BaseGraph.Equals
  fullName: VDS.RDF.BaseGraph.Equals
- uid: VDS.RDF.GraphMatcher
  commentId: T:VDS.RDF.GraphMatcher
  name: GraphMatcher
  nameWithType: GraphMatcher
  fullName: VDS.RDF.GraphMatcher
- uid: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Equals(IGraph, Dictionary<INode, INode>)
  nameWithType: IGraph.Equals(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: IGraph.Equals(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: Equals(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: Equals
    nameWithType: IGraph.Equals
    fullName: VDS.RDF.IGraph.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: Equals
    nameWithType: IGraph.Equals
    fullName: VDS.RDF.IGraph.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
  commentId: T:System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<INode, INode>
  nameWithType: Dictionary<INode, INode>
  fullName: System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>
  nameWithType.vb: Dictionary(Of INode, INode)
  fullName.vb: System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode)
  name.vb: Dictionary(Of INode, INode)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.IsSubGraphOf*
  commentId: Overload:VDS.RDF.BaseGraph.IsSubGraphOf
  name: IsSubGraphOf
  nameWithType: BaseGraph.IsSubGraphOf
  fullName: VDS.RDF.BaseGraph.IsSubGraphOf
- uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: IsSubGraphOf(IGraph)
  nameWithType: IGraph.IsSubGraphOf(IGraph)
  fullName: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: IsSubGraphOf(IGraph, Dictionary<INode, INode>)
  nameWithType: IGraph.IsSubGraphOf(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: IGraph.IsSubGraphOf(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: IsSubGraphOf(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.HasSubGraph*
  commentId: Overload:VDS.RDF.BaseGraph.HasSubGraph
  name: HasSubGraph
  nameWithType: BaseGraph.HasSubGraph
  fullName: VDS.RDF.BaseGraph.HasSubGraph
- uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: HasSubGraph(IGraph)
  nameWithType: IGraph.HasSubGraph(IGraph)
  fullName: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: HasSubGraph(IGraph, Dictionary<INode, INode>)
  nameWithType: IGraph.HasSubGraph(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: IGraph.HasSubGraph(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: HasSubGraph(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.Difference*
  commentId: Overload:VDS.RDF.BaseGraph.Difference
  name: Difference
  nameWithType: BaseGraph.Difference
  fullName: VDS.RDF.BaseGraph.Difference
- uid: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: Difference(IGraph)
  nameWithType: IGraph.Difference(IGraph)
  fullName: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
    name: Difference
    nameWithType: IGraph.Difference
    fullName: VDS.RDF.IGraph.Difference
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
    name: Difference
    nameWithType: IGraph.Difference
    fullName: VDS.RDF.IGraph.Difference
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphDiffReport
  commentId: T:VDS.RDF.GraphDiffReport
  parent: VDS.RDF
  name: GraphDiffReport
  nameWithType: GraphDiffReport
  fullName: VDS.RDF.GraphDiffReport
- uid: VDS.RDF.BaseGraph.ResolveQName*
  commentId: Overload:VDS.RDF.BaseGraph.ResolveQName
  name: ResolveQName
  nameWithType: BaseGraph.ResolveQName
  fullName: VDS.RDF.BaseGraph.ResolveQName
- uid: VDS.RDF.IGraph.ResolveQName(System.String)
  commentId: M:VDS.RDF.IGraph.ResolveQName(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: ResolveQName(String)
  nameWithType: IGraph.ResolveQName(String)
  fullName: VDS.RDF.IGraph.ResolveQName(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.ResolveQName(System.String)
    name: ResolveQName
    nameWithType: IGraph.ResolveQName
    fullName: VDS.RDF.IGraph.ResolveQName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.ResolveQName(System.String)
    name: ResolveQName
    nameWithType: IGraph.ResolveQName
    fullName: VDS.RDF.IGraph.ResolveQName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.GetNextBlankNodeID*
  commentId: Overload:VDS.RDF.BaseGraph.GetNextBlankNodeID
  name: GetNextBlankNodeID
  nameWithType: BaseGraph.GetNextBlankNodeID
  fullName: VDS.RDF.BaseGraph.GetNextBlankNodeID
- uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
  commentId: M:VDS.RDF.INodeFactory.GetNextBlankNodeID
  parent: VDS.RDF.INodeFactory
  name: GetNextBlankNodeID()
  nameWithType: INodeFactory.GetNextBlankNodeID()
  fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
    name: GetNextBlankNodeID
    nameWithType: INodeFactory.GetNextBlankNodeID
    fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
    name: GetNextBlankNodeID
    nameWithType: INodeFactory.GetNextBlankNodeID
    fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.TripleAsserted
  commentId: E:VDS.RDF.IGraph.TripleAsserted
  parent: VDS.RDF.IGraph
  name: TripleAsserted
  nameWithType: IGraph.TripleAsserted
  fullName: VDS.RDF.IGraph.TripleAsserted
- uid: VDS.RDF.TripleEventHandler
  commentId: T:VDS.RDF.TripleEventHandler
  parent: VDS.RDF
  name: TripleEventHandler
  nameWithType: TripleEventHandler
  fullName: VDS.RDF.TripleEventHandler
- uid: VDS.RDF.IGraph.TripleRetracted
  commentId: E:VDS.RDF.IGraph.TripleRetracted
  parent: VDS.RDF.IGraph
  name: TripleRetracted
  nameWithType: IGraph.TripleRetracted
  fullName: VDS.RDF.IGraph.TripleRetracted
- uid: VDS.RDF.IGraph.Changed
  commentId: E:VDS.RDF.IGraph.Changed
  parent: VDS.RDF.IGraph
  name: Changed
  nameWithType: IGraph.Changed
  fullName: VDS.RDF.IGraph.Changed
- uid: VDS.RDF.GraphEventHandler
  commentId: T:VDS.RDF.GraphEventHandler
  parent: VDS.RDF
  name: GraphEventHandler
  nameWithType: GraphEventHandler
  fullName: VDS.RDF.GraphEventHandler
- uid: VDS.RDF.IGraph.ClearRequested
  commentId: E:VDS.RDF.IGraph.ClearRequested
  parent: VDS.RDF.IGraph
  name: ClearRequested
  nameWithType: IGraph.ClearRequested
  fullName: VDS.RDF.IGraph.ClearRequested
- uid: VDS.RDF.CancellableGraphEventHandler
  commentId: T:VDS.RDF.CancellableGraphEventHandler
  parent: VDS.RDF
  name: CancellableGraphEventHandler
  nameWithType: CancellableGraphEventHandler
  fullName: VDS.RDF.CancellableGraphEventHandler
- uid: VDS.RDF.IGraph.Cleared
  commentId: E:VDS.RDF.IGraph.Cleared
  parent: VDS.RDF.IGraph
  name: Cleared
  nameWithType: IGraph.Cleared
  fullName: VDS.RDF.IGraph.Cleared
- uid: VDS.RDF.IGraph.MergeRequested
  commentId: E:VDS.RDF.IGraph.MergeRequested
  parent: VDS.RDF.IGraph
  name: MergeRequested
  nameWithType: IGraph.MergeRequested
  fullName: VDS.RDF.IGraph.MergeRequested
- uid: VDS.RDF.IGraph.Merged
  commentId: E:VDS.RDF.IGraph.Merged
  parent: VDS.RDF.IGraph
  name: Merged
  nameWithType: IGraph.Merged
  fullName: VDS.RDF.IGraph.Merged
- uid: VDS.RDF.BaseTripleCollection.TripleAdded
  commentId: E:VDS.RDF.BaseTripleCollection.TripleAdded
  parent: VDS.RDF.BaseTripleCollection
  name: TripleAdded
  nameWithType: BaseTripleCollection.TripleAdded
  fullName: VDS.RDF.BaseTripleCollection.TripleAdded
- uid: VDS.RDF.BaseGraph.TripleAsserted
  commentId: E:VDS.RDF.BaseGraph.TripleAsserted
  parent: VDS.RDF.BaseGraph
  name: TripleAsserted
  nameWithType: BaseGraph.TripleAsserted
  fullName: VDS.RDF.BaseGraph.TripleAsserted
- uid: VDS.RDF.BaseGraph.OnTripleAsserted*
  commentId: Overload:VDS.RDF.BaseGraph.OnTripleAsserted
  name: OnTripleAsserted
  nameWithType: BaseGraph.OnTripleAsserted
  fullName: VDS.RDF.BaseGraph.OnTripleAsserted
- uid: VDS.RDF.TripleEventArgs
  commentId: T:VDS.RDF.TripleEventArgs
  parent: VDS.RDF
  name: TripleEventArgs
  nameWithType: TripleEventArgs
  fullName: VDS.RDF.TripleEventArgs
- uid: VDS.RDF.BaseGraph.RaiseTripleAsserted*
  commentId: Overload:VDS.RDF.BaseGraph.RaiseTripleAsserted
  name: RaiseTripleAsserted
  nameWithType: BaseGraph.RaiseTripleAsserted
  fullName: VDS.RDF.BaseGraph.RaiseTripleAsserted
- uid: VDS.RDF.BaseTripleCollection.TripleRemoved
  commentId: E:VDS.RDF.BaseTripleCollection.TripleRemoved
  parent: VDS.RDF.BaseTripleCollection
  name: TripleRemoved
  nameWithType: BaseTripleCollection.TripleRemoved
  fullName: VDS.RDF.BaseTripleCollection.TripleRemoved
- uid: VDS.RDF.BaseGraph.TripleRetracted
  commentId: E:VDS.RDF.BaseGraph.TripleRetracted
  parent: VDS.RDF.BaseGraph
  name: TripleRetracted
  nameWithType: BaseGraph.TripleRetracted
  fullName: VDS.RDF.BaseGraph.TripleRetracted
- uid: VDS.RDF.BaseGraph.OnTripleRetracted*
  commentId: Overload:VDS.RDF.BaseGraph.OnTripleRetracted
  name: OnTripleRetracted
  nameWithType: BaseGraph.OnTripleRetracted
  fullName: VDS.RDF.BaseGraph.OnTripleRetracted
- uid: VDS.RDF.BaseGraph.RaiseTripleRetracted*
  commentId: Overload:VDS.RDF.BaseGraph.RaiseTripleRetracted
  name: RaiseTripleRetracted
  nameWithType: BaseGraph.RaiseTripleRetracted
  fullName: VDS.RDF.BaseGraph.RaiseTripleRetracted
- uid: VDS.RDF.BaseGraph.Changed
  commentId: E:VDS.RDF.BaseGraph.Changed
  parent: VDS.RDF.BaseGraph
  name: Changed
  nameWithType: BaseGraph.Changed
  fullName: VDS.RDF.BaseGraph.Changed
- uid: VDS.RDF.BaseGraph.RaiseGraphChanged*
  commentId: Overload:VDS.RDF.BaseGraph.RaiseGraphChanged
  name: RaiseGraphChanged
  nameWithType: BaseGraph.RaiseGraphChanged
  fullName: VDS.RDF.BaseGraph.RaiseGraphChanged
- uid: VDS.RDF.BaseGraph.RaiseClearRequested*
  commentId: Overload:VDS.RDF.BaseGraph.RaiseClearRequested
  name: RaiseClearRequested
  nameWithType: BaseGraph.RaiseClearRequested
  fullName: VDS.RDF.BaseGraph.RaiseClearRequested
- uid: VDS.RDF.BaseGraph.RaiseCleared*
  commentId: Overload:VDS.RDF.BaseGraph.RaiseCleared
  name: RaiseCleared
  nameWithType: BaseGraph.RaiseCleared
  fullName: VDS.RDF.BaseGraph.RaiseCleared
- uid: VDS.RDF.BaseGraph.RaiseMergeRequested*
  commentId: Overload:VDS.RDF.BaseGraph.RaiseMergeRequested
  name: RaiseMergeRequested
  nameWithType: BaseGraph.RaiseMergeRequested
  fullName: VDS.RDF.BaseGraph.RaiseMergeRequested
- uid: VDS.RDF.BaseGraph.RaiseMerged*
  commentId: Overload:VDS.RDF.BaseGraph.RaiseMerged
  name: RaiseMerged
  nameWithType: BaseGraph.RaiseMerged
  fullName: VDS.RDF.BaseGraph.RaiseMerged
- uid: VDS.RDF.Query.SparqlView
  commentId: T:VDS.RDF.Query.SparqlView
  name: SparqlView
  nameWithType: SparqlView
  fullName: VDS.RDF.Query.SparqlView
- uid: VDS.RDF.BaseGraph.AttachEventHandlers*
  commentId: Overload:VDS.RDF.BaseGraph.AttachEventHandlers
  name: AttachEventHandlers
  nameWithType: BaseGraph.AttachEventHandlers
  fullName: VDS.RDF.BaseGraph.AttachEventHandlers
- uid: VDS.RDF.BaseGraph.DetachEventHandlers*
  commentId: Overload:VDS.RDF.BaseGraph.DetachEventHandlers
  name: DetachEventHandlers
  nameWithType: BaseGraph.DetachEventHandlers
  fullName: VDS.RDF.BaseGraph.DetachEventHandlers
- uid: VDS.RDF.BaseGraph.Dispose*
  commentId: Overload:VDS.RDF.BaseGraph.Dispose
  name: Dispose
  nameWithType: BaseGraph.Dispose
  fullName: VDS.RDF.BaseGraph.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.GetObjectData*
  commentId: Overload:VDS.RDF.BaseGraph.GetObjectData
  name: GetObjectData
  nameWithType: BaseGraph.GetObjectData
  fullName: VDS.RDF.BaseGraph.GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraph.GetSchema*
  commentId: Overload:VDS.RDF.BaseGraph.GetSchema
  name: GetSchema
  nameWithType: BaseGraph.GetSchema
  fullName: VDS.RDF.BaseGraph.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: true
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: VDS.RDF.BaseGraph.ReadXml*
  commentId: Overload:VDS.RDF.BaseGraph.ReadXml
  name: ReadXml
  nameWithType: BaseGraph.ReadXml
  fullName: VDS.RDF.BaseGraph.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: VDS.RDF.BaseGraph.WriteXml*
  commentId: Overload:VDS.RDF.BaseGraph.WriteXml
  name: WriteXml
  nameWithType: BaseGraph.WriteXml
  fullName: VDS.RDF.BaseGraph.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
shouldSkipMarkup: true
