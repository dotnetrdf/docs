### YamlMime:ManagedReference
items:
- uid: VDS.RDF.MimeTypesHelper
  commentId: T:VDS.RDF.MimeTypesHelper
  id: MimeTypesHelper
  parent: VDS.RDF
  children:
  - VDS.RDF.MimeTypesHelper.AddDefinition(VDS.RDF.MimeTypeDefinition)
  - VDS.RDF.MimeTypesHelper.Any
  - VDS.RDF.MimeTypesHelper.ApplyParserOptions(System.Object)
  - VDS.RDF.MimeTypesHelper.CharsetUtf16
  - VDS.RDF.MimeTypesHelper.CharsetUtf8
  - VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(VDS.RDF.IRdfReader)
  - VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(VDS.RDF.IStoreReader)
  - VDS.RDF.MimeTypesHelper.DefaultCsvExtension
  - VDS.RDF.MimeTypesHelper.DefaultGZipExtension
  - VDS.RDF.MimeTypesHelper.DefaultHtmlExtension
  - VDS.RDF.MimeTypesHelper.DefaultJsonExtension
  - VDS.RDF.MimeTypesHelper.DefaultJsonLdExtension
  - VDS.RDF.MimeTypesHelper.DefaultNotation3Extension
  - VDS.RDF.MimeTypesHelper.DefaultNQuadsExtension
  - VDS.RDF.MimeTypesHelper.DefaultNTriplesExtension
  - VDS.RDF.MimeTypesHelper.DefaultRdfJsonExtension
  - VDS.RDF.MimeTypesHelper.DefaultRdfXmlExtension
  - VDS.RDF.MimeTypesHelper.DefaultSparqlJsonExtension
  - VDS.RDF.MimeTypesHelper.DefaultSparqlQueryExtension
  - VDS.RDF.MimeTypesHelper.DefaultSparqlUpdateExtension
  - VDS.RDF.MimeTypesHelper.DefaultSparqlXmlExtension
  - VDS.RDF.MimeTypesHelper.DefaultTriGExtension
  - VDS.RDF.MimeTypesHelper.DefaultTriXExtension
  - VDS.RDF.MimeTypesHelper.DefaultTsvExtension
  - VDS.RDF.MimeTypesHelper.DefaultTurtleExtension
  - VDS.RDF.MimeTypesHelper.DefaultXHtmlExtension
  - VDS.RDF.MimeTypesHelper.Definitions
  - VDS.RDF.MimeTypesHelper.FormMultipart
  - VDS.RDF.MimeTypesHelper.GetDefinitions(System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.GetDefinitions(System.String)
  - VDS.RDF.MimeTypesHelper.GetDefinitionsByFileExtension(System.String)
  - VDS.RDF.MimeTypesHelper.GetFileExtension(System.String)
  - VDS.RDF.MimeTypesHelper.GetFileExtension(VDS.RDF.IRdfWriter)
  - VDS.RDF.MimeTypesHelper.GetFileExtension(VDS.RDF.IStoreWriter)
  - VDS.RDF.MimeTypesHelper.GetFilenameFilter
  - VDS.RDF.MimeTypesHelper.GetFilenameFilter(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - VDS.RDF.MimeTypesHelper.GetMimeType(System.String)
  - VDS.RDF.MimeTypesHelper.GetMimeType(VDS.RDF.IRdfWriter)
  - VDS.RDF.MimeTypesHelper.GetMimeTypes(System.String)
  - VDS.RDF.MimeTypesHelper.GetParser(System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.GetParser(System.String)
  - VDS.RDF.MimeTypesHelper.GetParserByFileExtension(System.String)
  - VDS.RDF.MimeTypesHelper.GetSparqlParser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  - VDS.RDF.MimeTypesHelper.GetSparqlParser(System.String)
  - VDS.RDF.MimeTypesHelper.GetSparqlParser(System.String,System.Boolean)
  - VDS.RDF.MimeTypesHelper.GetSparqlParserByFileExtension(System.String)
  - VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.Collections.Generic.IEnumerable{System.String},System.String@)
  - VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.String)
  - VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.String,System.String@)
  - VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension(System.String)
  - VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension(System.String,System.String@)
  - VDS.RDF.MimeTypesHelper.GetStoreParser(System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.GetStoreParser(System.String)
  - VDS.RDF.MimeTypesHelper.GetStoreParserByFileExtension(System.String)
  - VDS.RDF.MimeTypesHelper.GetStoreWriter(System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.GetStoreWriter(System.Collections.Generic.IEnumerable{System.String},System.String@)
  - VDS.RDF.MimeTypesHelper.GetStoreWriter(System.String)
  - VDS.RDF.MimeTypesHelper.GetStoreWriter(System.String,System.String@)
  - VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension(System.String)
  - VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension(System.String,System.String@)
  - VDS.RDF.MimeTypesHelper.GetTrueFileExtension(System.String)
  - VDS.RDF.MimeTypesHelper.GetTrueResourceExtension(System.String)
  - VDS.RDF.MimeTypesHelper.GetWriter(System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.GetWriter(System.Collections.Generic.IEnumerable{System.String},System.String@)
  - VDS.RDF.MimeTypesHelper.GetWriter(System.String)
  - VDS.RDF.MimeTypesHelper.GetWriter(System.String,System.String@)
  - VDS.RDF.MimeTypesHelper.GetWriterByFileExtension(System.String)
  - VDS.RDF.MimeTypesHelper.GetWriterByFileExtension(System.String,System.String@)
  - VDS.RDF.MimeTypesHelper.HttpAcceptHeader
  - VDS.RDF.MimeTypesHelper.HttpRdfDatasetAcceptHeader
  - VDS.RDF.MimeTypesHelper.HttpRdfOrDatasetAcceptHeader
  - VDS.RDF.MimeTypesHelper.HttpRdfOrSparqlAcceptHeader
  - VDS.RDF.MimeTypesHelper.HttpSparqlAcceptHeader
  - VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.IRdfReader,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.ISparqlResultsReader,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.IStoreReader,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.IRdfWriter,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.ISparqlResultsWriter,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.IStoreWriter,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypesHelper.ResetDefinitions
  - VDS.RDF.MimeTypesHelper.SparqlQuery
  - VDS.RDF.MimeTypesHelper.SparqlResultsXml
  - VDS.RDF.MimeTypesHelper.SparqlUpdate
  - VDS.RDF.MimeTypesHelper.SupportedRdfDatasetMimeTypes
  - VDS.RDF.MimeTypesHelper.SupportedRdfMimeTypes
  - VDS.RDF.MimeTypesHelper.SupportedRdfOrSparqlMimeTypes
  - VDS.RDF.MimeTypesHelper.SupportedSparqlMimeTypes
  - VDS.RDF.MimeTypesHelper.Utf8WWWFormURLEncoded
  - VDS.RDF.MimeTypesHelper.WWWFormURLEncoded
  langs:
  - csharp
  - vb
  name: MimeTypesHelper
  nameWithType: MimeTypesHelper
  fullName: VDS.RDF.MimeTypesHelper
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MimeTypesHelper
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper Class containing definitions of MIME Types for the various RDF Concrete Syntaxes and Content Negotation Methods.\n"
  example: []
  syntax:
    content: public static class MimeTypesHelper
    content.vb: Public Module MimeTypesHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.MimeTypesHelper.Any
  commentId: F:VDS.RDF.MimeTypesHelper.Any
  id: Any
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: Any
  nameWithType: MimeTypesHelper.Any
  fullName: VDS.RDF.MimeTypesHelper.Any
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Any
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 53
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMIME Type for accept any content Type.\n"
  example: []
  syntax:
    content: public const string Any = "*/*"
    return:
      type: System.String
    content.vb: Public Const Any As String = "*/*"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.WWWFormURLEncoded
  commentId: F:VDS.RDF.MimeTypesHelper.WWWFormURLEncoded
  id: WWWFormURLEncoded
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: WWWFormURLEncoded
  nameWithType: MimeTypesHelper.WWWFormURLEncoded
  fullName: VDS.RDF.MimeTypesHelper.WWWFormURLEncoded
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WWWFormURLEncoded
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 58
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMIME Type for URL Encoded WWW Form Content used when POSTing over HTTP.\n"
  example: []
  syntax:
    content: public const string WWWFormURLEncoded = "application/x-www-form-urlencoded"
    return:
      type: System.String
    content.vb: Public Const WWWFormURLEncoded As String = "application/x-www-form-urlencoded"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.Utf8WWWFormURLEncoded
  commentId: F:VDS.RDF.MimeTypesHelper.Utf8WWWFormURLEncoded
  id: Utf8WWWFormURLEncoded
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: Utf8WWWFormURLEncoded
  nameWithType: MimeTypesHelper.Utf8WWWFormURLEncoded
  fullName: VDS.RDF.MimeTypesHelper.Utf8WWWFormURLEncoded
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Utf8WWWFormURLEncoded
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMIME Type for URL Enoded WWW Form Content used when POSTing over HTTP in UTF-8 encoding.\n"
  example: []
  syntax:
    content: public const string Utf8WWWFormURLEncoded = "application/x-www-form-urlencoded;charset=utf-8"
    return:
      type: System.String
    content.vb: Public Const Utf8WWWFormURLEncoded As String = "application/x-www-form-urlencoded;charset=utf-8"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.FormMultipart
  commentId: F:VDS.RDF.MimeTypesHelper.FormMultipart
  id: FormMultipart
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: FormMultipart
  nameWithType: MimeTypesHelper.FormMultipart
  fullName: VDS.RDF.MimeTypesHelper.FormMultipart
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FormMultipart
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 68
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMIME Type for Multipart Form Data.\n"
  example: []
  syntax:
    content: public const string FormMultipart = "multipart/form-data"
    return:
      type: System.String
    content.vb: Public Const FormMultipart As String = "multipart/form-data"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.SparqlResultsXml
  commentId: F:VDS.RDF.MimeTypesHelper.SparqlResultsXml
  id: SparqlResultsXml
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: SparqlResultsXml
  nameWithType: MimeTypesHelper.SparqlResultsXml
  fullName: VDS.RDF.MimeTypesHelper.SparqlResultsXml
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlResultsXml
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 123
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMIME Types for SPARQL Results XML.\n"
  example: []
  syntax:
    content: public static string[] SparqlResultsXml
    return:
      type: System.String[]
    content.vb: Public Shared SparqlResultsXml As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.SparqlQuery
  commentId: F:VDS.RDF.MimeTypesHelper.SparqlQuery
  id: SparqlQuery
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: SparqlQuery
  nameWithType: MimeTypesHelper.SparqlQuery
  fullName: VDS.RDF.MimeTypesHelper.SparqlQuery
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlQuery
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 153
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMIME Type for SPARQL Queries.\n"
  example: []
  syntax:
    content: public const string SparqlQuery = "application/sparql-query"
    return:
      type: System.String
    content.vb: Public Const SparqlQuery As String = "application/sparql-query"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.SparqlUpdate
  commentId: F:VDS.RDF.MimeTypesHelper.SparqlUpdate
  id: SparqlUpdate
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: SparqlUpdate
  nameWithType: MimeTypesHelper.SparqlUpdate
  fullName: VDS.RDF.MimeTypesHelper.SparqlUpdate
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlUpdate
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 158
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMIME Type for SPARQL Updates.\n"
  example: []
  syntax:
    content: public const string SparqlUpdate = "application/sparql-update"
    return:
      type: System.String
    content.vb: Public Const SparqlUpdate As String = "application/sparql-update"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultTurtleExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultTurtleExtension
  id: DefaultTurtleExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultTurtleExtension
  nameWithType: MimeTypesHelper.DefaultTurtleExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultTurtleExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultTurtleExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 163
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for Turtle Files.\n"
  example: []
  syntax:
    content: public const string DefaultTurtleExtension = "ttl"
    return:
      type: System.String
    content.vb: Public Const DefaultTurtleExtension As String = "ttl"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultRdfXmlExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultRdfXmlExtension
  id: DefaultRdfXmlExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultRdfXmlExtension
  nameWithType: MimeTypesHelper.DefaultRdfXmlExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultRdfXmlExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultRdfXmlExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 167
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for RDF/XML.\n"
  example: []
  syntax:
    content: public const string DefaultRdfXmlExtension = "rdf"
    return:
      type: System.String
    content.vb: Public Const DefaultRdfXmlExtension As String = "rdf"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultNotation3Extension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultNotation3Extension
  id: DefaultNotation3Extension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultNotation3Extension
  nameWithType: MimeTypesHelper.DefaultNotation3Extension
  fullName: VDS.RDF.MimeTypesHelper.DefaultNotation3Extension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultNotation3Extension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 171
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for Notation 3.\n"
  example: []
  syntax:
    content: public const string DefaultNotation3Extension = "n3"
    return:
      type: System.String
    content.vb: Public Const DefaultNotation3Extension As String = "n3"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultNTriplesExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultNTriplesExtension
  id: DefaultNTriplesExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultNTriplesExtension
  nameWithType: MimeTypesHelper.DefaultNTriplesExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultNTriplesExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultNTriplesExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 175
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for NTriples.\n"
  example: []
  syntax:
    content: public const string DefaultNTriplesExtension = "nt"
    return:
      type: System.String
    content.vb: Public Const DefaultNTriplesExtension As String = "nt"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultJsonExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultJsonExtension
  id: DefaultJsonExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultJsonExtension
  nameWithType: MimeTypesHelper.DefaultJsonExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultJsonExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultJsonExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 179
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for Json formats.\n"
  example: []
  syntax:
    content: public const string DefaultJsonExtension = "json"
    return:
      type: System.String
    content.vb: Public Const DefaultJsonExtension As String = "json"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultJsonLdExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultJsonLdExtension
  id: DefaultJsonLdExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultJsonLdExtension
  nameWithType: MimeTypesHelper.DefaultJsonLdExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultJsonLdExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultJsonLdExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 183
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault file extension for JSON-LD formats.\n"
  example: []
  syntax:
    content: public const string DefaultJsonLdExtension = "jsonld"
    return:
      type: System.String
    content.vb: Public Const DefaultJsonLdExtension As String = "jsonld"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultRdfJsonExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultRdfJsonExtension
  id: DefaultRdfJsonExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultRdfJsonExtension
  nameWithType: MimeTypesHelper.DefaultRdfJsonExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultRdfJsonExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultRdfJsonExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 187
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for RDF/JSON.\n"
  example: []
  syntax:
    content: public const string DefaultRdfJsonExtension = "rj"
    return:
      type: System.String
    content.vb: Public Const DefaultRdfJsonExtension As String = "rj"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultSparqlXmlExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultSparqlXmlExtension
  id: DefaultSparqlXmlExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultSparqlXmlExtension
  nameWithType: MimeTypesHelper.DefaultSparqlXmlExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultSparqlXmlExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultSparqlXmlExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 191
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for SPARQL XML Results Format.\n"
  example: []
  syntax:
    content: public const string DefaultSparqlXmlExtension = "srx"
    return:
      type: System.String
    content.vb: Public Const DefaultSparqlXmlExtension As String = "srx"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultSparqlJsonExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultSparqlJsonExtension
  id: DefaultSparqlJsonExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultSparqlJsonExtension
  nameWithType: MimeTypesHelper.DefaultSparqlJsonExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultSparqlJsonExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultSparqlJsonExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 195
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for SPARQL JSON Results Format.\n"
  example: []
  syntax:
    content: public const string DefaultSparqlJsonExtension = "srj"
    return:
      type: System.String
    content.vb: Public Const DefaultSparqlJsonExtension As String = "srj"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultTriGExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultTriGExtension
  id: DefaultTriGExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultTriGExtension
  nameWithType: MimeTypesHelper.DefaultTriGExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultTriGExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultTriGExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 199
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for TriG.\n"
  example: []
  syntax:
    content: public const string DefaultTriGExtension = "trig"
    return:
      type: System.String
    content.vb: Public Const DefaultTriGExtension As String = "trig"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultNQuadsExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultNQuadsExtension
  id: DefaultNQuadsExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultNQuadsExtension
  nameWithType: MimeTypesHelper.DefaultNQuadsExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultNQuadsExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultNQuadsExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 203
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for NQuads.\n"
  example: []
  syntax:
    content: public const string DefaultNQuadsExtension = "nq"
    return:
      type: System.String
    content.vb: Public Const DefaultNQuadsExtension As String = "nq"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultTriXExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultTriXExtension
  id: DefaultTriXExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultTriXExtension
  nameWithType: MimeTypesHelper.DefaultTriXExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultTriXExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultTriXExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 207
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for TriX.\n"
  example: []
  syntax:
    content: public const string DefaultTriXExtension = "xml"
    return:
      type: System.String
    content.vb: Public Const DefaultTriXExtension As String = "xml"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultCsvExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultCsvExtension
  id: DefaultCsvExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultCsvExtension
  nameWithType: MimeTypesHelper.DefaultCsvExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultCsvExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultCsvExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 211
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for CSV.\n"
  example: []
  syntax:
    content: public const string DefaultCsvExtension = "csv"
    return:
      type: System.String
    content.vb: Public Const DefaultCsvExtension As String = "csv"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultTsvExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultTsvExtension
  id: DefaultTsvExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultTsvExtension
  nameWithType: MimeTypesHelper.DefaultTsvExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultTsvExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultTsvExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 215
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for TSV.\n"
  example: []
  syntax:
    content: public const string DefaultTsvExtension = "tsv"
    return:
      type: System.String
    content.vb: Public Const DefaultTsvExtension As String = "tsv"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultHtmlExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultHtmlExtension
  id: DefaultHtmlExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultHtmlExtension
  nameWithType: MimeTypesHelper.DefaultHtmlExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultHtmlExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultHtmlExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 219
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for HTML.\n"
  example: []
  syntax:
    content: public const string DefaultHtmlExtension = "html"
    return:
      type: System.String
    content.vb: Public Const DefaultHtmlExtension As String = "html"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultXHtmlExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultXHtmlExtension
  id: DefaultXHtmlExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultXHtmlExtension
  nameWithType: MimeTypesHelper.DefaultXHtmlExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultXHtmlExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultXHtmlExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 223
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for XHTML.\n"
  example: []
  syntax:
    content: public const string DefaultXHtmlExtension = "xhtml"
    return:
      type: System.String
    content.vb: Public Const DefaultXHtmlExtension As String = "xhtml"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultSparqlQueryExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultSparqlQueryExtension
  id: DefaultSparqlQueryExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultSparqlQueryExtension
  nameWithType: MimeTypesHelper.DefaultSparqlQueryExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultSparqlQueryExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultSparqlQueryExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 227
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for SPARQL Queries.\n"
  example: []
  syntax:
    content: public const string DefaultSparqlQueryExtension = "rq"
    return:
      type: System.String
    content.vb: Public Const DefaultSparqlQueryExtension As String = "rq"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultSparqlUpdateExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultSparqlUpdateExtension
  id: DefaultSparqlUpdateExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultSparqlUpdateExtension
  nameWithType: MimeTypesHelper.DefaultSparqlUpdateExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultSparqlUpdateExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultSparqlUpdateExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 231
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for SPARQL Updates.\n"
  example: []
  syntax:
    content: public const string DefaultSparqlUpdateExtension = "ru"
    return:
      type: System.String
    content.vb: Public Const DefaultSparqlUpdateExtension As String = "ru"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.DefaultGZipExtension
  commentId: F:VDS.RDF.MimeTypesHelper.DefaultGZipExtension
  id: DefaultGZipExtension
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: DefaultGZipExtension
  nameWithType: MimeTypesHelper.DefaultGZipExtension
  fullName: VDS.RDF.MimeTypesHelper.DefaultGZipExtension
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultGZipExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 235
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDefault File Extension for GZip.\n"
  example: []
  syntax:
    content: public const string DefaultGZipExtension = "gz"
    return:
      type: System.String
    content.vb: Public Const DefaultGZipExtension As String = "gz"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.CharsetUtf8
  commentId: F:VDS.RDF.MimeTypesHelper.CharsetUtf8
  id: CharsetUtf8
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: CharsetUtf8
  nameWithType: MimeTypesHelper.CharsetUtf8
  fullName: VDS.RDF.MimeTypesHelper.CharsetUtf8
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CharsetUtf8
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 245
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCharset constants.\n"
  example: []
  syntax:
    content: public const string CharsetUtf8 = "utf-8"
    return:
      type: System.String
    content.vb: Public Const CharsetUtf8 As String = "utf-8"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.CharsetUtf16
  commentId: F:VDS.RDF.MimeTypesHelper.CharsetUtf16
  id: CharsetUtf16
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: CharsetUtf16
  nameWithType: MimeTypesHelper.CharsetUtf16
  fullName: VDS.RDF.MimeTypesHelper.CharsetUtf16
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CharsetUtf16
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 246
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCharset constants.\n"
  example: []
  syntax:
    content: public const string CharsetUtf16 = "utf-16"
    return:
      type: System.String
    content.vb: Public Const CharsetUtf16 As String = "utf-16"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.MimeTypesHelper.ResetDefinitions
  commentId: M:VDS.RDF.MimeTypesHelper.ResetDefinitions
  id: ResetDefinitions
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: ResetDefinitions()
  nameWithType: MimeTypesHelper.ResetDefinitions()
  fullName: VDS.RDF.MimeTypesHelper.ResetDefinitions()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResetDefinitions
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 411
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nResets the MIME Type Definitions (the associations between file extensions, MIME types and their respective parsers and writers) to the library defaults.\n"
  remarks: "\n<p>\nMay be useful if you&apos;ve altered the definitions and caused something to stop working as a result.\n</p>\n"
  example: []
  syntax:
    content: public static void ResetDefinitions()
    content.vb: Public Shared Sub ResetDefinitions
  overload: VDS.RDF.MimeTypesHelper.ResetDefinitions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.Definitions
  commentId: P:VDS.RDF.MimeTypesHelper.Definitions
  id: Definitions
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: Definitions
  nameWithType: MimeTypesHelper.Definitions
  fullName: VDS.RDF.MimeTypesHelper.Definitions
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Definitions
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 424
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the available MIME Type Definitions.\n"
  example: []
  syntax:
    content: public static IEnumerable<MimeTypeDefinition> Definitions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.MimeTypeDefinition}
    content.vb: Public Shared ReadOnly Property Definitions As IEnumerable(Of MimeTypeDefinition)
  overload: VDS.RDF.MimeTypesHelper.Definitions*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.MimeTypesHelper.AddDefinition(VDS.RDF.MimeTypeDefinition)
  commentId: M:VDS.RDF.MimeTypesHelper.AddDefinition(VDS.RDF.MimeTypeDefinition)
  id: AddDefinition(VDS.RDF.MimeTypeDefinition)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: AddDefinition(MimeTypeDefinition)
  nameWithType: MimeTypesHelper.AddDefinition(MimeTypeDefinition)
  fullName: VDS.RDF.MimeTypesHelper.AddDefinition(VDS.RDF.MimeTypeDefinition)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddDefinition
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 438
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAdds a new MIME Type Definition.\n"
  example: []
  syntax:
    content: public static void AddDefinition(MimeTypeDefinition definition)
    parameters:
    - id: definition
      type: VDS.RDF.MimeTypeDefinition
      description: MIME Type Definition.
    content.vb: Public Shared Sub AddDefinition(definition As MimeTypeDefinition)
  overload: VDS.RDF.MimeTypesHelper.AddDefinition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.IRdfReader,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.IRdfReader,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: RegisterParser(VDS.RDF.IRdfReader,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: RegisterParser(IRdfReader, IEnumerable<String>, IEnumerable<String>)
  nameWithType: MimeTypesHelper.RegisterParser(IRdfReader, IEnumerable<String>, IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.IRdfReader, System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RegisterParser
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 451
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRegisters a parser as the default RDF Parser for all the given MIME types and updates relevant definitions to include the MIME types and file extensions.\n"
  example: []
  syntax:
    content: public static void RegisterParser(IRdfReader parser, IEnumerable<string> mimeTypes, IEnumerable<string> fileExtensions)
    parameters:
    - id: parser
      type: VDS.RDF.IRdfReader
      description: RDF Parser.
    - id: mimeTypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    - id: fileExtensions
      type: System.Collections.Generic.IEnumerable{System.String}
      description: File Extensions.
    content.vb: Public Shared Sub RegisterParser(parser As IRdfReader, mimeTypes As IEnumerable(Of String), fileExtensions As IEnumerable(Of String))
  overload: VDS.RDF.MimeTypesHelper.RegisterParser*
  nameWithType.vb: MimeTypesHelper.RegisterParser(IRdfReader, IEnumerable(Of String), IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.IRdfReader, System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RegisterParser(IRdfReader, IEnumerable(Of String), IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.IStoreReader,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.IStoreReader,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: RegisterParser(VDS.RDF.IStoreReader,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: RegisterParser(IStoreReader, IEnumerable<String>, IEnumerable<String>)
  nameWithType: MimeTypesHelper.RegisterParser(IStoreReader, IEnumerable<String>, IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.IStoreReader, System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RegisterParser
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 488
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRegisters a parser as the default RDF Dataset Parser for all the given MIME types and updates relevant definitions to include the MIME types and file extensions.\n"
  example: []
  syntax:
    content: public static void RegisterParser(IStoreReader parser, IEnumerable<string> mimeTypes, IEnumerable<string> fileExtensions)
    parameters:
    - id: parser
      type: VDS.RDF.IStoreReader
      description: RDF Dataset Parser.
    - id: mimeTypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    - id: fileExtensions
      type: System.Collections.Generic.IEnumerable{System.String}
      description: File Extensions.
    content.vb: Public Shared Sub RegisterParser(parser As IStoreReader, mimeTypes As IEnumerable(Of String), fileExtensions As IEnumerable(Of String))
  overload: VDS.RDF.MimeTypesHelper.RegisterParser*
  nameWithType.vb: MimeTypesHelper.RegisterParser(IStoreReader, IEnumerable(Of String), IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.IStoreReader, System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RegisterParser(IStoreReader, IEnumerable(Of String), IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.ISparqlResultsReader,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.ISparqlResultsReader,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: RegisterParser(VDS.RDF.ISparqlResultsReader,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: RegisterParser(ISparqlResultsReader, IEnumerable<String>, IEnumerable<String>)
  nameWithType: MimeTypesHelper.RegisterParser(ISparqlResultsReader, IEnumerable<String>, IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.ISparqlResultsReader, System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RegisterParser
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 525
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRegisters a parser as the default SPARQL Rsults Parser for all the given MIME types and updates relevant definitions to include the MIME types and file extensions.\n"
  example: []
  syntax:
    content: public static void RegisterParser(ISparqlResultsReader parser, IEnumerable<string> mimeTypes, IEnumerable<string> fileExtensions)
    parameters:
    - id: parser
      type: VDS.RDF.ISparqlResultsReader
      description: SPARQL Results Parser.
    - id: mimeTypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    - id: fileExtensions
      type: System.Collections.Generic.IEnumerable{System.String}
      description: File Extensions.
    content.vb: Public Shared Sub RegisterParser(parser As ISparqlResultsReader, mimeTypes As IEnumerable(Of String), fileExtensions As IEnumerable(Of String))
  overload: VDS.RDF.MimeTypesHelper.RegisterParser*
  nameWithType.vb: MimeTypesHelper.RegisterParser(ISparqlResultsReader, IEnumerable(Of String), IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.RegisterParser(VDS.RDF.ISparqlResultsReader, System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RegisterParser(ISparqlResultsReader, IEnumerable(Of String), IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.IRdfWriter,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.IRdfWriter,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: RegisterWriter(VDS.RDF.IRdfWriter,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: RegisterWriter(IRdfWriter, IEnumerable<String>, IEnumerable<String>)
  nameWithType: MimeTypesHelper.RegisterWriter(IRdfWriter, IEnumerable<String>, IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.IRdfWriter, System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RegisterWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 562
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRegisters a writer as the default RDF Writer for all the given MIME types and updates relevant definitions to include the MIME types and file extensions.\n"
  example: []
  syntax:
    content: public static void RegisterWriter(IRdfWriter writer, IEnumerable<string> mimeTypes, IEnumerable<string> fileExtensions)
    parameters:
    - id: writer
      type: VDS.RDF.IRdfWriter
      description: RDF Writer.
    - id: mimeTypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    - id: fileExtensions
      type: System.Collections.Generic.IEnumerable{System.String}
      description: File Extensions.
    content.vb: Public Shared Sub RegisterWriter(writer As IRdfWriter, mimeTypes As IEnumerable(Of String), fileExtensions As IEnumerable(Of String))
  overload: VDS.RDF.MimeTypesHelper.RegisterWriter*
  nameWithType.vb: MimeTypesHelper.RegisterWriter(IRdfWriter, IEnumerable(Of String), IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.IRdfWriter, System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RegisterWriter(IRdfWriter, IEnumerable(Of String), IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.IStoreWriter,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.IStoreWriter,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: RegisterWriter(VDS.RDF.IStoreWriter,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: RegisterWriter(IStoreWriter, IEnumerable<String>, IEnumerable<String>)
  nameWithType: MimeTypesHelper.RegisterWriter(IStoreWriter, IEnumerable<String>, IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.IStoreWriter, System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RegisterWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 599
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRegisters a writer as the default RDF Dataset Writer for all the given MIME types and updates relevant definitions to include the MIME types and file extensions.\n"
  example: []
  syntax:
    content: public static void RegisterWriter(IStoreWriter writer, IEnumerable<string> mimeTypes, IEnumerable<string> fileExtensions)
    parameters:
    - id: writer
      type: VDS.RDF.IStoreWriter
      description: RDF Dataset Writer.
    - id: mimeTypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    - id: fileExtensions
      type: System.Collections.Generic.IEnumerable{System.String}
      description: File Extensions.
    content.vb: Public Shared Sub RegisterWriter(writer As IStoreWriter, mimeTypes As IEnumerable(Of String), fileExtensions As IEnumerable(Of String))
  overload: VDS.RDF.MimeTypesHelper.RegisterWriter*
  nameWithType.vb: MimeTypesHelper.RegisterWriter(IStoreWriter, IEnumerable(Of String), IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.IStoreWriter, System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RegisterWriter(IStoreWriter, IEnumerable(Of String), IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.ISparqlResultsWriter,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.ISparqlResultsWriter,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: RegisterWriter(VDS.RDF.ISparqlResultsWriter,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: RegisterWriter(ISparqlResultsWriter, IEnumerable<String>, IEnumerable<String>)
  nameWithType: MimeTypesHelper.RegisterWriter(ISparqlResultsWriter, IEnumerable<String>, IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.ISparqlResultsWriter, System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RegisterWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 636
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRegisters a writer as the default SPARQL Results Writer for all the given MIME types and updates relevant definitions to include the MIME types and file extensions.\n"
  example: []
  syntax:
    content: public static void RegisterWriter(ISparqlResultsWriter writer, IEnumerable<string> mimeTypes, IEnumerable<string> fileExtensions)
    parameters:
    - id: writer
      type: VDS.RDF.ISparqlResultsWriter
      description: SPARQL Results Writer.
    - id: mimeTypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    - id: fileExtensions
      type: System.Collections.Generic.IEnumerable{System.String}
      description: File Extensions.
    content.vb: Public Shared Sub RegisterWriter(writer As ISparqlResultsWriter, mimeTypes As IEnumerable(Of String), fileExtensions As IEnumerable(Of String))
  overload: VDS.RDF.MimeTypesHelper.RegisterWriter*
  nameWithType.vb: MimeTypesHelper.RegisterWriter(ISparqlResultsWriter, IEnumerable(Of String), IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.RegisterWriter(VDS.RDF.ISparqlResultsWriter, System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: RegisterWriter(ISparqlResultsWriter, IEnumerable(Of String), IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.GetDefinitions(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetDefinitions(System.String)
  id: GetDefinitions(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetDefinitions(String)
  nameWithType: MimeTypesHelper.GetDefinitions(String)
  fullName: VDS.RDF.MimeTypesHelper.GetDefinitions(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetDefinitions
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 672
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all MIME Type definitions which support the given MIME Type.\n"
  example: []
  syntax:
    content: public static IEnumerable<MimeTypeDefinition> GetDefinitions(string mimeType)
    parameters:
    - id: mimeType
      type: System.String
      description: MIME Type.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.MimeTypeDefinition}
      description: ''
    content.vb: Public Shared Function GetDefinitions(mimeType As String) As IEnumerable(Of MimeTypeDefinition)
  overload: VDS.RDF.MimeTypesHelper.GetDefinitions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetDefinitions(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.GetDefinitions(System.Collections.Generic.IEnumerable{System.String})
  id: GetDefinitions(System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetDefinitions(IEnumerable<String>)
  nameWithType: MimeTypesHelper.GetDefinitions(IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.GetDefinitions(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetDefinitions
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 689
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all MIME Type definitions which support the given MIME Types.\n"
  example: []
  syntax:
    content: public static IEnumerable<MimeTypeDefinition> GetDefinitions(IEnumerable<string> mimeTypes)
    parameters:
    - id: mimeTypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.MimeTypeDefinition}
      description: ''
    content.vb: Public Shared Function GetDefinitions(mimeTypes As IEnumerable(Of String)) As IEnumerable(Of MimeTypeDefinition)
  overload: VDS.RDF.MimeTypesHelper.GetDefinitions*
  nameWithType.vb: MimeTypesHelper.GetDefinitions(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetDefinitions(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: GetDefinitions(IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.GetDefinitionsByFileExtension(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetDefinitionsByFileExtension(System.String)
  id: GetDefinitionsByFileExtension(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetDefinitionsByFileExtension(String)
  nameWithType: MimeTypesHelper.GetDefinitionsByFileExtension(String)
  fullName: VDS.RDF.MimeTypesHelper.GetDefinitionsByFileExtension(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetDefinitionsByFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 707
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all MIME Types definitions which are associated with a given file extension.\n"
  example: []
  syntax:
    content: public static IEnumerable<MimeTypeDefinition> GetDefinitionsByFileExtension(string fileExt)
    parameters:
    - id: fileExt
      type: System.String
      description: File Extension.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.MimeTypeDefinition}
      description: ''
    content.vb: Public Shared Function GetDefinitionsByFileExtension(fileExt As String) As IEnumerable(Of MimeTypeDefinition)
  overload: VDS.RDF.MimeTypesHelper.GetDefinitionsByFileExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.HttpAcceptHeader
  commentId: P:VDS.RDF.MimeTypesHelper.HttpAcceptHeader
  id: HttpAcceptHeader
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: HttpAcceptHeader
  nameWithType: MimeTypesHelper.HttpAcceptHeader
  fullName: VDS.RDF.MimeTypesHelper.HttpAcceptHeader
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HttpAcceptHeader
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 722
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nBuilds the String for the HTTP Accept Header that should be used when you want to ask for content in RDF formats (except Sparql Results).\n"
  example: []
  syntax:
    content: public static string HttpAcceptHeader { get; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public Shared ReadOnly Property HttpAcceptHeader As String
  overload: VDS.RDF.MimeTypesHelper.HttpAcceptHeader*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.MimeTypesHelper.HttpSparqlAcceptHeader
  commentId: P:VDS.RDF.MimeTypesHelper.HttpSparqlAcceptHeader
  id: HttpSparqlAcceptHeader
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: HttpSparqlAcceptHeader
  nameWithType: MimeTypesHelper.HttpSparqlAcceptHeader
  fullName: VDS.RDF.MimeTypesHelper.HttpSparqlAcceptHeader
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HttpSparqlAcceptHeader
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 749
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nBuilds the String for the HTTP Accept Header that should be used for querying Sparql Endpoints where the response will be a SPARQL Result Set format.\n"
  example: []
  syntax:
    content: public static string HttpSparqlAcceptHeader { get; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public Shared ReadOnly Property HttpSparqlAcceptHeader As String
  overload: VDS.RDF.MimeTypesHelper.HttpSparqlAcceptHeader*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.MimeTypesHelper.HttpRdfOrSparqlAcceptHeader
  commentId: P:VDS.RDF.MimeTypesHelper.HttpRdfOrSparqlAcceptHeader
  id: HttpRdfOrSparqlAcceptHeader
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: HttpRdfOrSparqlAcceptHeader
  nameWithType: MimeTypesHelper.HttpRdfOrSparqlAcceptHeader
  fullName: VDS.RDF.MimeTypesHelper.HttpRdfOrSparqlAcceptHeader
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HttpRdfOrSparqlAcceptHeader
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 775
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nBuilds the String for the HTTP Accept Header that should be used for making HTTP Requests where the returned data may be RDF or a SPARQL Result Set.\n"
  example: []
  syntax:
    content: public static string HttpRdfOrSparqlAcceptHeader { get; }
    parameters: []
    return:
      type: System.String
      description: ''
    content.vb: Public Shared ReadOnly Property HttpRdfOrSparqlAcceptHeader As String
  overload: VDS.RDF.MimeTypesHelper.HttpRdfOrSparqlAcceptHeader*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.MimeTypesHelper.HttpRdfDatasetAcceptHeader
  commentId: P:VDS.RDF.MimeTypesHelper.HttpRdfDatasetAcceptHeader
  id: HttpRdfDatasetAcceptHeader
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: HttpRdfDatasetAcceptHeader
  nameWithType: MimeTypesHelper.HttpRdfDatasetAcceptHeader
  fullName: VDS.RDF.MimeTypesHelper.HttpRdfDatasetAcceptHeader
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HttpRdfDatasetAcceptHeader
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 801
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nBuilds the String for the HTTP Accept Header that should be used for making HTTP Requests where the returned data will be an RDF dataset.\n"
  example: []
  syntax:
    content: public static string HttpRdfDatasetAcceptHeader { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property HttpRdfDatasetAcceptHeader As String
  overload: VDS.RDF.MimeTypesHelper.HttpRdfDatasetAcceptHeader*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.MimeTypesHelper.HttpRdfOrDatasetAcceptHeader
  commentId: P:VDS.RDF.MimeTypesHelper.HttpRdfOrDatasetAcceptHeader
  id: HttpRdfOrDatasetAcceptHeader
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: HttpRdfOrDatasetAcceptHeader
  nameWithType: MimeTypesHelper.HttpRdfOrDatasetAcceptHeader
  fullName: VDS.RDF.MimeTypesHelper.HttpRdfOrDatasetAcceptHeader
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HttpRdfOrDatasetAcceptHeader
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 826
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nBuilds the String for the HTTP Accept Header that should be used for making HTTP Requests where the returned data may be RDF or an RDF dataset.\n"
  example: []
  syntax:
    content: public static string HttpRdfOrDatasetAcceptHeader { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property HttpRdfOrDatasetAcceptHeader As String
  overload: VDS.RDF.MimeTypesHelper.HttpRdfOrDatasetAcceptHeader*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(System.Collections.Generic.IEnumerable{System.String})
  id: CustomHttpAcceptHeader(System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: CustomHttpAcceptHeader(IEnumerable<String>)
  nameWithType: MimeTypesHelper.CustomHttpAcceptHeader(IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CustomHttpAcceptHeader
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 859
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Custom HTTP Accept Header containing the given selection of MIME Types.\n"
  remarks: "\n<p>\n<strong>Note:</strong> No validation is done on MIME Types so it is possible to generated a malformed header using this function.\n</p>\n"
  example: []
  syntax:
    content: public static string CustomHttpAcceptHeader(IEnumerable<string> mimeTypes)
    parameters:
    - id: mimeTypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Enumeration of MIME Types to use.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function CustomHttpAcceptHeader(mimeTypes As IEnumerable(Of String)) As String
  overload: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader*
  nameWithType.vb: MimeTypesHelper.CustomHttpAcceptHeader(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: CustomHttpAcceptHeader(IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  id: CustomHttpAcceptHeader(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: CustomHttpAcceptHeader(IEnumerable<String>, IEnumerable<String>)
  nameWithType: MimeTypesHelper.CustomHttpAcceptHeader(IEnumerable<String>, IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(System.Collections.Generic.IEnumerable<System.String>, System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CustomHttpAcceptHeader
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 878
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Custom HTTP Accept Header containing the given selection of MIME Types where those MIME Types also appear in the list of supported Types.\n"
  remarks: "\n<p>\n<strong>Note:</strong> No validation is done on MIME Types so it is possible to generated a malformed header using this function.\n</p>\n<p>\nUse this function when you wish to generate a Custom Accept Header where the URI to which you are making requests supports a set range of URIs (given in the <code data-dev-comment-type=\"paramref\" class=\"paramref\">mimeTypes</code> parameter) where that range of types may exceed the range of types actually supported by the library or your response processing code.\n</p>\n"
  example: []
  syntax:
    content: public static string CustomHttpAcceptHeader(IEnumerable<string> mimeTypes, IEnumerable<string> supportedTypes)
    parameters:
    - id: mimeTypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Enumeration of MIME Types to use.
    - id: supportedTypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Enumeration of supported MIME Types.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function CustomHttpAcceptHeader(mimeTypes As IEnumerable(Of String), supportedTypes As IEnumerable(Of String)) As String
  overload: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader*
  nameWithType.vb: MimeTypesHelper.CustomHttpAcceptHeader(IEnumerable(Of String), IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(System.Collections.Generic.IEnumerable(Of System.String), System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: CustomHttpAcceptHeader(IEnumerable(Of String), IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(VDS.RDF.IRdfReader)
  id: CustomHttpAcceptHeader(VDS.RDF.IRdfReader)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: CustomHttpAcceptHeader(IRdfReader)
  nameWithType: MimeTypesHelper.CustomHttpAcceptHeader(IRdfReader)
  fullName: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(VDS.RDF.IRdfReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CustomHttpAcceptHeader
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 900
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Custom HTTP Accept Header containing only the Accept Types supported by a specific parser.\n"
  example: []
  syntax:
    content: public static string CustomHttpAcceptHeader(IRdfReader parser)
    parameters:
    - id: parser
      type: VDS.RDF.IRdfReader
      description: RDF Parser.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function CustomHttpAcceptHeader(parser As IRdfReader) As String
  overload: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(VDS.RDF.IStoreReader)
  id: CustomHttpAcceptHeader(VDS.RDF.IStoreReader)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: CustomHttpAcceptHeader(IStoreReader)
  nameWithType: MimeTypesHelper.CustomHttpAcceptHeader(IStoreReader)
  fullName: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader(VDS.RDF.IStoreReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CustomHttpAcceptHeader
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 920
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a Custom HTTP Accept Header containing only the Accept Types supported by a specific parser.\n"
  example: []
  syntax:
    content: public static string CustomHttpAcceptHeader(IStoreReader parser)
    parameters:
    - id: parser
      type: VDS.RDF.IStoreReader
      description: RDF Parser.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function CustomHttpAcceptHeader(parser As IStoreReader) As String
  overload: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetMimeType(VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.MimeTypesHelper.GetMimeType(VDS.RDF.IRdfWriter)
  id: GetMimeType(VDS.RDF.IRdfWriter)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetMimeType(IRdfWriter)
  nameWithType: MimeTypesHelper.GetMimeType(IRdfWriter)
  fullName: VDS.RDF.MimeTypesHelper.GetMimeType(VDS.RDF.IRdfWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetMimeType
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 941
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGet the preferred MIME type that is registered for a specific writer.\n"
  example: []
  syntax:
    content: public static string GetMimeType(IRdfWriter writer)
    parameters:
    - id: writer
      type: VDS.RDF.IRdfWriter
      description: RDF Writer.
    return:
      type: System.String
      description: The preferred MIME type associated with the parser.
    content.vb: Public Shared Function GetMimeType(writer As IRdfWriter) As String
  overload: VDS.RDF.MimeTypesHelper.GetMimeType*
  exceptions:
  - type: VDS.RDF.UnregisteredRdfWriterTypeException
    commentId: T:VDS.RDF.UnregisteredRdfWriterTypeException
    description: Raised if the specific writer is of a type that is not associated with any registered MIME type.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.SupportedRdfMimeTypes
  commentId: P:VDS.RDF.MimeTypesHelper.SupportedRdfMimeTypes
  id: SupportedRdfMimeTypes
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: SupportedRdfMimeTypes
  nameWithType: MimeTypesHelper.SupportedRdfMimeTypes
  fullName: VDS.RDF.MimeTypesHelper.SupportedRdfMimeTypes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SupportedRdfMimeTypes
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 961
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Enumeration of supported MIME Types for RDF Graphs.\n"
  example: []
  syntax:
    content: public static IEnumerable<string> SupportedRdfMimeTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared ReadOnly Property SupportedRdfMimeTypes As IEnumerable(Of String)
  overload: VDS.RDF.MimeTypesHelper.SupportedRdfMimeTypes*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.MimeTypesHelper.SupportedRdfDatasetMimeTypes
  commentId: P:VDS.RDF.MimeTypesHelper.SupportedRdfDatasetMimeTypes
  id: SupportedRdfDatasetMimeTypes
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: SupportedRdfDatasetMimeTypes
  nameWithType: MimeTypesHelper.SupportedRdfDatasetMimeTypes
  fullName: VDS.RDF.MimeTypesHelper.SupportedRdfDatasetMimeTypes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SupportedRdfDatasetMimeTypes
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 977
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Enumeration of supported MIME Types for RDF Datasets.\n"
  example: []
  syntax:
    content: public static IEnumerable<string> SupportedRdfDatasetMimeTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared ReadOnly Property SupportedRdfDatasetMimeTypes As IEnumerable(Of String)
  overload: VDS.RDF.MimeTypesHelper.SupportedRdfDatasetMimeTypes*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.MimeTypesHelper.SupportedSparqlMimeTypes
  commentId: P:VDS.RDF.MimeTypesHelper.SupportedSparqlMimeTypes
  id: SupportedSparqlMimeTypes
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: SupportedSparqlMimeTypes
  nameWithType: MimeTypesHelper.SupportedSparqlMimeTypes
  fullName: VDS.RDF.MimeTypesHelper.SupportedSparqlMimeTypes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SupportedSparqlMimeTypes
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 993
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Enumeration of supported MIME Types for SPARQL Results.\n"
  example: []
  syntax:
    content: public static IEnumerable<string> SupportedSparqlMimeTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared ReadOnly Property SupportedSparqlMimeTypes As IEnumerable(Of String)
  overload: VDS.RDF.MimeTypesHelper.SupportedSparqlMimeTypes*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.MimeTypesHelper.SupportedRdfOrSparqlMimeTypes
  commentId: P:VDS.RDF.MimeTypesHelper.SupportedRdfOrSparqlMimeTypes
  id: SupportedRdfOrSparqlMimeTypes
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: SupportedRdfOrSparqlMimeTypes
  nameWithType: MimeTypesHelper.SupportedRdfOrSparqlMimeTypes
  fullName: VDS.RDF.MimeTypesHelper.SupportedRdfOrSparqlMimeTypes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SupportedRdfOrSparqlMimeTypes
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1009
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Enumeration of supported MIME Types for RDF Graphs or SPARQL Results.\n"
  example: []
  syntax:
    content: public static IEnumerable<string> SupportedRdfOrSparqlMimeTypes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Shared ReadOnly Property SupportedRdfOrSparqlMimeTypes As IEnumerable(Of String)
  overload: VDS.RDF.MimeTypesHelper.SupportedRdfOrSparqlMimeTypes*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.MimeTypesHelper.GetFilenameFilter
  commentId: M:VDS.RDF.MimeTypesHelper.GetFilenameFilter
  id: GetFilenameFilter
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetFilenameFilter()
  nameWithType: MimeTypesHelper.GetFilenameFilter()
  fullName: VDS.RDF.MimeTypesHelper.GetFilenameFilter()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetFilenameFilter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1026
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGenerates a Filename Filter that can be used with any .Net application and includes all formats that dotNetRDF is aware of.\n"
  example: []
  syntax:
    content: public static string GetFilenameFilter()
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetFilenameFilter As String
  overload: VDS.RDF.MimeTypesHelper.GetFilenameFilter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetFilenameFilter(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:VDS.RDF.MimeTypesHelper.GetFilenameFilter(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: GetFilenameFilter(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetFilenameFilter(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
  nameWithType: MimeTypesHelper.GetFilenameFilter(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName: VDS.RDF.MimeTypesHelper.GetFilenameFilter(System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetFilenameFilter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1041
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGenerates a Filename Filter that can be used with any .Net application and includes a user dictated subset of the formats that dotNetRDF is aware of.\n"
  example: []
  syntax:
    content: public static string GetFilenameFilter(bool rdf, bool rdfDatasets, bool sparqlResults, bool sparqlQuery, bool sparqlUpdate, bool allFiles)
    parameters:
    - id: rdf
      type: System.Boolean
      description: Allow RDF Graph formats (e.g. Turtle).
    - id: rdfDatasets
      type: System.Boolean
      description: Allow RDF Dataset formats (e.g. NQuads).
    - id: sparqlResults
      type: System.Boolean
      description: Allow SPARQL Results formats (e.g. SPARQL Results XML).
    - id: sparqlQuery
      type: System.Boolean
      description: Allow SPARQL Query (i.e. .rq files).
    - id: sparqlUpdate
      type: System.Boolean
      description: Allow SPARQL Update (i.e. .ru files).
    - id: allFiles
      type: System.Boolean
      description: Allow All Files (i.e. */*).
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetFilenameFilter(rdf As Boolean, rdfDatasets As Boolean, sparqlResults As Boolean, sparqlQuery As Boolean, sparqlUpdate As Boolean, allFiles As Boolean) As String
  overload: VDS.RDF.MimeTypesHelper.GetFilenameFilter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.ApplyParserOptions(System.Object)
  commentId: M:VDS.RDF.MimeTypesHelper.ApplyParserOptions(System.Object)
  id: ApplyParserOptions(System.Object)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: ApplyParserOptions(Object)
  nameWithType: MimeTypesHelper.ApplyParserOptions(Object)
  fullName: VDS.RDF.MimeTypesHelper.ApplyParserOptions(System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ApplyParserOptions
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1095
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nApplies global options to a parser.\n"
  example: []
  syntax:
    content: public static void ApplyParserOptions(object parser)
    parameters:
    - id: parser
      type: System.Object
      description: Parser.
    content.vb: Public Shared Sub ApplyParserOptions(parser As Object)
  overload: VDS.RDF.MimeTypesHelper.ApplyParserOptions*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetWriter(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.GetWriter(System.Collections.Generic.IEnumerable{System.String})
  id: GetWriter(System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetWriter(IEnumerable<String>)
  nameWithType: MimeTypesHelper.GetWriter(IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.GetWriter(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1116
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.IRdfWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the given MIME Types.\n"
  remarks: "\n<p>\nThis method does not take account of any quality/charset preference parameters included in the Accept Header.\n</p>\n<p>\nGlobal options pertaining to writers will be applied to the selected writer.\n</p>\n"
  example: []
  syntax:
    content: public static IRdfWriter GetWriter(IEnumerable<string> ctypes)
    parameters:
    - id: ctypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    return:
      type: VDS.RDF.IRdfWriter
      description: ''
    content.vb: Public Shared Function GetWriter(ctypes As IEnumerable(Of String)) As IRdfWriter
  overload: VDS.RDF.MimeTypesHelper.GetWriter*
  nameWithType.vb: MimeTypesHelper.GetWriter(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetWriter(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: GetWriter(IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.GetWriter(System.Collections.Generic.IEnumerable{System.String},System.String@)
  commentId: M:VDS.RDF.MimeTypesHelper.GetWriter(System.Collections.Generic.IEnumerable{System.String},System.String@)
  id: GetWriter(System.Collections.Generic.IEnumerable{System.String},System.String@)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetWriter(IEnumerable<String>, out String)
  nameWithType: MimeTypesHelper.GetWriter(IEnumerable<String>, out String)
  fullName: VDS.RDF.MimeTypesHelper.GetWriter(System.Collections.Generic.IEnumerable<System.String>, out System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1136
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.IRdfWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the given MIME Types.\n"
  remarks: "\n<p>\nThis method does not take account of any quality/charset preference parameters included in the Accept Header.\n</p>\n<p>\nGlobal options pertaining to writers will be applied to the selected writer.\n</p>\n"
  example: []
  syntax:
    content: public static IRdfWriter GetWriter(IEnumerable<string> ctypes, out string contentType)
    parameters:
    - id: ctypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    - id: contentType
      type: System.String
      description: The Content Type header that should be sent in the Response to the Request.
    return:
      type: VDS.RDF.IRdfWriter
      description: ''
    content.vb: Public Shared Function GetWriter(ctypes As IEnumerable(Of String), ByRef contentType As String) As IRdfWriter
  overload: VDS.RDF.MimeTypesHelper.GetWriter*
  nameWithType.vb: MimeTypesHelper.GetWriter(IEnumerable(Of String), ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetWriter(System.Collections.Generic.IEnumerable(Of System.String), ByRef System.String)
  name.vb: GetWriter(IEnumerable(Of String), ByRef String)
- uid: VDS.RDF.MimeTypesHelper.GetWriter(System.String,System.String@)
  commentId: M:VDS.RDF.MimeTypesHelper.GetWriter(System.String,System.String@)
  id: GetWriter(System.String,System.String@)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetWriter(String, out String)
  nameWithType: MimeTypesHelper.GetWriter(String, out String)
  fullName: VDS.RDF.MimeTypesHelper.GetWriter(System.String, out System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1175
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.IRdfWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the HTTP Accept header form a HTTP Request.\n"
  remarks: "\n<p>\nThis method does not take account of any quality/charset preference parameters included in the Accept Header.\n</p>\n<p>\nGlobal options pertaining to writers will be applied to the selected writer.\n</p>\n"
  example: []
  syntax:
    content: public static IRdfWriter GetWriter(string acceptHeader, out string contentType)
    parameters:
    - id: acceptHeader
      type: System.String
      description: Value of the HTTP Accept Header.
    - id: contentType
      type: System.String
      description: The Content Type header that should be sent in the Response to the Request.
    return:
      type: VDS.RDF.IRdfWriter
      description: A Writer for a Content Type the client accepts and the Content Type that should be sent to the client.
    content.vb: Public Shared Function GetWriter(acceptHeader As String, ByRef contentType As String) As IRdfWriter
  overload: VDS.RDF.MimeTypesHelper.GetWriter*
  nameWithType.vb: MimeTypesHelper.GetWriter(String, ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetWriter(System.String, ByRef System.String)
  name.vb: GetWriter(String, ByRef String)
- uid: VDS.RDF.MimeTypesHelper.GetWriter(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetWriter(System.String)
  id: GetWriter(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetWriter(String)
  nameWithType: MimeTypesHelper.GetWriter(String)
  fullName: VDS.RDF.MimeTypesHelper.GetWriter(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1213
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.IRdfWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the HTTP Accept header form a HTTP Request.\n"
  remarks: "\n<p>\nThis method does not take account of any quality/charset preference parameters included in the Accept Header.\n</p>\n<p>\nGlobal options pertaining to writers will be applied to the selected writer.\n</p>\n"
  example: []
  syntax:
    content: public static IRdfWriter GetWriter(string acceptHeader)
    parameters:
    - id: acceptHeader
      type: System.String
      description: Value of the HTTP Accept Header.
    return:
      type: VDS.RDF.IRdfWriter
      description: A Writer for a Content Type the client accepts.
    content.vb: Public Shared Function GetWriter(acceptHeader As String) As IRdfWriter
  overload: VDS.RDF.MimeTypesHelper.GetWriter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetWriterByFileExtension(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetWriterByFileExtension(System.String)
  id: GetWriterByFileExtension(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetWriterByFileExtension(String)
  nameWithType: MimeTypesHelper.GetWriterByFileExtension(String)
  fullName: VDS.RDF.MimeTypesHelper.GetWriterByFileExtension(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetWriterByFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1230
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects a <xref href=\"VDS.RDF.IRdfWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the file extension.\n"
  remarks: "\n<p>\nGlobal options pertaining to writers will be applied to the selected writer.\n</p>\n"
  example: []
  syntax:
    content: public static IRdfWriter GetWriterByFileExtension(string fileExt)
    parameters:
    - id: fileExt
      type: System.String
      description: File Extension.
    return:
      type: VDS.RDF.IRdfWriter
      description: ''
    content.vb: Public Shared Function GetWriterByFileExtension(fileExt As String) As IRdfWriter
  overload: VDS.RDF.MimeTypesHelper.GetWriterByFileExtension*
  exceptions:
  - type: VDS.RDF.Writing.RdfWriterSelectionException
    commentId: T:VDS.RDF.Writing.RdfWriterSelectionException
    description: Thrown if no writers are associated with the given file extension.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetWriterByFileExtension(System.String,System.String@)
  commentId: M:VDS.RDF.MimeTypesHelper.GetWriterByFileExtension(System.String,System.String@)
  id: GetWriterByFileExtension(System.String,System.String@)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetWriterByFileExtension(String, out String)
  nameWithType: MimeTypesHelper.GetWriterByFileExtension(String, out String)
  fullName: VDS.RDF.MimeTypesHelper.GetWriterByFileExtension(System.String, out System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetWriterByFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1248
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects a <xref href=\"VDS.RDF.IRdfWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the file extension.\n"
  remarks: "\n<p>\nGlobal options pertaining to writers will be applied to the selected writer.\n</p>\n"
  example: []
  syntax:
    content: public static IRdfWriter GetWriterByFileExtension(string fileExt, out string contentType)
    parameters:
    - id: fileExt
      type: System.String
      description: File Extension.
    - id: contentType
      type: System.String
      description: Content Type of the chosen writer.
    return:
      type: VDS.RDF.IRdfWriter
      description: ''
    content.vb: Public Shared Function GetWriterByFileExtension(fileExt As String, ByRef contentType As String) As IRdfWriter
  overload: VDS.RDF.MimeTypesHelper.GetWriterByFileExtension*
  exceptions:
  - type: VDS.RDF.Writing.RdfWriterSelectionException
    commentId: T:VDS.RDF.Writing.RdfWriterSelectionException
    description: Thrown if no writers are associated with the given file extension.
  nameWithType.vb: MimeTypesHelper.GetWriterByFileExtension(String, ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetWriterByFileExtension(System.String, ByRef System.String)
  name.vb: GetWriterByFileExtension(String, ByRef String)
- uid: VDS.RDF.MimeTypesHelper.GetParser(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.GetParser(System.Collections.Generic.IEnumerable{System.String})
  id: GetParser(System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetParser(IEnumerable<String>)
  nameWithType: MimeTypesHelper.GetParser(IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.GetParser(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetParser
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1275
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.IRdfReader\" data-throw-if-not-resolved=\"false\"></xref> based on the given MIME Types.\n"
  example: []
  syntax:
    content: public static IRdfReader GetParser(IEnumerable<string> ctypes)
    parameters:
    - id: ctypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME TYpes.
    return:
      type: VDS.RDF.IRdfReader
      description: ''
    content.vb: Public Shared Function GetParser(ctypes As IEnumerable(Of String)) As IRdfReader
  overload: VDS.RDF.MimeTypesHelper.GetParser*
  nameWithType.vb: MimeTypesHelper.GetParser(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetParser(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: GetParser(IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.GetParser(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetParser(System.String)
  id: GetParser(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetParser(String)
  nameWithType: MimeTypesHelper.GetParser(String)
  fullName: VDS.RDF.MimeTypesHelper.GetParser(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetParser
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1299
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.IRdfReader\" data-throw-if-not-resolved=\"false\"></xref> based on the HTTP Content-Type header from a HTTP Response.\n"
  example: []
  syntax:
    content: public static IRdfReader GetParser(string contentType)
    parameters:
    - id: contentType
      type: System.String
      description: Value of the HTTP Content-Type Header.
    return:
      type: VDS.RDF.IRdfReader
      description: ''
    content.vb: Public Shared Function GetParser(contentType As String) As IRdfReader
  overload: VDS.RDF.MimeTypesHelper.GetParser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetParserByFileExtension(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetParserByFileExtension(System.String)
  id: GetParserByFileExtension(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetParserByFileExtension(String)
  nameWithType: MimeTypesHelper.GetParserByFileExtension(String)
  fullName: VDS.RDF.MimeTypesHelper.GetParserByFileExtension(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetParserByFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1309
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects a <xref href=\"VDS.RDF.IRdfReader\" data-throw-if-not-resolved=\"false\"></xref> based on the file extension.\n"
  example: []
  syntax:
    content: public static IRdfReader GetParserByFileExtension(string fileExt)
    parameters:
    - id: fileExt
      type: System.String
      description: File Extension.
    return:
      type: VDS.RDF.IRdfReader
      description: ''
    content.vb: Public Shared Function GetParserByFileExtension(fileExt As String) As IRdfReader
  overload: VDS.RDF.MimeTypesHelper.GetParserByFileExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetSparqlParser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  commentId: M:VDS.RDF.MimeTypesHelper.GetSparqlParser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  id: GetSparqlParser(System.Collections.Generic.IEnumerable{System.String},System.Boolean)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetSparqlParser(IEnumerable<String>, Boolean)
  nameWithType: MimeTypesHelper.GetSparqlParser(IEnumerable<String>, Boolean)
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlParser(System.Collections.Generic.IEnumerable<System.String>, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSparqlParser
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1332
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects a SPARQL Parser based on the MIME types.\n"
  example: []
  syntax:
    content: public static ISparqlResultsReader GetSparqlParser(IEnumerable<string> ctypes, bool allowPlainTextResults)
    parameters:
    - id: ctypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    - id: allowPlainTextResults
      type: System.Boolean
      description: Whether to allow for plain text results.
    return:
      type: VDS.RDF.ISparqlResultsReader
      description: ''
    content.vb: Public Shared Function GetSparqlParser(ctypes As IEnumerable(Of String), allowPlainTextResults As Boolean) As ISparqlResultsReader
  overload: VDS.RDF.MimeTypesHelper.GetSparqlParser*
  nameWithType.vb: MimeTypesHelper.GetSparqlParser(IEnumerable(Of String), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetSparqlParser(System.Collections.Generic.IEnumerable(Of System.String), System.Boolean)
  name.vb: GetSparqlParser(IEnumerable(Of String), Boolean)
- uid: VDS.RDF.MimeTypesHelper.GetSparqlParser(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetSparqlParser(System.String)
  id: GetSparqlParser(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetSparqlParser(String)
  nameWithType: MimeTypesHelper.GetSparqlParser(String)
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlParser(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSparqlParser
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1362
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.ISparqlResultsReader\" data-throw-if-not-resolved=\"false\"></xref> based on the HTTP Content-Type header from a HTTP Response.\n"
  example: []
  syntax:
    content: public static ISparqlResultsReader GetSparqlParser(string contentType)
    parameters:
    - id: contentType
      type: System.String
      description: Value of the HTTP Content-Type Header.
    return:
      type: VDS.RDF.ISparqlResultsReader
      description: ''
    content.vb: Public Shared Function GetSparqlParser(contentType As String) As ISparqlResultsReader
  overload: VDS.RDF.MimeTypesHelper.GetSparqlParser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetSparqlParser(System.String,System.Boolean)
  commentId: M:VDS.RDF.MimeTypesHelper.GetSparqlParser(System.String,System.Boolean)
  id: GetSparqlParser(System.String,System.Boolean)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetSparqlParser(String, Boolean)
  nameWithType: MimeTypesHelper.GetSparqlParser(String, Boolean)
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlParser(System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSparqlParser
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1373
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.ISparqlResultsReader\" data-throw-if-not-resolved=\"false\"></xref> based on the HTTP Content-Type header from a HTTP Response.\n"
  example: []
  syntax:
    content: public static ISparqlResultsReader GetSparqlParser(string contentType, bool allowPlainTextResults)
    parameters:
    - id: contentType
      type: System.String
      description: Value of the HTTP Content-Type Header.
    - id: allowPlainTextResults
      type: System.Boolean
      description: Whether you allow Sparql Boolean results in text/plain format (Boolean results in text/boolean are handled properly but text/plain results can be conflated with CONSTRUCT/DESCRIBE results in NTriples format).
    return:
      type: VDS.RDF.ISparqlResultsReader
      description: ''
    content.vb: Public Shared Function GetSparqlParser(contentType As String, allowPlainTextResults As Boolean) As ISparqlResultsReader
  overload: VDS.RDF.MimeTypesHelper.GetSparqlParser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetSparqlParserByFileExtension(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetSparqlParserByFileExtension(System.String)
  id: GetSparqlParserByFileExtension(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetSparqlParserByFileExtension(String)
  nameWithType: MimeTypesHelper.GetSparqlParserByFileExtension(String)
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlParserByFileExtension(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSparqlParserByFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1383
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects a <xref href=\"VDS.RDF.ISparqlResultsReader\" data-throw-if-not-resolved=\"false\"></xref> based on the file extension.\n"
  example: []
  syntax:
    content: public static ISparqlResultsReader GetSparqlParserByFileExtension(string fileExt)
    parameters:
    - id: fileExt
      type: System.String
      description: File Extension.
    return:
      type: VDS.RDF.ISparqlResultsReader
      description: ''
    content.vb: Public Shared Function GetSparqlParserByFileExtension(fileExt As String) As ISparqlResultsReader
  overload: VDS.RDF.MimeTypesHelper.GetSparqlParserByFileExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.Collections.Generic.IEnumerable{System.String})
  id: GetSparqlWriter(System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetSparqlWriter(IEnumerable<String>)
  nameWithType: MimeTypesHelper.GetSparqlWriter(IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSparqlWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1413
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.ISparqlResultsWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the given MIME Types.\n"
  remarks: "\n<p>\nThis method does not take account of any quality/charset preference parameters included in the Accept Header.\n</p>\n<p>\nGlobal options pertaining to writers will be applied to the selected writer.\n</p>\n"
  example: []
  syntax:
    content: public static ISparqlResultsWriter GetSparqlWriter(IEnumerable<string> ctypes)
    parameters:
    - id: ctypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    return:
      type: VDS.RDF.ISparqlResultsWriter
      description: A Writer for a Content Type the client accepts.
    content.vb: Public Shared Function GetSparqlWriter(ctypes As IEnumerable(Of String)) As ISparqlResultsWriter
  overload: VDS.RDF.MimeTypesHelper.GetSparqlWriter*
  nameWithType.vb: MimeTypesHelper.GetSparqlWriter(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: GetSparqlWriter(IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.Collections.Generic.IEnumerable{System.String},System.String@)
  commentId: M:VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.Collections.Generic.IEnumerable{System.String},System.String@)
  id: GetSparqlWriter(System.Collections.Generic.IEnumerable{System.String},System.String@)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetSparqlWriter(IEnumerable<String>, out String)
  nameWithType: MimeTypesHelper.GetSparqlWriter(IEnumerable<String>, out String)
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.Collections.Generic.IEnumerable<System.String>, out System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSparqlWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1433
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.ISparqlResultsWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the HTTP Accept header form a HTTP Request.\n"
  remarks: "\n<p>\nThis method does not take account of any quality/charset preference parameters included in the Accept Header.\n</p>\n<p>\nGlobal options pertaining to writers will be applied to the selected writer.\n</p>\n"
  example: []
  syntax:
    content: public static ISparqlResultsWriter GetSparqlWriter(IEnumerable<string> ctypes, out string contentType)
    parameters:
    - id: ctypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: String array of accepted Content Types.
    - id: contentType
      type: System.String
      description: The Content Type header that should be sent in the Response to the Request.
    return:
      type: VDS.RDF.ISparqlResultsWriter
      description: A Writer for a Content Type the client accepts and the Content Type that should be sent to the client.
    content.vb: Public Shared Function GetSparqlWriter(ctypes As IEnumerable(Of String), ByRef contentType As String) As ISparqlResultsWriter
  overload: VDS.RDF.MimeTypesHelper.GetSparqlWriter*
  nameWithType.vb: MimeTypesHelper.GetSparqlWriter(IEnumerable(Of String), ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.Collections.Generic.IEnumerable(Of System.String), ByRef System.String)
  name.vb: GetSparqlWriter(IEnumerable(Of String), ByRef String)
- uid: VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.String,System.String@)
  commentId: M:VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.String,System.String@)
  id: GetSparqlWriter(System.String,System.String@)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetSparqlWriter(String, out String)
  nameWithType: MimeTypesHelper.GetSparqlWriter(String, out String)
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.String, out System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSparqlWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1467
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.ISparqlResultsWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the HTTP Accept header form a HTTP Request.\n"
  remarks: "\n<p>\nThis method does not take account of any quality/charset preference parameters included in the Accept Header.\n</p>\n<p>\nGlobal options pertaining to writers will be applied to the selected writer.\n</p>\n"
  example: []
  syntax:
    content: public static ISparqlResultsWriter GetSparqlWriter(string acceptHeader, out string contentType)
    parameters:
    - id: acceptHeader
      type: System.String
      description: Value of the HTTP Accept Header.
    - id: contentType
      type: System.String
      description: The Content Type header that should be sent in the Response to the Request.
    return:
      type: VDS.RDF.ISparqlResultsWriter
      description: A Writer for a Content Type the client accepts and the Content Type that should be sent to the client.
    content.vb: Public Shared Function GetSparqlWriter(acceptHeader As String, ByRef contentType As String) As ISparqlResultsWriter
  overload: VDS.RDF.MimeTypesHelper.GetSparqlWriter*
  nameWithType.vb: MimeTypesHelper.GetSparqlWriter(String, ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.String, ByRef System.String)
  name.vb: GetSparqlWriter(String, ByRef String)
- uid: VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.String)
  id: GetSparqlWriter(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetSparqlWriter(String)
  nameWithType: MimeTypesHelper.GetSparqlWriter(String)
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlWriter(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSparqlWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1498
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.ISparqlResultsWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the HTTP Accept header form a HTTP Request.\n"
  remarks: "\n<p>\nThis method does not take account of any quality/charset preference parameters included in the Accept Header.\n</p>\n<p>\nGlobal options pertaining to writers will be applied to the selected writer.\n</p>\n"
  example: []
  syntax:
    content: public static ISparqlResultsWriter GetSparqlWriter(string acceptHeader)
    parameters:
    - id: acceptHeader
      type: System.String
      description: Value of the HTTP Accept Header.
    return:
      type: VDS.RDF.ISparqlResultsWriter
      description: A Writer for a Content Type the client accepts.
    content.vb: Public Shared Function GetSparqlWriter(acceptHeader As String) As ISparqlResultsWriter
  overload: VDS.RDF.MimeTypesHelper.GetSparqlWriter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension(System.String)
  id: GetSparqlWriterByFileExtension(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetSparqlWriterByFileExtension(String)
  nameWithType: MimeTypesHelper.GetSparqlWriterByFileExtension(String)
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSparqlWriterByFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1509
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects a <xref href=\"VDS.RDF.ISparqlResultsWriter\" data-throw-if-not-resolved=\"false\"></xref> based on a file extension.\n"
  example: []
  syntax:
    content: public static ISparqlResultsWriter GetSparqlWriterByFileExtension(string fileExt)
    parameters:
    - id: fileExt
      type: System.String
      description: File Extension.
    return:
      type: VDS.RDF.ISparqlResultsWriter
      description: ''
    content.vb: Public Shared Function GetSparqlWriterByFileExtension(fileExt As String) As ISparqlResultsWriter
  overload: VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension(System.String,System.String@)
  commentId: M:VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension(System.String,System.String@)
  id: GetSparqlWriterByFileExtension(System.String,System.String@)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetSparqlWriterByFileExtension(String, out String)
  nameWithType: MimeTypesHelper.GetSparqlWriterByFileExtension(String, out String)
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension(System.String, out System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSparqlWriterByFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1521
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects a <xref href=\"VDS.RDF.ISparqlResultsWriter\" data-throw-if-not-resolved=\"false\"></xref> based on a file extension.\n"
  example: []
  syntax:
    content: public static ISparqlResultsWriter GetSparqlWriterByFileExtension(string fileExt, out string contentType)
    parameters:
    - id: fileExt
      type: System.String
      description: File Extension.
    - id: contentType
      type: System.String
      description: Content Type of the selected writer.
    return:
      type: VDS.RDF.ISparqlResultsWriter
      description: ''
    content.vb: Public Shared Function GetSparqlWriterByFileExtension(fileExt As String, ByRef contentType As String) As ISparqlResultsWriter
  overload: VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension*
  nameWithType.vb: MimeTypesHelper.GetSparqlWriterByFileExtension(String, ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension(System.String, ByRef System.String)
  name.vb: GetSparqlWriterByFileExtension(String, ByRef String)
- uid: VDS.RDF.MimeTypesHelper.GetStoreParser(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.GetStoreParser(System.Collections.Generic.IEnumerable{System.String})
  id: GetStoreParser(System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetStoreParser(IEnumerable<String>)
  nameWithType: MimeTypesHelper.GetStoreParser(IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.GetStoreParser(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetStoreParser
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1544
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects a Store parser based on the MIME types.\n"
  example: []
  syntax:
    content: public static IStoreReader GetStoreParser(IEnumerable<string> ctypes)
    parameters:
    - id: ctypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    return:
      type: VDS.RDF.IStoreReader
      description: ''
    content.vb: Public Shared Function GetStoreParser(ctypes As IEnumerable(Of String)) As IStoreReader
  overload: VDS.RDF.MimeTypesHelper.GetStoreParser*
  nameWithType.vb: MimeTypesHelper.GetStoreParser(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetStoreParser(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: GetStoreParser(IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.GetStoreParser(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetStoreParser(System.String)
  id: GetStoreParser(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetStoreParser(String)
  nameWithType: MimeTypesHelper.GetStoreParser(String)
  fullName: VDS.RDF.MimeTypesHelper.GetStoreParser(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetStoreParser
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1565
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.IStoreReader\" data-throw-if-not-resolved=\"false\"></xref> based on the HTTP Content-Type header from a HTTP Response.\n"
  example: []
  syntax:
    content: public static IStoreReader GetStoreParser(string contentType)
    parameters:
    - id: contentType
      type: System.String
      description: Value of the HTTP Content-Type Header.
    return:
      type: VDS.RDF.IStoreReader
      description: ''
    content.vb: Public Shared Function GetStoreParser(contentType As String) As IStoreReader
  overload: VDS.RDF.MimeTypesHelper.GetStoreParser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetStoreParserByFileExtension(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetStoreParserByFileExtension(System.String)
  id: GetStoreParserByFileExtension(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetStoreParserByFileExtension(String)
  nameWithType: MimeTypesHelper.GetStoreParserByFileExtension(String)
  fullName: VDS.RDF.MimeTypesHelper.GetStoreParserByFileExtension(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetStoreParserByFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1575
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects a Store parser based on the file extension.\n"
  example: []
  syntax:
    content: public static IStoreReader GetStoreParserByFileExtension(string fileExt)
    parameters:
    - id: fileExt
      type: System.String
      description: File Extension.
    return:
      type: VDS.RDF.IStoreReader
      description: ''
    content.vb: Public Shared Function GetStoreParserByFileExtension(fileExt As String) As IStoreReader
  overload: VDS.RDF.MimeTypesHelper.GetStoreParserByFileExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetStoreWriter(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypesHelper.GetStoreWriter(System.Collections.Generic.IEnumerable{System.String})
  id: GetStoreWriter(System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetStoreWriter(IEnumerable<String>)
  nameWithType: MimeTypesHelper.GetStoreWriter(IEnumerable<String>)
  fullName: VDS.RDF.MimeTypesHelper.GetStoreWriter(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetStoreWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1605
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.IStoreWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the given MIME Types.\n"
  remarks: "\n<p>\nThis method does not take account of any quality/charset preference parameters included in the Accept Header.\n</p>\n<p>\nFor writers which support <xref href=\"VDS.RDF.Writing.ICompressingWriter\" data-throw-if-not-resolved=\"false\"></xref> they will be instantiated with the Compression Level specified by <xref href=\"VDS.RDF.Options.DefaultCompressionLevel\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  example: []
  syntax:
    content: public static IStoreWriter GetStoreWriter(IEnumerable<string> ctypes)
    parameters:
    - id: ctypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    return:
      type: VDS.RDF.IStoreWriter
      description: ''
    content.vb: Public Shared Function GetStoreWriter(ctypes As IEnumerable(Of String)) As IStoreWriter
  overload: VDS.RDF.MimeTypesHelper.GetStoreWriter*
  nameWithType.vb: MimeTypesHelper.GetStoreWriter(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetStoreWriter(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: GetStoreWriter(IEnumerable(Of String))
- uid: VDS.RDF.MimeTypesHelper.GetStoreWriter(System.Collections.Generic.IEnumerable{System.String},System.String@)
  commentId: M:VDS.RDF.MimeTypesHelper.GetStoreWriter(System.Collections.Generic.IEnumerable{System.String},System.String@)
  id: GetStoreWriter(System.Collections.Generic.IEnumerable{System.String},System.String@)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetStoreWriter(IEnumerable<String>, out String)
  nameWithType: MimeTypesHelper.GetStoreWriter(IEnumerable<String>, out String)
  fullName: VDS.RDF.MimeTypesHelper.GetStoreWriter(System.Collections.Generic.IEnumerable<System.String>, out System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetStoreWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1625
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.IStoreWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the given MIME Types.\n"
  remarks: "\n<p>\nThis method does not take account of any quality/charset preference parameters included in the Accept Header.\n</p>\n<p>\nFor writers which support <xref href=\"VDS.RDF.Writing.ICompressingWriter\" data-throw-if-not-resolved=\"false\"></xref> they will be instantiated with the Compression Level specified by <xref href=\"VDS.RDF.Options.DefaultCompressionLevel\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n"
  example: []
  syntax:
    content: public static IStoreWriter GetStoreWriter(IEnumerable<string> ctypes, out string contentType)
    parameters:
    - id: ctypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    - id: contentType
      type: System.String
      description: The Content Type header that should be sent in the Response to the Request.
    return:
      type: VDS.RDF.IStoreWriter
      description: ''
    content.vb: Public Shared Function GetStoreWriter(ctypes As IEnumerable(Of String), ByRef contentType As String) As IStoreWriter
  overload: VDS.RDF.MimeTypesHelper.GetStoreWriter*
  nameWithType.vb: MimeTypesHelper.GetStoreWriter(IEnumerable(Of String), ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetStoreWriter(System.Collections.Generic.IEnumerable(Of System.String), ByRef System.String)
  name.vb: GetStoreWriter(IEnumerable(Of String), ByRef String)
- uid: VDS.RDF.MimeTypesHelper.GetStoreWriter(System.String,System.String@)
  commentId: M:VDS.RDF.MimeTypesHelper.GetStoreWriter(System.String,System.String@)
  id: GetStoreWriter(System.String,System.String@)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetStoreWriter(String, out String)
  nameWithType: MimeTypesHelper.GetStoreWriter(String, out String)
  fullName: VDS.RDF.MimeTypesHelper.GetStoreWriter(System.String, out System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetStoreWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1651
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.IStoreWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the HTTP Accept header form a HTTP Request.\n"
  remarks: This method does not take account of any quality/charset preference parameters included in the Accept Header.
  example: []
  syntax:
    content: public static IStoreWriter GetStoreWriter(string acceptHeader, out string contentType)
    parameters:
    - id: acceptHeader
      type: System.String
      description: Value of the HTTP Accept Header.
    - id: contentType
      type: System.String
      description: The Content Type header that should be sent in the Response to the Request.
    return:
      type: VDS.RDF.IStoreWriter
      description: A Writer for a Content Type the client accepts and the Content Type that should be sent to the client.
    content.vb: Public Shared Function GetStoreWriter(acceptHeader As String, ByRef contentType As String) As IStoreWriter
  overload: VDS.RDF.MimeTypesHelper.GetStoreWriter*
  nameWithType.vb: MimeTypesHelper.GetStoreWriter(String, ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetStoreWriter(System.String, ByRef System.String)
  name.vb: GetStoreWriter(String, ByRef String)
- uid: VDS.RDF.MimeTypesHelper.GetStoreWriter(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetStoreWriter(System.String)
  id: GetStoreWriter(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetStoreWriter(String)
  nameWithType: MimeTypesHelper.GetStoreWriter(String)
  fullName: VDS.RDF.MimeTypesHelper.GetStoreWriter(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetStoreWriter
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1675
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects an appropriate <xref href=\"VDS.RDF.IStoreWriter\" data-throw-if-not-resolved=\"false\"></xref> based on the HTTP Accept header form a HTTP Request.\n"
  remarks: This method does not take account of any quality/charset preference parameters included in the Accept Header.
  example: []
  syntax:
    content: public static IStoreWriter GetStoreWriter(string acceptHeader)
    parameters:
    - id: acceptHeader
      type: System.String
      description: Value of the HTTP Accept Header.
    return:
      type: VDS.RDF.IStoreWriter
      description: A Writer for a Content Type the client accepts.
    content.vb: Public Shared Function GetStoreWriter(acceptHeader As String) As IStoreWriter
  overload: VDS.RDF.MimeTypesHelper.GetStoreWriter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension(System.String)
  id: GetStoreWriterByFileExtension(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetStoreWriterByFileExtension(String)
  nameWithType: MimeTypesHelper.GetStoreWriterByFileExtension(String)
  fullName: VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetStoreWriterByFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1686
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects a <xref href=\"VDS.RDF.IStoreWriter\" data-throw-if-not-resolved=\"false\"></xref> by file extension.\n"
  example: []
  syntax:
    content: public static IStoreWriter GetStoreWriterByFileExtension(string fileExt)
    parameters:
    - id: fileExt
      type: System.String
      description: File Extension.
    return:
      type: VDS.RDF.IStoreWriter
      description: ''
    content.vb: Public Shared Function GetStoreWriterByFileExtension(fileExt As String) As IStoreWriter
  overload: VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension(System.String,System.String@)
  commentId: M:VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension(System.String,System.String@)
  id: GetStoreWriterByFileExtension(System.String,System.String@)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetStoreWriterByFileExtension(String, out String)
  nameWithType: MimeTypesHelper.GetStoreWriterByFileExtension(String, out String)
  fullName: VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension(System.String, out System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetStoreWriterByFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1698
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects a <xref href=\"VDS.RDF.IStoreWriter\" data-throw-if-not-resolved=\"false\"></xref> by file extension.\n"
  example: []
  syntax:
    content: public static IStoreWriter GetStoreWriterByFileExtension(string fileExt, out string contentType)
    parameters:
    - id: fileExt
      type: System.String
      description: File Extension.
    - id: contentType
      type: System.String
      description: Content Type of the selected writer.
    return:
      type: VDS.RDF.IStoreWriter
      description: ''
    content.vb: Public Shared Function GetStoreWriterByFileExtension(fileExt As String, ByRef contentType As String) As IStoreWriter
  overload: VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension*
  nameWithType.vb: MimeTypesHelper.GetStoreWriterByFileExtension(String, ByRef String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension(System.String, ByRef System.String)
  name.vb: GetStoreWriterByFileExtension(String, ByRef String)
- uid: VDS.RDF.MimeTypesHelper.GetMimeType(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetMimeType(System.String)
  id: GetMimeType(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetMimeType(String)
  nameWithType: MimeTypesHelper.GetMimeType(String)
  fullName: VDS.RDF.MimeTypesHelper.GetMimeType(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetMimeType
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1721
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects the appropriate MIME Type for the given File Extension if the File Extension is a standard extension for an RDF format.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method is deprecated, please use GetDefinitionsForExtension() to find relevant definitions and extract the MIME types from there", false)]

      public static string GetMimeType(string fileExt)
    parameters:
    - id: fileExt
      type: System.String
      description: File Extension.
    return:
      type: System.String
      description: ''
    content.vb: >-
      <Obsolete("This method is deprecated, please use GetDefinitionsForExtension() to find relevant definitions and extract the MIME types from there", False)>

      Public Shared Function GetMimeType(fileExt As String) As String
  overload: VDS.RDF.MimeTypesHelper.GetMimeType*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method is deprecated, please use GetDefinitionsForExtension() to find relevant definitions and extract the MIME types from there
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetMimeTypes(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetMimeTypes(System.String)
  id: GetMimeTypes(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetMimeTypes(String)
  nameWithType: MimeTypesHelper.GetMimeTypes(String)
  fullName: VDS.RDF.MimeTypesHelper.GetMimeTypes(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetMimeTypes
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1742
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the MIME Types associated with a given File Extension.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method is deprecated, please use GetDefinitionsForExtension() to find relevant definitions and extract the MIME types from there", false)]

      public static IEnumerable<string> GetMimeTypes(string fileExt)
    parameters:
    - id: fileExt
      type: System.String
      description: File Extension.
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    content.vb: >-
      <Obsolete("This method is deprecated, please use GetDefinitionsForExtension() to find relevant definitions and extract the MIME types from there", False)>

      Public Shared Function GetMimeTypes(fileExt As String) As IEnumerable(Of String)
  overload: VDS.RDF.MimeTypesHelper.GetMimeTypes*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method is deprecated, please use GetDefinitionsForExtension() to find relevant definitions and extract the MIME types from there
    - type: System.Boolean
      value: false
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetTrueFileExtension(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetTrueFileExtension(System.String)
  id: GetTrueFileExtension(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetTrueFileExtension(String)
  nameWithType: MimeTypesHelper.GetTrueFileExtension(String)
  fullName: VDS.RDF.MimeTypesHelper.GetTrueFileExtension(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTrueFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1778
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the true file extension for a filename.\n"
  remarks: "\n<p>\nThis is an alternative to using <xref href=\"System.IO.Path.GetExtension(System.String)\" data-throw-if-not-resolved=\"false\"></xref> which is designed to take into account known extensions which are used in conjunction with other extensions and mask the true extension, for example. <strong>.gz</strong>\n</p>\n<p>\nConsider the filename <strong>example.ttl.gz</strong>, obtaining the extension the standard way gives only <strong>.gz</strong> which is unhelpful since it doesn&apos;t actually tell us the underlying format of the data only that it is GZipped and if it is GZipped we almost certainly want to stream the data rather than read all into memory and heuristically detect the actual format.  Instead we&apos;d like to get <strong>.ttl.gz</strong> as the file extension which is much more useful and this is what this function does.\n</p>\n<p>\n<strong>Important:</strong> This method does not blindly return double extensions whenever they are present (since they may simply by period characters in the filename and not double extensions at all) rather it returns double extensions only when the standard extension is an extension is known to be used with double extensions e.g. <strong>.gz</strong> that is relevan to the library.\n</p>\n"
  example: []
  syntax:
    content: public static string GetTrueFileExtension(string filename)
    parameters:
    - id: filename
      type: System.String
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetTrueFileExtension(filename As String) As String
  overload: VDS.RDF.MimeTypesHelper.GetTrueFileExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetTrueResourceExtension(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetTrueResourceExtension(System.String)
  id: GetTrueResourceExtension(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetTrueResourceExtension(String)
  nameWithType: MimeTypesHelper.GetTrueResourceExtension(String)
  fullName: VDS.RDF.MimeTypesHelper.GetTrueResourceExtension(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTrueResourceExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1809
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the true extension for a resource.\n"
  example: []
  syntax:
    content: public static string GetTrueResourceExtension(string resource)
    parameters:
    - id: resource
      type: System.String
      description: Resource.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetTrueResourceExtension(resource As String) As String
  overload: VDS.RDF.MimeTypesHelper.GetTrueResourceExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetFileExtension(System.String)
  commentId: M:VDS.RDF.MimeTypesHelper.GetFileExtension(System.String)
  id: GetFileExtension(System.String)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetFileExtension(String)
  nameWithType: MimeTypesHelper.GetFileExtension(String)
  fullName: VDS.RDF.MimeTypesHelper.GetFileExtension(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1839
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects the appropriate File Extension for the given MIME Type.\n"
  example: []
  syntax:
    content: public static string GetFileExtension(string mimeType)
    parameters:
    - id: mimeType
      type: System.String
      description: MIME Type.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetFileExtension(mimeType As String) As String
  overload: VDS.RDF.MimeTypesHelper.GetFileExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetFileExtension(VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.MimeTypesHelper.GetFileExtension(VDS.RDF.IRdfWriter)
  id: GetFileExtension(VDS.RDF.IRdfWriter)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetFileExtension(IRdfWriter)
  nameWithType: MimeTypesHelper.GetFileExtension(IRdfWriter)
  fullName: VDS.RDF.MimeTypesHelper.GetFileExtension(VDS.RDF.IRdfWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1859
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects the appropriate File Extension for the given RDF Writer.\n"
  example: []
  syntax:
    content: public static string GetFileExtension(IRdfWriter writer)
    parameters:
    - id: writer
      type: VDS.RDF.IRdfWriter
      description: RDF Writer.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetFileExtension(writer As IRdfWriter) As String
  overload: VDS.RDF.MimeTypesHelper.GetFileExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypesHelper.GetFileExtension(VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.MimeTypesHelper.GetFileExtension(VDS.RDF.IStoreWriter)
  id: GetFileExtension(VDS.RDF.IStoreWriter)
  parent: VDS.RDF.MimeTypesHelper
  langs:
  - csharp
  - vb
  name: GetFileExtension(IStoreWriter)
  nameWithType: MimeTypesHelper.GetFileExtension(IStoreWriter)
  fullName: VDS.RDF.MimeTypesHelper.GetFileExtension(VDS.RDF.IStoreWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetFileExtension
    path: Libraries/dotNetRDF/Core/MIMETypesHelper.cs
    startLine: 1879
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects the appropriate File Extension for the given Store Writer.\n"
  example: []
  syntax:
    content: public static string GetFileExtension(IStoreWriter writer)
    parameters:
    - id: writer
      type: VDS.RDF.IStoreWriter
      description: Store Writer.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetFileExtension(writer As IStoreWriter) As String
  overload: VDS.RDF.MimeTypesHelper.GetFileExtension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: VDS.RDF.MimeTypesHelper.ResetDefinitions*
  commentId: Overload:VDS.RDF.MimeTypesHelper.ResetDefinitions
  name: ResetDefinitions
  nameWithType: MimeTypesHelper.ResetDefinitions
  fullName: VDS.RDF.MimeTypesHelper.ResetDefinitions
- uid: VDS.RDF.MimeTypesHelper.Definitions*
  commentId: Overload:VDS.RDF.MimeTypesHelper.Definitions
  name: Definitions
  nameWithType: MimeTypesHelper.Definitions
  fullName: VDS.RDF.MimeTypesHelper.Definitions
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.MimeTypeDefinition}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.MimeTypeDefinition}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MimeTypeDefinition>
  nameWithType: IEnumerable<MimeTypeDefinition>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.MimeTypeDefinition>
  nameWithType.vb: IEnumerable(Of MimeTypeDefinition)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.MimeTypeDefinition)
  name.vb: IEnumerable(Of MimeTypeDefinition)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.MimeTypeDefinition
    name: MimeTypeDefinition
    nameWithType: MimeTypeDefinition
    fullName: VDS.RDF.MimeTypeDefinition
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.MimeTypeDefinition
    name: MimeTypeDefinition
    nameWithType: MimeTypeDefinition
    fullName: VDS.RDF.MimeTypeDefinition
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.MimeTypesHelper.AddDefinition*
  commentId: Overload:VDS.RDF.MimeTypesHelper.AddDefinition
  name: AddDefinition
  nameWithType: MimeTypesHelper.AddDefinition
  fullName: VDS.RDF.MimeTypesHelper.AddDefinition
- uid: VDS.RDF.MimeTypeDefinition
  commentId: T:VDS.RDF.MimeTypeDefinition
  parent: VDS.RDF
  name: MimeTypeDefinition
  nameWithType: MimeTypeDefinition
  fullName: VDS.RDF.MimeTypeDefinition
- uid: VDS.RDF.MimeTypesHelper.RegisterParser*
  commentId: Overload:VDS.RDF.MimeTypesHelper.RegisterParser
  name: RegisterParser
  nameWithType: MimeTypesHelper.RegisterParser
  fullName: VDS.RDF.MimeTypesHelper.RegisterParser
- uid: VDS.RDF.IRdfReader
  commentId: T:VDS.RDF.IRdfReader
  parent: VDS.RDF
  name: IRdfReader
  nameWithType: IRdfReader
  fullName: VDS.RDF.IRdfReader
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IStoreReader
  commentId: T:VDS.RDF.IStoreReader
  parent: VDS.RDF
  name: IStoreReader
  nameWithType: IStoreReader
  fullName: VDS.RDF.IStoreReader
- uid: VDS.RDF.ISparqlResultsReader
  commentId: T:VDS.RDF.ISparqlResultsReader
  parent: VDS.RDF
  name: ISparqlResultsReader
  nameWithType: ISparqlResultsReader
  fullName: VDS.RDF.ISparqlResultsReader
- uid: VDS.RDF.MimeTypesHelper.RegisterWriter*
  commentId: Overload:VDS.RDF.MimeTypesHelper.RegisterWriter
  name: RegisterWriter
  nameWithType: MimeTypesHelper.RegisterWriter
  fullName: VDS.RDF.MimeTypesHelper.RegisterWriter
- uid: VDS.RDF.IRdfWriter
  commentId: T:VDS.RDF.IRdfWriter
  parent: VDS.RDF
  name: IRdfWriter
  nameWithType: IRdfWriter
  fullName: VDS.RDF.IRdfWriter
- uid: VDS.RDF.IStoreWriter
  commentId: T:VDS.RDF.IStoreWriter
  parent: VDS.RDF
  name: IStoreWriter
  nameWithType: IStoreWriter
  fullName: VDS.RDF.IStoreWriter
- uid: VDS.RDF.ISparqlResultsWriter
  commentId: T:VDS.RDF.ISparqlResultsWriter
  parent: VDS.RDF
  name: ISparqlResultsWriter
  nameWithType: ISparqlResultsWriter
  fullName: VDS.RDF.ISparqlResultsWriter
- uid: VDS.RDF.MimeTypesHelper.GetDefinitions*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetDefinitions
  name: GetDefinitions
  nameWithType: MimeTypesHelper.GetDefinitions
  fullName: VDS.RDF.MimeTypesHelper.GetDefinitions
- uid: VDS.RDF.MimeTypesHelper.GetDefinitionsByFileExtension*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetDefinitionsByFileExtension
  name: GetDefinitionsByFileExtension
  nameWithType: MimeTypesHelper.GetDefinitionsByFileExtension
  fullName: VDS.RDF.MimeTypesHelper.GetDefinitionsByFileExtension
- uid: VDS.RDF.MimeTypesHelper.HttpAcceptHeader*
  commentId: Overload:VDS.RDF.MimeTypesHelper.HttpAcceptHeader
  name: HttpAcceptHeader
  nameWithType: MimeTypesHelper.HttpAcceptHeader
  fullName: VDS.RDF.MimeTypesHelper.HttpAcceptHeader
- uid: VDS.RDF.MimeTypesHelper.HttpSparqlAcceptHeader*
  commentId: Overload:VDS.RDF.MimeTypesHelper.HttpSparqlAcceptHeader
  name: HttpSparqlAcceptHeader
  nameWithType: MimeTypesHelper.HttpSparqlAcceptHeader
  fullName: VDS.RDF.MimeTypesHelper.HttpSparqlAcceptHeader
- uid: VDS.RDF.MimeTypesHelper.HttpRdfOrSparqlAcceptHeader*
  commentId: Overload:VDS.RDF.MimeTypesHelper.HttpRdfOrSparqlAcceptHeader
  name: HttpRdfOrSparqlAcceptHeader
  nameWithType: MimeTypesHelper.HttpRdfOrSparqlAcceptHeader
  fullName: VDS.RDF.MimeTypesHelper.HttpRdfOrSparqlAcceptHeader
- uid: VDS.RDF.MimeTypesHelper.HttpRdfDatasetAcceptHeader*
  commentId: Overload:VDS.RDF.MimeTypesHelper.HttpRdfDatasetAcceptHeader
  name: HttpRdfDatasetAcceptHeader
  nameWithType: MimeTypesHelper.HttpRdfDatasetAcceptHeader
  fullName: VDS.RDF.MimeTypesHelper.HttpRdfDatasetAcceptHeader
- uid: VDS.RDF.MimeTypesHelper.HttpRdfOrDatasetAcceptHeader*
  commentId: Overload:VDS.RDF.MimeTypesHelper.HttpRdfOrDatasetAcceptHeader
  name: HttpRdfOrDatasetAcceptHeader
  nameWithType: MimeTypesHelper.HttpRdfOrDatasetAcceptHeader
  fullName: VDS.RDF.MimeTypesHelper.HttpRdfOrDatasetAcceptHeader
- uid: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader*
  commentId: Overload:VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader
  name: CustomHttpAcceptHeader
  nameWithType: MimeTypesHelper.CustomHttpAcceptHeader
  fullName: VDS.RDF.MimeTypesHelper.CustomHttpAcceptHeader
- uid: VDS.RDF.UnregisteredRdfWriterTypeException
  commentId: T:VDS.RDF.UnregisteredRdfWriterTypeException
  name: UnregisteredRdfWriterTypeException
  nameWithType: UnregisteredRdfWriterTypeException
  fullName: VDS.RDF.UnregisteredRdfWriterTypeException
- uid: VDS.RDF.MimeTypesHelper.GetMimeType*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetMimeType
  name: GetMimeType
  nameWithType: MimeTypesHelper.GetMimeType
  fullName: VDS.RDF.MimeTypesHelper.GetMimeType
- uid: VDS.RDF.MimeTypesHelper.SupportedRdfMimeTypes*
  commentId: Overload:VDS.RDF.MimeTypesHelper.SupportedRdfMimeTypes
  name: SupportedRdfMimeTypes
  nameWithType: MimeTypesHelper.SupportedRdfMimeTypes
  fullName: VDS.RDF.MimeTypesHelper.SupportedRdfMimeTypes
- uid: VDS.RDF.MimeTypesHelper.SupportedRdfDatasetMimeTypes*
  commentId: Overload:VDS.RDF.MimeTypesHelper.SupportedRdfDatasetMimeTypes
  name: SupportedRdfDatasetMimeTypes
  nameWithType: MimeTypesHelper.SupportedRdfDatasetMimeTypes
  fullName: VDS.RDF.MimeTypesHelper.SupportedRdfDatasetMimeTypes
- uid: VDS.RDF.MimeTypesHelper.SupportedSparqlMimeTypes*
  commentId: Overload:VDS.RDF.MimeTypesHelper.SupportedSparqlMimeTypes
  name: SupportedSparqlMimeTypes
  nameWithType: MimeTypesHelper.SupportedSparqlMimeTypes
  fullName: VDS.RDF.MimeTypesHelper.SupportedSparqlMimeTypes
- uid: VDS.RDF.MimeTypesHelper.SupportedRdfOrSparqlMimeTypes*
  commentId: Overload:VDS.RDF.MimeTypesHelper.SupportedRdfOrSparqlMimeTypes
  name: SupportedRdfOrSparqlMimeTypes
  nameWithType: MimeTypesHelper.SupportedRdfOrSparqlMimeTypes
  fullName: VDS.RDF.MimeTypesHelper.SupportedRdfOrSparqlMimeTypes
- uid: VDS.RDF.MimeTypesHelper.GetFilenameFilter*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetFilenameFilter
  name: GetFilenameFilter
  nameWithType: MimeTypesHelper.GetFilenameFilter
  fullName: VDS.RDF.MimeTypesHelper.GetFilenameFilter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.MimeTypesHelper.ApplyParserOptions*
  commentId: Overload:VDS.RDF.MimeTypesHelper.ApplyParserOptions
  name: ApplyParserOptions
  nameWithType: MimeTypesHelper.ApplyParserOptions
  fullName: VDS.RDF.MimeTypesHelper.ApplyParserOptions
- uid: VDS.RDF.MimeTypesHelper.GetWriter*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetWriter
  name: GetWriter
  nameWithType: MimeTypesHelper.GetWriter
  fullName: VDS.RDF.MimeTypesHelper.GetWriter
- uid: VDS.RDF.Writing.RdfWriterSelectionException
  commentId: T:VDS.RDF.Writing.RdfWriterSelectionException
  name: RdfWriterSelectionException
  nameWithType: RdfWriterSelectionException
  fullName: VDS.RDF.Writing.RdfWriterSelectionException
- uid: VDS.RDF.MimeTypesHelper.GetWriterByFileExtension*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetWriterByFileExtension
  name: GetWriterByFileExtension
  nameWithType: MimeTypesHelper.GetWriterByFileExtension
  fullName: VDS.RDF.MimeTypesHelper.GetWriterByFileExtension
- uid: VDS.RDF.MimeTypesHelper.GetParser*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetParser
  name: GetParser
  nameWithType: MimeTypesHelper.GetParser
  fullName: VDS.RDF.MimeTypesHelper.GetParser
- uid: VDS.RDF.MimeTypesHelper.GetParserByFileExtension*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetParserByFileExtension
  name: GetParserByFileExtension
  nameWithType: MimeTypesHelper.GetParserByFileExtension
  fullName: VDS.RDF.MimeTypesHelper.GetParserByFileExtension
- uid: VDS.RDF.MimeTypesHelper.GetSparqlParser*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetSparqlParser
  name: GetSparqlParser
  nameWithType: MimeTypesHelper.GetSparqlParser
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlParser
- uid: VDS.RDF.MimeTypesHelper.GetSparqlParserByFileExtension*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetSparqlParserByFileExtension
  name: GetSparqlParserByFileExtension
  nameWithType: MimeTypesHelper.GetSparqlParserByFileExtension
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlParserByFileExtension
- uid: VDS.RDF.MimeTypesHelper.GetSparqlWriter*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetSparqlWriter
  name: GetSparqlWriter
  nameWithType: MimeTypesHelper.GetSparqlWriter
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlWriter
- uid: VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension
  name: GetSparqlWriterByFileExtension
  nameWithType: MimeTypesHelper.GetSparqlWriterByFileExtension
  fullName: VDS.RDF.MimeTypesHelper.GetSparqlWriterByFileExtension
- uid: VDS.RDF.MimeTypesHelper.GetStoreParser*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetStoreParser
  name: GetStoreParser
  nameWithType: MimeTypesHelper.GetStoreParser
  fullName: VDS.RDF.MimeTypesHelper.GetStoreParser
- uid: VDS.RDF.MimeTypesHelper.GetStoreParserByFileExtension*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetStoreParserByFileExtension
  name: GetStoreParserByFileExtension
  nameWithType: MimeTypesHelper.GetStoreParserByFileExtension
  fullName: VDS.RDF.MimeTypesHelper.GetStoreParserByFileExtension
- uid: VDS.RDF.Writing.ICompressingWriter
  commentId: T:VDS.RDF.Writing.ICompressingWriter
  parent: VDS.RDF.Writing
  name: ICompressingWriter
  nameWithType: ICompressingWriter
  fullName: VDS.RDF.Writing.ICompressingWriter
- uid: VDS.RDF.Options.DefaultCompressionLevel
  commentId: P:VDS.RDF.Options.DefaultCompressionLevel
  isExternal: true
- uid: VDS.RDF.MimeTypesHelper.GetStoreWriter*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetStoreWriter
  name: GetStoreWriter
  nameWithType: MimeTypesHelper.GetStoreWriter
  fullName: VDS.RDF.MimeTypesHelper.GetStoreWriter
- uid: VDS.RDF.Writing
  commentId: N:VDS.RDF.Writing
  name: VDS.RDF.Writing
  nameWithType: VDS.RDF.Writing
  fullName: VDS.RDF.Writing
- uid: VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension
  name: GetStoreWriterByFileExtension
  nameWithType: MimeTypesHelper.GetStoreWriterByFileExtension
  fullName: VDS.RDF.MimeTypesHelper.GetStoreWriterByFileExtension
- uid: VDS.RDF.MimeTypesHelper.GetMimeTypes*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetMimeTypes
  name: GetMimeTypes
  nameWithType: MimeTypesHelper.GetMimeTypes
  fullName: VDS.RDF.MimeTypesHelper.GetMimeTypes
- uid: System.IO.Path.GetExtension(System.String)
  commentId: M:System.IO.Path.GetExtension(System.String)
  isExternal: true
- uid: VDS.RDF.MimeTypesHelper.GetTrueFileExtension*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetTrueFileExtension
  name: GetTrueFileExtension
  nameWithType: MimeTypesHelper.GetTrueFileExtension
  fullName: VDS.RDF.MimeTypesHelper.GetTrueFileExtension
- uid: VDS.RDF.MimeTypesHelper.GetTrueResourceExtension*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetTrueResourceExtension
  name: GetTrueResourceExtension
  nameWithType: MimeTypesHelper.GetTrueResourceExtension
  fullName: VDS.RDF.MimeTypesHelper.GetTrueResourceExtension
- uid: VDS.RDF.MimeTypesHelper.GetFileExtension*
  commentId: Overload:VDS.RDF.MimeTypesHelper.GetFileExtension
  name: GetFileExtension
  nameWithType: MimeTypesHelper.GetFileExtension
  fullName: VDS.RDF.MimeTypesHelper.GetFileExtension
shouldSkipMarkup: true
