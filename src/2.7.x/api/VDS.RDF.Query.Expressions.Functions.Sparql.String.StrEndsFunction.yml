### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction
  commentId: T:VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction
  id: StrEndsFunction
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String
  children:
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Functor
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ToString
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  langs:
  - csharp
  - vb
  name: StrEndsFunction
  nameWithType: StrEndsFunction
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/StrEndsFunction.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: StrEndsFunction
    path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/StrEndsFunction.cs
    startLine: 31
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.Sparql.String
  summary: "\nRepresents the SPARQL STRENDS Function.\n"
  example: []
  syntax:
    content: 'public class StrEndsFunction : BaseBinaryStringFunction, ISparqlExpression'
    content.vb: >-
      Public Class StrEndsFunction
          Inherits BaseBinaryStringFunction
          Implements ISparqlExpression
  inheritance:
  - System.Object
  - VDS.RDF.Query.Expressions.BaseBinaryExpression
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction
  implements:
  - VDS.RDF.Query.Expressions.ISparqlExpression
  inheritedMembers:
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.IsValidArgumentPair(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.Type
  - VDS.RDF.Query.Expressions.BaseBinaryExpression._leftExpr
  - VDS.RDF.Query.Expressions.BaseBinaryExpression._rightExpr
  - VDS.RDF.Query.Expressions.BaseBinaryExpression.Variables
  - VDS.RDF.Query.Expressions.BaseBinaryExpression.Arguments
  - VDS.RDF.Query.Expressions.BaseBinaryExpression.CanParallelise
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  id: '#ctor(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)'
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction
  langs:
  - csharp
  - vb
  name: StrEndsFunction(ISparqlExpression, ISparqlExpression)
  nameWithType: StrEndsFunction.StrEndsFunction(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.StrEndsFunction(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/StrEndsFunction.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/StrEndsFunction.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.Sparql.String
  summary: "\nCreates a new STRENDS() function.\n"
  example: []
  syntax:
    content: public StrEndsFunction(ISparqlExpression stringExpr, ISparqlExpression endsExpr)
    parameters:
    - id: stringExpr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: String Expression.
    - id: endsExpr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: Argument Expression.
    content.vb: Public Sub New(stringExpr As ISparqlExpression, endsExpr As ISparqlExpression)
  overload: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  id: ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction
  langs:
  - csharp
  - vb
  name: ValueInternal(ILiteralNode, ILiteralNode)
  nameWithType: StrEndsFunction.ValueInternal(ILiteralNode, ILiteralNode)
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ValueInternal(VDS.RDF.ILiteralNode, VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/StrEndsFunction.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ValueInternal
    path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/StrEndsFunction.cs
    startLine: 48
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.Sparql.String
  summary: "\nDetermines whether the given String Literal ends with the given Argument Literal.\n"
  example: []
  syntax:
    content: protected override bool ValueInternal(ILiteralNode stringLit, ILiteralNode argLit)
    parameters:
    - id: stringLit
      type: VDS.RDF.ILiteralNode
      description: String Literal.
    - id: argLit
      type: VDS.RDF.ILiteralNode
      description: Argument Literal.
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Overrides Function ValueInternal(stringLit As ILiteralNode, argLit As ILiteralNode) As Boolean
  overridden: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  overload: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ValueInternal*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Functor
  commentId: P:VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Functor
  id: Functor
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction
  langs:
  - csharp
  - vb
  name: Functor
  nameWithType: StrEndsFunction.Functor
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Functor
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/StrEndsFunction.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Functor
    path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/StrEndsFunction.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.Sparql.String
  summary: "\nGets the Functor of the Expression.\n"
  example: []
  syntax:
    content: public override string Functor { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property Functor As String
  overridden: VDS.RDF.Query.Expressions.BaseBinaryExpression.Functor
  overload: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Functor*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ToString
  commentId: M:VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ToString
  id: ToString
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: StrEndsFunction.ToString()
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/StrEndsFunction.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/StrEndsFunction.cs
    startLine: 68
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.Sparql.String
  summary: "\nGets the String representation of the Expression.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: VDS.RDF.Query.Expressions.BaseBinaryExpression.ToString
  overload: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  commentId: M:VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  id: Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction
  langs:
  - csharp
  - vb
  name: Transform(IExpressionTransformer)
  nameWithType: StrEndsFunction.Transform(IExpressionTransformer)
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/StrEndsFunction.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Transform
    path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/StrEndsFunction.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.Sparql.String
  summary: "\nTransforms the Expression using the given Transformer.\n"
  example: []
  syntax:
    content: public override ISparqlExpression Transform(IExpressionTransformer transformer)
    parameters:
    - id: transformer
      type: VDS.RDF.Query.Expressions.IExpressionTransformer
      description: Expression Transformer.
    return:
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: ''
    content.vb: Public Overrides Function Transform(transformer As IExpressionTransformer) As ISparqlExpression
  overridden: VDS.RDF.Query.Expressions.BaseBinaryExpression.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  overload: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Transform*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String
  commentId: N:VDS.RDF.Query.Expressions.Functions.Sparql.String
  name: VDS.RDF.Query.Expressions.Functions.Sparql.String
  nameWithType: VDS.RDF.Query.Expressions.Functions.Sparql.String
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Expressions.BaseBinaryExpression
  commentId: T:VDS.RDF.Query.Expressions.BaseBinaryExpression
  parent: VDS.RDF.Query.Expressions
  name: BaseBinaryExpression
  nameWithType: BaseBinaryExpression
  fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction
  commentId: T:VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String
  name: BaseBinaryStringFunction
  nameWithType: BaseBinaryStringFunction
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  commentId: M:VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction
  isExternal: true
  name: Evaluate(SparqlEvaluationContext, Int32)
  nameWithType: BaseBinaryStringFunction.Evaluate(SparqlEvaluationContext, Int32)
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext, System.Int32)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
    name: Evaluate
    nameWithType: BaseBinaryStringFunction.Evaluate
    fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
    name: Evaluate
    nameWithType: BaseBinaryStringFunction.Evaluate
    fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.IsValidArgumentPair(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.IsValidArgumentPair(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction
  name: IsValidArgumentPair(ILiteralNode, ILiteralNode)
  nameWithType: BaseBinaryStringFunction.IsValidArgumentPair(ILiteralNode, ILiteralNode)
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.IsValidArgumentPair(VDS.RDF.ILiteralNode, VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.IsValidArgumentPair(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
    name: IsValidArgumentPair
    nameWithType: BaseBinaryStringFunction.IsValidArgumentPair
    fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.IsValidArgumentPair
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.IsValidArgumentPair(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
    name: IsValidArgumentPair
    nameWithType: BaseBinaryStringFunction.IsValidArgumentPair
    fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.IsValidArgumentPair
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.Type
  commentId: P:VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.Type
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction
  name: Type
  nameWithType: BaseBinaryStringFunction.Type
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.Type
- uid: VDS.RDF.Query.Expressions.BaseBinaryExpression._leftExpr
  commentId: F:VDS.RDF.Query.Expressions.BaseBinaryExpression._leftExpr
  parent: VDS.RDF.Query.Expressions.BaseBinaryExpression
  name: _leftExpr
  nameWithType: BaseBinaryExpression._leftExpr
  fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression._leftExpr
- uid: VDS.RDF.Query.Expressions.BaseBinaryExpression._rightExpr
  commentId: F:VDS.RDF.Query.Expressions.BaseBinaryExpression._rightExpr
  parent: VDS.RDF.Query.Expressions.BaseBinaryExpression
  name: _rightExpr
  nameWithType: BaseBinaryExpression._rightExpr
  fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression._rightExpr
- uid: VDS.RDF.Query.Expressions.BaseBinaryExpression.Variables
  commentId: P:VDS.RDF.Query.Expressions.BaseBinaryExpression.Variables
  parent: VDS.RDF.Query.Expressions.BaseBinaryExpression
  name: Variables
  nameWithType: BaseBinaryExpression.Variables
  fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression.Variables
- uid: VDS.RDF.Query.Expressions.BaseBinaryExpression.Arguments
  commentId: P:VDS.RDF.Query.Expressions.BaseBinaryExpression.Arguments
  parent: VDS.RDF.Query.Expressions.BaseBinaryExpression
  name: Arguments
  nameWithType: BaseBinaryExpression.Arguments
  fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression.Arguments
- uid: VDS.RDF.Query.Expressions.BaseBinaryExpression.CanParallelise
  commentId: P:VDS.RDF.Query.Expressions.BaseBinaryExpression.CanParallelise
  parent: VDS.RDF.Query.Expressions.BaseBinaryExpression
  name: CanParallelise
  nameWithType: BaseBinaryExpression.CanParallelise
  fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression.CanParallelise
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<StrEndsFunction>()
  nameWithType: Extensions.AsEnumerable<StrEndsFunction>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction>()
  nameWithType.vb: Extensions.AsEnumerable(Of StrEndsFunction)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction)()
  name.vb: AsEnumerable(Of StrEndsFunction)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<StrEndsFunction>
    nameWithType: Extensions.AsEnumerable<StrEndsFunction>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of StrEndsFunction)
    nameWithType: Extensions.AsEnumerable(Of StrEndsFunction)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.#ctor*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.#ctor
  name: StrEndsFunction
  nameWithType: StrEndsFunction.StrEndsFunction
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.StrEndsFunction
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction
  name: ValueInternal(ILiteralNode, ILiteralNode)
  nameWithType: BaseBinaryStringFunction.ValueInternal(ILiteralNode, ILiteralNode)
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode, VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
    name: ValueInternal
    nameWithType: BaseBinaryStringFunction.ValueInternal
    fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.ValueInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.ValueInternal(VDS.RDF.ILiteralNode,VDS.RDF.ILiteralNode)
    name: ValueInternal
    nameWithType: BaseBinaryStringFunction.ValueInternal
    fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.BaseBinaryStringFunction.ValueInternal
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ValueInternal*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ValueInternal
  name: ValueInternal
  nameWithType: StrEndsFunction.ValueInternal
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ValueInternal
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Expressions.BaseBinaryExpression.Functor
  commentId: P:VDS.RDF.Query.Expressions.BaseBinaryExpression.Functor
  parent: VDS.RDF.Query.Expressions.BaseBinaryExpression
  name: Functor
  nameWithType: BaseBinaryExpression.Functor
  fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression.Functor
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Functor*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Functor
  name: Functor
  nameWithType: StrEndsFunction.Functor
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Functor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Expressions.BaseBinaryExpression.ToString
  commentId: M:VDS.RDF.Query.Expressions.BaseBinaryExpression.ToString
  parent: VDS.RDF.Query.Expressions.BaseBinaryExpression
  name: ToString()
  nameWithType: BaseBinaryExpression.ToString()
  fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression.ToString()
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.BaseBinaryExpression.ToString
    name: ToString
    nameWithType: BaseBinaryExpression.ToString
    fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.BaseBinaryExpression.ToString
    name: ToString
    nameWithType: BaseBinaryExpression.ToString
    fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ToString*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ToString
  name: ToString
  nameWithType: StrEndsFunction.ToString
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.ToString
- uid: VDS.RDF.Query.Expressions.BaseBinaryExpression.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  commentId: M:VDS.RDF.Query.Expressions.BaseBinaryExpression.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  parent: VDS.RDF.Query.Expressions.BaseBinaryExpression
  name: Transform(IExpressionTransformer)
  nameWithType: BaseBinaryExpression.Transform(IExpressionTransformer)
  fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.BaseBinaryExpression.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
    name: Transform
    nameWithType: BaseBinaryExpression.Transform
    fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.IExpressionTransformer
    name: IExpressionTransformer
    nameWithType: IExpressionTransformer
    fullName: VDS.RDF.Query.Expressions.IExpressionTransformer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.BaseBinaryExpression.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
    name: Transform
    nameWithType: BaseBinaryExpression.Transform
    fullName: VDS.RDF.Query.Expressions.BaseBinaryExpression.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.IExpressionTransformer
    name: IExpressionTransformer
    nameWithType: IExpressionTransformer
    fullName: VDS.RDF.Query.Expressions.IExpressionTransformer
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Transform*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Transform
  name: Transform
  nameWithType: StrEndsFunction.Transform
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.StrEndsFunction.Transform
- uid: VDS.RDF.Query.Expressions.IExpressionTransformer
  commentId: T:VDS.RDF.Query.Expressions.IExpressionTransformer
  parent: VDS.RDF.Query.Expressions
  name: IExpressionTransformer
  nameWithType: IExpressionTransformer
  fullName: VDS.RDF.Query.Expressions.IExpressionTransformer
shouldSkipMarkup: true
