### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Filters.ChainFilter
  commentId: T:VDS.RDF.Query.Filters.ChainFilter
  id: ChainFilter
  parent: VDS.RDF.Query.Filters
  children:
  - VDS.RDF.Query.Filters.ChainFilter.#ctor(System.Collections.Generic.IEnumerable{VDS.RDF.Query.Filters.ISparqlFilter})
  - VDS.RDF.Query.Filters.ChainFilter.#ctor(VDS.RDF.Query.Filters.ISparqlFilter,System.Collections.Generic.IEnumerable{VDS.RDF.Query.Filters.ISparqlFilter})
  - VDS.RDF.Query.Filters.ChainFilter.#ctor(VDS.RDF.Query.Filters.ISparqlFilter,VDS.RDF.Query.Filters.ISparqlFilter)
  - VDS.RDF.Query.Filters.ChainFilter.Add(VDS.RDF.Query.Filters.ISparqlFilter)
  - VDS.RDF.Query.Filters.ChainFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Filters.ChainFilter.Expression
  - VDS.RDF.Query.Filters.ChainFilter.ToString
  - VDS.RDF.Query.Filters.ChainFilter.Variables
  langs:
  - csharp
  - vb
  name: ChainFilter
  nameWithType: ChainFilter
  fullName: VDS.RDF.Query.Filters.ChainFilter
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ChainFilter
    path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
    startLine: 249
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nGeneric Filter for use where multiple Filters are applied on a single Graph Pattern.\n"
  example: []
  syntax:
    content: 'public class ChainFilter : ISparqlFilter'
    content.vb: >-
      Public Class ChainFilter
          Implements ISparqlFilter
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Query.Filters.ISparqlFilter
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Filters.ChainFilter.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Filters.ChainFilter.#ctor(VDS.RDF.Query.Filters.ISparqlFilter,VDS.RDF.Query.Filters.ISparqlFilter)
  commentId: M:VDS.RDF.Query.Filters.ChainFilter.#ctor(VDS.RDF.Query.Filters.ISparqlFilter,VDS.RDF.Query.Filters.ISparqlFilter)
  id: '#ctor(VDS.RDF.Query.Filters.ISparqlFilter,VDS.RDF.Query.Filters.ISparqlFilter)'
  parent: VDS.RDF.Query.Filters.ChainFilter
  langs:
  - csharp
  - vb
  name: ChainFilter(ISparqlFilter, ISparqlFilter)
  nameWithType: ChainFilter.ChainFilter(ISparqlFilter, ISparqlFilter)
  fullName: VDS.RDF.Query.Filters.ChainFilter.ChainFilter(VDS.RDF.Query.Filters.ISparqlFilter, VDS.RDF.Query.Filters.ISparqlFilter)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
    startLine: 258
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nCreates a new Chain Filter.\n"
  example: []
  syntax:
    content: public ChainFilter(ISparqlFilter first, ISparqlFilter second)
    parameters:
    - id: first
      type: VDS.RDF.Query.Filters.ISparqlFilter
      description: First Filter.
    - id: second
      type: VDS.RDF.Query.Filters.ISparqlFilter
      description: Second Filter.
    content.vb: Public Sub New(first As ISparqlFilter, second As ISparqlFilter)
  overload: VDS.RDF.Query.Filters.ChainFilter.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Filters.ChainFilter.#ctor(System.Collections.Generic.IEnumerable{VDS.RDF.Query.Filters.ISparqlFilter})
  commentId: M:VDS.RDF.Query.Filters.ChainFilter.#ctor(System.Collections.Generic.IEnumerable{VDS.RDF.Query.Filters.ISparqlFilter})
  id: '#ctor(System.Collections.Generic.IEnumerable{VDS.RDF.Query.Filters.ISparqlFilter})'
  parent: VDS.RDF.Query.Filters.ChainFilter
  langs:
  - csharp
  - vb
  name: ChainFilter(IEnumerable<ISparqlFilter>)
  nameWithType: ChainFilter.ChainFilter(IEnumerable<ISparqlFilter>)
  fullName: VDS.RDF.Query.Filters.ChainFilter.ChainFilter(System.Collections.Generic.IEnumerable<VDS.RDF.Query.Filters.ISparqlFilter>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
    startLine: 268
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nCreates a new Chain Filter.\n"
  example: []
  syntax:
    content: public ChainFilter(IEnumerable<ISparqlFilter> filters)
    parameters:
    - id: filters
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Filters.ISparqlFilter}
      description: Filters.
    content.vb: Public Sub New(filters As IEnumerable(Of ISparqlFilter))
  overload: VDS.RDF.Query.Filters.ChainFilter.#ctor*
  nameWithType.vb: ChainFilter.ChainFilter(IEnumerable(Of ISparqlFilter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Filters.ChainFilter.ChainFilter(System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Filters.ISparqlFilter))
  name.vb: ChainFilter(IEnumerable(Of ISparqlFilter))
- uid: VDS.RDF.Query.Filters.ChainFilter.#ctor(VDS.RDF.Query.Filters.ISparqlFilter,System.Collections.Generic.IEnumerable{VDS.RDF.Query.Filters.ISparqlFilter})
  commentId: M:VDS.RDF.Query.Filters.ChainFilter.#ctor(VDS.RDF.Query.Filters.ISparqlFilter,System.Collections.Generic.IEnumerable{VDS.RDF.Query.Filters.ISparqlFilter})
  id: '#ctor(VDS.RDF.Query.Filters.ISparqlFilter,System.Collections.Generic.IEnumerable{VDS.RDF.Query.Filters.ISparqlFilter})'
  parent: VDS.RDF.Query.Filters.ChainFilter
  langs:
  - csharp
  - vb
  name: ChainFilter(ISparqlFilter, IEnumerable<ISparqlFilter>)
  nameWithType: ChainFilter.ChainFilter(ISparqlFilter, IEnumerable<ISparqlFilter>)
  fullName: VDS.RDF.Query.Filters.ChainFilter.ChainFilter(VDS.RDF.Query.Filters.ISparqlFilter, System.Collections.Generic.IEnumerable<VDS.RDF.Query.Filters.ISparqlFilter>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
    startLine: 278
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nCreates a new Chain Filter.\n"
  example: []
  syntax:
    content: public ChainFilter(ISparqlFilter first, IEnumerable<ISparqlFilter> rest)
    parameters:
    - id: first
      type: VDS.RDF.Query.Filters.ISparqlFilter
      description: First Filter.
    - id: rest
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Filters.ISparqlFilter}
      description: Additional Filters.
    content.vb: Public Sub New(first As ISparqlFilter, rest As IEnumerable(Of ISparqlFilter))
  overload: VDS.RDF.Query.Filters.ChainFilter.#ctor*
  nameWithType.vb: ChainFilter.ChainFilter(ISparqlFilter, IEnumerable(Of ISparqlFilter))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Filters.ChainFilter.ChainFilter(VDS.RDF.Query.Filters.ISparqlFilter, System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Filters.ISparqlFilter))
  name.vb: ChainFilter(ISparqlFilter, IEnumerable(Of ISparqlFilter))
- uid: VDS.RDF.Query.Filters.ChainFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Filters.ChainFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  id: Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Filters.ChainFilter
  langs:
  - csharp
  - vb
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ChainFilter.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Filters.ChainFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Evaluate
    path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
    startLine: 288
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nEvaluates a filter in the given Evaluation Context.\n"
  example: []
  syntax:
    content: public void Evaluate(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    content.vb: Public Sub Evaluate(context As SparqlEvaluationContext)
  overload: VDS.RDF.Query.Filters.ChainFilter.Evaluate*
  implements:
  - VDS.RDF.Query.Filters.ISparqlFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Filters.ChainFilter.Add(VDS.RDF.Query.Filters.ISparqlFilter)
  commentId: M:VDS.RDF.Query.Filters.ChainFilter.Add(VDS.RDF.Query.Filters.ISparqlFilter)
  id: Add(VDS.RDF.Query.Filters.ISparqlFilter)
  parent: VDS.RDF.Query.Filters.ChainFilter
  langs:
  - csharp
  - vb
  name: Add(ISparqlFilter)
  nameWithType: ChainFilter.Add(ISparqlFilter)
  fullName: VDS.RDF.Query.Filters.ChainFilter.Add(VDS.RDF.Query.Filters.ISparqlFilter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Add
    path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
    startLine: 302
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nAdds an additional Filter to the Filter Chain.\n"
  example: []
  syntax:
    content: protected void Add(ISparqlFilter filter)
    parameters:
    - id: filter
      type: VDS.RDF.Query.Filters.ISparqlFilter
      description: A Filter to add.
    content.vb: Protected Sub Add(filter As ISparqlFilter)
  overload: VDS.RDF.Query.Filters.ChainFilter.Add*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Query.Filters.ChainFilter.ToString
  commentId: M:VDS.RDF.Query.Filters.ChainFilter.ToString
  id: ToString
  parent: VDS.RDF.Query.Filters.ChainFilter
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ChainFilter.ToString()
  fullName: VDS.RDF.Query.Filters.ChainFilter.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
    startLine: 311
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nGets the String representation of the Filters.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VDS.RDF.Query.Filters.ChainFilter.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Filters.ChainFilter.Variables
  commentId: P:VDS.RDF.Query.Filters.ChainFilter.Variables
  id: Variables
  parent: VDS.RDF.Query.Filters.ChainFilter
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: ChainFilter.Variables
  fullName: VDS.RDF.Query.Filters.ChainFilter.Variables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variables
    path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
    startLine: 324
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nGets the enumeration of Variables used in the chained Filters.\n"
  example: []
  syntax:
    content: public IEnumerable<string> Variables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property Variables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Filters.ChainFilter.Variables*
  implements:
  - VDS.RDF.Query.Filters.ISparqlFilter.Variables
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Filters.ChainFilter.Expression
  commentId: P:VDS.RDF.Query.Filters.ChainFilter.Expression
  id: Expression
  parent: VDS.RDF.Query.Filters.ChainFilter
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: ChainFilter.Expression
  fullName: VDS.RDF.Query.Filters.ChainFilter.Expression
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Expression
    path: Libraries/dotNetRDF/Query/Filters/SparqlFilterClasses.cs
    startLine: 340
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nGets the Inner Expression used by the Chained Filters.\n"
  remarks: "\nEquivalent to ANDing all the Chained Filters expressions.\n"
  example: []
  syntax:
    content: public ISparqlExpression Expression { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Expressions.ISparqlExpression
    content.vb: Public ReadOnly Property Expression As ISparqlExpression
  overload: VDS.RDF.Query.Filters.ChainFilter.Expression*
  implements:
  - VDS.RDF.Query.Filters.ISparqlFilter.Expression
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VDS.RDF.Query.Filters
  commentId: N:VDS.RDF.Query.Filters
  name: VDS.RDF.Query.Filters
  nameWithType: VDS.RDF.Query.Filters
  fullName: VDS.RDF.Query.Filters
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Filters.ISparqlFilter
  commentId: T:VDS.RDF.Query.Filters.ISparqlFilter
  parent: VDS.RDF.Query.Filters
  name: ISparqlFilter
  nameWithType: ISparqlFilter
  fullName: VDS.RDF.Query.Filters.ISparqlFilter
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Filters.ChainFilter.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ChainFilter>()
  nameWithType: Extensions.AsEnumerable<ChainFilter>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Filters.ChainFilter>()
  nameWithType.vb: Extensions.AsEnumerable(Of ChainFilter)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Filters.ChainFilter)()
  name.vb: AsEnumerable(Of ChainFilter)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ChainFilter>
    nameWithType: Extensions.AsEnumerable<ChainFilter>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Filters.ChainFilter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ChainFilter)
    nameWithType: Extensions.AsEnumerable(Of ChainFilter)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Filters.ChainFilter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Filters.ChainFilter.#ctor*
  commentId: Overload:VDS.RDF.Query.Filters.ChainFilter.#ctor
  name: ChainFilter
  nameWithType: ChainFilter.ChainFilter
  fullName: VDS.RDF.Query.Filters.ChainFilter.ChainFilter
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Filters.ISparqlFilter}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.Filters.ISparqlFilter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISparqlFilter>
  nameWithType: IEnumerable<ISparqlFilter>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.Filters.ISparqlFilter>
  nameWithType.vb: IEnumerable(Of ISparqlFilter)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Filters.ISparqlFilter)
  name.vb: IEnumerable(Of ISparqlFilter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Filters.ISparqlFilter
    name: ISparqlFilter
    nameWithType: ISparqlFilter
    fullName: VDS.RDF.Query.Filters.ISparqlFilter
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Filters.ISparqlFilter
    name: ISparqlFilter
    nameWithType: ISparqlFilter
    fullName: VDS.RDF.Query.Filters.ISparqlFilter
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Filters.ChainFilter.Evaluate*
  commentId: Overload:VDS.RDF.Query.Filters.ChainFilter.Evaluate
  name: Evaluate
  nameWithType: ChainFilter.Evaluate
  fullName: VDS.RDF.Query.Filters.ChainFilter.Evaluate
- uid: VDS.RDF.Query.Filters.ISparqlFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Filters.ISparqlFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Filters.ISparqlFilter
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ISparqlFilter.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Filters.ISparqlFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Filters.ISparqlFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ISparqlFilter.Evaluate
    fullName: VDS.RDF.Query.Filters.ISparqlFilter.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Filters.ISparqlFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ISparqlFilter.Evaluate
    fullName: VDS.RDF.Query.Filters.ISparqlFilter.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Filters.ChainFilter.Add*
  commentId: Overload:VDS.RDF.Query.Filters.ChainFilter.Add
  name: Add
  nameWithType: ChainFilter.Add
  fullName: VDS.RDF.Query.Filters.ChainFilter.Add
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Filters.ChainFilter.ToString*
  commentId: Overload:VDS.RDF.Query.Filters.ChainFilter.ToString
  name: ToString
  nameWithType: ChainFilter.ToString
  fullName: VDS.RDF.Query.Filters.ChainFilter.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Filters.ChainFilter.Variables*
  commentId: Overload:VDS.RDF.Query.Filters.ChainFilter.Variables
  name: Variables
  nameWithType: ChainFilter.Variables
  fullName: VDS.RDF.Query.Filters.ChainFilter.Variables
- uid: VDS.RDF.Query.Filters.ISparqlFilter.Variables
  commentId: P:VDS.RDF.Query.Filters.ISparqlFilter.Variables
  parent: VDS.RDF.Query.Filters.ISparqlFilter
  name: Variables
  nameWithType: ISparqlFilter.Variables
  fullName: VDS.RDF.Query.Filters.ISparqlFilter.Variables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Filters.ChainFilter.Expression*
  commentId: Overload:VDS.RDF.Query.Filters.ChainFilter.Expression
  name: Expression
  nameWithType: ChainFilter.Expression
  fullName: VDS.RDF.Query.Filters.ChainFilter.Expression
- uid: VDS.RDF.Query.Filters.ISparqlFilter.Expression
  commentId: P:VDS.RDF.Query.Filters.ISparqlFilter.Expression
  parent: VDS.RDF.Query.Filters.ISparqlFilter
  name: Expression
  nameWithType: ISparqlFilter.Expression
  fullName: VDS.RDF.Query.Filters.ISparqlFilter.Expression
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
shouldSkipMarkup: true
