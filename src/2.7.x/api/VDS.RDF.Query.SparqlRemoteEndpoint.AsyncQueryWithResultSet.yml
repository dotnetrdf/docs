### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.AsyncQueryWithResultSet
  commentId: T:VDS.RDF.Query.SparqlRemoteEndpoint.AsyncQueryWithResultSet
  id: SparqlRemoteEndpoint.AsyncQueryWithResultSet
  parent: VDS.RDF.Query
  children: []
  langs:
  - csharp
  - vb
  name: SparqlRemoteEndpoint.AsyncQueryWithResultSet
  nameWithType: SparqlRemoteEndpoint.AsyncQueryWithResultSet
  fullName: VDS.RDF.Query.SparqlRemoteEndpoint.AsyncQueryWithResultSet
  type: Delegate
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsyncQueryWithResultSet
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLRemoteEndpoint.cs
    startLine: 420
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nMakes a Query where the expected Result is a SparqlResultSet ie. SELECT and ASK Queries.\n"
  remarks: "\n<p>\nAllows for implementation of asynchronous querying.  Note that the overloads of QueryWithResultSet() and QueryWithResultGraph() that take callbacks are already implemented asynchronously so you may wish to use those instead if you don&apos;t need to explicitly invoke and wait on an async operation.\n</p>\n"
  example: []
  syntax:
    content: public delegate SparqlResultSet AsyncQueryWithResultSet(string sparqlQuery);
    parameters:
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query String.
    return:
      type: VDS.RDF.Query.SparqlResultSet
      description: A Sparql Result Set.
    content.vb: Public Delegate Function AsyncQueryWithResultSet(sparqlQuery As String) As SparqlResultSet
  extensionMethods:
  - VDS.RDF.Query.SparqlRemoteEndpoint.AsyncQueryWithResultSet.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - delegate
  modifiers.vb:
  - Public
  - Delegate
references:
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.SparqlRemoteEndpoint.AsyncQueryWithResultSet.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlRemoteEndpoint.AsyncQueryWithResultSet>()
  nameWithType: Extensions.AsEnumerable<SparqlRemoteEndpoint.AsyncQueryWithResultSet>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlRemoteEndpoint.AsyncQueryWithResultSet>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlRemoteEndpoint.AsyncQueryWithResultSet)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlRemoteEndpoint.AsyncQueryWithResultSet)()
  name.vb: AsEnumerable(Of SparqlRemoteEndpoint.AsyncQueryWithResultSet)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlRemoteEndpoint.AsyncQueryWithResultSet>
    nameWithType: Extensions.AsEnumerable<SparqlRemoteEndpoint.AsyncQueryWithResultSet>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlRemoteEndpoint.AsyncQueryWithResultSet>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlRemoteEndpoint.AsyncQueryWithResultSet)
    nameWithType: Extensions.AsEnumerable(Of SparqlRemoteEndpoint.AsyncQueryWithResultSet)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlRemoteEndpoint.AsyncQueryWithResultSet)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.SparqlResultSet
  commentId: T:VDS.RDF.Query.SparqlResultSet
  parent: VDS.RDF.Query
  name: SparqlResultSet
  nameWithType: SparqlResultSet
  fullName: VDS.RDF.Query.SparqlResultSet
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
