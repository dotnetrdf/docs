### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset
  commentId: T:VDS.RDF.Query.Spin.SpinWrappedDataset
  id: SpinWrappedDataset
  parent: VDS.RDF.Query.Spin
  children:
  - VDS.RDF.Query.Spin.SpinWrappedDataset.#ctor(System.Uri,VDS.RDF.Storage.IUpdateableStorage)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.#ctor(System.Uri,VDS.RDF.Storage.IUpdateableStorage,System.Collections.Generic.IEnumerable{System.Uri})
  - VDS.RDF.Query.Spin.SpinWrappedDataset.ActiveGraphUris
  - VDS.RDF.Query.Spin.SpinWrappedDataset.AddGraph(VDS.RDF.IGraph)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.CommandCalls
  - VDS.RDF.Query.Spin.SpinWrappedDataset.ContainsTriple(VDS.RDF.Triple)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.DefaultGraphUris
  - VDS.RDF.Query.Spin.SpinWrappedDataset.Discard
  - VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteQuery(System.String)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate
  - VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate(System.String)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.Flush
  - VDS.RDF.Query.Spin.SpinWrappedDataset.GetModifiableGraph(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithObject(VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubject(VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.Graphs
  - VDS.RDF.Query.Spin.SpinWrappedDataset.GraphUris
  - VDS.RDF.Query.Spin.SpinWrappedDataset.HasGraph(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.HasTriples
  - VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph(VDS.RDF.IGraph)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.Item(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.Namespaces
  - VDS.RDF.Query.Spin.SpinWrappedDataset.OnDatasetDescriptionChanged(System.Object,VDS.RDF.GraphEventArgs)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.RemoveGraph(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.ResetActiveGraph
  - VDS.RDF.Query.Spin.SpinWrappedDataset.ResetDefaultGraph
  - VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  - VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  - VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedDataset.SourceUri
  - VDS.RDF.Query.Spin.SpinWrappedDataset.Triples
  - VDS.RDF.Query.Spin.SpinWrappedDataset.UpdatesMonitor
  - VDS.RDF.Query.Spin.SpinWrappedDataset.Uri
  - VDS.RDF.Query.Spin.SpinWrappedDataset.UsesUnionDefaultGraph
  langs:
  - csharp
  - vb
  name: SpinWrappedDataset
  nameWithType: SpinWrappedDataset
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SpinWrappedDataset
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 46
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nProvides SPIN capabilities for a Dataset over any SPIN-unaware IUpdateableStorage (including the InMemoryManager).\nTODO decide how to handle the default unnamed graph case\nTODO design a concurrency management policy\n"
  example: []
  syntax:
    content: 'public class SpinWrappedDataset : ISparqlDataset'
    content.vb: >-
      Public Class SpinWrappedDataset
          Implements ISparqlDataset
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Spin.SpinWrappedDataset.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.CommandCalls
  commentId: F:VDS.RDF.Query.Spin.SpinWrappedDataset.CommandCalls
  id: CommandCalls
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: CommandCalls
  nameWithType: SpinWrappedDataset.CommandCalls
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.CommandCalls
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CommandCalls
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 59
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nThe SPARQL update command calls made by this wrapper\n"
  example: []
  syntax:
    content: public List<string> CommandCalls
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public CommandCalls As List(Of String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.#ctor(System.Uri,VDS.RDF.Storage.IUpdateableStorage)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.#ctor(System.Uri,VDS.RDF.Storage.IUpdateableStorage)
  id: '#ctor(System.Uri,VDS.RDF.Storage.IUpdateableStorage)'
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: SpinWrappedDataset(Uri, IUpdateableStorage)
  nameWithType: SpinWrappedDataset.SpinWrappedDataset(Uri, IUpdateableStorage)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.SpinWrappedDataset(System.Uri, VDS.RDF.Storage.IUpdateableStorage)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 93
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nInititalize a SpinWrapperDataset upon a storage engine using a RDF SparqlDataset definition.\n"
  example: []
  syntax:
    content: public SpinWrappedDataset(Uri datasetUri, IUpdateableStorage storage)
    parameters:
    - id: datasetUri
      type: System.Uri
      description: ''
    - id: storage
      type: VDS.RDF.Storage.IUpdateableStorage
      description: ''
    content.vb: Public Sub New(datasetUri As Uri, storage As IUpdateableStorage)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.#ctor(System.Uri,VDS.RDF.Storage.IUpdateableStorage,System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.#ctor(System.Uri,VDS.RDF.Storage.IUpdateableStorage,System.Collections.Generic.IEnumerable{System.Uri})
  id: '#ctor(System.Uri,VDS.RDF.Storage.IUpdateableStorage,System.Collections.Generic.IEnumerable{System.Uri})'
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: SpinWrappedDataset(Uri, IUpdateableStorage, IEnumerable<Uri>)
  nameWithType: SpinWrappedDataset.SpinWrappedDataset(Uri, IUpdateableStorage, IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.SpinWrappedDataset(System.Uri, VDS.RDF.Storage.IUpdateableStorage, System.Collections.Generic.IEnumerable<System.Uri>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 106
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nInititalize a SPIN model upon a storage engine using a RDF SparqlDataset definition composed of the specified graphs.\n"
  example: []
  syntax:
    content: public SpinWrappedDataset(Uri datasetUri, IUpdateableStorage storage, IEnumerable<Uri> graphUris)
    parameters:
    - id: datasetUri
      type: System.Uri
      description: ''
    - id: storage
      type: VDS.RDF.Storage.IUpdateableStorage
      description: ''
    - id: graphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: ''
    content.vb: Public Sub New(datasetUri As Uri, storage As IUpdateableStorage, graphUris As IEnumerable(Of Uri))
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.#ctor*
  nameWithType.vb: SpinWrappedDataset.SpinWrappedDataset(Uri, IUpdateableStorage, IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Spin.SpinWrappedDataset.SpinWrappedDataset(System.Uri, VDS.RDF.Storage.IUpdateableStorage, System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SpinWrappedDataset(Uri, IUpdateableStorage, IEnumerable(Of Uri))
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.OnDatasetDescriptionChanged(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.OnDatasetDescriptionChanged(System.Object,VDS.RDF.GraphEventArgs)
  id: OnDatasetDescriptionChanged(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: OnDatasetDescriptionChanged(Object, GraphEventArgs)
  nameWithType: SpinWrappedDataset.OnDatasetDescriptionChanged(Object, GraphEventArgs)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.OnDatasetDescriptionChanged(System.Object, VDS.RDF.GraphEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnDatasetDescriptionChanged
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 163
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nEvent handler to monitor the current Dataset\n"
  example: []
  syntax:
    content: protected void OnDatasetDescriptionChanged(object sender, GraphEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: ''
    - id: args
      type: VDS.RDF.GraphEventArgs
      description: ''
    content.vb: Protected Sub OnDatasetDescriptionChanged(sender As Object, args As GraphEventArgs)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.OnDatasetDescriptionChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Namespaces
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedDataset.Namespaces
  id: Namespaces
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: Namespaces
  nameWithType: SpinWrappedDataset.Namespaces
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Namespaces
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Namespaces
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 193
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets the Dataset namespace prefixes map if supported.\n"
  example: []
  syntax:
    content: public INamespaceMapper Namespaces { get; }
    parameters: []
    return:
      type: VDS.RDF.INamespaceMapper
    content.vb: Public ReadOnly Property Namespaces As INamespaceMapper
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.Namespaces*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Uri
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedDataset.Uri
  id: Uri
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: SpinWrappedDataset.Uri
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Uri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Uri
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 252
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nReturns the current dataset Uri.\nIf the dataset has been updated use SourceUri to get the orignal dataset Uri\n"
  example: []
  syntax:
    content: public Uri Uri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property Uri As Uri
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.Uri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.SourceUri
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedDataset.SourceUri
  id: SourceUri
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: SourceUri
  nameWithType: SpinWrappedDataset.SourceUri
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.SourceUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SourceUri
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 263
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nReturns the original dataset Uri\n"
  example: []
  syntax:
    content: public Uri SourceUri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property SourceUri As Uri
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.SourceUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph(System.Uri)
  id: ImportGraph(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: ImportGraph(Uri)
  nameWithType: SpinWrappedDataset.ImportGraph(Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ImportGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 284
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\n\n"
  example: []
  syntax:
    content: public void ImportGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: ''
    content.vb: Public Sub ImportGraph(graphUri As Uri)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph(VDS.RDF.IGraph)
  id: ImportGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: ImportGraph(IGraph)
  nameWithType: SpinWrappedDataset.ImportGraph(IGraph)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ImportGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 294
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nImports a graph into the dataset and registers it as a SPIN.LibraryOntology for further SPIN processing.\n"
  example: []
  syntax:
    content: public void ImportGraph(IGraph graph)
    parameters:
    - id: graph
      type: VDS.RDF.IGraph
      description: ''
    content.vb: Public Sub ImportGraph(graph As IGraph)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.UpdatesMonitor
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedDataset.UpdatesMonitor
  id: UpdatesMonitor
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: UpdatesMonitor
  nameWithType: SpinWrappedDataset.UpdatesMonitor
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.UpdatesMonitor
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UpdatesMonitor
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 357
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets/sets a graph to monitor global changes to the dataset.\nResponsibility for the management of this graph is left to the caller.\nChanges will be notified only at the end of the update process to avoid inducing too much I/O with each partial result.\n"
  example: []
  syntax:
    content: public IGraph UpdatesMonitor { get; set; }
    parameters: []
    return:
      type: VDS.RDF.IGraph
    content.vb: Public Property UpdatesMonitor As IGraph
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.UpdatesMonitor*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  id: SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: SetActiveGraph(IEnumerable<Uri>)
  nameWithType: SpinWrappedDataset.SetActiveGraph(IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph(System.Collections.Generic.IEnumerable<System.Uri>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetActiveGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 377
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSets the Active Graph to be the merge of the Graphs with the given URIs.\n"
  example: []
  syntax:
    content: public void SetActiveGraph(IEnumerable<Uri> graphUris)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: Graph URIs.
    content.vb: Public Sub SetActiveGraph(graphUris As IEnumerable(Of Uri))
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  nameWithType.vb: SpinWrappedDataset.SetActiveGraph(IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SetActiveGraph(IEnumerable(Of Uri))
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph(System.Uri)
  id: SetActiveGraph(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: SetActiveGraph(Uri)
  nameWithType: SpinWrappedDataset.SetActiveGraph(Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetActiveGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 386
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSets the Active Graph to be the Graph with the given URI.\n"
  example: []
  syntax:
    content: public void SetActiveGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    content.vb: Public Sub SetActiveGraph(graphUri As Uri)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph(System.Uri)
  id: SetDefaultGraph(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: SetDefaultGraph(Uri)
  nameWithType: SpinWrappedDataset.SetDefaultGraph(Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetDefaultGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 392
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSets the Default Graph to be the Graph with the given URI.\n"
  example: []
  syntax:
    content: public void SetDefaultGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    content.vb: Public Sub SetDefaultGraph(graphUri As Uri)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  id: SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: SetDefaultGraph(IEnumerable<Uri>)
  nameWithType: SpinWrappedDataset.SetDefaultGraph(IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable<System.Uri>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetDefaultGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 398
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSets the Default Graph to be the merge of the Graphs with the given URIs.\n"
  example: []
  syntax:
    content: public void SetDefaultGraph(IEnumerable<Uri> graphUris)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: Graph URIs.
    content.vb: Public Sub SetDefaultGraph(graphUris As IEnumerable(Of Uri))
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  nameWithType.vb: SpinWrappedDataset.SetDefaultGraph(IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SetDefaultGraph(IEnumerable(Of Uri))
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ResetActiveGraph
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.ResetActiveGraph
  id: ResetActiveGraph
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: ResetActiveGraph()
  nameWithType: SpinWrappedDataset.ResetActiveGraph()
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ResetActiveGraph()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResetActiveGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 407
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nResets the Active Graph to the previous Active Graph.\n"
  example: []
  syntax:
    content: public void ResetActiveGraph()
    content.vb: Public Sub ResetActiveGraph
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.ResetActiveGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ResetDefaultGraph
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.ResetDefaultGraph
  id: ResetDefaultGraph
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: ResetDefaultGraph()
  nameWithType: SpinWrappedDataset.ResetDefaultGraph()
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ResetDefaultGraph()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResetDefaultGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 413
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nResets the Default Graph to the previous Default Graph.\n"
  example: []
  syntax:
    content: public void ResetDefaultGraph()
    content.vb: Public Sub ResetDefaultGraph
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.ResetDefaultGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.DefaultGraphUris
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedDataset.DefaultGraphUris
  id: DefaultGraphUris
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: DefaultGraphUris
  nameWithType: SpinWrappedDataset.DefaultGraphUris
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.DefaultGraphUris
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultGraphUris
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 419
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets the enumeration of the Graph URIs that currently make up the default graph.\n"
  example: []
  syntax:
    content: public IEnumerable<Uri> DefaultGraphUris { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public ReadOnly Property DefaultGraphUris As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.DefaultGraphUris*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.DefaultGraphUris
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ActiveGraphUris
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedDataset.ActiveGraphUris
  id: ActiveGraphUris
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: ActiveGraphUris
  nameWithType: SpinWrappedDataset.ActiveGraphUris
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ActiveGraphUris
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ActiveGraphUris
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 434
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets the enumeration of the Graph URIs that currently make up the active graph.\n"
  example: []
  syntax:
    content: public IEnumerable<Uri> ActiveGraphUris { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public ReadOnly Property ActiveGraphUris As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.ActiveGraphUris*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.ActiveGraphUris
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.UsesUnionDefaultGraph
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedDataset.UsesUnionDefaultGraph
  id: UsesUnionDefaultGraph
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: UsesUnionDefaultGraph
  nameWithType: SpinWrappedDataset.UsesUnionDefaultGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.UsesUnionDefaultGraph
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UsesUnionDefaultGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 447
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets whether the Default Graph is treated as being the union of all Graphs in the dataset when no Default Graph is otherwise set.\n"
  example: []
  syntax:
    content: public bool UsesUnionDefaultGraph { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UsesUnionDefaultGraph As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.UsesUnionDefaultGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.UsesUnionDefaultGraph
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.AddGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.AddGraph(VDS.RDF.IGraph)
  id: AddGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: AddGraph(IGraph)
  nameWithType: SpinWrappedDataset.AddGraph(IGraph)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.AddGraph(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 455
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nAdds a graph in the dataset and submits it to SPIN processing.\nIf the graph already exists in the dataset, this will lead its replacement by the new graph.\n"
  example: []
  syntax:
    content: public bool AddGraph(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function AddGraph(g As IGraph) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.AddGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.RemoveGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.RemoveGraph(System.Uri)
  id: RemoveGraph(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: RemoveGraph(Uri)
  nameWithType: SpinWrappedDataset.RemoveGraph(Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.RemoveGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RemoveGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 480
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nRemoves a graph from the Dataset.\nThe underlying graph and it&apos;s entailments are not deleted from the store, however all pending changes on the graph are cancelled\n"
  example: []
  syntax:
    content: public bool RemoveGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function RemoveGraph(graphUri As Uri) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.RemoveGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.HasGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.HasGraph(System.Uri)
  id: HasGraph(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: HasGraph(Uri)
  nameWithType: SpinWrappedDataset.HasGraph(Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.HasGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 490
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets whether a Graph with the given URI is the Dataset\n"
  example: []
  syntax:
    content: public bool HasGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasGraph(graphUri As Uri) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.HasGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Graphs
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedDataset.Graphs
  id: Graphs
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: Graphs
  nameWithType: SpinWrappedDataset.Graphs
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Graphs
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Graphs
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 496
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets all the Graphs in the Dataset.\n"
  example: []
  syntax:
    content: public IEnumerable<IGraph> Graphs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.IGraph}
    content.vb: Public ReadOnly Property Graphs As IEnumerable(Of IGraph)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.Graphs*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Graphs
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GraphUris
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedDataset.GraphUris
  id: GraphUris
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: GraphUris
  nameWithType: SpinWrappedDataset.GraphUris
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GraphUris
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GraphUris
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 506
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets all the URIs of Graphs in the Dataset.\n"
  example: []
  syntax:
    content: public IEnumerable<Uri> GraphUris { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public ReadOnly Property GraphUris As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.GraphUris*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GraphUris
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Item(System.Uri)
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedDataset.Item(System.Uri)
  id: Item(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: Item[Uri]
  nameWithType: SpinWrappedDataset.Item[Uri]
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Item[System.Uri]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 517
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets the Graph with the given URI from the Dataset.\n"
  remarks: "\n<p>\nThis property need only return a read-only view of the Graph, code which wishes to modify Graphs should use the <xref href=\"VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)\" data-throw-if-not-resolved=\"false\"></xref> method to guarantee a Graph they can modify and will be persisted to the underlying storage.\n</p>\n"
  example: []
  syntax:
    content: public IGraph this[Uri graphUri] { get; }
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: VDS.RDF.IGraph
      description: ''
    content.vb: Public ReadOnly Property Item(graphUri As Uri) As IGraph
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.Item*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
  nameWithType.vb: SpinWrappedDataset.Item(Uri)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VDS.RDF.Query.Spin.SpinWrappedDataset.Item(System.Uri)
  name.vb: Item(Uri)
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetModifiableGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.GetModifiableGraph(System.Uri)
  id: GetModifiableGraph(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: GetModifiableGraph(Uri)
  nameWithType: SpinWrappedDataset.GetModifiableGraph(Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetModifiableGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetModifiableGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 524
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\n\n"
  example: []
  syntax:
    content: public IGraph GetModifiableGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: ''
    return:
      type: VDS.RDF.IGraph
      description: ''
    content.vb: Public Function GetModifiableGraph(graphUri As Uri) As IGraph
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.GetModifiableGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteQuery(System.String)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteQuery(System.String)
  id: ExecuteQuery(System.String)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: ExecuteQuery(String)
  nameWithType: SpinWrappedDataset.ExecuteQuery(String)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteQuery(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteQuery
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 534
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nExecutes a SPARQL query on the dataset\n"
  example: []
  syntax:
    content: public object ExecuteQuery(string sparqlQuery)
    parameters:
    - id: sparqlQuery
      type: System.String
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Function ExecuteQuery(sparqlQuery As String) As Object
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteQuery*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate
  id: ExecuteUpdate
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: ExecuteUpdate()
  nameWithType: SpinWrappedDataset.ExecuteUpdate()
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteUpdate
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 545
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nExecutes any pending SPARQL Update command from changes made to the dataset trough the API\n"
  example: []
  syntax:
    content: public void ExecuteUpdate()
    content.vb: Public Sub ExecuteUpdate
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate(System.String)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate(System.String)
  id: ExecuteUpdate(System.String)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: ExecuteUpdate(String)
  nameWithType: SpinWrappedDataset.ExecuteUpdate(String)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteUpdate
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 564
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nExecutes the SPARQL Update command on the dataset\n"
  example: []
  syntax:
    content: public void ExecuteUpdate(string sparqlUpdateCommandSet)
    parameters:
    - id: sparqlUpdateCommandSet
      type: System.String
      description: ''
    content.vb: Public Sub ExecuteUpdate(sparqlUpdateCommandSet As String)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Flush
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.Flush
  id: Flush
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: SpinWrappedDataset.Flush()
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Flush()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Flush
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 576
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nFlushes changes to the dataset\nTODO handle dataset changes as updates instread of overwriting it to make it workable in a concurrent environment.\n"
  example: []
  syntax:
    content: public void Flush()
    content.vb: Public Sub Flush
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.Flush*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Discard
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.Discard
  id: Discard
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: Discard()
  nameWithType: SpinWrappedDataset.Discard()
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Discard()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Discard
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 615
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nEnsures that any changes to the Dataset (if any) are discarded.\n"
  remarks: "\n<p>\nPrimarily intended for use in implementations which support transactions though other implementations may wish to use this to ensure that changes to the dataset are persisted properly.\n</p>\n"
  example: []
  syntax:
    content: public void Discard()
    content.vb: Public Sub Discard
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.Discard*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.HasTriples
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedDataset.HasTriples
  id: HasTriples
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: HasTriples
  nameWithType: SpinWrappedDataset.HasTriples
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.HasTriples
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasTriples
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 893
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets whether the Dataset has any Triples.\n"
  example: []
  syntax:
    content: public bool HasTriples { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasTriples As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.HasTriples*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.HasTriples
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.ContainsTriple(VDS.RDF.Triple)
  id: ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: ContainsTriple(Triple)
  nameWithType: SpinWrappedDataset.ContainsTriple(Triple)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ContainsTriple(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ContainsTriple
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 899
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets whether the Dataset contains a specific Triple.\n"
  example: []
  syntax:
    content: public bool ContainsTriple(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ContainsTriple(t As Triple) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.ContainsTriple*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Triples
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedDataset.Triples
  id: Triples
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: Triples
  nameWithType: SpinWrappedDataset.Triples
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Triples
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Triples
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 905
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets all the Triples in the Dataset.\n"
  remarks: "\n<p>\n<strong>Note:</strong> The Triples returned from the method should be limited to those in the current Active Graph if present, otherwise those in the current Default Graph if present and finally the entire Dataset.\n</p>\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> Triples { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
    content.vb: Public ReadOnly Property Triples As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.Triples*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Triples
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubject(VDS.RDF.INode)
  id: GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(INode)
  nameWithType: SpinWrappedDataset.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 911
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets all the Triples in the Dataset with the given Subject.\n"
  remarks: "\n<p>\n<strong>Note:</strong> The Triples returned from the method should be limited to those in the current Active Graph if present, otherwise those in the current Default Graph if present and finally the entire Dataset.\n</p>\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubject(INode subj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubject(subj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubject*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  id: GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(INode)
  nameWithType: SpinWrappedDataset.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 917
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets all the Triples in the Dataset with the given Predicate.\n"
  remarks: "\n<p>\n<strong>Note:</strong> The Triples returned from the method should be limited to those in the current Active Graph if present, otherwise those in the current Default Graph if present and finally the entire Dataset.\n</p>\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicate(INode pred)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicate(pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithObject(VDS.RDF.INode)
  id: GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(INode)
  nameWithType: SpinWrappedDataset.GetTriplesWithObject(INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithObject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 923
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets all the Triples in the Dataset with the given Object.\n"
  remarks: "\n<p>\n<strong>Note:</strong> The Triples returned from the method should be limited to those in the current Active Graph if present, otherwise those in the current Default Graph if present and finally the entire Dataset.\n</p>\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithObject(INode obj)
    parameters:
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithObject(obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithObject*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: SpinWrappedDataset.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectPredicate
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 929
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets all the Triples in the Dataset with the given Subject and Predicate.\n"
  remarks: "\n<p>\n<strong>Note:</strong> The Triples returned from the method should be limited to those in the current Active Graph if present, otherwise those in the current Default Graph if present and finally the entire Dataset.\n</p>\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubjectPredicate(INode subj, INode pred)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubjectPredicate(subj As INode, pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectPredicate*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: SpinWrappedDataset.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectObject
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 935
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets all the Triples in the Dataset with the given Subject and Object.\n"
  remarks: "\n<p>\n<strong>Note:</strong> The Triples returned from the method should be limited to those in the current Active Graph if present, otherwise those in the current Default Graph if present and finally the entire Dataset.\n</p>\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubjectObject(INode subj, INode obj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubjectObject(subj As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectObject*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: SpinWrappedDataset.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicateObject
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedDataset.cs
    startLine: 941
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets all the Triples in the Dataset with the given Predicate and Object.\n"
  remarks: "\n<p>\n<strong>Note:</strong> The Triples returned from the method should be limited to those in the current Active Graph if present, otherwise those in the current Default Graph if present and finally the entire Dataset.\n</p>\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicateObject(INode pred, INode obj)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicateObject(pred As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicateObject*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Spin
  commentId: N:VDS.RDF.Query.Spin
  name: VDS.RDF.Query.Spin
  nameWithType: VDS.RDF.Query.Spin
  fullName: VDS.RDF.Query.Spin
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Datasets.ISparqlDataset
  commentId: T:VDS.RDF.Query.Datasets.ISparqlDataset
  parent: VDS.RDF.Query.Datasets
  name: ISparqlDataset
  nameWithType: ISparqlDataset
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SpinWrappedDataset>()
  nameWithType: Extensions.AsEnumerable<SpinWrappedDataset>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Spin.SpinWrappedDataset>()
  nameWithType.vb: Extensions.AsEnumerable(Of SpinWrappedDataset)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Spin.SpinWrappedDataset)()
  name.vb: AsEnumerable(Of SpinWrappedDataset)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SpinWrappedDataset>
    nameWithType: Extensions.AsEnumerable<SpinWrappedDataset>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Spin.SpinWrappedDataset>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SpinWrappedDataset)
    nameWithType: Extensions.AsEnumerable(Of SpinWrappedDataset)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Spin.SpinWrappedDataset)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Datasets
  commentId: N:VDS.RDF.Query.Datasets
  name: VDS.RDF.Query.Datasets
  nameWithType: VDS.RDF.Query.Datasets
  fullName: VDS.RDF.Query.Datasets
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.#ctor*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.#ctor
  name: SpinWrappedDataset
  nameWithType: SpinWrappedDataset.SpinWrappedDataset
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.SpinWrappedDataset
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Storage.IUpdateableStorage
  commentId: T:VDS.RDF.Storage.IUpdateableStorage
  parent: VDS.RDF.Storage
  name: IUpdateableStorage
  nameWithType: IUpdateableStorage
  fullName: VDS.RDF.Storage.IUpdateableStorage
- uid: VDS.RDF.Storage
  commentId: N:VDS.RDF.Storage
  name: VDS.RDF.Storage
  nameWithType: VDS.RDF.Storage
  fullName: VDS.RDF.Storage
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  commentId: T:System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  nameWithType.vb: IEnumerable(Of Uri)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Uri)
  name.vb: IEnumerable(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.OnDatasetDescriptionChanged*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.OnDatasetDescriptionChanged
  name: OnDatasetDescriptionChanged
  nameWithType: SpinWrappedDataset.OnDatasetDescriptionChanged
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.OnDatasetDescriptionChanged
- uid: VDS.RDF.GraphEventArgs
  commentId: T:VDS.RDF.GraphEventArgs
  parent: VDS.RDF
  name: GraphEventArgs
  nameWithType: GraphEventArgs
  fullName: VDS.RDF.GraphEventArgs
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Namespaces*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.Namespaces
  name: Namespaces
  nameWithType: SpinWrappedDataset.Namespaces
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Namespaces
- uid: VDS.RDF.INamespaceMapper
  commentId: T:VDS.RDF.INamespaceMapper
  parent: VDS.RDF
  name: INamespaceMapper
  nameWithType: INamespaceMapper
  fullName: VDS.RDF.INamespaceMapper
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Uri*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.Uri
  name: Uri
  nameWithType: SpinWrappedDataset.Uri
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Uri
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.SourceUri*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.SourceUri
  name: SourceUri
  nameWithType: SpinWrappedDataset.SourceUri
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.SourceUri
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph
  name: ImportGraph
  nameWithType: SpinWrappedDataset.ImportGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ImportGraph
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.UpdatesMonitor*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.UpdatesMonitor
  name: UpdatesMonitor
  nameWithType: SpinWrappedDataset.UpdatesMonitor
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.UpdatesMonitor
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph
  name: SetActiveGraph
  nameWithType: SpinWrappedDataset.SetActiveGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.SetActiveGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: SetActiveGraph(IEnumerable<Uri>)
  nameWithType: ISparqlDataset.SetActiveGraph(IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable<System.Uri>)
  nameWithType.vb: ISparqlDataset.SetActiveGraph(IEnumerable(Of Uri))
  fullName.vb: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SetActiveGraph(IEnumerable(Of Uri))
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
    name: SetActiveGraph
    nameWithType: ISparqlDataset.SetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
    name: SetActiveGraph
    nameWithType: ISparqlDataset.SetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: SetActiveGraph(Uri)
  nameWithType: ISparqlDataset.SetActiveGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
    name: SetActiveGraph
    nameWithType: ISparqlDataset.SetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
    name: SetActiveGraph
    nameWithType: ISparqlDataset.SetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph
  name: SetDefaultGraph
  nameWithType: SpinWrappedDataset.SetDefaultGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.SetDefaultGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: SetDefaultGraph(Uri)
  nameWithType: ISparqlDataset.SetDefaultGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
    name: SetDefaultGraph
    nameWithType: ISparqlDataset.SetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
    name: SetDefaultGraph
    nameWithType: ISparqlDataset.SetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: SetDefaultGraph(IEnumerable<Uri>)
  nameWithType: ISparqlDataset.SetDefaultGraph(IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable<System.Uri>)
  nameWithType.vb: ISparqlDataset.SetDefaultGraph(IEnumerable(Of Uri))
  fullName.vb: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SetDefaultGraph(IEnumerable(Of Uri))
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
    name: SetDefaultGraph
    nameWithType: ISparqlDataset.SetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
    name: SetDefaultGraph
    nameWithType: ISparqlDataset.SetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ResetActiveGraph*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.ResetActiveGraph
  name: ResetActiveGraph
  nameWithType: SpinWrappedDataset.ResetActiveGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ResetActiveGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: ResetActiveGraph()
  nameWithType: ISparqlDataset.ResetActiveGraph()
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph()
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
    name: ResetActiveGraph
    nameWithType: ISparqlDataset.ResetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
    name: ResetActiveGraph
    nameWithType: ISparqlDataset.ResetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ResetDefaultGraph*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.ResetDefaultGraph
  name: ResetDefaultGraph
  nameWithType: SpinWrappedDataset.ResetDefaultGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ResetDefaultGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: ResetDefaultGraph()
  nameWithType: ISparqlDataset.ResetDefaultGraph()
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph()
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
    name: ResetDefaultGraph
    nameWithType: ISparqlDataset.ResetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
    name: ResetDefaultGraph
    nameWithType: ISparqlDataset.ResetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.DefaultGraphUris*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.DefaultGraphUris
  name: DefaultGraphUris
  nameWithType: SpinWrappedDataset.DefaultGraphUris
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.DefaultGraphUris
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.DefaultGraphUris
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.DefaultGraphUris
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: DefaultGraphUris
  nameWithType: ISparqlDataset.DefaultGraphUris
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.DefaultGraphUris
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ActiveGraphUris*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.ActiveGraphUris
  name: ActiveGraphUris
  nameWithType: SpinWrappedDataset.ActiveGraphUris
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ActiveGraphUris
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.ActiveGraphUris
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.ActiveGraphUris
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: ActiveGraphUris
  nameWithType: ISparqlDataset.ActiveGraphUris
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ActiveGraphUris
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.UsesUnionDefaultGraph*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.UsesUnionDefaultGraph
  name: UsesUnionDefaultGraph
  nameWithType: SpinWrappedDataset.UsesUnionDefaultGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.UsesUnionDefaultGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.UsesUnionDefaultGraph
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.UsesUnionDefaultGraph
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: UsesUnionDefaultGraph
  nameWithType: ISparqlDataset.UsesUnionDefaultGraph
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.UsesUnionDefaultGraph
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.AddGraph*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.AddGraph
  name: AddGraph
  nameWithType: SpinWrappedDataset.AddGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.AddGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: AddGraph(IGraph)
  nameWithType: ISparqlDataset.AddGraph(IGraph)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
    name: AddGraph
    nameWithType: ISparqlDataset.AddGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
    name: AddGraph
    nameWithType: ISparqlDataset.AddGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.RemoveGraph*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.RemoveGraph
  name: RemoveGraph
  nameWithType: SpinWrappedDataset.RemoveGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.RemoveGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: RemoveGraph(Uri)
  nameWithType: ISparqlDataset.RemoveGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
    name: RemoveGraph
    nameWithType: ISparqlDataset.RemoveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
    name: RemoveGraph
    nameWithType: ISparqlDataset.RemoveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.HasGraph*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.HasGraph
  name: HasGraph
  nameWithType: SpinWrappedDataset.HasGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.HasGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: HasGraph(Uri)
  nameWithType: ISparqlDataset.HasGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
    name: HasGraph
    nameWithType: ISparqlDataset.HasGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
    name: HasGraph
    nameWithType: ISparqlDataset.HasGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Graphs*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.Graphs
  name: Graphs
  nameWithType: SpinWrappedDataset.Graphs
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Graphs
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Graphs
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.Graphs
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: Graphs
  nameWithType: ISparqlDataset.Graphs
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Graphs
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.IGraph}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.IGraph}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IGraph>
  nameWithType: IEnumerable<IGraph>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.IGraph>
  nameWithType.vb: IEnumerable(Of IGraph)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.IGraph)
  name.vb: IEnumerable(Of IGraph)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GraphUris*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.GraphUris
  name: GraphUris
  nameWithType: SpinWrappedDataset.GraphUris
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GraphUris
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GraphUris
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.GraphUris
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GraphUris
  nameWithType: ISparqlDataset.GraphUris
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GraphUris
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Item*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.Item
  name: Item
  nameWithType: SpinWrappedDataset.Item
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Item
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: Item[Uri]
  nameWithType: ISparqlDataset.Item[Uri]
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Item[System.Uri]
  nameWithType.vb: ISparqlDataset.Item(Uri)
  fullName.vb: VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
  name.vb: Item(Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
    name: Item
    nameWithType: ISparqlDataset.Item
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
    name: Item
    nameWithType: ISparqlDataset.Item
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetModifiableGraph*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.GetModifiableGraph
  name: GetModifiableGraph
  nameWithType: SpinWrappedDataset.GetModifiableGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetModifiableGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: GetModifiableGraph(Uri)
  nameWithType: ISparqlDataset.GetModifiableGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
    name: GetModifiableGraph
    nameWithType: ISparqlDataset.GetModifiableGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
    name: GetModifiableGraph
    nameWithType: ISparqlDataset.GetModifiableGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteQuery*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteQuery
  name: ExecuteQuery
  nameWithType: SpinWrappedDataset.ExecuteQuery
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteQuery
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate
  name: ExecuteUpdate
  nameWithType: SpinWrappedDataset.ExecuteUpdate
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ExecuteUpdate
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Flush*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.Flush
  name: Flush
  nameWithType: SpinWrappedDataset.Flush
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Flush
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: Flush()
  nameWithType: ISparqlDataset.Flush()
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Flush()
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
    name: Flush
    nameWithType: ISparqlDataset.Flush
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
    name: Flush
    nameWithType: ISparqlDataset.Flush
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Discard*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.Discard
  name: Discard
  nameWithType: SpinWrappedDataset.Discard
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Discard
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: Discard()
  nameWithType: ISparqlDataset.Discard()
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Discard()
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
    name: Discard
    nameWithType: ISparqlDataset.Discard
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
    name: Discard
    nameWithType: ISparqlDataset.Discard
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.HasTriples*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.HasTriples
  name: HasTriples
  nameWithType: SpinWrappedDataset.HasTriples
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.HasTriples
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.HasTriples
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.HasTriples
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: HasTriples
  nameWithType: ISparqlDataset.HasTriples
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.HasTriples
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.ContainsTriple*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.ContainsTriple
  name: ContainsTriple
  nameWithType: SpinWrappedDataset.ContainsTriple
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.ContainsTriple
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: ContainsTriple(Triple)
  nameWithType: ISparqlDataset.ContainsTriple(Triple)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: ISparqlDataset.ContainsTriple
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: ISparqlDataset.ContainsTriple
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.Triples*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.Triples
  name: Triples
  nameWithType: SpinWrappedDataset.Triples
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.Triples
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Triples
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.Triples
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: Triples
  nameWithType: ISparqlDataset.Triples
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Triples
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Triple>
  nameWithType: IEnumerable<Triple>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Triple>
  nameWithType.vb: IEnumerable(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple)
  name.vb: IEnumerable(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubject*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubject
  name: GetTriplesWithSubject
  nameWithType: SpinWrappedDataset.GetTriplesWithSubject
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubject
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithSubject(INode)
  nameWithType: ISparqlDataset.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: ISparqlDataset.GetTriplesWithSubject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: ISparqlDataset.GetTriplesWithSubject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicate*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicate
  name: GetTriplesWithPredicate
  nameWithType: SpinWrappedDataset.GetTriplesWithPredicate
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicate
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithPredicate(INode)
  nameWithType: ISparqlDataset.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: ISparqlDataset.GetTriplesWithPredicate
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: ISparqlDataset.GetTriplesWithPredicate
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithObject*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithObject
  name: GetTriplesWithObject
  nameWithType: SpinWrappedDataset.GetTriplesWithObject
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithObject
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithObject(INode)
  nameWithType: ISparqlDataset.GetTriplesWithObject(INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: ISparqlDataset.GetTriplesWithObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: ISparqlDataset.GetTriplesWithObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectPredicate*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectPredicate
  name: GetTriplesWithSubjectPredicate
  nameWithType: SpinWrappedDataset.GetTriplesWithSubjectPredicate
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectPredicate
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: ISparqlDataset.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: ISparqlDataset.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: ISparqlDataset.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectObject*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectObject
  name: GetTriplesWithSubjectObject
  nameWithType: SpinWrappedDataset.GetTriplesWithSubjectObject
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithSubjectObject
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: ISparqlDataset.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: ISparqlDataset.GetTriplesWithSubjectObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: ISparqlDataset.GetTriplesWithSubjectObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicateObject*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicateObject
  name: GetTriplesWithPredicateObject
  nameWithType: SpinWrappedDataset.GetTriplesWithPredicateObject
  fullName: VDS.RDF.Query.Spin.SpinWrappedDataset.GetTriplesWithPredicateObject
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: ISparqlDataset.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: ISparqlDataset.GetTriplesWithPredicateObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: ISparqlDataset.GetTriplesWithPredicateObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
