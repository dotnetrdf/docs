### YamlMime:ManagedReference
items:
- uid: VDS.RDF.BasicTripleContext
  commentId: T:VDS.RDF.BasicTripleContext
  id: BasicTripleContext
  parent: VDS.RDF
  children:
  - VDS.RDF.BasicTripleContext.#ctor
  - VDS.RDF.BasicTripleContext.HasProperty(System.String)
  - VDS.RDF.BasicTripleContext.Item(System.String)
  langs:
  - csharp
  - vb
  name: BasicTripleContext
  nameWithType: BasicTripleContext
  fullName: VDS.RDF.BasicTripleContext
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/ITripleContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BasicTripleContext
    path: Libraries/dotNetRDF/Core/ITripleContext.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nClass which implements a very basic Triple Context.\n"
  remarks: "\nThe Name Value collection is represented internally as a Dictionary.\n"
  example: []
  syntax:
    content: 'public class BasicTripleContext : ITripleContext'
    content.vb: >-
      Public Class BasicTripleContext
          Implements ITripleContext
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.VariableContext
  implements:
  - VDS.RDF.ITripleContext
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.BasicTripleContext.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.BasicTripleContext.#ctor
  commentId: M:VDS.RDF.BasicTripleContext.#ctor
  id: '#ctor'
  parent: VDS.RDF.BasicTripleContext
  langs:
  - csharp
  - vb
  name: BasicTripleContext()
  nameWithType: BasicTripleContext.BasicTripleContext()
  fullName: VDS.RDF.BasicTripleContext.BasicTripleContext()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/ITripleContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/ITripleContext.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Basic Triple Context without a Source.\n"
  example: []
  syntax:
    content: public BasicTripleContext()
    content.vb: Public Sub New
  overload: VDS.RDF.BasicTripleContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BasicTripleContext.HasProperty(System.String)
  commentId: M:VDS.RDF.BasicTripleContext.HasProperty(System.String)
  id: HasProperty(System.String)
  parent: VDS.RDF.BasicTripleContext
  langs:
  - csharp
  - vb
  name: HasProperty(String)
  nameWithType: BasicTripleContext.HasProperty(String)
  fullName: VDS.RDF.BasicTripleContext.HasProperty(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/ITripleContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasProperty
    path: Libraries/dotNetRDF/Core/ITripleContext.cs
    startLine: 79
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether a given property is defined in this Context object.\n"
  example: []
  syntax:
    content: public bool HasProperty(string name)
    parameters:
    - id: name
      type: System.String
      description: Name of the Property.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasProperty(name As String) As Boolean
  overload: VDS.RDF.BasicTripleContext.HasProperty*
  implements:
  - VDS.RDF.ITripleContext.HasProperty(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BasicTripleContext.Item(System.String)
  commentId: P:VDS.RDF.BasicTripleContext.Item(System.String)
  id: Item(System.String)
  parent: VDS.RDF.BasicTripleContext
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: BasicTripleContext.Item[String]
  fullName: VDS.RDF.BasicTripleContext.Item[System.String]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/ITripleContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: Libraries/dotNetRDF/Core/ITripleContext.cs
    startLine: 89
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets/Sets the value of a Property.\n"
  example: []
  syntax:
    content: public object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: Name of the Property.
    return:
      type: System.Object
      description: ''
    content.vb: Public Property Item(name As String) As Object
  overload: VDS.RDF.BasicTripleContext.Item*
  implements:
  - VDS.RDF.ITripleContext.Item(System.String)
  nameWithType.vb: BasicTripleContext.Item(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.BasicTripleContext.Item(System.String)
  name.vb: Item(String)
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.ITripleContext
  commentId: T:VDS.RDF.ITripleContext
  parent: VDS.RDF
  name: ITripleContext
  nameWithType: ITripleContext
  fullName: VDS.RDF.ITripleContext
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BasicTripleContext.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BasicTripleContext>()
  nameWithType: Extensions.AsEnumerable<BasicTripleContext>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.BasicTripleContext>()
  nameWithType.vb: Extensions.AsEnumerable(Of BasicTripleContext)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.BasicTripleContext)()
  name.vb: AsEnumerable(Of BasicTripleContext)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BasicTripleContext>
    nameWithType: Extensions.AsEnumerable<BasicTripleContext>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.BasicTripleContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BasicTripleContext)
    nameWithType: Extensions.AsEnumerable(Of BasicTripleContext)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.BasicTripleContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.BasicTripleContext.#ctor*
  commentId: Overload:VDS.RDF.BasicTripleContext.#ctor
  name: BasicTripleContext
  nameWithType: BasicTripleContext.BasicTripleContext
  fullName: VDS.RDF.BasicTripleContext.BasicTripleContext
- uid: VDS.RDF.BasicTripleContext.HasProperty*
  commentId: Overload:VDS.RDF.BasicTripleContext.HasProperty
  name: HasProperty
  nameWithType: BasicTripleContext.HasProperty
  fullName: VDS.RDF.BasicTripleContext.HasProperty
- uid: VDS.RDF.ITripleContext.HasProperty(System.String)
  commentId: M:VDS.RDF.ITripleContext.HasProperty(System.String)
  parent: VDS.RDF.ITripleContext
  isExternal: true
  name: HasProperty(String)
  nameWithType: ITripleContext.HasProperty(String)
  fullName: VDS.RDF.ITripleContext.HasProperty(System.String)
  spec.csharp:
  - uid: VDS.RDF.ITripleContext.HasProperty(System.String)
    name: HasProperty
    nameWithType: ITripleContext.HasProperty
    fullName: VDS.RDF.ITripleContext.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.ITripleContext.HasProperty(System.String)
    name: HasProperty
    nameWithType: ITripleContext.HasProperty
    fullName: VDS.RDF.ITripleContext.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.BasicTripleContext.Item*
  commentId: Overload:VDS.RDF.BasicTripleContext.Item
  name: Item
  nameWithType: BasicTripleContext.Item
  fullName: VDS.RDF.BasicTripleContext.Item
- uid: VDS.RDF.ITripleContext.Item(System.String)
  commentId: P:VDS.RDF.ITripleContext.Item(System.String)
  parent: VDS.RDF.ITripleContext
  isExternal: true
  name: Item[String]
  nameWithType: ITripleContext.Item[String]
  fullName: VDS.RDF.ITripleContext.Item[System.String]
  nameWithType.vb: ITripleContext.Item(String)
  fullName.vb: VDS.RDF.ITripleContext.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: VDS.RDF.ITripleContext.Item(System.String)
    name: Item
    nameWithType: ITripleContext.Item
    fullName: VDS.RDF.ITripleContext.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: VDS.RDF.ITripleContext.Item(System.String)
    name: Item
    nameWithType: ITripleContext.Item
    fullName: VDS.RDF.ITripleContext.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
