### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph
  commentId: T:VDS.RDF.Query.Spin.SpinWrappedGraph
  id: SpinWrappedGraph
  parent: VDS.RDF.Query.Spin
  children:
  - VDS.RDF.Query.Spin.SpinWrappedGraph.AllNodes
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Assert(VDS.RDF.Triple)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.BaseUri
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Changed
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Clear
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Cleared
  - VDS.RDF.Query.Spin.SpinWrappedGraph.ClearRequested
  - VDS.RDF.Query.Spin.SpinWrappedGraph.ContainsTriple(VDS.RDF.Triple)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode
  - VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode(System.String)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode
  - VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode(System.String)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode(System.String,System.String)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode(System.String,System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode
  - VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode(System.String)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.CreateVariableNode(System.String)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Difference(VDS.RDF.IGraph)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Dispose
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetBlankNode(System.String)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode(System.String)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode(System.String,System.String)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode(System.String,System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetNextBlankNodeID
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetSchema
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples(VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject(VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject(VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode(System.String)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode(System.Uri)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph(VDS.RDF.IGraph)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.IsEmpty
  - VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf(VDS.RDF.IGraph)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Merge(VDS.RDF.IGraph)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Merged
  - VDS.RDF.Query.Spin.SpinWrappedGraph.MergeRequested
  - VDS.RDF.Query.Spin.SpinWrappedGraph.NamespaceMap
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Nodes
  - VDS.RDF.Query.Spin.SpinWrappedGraph.RaiseTripleEvent(VDS.RDF.Triple,System.Boolean)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.ReadXml(System.Xml.XmlReader)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.ResolveQName(System.String)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Retract(VDS.RDF.Triple)
  - VDS.RDF.Query.Spin.SpinWrappedGraph.TripleAsserted
  - VDS.RDF.Query.Spin.SpinWrappedGraph.TripleRetracted
  - VDS.RDF.Query.Spin.SpinWrappedGraph.Triples
  - VDS.RDF.Query.Spin.SpinWrappedGraph.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: SpinWrappedGraph
  nameWithType: SpinWrappedGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SpinWrappedGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 40
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nA simple IGraph implementation that only tracks triple removal and additions\n"
  example: []
  syntax:
    content: 'public class SpinWrappedGraph : IGraph, INodeFactory, IDisposable, IXmlSerializable'
    content.vb: >-
      Public Class SpinWrappedGraph
          Implements IGraph, INodeFactory, IDisposable, IXmlSerializable
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.IGraph
  - VDS.RDF.INodeFactory
  - System.IDisposable
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.IGraph.VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - VDS.RDF.Query.Spin.SpinWrappedGraph.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.RaiseTripleEvent(VDS.RDF.Triple,System.Boolean)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.RaiseTripleEvent(VDS.RDF.Triple,System.Boolean)
  id: RaiseTripleEvent(VDS.RDF.Triple,System.Boolean)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: RaiseTripleEvent(Triple, Boolean)
  nameWithType: SpinWrappedGraph.RaiseTripleEvent(Triple, Boolean)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.RaiseTripleEvent(VDS.RDF.Triple, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleEvent
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 57
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nHelper method for raising the triple events manually\n"
  example: []
  syntax:
    content: protected void RaiseTripleEvent(Triple t, bool asserted)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple
    - id: asserted
      type: System.Boolean
      description: True to raise TripleAsserted, false to raise TripleRetracted
    content.vb: Protected Sub RaiseTripleEvent(t As Triple, asserted As Boolean)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.RaiseTripleEvent*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Assert(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.Assert(VDS.RDF.Triple)
  id: Assert(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Assert(Triple)
  nameWithType: SpinWrappedGraph.Assert(Triple)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Assert(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Assert
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 86
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nAsserts a Triple in the Graph.\n"
  example: []
  syntax:
    content: public bool Assert(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: A Triple.
    return:
      type: System.Boolean
    content.vb: Public Function Assert(t As Triple) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.Assert*
  implements:
  - VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Retract(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.Retract(VDS.RDF.Triple)
  id: Retract(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Retract(Triple)
  nameWithType: SpinWrappedGraph.Retract(Triple)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Retract(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Retract
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 97
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nRetracts a Triple from the Graph.\n"
  example: []
  syntax:
    content: public bool Retract(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: A Triple.
    return:
      type: System.Boolean
    content.vb: Public Function Retract(t As Triple) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.Retract*
  implements:
  - VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  id: Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Assert(IEnumerable<Triple>)
  nameWithType: SpinWrappedGraph.Assert(IEnumerable<Triple>)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Assert(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Assert
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 110
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nAsserts an Enumerable of Triples in the Graph.\n"
  example: []
  syntax:
    content: public bool Assert(IEnumerable<Triple> ts)
    parameters:
    - id: ts
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: An Enumerable of Triples.
    return:
      type: System.Boolean
    content.vb: Public Function Assert(ts As IEnumerable(Of Triple)) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.Assert*
  implements:
  - VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  nameWithType.vb: SpinWrappedGraph.Assert(IEnumerable(Of Triple))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Spin.SpinWrappedGraph.Assert(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Assert(IEnumerable(Of Triple))
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  id: Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Retract(IEnumerable<Triple>)
  nameWithType: SpinWrappedGraph.Retract(IEnumerable<Triple>)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Retract(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Retract
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 121
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nRetracts an Enumerable of Triples from the Graph.\n"
  example: []
  syntax:
    content: public bool Retract(IEnumerable<Triple> ts)
    parameters:
    - id: ts
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Enumerable of Triples.
    return:
      type: System.Boolean
    content.vb: Public Function Retract(ts As IEnumerable(Of Triple)) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.Retract*
  implements:
  - VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  nameWithType.vb: SpinWrappedGraph.Retract(IEnumerable(Of Triple))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Spin.SpinWrappedGraph.Retract(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Retract(IEnumerable(Of Triple))
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Clear
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.Clear
  id: Clear
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: SpinWrappedGraph.Clear()
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Clear()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Clear
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 132
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nRetracts all Triples from the Graph.\n"
  remarks: "\n<p>\nThe Graph should raise the <xref href=\"VDS.RDF.IGraph.ClearRequested\" data-throw-if-not-resolved=\"false\"></xref> event at the start of the Clear operation and abort the operation if the operation is cancelled by an event handler.  On completing the Clear the <xref href=\"VDS.RDF.IGraph.Cleared\" data-throw-if-not-resolved=\"false\"></xref> event should be raised.\n</p>\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.Clear*
  implements:
  - VDS.RDF.IGraph.Clear
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.BaseUri
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedGraph.BaseUri
  id: BaseUri
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: SpinWrappedGraph.BaseUri
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.BaseUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseUri
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 143
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets/Sets the Base Uri for the Graph.\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property BaseUri As Uri
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.BaseUri*
  implements:
  - VDS.RDF.IGraph.BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Dispose
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.Dispose
  id: Dispose
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SpinWrappedGraph.Dispose()
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Dispose()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dispose
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 146
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.IsEmpty
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedGraph.IsEmpty
  id: IsEmpty
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: SpinWrappedGraph.IsEmpty
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.IsEmpty
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsEmpty
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 156
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets whether a Graph is Empty.\n"
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.IsEmpty*
  implements:
  - VDS.RDF.IGraph.IsEmpty
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.NamespaceMap
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedGraph.NamespaceMap
  id: NamespaceMap
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: NamespaceMap
  nameWithType: SpinWrappedGraph.NamespaceMap
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.NamespaceMap
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NamespaceMap
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 159
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets the Namespace Map for the Graph.\n"
  example: []
  syntax:
    content: public INamespaceMapper NamespaceMap { get; }
    parameters: []
    return:
      type: VDS.RDF.INamespaceMapper
    content.vb: Public ReadOnly Property NamespaceMap As INamespaceMapper
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.NamespaceMap*
  implements:
  - VDS.RDF.IGraph.NamespaceMap
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Nodes
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedGraph.Nodes
  id: Nodes
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Nodes
  nameWithType: SpinWrappedGraph.Nodes
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Nodes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Nodes
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 162
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets the unique Subject and Object nodes of the Graph.\n"
  remarks: This property returns only nodes that appear in the Subject or Object position in triples. To retrieve a list of all INode instances in a graph including those in Predicate position in a triple, use the <xref href="VDS.RDF.IGraph.AllNodes" data-throw-if-not-resolved="false"></xref> property.
  example: []
  syntax:
    content: public IEnumerable<INode> Nodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public ReadOnly Property Nodes As IEnumerable(Of INode)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.Nodes*
  implements:
  - VDS.RDF.IGraph.Nodes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.AllNodes
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedGraph.AllNodes
  id: AllNodes
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: AllNodes
  nameWithType: SpinWrappedGraph.AllNodes
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.AllNodes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AllNodes
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 165
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets the unique Subject, Predicate and Object nodes of the Graph.\n"
  example: []
  syntax:
    content: public IEnumerable<INode> AllNodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public ReadOnly Property AllNodes As IEnumerable(Of INode)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.AllNodes*
  implements:
  - VDS.RDF.IGraph.AllNodes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Triples
  commentId: P:VDS.RDF.Query.Spin.SpinWrappedGraph.Triples
  id: Triples
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Triples
  nameWithType: SpinWrappedGraph.Triples
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Triples
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Triples
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 168
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets the Triple Collection for the Graph.\n"
  example: []
  syntax:
    content: public BaseTripleCollection Triples { get; }
    parameters: []
    return:
      type: VDS.RDF.BaseTripleCollection
    content.vb: Public ReadOnly Property Triples As BaseTripleCollection
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.Triples*
  implements:
  - VDS.RDF.IGraph.Triples
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode
  id: CreateUriNode
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: CreateUriNode()
  nameWithType: SpinWrappedGraph.CreateUriNode()
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 172
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCreates a URI Node that corresponds to the Base URI of the Graph.\n"
  example: []
  syntax:
    content: public IUriNode CreateUriNode()
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Function CreateUriNode As IUriNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode*
  implements:
  - VDS.RDF.IGraph.CreateUriNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode(System.String)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode(System.String)
  id: CreateUriNode(System.String)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: CreateUriNode(String)
  nameWithType: SpinWrappedGraph.CreateUriNode(String)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 178
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCreates a URI Node for the given QName using the Graphs NamespaceMap to resolve the QName.\n"
  example: []
  syntax:
    content: public IUriNode CreateUriNode(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName.
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Function CreateUriNode(qname As String) As IUriNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode*
  implements:
  - VDS.RDF.IGraph.CreateUriNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetBlankNode(System.String)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetBlankNode(System.String)
  id: GetBlankNode(System.String)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetBlankNode(String)
  nameWithType: SpinWrappedGraph.GetBlankNode(String)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetBlankNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetBlankNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 184
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects the Blank Node with the given ID if it exists in the Graph, returns null otherwise.\n"
  example: []
  syntax:
    content: public IBlankNode GetBlankNode(string nodeId)
    parameters:
    - id: nodeId
      type: System.String
      description: Node ID.
    return:
      type: VDS.RDF.IBlankNode
      description: The Node if it exists in the Graph or null.
    content.vb: Public Function GetBlankNode(nodeId As String) As IBlankNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetBlankNode*
  implements:
  - VDS.RDF.IGraph.GetBlankNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode(System.String,System.String)
  id: GetLiteralNode(System.String,System.String)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetLiteralNode(String, String)
  nameWithType: SpinWrappedGraph.GetLiteralNode(String, String)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetLiteralNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 190
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects the Literal Node with the given Value and Language if it exists in the Graph, returns null otherwise.\n"
  example: []
  syntax:
    content: public ILiteralNode GetLiteralNode(string literal, string langspec)
    parameters:
    - id: literal
      type: System.String
      description: Value of the Literal.
    - id: langspec
      type: System.String
      description: Language Specifier of the Literal.
    return:
      type: VDS.RDF.ILiteralNode
      description: The Node if it exists in the Graph or null.
    content.vb: Public Function GetLiteralNode(literal As String, langspec As String) As ILiteralNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode*
  implements:
  - VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode(System.String)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode(System.String)
  id: GetLiteralNode(System.String)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetLiteralNode(String)
  nameWithType: SpinWrappedGraph.GetLiteralNode(String)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetLiteralNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 196
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects the Literal Node with the given Value if it exists in the Graph, returns null otherwise.\n"
  example: []
  syntax:
    content: public ILiteralNode GetLiteralNode(string literal)
    parameters:
    - id: literal
      type: System.String
      description: Value of the Literal.
    return:
      type: VDS.RDF.ILiteralNode
      description: The Node if it exists in the Graph or null.
    content.vb: Public Function GetLiteralNode(literal As String) As ILiteralNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode*
  implements:
  - VDS.RDF.IGraph.GetLiteralNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode(System.String,System.Uri)
  id: GetLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetLiteralNode(String, Uri)
  nameWithType: SpinWrappedGraph.GetLiteralNode(String, Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetLiteralNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 202
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects the Literal Node with the given Value and DataType if it exists in the Graph, returns otherwise.\n"
  example: []
  syntax:
    content: public ILiteralNode GetLiteralNode(string literal, Uri datatype)
    parameters:
    - id: literal
      type: System.String
      description: Value of the Literal.
    - id: datatype
      type: System.Uri
      description: Data Type of the Literal.
    return:
      type: VDS.RDF.ILiteralNode
      description: The Node if it exists in the Graph or null.
    content.vb: Public Function GetLiteralNode(literal As String, datatype As Uri) As ILiteralNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode*
  implements:
  - VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples(System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples(System.Uri)
  id: GetTriples(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetTriples(Uri)
  nameWithType: SpinWrappedGraph.GetTriples(Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 208
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects all Triples which have a Uri Node with the given Uri.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriples(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: Uri.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriples(uri As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples*
  implements:
  - VDS.RDF.IGraph.GetTriples(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples(VDS.RDF.INode)
  id: GetTriples(VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetTriples(INode)
  nameWithType: SpinWrappedGraph.GetTriples(INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 214
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects all Triples which contain the given Node.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriples(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriples(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples*
  implements:
  - VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject(System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject(System.Uri)
  id: GetTriplesWithObject(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(Uri)
  nameWithType: SpinWrappedGraph.GetTriplesWithObject(Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 220
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects all Triples where the Object is a Uri Node with the given Uri.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithObject(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: Uri.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithObject(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject(VDS.RDF.INode)
  id: GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(INode)
  nameWithType: SpinWrappedGraph.GetTriplesWithObject(INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 226
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects all Triples where the Object is a given Node.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithObject(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithObject(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  id: GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(INode)
  nameWithType: SpinWrappedGraph.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 232
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects all Triples where the Predicate is a given Node.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicate(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicate(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate(System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate(System.Uri)
  id: GetTriplesWithPredicate(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(Uri)
  nameWithType: SpinWrappedGraph.GetTriplesWithPredicate(Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 238
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects all Triples where the Predicate is a Uri Node with the given Uri.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicate(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: Uri.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicate(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject(VDS.RDF.INode)
  id: GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(INode)
  nameWithType: SpinWrappedGraph.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 244
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects all Triples where the Subject is a given Node.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubject(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubject(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject(System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject(System.Uri)
  id: GetTriplesWithSubject(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(Uri)
  nameWithType: SpinWrappedGraph.GetTriplesWithSubject(Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 250
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects all Triples where the Subject is a Uri Node with the given Uri.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubject(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: Uri.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubject(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: SpinWrappedGraph.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectPredicate
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 256
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects all Triples with the given Subject and Predicate.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubjectPredicate(INode subj, INode pred)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubjectPredicate(subj As INode, pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectPredicate*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: SpinWrappedGraph.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectObject
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 262
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects all Triples with the given Subject and Object.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubjectObject(INode subj, INode obj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubjectObject(subj As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: SpinWrappedGraph.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicateObject
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 268
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects all Triples with the given Predicate and Object.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicateObject(INode pred, INode obj)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicateObject(pred As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicateObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode(System.String)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode(System.String)
  id: GetUriNode(System.String)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetUriNode(String)
  nameWithType: SpinWrappedGraph.GetUriNode(String)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetUriNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 274
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects the Uri Node with the given QName if it exists in the Graph, returns null otherwise.\n"
  example: []
  syntax:
    content: public IUriNode GetUriNode(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName.
    return:
      type: VDS.RDF.IUriNode
      description: The Node if it exists in the Graph or null.
    content.vb: Public Function GetUriNode(qname As String) As IUriNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode*
  implements:
  - VDS.RDF.IGraph.GetUriNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode(System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode(System.Uri)
  id: GetUriNode(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetUriNode(Uri)
  nameWithType: SpinWrappedGraph.GetUriNode(Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetUriNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 280
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nSelects the Uri Node with the given Uri if it exists in the Graph, returns null otherwise.\n"
  example: []
  syntax:
    content: public IUriNode GetUriNode(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: Uri.
    return:
      type: VDS.RDF.IUriNode
      description: The Node if it exists in the Graph or null.
    content.vb: Public Function GetUriNode(uri As Uri) As IUriNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode*
  implements:
  - VDS.RDF.IGraph.GetUriNode(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.ContainsTriple(VDS.RDF.Triple)
  id: ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: ContainsTriple(Triple)
  nameWithType: SpinWrappedGraph.ContainsTriple(Triple)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.ContainsTriple(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ContainsTriple
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 286
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nGets whether a given Triple is in this Graph.\n"
  example: []
  syntax:
    content: public bool ContainsTriple(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ContainsTriple(t As Triple) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.ContainsTriple*
  implements:
  - VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Merge(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.Merge(VDS.RDF.IGraph)
  id: Merge(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Merge(IGraph)
  nameWithType: SpinWrappedGraph.Merge(IGraph)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Merge(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merge
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 292
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nMerges the given Graph into this Graph.\n"
  remarks: "\n<p>\nThe Graph should raise the <xref href=\"VDS.RDF.IGraph.MergeRequested\" data-throw-if-not-resolved=\"false\"></xref> event at the start of the Merge operation and abort the operation if the operation is cancelled by an event handler.  On completing the Merge the <xref href=\"VDS.RDF.IGraph.Merged\" data-throw-if-not-resolved=\"false\"></xref> event should be raised.\n</p>\n"
  example: []
  syntax:
    content: public void Merge(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to merge.
    content.vb: Public Sub Merge(g As IGraph)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.Merge*
  implements:
  - VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  id: Merge(VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Merge(IGraph, Boolean)
  nameWithType: SpinWrappedGraph.Merge(IGraph, Boolean)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Merge(VDS.RDF.IGraph, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merge
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 298
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nMerges the given Graph into this Graph.\n"
  remarks: "\n<p>\nThe Graph should raise the <xref href=\"VDS.RDF.IGraph.MergeRequested\" data-throw-if-not-resolved=\"false\"></xref> event at the start of the Merge operation and abort the operation if the operation is cancelled by an event handler.  On completing the Merge the <xref href=\"VDS.RDF.IGraph.Merged\" data-throw-if-not-resolved=\"false\"></xref> event should be raised.\n</p>\n"
  example: []
  syntax:
    content: public void Merge(IGraph g, bool keepOriginalGraphUri)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to merge.
    - id: keepOriginalGraphUri
      type: System.Boolean
      description: Indicates that the Merge should preserve the Graph URIs of Nodes.
    content.vb: Public Sub Merge(g As IGraph, keepOriginalGraphUri As Boolean)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.Merge*
  implements:
  - VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  id: Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Equals(IGraph, out Dictionary<INode, INode>)
  nameWithType: SpinWrappedGraph.Equals(IGraph, out Dictionary<INode, INode>)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Equals(VDS.RDF.IGraph, out System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 304
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nChecks whether a Graph is equal to another Graph and if so returns the mapping of Blank Nodes.\n"
  example: []
  syntax:
    content: public bool Equals(IGraph g, out Dictionary<INode, INode> mapping)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to compare with.
    - id: mapping
      type: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
      description: Mapping of Blank Nodes.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Equals(g As IGraph, ByRef mapping As Dictionary(Of INode, INode)) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.Equals*
  implements:
  - VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  nameWithType.vb: SpinWrappedGraph.Equals(IGraph, ByRef Dictionary(Of INode, INode))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Spin.SpinWrappedGraph.Equals(VDS.RDF.IGraph, ByRef System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: Equals(IGraph, ByRef Dictionary(Of INode, INode))
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf(VDS.RDF.IGraph)
  id: IsSubGraphOf(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: IsSubGraphOf(IGraph)
  nameWithType: SpinWrappedGraph.IsSubGraphOf(IGraph)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSubGraphOf
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 310
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nChecks whether this Graph is a sub-graph of the given Graph.\n"
  example: []
  syntax:
    content: public bool IsSubGraphOf(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsSubGraphOf(g As IGraph) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf*
  implements:
  - VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  id: IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: IsSubGraphOf(IGraph, out Dictionary<INode, INode>)
  nameWithType: SpinWrappedGraph.IsSubGraphOf(IGraph, out Dictionary<INode, INode>)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf(VDS.RDF.IGraph, out System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSubGraphOf
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 316
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nChecks whether this Graph is a sub-graph of the given Graph.\n"
  example: []
  syntax:
    content: public bool IsSubGraphOf(IGraph g, out Dictionary<INode, INode> mapping)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: mapping
      type: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
      description: Mapping of Blank Nodes.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsSubGraphOf(g As IGraph, ByRef mapping As Dictionary(Of INode, INode)) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf*
  implements:
  - VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  nameWithType.vb: SpinWrappedGraph.IsSubGraphOf(IGraph, ByRef Dictionary(Of INode, INode))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf(VDS.RDF.IGraph, ByRef System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: IsSubGraphOf(IGraph, ByRef Dictionary(Of INode, INode))
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph(VDS.RDF.IGraph)
  id: HasSubGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: HasSubGraph(IGraph)
  nameWithType: SpinWrappedGraph.HasSubGraph(IGraph)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasSubGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 322
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nChecks whether this Graph has the given Graph as a sub-graph.\n"
  example: []
  syntax:
    content: public bool HasSubGraph(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasSubGraph(g As IGraph) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph*
  implements:
  - VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  id: HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: HasSubGraph(IGraph, out Dictionary<INode, INode>)
  nameWithType: SpinWrappedGraph.HasSubGraph(IGraph, out Dictionary<INode, INode>)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph(VDS.RDF.IGraph, out System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasSubGraph
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 328
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nChecks whether this Graph has the given Graph as a sub-graph.\n"
  example: []
  syntax:
    content: public bool HasSubGraph(IGraph g, out Dictionary<INode, INode> mapping)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: mapping
      type: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
      description: Mapping of Blank Nodes.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasSubGraph(g As IGraph, ByRef mapping As Dictionary(Of INode, INode)) As Boolean
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph*
  implements:
  - VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  nameWithType.vb: SpinWrappedGraph.HasSubGraph(IGraph, ByRef Dictionary(Of INode, INode))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph(VDS.RDF.IGraph, ByRef System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: HasSubGraph(IGraph, ByRef Dictionary(Of INode, INode))
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Difference(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.Difference(VDS.RDF.IGraph)
  id: Difference(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Difference(IGraph)
  nameWithType: SpinWrappedGraph.Difference(IGraph)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Difference(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Difference
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 334
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCalculates the difference between this Graph and the given Graph.\n"
  remarks: "\n<p>\nProduces a report which shows the changes that must be made to this Graph to produce the given Graph.\n</p>\n"
  example: []
  syntax:
    content: public GraphDiffReport Difference(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: VDS.RDF.GraphDiffReport
      description: ''
    content.vb: Public Function Difference(g As IGraph) As GraphDiffReport
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.Difference*
  implements:
  - VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.ResolveQName(System.String)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.ResolveQName(System.String)
  id: ResolveQName(System.String)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: ResolveQName(String)
  nameWithType: SpinWrappedGraph.ResolveQName(String)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.ResolveQName(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResolveQName
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 340
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nResolves a QName into a URI using the Namespace Map and Base URI of this Graph.\n"
  example: []
  syntax:
    content: public Uri ResolveQName(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName.
    return:
      type: System.Uri
      description: ''
    content.vb: Public Function ResolveQName(qname As String) As Uri
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.ResolveQName*
  implements:
  - VDS.RDF.IGraph.ResolveQName(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.TripleAsserted
  commentId: E:VDS.RDF.Query.Spin.SpinWrappedGraph.TripleAsserted
  id: TripleAsserted
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: TripleAsserted
  nameWithType: SpinWrappedGraph.TripleAsserted
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.TripleAsserted
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TripleAsserted
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 346
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nEvent which is raised when a Triple is asserted in the Graph\n"
  remarks: "\nWhenever this event is raised the <xref href=\"VDS.RDF.IGraph.Changed\" data-throw-if-not-resolved=\"false\"></xref> event should also be raised\n"
  example: []
  syntax:
    content: public event TripleEventHandler TripleAsserted
    return:
      type: VDS.RDF.TripleEventHandler
    content.vb: Public Event TripleAsserted As TripleEventHandler
  implements:
  - VDS.RDF.IGraph.TripleAsserted
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.TripleRetracted
  commentId: E:VDS.RDF.Query.Spin.SpinWrappedGraph.TripleRetracted
  id: TripleRetracted
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: TripleRetracted
  nameWithType: SpinWrappedGraph.TripleRetracted
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.TripleRetracted
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TripleRetracted
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 349
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nEvent which is raised when a Triple is retracted from the Graph\n"
  remarks: "\nWhenever this event is raised the <xref href=\"VDS.RDF.IGraph.Changed\" data-throw-if-not-resolved=\"false\"></xref> event should also be raised\n"
  example: []
  syntax:
    content: public event TripleEventHandler TripleRetracted
    return:
      type: VDS.RDF.TripleEventHandler
    content.vb: Public Event TripleRetracted As TripleEventHandler
  implements:
  - VDS.RDF.IGraph.TripleRetracted
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Changed
  commentId: E:VDS.RDF.Query.Spin.SpinWrappedGraph.Changed
  id: Changed
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Changed
  nameWithType: SpinWrappedGraph.Changed
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Changed
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Changed
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 352
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nEvent which is raised when the Graph contents change\n"
  example: []
  syntax:
    content: public event GraphEventHandler Changed
    return:
      type: VDS.RDF.GraphEventHandler
    content.vb: Public Event Changed As GraphEventHandler
  implements:
  - VDS.RDF.IGraph.Changed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.ClearRequested
  commentId: E:VDS.RDF.Query.Spin.SpinWrappedGraph.ClearRequested
  id: ClearRequested
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: ClearRequested
  nameWithType: SpinWrappedGraph.ClearRequested
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.ClearRequested
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ClearRequested
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 355
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nEvent which is raised just before the Graph is cleared of its contents\n"
  example: []
  syntax:
    content: public event CancellableGraphEventHandler ClearRequested
    return:
      type: VDS.RDF.CancellableGraphEventHandler
    content.vb: Public Event ClearRequested As CancellableGraphEventHandler
  implements:
  - VDS.RDF.IGraph.ClearRequested
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Cleared
  commentId: E:VDS.RDF.Query.Spin.SpinWrappedGraph.Cleared
  id: Cleared
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Cleared
  nameWithType: SpinWrappedGraph.Cleared
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Cleared
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Cleared
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 358
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nEvent which is raised after the Graph is cleared of its contents\n"
  example: []
  syntax:
    content: public event GraphEventHandler Cleared
    return:
      type: VDS.RDF.GraphEventHandler
    content.vb: Public Event Cleared As GraphEventHandler
  implements:
  - VDS.RDF.IGraph.Cleared
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.MergeRequested
  commentId: E:VDS.RDF.Query.Spin.SpinWrappedGraph.MergeRequested
  id: MergeRequested
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: MergeRequested
  nameWithType: SpinWrappedGraph.MergeRequested
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.MergeRequested
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MergeRequested
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 361
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nEvent which is raised just before a Merge operation begins on the Graph\n"
  example: []
  syntax:
    content: public event CancellableGraphEventHandler MergeRequested
    return:
      type: VDS.RDF.CancellableGraphEventHandler
    content.vb: Public Event MergeRequested As CancellableGraphEventHandler
  implements:
  - VDS.RDF.IGraph.MergeRequested
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Merged
  commentId: E:VDS.RDF.Query.Spin.SpinWrappedGraph.Merged
  id: Merged
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: Merged
  nameWithType: SpinWrappedGraph.Merged
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Merged
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merged
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 364
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nEvent which is raised when a Merge operation is completed on the Graph\n"
  example: []
  syntax:
    content: public event GraphEventHandler Merged
    return:
      type: VDS.RDF.GraphEventHandler
    content.vb: Public Event Merged As GraphEventHandler
  implements:
  - VDS.RDF.IGraph.Merged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode
  id: CreateBlankNode
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: CreateBlankNode()
  nameWithType: SpinWrappedGraph.CreateBlankNode()
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlankNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 367
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCreates a Blank Node with a new automatically generated ID.\n"
  example: []
  syntax:
    content: public IBlankNode CreateBlankNode()
    return:
      type: VDS.RDF.IBlankNode
      description: ''
    content.vb: Public Function CreateBlankNode As IBlankNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode*
  implements:
  - VDS.RDF.INodeFactory.CreateBlankNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode(System.String)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode(System.String)
  id: CreateBlankNode(System.String)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: CreateBlankNode(String)
  nameWithType: SpinWrappedGraph.CreateBlankNode(String)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlankNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 373
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCreates a Blank Node with the given Node ID.\n"
  example: []
  syntax:
    content: public IBlankNode CreateBlankNode(string nodeId)
    parameters:
    - id: nodeId
      type: System.String
      description: Node ID.
    return:
      type: VDS.RDF.IBlankNode
      description: ''
    content.vb: Public Function CreateBlankNode(nodeId As String) As IBlankNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode*
  implements:
  - VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode
  id: CreateGraphLiteralNode
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: CreateGraphLiteralNode()
  nameWithType: SpinWrappedGraph.CreateGraphLiteralNode()
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateGraphLiteralNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 379
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCreates a Graph Literal Node which represents the empty Subgraph.\n"
  example: []
  syntax:
    content: public IGraphLiteralNode CreateGraphLiteralNode()
    return:
      type: VDS.RDF.IGraphLiteralNode
      description: ''
    content.vb: Public Function CreateGraphLiteralNode As IGraphLiteralNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateGraphLiteralNode
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  id: CreateGraphLiteralNode(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: CreateGraphLiteralNode(IGraph)
  nameWithType: SpinWrappedGraph.CreateGraphLiteralNode(IGraph)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateGraphLiteralNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 385
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCreates a Graph Literal Node which represents the given Subgraph.\n"
  example: []
  syntax:
    content: public IGraphLiteralNode CreateGraphLiteralNode(IGraph subgraph)
    parameters:
    - id: subgraph
      type: VDS.RDF.IGraph
      description: Subgraph.
    return:
      type: VDS.RDF.IGraphLiteralNode
      description: ''
    content.vb: Public Function CreateGraphLiteralNode(subgraph As IGraph) As IGraphLiteralNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode(System.String,System.Uri)
  id: CreateLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String, Uri)
  nameWithType: SpinWrappedGraph.CreateLiteralNode(String, Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 391
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCreates a Literal Node with the given Value and Data Type.\n"
  example: []
  syntax:
    content: public ILiteralNode CreateLiteralNode(string literal, Uri datatype)
    parameters:
    - id: literal
      type: System.String
      description: Value of the Literal.
    - id: datatype
      type: System.Uri
      description: Data Type URI of the Literal.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Function CreateLiteralNode(literal As String, datatype As Uri) As ILiteralNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode(System.String)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode(System.String)
  id: CreateLiteralNode(System.String)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String)
  nameWithType: SpinWrappedGraph.CreateLiteralNode(String)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 397
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCreates a Literal Node with the given Value.\n"
  example: []
  syntax:
    content: public ILiteralNode CreateLiteralNode(string literal)
    parameters:
    - id: literal
      type: System.String
      description: Value of the Literal.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Function CreateLiteralNode(literal As String) As ILiteralNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode(System.String,System.String)
  id: CreateLiteralNode(System.String,System.String)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String, String)
  nameWithType: SpinWrappedGraph.CreateLiteralNode(String, String)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 403
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCreates a Literal Node with the given Value and Language.\n"
  example: []
  syntax:
    content: public ILiteralNode CreateLiteralNode(string literal, string langspec)
    parameters:
    - id: literal
      type: System.String
      description: Value of the Literal.
    - id: langspec
      type: System.String
      description: Language Specifier for the Literal.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Function CreateLiteralNode(literal As String, langspec As String) As ILiteralNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode(System.Uri)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode(System.Uri)
  id: CreateUriNode(System.Uri)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: CreateUriNode(Uri)
  nameWithType: SpinWrappedGraph.CreateUriNode(Uri)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 409
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCreates a URI Node for the given URI.\n"
  example: []
  syntax:
    content: public IUriNode CreateUriNode(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: URI.
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Function CreateUriNode(uri As Uri) As IUriNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode*
  implements:
  - VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateVariableNode(System.String)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateVariableNode(System.String)
  id: CreateVariableNode(System.String)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: CreateVariableNode(String)
  nameWithType: SpinWrappedGraph.CreateVariableNode(String)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateVariableNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateVariableNode
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 415
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCreates a Variable Node for the given Variable Name.\n"
  example: []
  syntax:
    content: public IVariableNode CreateVariableNode(string varname)
    parameters:
    - id: varname
      type: System.String
      description: ''
    return:
      type: VDS.RDF.IVariableNode
      description: ''
    content.vb: Public Function CreateVariableNode(varname As String) As IVariableNode
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateVariableNode*
  implements:
  - VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetNextBlankNodeID
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetNextBlankNodeID
  id: GetNextBlankNodeID
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetNextBlankNodeID()
  nameWithType: SpinWrappedGraph.GetNextBlankNodeID()
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetNextBlankNodeID()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetNextBlankNodeID
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 421
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  summary: "\nCreates a new unused Blank Node ID and returns it.\n"
  example: []
  syntax:
    content: public string GetNextBlankNodeID()
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetNextBlankNodeID As String
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetNextBlankNodeID*
  implements:
  - VDS.RDF.INodeFactory.GetNextBlankNodeID
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetSchema
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.GetSchema
  id: GetSchema
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: SpinWrappedGraph.GetSchema()
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetSchema()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSchema
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 427
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  example: []
  syntax:
    content: public XmlSchema GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
    content.vb: Public Function GetSchema As XmlSchema
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: SpinWrappedGraph.ReadXml(XmlReader)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ReadXml
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 433
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  example: []
  syntax:
    content: public void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
    content.vb: Public Sub ReadXml(reader As XmlReader)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.Query.Spin.SpinWrappedGraph.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.Query.Spin.SpinWrappedGraph
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: SpinWrappedGraph.WriteXml(XmlWriter)
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WriteXml
    path: Libraries/dotNetRDF.Query.Spin/SpinWrappedGraph.cs
    startLine: 439
  assemblies:
  - dotNetRDF.Query.Spin
  namespace: VDS.RDF.Query.Spin
  example: []
  syntax:
    content: public void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
    content.vb: Public Sub WriteXml(writer As XmlWriter)
  overload: VDS.RDF.Query.Spin.SpinWrappedGraph.WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Spin
  commentId: N:VDS.RDF.Query.Spin
  name: VDS.RDF.Query.Spin
  nameWithType: VDS.RDF.Query.Spin
  fullName: VDS.RDF.Query.Spin
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.INodeFactory
  commentId: T:VDS.RDF.INodeFactory
  parent: VDS.RDF
  name: INodeFactory
  nameWithType: INodeFactory
  fullName: VDS.RDF.INodeFactory
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  commentId: M:VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  parent: VDS.RDF.Data.DataTables.GraphExtensions
  definition: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  name: ToDataTable()
  nameWithType: GraphExtensions.ToDataTable()
  fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable()
  spec.csharp:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SpinWrappedGraph>()
  nameWithType: Extensions.AsEnumerable<SpinWrappedGraph>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Spin.SpinWrappedGraph>()
  nameWithType.vb: Extensions.AsEnumerable(Of SpinWrappedGraph)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Spin.SpinWrappedGraph)()
  name.vb: AsEnumerable(Of SpinWrappedGraph)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SpinWrappedGraph>
    nameWithType: Extensions.AsEnumerable<SpinWrappedGraph>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Spin.SpinWrappedGraph>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SpinWrappedGraph)
    nameWithType: Extensions.AsEnumerable(Of SpinWrappedGraph)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Spin.SpinWrappedGraph)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  name: ToDataTable(IGraph)
  nameWithType: GraphExtensions.ToDataTable(IGraph)
  fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Data.DataTables.GraphExtensions
  commentId: T:VDS.RDF.Data.DataTables.GraphExtensions
  parent: VDS.RDF.Data.DataTables
  name: GraphExtensions
  nameWithType: GraphExtensions
  fullName: VDS.RDF.Data.DataTables.GraphExtensions
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Data.DataTables
  commentId: N:VDS.RDF.Data.DataTables
  name: VDS.RDF.Data.DataTables
  nameWithType: VDS.RDF.Data.DataTables
  fullName: VDS.RDF.Data.DataTables
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.RaiseTripleEvent*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.RaiseTripleEvent
  name: RaiseTripleEvent
  nameWithType: SpinWrappedGraph.RaiseTripleEvent
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.RaiseTripleEvent
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Assert*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.Assert
  name: Assert
  nameWithType: SpinWrappedGraph.Assert
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Assert
- uid: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  parent: VDS.RDF.IGraph
  name: Assert(Triple)
  nameWithType: IGraph.Assert(Triple)
  fullName: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Retract*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.Retract
  name: Retract
  nameWithType: SpinWrappedGraph.Retract
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Retract
- uid: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  parent: VDS.RDF.IGraph
  name: Retract(Triple)
  nameWithType: IGraph.Retract(Triple)
  fullName: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Assert(IEnumerable<Triple>)
  nameWithType: IGraph.Assert(IEnumerable<Triple>)
  fullName: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: IGraph.Assert(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Assert(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Triple>
  nameWithType: IEnumerable<Triple>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Triple>
  nameWithType.vb: IEnumerable(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple)
  name.vb: IEnumerable(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Retract(IEnumerable<Triple>)
  nameWithType: IGraph.Retract(IEnumerable<Triple>)
  fullName: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: IGraph.Retract(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Retract(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Clear*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.Clear
  name: Clear
  nameWithType: SpinWrappedGraph.Clear
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Clear
- uid: VDS.RDF.IGraph.Clear
  commentId: M:VDS.RDF.IGraph.Clear
  parent: VDS.RDF.IGraph
  name: Clear()
  nameWithType: IGraph.Clear()
  fullName: VDS.RDF.IGraph.Clear()
  spec.csharp:
  - uid: VDS.RDF.IGraph.Clear
    name: Clear
    nameWithType: IGraph.Clear
    fullName: VDS.RDF.IGraph.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Clear
    name: Clear
    nameWithType: IGraph.Clear
    fullName: VDS.RDF.IGraph.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.BaseUri*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.BaseUri
  name: BaseUri
  nameWithType: SpinWrappedGraph.BaseUri
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.BaseUri
- uid: VDS.RDF.IGraph.BaseUri
  commentId: P:VDS.RDF.IGraph.BaseUri
  parent: VDS.RDF.IGraph
  name: BaseUri
  nameWithType: IGraph.BaseUri
  fullName: VDS.RDF.IGraph.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Dispose*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.Dispose
  name: Dispose
  nameWithType: SpinWrappedGraph.Dispose
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.IsEmpty*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.IsEmpty
  name: IsEmpty
  nameWithType: SpinWrappedGraph.IsEmpty
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.IsEmpty
- uid: VDS.RDF.IGraph.IsEmpty
  commentId: P:VDS.RDF.IGraph.IsEmpty
  parent: VDS.RDF.IGraph
  name: IsEmpty
  nameWithType: IGraph.IsEmpty
  fullName: VDS.RDF.IGraph.IsEmpty
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.NamespaceMap*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.NamespaceMap
  name: NamespaceMap
  nameWithType: SpinWrappedGraph.NamespaceMap
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.NamespaceMap
- uid: VDS.RDF.IGraph.NamespaceMap
  commentId: P:VDS.RDF.IGraph.NamespaceMap
  parent: VDS.RDF.IGraph
  name: NamespaceMap
  nameWithType: IGraph.NamespaceMap
  fullName: VDS.RDF.IGraph.NamespaceMap
- uid: VDS.RDF.INamespaceMapper
  commentId: T:VDS.RDF.INamespaceMapper
  parent: VDS.RDF
  name: INamespaceMapper
  nameWithType: INamespaceMapper
  fullName: VDS.RDF.INamespaceMapper
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Nodes*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.Nodes
  name: Nodes
  nameWithType: SpinWrappedGraph.Nodes
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Nodes
- uid: VDS.RDF.IGraph.Nodes
  commentId: P:VDS.RDF.IGraph.Nodes
  parent: VDS.RDF.IGraph
  name: Nodes
  nameWithType: IGraph.Nodes
  fullName: VDS.RDF.IGraph.Nodes
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INode>
  nameWithType: IEnumerable<INode>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.INode>
  nameWithType.vb: IEnumerable(Of INode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.INode)
  name.vb: IEnumerable(Of INode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.AllNodes*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.AllNodes
  name: AllNodes
  nameWithType: SpinWrappedGraph.AllNodes
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.AllNodes
- uid: VDS.RDF.IGraph.AllNodes
  commentId: P:VDS.RDF.IGraph.AllNodes
  parent: VDS.RDF.IGraph
  name: AllNodes
  nameWithType: IGraph.AllNodes
  fullName: VDS.RDF.IGraph.AllNodes
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Triples*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.Triples
  name: Triples
  nameWithType: SpinWrappedGraph.Triples
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Triples
- uid: VDS.RDF.IGraph.Triples
  commentId: P:VDS.RDF.IGraph.Triples
  parent: VDS.RDF.IGraph
  name: Triples
  nameWithType: IGraph.Triples
  fullName: VDS.RDF.IGraph.Triples
- uid: VDS.RDF.BaseTripleCollection
  commentId: T:VDS.RDF.BaseTripleCollection
  parent: VDS.RDF
  name: BaseTripleCollection
  nameWithType: BaseTripleCollection
  fullName: VDS.RDF.BaseTripleCollection
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode
  name: CreateUriNode
  nameWithType: SpinWrappedGraph.CreateUriNode
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateUriNode
- uid: VDS.RDF.IGraph.CreateUriNode
  commentId: M:VDS.RDF.IGraph.CreateUriNode
  parent: VDS.RDF.IGraph
  name: CreateUriNode()
  nameWithType: IGraph.CreateUriNode()
  fullName: VDS.RDF.IGraph.CreateUriNode()
  spec.csharp:
  - uid: VDS.RDF.IGraph.CreateUriNode
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.CreateUriNode
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IUriNode
  commentId: T:VDS.RDF.IUriNode
  parent: VDS.RDF
  name: IUriNode
  nameWithType: IUriNode
  fullName: VDS.RDF.IUriNode
- uid: VDS.RDF.IGraph.CreateUriNode(System.String)
  commentId: M:VDS.RDF.IGraph.CreateUriNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: CreateUriNode(String)
  nameWithType: IGraph.CreateUriNode(String)
  fullName: VDS.RDF.IGraph.CreateUriNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.CreateUriNode(System.String)
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.CreateUriNode(System.String)
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetBlankNode*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.GetBlankNode
  name: GetBlankNode
  nameWithType: SpinWrappedGraph.GetBlankNode
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetBlankNode
- uid: VDS.RDF.IGraph.GetBlankNode(System.String)
  commentId: M:VDS.RDF.IGraph.GetBlankNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetBlankNode(String)
  nameWithType: IGraph.GetBlankNode(String)
  fullName: VDS.RDF.IGraph.GetBlankNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetBlankNode(System.String)
    name: GetBlankNode
    nameWithType: IGraph.GetBlankNode
    fullName: VDS.RDF.IGraph.GetBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetBlankNode(System.String)
    name: GetBlankNode
    nameWithType: IGraph.GetBlankNode
    fullName: VDS.RDF.IGraph.GetBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IBlankNode
  commentId: T:VDS.RDF.IBlankNode
  parent: VDS.RDF
  name: IBlankNode
  nameWithType: IBlankNode
  fullName: VDS.RDF.IBlankNode
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode
  name: GetLiteralNode
  nameWithType: SpinWrappedGraph.GetLiteralNode
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetLiteralNode
- uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetLiteralNode(String, String)
  nameWithType: IGraph.GetLiteralNode(String, String)
  fullName: VDS.RDF.IGraph.GetLiteralNode(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: VDS.RDF.IGraph.GetLiteralNode(System.String)
  commentId: M:VDS.RDF.IGraph.GetLiteralNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetLiteralNode(String)
  nameWithType: IGraph.GetLiteralNode(String)
  fullName: VDS.RDF.IGraph.GetLiteralNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetLiteralNode(String, Uri)
  nameWithType: IGraph.GetLiteralNode(String, Uri)
  fullName: VDS.RDF.IGraph.GetLiteralNode(System.String, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples
  name: GetTriples
  nameWithType: SpinWrappedGraph.GetTriples
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriples
- uid: VDS.RDF.IGraph.GetTriples(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriples(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriples(Uri)
  nameWithType: IGraph.GetTriples(Uri)
  fullName: VDS.RDF.IGraph.GetTriples(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriples(System.Uri)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriples(System.Uri)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriples(INode)
  nameWithType: IGraph.GetTriples(INode)
  fullName: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject
  name: GetTriplesWithObject
  nameWithType: SpinWrappedGraph.GetTriplesWithObject
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithObject
- uid: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriplesWithObject(Uri)
  nameWithType: IGraph.GetTriplesWithObject(Uri)
  fullName: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithObject(INode)
  nameWithType: IGraph.GetTriplesWithObject(INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate
  name: GetTriplesWithPredicate
  nameWithType: SpinWrappedGraph.GetTriplesWithPredicate
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicate
- uid: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithPredicate(INode)
  nameWithType: IGraph.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriplesWithPredicate(Uri)
  nameWithType: IGraph.GetTriplesWithPredicate(Uri)
  fullName: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject
  name: GetTriplesWithSubject
  nameWithType: SpinWrappedGraph.GetTriplesWithSubject
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubject
- uid: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithSubject(INode)
  nameWithType: IGraph.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriplesWithSubject(Uri)
  nameWithType: IGraph.GetTriplesWithSubject(Uri)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectPredicate*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectPredicate
  name: GetTriplesWithSubjectPredicate
  nameWithType: SpinWrappedGraph.GetTriplesWithSubjectPredicate
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectPredicate
- uid: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: IGraph.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: IGraph.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: IGraph.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectObject*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectObject
  name: GetTriplesWithSubjectObject
  nameWithType: SpinWrappedGraph.GetTriplesWithSubjectObject
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithSubjectObject
- uid: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: IGraph.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: IGraph.GetTriplesWithSubjectObject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: IGraph.GetTriplesWithSubjectObject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicateObject*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicateObject
  name: GetTriplesWithPredicateObject
  nameWithType: SpinWrappedGraph.GetTriplesWithPredicateObject
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetTriplesWithPredicateObject
- uid: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: IGraph.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: IGraph.GetTriplesWithPredicateObject
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: IGraph.GetTriplesWithPredicateObject
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode
  name: GetUriNode
  nameWithType: SpinWrappedGraph.GetUriNode
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetUriNode
- uid: VDS.RDF.IGraph.GetUriNode(System.String)
  commentId: M:VDS.RDF.IGraph.GetUriNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetUriNode(String)
  nameWithType: IGraph.GetUriNode(String)
  fullName: VDS.RDF.IGraph.GetUriNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetUriNode(System.String)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetUriNode(System.String)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetUriNode(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetUriNode(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetUriNode(Uri)
  nameWithType: IGraph.GetUriNode(Uri)
  fullName: VDS.RDF.IGraph.GetUriNode(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetUriNode(System.Uri)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetUriNode(System.Uri)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.ContainsTriple*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.ContainsTriple
  name: ContainsTriple
  nameWithType: SpinWrappedGraph.ContainsTriple
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.ContainsTriple
- uid: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.IGraph
  name: ContainsTriple(Triple)
  nameWithType: IGraph.ContainsTriple(Triple)
  fullName: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: IGraph.ContainsTriple
    fullName: VDS.RDF.IGraph.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: IGraph.ContainsTriple
    fullName: VDS.RDF.IGraph.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Merge*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.Merge
  name: Merge
  nameWithType: SpinWrappedGraph.Merge
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Merge
- uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: Merge(IGraph)
  nameWithType: IGraph.Merge(IGraph)
  fullName: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Merge(IGraph, Boolean)
  nameWithType: IGraph.Merge(IGraph, Boolean)
  fullName: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Equals*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.Equals
  name: Equals
  nameWithType: SpinWrappedGraph.Equals
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Equals
- uid: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Equals(IGraph, Dictionary<INode, INode>)
  nameWithType: IGraph.Equals(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: IGraph.Equals(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: Equals(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: Equals
    nameWithType: IGraph.Equals
    fullName: VDS.RDF.IGraph.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: Equals
    nameWithType: IGraph.Equals
    fullName: VDS.RDF.IGraph.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
  commentId: T:System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<INode, INode>
  nameWithType: Dictionary<INode, INode>
  fullName: System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>
  nameWithType.vb: Dictionary(Of INode, INode)
  fullName.vb: System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode)
  name.vb: Dictionary(Of INode, INode)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf
  name: IsSubGraphOf
  nameWithType: SpinWrappedGraph.IsSubGraphOf
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.IsSubGraphOf
- uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: IsSubGraphOf(IGraph)
  nameWithType: IGraph.IsSubGraphOf(IGraph)
  fullName: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: IsSubGraphOf(IGraph, Dictionary<INode, INode>)
  nameWithType: IGraph.IsSubGraphOf(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: IGraph.IsSubGraphOf(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: IsSubGraphOf(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph
  name: HasSubGraph
  nameWithType: SpinWrappedGraph.HasSubGraph
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.HasSubGraph
- uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: HasSubGraph(IGraph)
  nameWithType: IGraph.HasSubGraph(IGraph)
  fullName: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: HasSubGraph(IGraph, Dictionary<INode, INode>)
  nameWithType: IGraph.HasSubGraph(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: IGraph.HasSubGraph(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: HasSubGraph(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.Difference*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.Difference
  name: Difference
  nameWithType: SpinWrappedGraph.Difference
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.Difference
- uid: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: Difference(IGraph)
  nameWithType: IGraph.Difference(IGraph)
  fullName: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
    name: Difference
    nameWithType: IGraph.Difference
    fullName: VDS.RDF.IGraph.Difference
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
    name: Difference
    nameWithType: IGraph.Difference
    fullName: VDS.RDF.IGraph.Difference
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphDiffReport
  commentId: T:VDS.RDF.GraphDiffReport
  parent: VDS.RDF
  name: GraphDiffReport
  nameWithType: GraphDiffReport
  fullName: VDS.RDF.GraphDiffReport
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.ResolveQName*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.ResolveQName
  name: ResolveQName
  nameWithType: SpinWrappedGraph.ResolveQName
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.ResolveQName
- uid: VDS.RDF.IGraph.ResolveQName(System.String)
  commentId: M:VDS.RDF.IGraph.ResolveQName(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: ResolveQName(String)
  nameWithType: IGraph.ResolveQName(String)
  fullName: VDS.RDF.IGraph.ResolveQName(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.ResolveQName(System.String)
    name: ResolveQName
    nameWithType: IGraph.ResolveQName
    fullName: VDS.RDF.IGraph.ResolveQName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.ResolveQName(System.String)
    name: ResolveQName
    nameWithType: IGraph.ResolveQName
    fullName: VDS.RDF.IGraph.ResolveQName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.TripleAsserted
  commentId: E:VDS.RDF.IGraph.TripleAsserted
  parent: VDS.RDF.IGraph
  name: TripleAsserted
  nameWithType: IGraph.TripleAsserted
  fullName: VDS.RDF.IGraph.TripleAsserted
- uid: VDS.RDF.TripleEventHandler
  commentId: T:VDS.RDF.TripleEventHandler
  parent: VDS.RDF
  name: TripleEventHandler
  nameWithType: TripleEventHandler
  fullName: VDS.RDF.TripleEventHandler
- uid: VDS.RDF.IGraph.TripleRetracted
  commentId: E:VDS.RDF.IGraph.TripleRetracted
  parent: VDS.RDF.IGraph
  name: TripleRetracted
  nameWithType: IGraph.TripleRetracted
  fullName: VDS.RDF.IGraph.TripleRetracted
- uid: VDS.RDF.IGraph.Changed
  commentId: E:VDS.RDF.IGraph.Changed
  parent: VDS.RDF.IGraph
  name: Changed
  nameWithType: IGraph.Changed
  fullName: VDS.RDF.IGraph.Changed
- uid: VDS.RDF.GraphEventHandler
  commentId: T:VDS.RDF.GraphEventHandler
  parent: VDS.RDF
  name: GraphEventHandler
  nameWithType: GraphEventHandler
  fullName: VDS.RDF.GraphEventHandler
- uid: VDS.RDF.IGraph.ClearRequested
  commentId: E:VDS.RDF.IGraph.ClearRequested
  parent: VDS.RDF.IGraph
  name: ClearRequested
  nameWithType: IGraph.ClearRequested
  fullName: VDS.RDF.IGraph.ClearRequested
- uid: VDS.RDF.CancellableGraphEventHandler
  commentId: T:VDS.RDF.CancellableGraphEventHandler
  parent: VDS.RDF
  name: CancellableGraphEventHandler
  nameWithType: CancellableGraphEventHandler
  fullName: VDS.RDF.CancellableGraphEventHandler
- uid: VDS.RDF.IGraph.Cleared
  commentId: E:VDS.RDF.IGraph.Cleared
  parent: VDS.RDF.IGraph
  name: Cleared
  nameWithType: IGraph.Cleared
  fullName: VDS.RDF.IGraph.Cleared
- uid: VDS.RDF.IGraph.MergeRequested
  commentId: E:VDS.RDF.IGraph.MergeRequested
  parent: VDS.RDF.IGraph
  name: MergeRequested
  nameWithType: IGraph.MergeRequested
  fullName: VDS.RDF.IGraph.MergeRequested
- uid: VDS.RDF.IGraph.Merged
  commentId: E:VDS.RDF.IGraph.Merged
  parent: VDS.RDF.IGraph
  name: Merged
  nameWithType: IGraph.Merged
  fullName: VDS.RDF.IGraph.Merged
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode
  name: CreateBlankNode
  nameWithType: SpinWrappedGraph.CreateBlankNode
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateBlankNode
- uid: VDS.RDF.INodeFactory.CreateBlankNode
  commentId: M:VDS.RDF.INodeFactory.CreateBlankNode
  parent: VDS.RDF.INodeFactory
  name: CreateBlankNode()
  nameWithType: INodeFactory.CreateBlankNode()
  fullName: VDS.RDF.INodeFactory.CreateBlankNode()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateBlankNode(String)
  nameWithType: INodeFactory.CreateBlankNode(String)
  fullName: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode
  name: CreateGraphLiteralNode
  nameWithType: SpinWrappedGraph.CreateGraphLiteralNode
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateGraphLiteralNode
- uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  commentId: M:VDS.RDF.INodeFactory.CreateGraphLiteralNode
  parent: VDS.RDF.INodeFactory
  name: CreateGraphLiteralNode()
  nameWithType: INodeFactory.CreateGraphLiteralNode()
  fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraphLiteralNode
  commentId: T:VDS.RDF.IGraphLiteralNode
  parent: VDS.RDF
  name: IGraphLiteralNode
  nameWithType: IGraphLiteralNode
  fullName: VDS.RDF.IGraphLiteralNode
- uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  parent: VDS.RDF.INodeFactory
  name: CreateGraphLiteralNode(IGraph)
  nameWithType: INodeFactory.CreateGraphLiteralNode(IGraph)
  fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode
  name: CreateLiteralNode
  nameWithType: SpinWrappedGraph.CreateLiteralNode
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateLiteralNode
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String, Uri)
  nameWithType: INodeFactory.CreateLiteralNode(String, Uri)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String)
  nameWithType: INodeFactory.CreateLiteralNode(String)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String, String)
  nameWithType: INodeFactory.CreateLiteralNode(String, String)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  commentId: M:VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateUriNode(Uri)
  nameWithType: INodeFactory.CreateUriNode(Uri)
  fullName: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
    name: CreateUriNode
    nameWithType: INodeFactory.CreateUriNode
    fullName: VDS.RDF.INodeFactory.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
    name: CreateUriNode
    nameWithType: INodeFactory.CreateUriNode
    fullName: VDS.RDF.INodeFactory.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateVariableNode*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.CreateVariableNode
  name: CreateVariableNode
  nameWithType: SpinWrappedGraph.CreateVariableNode
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.CreateVariableNode
- uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateVariableNode(String)
  nameWithType: INodeFactory.CreateVariableNode(String)
  fullName: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
    name: CreateVariableNode
    nameWithType: INodeFactory.CreateVariableNode
    fullName: VDS.RDF.INodeFactory.CreateVariableNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
    name: CreateVariableNode
    nameWithType: INodeFactory.CreateVariableNode
    fullName: VDS.RDF.INodeFactory.CreateVariableNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IVariableNode
  commentId: T:VDS.RDF.IVariableNode
  parent: VDS.RDF
  name: IVariableNode
  nameWithType: IVariableNode
  fullName: VDS.RDF.IVariableNode
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetNextBlankNodeID*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.GetNextBlankNodeID
  name: GetNextBlankNodeID
  nameWithType: SpinWrappedGraph.GetNextBlankNodeID
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetNextBlankNodeID
- uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
  commentId: M:VDS.RDF.INodeFactory.GetNextBlankNodeID
  parent: VDS.RDF.INodeFactory
  name: GetNextBlankNodeID()
  nameWithType: INodeFactory.GetNextBlankNodeID()
  fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
    name: GetNextBlankNodeID
    nameWithType: INodeFactory.GetNextBlankNodeID
    fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
    name: GetNextBlankNodeID
    nameWithType: INodeFactory.GetNextBlankNodeID
    fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.GetSchema*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.GetSchema
  name: GetSchema
  nameWithType: SpinWrappedGraph.GetSchema
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: true
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.ReadXml*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.ReadXml
  name: ReadXml
  nameWithType: SpinWrappedGraph.ReadXml
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: VDS.RDF.Query.Spin.SpinWrappedGraph.WriteXml*
  commentId: Overload:VDS.RDF.Query.Spin.SpinWrappedGraph.WriteXml
  name: WriteXml
  nameWithType: SpinWrappedGraph.WriteXml
  fullName: VDS.RDF.Query.Spin.SpinWrappedGraph.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
shouldSkipMarkup: true
