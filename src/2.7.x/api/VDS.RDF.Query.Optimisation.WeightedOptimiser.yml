### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Optimisation.WeightedOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.WeightedOptimiser
  id: WeightedOptimiser
  parent: VDS.RDF.Query.Optimisation
  children:
  - VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor
  - VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor(VDS.RDF.IGraph)
  - VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor(VDS.RDF.IGraph,System.Double,System.Double,System.Double)
  - VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultObjectWeight
  - VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultPredicateWeight
  - VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultSubjectWeight
  - VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultVariableWeight
  - VDS.RDF.Query.Optimisation.WeightedOptimiser.GetRankingComparer
  langs:
  - csharp
  - vb
  name: WeightedOptimiser
  nameWithType: WeightedOptimiser
  fullName: VDS.RDF.Query.Optimisation.WeightedOptimiser
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WeightedOptimiser
    path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nThe Weighted Optimiser is a Query Optimiser that orders Triple Patterns based on weighting computed calculated against.\n"
  example: []
  syntax:
    content: 'public class WeightedOptimiser : BaseQueryOptimiser, IQueryOptimiser'
    content.vb: >-
      Public Class WeightedOptimiser
          Inherits BaseQueryOptimiser
          Implements IQueryOptimiser
  inheritance:
  - System.Object
  - VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  implements:
  - VDS.RDF.Query.Optimisation.IQueryOptimiser
  inheritedMembers:
  - VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldReorder
  - VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldSplitFilters
  - VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceFilters
  - VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceAssignments
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Optimisation.WeightedOptimiser.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultSubjectWeight
  commentId: F:VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultSubjectWeight
  id: DefaultSubjectWeight
  parent: VDS.RDF.Query.Optimisation.WeightedOptimiser
  langs:
  - csharp
  - vb
  name: DefaultSubjectWeight
  nameWithType: WeightedOptimiser.DefaultSubjectWeight
  fullName: VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultSubjectWeight
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultSubjectWeight
    path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
    startLine: 43
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nDefault Weight for Subject Terms.\n"
  example: []
  syntax:
    content: public const double DefaultSubjectWeight = 0.8
    return:
      type: System.Double
    content.vb: Public Const DefaultSubjectWeight As Double = 0.8
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultPredicateWeight
  commentId: F:VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultPredicateWeight
  id: DefaultPredicateWeight
  parent: VDS.RDF.Query.Optimisation.WeightedOptimiser
  langs:
  - csharp
  - vb
  name: DefaultPredicateWeight
  nameWithType: WeightedOptimiser.DefaultPredicateWeight
  fullName: VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultPredicateWeight
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultPredicateWeight
    path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nDefault Weight for Predicate Terms.\n"
  example: []
  syntax:
    content: public const double DefaultPredicateWeight = 0.4
    return:
      type: System.Double
    content.vb: Public Const DefaultPredicateWeight As Double = 0.4
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultObjectWeight
  commentId: F:VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultObjectWeight
  id: DefaultObjectWeight
  parent: VDS.RDF.Query.Optimisation.WeightedOptimiser
  langs:
  - csharp
  - vb
  name: DefaultObjectWeight
  nameWithType: WeightedOptimiser.DefaultObjectWeight
  fullName: VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultObjectWeight
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultObjectWeight
    path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nDefault Weight for Object Terms.\n"
  example: []
  syntax:
    content: public const double DefaultObjectWeight = 0.6
    return:
      type: System.Double
    content.vb: Public Const DefaultObjectWeight As Double = 0.6
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultVariableWeight
  commentId: F:VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultVariableWeight
  id: DefaultVariableWeight
  parent: VDS.RDF.Query.Optimisation.WeightedOptimiser
  langs:
  - csharp
  - vb
  name: DefaultVariableWeight
  nameWithType: WeightedOptimiser.DefaultVariableWeight
  fullName: VDS.RDF.Query.Optimisation.WeightedOptimiser.DefaultVariableWeight
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultVariableWeight
    path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nDefault Weight for Variables.\n"
  example: []
  syntax:
    content: public const double DefaultVariableWeight = 1
    return:
      type: System.Double
    content.vb: Public Const DefaultVariableWeight As Double = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor
  commentId: M:VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor
  id: '#ctor'
  parent: VDS.RDF.Query.Optimisation.WeightedOptimiser
  langs:
  - csharp
  - vb
  name: WeightedOptimiser()
  nameWithType: WeightedOptimiser.WeightedOptimiser()
  fullName: VDS.RDF.Query.Optimisation.WeightedOptimiser.WeightedOptimiser()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nCreates a new Weighted Optimiser.\n"
  example: []
  syntax:
    content: public WeightedOptimiser()
    content.vb: Public Sub New
  overload: VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor(VDS.RDF.IGraph)
  id: '#ctor(VDS.RDF.IGraph)'
  parent: VDS.RDF.Query.Optimisation.WeightedOptimiser
  langs:
  - csharp
  - vb
  name: WeightedOptimiser(IGraph)
  nameWithType: WeightedOptimiser.WeightedOptimiser(IGraph)
  fullName: VDS.RDF.Query.Optimisation.WeightedOptimiser.WeightedOptimiser(VDS.RDF.IGraph)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
    startLine: 67
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nCreates a new Weighted Optimiser which reads weights from the given RDF Graph.\n"
  example: []
  syntax:
    content: public WeightedOptimiser(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    content.vb: Public Sub New(g As IGraph)
  overload: VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor(VDS.RDF.IGraph,System.Double,System.Double,System.Double)
  commentId: M:VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor(VDS.RDF.IGraph,System.Double,System.Double,System.Double)
  id: '#ctor(VDS.RDF.IGraph,System.Double,System.Double,System.Double)'
  parent: VDS.RDF.Query.Optimisation.WeightedOptimiser
  langs:
  - csharp
  - vb
  name: WeightedOptimiser(IGraph, Double, Double, Double)
  nameWithType: WeightedOptimiser.WeightedOptimiser(IGraph, Double, Double, Double)
  fullName: VDS.RDF.Query.Optimisation.WeightedOptimiser.WeightedOptimiser(VDS.RDF.IGraph, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
    startLine: 79
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nCreates a new Weighted Optimiser which reads weights from the given RDF Graph.\n"
  example: []
  syntax:
    content: public WeightedOptimiser(IGraph g, double subjWeight, double predWeight, double objWeight)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: subjWeight
      type: System.Double
      description: Default Subject Weight.
    - id: predWeight
      type: System.Double
      description: Default Predicate Weight.
    - id: objWeight
      type: System.Double
      description: Default Object Weight.
    content.vb: Public Sub New(g As IGraph, subjWeight As Double, predWeight As Double, objWeight As Double)
  overload: VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Optimisation.WeightedOptimiser.GetRankingComparer
  commentId: M:VDS.RDF.Query.Optimisation.WeightedOptimiser.GetRankingComparer
  id: GetRankingComparer
  parent: VDS.RDF.Query.Optimisation.WeightedOptimiser
  langs:
  - csharp
  - vb
  name: GetRankingComparer()
  nameWithType: WeightedOptimiser.GetRankingComparer()
  fullName: VDS.RDF.Query.Optimisation.WeightedOptimiser.GetRankingComparer()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetRankingComparer
    path: Libraries/dotNetRDF/Query/Optimisation/WeightedOptimiser.cs
    startLine: 91
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nGets the comparer used to order the Triple Patterns based on their computed weightings.\n"
  example: []
  syntax:
    content: protected override IComparer<ITriplePattern> GetRankingComparer()
    return:
      type: System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}
      description: ''
    content.vb: Protected Overrides Function GetRankingComparer As IComparer(Of ITriplePattern)
  overridden: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
  overload: VDS.RDF.Query.Optimisation.WeightedOptimiser.GetRankingComparer*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: VDS.RDF.Query.Optimisation
  commentId: N:VDS.RDF.Query.Optimisation
  name: VDS.RDF.Query.Optimisation
  nameWithType: VDS.RDF.Query.Optimisation
  fullName: VDS.RDF.Query.Optimisation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  parent: VDS.RDF.Query.Optimisation
  name: BaseQueryOptimiser
  nameWithType: BaseQueryOptimiser
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
- uid: VDS.RDF.Query.Optimisation.IQueryOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.IQueryOptimiser
  parent: VDS.RDF.Query.Optimisation
  name: IQueryOptimiser
  nameWithType: IQueryOptimiser
  fullName: VDS.RDF.Query.Optimisation.IQueryOptimiser
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  isExternal: true
  name: Optimise(GraphPattern, IEnumerable<String>)
  nameWithType: BaseQueryOptimiser.Optimise(GraphPattern, IEnumerable<String>)
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: BaseQueryOptimiser.Optimise(GraphPattern, IEnumerable(Of String))
  fullName.vb: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Optimise(GraphPattern, IEnumerable(Of String))
  spec.csharp:
  - uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
    name: Optimise
    nameWithType: BaseQueryOptimiser.Optimise
    fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.GraphPattern
    name: GraphPattern
    nameWithType: GraphPattern
    fullName: VDS.RDF.Query.Patterns.GraphPattern
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
    name: Optimise
    nameWithType: BaseQueryOptimiser.Optimise
    fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.GraphPattern
    name: GraphPattern
    nameWithType: GraphPattern
    fullName: VDS.RDF.Query.Patterns.GraphPattern
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldReorder
  commentId: P:VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldReorder
  parent: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  name: ShouldReorder
  nameWithType: BaseQueryOptimiser.ShouldReorder
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldReorder
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldSplitFilters
  commentId: P:VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldSplitFilters
  parent: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  name: ShouldSplitFilters
  nameWithType: BaseQueryOptimiser.ShouldSplitFilters
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldSplitFilters
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceFilters
  commentId: P:VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceFilters
  parent: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  name: ShouldPlaceFilters
  nameWithType: BaseQueryOptimiser.ShouldPlaceFilters
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceFilters
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceAssignments
  commentId: P:VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceAssignments
  parent: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  name: ShouldPlaceAssignments
  nameWithType: BaseQueryOptimiser.ShouldPlaceAssignments
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceAssignments
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Optimisation.WeightedOptimiser.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<WeightedOptimiser>()
  nameWithType: Extensions.AsEnumerable<WeightedOptimiser>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Optimisation.WeightedOptimiser>()
  nameWithType.vb: Extensions.AsEnumerable(Of WeightedOptimiser)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Optimisation.WeightedOptimiser)()
  name.vb: AsEnumerable(Of WeightedOptimiser)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<WeightedOptimiser>
    nameWithType: Extensions.AsEnumerable<WeightedOptimiser>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Optimisation.WeightedOptimiser>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of WeightedOptimiser)
    nameWithType: Extensions.AsEnumerable(Of WeightedOptimiser)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Optimisation.WeightedOptimiser)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor*
  commentId: Overload:VDS.RDF.Query.Optimisation.WeightedOptimiser.#ctor
  name: WeightedOptimiser
  nameWithType: WeightedOptimiser.WeightedOptimiser
  fullName: VDS.RDF.Query.Optimisation.WeightedOptimiser.WeightedOptimiser
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
  commentId: M:VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
  parent: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  name: GetRankingComparer()
  nameWithType: BaseQueryOptimiser.GetRankingComparer()
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer()
  spec.csharp:
  - uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
    name: GetRankingComparer
    nameWithType: BaseQueryOptimiser.GetRankingComparer
    fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
    name: GetRankingComparer
    nameWithType: BaseQueryOptimiser.GetRankingComparer
    fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Optimisation.WeightedOptimiser.GetRankingComparer*
  commentId: Overload:VDS.RDF.Query.Optimisation.WeightedOptimiser.GetRankingComparer
  name: GetRankingComparer
  nameWithType: WeightedOptimiser.GetRankingComparer
  fullName: VDS.RDF.Query.Optimisation.WeightedOptimiser.GetRankingComparer
- uid: System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}
  commentId: T:System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<ITriplePattern>
  nameWithType: IComparer<ITriplePattern>
  fullName: System.Collections.Generic.IComparer<VDS.RDF.Query.Patterns.ITriplePattern>
  nameWithType.vb: IComparer(Of ITriplePattern)
  fullName.vb: System.Collections.Generic.IComparer(Of VDS.RDF.Query.Patterns.ITriplePattern)
  name.vb: IComparer(Of ITriplePattern)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
shouldSkipMarkup: true
