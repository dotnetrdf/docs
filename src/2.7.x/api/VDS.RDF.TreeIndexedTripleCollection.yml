### YamlMime:ManagedReference
items:
- uid: VDS.RDF.TreeIndexedTripleCollection
  commentId: T:VDS.RDF.TreeIndexedTripleCollection
  id: TreeIndexedTripleCollection
  parent: VDS.RDF
  children:
  - VDS.RDF.TreeIndexedTripleCollection.#ctor
  - VDS.RDF.TreeIndexedTripleCollection.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,VDS.Common.Collections.MultiDictionaryMode)
  - VDS.RDF.TreeIndexedTripleCollection.#ctor(VDS.Common.Collections.MultiDictionaryMode)
  - VDS.RDF.TreeIndexedTripleCollection.Add(VDS.RDF.Triple)
  - VDS.RDF.TreeIndexedTripleCollection.Contains(VDS.RDF.Triple)
  - VDS.RDF.TreeIndexedTripleCollection.Count
  - VDS.RDF.TreeIndexedTripleCollection.Delete(VDS.RDF.Triple)
  - VDS.RDF.TreeIndexedTripleCollection.Dispose
  - VDS.RDF.TreeIndexedTripleCollection.GetEnumerator
  - VDS.RDF.TreeIndexedTripleCollection.Item(VDS.RDF.Triple)
  - VDS.RDF.TreeIndexedTripleCollection.ObjectNodes
  - VDS.RDF.TreeIndexedTripleCollection.PredicateNodes
  - VDS.RDF.TreeIndexedTripleCollection.SubjectNodes
  - VDS.RDF.TreeIndexedTripleCollection.WithObject(VDS.RDF.INode)
  - VDS.RDF.TreeIndexedTripleCollection.WithPredicate(VDS.RDF.INode)
  - VDS.RDF.TreeIndexedTripleCollection.WithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.TreeIndexedTripleCollection.WithSubject(VDS.RDF.INode)
  - VDS.RDF.TreeIndexedTripleCollection.WithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.TreeIndexedTripleCollection.WithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  langs:
  - csharp
  - vb
  name: TreeIndexedTripleCollection
  nameWithType: TreeIndexedTripleCollection
  fullName: VDS.RDF.TreeIndexedTripleCollection
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TreeIndexedTripleCollection
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAn indexed triple collection that uses our <xref href=\"VDS.Common.Collections.MultiDictionary%602\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"VDS.Common.Trees.BinaryTree%602\" data-throw-if-not-resolved=\"false\"></xref> implementations under the hood for the index structures.\n"
  remarks: "\n"
  example: []
  syntax:
    content: 'public class TreeIndexedTripleCollection : BaseTripleCollection, IEnumerable<Triple>, IEnumerable, IDisposable'
    content.vb: >-
      Public Class TreeIndexedTripleCollection
          Inherits BaseTripleCollection
          Implements IEnumerable(Of Triple), IEnumerable, IDisposable
  inheritance:
  - System.Object
  - VDS.RDF.BaseTripleCollection
  implements:
  - System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  - System.Collections.IEnumerable
  - System.IDisposable
  inheritedMembers:
  - VDS.RDF.BaseTripleCollection.System#Collections#IEnumerable#GetEnumerator
  - VDS.RDF.BaseTripleCollection.TripleAdded
  - VDS.RDF.BaseTripleCollection.TripleRemoved
  - VDS.RDF.BaseTripleCollection.RaiseTripleAdded(VDS.RDF.Triple)
  - VDS.RDF.BaseTripleCollection.RaiseTripleRemoved(VDS.RDF.Triple)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.TreeIndexedTripleCollection.VDS.RDF.Extensions.AsEnumerable``1
  - System.Collections.Generic.IEnumerable{VDS.RDF.Triple}.VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - System.Collections.Generic.IEnumerable{VDS.RDF.Triple}.VDS.RDF.Extensions.ChunkBy``1(System.Int32)
  - System.Collections.Generic.IEnumerable{VDS.RDF.Triple}.VDS.RDF.Extensions.WithSubject(VDS.RDF.INode)
  - System.Collections.Generic.IEnumerable{VDS.RDF.Triple}.VDS.RDF.Extensions.WithPredicate(VDS.RDF.INode)
  - System.Collections.Generic.IEnumerable{VDS.RDF.Triple}.VDS.RDF.Extensions.WithObject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.TreeIndexedTripleCollection.#ctor
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.#ctor
  id: '#ctor'
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: TreeIndexedTripleCollection()
  nameWithType: TreeIndexedTripleCollection.TreeIndexedTripleCollection()
  fullName: VDS.RDF.TreeIndexedTripleCollection.TreeIndexedTripleCollection()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Tree Indexed triple collection.\n"
  example: []
  syntax:
    content: public TreeIndexedTripleCollection()
    content.vb: Public Sub New
  overload: VDS.RDF.TreeIndexedTripleCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TreeIndexedTripleCollection.#ctor(VDS.Common.Collections.MultiDictionaryMode)
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.#ctor(VDS.Common.Collections.MultiDictionaryMode)
  id: '#ctor(VDS.Common.Collections.MultiDictionaryMode)'
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: TreeIndexedTripleCollection(MultiDictionaryMode)
  nameWithType: TreeIndexedTripleCollection.TreeIndexedTripleCollection(MultiDictionaryMode)
  fullName: VDS.RDF.TreeIndexedTripleCollection.TreeIndexedTripleCollection(VDS.Common.Collections.MultiDictionaryMode)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Tree Indexed triple collection.\n"
  example: []
  syntax:
    content: public TreeIndexedTripleCollection(MultiDictionaryMode compoundIndexMode)
    parameters:
    - id: compoundIndexMode
      type: VDS.Common.Collections.MultiDictionaryMode
      description: Mode to use for compound indexes.
    content.vb: Public Sub New(compoundIndexMode As MultiDictionaryMode)
  overload: VDS.RDF.TreeIndexedTripleCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TreeIndexedTripleCollection.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,VDS.Common.Collections.MultiDictionaryMode)
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,VDS.Common.Collections.MultiDictionaryMode)
  id: '#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,VDS.Common.Collections.MultiDictionaryMode)'
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: TreeIndexedTripleCollection(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, MultiDictionaryMode)
  nameWithType: TreeIndexedTripleCollection.TreeIndexedTripleCollection(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, MultiDictionaryMode)
  fullName: VDS.RDF.TreeIndexedTripleCollection.TreeIndexedTripleCollection(System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, System.Boolean, VDS.Common.Collections.MultiDictionaryMode)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 79
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Tree Indexed triple collection with the given Indexing options.\n"
  example: []
  syntax:
    content: public TreeIndexedTripleCollection(bool subjIndex, bool predIndex, bool objIndex, bool subjPredIndex, bool subjObjIndex, bool predObjIndex, MultiDictionaryMode compoundIndexMode)
    parameters:
    - id: subjIndex
      type: System.Boolean
      description: Whether to create a subject index.
    - id: predIndex
      type: System.Boolean
      description: Whether to create a predicate index.
    - id: objIndex
      type: System.Boolean
      description: Whether to create an object index.
    - id: subjPredIndex
      type: System.Boolean
      description: Whether to create a subject predicate index.
    - id: subjObjIndex
      type: System.Boolean
      description: Whether to create a subject object index.
    - id: predObjIndex
      type: System.Boolean
      description: Whether to create a predicate object index.
    - id: compoundIndexMode
      type: VDS.Common.Collections.MultiDictionaryMode
      description: Mode to use for compound indexes.
    content.vb: Public Sub New(subjIndex As Boolean, predIndex As Boolean, objIndex As Boolean, subjPredIndex As Boolean, subjObjIndex As Boolean, predObjIndex As Boolean, compoundIndexMode As MultiDictionaryMode)
  overload: VDS.RDF.TreeIndexedTripleCollection.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TreeIndexedTripleCollection.Add(VDS.RDF.Triple)
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.Add(VDS.RDF.Triple)
  id: Add(VDS.RDF.Triple)
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: Add(Triple)
  nameWithType: TreeIndexedTripleCollection.Add(Triple)
  fullName: VDS.RDF.TreeIndexedTripleCollection.Add(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Add
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 224
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAdds a Triple to the collection.\n"
  example: []
  syntax:
    content: protected override bool Add(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Overrides Function Add(t As Triple) As Boolean
  overridden: VDS.RDF.BaseTripleCollection.Add(VDS.RDF.Triple)
  overload: VDS.RDF.TreeIndexedTripleCollection.Add*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: VDS.RDF.TreeIndexedTripleCollection.Contains(VDS.RDF.Triple)
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.Contains(VDS.RDF.Triple)
  id: Contains(VDS.RDF.Triple)
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: Contains(Triple)
  nameWithType: TreeIndexedTripleCollection.Contains(Triple)
  fullName: VDS.RDF.TreeIndexedTripleCollection.Contains(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Contains
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 241
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether the collection contains a given Triple.\n"
  example: []
  syntax:
    content: public override bool Contains(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Contains(t As Triple) As Boolean
  overridden: VDS.RDF.BaseTripleCollection.Contains(VDS.RDF.Triple)
  overload: VDS.RDF.TreeIndexedTripleCollection.Contains*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.TreeIndexedTripleCollection.Count
  commentId: P:VDS.RDF.TreeIndexedTripleCollection.Count
  id: Count
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: TreeIndexedTripleCollection.Count
  fullName: VDS.RDF.TreeIndexedTripleCollection.Count
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Count
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 249
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the count of triples in the collection.\n"
  example: []
  syntax:
    content: public override int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property Count As Integer
  overridden: VDS.RDF.BaseTripleCollection.Count
  overload: VDS.RDF.TreeIndexedTripleCollection.Count*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.TreeIndexedTripleCollection.Delete(VDS.RDF.Triple)
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.Delete(VDS.RDF.Triple)
  id: Delete(VDS.RDF.Triple)
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: Delete(Triple)
  nameWithType: TreeIndexedTripleCollection.Delete(Triple)
  fullName: VDS.RDF.TreeIndexedTripleCollection.Delete(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Delete
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 263
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDeletes a triple from the collection.\n"
  example: []
  syntax:
    content: protected override bool Delete(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Overrides Function Delete(t As Triple) As Boolean
  overridden: VDS.RDF.BaseTripleCollection.Delete(VDS.RDF.Triple)
  overload: VDS.RDF.TreeIndexedTripleCollection.Delete*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: VDS.RDF.TreeIndexedTripleCollection.Item(VDS.RDF.Triple)
  commentId: P:VDS.RDF.TreeIndexedTripleCollection.Item(VDS.RDF.Triple)
  id: Item(VDS.RDF.Triple)
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: Item[Triple]
  nameWithType: TreeIndexedTripleCollection.Item[Triple]
  fullName: VDS.RDF.TreeIndexedTripleCollection.Item[VDS.RDF.Triple]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 281
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the specific instance of a Triple in the collection.\n"
  example: []
  syntax:
    content: public override Triple this[Triple t] { get; }
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: VDS.RDF.Triple
      description: ''
    content.vb: Public Overrides ReadOnly Property Item(t As Triple) As Triple
  overridden: VDS.RDF.BaseTripleCollection.Item(VDS.RDF.Triple)
  overload: VDS.RDF.TreeIndexedTripleCollection.Item*
  nameWithType.vb: TreeIndexedTripleCollection.Item(Triple)
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
  fullName.vb: VDS.RDF.TreeIndexedTripleCollection.Item(VDS.RDF.Triple)
  name.vb: Item(Triple)
- uid: VDS.RDF.TreeIndexedTripleCollection.WithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.WithObject(VDS.RDF.INode)
  id: WithObject(VDS.RDF.INode)
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: WithObject(INode)
  nameWithType: TreeIndexedTripleCollection.WithObject(INode)
  fullName: VDS.RDF.TreeIndexedTripleCollection.WithObject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WithObject
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 302
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the triples with a given object.\n"
  example: []
  syntax:
    content: public override IEnumerable<Triple> WithObject(INode obj)
    parameters:
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overrides Function WithObject(obj As INode) As IEnumerable(Of Triple)
  overridden: VDS.RDF.BaseTripleCollection.WithObject(VDS.RDF.INode)
  overload: VDS.RDF.TreeIndexedTripleCollection.WithObject*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.TreeIndexedTripleCollection.WithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.WithPredicate(VDS.RDF.INode)
  id: WithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: WithPredicate(INode)
  nameWithType: TreeIndexedTripleCollection.WithPredicate(INode)
  fullName: VDS.RDF.TreeIndexedTripleCollection.WithPredicate(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WithPredicate
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 327
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the triples with a given predicate.\n"
  example: []
  syntax:
    content: public override IEnumerable<Triple> WithPredicate(INode pred)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overrides Function WithPredicate(pred As INode) As IEnumerable(Of Triple)
  overridden: VDS.RDF.BaseTripleCollection.WithPredicate(VDS.RDF.INode)
  overload: VDS.RDF.TreeIndexedTripleCollection.WithPredicate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.TreeIndexedTripleCollection.WithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.WithSubject(VDS.RDF.INode)
  id: WithSubject(VDS.RDF.INode)
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: WithSubject(INode)
  nameWithType: TreeIndexedTripleCollection.WithSubject(INode)
  fullName: VDS.RDF.TreeIndexedTripleCollection.WithSubject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WithSubject
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 352
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the triples with a given subject.\n"
  example: []
  syntax:
    content: public override IEnumerable<Triple> WithSubject(INode subj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overrides Function WithSubject(subj As INode) As IEnumerable(Of Triple)
  overridden: VDS.RDF.BaseTripleCollection.WithSubject(VDS.RDF.INode)
  overload: VDS.RDF.TreeIndexedTripleCollection.WithSubject*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.TreeIndexedTripleCollection.WithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.WithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  id: WithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: WithPredicateObject(INode, INode)
  nameWithType: TreeIndexedTripleCollection.WithPredicateObject(INode, INode)
  fullName: VDS.RDF.TreeIndexedTripleCollection.WithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WithPredicateObject
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 378
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the triples with a given predicate and object.\n"
  example: []
  syntax:
    content: public override IEnumerable<Triple> WithPredicateObject(INode pred, INode obj)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overrides Function WithPredicateObject(pred As INode, obj As INode) As IEnumerable(Of Triple)
  overridden: VDS.RDF.BaseTripleCollection.WithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  overload: VDS.RDF.TreeIndexedTripleCollection.WithPredicateObject*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.TreeIndexedTripleCollection.WithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.WithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  id: WithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: WithSubjectObject(INode, INode)
  nameWithType: TreeIndexedTripleCollection.WithSubjectObject(INode, INode)
  fullName: VDS.RDF.TreeIndexedTripleCollection.WithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WithSubjectObject
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 404
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the triples with a given subject and object.\n"
  example: []
  syntax:
    content: public override IEnumerable<Triple> WithSubjectObject(INode subj, INode obj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overrides Function WithSubjectObject(subj As INode, obj As INode) As IEnumerable(Of Triple)
  overridden: VDS.RDF.BaseTripleCollection.WithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  overload: VDS.RDF.TreeIndexedTripleCollection.WithSubjectObject*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.TreeIndexedTripleCollection.WithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.WithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  id: WithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: WithSubjectPredicate(INode, INode)
  nameWithType: TreeIndexedTripleCollection.WithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.TreeIndexedTripleCollection.WithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WithSubjectPredicate
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 430
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the triples with a given subject and predicate.\n"
  example: []
  syntax:
    content: public override IEnumerable<Triple> WithSubjectPredicate(INode subj, INode pred)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overrides Function WithSubjectPredicate(subj As INode, pred As INode) As IEnumerable(Of Triple)
  overridden: VDS.RDF.BaseTripleCollection.WithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  overload: VDS.RDF.TreeIndexedTripleCollection.WithSubjectPredicate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.TreeIndexedTripleCollection.ObjectNodes
  commentId: P:VDS.RDF.TreeIndexedTripleCollection.ObjectNodes
  id: ObjectNodes
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: ObjectNodes
  nameWithType: TreeIndexedTripleCollection.ObjectNodes
  fullName: VDS.RDF.TreeIndexedTripleCollection.ObjectNodes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ObjectNodes
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 453
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Object Nodes.\n"
  example: []
  syntax:
    content: public override IEnumerable<INode> ObjectNodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public Overrides ReadOnly Property ObjectNodes As IEnumerable(Of INode)
  overridden: VDS.RDF.BaseTripleCollection.ObjectNodes
  overload: VDS.RDF.TreeIndexedTripleCollection.ObjectNodes*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.TreeIndexedTripleCollection.PredicateNodes
  commentId: P:VDS.RDF.TreeIndexedTripleCollection.PredicateNodes
  id: PredicateNodes
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: PredicateNodes
  nameWithType: TreeIndexedTripleCollection.PredicateNodes
  fullName: VDS.RDF.TreeIndexedTripleCollection.PredicateNodes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PredicateNodes
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 471
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Predicate Nodes.\n"
  example: []
  syntax:
    content: public override IEnumerable<INode> PredicateNodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public Overrides ReadOnly Property PredicateNodes As IEnumerable(Of INode)
  overridden: VDS.RDF.BaseTripleCollection.PredicateNodes
  overload: VDS.RDF.TreeIndexedTripleCollection.PredicateNodes*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.TreeIndexedTripleCollection.SubjectNodes
  commentId: P:VDS.RDF.TreeIndexedTripleCollection.SubjectNodes
  id: SubjectNodes
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: SubjectNodes
  nameWithType: TreeIndexedTripleCollection.SubjectNodes
  fullName: VDS.RDF.TreeIndexedTripleCollection.SubjectNodes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SubjectNodes
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 489
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Subject Nodes.\n"
  example: []
  syntax:
    content: public override IEnumerable<INode> SubjectNodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public Overrides ReadOnly Property SubjectNodes As IEnumerable(Of INode)
  overridden: VDS.RDF.BaseTripleCollection.SubjectNodes
  overload: VDS.RDF.TreeIndexedTripleCollection.SubjectNodes*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.TreeIndexedTripleCollection.Dispose
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.Dispose
  id: Dispose
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TreeIndexedTripleCollection.Dispose()
  fullName: VDS.RDF.TreeIndexedTripleCollection.Dispose()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dispose
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 507
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDisposes of the collection.\n"
  example: []
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: VDS.RDF.BaseTripleCollection.Dispose
  overload: VDS.RDF.TreeIndexedTripleCollection.Dispose*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.TreeIndexedTripleCollection.GetEnumerator
  commentId: M:VDS.RDF.TreeIndexedTripleCollection.GetEnumerator
  id: GetEnumerator
  parent: VDS.RDF.TreeIndexedTripleCollection
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: TreeIndexedTripleCollection.GetEnumerator()
  fullName: VDS.RDF.TreeIndexedTripleCollection.GetEnumerator()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetEnumerator
    path: Libraries/dotNetRDF/Core/TreeIndexedTripleCollection.cs
    startLine: 522
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the enumerator for the collection.\n"
  example: []
  syntax:
    content: public override IEnumerator<Triple> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overrides Function GetEnumerator As IEnumerator(Of Triple)
  overridden: VDS.RDF.BaseTripleCollection.GetEnumerator
  overload: VDS.RDF.TreeIndexedTripleCollection.GetEnumerator*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.Common.Collections.MultiDictionary`2
  commentId: T:VDS.Common.Collections.MultiDictionary`2
  isExternal: true
  name: MultiDictionary<TKey, TValue>
  nameWithType: MultiDictionary<TKey, TValue>
  fullName: VDS.Common.Collections.MultiDictionary<TKey, TValue>
  nameWithType.vb: MultiDictionary(Of TKey, TValue)
  fullName.vb: VDS.Common.Collections.MultiDictionary(Of TKey, TValue)
  name.vb: MultiDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: VDS.Common.Collections.MultiDictionary`2
    name: MultiDictionary
    nameWithType: MultiDictionary
    fullName: VDS.Common.Collections.MultiDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.Common.Collections.MultiDictionary`2
    name: MultiDictionary
    nameWithType: MultiDictionary
    fullName: VDS.Common.Collections.MultiDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.Common.Trees.BinaryTree`2
  commentId: T:VDS.Common.Trees.BinaryTree`2
  isExternal: true
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.BaseTripleCollection
  commentId: T:VDS.RDF.BaseTripleCollection
  parent: VDS.RDF
  name: BaseTripleCollection
  nameWithType: BaseTripleCollection
  fullName: VDS.RDF.BaseTripleCollection
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Triple>
  nameWithType: IEnumerable<Triple>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Triple>
  nameWithType.vb: IEnumerable(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple)
  name.vb: IEnumerable(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: VDS.RDF.BaseTripleCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:VDS.RDF.BaseTripleCollection.System#Collections#IEnumerable#GetEnumerator
  parent: VDS.RDF.BaseTripleCollection
  name: IEnumerable.GetEnumerator()
  nameWithType: BaseTripleCollection.IEnumerable.GetEnumerator()
  fullName: VDS.RDF.BaseTripleCollection.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: BaseTripleCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: BaseTripleCollection.IEnumerable.GetEnumerator
    fullName: VDS.RDF.BaseTripleCollection.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: BaseTripleCollection.System.Collections.IEnumerable.GetEnumerator
    fullName: VDS.RDF.BaseTripleCollection.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleCollection.TripleAdded
  commentId: E:VDS.RDF.BaseTripleCollection.TripleAdded
  parent: VDS.RDF.BaseTripleCollection
  name: TripleAdded
  nameWithType: BaseTripleCollection.TripleAdded
  fullName: VDS.RDF.BaseTripleCollection.TripleAdded
- uid: VDS.RDF.BaseTripleCollection.TripleRemoved
  commentId: E:VDS.RDF.BaseTripleCollection.TripleRemoved
  parent: VDS.RDF.BaseTripleCollection
  name: TripleRemoved
  nameWithType: BaseTripleCollection.TripleRemoved
  fullName: VDS.RDF.BaseTripleCollection.TripleRemoved
- uid: VDS.RDF.BaseTripleCollection.RaiseTripleAdded(VDS.RDF.Triple)
  commentId: M:VDS.RDF.BaseTripleCollection.RaiseTripleAdded(VDS.RDF.Triple)
  parent: VDS.RDF.BaseTripleCollection
  name: RaiseTripleAdded(Triple)
  nameWithType: BaseTripleCollection.RaiseTripleAdded(Triple)
  fullName: VDS.RDF.BaseTripleCollection.RaiseTripleAdded(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.RaiseTripleAdded(VDS.RDF.Triple)
    name: RaiseTripleAdded
    nameWithType: BaseTripleCollection.RaiseTripleAdded
    fullName: VDS.RDF.BaseTripleCollection.RaiseTripleAdded
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.RaiseTripleAdded(VDS.RDF.Triple)
    name: RaiseTripleAdded
    nameWithType: BaseTripleCollection.RaiseTripleAdded
    fullName: VDS.RDF.BaseTripleCollection.RaiseTripleAdded
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleCollection.RaiseTripleRemoved(VDS.RDF.Triple)
  commentId: M:VDS.RDF.BaseTripleCollection.RaiseTripleRemoved(VDS.RDF.Triple)
  parent: VDS.RDF.BaseTripleCollection
  name: RaiseTripleRemoved(Triple)
  nameWithType: BaseTripleCollection.RaiseTripleRemoved(Triple)
  fullName: VDS.RDF.BaseTripleCollection.RaiseTripleRemoved(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.RaiseTripleRemoved(VDS.RDF.Triple)
    name: RaiseTripleRemoved
    nameWithType: BaseTripleCollection.RaiseTripleRemoved
    fullName: VDS.RDF.BaseTripleCollection.RaiseTripleRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.RaiseTripleRemoved(VDS.RDF.Triple)
    name: RaiseTripleRemoved
    nameWithType: BaseTripleCollection.RaiseTripleRemoved
    fullName: VDS.RDF.BaseTripleCollection.RaiseTripleRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TreeIndexedTripleCollection>()
  nameWithType: Extensions.AsEnumerable<TreeIndexedTripleCollection>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.TreeIndexedTripleCollection>()
  nameWithType.vb: Extensions.AsEnumerable(Of TreeIndexedTripleCollection)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.TreeIndexedTripleCollection)()
  name.vb: AsEnumerable(Of TreeIndexedTripleCollection)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TreeIndexedTripleCollection>
    nameWithType: Extensions.AsEnumerable<TreeIndexedTripleCollection>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.TreeIndexedTripleCollection>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TreeIndexedTripleCollection)
    nameWithType: Extensions.AsEnumerable(Of TreeIndexedTripleCollection)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.TreeIndexedTripleCollection)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}.VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsDisjoint<Triple>(IEnumerable<Triple>)
  nameWithType: Extensions.IsDisjoint<Triple>(IEnumerable<Triple>)
  fullName: VDS.RDF.Extensions.IsDisjoint<VDS.RDF.Triple>(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: Extensions.IsDisjoint(Of Triple)(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.Extensions.IsDisjoint(Of VDS.RDF.Triple)(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: IsDisjoint(Of Triple)(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0})
    name: IsDisjoint<Triple>
    nameWithType: Extensions.IsDisjoint<Triple>
    fullName: VDS.RDF.Extensions.IsDisjoint<VDS.RDF.Triple>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0})
    name: IsDisjoint(Of Triple)
    nameWithType: Extensions.IsDisjoint(Of Triple)
    fullName: VDS.RDF.Extensions.IsDisjoint(Of VDS.RDF.Triple)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}.VDS.RDF.Extensions.ChunkBy``1(System.Int32)
  commentId: M:VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: ChunkBy<Triple>(Int32)
  nameWithType: Extensions.ChunkBy<Triple>(Int32)
  fullName: VDS.RDF.Extensions.ChunkBy<VDS.RDF.Triple>(System.Int32)
  nameWithType.vb: Extensions.ChunkBy(Of Triple)(Int32)
  fullName.vb: VDS.RDF.Extensions.ChunkBy(Of VDS.RDF.Triple)(System.Int32)
  name.vb: ChunkBy(Of Triple)(Int32)
  spec.csharp:
  - uid: VDS.RDF.Extensions.ChunkBy``1(System.Int32)
    name: ChunkBy<Triple>
    nameWithType: Extensions.ChunkBy<Triple>
    fullName: VDS.RDF.Extensions.ChunkBy<VDS.RDF.Triple>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.ChunkBy``1(System.Int32)
    name: ChunkBy(Of Triple)
    nameWithType: Extensions.ChunkBy(Of Triple)
    fullName: VDS.RDF.Extensions.ChunkBy(Of VDS.RDF.Triple)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}.VDS.RDF.Extensions.WithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.WithSubject(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.WithSubject(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
  name: WithSubject(INode)
  nameWithType: Extensions.WithSubject(INode)
  fullName: VDS.RDF.Extensions.WithSubject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.WithSubject(VDS.RDF.INode)
    name: WithSubject
    nameWithType: Extensions.WithSubject
    fullName: VDS.RDF.Extensions.WithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.WithSubject(VDS.RDF.INode)
    name: WithSubject
    nameWithType: Extensions.WithSubject
    fullName: VDS.RDF.Extensions.WithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}.VDS.RDF.Extensions.WithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.WithPredicate(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.WithPredicate(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
  name: WithPredicate(INode)
  nameWithType: Extensions.WithPredicate(INode)
  fullName: VDS.RDF.Extensions.WithPredicate(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.WithPredicate(VDS.RDF.INode)
    name: WithPredicate
    nameWithType: Extensions.WithPredicate
    fullName: VDS.RDF.Extensions.WithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.WithPredicate(VDS.RDF.INode)
    name: WithPredicate
    nameWithType: Extensions.WithPredicate
    fullName: VDS.RDF.Extensions.WithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}.VDS.RDF.Extensions.WithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.WithObject(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.WithObject(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
  name: WithObject(INode)
  nameWithType: Extensions.WithObject(INode)
  fullName: VDS.RDF.Extensions.WithObject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.WithObject(VDS.RDF.INode)
    name: WithObject
    nameWithType: Extensions.WithObject
    fullName: VDS.RDF.Extensions.WithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.WithObject(VDS.RDF.INode)
    name: WithObject
    nameWithType: Extensions.WithObject
    fullName: VDS.RDF.Extensions.WithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: IsDisjoint<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType: Extensions.IsDisjoint<T>(IEnumerable<T>, IEnumerable<T>)
  fullName: VDS.RDF.Extensions.IsDisjoint<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Extensions.IsDisjoint(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName.vb: VDS.RDF.Extensions.IsDisjoint(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsDisjoint(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: IsDisjoint<T>
    nameWithType: Extensions.IsDisjoint<T>
    fullName: VDS.RDF.Extensions.IsDisjoint<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: IsDisjoint(Of T)
    nameWithType: Extensions.IsDisjoint(Of T)
    fullName: VDS.RDF.Extensions.IsDisjoint(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: ChunkBy<T>(IEnumerable<T>, Int32)
  nameWithType: Extensions.ChunkBy<T>(IEnumerable<T>, Int32)
  fullName: VDS.RDF.Extensions.ChunkBy<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  nameWithType.vb: Extensions.ChunkBy(Of T)(IEnumerable(Of T), Int32)
  fullName.vb: VDS.RDF.Extensions.ChunkBy(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: ChunkBy(Of T)(IEnumerable(Of T), Int32)
  spec.csharp:
  - uid: VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ChunkBy<T>
    nameWithType: Extensions.ChunkBy<T>
    fullName: VDS.RDF.Extensions.ChunkBy<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ChunkBy(Of T)
    nameWithType: Extensions.ChunkBy(Of T)
    fullName: VDS.RDF.Extensions.ChunkBy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.WithSubject(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.WithSubject(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
  isExternal: true
  name: WithSubject(IEnumerable<Triple>, INode)
  nameWithType: Extensions.WithSubject(IEnumerable<Triple>, INode)
  fullName: VDS.RDF.Extensions.WithSubject(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>, VDS.RDF.INode)
  nameWithType.vb: Extensions.WithSubject(IEnumerable(Of Triple), INode)
  fullName.vb: VDS.RDF.Extensions.WithSubject(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple), VDS.RDF.INode)
  name.vb: WithSubject(IEnumerable(Of Triple), INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.WithSubject(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
    name: WithSubject
    nameWithType: Extensions.WithSubject
    fullName: VDS.RDF.Extensions.WithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.WithSubject(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
    name: WithSubject
    nameWithType: Extensions.WithSubject
    fullName: VDS.RDF.Extensions.WithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.WithPredicate(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.WithPredicate(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
  isExternal: true
  name: WithPredicate(IEnumerable<Triple>, INode)
  nameWithType: Extensions.WithPredicate(IEnumerable<Triple>, INode)
  fullName: VDS.RDF.Extensions.WithPredicate(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>, VDS.RDF.INode)
  nameWithType.vb: Extensions.WithPredicate(IEnumerable(Of Triple), INode)
  fullName.vb: VDS.RDF.Extensions.WithPredicate(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple), VDS.RDF.INode)
  name.vb: WithPredicate(IEnumerable(Of Triple), INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.WithPredicate(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
    name: WithPredicate
    nameWithType: Extensions.WithPredicate
    fullName: VDS.RDF.Extensions.WithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.WithPredicate(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
    name: WithPredicate
    nameWithType: Extensions.WithPredicate
    fullName: VDS.RDF.Extensions.WithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.WithObject(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.WithObject(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
  isExternal: true
  name: WithObject(IEnumerable<Triple>, INode)
  nameWithType: Extensions.WithObject(IEnumerable<Triple>, INode)
  fullName: VDS.RDF.Extensions.WithObject(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>, VDS.RDF.INode)
  nameWithType.vb: Extensions.WithObject(IEnumerable(Of Triple), INode)
  fullName.vb: VDS.RDF.Extensions.WithObject(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple), VDS.RDF.INode)
  name.vb: WithObject(IEnumerable(Of Triple), INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.WithObject(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
    name: WithObject
    nameWithType: Extensions.WithObject
    fullName: VDS.RDF.Extensions.WithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.WithObject(System.Collections.Generic.IEnumerable{VDS.RDF.Triple},VDS.RDF.INode)
    name: WithObject
    nameWithType: Extensions.WithObject
    fullName: VDS.RDF.Extensions.WithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.#ctor*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.#ctor
  name: TreeIndexedTripleCollection
  nameWithType: TreeIndexedTripleCollection.TreeIndexedTripleCollection
  fullName: VDS.RDF.TreeIndexedTripleCollection.TreeIndexedTripleCollection
- uid: VDS.Common.Collections.MultiDictionaryMode
  commentId: T:VDS.Common.Collections.MultiDictionaryMode
  parent: VDS.Common.Collections
  isExternal: true
  name: MultiDictionaryMode
  nameWithType: MultiDictionaryMode
  fullName: VDS.Common.Collections.MultiDictionaryMode
- uid: VDS.Common.Collections
  commentId: N:VDS.Common.Collections
  isExternal: true
  name: VDS.Common.Collections
  nameWithType: VDS.Common.Collections
  fullName: VDS.Common.Collections
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.BaseTripleCollection.Add(VDS.RDF.Triple)
  commentId: M:VDS.RDF.BaseTripleCollection.Add(VDS.RDF.Triple)
  parent: VDS.RDF.BaseTripleCollection
  name: Add(Triple)
  nameWithType: BaseTripleCollection.Add(Triple)
  fullName: VDS.RDF.BaseTripleCollection.Add(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.Add(VDS.RDF.Triple)
    name: Add
    nameWithType: BaseTripleCollection.Add
    fullName: VDS.RDF.BaseTripleCollection.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.Add(VDS.RDF.Triple)
    name: Add
    nameWithType: BaseTripleCollection.Add
    fullName: VDS.RDF.BaseTripleCollection.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.Add*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.Add
  name: Add
  nameWithType: TreeIndexedTripleCollection.Add
  fullName: VDS.RDF.TreeIndexedTripleCollection.Add
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: VDS.RDF.BaseTripleCollection.Contains(VDS.RDF.Triple)
  commentId: M:VDS.RDF.BaseTripleCollection.Contains(VDS.RDF.Triple)
  parent: VDS.RDF.BaseTripleCollection
  name: Contains(Triple)
  nameWithType: BaseTripleCollection.Contains(Triple)
  fullName: VDS.RDF.BaseTripleCollection.Contains(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.Contains(VDS.RDF.Triple)
    name: Contains
    nameWithType: BaseTripleCollection.Contains
    fullName: VDS.RDF.BaseTripleCollection.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.Contains(VDS.RDF.Triple)
    name: Contains
    nameWithType: BaseTripleCollection.Contains
    fullName: VDS.RDF.BaseTripleCollection.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.Contains*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.Contains
  name: Contains
  nameWithType: TreeIndexedTripleCollection.Contains
  fullName: VDS.RDF.TreeIndexedTripleCollection.Contains
- uid: VDS.RDF.BaseTripleCollection.Count
  commentId: P:VDS.RDF.BaseTripleCollection.Count
  parent: VDS.RDF.BaseTripleCollection
  name: Count
  nameWithType: BaseTripleCollection.Count
  fullName: VDS.RDF.BaseTripleCollection.Count
- uid: VDS.RDF.TreeIndexedTripleCollection.Count*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.Count
  name: Count
  nameWithType: TreeIndexedTripleCollection.Count
  fullName: VDS.RDF.TreeIndexedTripleCollection.Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.BaseTripleCollection.Delete(VDS.RDF.Triple)
  commentId: M:VDS.RDF.BaseTripleCollection.Delete(VDS.RDF.Triple)
  parent: VDS.RDF.BaseTripleCollection
  name: Delete(Triple)
  nameWithType: BaseTripleCollection.Delete(Triple)
  fullName: VDS.RDF.BaseTripleCollection.Delete(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.Delete(VDS.RDF.Triple)
    name: Delete
    nameWithType: BaseTripleCollection.Delete
    fullName: VDS.RDF.BaseTripleCollection.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.Delete(VDS.RDF.Triple)
    name: Delete
    nameWithType: BaseTripleCollection.Delete
    fullName: VDS.RDF.BaseTripleCollection.Delete
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.Delete*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.Delete
  name: Delete
  nameWithType: TreeIndexedTripleCollection.Delete
  fullName: VDS.RDF.TreeIndexedTripleCollection.Delete
- uid: VDS.RDF.BaseTripleCollection.Item(VDS.RDF.Triple)
  commentId: P:VDS.RDF.BaseTripleCollection.Item(VDS.RDF.Triple)
  parent: VDS.RDF.BaseTripleCollection
  name: Item[Triple]
  nameWithType: BaseTripleCollection.Item[Triple]
  fullName: VDS.RDF.BaseTripleCollection.Item[VDS.RDF.Triple]
  nameWithType.vb: BaseTripleCollection.Item(Triple)
  fullName.vb: VDS.RDF.BaseTripleCollection.Item(VDS.RDF.Triple)
  name.vb: Item(Triple)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.Item(VDS.RDF.Triple)
    name: Item
    nameWithType: BaseTripleCollection.Item
    fullName: VDS.RDF.BaseTripleCollection.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.Item(VDS.RDF.Triple)
    name: Item
    nameWithType: BaseTripleCollection.Item
    fullName: VDS.RDF.BaseTripleCollection.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.Item*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.Item
  name: Item
  nameWithType: TreeIndexedTripleCollection.Item
  fullName: VDS.RDF.TreeIndexedTripleCollection.Item
- uid: VDS.RDF.BaseTripleCollection.WithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseTripleCollection.WithObject(VDS.RDF.INode)
  parent: VDS.RDF.BaseTripleCollection
  name: WithObject(INode)
  nameWithType: BaseTripleCollection.WithObject(INode)
  fullName: VDS.RDF.BaseTripleCollection.WithObject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.WithObject(VDS.RDF.INode)
    name: WithObject
    nameWithType: BaseTripleCollection.WithObject
    fullName: VDS.RDF.BaseTripleCollection.WithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.WithObject(VDS.RDF.INode)
    name: WithObject
    nameWithType: BaseTripleCollection.WithObject
    fullName: VDS.RDF.BaseTripleCollection.WithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.WithObject*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.WithObject
  name: WithObject
  nameWithType: TreeIndexedTripleCollection.WithObject
  fullName: VDS.RDF.TreeIndexedTripleCollection.WithObject
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.BaseTripleCollection.WithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseTripleCollection.WithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.BaseTripleCollection
  name: WithPredicate(INode)
  nameWithType: BaseTripleCollection.WithPredicate(INode)
  fullName: VDS.RDF.BaseTripleCollection.WithPredicate(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.WithPredicate(VDS.RDF.INode)
    name: WithPredicate
    nameWithType: BaseTripleCollection.WithPredicate
    fullName: VDS.RDF.BaseTripleCollection.WithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.WithPredicate(VDS.RDF.INode)
    name: WithPredicate
    nameWithType: BaseTripleCollection.WithPredicate
    fullName: VDS.RDF.BaseTripleCollection.WithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.WithPredicate*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.WithPredicate
  name: WithPredicate
  nameWithType: TreeIndexedTripleCollection.WithPredicate
  fullName: VDS.RDF.TreeIndexedTripleCollection.WithPredicate
- uid: VDS.RDF.BaseTripleCollection.WithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseTripleCollection.WithSubject(VDS.RDF.INode)
  parent: VDS.RDF.BaseTripleCollection
  name: WithSubject(INode)
  nameWithType: BaseTripleCollection.WithSubject(INode)
  fullName: VDS.RDF.BaseTripleCollection.WithSubject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.WithSubject(VDS.RDF.INode)
    name: WithSubject
    nameWithType: BaseTripleCollection.WithSubject
    fullName: VDS.RDF.BaseTripleCollection.WithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.WithSubject(VDS.RDF.INode)
    name: WithSubject
    nameWithType: BaseTripleCollection.WithSubject
    fullName: VDS.RDF.BaseTripleCollection.WithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.WithSubject*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.WithSubject
  name: WithSubject
  nameWithType: TreeIndexedTripleCollection.WithSubject
  fullName: VDS.RDF.TreeIndexedTripleCollection.WithSubject
- uid: VDS.RDF.BaseTripleCollection.WithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseTripleCollection.WithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.BaseTripleCollection
  name: WithPredicateObject(INode, INode)
  nameWithType: BaseTripleCollection.WithPredicateObject(INode, INode)
  fullName: VDS.RDF.BaseTripleCollection.WithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.WithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: WithPredicateObject
    nameWithType: BaseTripleCollection.WithPredicateObject
    fullName: VDS.RDF.BaseTripleCollection.WithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.WithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: WithPredicateObject
    nameWithType: BaseTripleCollection.WithPredicateObject
    fullName: VDS.RDF.BaseTripleCollection.WithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.WithPredicateObject*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.WithPredicateObject
  name: WithPredicateObject
  nameWithType: TreeIndexedTripleCollection.WithPredicateObject
  fullName: VDS.RDF.TreeIndexedTripleCollection.WithPredicateObject
- uid: VDS.RDF.BaseTripleCollection.WithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseTripleCollection.WithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.BaseTripleCollection
  name: WithSubjectObject(INode, INode)
  nameWithType: BaseTripleCollection.WithSubjectObject(INode, INode)
  fullName: VDS.RDF.BaseTripleCollection.WithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.WithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: WithSubjectObject
    nameWithType: BaseTripleCollection.WithSubjectObject
    fullName: VDS.RDF.BaseTripleCollection.WithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.WithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: WithSubjectObject
    nameWithType: BaseTripleCollection.WithSubjectObject
    fullName: VDS.RDF.BaseTripleCollection.WithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.WithSubjectObject*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.WithSubjectObject
  name: WithSubjectObject
  nameWithType: TreeIndexedTripleCollection.WithSubjectObject
  fullName: VDS.RDF.TreeIndexedTripleCollection.WithSubjectObject
- uid: VDS.RDF.BaseTripleCollection.WithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseTripleCollection.WithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.BaseTripleCollection
  name: WithSubjectPredicate(INode, INode)
  nameWithType: BaseTripleCollection.WithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.BaseTripleCollection.WithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.WithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: WithSubjectPredicate
    nameWithType: BaseTripleCollection.WithSubjectPredicate
    fullName: VDS.RDF.BaseTripleCollection.WithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.WithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: WithSubjectPredicate
    nameWithType: BaseTripleCollection.WithSubjectPredicate
    fullName: VDS.RDF.BaseTripleCollection.WithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.WithSubjectPredicate*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.WithSubjectPredicate
  name: WithSubjectPredicate
  nameWithType: TreeIndexedTripleCollection.WithSubjectPredicate
  fullName: VDS.RDF.TreeIndexedTripleCollection.WithSubjectPredicate
- uid: VDS.RDF.BaseTripleCollection.ObjectNodes
  commentId: P:VDS.RDF.BaseTripleCollection.ObjectNodes
  parent: VDS.RDF.BaseTripleCollection
  name: ObjectNodes
  nameWithType: BaseTripleCollection.ObjectNodes
  fullName: VDS.RDF.BaseTripleCollection.ObjectNodes
- uid: VDS.RDF.TreeIndexedTripleCollection.ObjectNodes*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.ObjectNodes
  name: ObjectNodes
  nameWithType: TreeIndexedTripleCollection.ObjectNodes
  fullName: VDS.RDF.TreeIndexedTripleCollection.ObjectNodes
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INode>
  nameWithType: IEnumerable<INode>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.INode>
  nameWithType.vb: IEnumerable(Of INode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.INode)
  name.vb: IEnumerable(Of INode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleCollection.PredicateNodes
  commentId: P:VDS.RDF.BaseTripleCollection.PredicateNodes
  parent: VDS.RDF.BaseTripleCollection
  name: PredicateNodes
  nameWithType: BaseTripleCollection.PredicateNodes
  fullName: VDS.RDF.BaseTripleCollection.PredicateNodes
- uid: VDS.RDF.TreeIndexedTripleCollection.PredicateNodes*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.PredicateNodes
  name: PredicateNodes
  nameWithType: TreeIndexedTripleCollection.PredicateNodes
  fullName: VDS.RDF.TreeIndexedTripleCollection.PredicateNodes
- uid: VDS.RDF.BaseTripleCollection.SubjectNodes
  commentId: P:VDS.RDF.BaseTripleCollection.SubjectNodes
  parent: VDS.RDF.BaseTripleCollection
  name: SubjectNodes
  nameWithType: BaseTripleCollection.SubjectNodes
  fullName: VDS.RDF.BaseTripleCollection.SubjectNodes
- uid: VDS.RDF.TreeIndexedTripleCollection.SubjectNodes*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.SubjectNodes
  name: SubjectNodes
  nameWithType: TreeIndexedTripleCollection.SubjectNodes
  fullName: VDS.RDF.TreeIndexedTripleCollection.SubjectNodes
- uid: VDS.RDF.BaseTripleCollection.Dispose
  commentId: M:VDS.RDF.BaseTripleCollection.Dispose
  parent: VDS.RDF.BaseTripleCollection
  name: Dispose()
  nameWithType: BaseTripleCollection.Dispose()
  fullName: VDS.RDF.BaseTripleCollection.Dispose()
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.Dispose
    name: Dispose
    nameWithType: BaseTripleCollection.Dispose
    fullName: VDS.RDF.BaseTripleCollection.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.Dispose
    name: Dispose
    nameWithType: BaseTripleCollection.Dispose
    fullName: VDS.RDF.BaseTripleCollection.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.Dispose*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.Dispose
  name: Dispose
  nameWithType: TreeIndexedTripleCollection.Dispose
  fullName: VDS.RDF.TreeIndexedTripleCollection.Dispose
- uid: VDS.RDF.BaseTripleCollection.GetEnumerator
  commentId: M:VDS.RDF.BaseTripleCollection.GetEnumerator
  parent: VDS.RDF.BaseTripleCollection
  name: GetEnumerator()
  nameWithType: BaseTripleCollection.GetEnumerator()
  fullName: VDS.RDF.BaseTripleCollection.GetEnumerator()
  spec.csharp:
  - uid: VDS.RDF.BaseTripleCollection.GetEnumerator
    name: GetEnumerator
    nameWithType: BaseTripleCollection.GetEnumerator
    fullName: VDS.RDF.BaseTripleCollection.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleCollection.GetEnumerator
    name: GetEnumerator
    nameWithType: BaseTripleCollection.GetEnumerator
    fullName: VDS.RDF.BaseTripleCollection.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TreeIndexedTripleCollection.GetEnumerator*
  commentId: Overload:VDS.RDF.TreeIndexedTripleCollection.GetEnumerator
  name: GetEnumerator
  nameWithType: TreeIndexedTripleCollection.GetEnumerator
  fullName: VDS.RDF.TreeIndexedTripleCollection.GetEnumerator
- uid: System.Collections.Generic.IEnumerator{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerator{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Triple>
  nameWithType: IEnumerator<Triple>
  fullName: System.Collections.Generic.IEnumerator<VDS.RDF.Triple>
  nameWithType.vb: IEnumerator(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerator(Of VDS.RDF.Triple)
  name.vb: IEnumerator(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
