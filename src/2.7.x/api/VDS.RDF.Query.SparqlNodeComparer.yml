### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.SparqlNodeComparer
  commentId: T:VDS.RDF.Query.SparqlNodeComparer
  id: SparqlNodeComparer
  parent: VDS.RDF.Query
  children:
  - VDS.RDF.Query.SparqlNodeComparer.Compare(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.SparqlNodeComparer.Compare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  - VDS.RDF.Query.SparqlNodeComparer.DateCompare(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.SparqlNodeComparer.DateCompare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  - VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  - VDS.RDF.Query.SparqlNodeComparer.NumericCompare(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.Query.Expressions.SparqlNumericType)
  - VDS.RDF.Query.SparqlNodeComparer.NumericCompare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode,VDS.RDF.Query.Expressions.SparqlNumericType)
  langs:
  - csharp
  - vb
  name: SparqlNodeComparer
  nameWithType: SparqlNodeComparer
  fullName: VDS.RDF.Query.SparqlNodeComparer
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlNodeComparer
    path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nComparer class for implementing the SPARQL semantics for the relational operators.\n"
  example: []
  syntax:
    content: 'public class SparqlNodeComparer : IComparer<INode>, IComparer<IValuedNode>'
    content.vb: >-
      Public Class SparqlNodeComparer
          Implements IComparer(Of INode), IComparer(Of IValuedNode)
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Query.SparqlOrderingComparer
  implements:
  - System.Collections.Generic.IComparer{VDS.RDF.INode}
  - System.Collections.Generic.IComparer{VDS.RDF.Nodes.IValuedNode}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.SparqlNodeComparer.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.SparqlNodeComparer.Compare(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.SparqlNodeComparer.Compare(VDS.RDF.INode,VDS.RDF.INode)
  id: Compare(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.SparqlNodeComparer
  langs:
  - csharp
  - vb
  name: Compare(INode, INode)
  nameWithType: SparqlNodeComparer.Compare(INode, INode)
  fullName: VDS.RDF.Query.SparqlNodeComparer.Compare(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Compare
    path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCompares two Nodes.\n"
  example: []
  syntax:
    content: public virtual int Compare(INode x, INode y)
    parameters:
    - id: x
      type: VDS.RDF.INode
      description: Node.
    - id: y
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overridable Function Compare(x As INode, y As INode) As Integer
  overload: VDS.RDF.Query.SparqlNodeComparer.Compare*
  implements:
  - System.Collections.Generic.IComparer{VDS.RDF.INode}.Compare(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.SparqlNodeComparer.Compare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  commentId: M:VDS.RDF.Query.SparqlNodeComparer.Compare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  id: Compare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  parent: VDS.RDF.Query.SparqlNodeComparer
  langs:
  - csharp
  - vb
  name: Compare(IValuedNode, IValuedNode)
  nameWithType: SparqlNodeComparer.Compare(IValuedNode, IValuedNode)
  fullName: VDS.RDF.Query.SparqlNodeComparer.Compare(VDS.RDF.Nodes.IValuedNode, VDS.RDF.Nodes.IValuedNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Compare
    path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
    startLine: 176
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCompares two valued Nodes.\n"
  example: []
  syntax:
    content: public virtual int Compare(IValuedNode x, IValuedNode y)
    parameters:
    - id: x
      type: VDS.RDF.Nodes.IValuedNode
      description: Node.
    - id: y
      type: VDS.RDF.Nodes.IValuedNode
      description: Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overridable Function Compare(x As IValuedNode, y As IValuedNode) As Integer
  overload: VDS.RDF.Query.SparqlNodeComparer.Compare*
  implements:
  - System.Collections.Generic.IComparer{VDS.RDF.Nodes.IValuedNode}.Compare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.SparqlNodeComparer.NumericCompare(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.Query.Expressions.SparqlNumericType)
  commentId: M:VDS.RDF.Query.SparqlNodeComparer.NumericCompare(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.Query.Expressions.SparqlNumericType)
  id: NumericCompare(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.Query.Expressions.SparqlNumericType)
  parent: VDS.RDF.Query.SparqlNodeComparer
  langs:
  - csharp
  - vb
  name: NumericCompare(INode, INode, SparqlNumericType)
  nameWithType: SparqlNodeComparer.NumericCompare(INode, INode, SparqlNumericType)
  fullName: VDS.RDF.Query.SparqlNodeComparer.NumericCompare(VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.Query.Expressions.SparqlNumericType)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NumericCompare
    path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
    startLine: 304
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCompares two Nodes for Numeric Ordering.\n"
  example: []
  syntax:
    content: protected virtual int NumericCompare(INode x, INode y, SparqlNumericType type)
    parameters:
    - id: x
      type: VDS.RDF.INode
      description: Node.
    - id: y
      type: VDS.RDF.INode
      description: Node.
    - id: type
      type: VDS.RDF.Query.Expressions.SparqlNumericType
      description: Numeric Type.
    return:
      type: System.Int32
      description: ''
    content.vb: Protected Overridable Function NumericCompare(x As INode, y As INode, type As SparqlNumericType) As Integer
  overload: VDS.RDF.Query.SparqlNodeComparer.NumericCompare*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.Query.SparqlNodeComparer.NumericCompare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode,VDS.RDF.Query.Expressions.SparqlNumericType)
  commentId: M:VDS.RDF.Query.SparqlNodeComparer.NumericCompare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode,VDS.RDF.Query.Expressions.SparqlNumericType)
  id: NumericCompare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode,VDS.RDF.Query.Expressions.SparqlNumericType)
  parent: VDS.RDF.Query.SparqlNodeComparer
  langs:
  - csharp
  - vb
  name: NumericCompare(IValuedNode, IValuedNode, SparqlNumericType)
  nameWithType: SparqlNodeComparer.NumericCompare(IValuedNode, IValuedNode, SparqlNumericType)
  fullName: VDS.RDF.Query.SparqlNodeComparer.NumericCompare(VDS.RDF.Nodes.IValuedNode, VDS.RDF.Nodes.IValuedNode, VDS.RDF.Query.Expressions.SparqlNumericType)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NumericCompare
    path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
    startLine: 316
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCompares two Nodes for Numeric Ordering.\n"
  example: []
  syntax:
    content: protected virtual int NumericCompare(IValuedNode x, IValuedNode y, SparqlNumericType type)
    parameters:
    - id: x
      type: VDS.RDF.Nodes.IValuedNode
      description: Node.
    - id: y
      type: VDS.RDF.Nodes.IValuedNode
      description: Node.
    - id: type
      type: VDS.RDF.Query.Expressions.SparqlNumericType
      description: Numeric Type.
    return:
      type: System.Int32
      description: ''
    content.vb: Protected Overridable Function NumericCompare(x As IValuedNode, y As IValuedNode, type As SparqlNumericType) As Integer
  overload: VDS.RDF.Query.SparqlNodeComparer.NumericCompare*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare(VDS.RDF.INode,VDS.RDF.INode)
  id: DateTimeCompare(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.SparqlNodeComparer
  langs:
  - csharp
  - vb
  name: DateTimeCompare(INode, INode)
  nameWithType: SparqlNodeComparer.DateTimeCompare(INode, INode)
  fullName: VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DateTimeCompare
    path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
    startLine: 342
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCompares two Date Times for Date Time ordering.\n"
  example: []
  syntax:
    content: protected virtual int DateTimeCompare(INode x, INode y)
    parameters:
    - id: x
      type: VDS.RDF.INode
      description: Node.
    - id: y
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Protected Overridable Function DateTimeCompare(x As INode, y As INode) As Integer
  overload: VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  commentId: M:VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  id: DateTimeCompare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  parent: VDS.RDF.Query.SparqlNodeComparer
  langs:
  - csharp
  - vb
  name: DateTimeCompare(IValuedNode, IValuedNode)
  nameWithType: SparqlNodeComparer.DateTimeCompare(IValuedNode, IValuedNode)
  fullName: VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare(VDS.RDF.Nodes.IValuedNode, VDS.RDF.Nodes.IValuedNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DateTimeCompare
    path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
    startLine: 353
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCompares two Date Times for Date Time ordering.\n"
  example: []
  syntax:
    content: protected virtual int DateTimeCompare(IValuedNode x, IValuedNode y)
    parameters:
    - id: x
      type: VDS.RDF.Nodes.IValuedNode
      description: Node.
    - id: y
      type: VDS.RDF.Nodes.IValuedNode
      description: Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Protected Overridable Function DateTimeCompare(x As IValuedNode, y As IValuedNode) As Integer
  overload: VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.Query.SparqlNodeComparer.DateCompare(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.SparqlNodeComparer.DateCompare(VDS.RDF.INode,VDS.RDF.INode)
  id: DateCompare(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.SparqlNodeComparer
  langs:
  - csharp
  - vb
  name: DateCompare(INode, INode)
  nameWithType: SparqlNodeComparer.DateCompare(INode, INode)
  fullName: VDS.RDF.Query.SparqlNodeComparer.DateCompare(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DateCompare
    path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
    startLine: 395
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCompares two Dates for Date ordering.\n"
  example: []
  syntax:
    content: protected virtual int DateCompare(INode x, INode y)
    parameters:
    - id: x
      type: VDS.RDF.INode
      description: Node.
    - id: y
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Protected Overridable Function DateCompare(x As INode, y As INode) As Integer
  overload: VDS.RDF.Query.SparqlNodeComparer.DateCompare*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.Query.SparqlNodeComparer.DateCompare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  commentId: M:VDS.RDF.Query.SparqlNodeComparer.DateCompare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  id: DateCompare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  parent: VDS.RDF.Query.SparqlNodeComparer
  langs:
  - csharp
  - vb
  name: DateCompare(IValuedNode, IValuedNode)
  nameWithType: SparqlNodeComparer.DateCompare(IValuedNode, IValuedNode)
  fullName: VDS.RDF.Query.SparqlNodeComparer.DateCompare(VDS.RDF.Nodes.IValuedNode, VDS.RDF.Nodes.IValuedNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DateCompare
    path: Libraries/dotNetRDF/Query/SparqlNodeComparer.cs
    startLine: 406
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCompares two Dates for Date ordering.\n"
  example: []
  syntax:
    content: protected virtual int DateCompare(IValuedNode x, IValuedNode y)
    parameters:
    - id: x
      type: VDS.RDF.Nodes.IValuedNode
      description: Node.
    - id: y
      type: VDS.RDF.Nodes.IValuedNode
      description: Node.
    return:
      type: System.Int32
      description: ''
    content.vb: Protected Overridable Function DateCompare(x As IValuedNode, y As IValuedNode) As Integer
  overload: VDS.RDF.Query.SparqlNodeComparer.DateCompare*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IComparer{VDS.RDF.INode}
  commentId: T:System.Collections.Generic.IComparer{VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<INode>
  nameWithType: IComparer<INode>
  fullName: System.Collections.Generic.IComparer<VDS.RDF.INode>
  nameWithType.vb: IComparer(Of INode)
  fullName.vb: System.Collections.Generic.IComparer(Of VDS.RDF.INode)
  name.vb: IComparer(Of INode)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer{VDS.RDF.Nodes.IValuedNode}
  commentId: T:System.Collections.Generic.IComparer{VDS.RDF.Nodes.IValuedNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<IValuedNode>
  nameWithType: IComparer<IValuedNode>
  fullName: System.Collections.Generic.IComparer<VDS.RDF.Nodes.IValuedNode>
  nameWithType.vb: IComparer(Of IValuedNode)
  fullName.vb: System.Collections.Generic.IComparer(Of VDS.RDF.Nodes.IValuedNode)
  name.vb: IComparer(Of IValuedNode)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Nodes.IValuedNode
    name: IValuedNode
    nameWithType: IValuedNode
    fullName: VDS.RDF.Nodes.IValuedNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Nodes.IValuedNode
    name: IValuedNode
    nameWithType: IValuedNode
    fullName: VDS.RDF.Nodes.IValuedNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlNodeComparer.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlNodeComparer>()
  nameWithType: Extensions.AsEnumerable<SparqlNodeComparer>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlNodeComparer>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlNodeComparer)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlNodeComparer)()
  name.vb: AsEnumerable(Of SparqlNodeComparer)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlNodeComparer>
    nameWithType: Extensions.AsEnumerable<SparqlNodeComparer>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlNodeComparer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlNodeComparer)
    nameWithType: Extensions.AsEnumerable(Of SparqlNodeComparer)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlNodeComparer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.SparqlNodeComparer.Compare*
  commentId: Overload:VDS.RDF.Query.SparqlNodeComparer.Compare
  name: Compare
  nameWithType: SparqlNodeComparer.Compare
  fullName: VDS.RDF.Query.SparqlNodeComparer.Compare
- uid: System.Collections.Generic.IComparer{VDS.RDF.INode}.Compare(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:System.Collections.Generic.IComparer{VDS.RDF.INode}.Compare(VDS.RDF.INode,VDS.RDF.INode)
  parent: System.Collections.Generic.IComparer{VDS.RDF.INode}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(INode, INode)
  nameWithType: IComparer<INode>.Compare(INode, INode)
  fullName: System.Collections.Generic.IComparer<VDS.RDF.INode>.Compare(VDS.RDF.INode, VDS.RDF.INode)
  nameWithType.vb: IComparer(Of INode).Compare(INode, INode)
  fullName.vb: System.Collections.Generic.IComparer(Of VDS.RDF.INode).Compare(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<INode>.Compare
    fullName: System.Collections.Generic.IComparer<VDS.RDF.INode>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of INode).Compare
    fullName: System.Collections.Generic.IComparer(Of VDS.RDF.INode).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer{VDS.RDF.Nodes.IValuedNode}.Compare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  commentId: M:System.Collections.Generic.IComparer{VDS.RDF.Nodes.IValuedNode}.Compare(VDS.RDF.Nodes.IValuedNode,VDS.RDF.Nodes.IValuedNode)
  parent: System.Collections.Generic.IComparer{VDS.RDF.Nodes.IValuedNode}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(IValuedNode, IValuedNode)
  nameWithType: IComparer<IValuedNode>.Compare(IValuedNode, IValuedNode)
  fullName: System.Collections.Generic.IComparer<VDS.RDF.Nodes.IValuedNode>.Compare(VDS.RDF.Nodes.IValuedNode, VDS.RDF.Nodes.IValuedNode)
  nameWithType.vb: IComparer(Of IValuedNode).Compare(IValuedNode, IValuedNode)
  fullName.vb: System.Collections.Generic.IComparer(Of VDS.RDF.Nodes.IValuedNode).Compare(VDS.RDF.Nodes.IValuedNode, VDS.RDF.Nodes.IValuedNode)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<IValuedNode>.Compare
    fullName: System.Collections.Generic.IComparer<VDS.RDF.Nodes.IValuedNode>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Nodes.IValuedNode
    name: IValuedNode
    nameWithType: IValuedNode
    fullName: VDS.RDF.Nodes.IValuedNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Nodes.IValuedNode
    name: IValuedNode
    nameWithType: IValuedNode
    fullName: VDS.RDF.Nodes.IValuedNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of IValuedNode).Compare
    fullName: System.Collections.Generic.IComparer(Of VDS.RDF.Nodes.IValuedNode).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Nodes.IValuedNode
    name: IValuedNode
    nameWithType: IValuedNode
    fullName: VDS.RDF.Nodes.IValuedNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Nodes.IValuedNode
    name: IValuedNode
    nameWithType: IValuedNode
    fullName: VDS.RDF.Nodes.IValuedNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Nodes.IValuedNode
  commentId: T:VDS.RDF.Nodes.IValuedNode
  parent: VDS.RDF.Nodes
  name: IValuedNode
  nameWithType: IValuedNode
  fullName: VDS.RDF.Nodes.IValuedNode
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
- uid: VDS.RDF.Query.SparqlNodeComparer.NumericCompare*
  commentId: Overload:VDS.RDF.Query.SparqlNodeComparer.NumericCompare
  name: NumericCompare
  nameWithType: SparqlNodeComparer.NumericCompare
  fullName: VDS.RDF.Query.SparqlNodeComparer.NumericCompare
- uid: VDS.RDF.Query.Expressions.SparqlNumericType
  commentId: T:VDS.RDF.Query.Expressions.SparqlNumericType
  parent: VDS.RDF.Query.Expressions
  name: SparqlNumericType
  nameWithType: SparqlNumericType
  fullName: VDS.RDF.Query.Expressions.SparqlNumericType
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare*
  commentId: Overload:VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare
  name: DateTimeCompare
  nameWithType: SparqlNodeComparer.DateTimeCompare
  fullName: VDS.RDF.Query.SparqlNodeComparer.DateTimeCompare
- uid: VDS.RDF.Query.SparqlNodeComparer.DateCompare*
  commentId: Overload:VDS.RDF.Query.SparqlNodeComparer.DateCompare
  name: DateCompare
  nameWithType: SparqlNodeComparer.DateCompare
  fullName: VDS.RDF.Query.SparqlNodeComparer.DateCompare
shouldSkipMarkup: true
