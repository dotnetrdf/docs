### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Patterns.LetPattern
  commentId: T:VDS.RDF.Query.Patterns.LetPattern
  id: LetPattern
  parent: VDS.RDF.Query.Patterns
  children:
  - VDS.RDF.Query.Patterns.LetPattern.#ctor(System.String,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Patterns.LetPattern.AssignExpression
  - VDS.RDF.Query.Patterns.LetPattern.CompareTo(VDS.RDF.Query.Patterns.IAssignmentPattern)
  - VDS.RDF.Query.Patterns.LetPattern.CompareTo(VDS.RDF.Query.Patterns.LetPattern)
  - VDS.RDF.Query.Patterns.LetPattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Patterns.LetPattern.FixedVariables
  - VDS.RDF.Query.Patterns.LetPattern.FloatingVariables
  - VDS.RDF.Query.Patterns.LetPattern.HasNoBlankVariables
  - VDS.RDF.Query.Patterns.LetPattern.IsAcceptAll
  - VDS.RDF.Query.Patterns.LetPattern.PatternType
  - VDS.RDF.Query.Patterns.LetPattern.ToString
  - VDS.RDF.Query.Patterns.LetPattern.UsesDefaultDataset
  - VDS.RDF.Query.Patterns.LetPattern.VariableName
  langs:
  - csharp
  - vb
  name: LetPattern
  nameWithType: LetPattern
  fullName: VDS.RDF.Query.Patterns.LetPattern
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LetPattern
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nClass for representing LET Patterns in SPARQL Queries.\n"
  example: []
  syntax:
    content: 'public class LetPattern : BaseTriplePattern, IComparable<LetPattern>, IAssignmentPattern, ITriplePattern, IComparable<ITriplePattern>, IComparable<IAssignmentPattern>'
    content.vb: >-
      Public Class LetPattern
          Inherits BaseTriplePattern
          Implements IComparable(Of LetPattern), IAssignmentPattern, ITriplePattern, IComparable(Of ITriplePattern), IComparable(Of IAssignmentPattern)
  inheritance:
  - System.Object
  - VDS.RDF.Query.Patterns.BaseTriplePattern
  implements:
  - System.IComparable{VDS.RDF.Query.Patterns.LetPattern}
  - VDS.RDF.Query.Patterns.IAssignmentPattern
  - VDS.RDF.Query.Patterns.ITriplePattern
  - System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  - System.IComparable{VDS.RDF.Query.Patterns.IAssignmentPattern}
  inheritedMembers:
  - VDS.RDF.Query.Patterns.BaseTriplePattern._vars
  - VDS.RDF.Query.Patterns.BaseTriplePattern.Variables
  - VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Patterns.LetPattern.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Patterns.LetPattern.#ctor(System.String,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Patterns.LetPattern.#ctor(System.String,VDS.RDF.Query.Expressions.ISparqlExpression)
  id: '#ctor(System.String,VDS.RDF.Query.Expressions.ISparqlExpression)'
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: LetPattern(String, ISparqlExpression)
  nameWithType: LetPattern.LetPattern(String, ISparqlExpression)
  fullName: VDS.RDF.Query.Patterns.LetPattern.LetPattern(System.String, VDS.RDF.Query.Expressions.ISparqlExpression)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nCreates a new LET Pattern.\n"
  example: []
  syntax:
    content: public LetPattern(string var, ISparqlExpression expr)
    parameters:
    - id: var
      type: System.String
      description: Variable to assign to.
    - id: expr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: Expression which generates a value which will be assigned to the variable.
    content.vb: Public Sub New(var As String, expr As ISparqlExpression)
  overload: VDS.RDF.Query.Patterns.LetPattern.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.LetPattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.LetPattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  id: Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: LetPattern.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.LetPattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Evaluate
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nEvaluates a LET assignment in the given Evaluation Context.\n"
  example: []
  syntax:
    content: public override void Evaluate(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    content.vb: Public Overrides Sub Evaluate(context As SparqlEvaluationContext)
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  overload: VDS.RDF.Query.Patterns.LetPattern.Evaluate*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Patterns.LetPattern.PatternType
  commentId: P:VDS.RDF.Query.Patterns.LetPattern.PatternType
  id: PatternType
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: PatternType
  nameWithType: LetPattern.PatternType
  fullName: VDS.RDF.Query.Patterns.LetPattern.PatternType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PatternType
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 127
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Pattern Type.\n"
  example: []
  syntax:
    content: public override TriplePatternType PatternType { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Patterns.TriplePatternType
    content.vb: Public Overrides ReadOnly Property PatternType As TriplePatternType
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.PatternType
  overload: VDS.RDF.Query.Patterns.LetPattern.PatternType*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.LetPattern.IsAcceptAll
  commentId: P:VDS.RDF.Query.Patterns.LetPattern.IsAcceptAll
  id: IsAcceptAll
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: IsAcceptAll
  nameWithType: LetPattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.LetPattern.IsAcceptAll
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAcceptAll
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 138
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nReturns that this is not an accept all since it is a LET assignment.\n"
  example: []
  syntax:
    content: public override bool IsAcceptAll { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property IsAcceptAll As Boolean
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.IsAcceptAll
  overload: VDS.RDF.Query.Patterns.LetPattern.IsAcceptAll*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.LetPattern.AssignExpression
  commentId: P:VDS.RDF.Query.Patterns.LetPattern.AssignExpression
  id: AssignExpression
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: AssignExpression
  nameWithType: LetPattern.AssignExpression
  fullName: VDS.RDF.Query.Patterns.LetPattern.AssignExpression
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AssignExpression
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 149
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Expression that is used to generate values to be assigned.\n"
  example: []
  syntax:
    content: public ISparqlExpression AssignExpression { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Expressions.ISparqlExpression
    content.vb: Public ReadOnly Property AssignExpression As ISparqlExpression
  overload: VDS.RDF.Query.Patterns.LetPattern.AssignExpression*
  implements:
  - VDS.RDF.Query.Patterns.IAssignmentPattern.AssignExpression
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.LetPattern.VariableName
  commentId: P:VDS.RDF.Query.Patterns.LetPattern.VariableName
  id: VariableName
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: VariableName
  nameWithType: LetPattern.VariableName
  fullName: VDS.RDF.Query.Patterns.LetPattern.VariableName
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: VariableName
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 160
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Name of the Variable to which values will be assigned.\n"
  example: []
  syntax:
    content: public string VariableName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property VariableName As String
  overload: VDS.RDF.Query.Patterns.LetPattern.VariableName*
  implements:
  - VDS.RDF.Query.Patterns.IAssignmentPattern.VariableName
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.LetPattern.FixedVariables
  commentId: P:VDS.RDF.Query.Patterns.LetPattern.FixedVariables
  id: FixedVariables
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: FixedVariables
  nameWithType: LetPattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.LetPattern.FixedVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FixedVariables
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 171
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nReturns an empty enumeration as any evaluation error will result in an unbound value so we can&apos;t guarantee any variables are bound.\n"
  example: []
  syntax:
    content: public override IEnumerable<string> FixedVariables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overrides ReadOnly Property FixedVariables As IEnumerable(Of String)
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.FixedVariables
  overload: VDS.RDF.Query.Patterns.LetPattern.FixedVariables*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.LetPattern.FloatingVariables
  commentId: P:VDS.RDF.Query.Patterns.LetPattern.FloatingVariables
  id: FloatingVariables
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: FloatingVariables
  nameWithType: LetPattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.LetPattern.FloatingVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FloatingVariables
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 179
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nReturns the variable being assigned to as any evaluation error will result in an unbound value so we can&apos;t guarantee it is bound.\n"
  example: []
  syntax:
    content: public override IEnumerable<string> FloatingVariables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Overrides ReadOnly Property FloatingVariables As IEnumerable(Of String)
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.FloatingVariables
  overload: VDS.RDF.Query.Patterns.LetPattern.FloatingVariables*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.LetPattern.UsesDefaultDataset
  commentId: P:VDS.RDF.Query.Patterns.LetPattern.UsesDefaultDataset
  id: UsesDefaultDataset
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: UsesDefaultDataset
  nameWithType: LetPattern.UsesDefaultDataset
  fullName: VDS.RDF.Query.Patterns.LetPattern.UsesDefaultDataset
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UsesDefaultDataset
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 187
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether the Pattern uses the Default Dataset.\n"
  example: []
  syntax:
    content: public override bool UsesDefaultDataset { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property UsesDefaultDataset As Boolean
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.UsesDefaultDataset
  overload: VDS.RDF.Query.Patterns.LetPattern.UsesDefaultDataset*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.LetPattern.HasNoBlankVariables
  commentId: P:VDS.RDF.Query.Patterns.LetPattern.HasNoBlankVariables
  id: HasNoBlankVariables
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: HasNoBlankVariables
  nameWithType: LetPattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.LetPattern.HasNoBlankVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasNoBlankVariables
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 198
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nReturns true as a LET can never contain Blank Nodes.\n"
  example: []
  syntax:
    content: public override bool HasNoBlankVariables { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property HasNoBlankVariables As Boolean
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.HasNoBlankVariables
  overload: VDS.RDF.Query.Patterns.LetPattern.HasNoBlankVariables*
  implements:
  - VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.LetPattern.ToString
  commentId: M:VDS.RDF.Query.Patterns.LetPattern.ToString
  id: ToString
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: LetPattern.ToString()
  fullName: VDS.RDF.Query.Patterns.LetPattern.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 210
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the string representation of the LET assignment.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  overload: VDS.RDF.Query.Patterns.LetPattern.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Patterns.LetPattern.CompareTo(VDS.RDF.Query.Patterns.LetPattern)
  commentId: M:VDS.RDF.Query.Patterns.LetPattern.CompareTo(VDS.RDF.Query.Patterns.LetPattern)
  id: CompareTo(VDS.RDF.Query.Patterns.LetPattern)
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: CompareTo(LetPattern)
  nameWithType: LetPattern.CompareTo(LetPattern)
  fullName: VDS.RDF.Query.Patterns.LetPattern.CompareTo(VDS.RDF.Query.Patterns.LetPattern)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 228
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nCompares this Let to another Let.\n"
  example: []
  syntax:
    content: public int CompareTo(LetPattern other)
    parameters:
    - id: other
      type: VDS.RDF.Query.Patterns.LetPattern
      description: Let to compare to.
    return:
      type: System.Int32
      description: Just calls the base compare method since that implements all the logic we need.
    content.vb: Public Function CompareTo(other As LetPattern) As Integer
  overload: VDS.RDF.Query.Patterns.LetPattern.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.Query.Patterns.LetPattern}.CompareTo(VDS.RDF.Query.Patterns.LetPattern)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.LetPattern.CompareTo(VDS.RDF.Query.Patterns.IAssignmentPattern)
  commentId: M:VDS.RDF.Query.Patterns.LetPattern.CompareTo(VDS.RDF.Query.Patterns.IAssignmentPattern)
  id: CompareTo(VDS.RDF.Query.Patterns.IAssignmentPattern)
  parent: VDS.RDF.Query.Patterns.LetPattern
  langs:
  - csharp
  - vb
  name: CompareTo(IAssignmentPattern)
  nameWithType: LetPattern.CompareTo(IAssignmentPattern)
  fullName: VDS.RDF.Query.Patterns.LetPattern.CompareTo(VDS.RDF.Query.Patterns.IAssignmentPattern)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: Libraries/dotNetRDF/Query/Patterns/LetPattern.cs
    startLine: 238
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nCompares this Let to another Let.\n"
  example: []
  syntax:
    content: public int CompareTo(IAssignmentPattern other)
    parameters:
    - id: other
      type: VDS.RDF.Query.Patterns.IAssignmentPattern
      description: Let to compare to.
    return:
      type: System.Int32
      description: Just calls the base compare method since that implements all the logic we need.
    content.vb: Public Function CompareTo(other As IAssignmentPattern) As Integer
  overload: VDS.RDF.Query.Patterns.LetPattern.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.Query.Patterns.IAssignmentPattern}.CompareTo(VDS.RDF.Query.Patterns.IAssignmentPattern)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern
  commentId: T:VDS.RDF.Query.Patterns.BaseTriplePattern
  parent: VDS.RDF.Query.Patterns
  name: BaseTriplePattern
  nameWithType: BaseTriplePattern
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern
- uid: System.IComparable{VDS.RDF.Query.Patterns.LetPattern}
  commentId: T:System.IComparable{VDS.RDF.Query.Patterns.LetPattern}
  parent: System
  definition: System.IComparable`1
  name: IComparable<LetPattern>
  nameWithType: IComparable<LetPattern>
  fullName: System.IComparable<VDS.RDF.Query.Patterns.LetPattern>
  nameWithType.vb: IComparable(Of LetPattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.LetPattern)
  name.vb: IComparable(Of LetPattern)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.LetPattern
    name: LetPattern
    nameWithType: LetPattern
    fullName: VDS.RDF.Query.Patterns.LetPattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.LetPattern
    name: LetPattern
    nameWithType: LetPattern
    fullName: VDS.RDF.Query.Patterns.LetPattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.IAssignmentPattern
  commentId: T:VDS.RDF.Query.Patterns.IAssignmentPattern
  parent: VDS.RDF.Query.Patterns
  name: IAssignmentPattern
  nameWithType: IAssignmentPattern
  fullName: VDS.RDF.Query.Patterns.IAssignmentPattern
- uid: VDS.RDF.Query.Patterns.ITriplePattern
  commentId: T:VDS.RDF.Query.Patterns.ITriplePattern
  parent: VDS.RDF.Query.Patterns
  name: ITriplePattern
  nameWithType: ITriplePattern
  fullName: VDS.RDF.Query.Patterns.ITriplePattern
- uid: System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  commentId: T:System.IComparable{VDS.RDF.Query.Patterns.ITriplePattern}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ITriplePattern>
  nameWithType: IComparable<ITriplePattern>
  fullName: System.IComparable<VDS.RDF.Query.Patterns.ITriplePattern>
  nameWithType.vb: IComparable(Of ITriplePattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.ITriplePattern)
  name.vb: IComparable(Of ITriplePattern)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Query.Patterns.IAssignmentPattern}
  commentId: T:System.IComparable{VDS.RDF.Query.Patterns.IAssignmentPattern}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IAssignmentPattern>
  nameWithType: IComparable<IAssignmentPattern>
  fullName: System.IComparable<VDS.RDF.Query.Patterns.IAssignmentPattern>
  nameWithType.vb: IComparable(Of IAssignmentPattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.IAssignmentPattern)
  name.vb: IComparable(Of IAssignmentPattern)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.IAssignmentPattern
    name: IAssignmentPattern
    nameWithType: IAssignmentPattern
    fullName: VDS.RDF.Query.Patterns.IAssignmentPattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.IAssignmentPattern
    name: IAssignmentPattern
    nameWithType: IAssignmentPattern
    fullName: VDS.RDF.Query.Patterns.IAssignmentPattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern._vars
  commentId: F:VDS.RDF.Query.Patterns.BaseTriplePattern._vars
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: _vars
  nameWithType: BaseTriplePattern._vars
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern._vars
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.Variables
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.Variables
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: Variables
  nameWithType: BaseTriplePattern.Variables
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.Variables
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  commentId: M:VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: CompareTo(ITriplePattern)
  nameWithType: BaseTriplePattern.CompareTo(ITriplePattern)
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
    name: CompareTo
    nameWithType: BaseTriplePattern.CompareTo
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo(VDS.RDF.Query.Patterns.ITriplePattern)
    name: CompareTo
    nameWithType: BaseTriplePattern.CompareTo
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.LetPattern.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<LetPattern>()
  nameWithType: Extensions.AsEnumerable<LetPattern>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.LetPattern>()
  nameWithType.vb: Extensions.AsEnumerable(Of LetPattern)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.LetPattern)()
  name.vb: AsEnumerable(Of LetPattern)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<LetPattern>
    nameWithType: Extensions.AsEnumerable<LetPattern>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.LetPattern>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of LetPattern)
    nameWithType: Extensions.AsEnumerable(Of LetPattern)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.LetPattern)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Patterns.LetPattern.#ctor*
  commentId: Overload:VDS.RDF.Query.Patterns.LetPattern.#ctor
  name: LetPattern
  nameWithType: LetPattern.LetPattern
  fullName: VDS.RDF.Query.Patterns.LetPattern.LetPattern
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: BaseTriplePattern.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: BaseTriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: BaseTriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.LetPattern.Evaluate*
  commentId: Overload:VDS.RDF.Query.Patterns.LetPattern.Evaluate
  name: Evaluate
  nameWithType: LetPattern.Evaluate
  fullName: VDS.RDF.Query.Patterns.LetPattern.Evaluate
- uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ITriplePattern.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ITriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ITriplePattern.Evaluate
    fullName: VDS.RDF.Query.Patterns.ITriplePattern.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.PatternType
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.PatternType
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: PatternType
  nameWithType: BaseTriplePattern.PatternType
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.PatternType
- uid: VDS.RDF.Query.Patterns.LetPattern.PatternType*
  commentId: Overload:VDS.RDF.Query.Patterns.LetPattern.PatternType
  name: PatternType
  nameWithType: LetPattern.PatternType
  fullName: VDS.RDF.Query.Patterns.LetPattern.PatternType
- uid: VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.PatternType
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: PatternType
  nameWithType: ITriplePattern.PatternType
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.PatternType
- uid: VDS.RDF.Query.Patterns.TriplePatternType
  commentId: T:VDS.RDF.Query.Patterns.TriplePatternType
  parent: VDS.RDF.Query.Patterns
  name: TriplePatternType
  nameWithType: TriplePatternType
  fullName: VDS.RDF.Query.Patterns.TriplePatternType
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.IsAcceptAll
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.IsAcceptAll
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: IsAcceptAll
  nameWithType: BaseTriplePattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.IsAcceptAll
- uid: VDS.RDF.Query.Patterns.LetPattern.IsAcceptAll*
  commentId: Overload:VDS.RDF.Query.Patterns.LetPattern.IsAcceptAll
  name: IsAcceptAll
  nameWithType: LetPattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.LetPattern.IsAcceptAll
- uid: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: IsAcceptAll
  nameWithType: ITriplePattern.IsAcceptAll
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.IsAcceptAll
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Patterns.LetPattern.AssignExpression*
  commentId: Overload:VDS.RDF.Query.Patterns.LetPattern.AssignExpression
  name: AssignExpression
  nameWithType: LetPattern.AssignExpression
  fullName: VDS.RDF.Query.Patterns.LetPattern.AssignExpression
- uid: VDS.RDF.Query.Patterns.IAssignmentPattern.AssignExpression
  commentId: P:VDS.RDF.Query.Patterns.IAssignmentPattern.AssignExpression
  parent: VDS.RDF.Query.Patterns.IAssignmentPattern
  name: AssignExpression
  nameWithType: IAssignmentPattern.AssignExpression
  fullName: VDS.RDF.Query.Patterns.IAssignmentPattern.AssignExpression
- uid: VDS.RDF.Query.Patterns.LetPattern.VariableName*
  commentId: Overload:VDS.RDF.Query.Patterns.LetPattern.VariableName
  name: VariableName
  nameWithType: LetPattern.VariableName
  fullName: VDS.RDF.Query.Patterns.LetPattern.VariableName
- uid: VDS.RDF.Query.Patterns.IAssignmentPattern.VariableName
  commentId: P:VDS.RDF.Query.Patterns.IAssignmentPattern.VariableName
  parent: VDS.RDF.Query.Patterns.IAssignmentPattern
  name: VariableName
  nameWithType: IAssignmentPattern.VariableName
  fullName: VDS.RDF.Query.Patterns.IAssignmentPattern.VariableName
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.FixedVariables
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.FixedVariables
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: FixedVariables
  nameWithType: BaseTriplePattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.FixedVariables
- uid: VDS.RDF.Query.Patterns.LetPattern.FixedVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.LetPattern.FixedVariables
  name: FixedVariables
  nameWithType: LetPattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.LetPattern.FixedVariables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: FixedVariables
  nameWithType: ITriplePattern.FixedVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.FixedVariables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.FloatingVariables
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.FloatingVariables
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: FloatingVariables
  nameWithType: BaseTriplePattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.FloatingVariables
- uid: VDS.RDF.Query.Patterns.LetPattern.FloatingVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.LetPattern.FloatingVariables
  name: FloatingVariables
  nameWithType: LetPattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.LetPattern.FloatingVariables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: FloatingVariables
  nameWithType: ITriplePattern.FloatingVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.FloatingVariables
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.UsesDefaultDataset
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.UsesDefaultDataset
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: UsesDefaultDataset
  nameWithType: BaseTriplePattern.UsesDefaultDataset
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.UsesDefaultDataset
- uid: VDS.RDF.Query.Patterns.LetPattern.UsesDefaultDataset*
  commentId: Overload:VDS.RDF.Query.Patterns.LetPattern.UsesDefaultDataset
  name: UsesDefaultDataset
  nameWithType: LetPattern.UsesDefaultDataset
  fullName: VDS.RDF.Query.Patterns.LetPattern.UsesDefaultDataset
- uid: VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: UsesDefaultDataset
  nameWithType: ITriplePattern.UsesDefaultDataset
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.UsesDefaultDataset
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.HasNoBlankVariables
  commentId: P:VDS.RDF.Query.Patterns.BaseTriplePattern.HasNoBlankVariables
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: HasNoBlankVariables
  nameWithType: BaseTriplePattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.HasNoBlankVariables
- uid: VDS.RDF.Query.Patterns.LetPattern.HasNoBlankVariables*
  commentId: Overload:VDS.RDF.Query.Patterns.LetPattern.HasNoBlankVariables
  name: HasNoBlankVariables
  nameWithType: LetPattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.LetPattern.HasNoBlankVariables
- uid: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  commentId: P:VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
  parent: VDS.RDF.Query.Patterns.ITriplePattern
  name: HasNoBlankVariables
  nameWithType: ITriplePattern.HasNoBlankVariables
  fullName: VDS.RDF.Query.Patterns.ITriplePattern.HasNoBlankVariables
- uid: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  commentId: M:VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  parent: VDS.RDF.Query.Patterns.BaseTriplePattern
  name: ToString()
  nameWithType: BaseTriplePattern.ToString()
  fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString()
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
    name: ToString
    nameWithType: BaseTriplePattern.ToString
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
    name: ToString
    nameWithType: BaseTriplePattern.ToString
    fullName: VDS.RDF.Query.Patterns.BaseTriplePattern.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.LetPattern.ToString*
  commentId: Overload:VDS.RDF.Query.Patterns.LetPattern.ToString
  name: ToString
  nameWithType: LetPattern.ToString
  fullName: VDS.RDF.Query.Patterns.LetPattern.ToString
- uid: VDS.RDF.Query.Patterns.LetPattern.CompareTo*
  commentId: Overload:VDS.RDF.Query.Patterns.LetPattern.CompareTo
  name: CompareTo
  nameWithType: LetPattern.CompareTo
  fullName: VDS.RDF.Query.Patterns.LetPattern.CompareTo
- uid: System.IComparable{VDS.RDF.Query.Patterns.LetPattern}.CompareTo(VDS.RDF.Query.Patterns.LetPattern)
  commentId: M:System.IComparable{VDS.RDF.Query.Patterns.LetPattern}.CompareTo(VDS.RDF.Query.Patterns.LetPattern)
  parent: System.IComparable{VDS.RDF.Query.Patterns.LetPattern}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(LetPattern)
  nameWithType: IComparable<LetPattern>.CompareTo(LetPattern)
  fullName: System.IComparable<VDS.RDF.Query.Patterns.LetPattern>.CompareTo(VDS.RDF.Query.Patterns.LetPattern)
  nameWithType.vb: IComparable(Of LetPattern).CompareTo(LetPattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.LetPattern).CompareTo(VDS.RDF.Query.Patterns.LetPattern)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<LetPattern>.CompareTo
    fullName: System.IComparable<VDS.RDF.Query.Patterns.LetPattern>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.LetPattern
    name: LetPattern
    nameWithType: LetPattern
    fullName: VDS.RDF.Query.Patterns.LetPattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of LetPattern).CompareTo
    fullName: System.IComparable(Of VDS.RDF.Query.Patterns.LetPattern).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.LetPattern
    name: LetPattern
    nameWithType: LetPattern
    fullName: VDS.RDF.Query.Patterns.LetPattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.LetPattern
  commentId: T:VDS.RDF.Query.Patterns.LetPattern
  parent: VDS.RDF.Query.Patterns
  name: LetPattern
  nameWithType: LetPattern
  fullName: VDS.RDF.Query.Patterns.LetPattern
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.Query.Patterns.IAssignmentPattern}.CompareTo(VDS.RDF.Query.Patterns.IAssignmentPattern)
  commentId: M:System.IComparable{VDS.RDF.Query.Patterns.IAssignmentPattern}.CompareTo(VDS.RDF.Query.Patterns.IAssignmentPattern)
  parent: System.IComparable{VDS.RDF.Query.Patterns.IAssignmentPattern}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IAssignmentPattern)
  nameWithType: IComparable<IAssignmentPattern>.CompareTo(IAssignmentPattern)
  fullName: System.IComparable<VDS.RDF.Query.Patterns.IAssignmentPattern>.CompareTo(VDS.RDF.Query.Patterns.IAssignmentPattern)
  nameWithType.vb: IComparable(Of IAssignmentPattern).CompareTo(IAssignmentPattern)
  fullName.vb: System.IComparable(Of VDS.RDF.Query.Patterns.IAssignmentPattern).CompareTo(VDS.RDF.Query.Patterns.IAssignmentPattern)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IAssignmentPattern>.CompareTo
    fullName: System.IComparable<VDS.RDF.Query.Patterns.IAssignmentPattern>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.IAssignmentPattern
    name: IAssignmentPattern
    nameWithType: IAssignmentPattern
    fullName: VDS.RDF.Query.Patterns.IAssignmentPattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IAssignmentPattern).CompareTo
    fullName: System.IComparable(Of VDS.RDF.Query.Patterns.IAssignmentPattern).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.IAssignmentPattern
    name: IAssignmentPattern
    nameWithType: IAssignmentPattern
    fullName: VDS.RDF.Query.Patterns.IAssignmentPattern
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
