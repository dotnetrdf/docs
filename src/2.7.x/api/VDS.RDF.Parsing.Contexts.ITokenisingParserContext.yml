### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Contexts.ITokenisingParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.ITokenisingParserContext
  id: ITokenisingParserContext
  parent: VDS.RDF.Parsing.Contexts
  children:
  - VDS.RDF.Parsing.Contexts.ITokenisingParserContext.LocalTokens
  - VDS.RDF.Parsing.Contexts.ITokenisingParserContext.Tokens
  - VDS.RDF.Parsing.Contexts.ITokenisingParserContext.TraceTokeniser
  langs:
  - csharp
  - vb
  name: ITokenisingParserContext
  nameWithType: ITokenisingParserContext
  fullName: VDS.RDF.Parsing.Contexts.ITokenisingParserContext
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/IParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ITokenisingParserContext
    path: Libraries/dotNetRDF/Parsing/Contexts/IParserContext.cs
    startLine: 75
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nInterface for Parser Contexts which use Tokeniser based parsing.\n"
  example: []
  syntax:
    content: public interface ITokenisingParserContext
    content.vb: Public Interface ITokenisingParserContext
  extensionMethods:
  - VDS.RDF.Parsing.Contexts.ITokenisingParserContext.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.TraceTokeniser
  commentId: P:VDS.RDF.Parsing.Contexts.ITokenisingParserContext.TraceTokeniser
  id: TraceTokeniser
  parent: VDS.RDF.Parsing.Contexts.ITokenisingParserContext
  langs:
  - csharp
  - vb
  name: TraceTokeniser
  nameWithType: ITokenisingParserContext.TraceTokeniser
  fullName: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.TraceTokeniser
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/IParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TraceTokeniser
    path: Libraries/dotNetRDF/Parsing/Contexts/IParserContext.cs
    startLine: 80
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets/Sets whether Tokenisation is Traced.\n"
  example: []
  syntax:
    content: bool TraceTokeniser { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property TraceTokeniser As Boolean
  overload: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.TraceTokeniser*
  modifiers.csharp:
  - get
  - set
- uid: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.LocalTokens
  commentId: P:VDS.RDF.Parsing.Contexts.ITokenisingParserContext.LocalTokens
  id: LocalTokens
  parent: VDS.RDF.Parsing.Contexts.ITokenisingParserContext
  langs:
  - csharp
  - vb
  name: LocalTokens
  nameWithType: ITokenisingParserContext.LocalTokens
  fullName: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.LocalTokens
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/IParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LocalTokens
    path: Libraries/dotNetRDF/Parsing/Contexts/IParserContext.cs
    startLine: 89
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Local Tokens Stack.\n"
  example: []
  syntax:
    content: Stack<IToken> LocalTokens { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Stack{VDS.RDF.Parsing.Tokens.IToken}
    content.vb: ReadOnly Property LocalTokens As Stack(Of IToken)
  overload: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.LocalTokens*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.Tokens
  commentId: P:VDS.RDF.Parsing.Contexts.ITokenisingParserContext.Tokens
  id: Tokens
  parent: VDS.RDF.Parsing.Contexts.ITokenisingParserContext
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: ITokenisingParserContext.Tokens
  fullName: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.Tokens
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/IParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Tokens
    path: Libraries/dotNetRDF/Parsing/Contexts/IParserContext.cs
    startLine: 97
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Token Queue.\n"
  example: []
  syntax:
    content: ITokenQueue Tokens { get; }
    parameters: []
    return:
      type: VDS.RDF.Parsing.Tokens.ITokenQueue
    content.vb: ReadOnly Property Tokens As ITokenQueue
  overload: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.Tokens*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VDS.RDF.Parsing.Contexts
  commentId: N:VDS.RDF.Parsing.Contexts
  name: VDS.RDF.Parsing.Contexts
  nameWithType: VDS.RDF.Parsing.Contexts
  fullName: VDS.RDF.Parsing.Contexts
- uid: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ITokenisingParserContext>()
  nameWithType: Extensions.AsEnumerable<ITokenisingParserContext>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.ITokenisingParserContext>()
  nameWithType.vb: Extensions.AsEnumerable(Of ITokenisingParserContext)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.ITokenisingParserContext)()
  name.vb: AsEnumerable(Of ITokenisingParserContext)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ITokenisingParserContext>
    nameWithType: Extensions.AsEnumerable<ITokenisingParserContext>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.ITokenisingParserContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ITokenisingParserContext)
    nameWithType: Extensions.AsEnumerable(Of ITokenisingParserContext)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.ITokenisingParserContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.TraceTokeniser*
  commentId: Overload:VDS.RDF.Parsing.Contexts.ITokenisingParserContext.TraceTokeniser
  name: TraceTokeniser
  nameWithType: ITokenisingParserContext.TraceTokeniser
  fullName: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.TraceTokeniser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.LocalTokens*
  commentId: Overload:VDS.RDF.Parsing.Contexts.ITokenisingParserContext.LocalTokens
  name: LocalTokens
  nameWithType: ITokenisingParserContext.LocalTokens
  fullName: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.LocalTokens
- uid: System.Collections.Generic.Stack{VDS.RDF.Parsing.Tokens.IToken}
  commentId: T:System.Collections.Generic.Stack{VDS.RDF.Parsing.Tokens.IToken}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Stack`1
  name: Stack<IToken>
  nameWithType: Stack<IToken>
  fullName: System.Collections.Generic.Stack<VDS.RDF.Parsing.Tokens.IToken>
  nameWithType.vb: Stack(Of IToken)
  fullName.vb: System.Collections.Generic.Stack(Of VDS.RDF.Parsing.Tokens.IToken)
  name.vb: Stack(Of IToken)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    nameWithType: Stack
    fullName: System.Collections.Generic.Stack
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Parsing.Tokens.IToken
    name: IToken
    nameWithType: IToken
    fullName: VDS.RDF.Parsing.Tokens.IToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    nameWithType: Stack
    fullName: System.Collections.Generic.Stack
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Parsing.Tokens.IToken
    name: IToken
    nameWithType: IToken
    fullName: VDS.RDF.Parsing.Tokens.IToken
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack`1
  commentId: T:System.Collections.Generic.Stack`1
  isExternal: true
  name: Stack<T>
  nameWithType: Stack<T>
  fullName: System.Collections.Generic.Stack<T>
  nameWithType.vb: Stack(Of T)
  fullName.vb: System.Collections.Generic.Stack(Of T)
  name.vb: Stack(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    nameWithType: Stack
    fullName: System.Collections.Generic.Stack
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    nameWithType: Stack
    fullName: System.Collections.Generic.Stack
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.Tokens*
  commentId: Overload:VDS.RDF.Parsing.Contexts.ITokenisingParserContext.Tokens
  name: Tokens
  nameWithType: ITokenisingParserContext.Tokens
  fullName: VDS.RDF.Parsing.Contexts.ITokenisingParserContext.Tokens
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue
  commentId: T:VDS.RDF.Parsing.Tokens.ITokenQueue
  parent: VDS.RDF.Parsing.Tokens
  name: ITokenQueue
  nameWithType: ITokenQueue
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue
- uid: VDS.RDF.Parsing.Tokens
  commentId: N:VDS.RDF.Parsing.Tokens
  name: VDS.RDF.Parsing.Tokens
  nameWithType: VDS.RDF.Parsing.Tokens
  fullName: VDS.RDF.Parsing.Tokens
shouldSkipMarkup: true
