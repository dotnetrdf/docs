### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer
  commentId: T:VDS.RDF.Query.Inference.Pellet.PelletServer
  id: PelletServer
  parent: VDS.RDF.Query.Inference.Pellet
  children:
  - VDS.RDF.Query.Inference.Pellet.PelletServer.#ctor(System.String)
  - VDS.RDF.Query.Inference.Pellet.PelletServer.#ctor(System.Uri)
  - VDS.RDF.Query.Inference.Pellet.PelletServer.Connect(System.String,VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback,System.Object)
  - VDS.RDF.Query.Inference.Pellet.PelletServer.Connect(System.Uri,VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback,System.Object)
  - VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBase(System.String)
  - VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBases(System.Type)
  - VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase(System.String)
  - VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase(System.Type)
  - VDS.RDF.Query.Inference.Pellet.PelletServer.KnowledgeBases
  langs:
  - csharp
  - vb
  name: PelletServer
  nameWithType: PelletServer
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PelletServer
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nRepresents a Connection to a Pellet Server.\n"
  example: []
  syntax:
    content: public class PelletServer
    content.vb: Public Class PelletServer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Inference.Pellet.PelletServer.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.#ctor(System.Uri)
  commentId: M:VDS.RDF.Query.Inference.Pellet.PelletServer.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: VDS.RDF.Query.Inference.Pellet.PelletServer
  langs:
  - csharp
  - vb
  name: PelletServer(Uri)
  nameWithType: PelletServer.PelletServer(Uri)
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.PelletServer(System.Uri)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
    startLine: 52
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nCreates a new connection to a Pellet Server.\n"
  example: []
  syntax:
    content: public PelletServer(Uri serverUri)
    parameters:
    - id: serverUri
      type: System.Uri
      description: Server URI.
    content.vb: Public Sub New(serverUri As Uri)
  overload: VDS.RDF.Query.Inference.Pellet.PelletServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.#ctor(System.String)
  commentId: M:VDS.RDF.Query.Inference.Pellet.PelletServer.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VDS.RDF.Query.Inference.Pellet.PelletServer
  langs:
  - csharp
  - vb
  name: PelletServer(String)
  nameWithType: PelletServer.PelletServer(String)
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.PelletServer(System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
    startLine: 65
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nCreates a new connection to a Pellet Server.\n"
  example: []
  syntax:
    content: public PelletServer(string serverUri)
    parameters:
    - id: serverUri
      type: System.String
      description: Server URI.
    content.vb: Public Sub New(serverUri As String)
  overload: VDS.RDF.Query.Inference.Pellet.PelletServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.Connect(System.Uri,VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback,System.Object)
  commentId: M:VDS.RDF.Query.Inference.Pellet.PelletServer.Connect(System.Uri,VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback,System.Object)
  id: Connect(System.Uri,VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback,System.Object)
  parent: VDS.RDF.Query.Inference.Pellet.PelletServer
  langs:
  - csharp
  - vb
  name: Connect(Uri, PelletServerReadyCallback, Object)
  nameWithType: PelletServer.Connect(Uri, PelletServerReadyCallback, Object)
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.Connect(System.Uri, VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Connect
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
    startLine: 81
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConnects to a Pellet Server instance asynchronously invoking the callback when the connection is ready.\n"
  example: []
  syntax:
    content: public static void Connect(Uri serverUri, PelletServerReadyCallback callback, object state)
    parameters:
    - id: serverUri
      type: System.Uri
      description: Server URI.
    - id: callback
      type: VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback
      description: Callback to invoke when the connection is ready.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Public Shared Sub Connect(serverUri As Uri, callback As PelletServerReadyCallback, state As Object)
  overload: VDS.RDF.Query.Inference.Pellet.PelletServer.Connect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.Connect(System.String,VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback,System.Object)
  commentId: M:VDS.RDF.Query.Inference.Pellet.PelletServer.Connect(System.String,VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback,System.Object)
  id: Connect(System.String,VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback,System.Object)
  parent: VDS.RDF.Query.Inference.Pellet.PelletServer
  langs:
  - csharp
  - vb
  name: Connect(String, PelletServerReadyCallback, Object)
  nameWithType: PelletServer.Connect(String, PelletServerReadyCallback, Object)
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.Connect(System.String, VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Connect
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
    startLine: 92
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConnects to a Pellet Server instance asynchronously invoking the callback when the connection is ready.\n"
  example: []
  syntax:
    content: public static void Connect(string serverUri, PelletServerReadyCallback callback, object state)
    parameters:
    - id: serverUri
      type: System.String
      description: Server URI.
    - id: callback
      type: VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback
      description: Callback to invoke when the connection is ready.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Public Shared Sub Connect(serverUri As String, callback As PelletServerReadyCallback, state As Object)
  overload: VDS.RDF.Query.Inference.Pellet.PelletServer.Connect*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.KnowledgeBases
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletServer.KnowledgeBases
  id: KnowledgeBases
  parent: VDS.RDF.Query.Inference.Pellet.PelletServer
  langs:
  - csharp
  - vb
  name: KnowledgeBases
  nameWithType: PelletServer.KnowledgeBases
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.KnowledgeBases
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: KnowledgeBases
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
    startLine: 216
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nGets the Knowledge Bases available from this Pellet Server.\n"
  example: []
  syntax:
    content: public IEnumerable<KnowledgeBase> KnowledgeBases { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Inference.Pellet.KnowledgeBase}
    content.vb: Public ReadOnly Property KnowledgeBases As IEnumerable(Of KnowledgeBase)
  overload: VDS.RDF.Query.Inference.Pellet.PelletServer.KnowledgeBases*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase(System.String)
  commentId: M:VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase(System.String)
  id: HasKnowledgeBase(System.String)
  parent: VDS.RDF.Query.Inference.Pellet.PelletServer
  langs:
  - csharp
  - vb
  name: HasKnowledgeBase(String)
  nameWithType: PelletServer.HasKnowledgeBase(String)
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasKnowledgeBase
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
    startLine: 229
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nGets whether the Server has a Knowledge Base with the given Name.\n"
  example: []
  syntax:
    content: public bool HasKnowledgeBase(string name)
    parameters:
    - id: name
      type: System.String
      description: Knowledge Base Name.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasKnowledgeBase(name As String) As Boolean
  overload: VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase(System.Type)
  commentId: M:VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase(System.Type)
  id: HasKnowledgeBase(System.Type)
  parent: VDS.RDF.Query.Inference.Pellet.PelletServer
  langs:
  - csharp
  - vb
  name: HasKnowledgeBase(Type)
  nameWithType: PelletServer.HasKnowledgeBase(Type)
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase(System.Type)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasKnowledgeBase
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
    startLine: 239
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nGets whether the Server has a Knowledge Base which supports the given Service Type.\n"
  example: []
  syntax:
    content: public bool HasKnowledgeBase(Type t)
    parameters:
    - id: t
      type: System.Type
      description: Service Type.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasKnowledgeBase(t As Type) As Boolean
  overload: VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBase(System.String)
  commentId: M:VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBase(System.String)
  id: GetKnowledgeBase(System.String)
  parent: VDS.RDF.Query.Inference.Pellet.PelletServer
  langs:
  - csharp
  - vb
  name: GetKnowledgeBase(String)
  nameWithType: PelletServer.GetKnowledgeBase(String)
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBase(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetKnowledgeBase
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
    startLine: 250
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nGets the Knowledge Base with the given Name.\n"
  example: []
  syntax:
    content: public KnowledgeBase GetKnowledgeBase(string name)
    parameters:
    - id: name
      type: System.String
      description: Knowledge Base Name.
    return:
      type: VDS.RDF.Query.Inference.Pellet.KnowledgeBase
      description: "\n"
    content.vb: Public Function GetKnowledgeBase(name As String) As KnowledgeBase
  overload: VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBase*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBases(System.Type)
  commentId: M:VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBases(System.Type)
  id: GetKnowledgeBases(System.Type)
  parent: VDS.RDF.Query.Inference.Pellet.PelletServer
  langs:
  - csharp
  - vb
  name: GetKnowledgeBases(Type)
  nameWithType: PelletServer.GetKnowledgeBases(Type)
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBases(System.Type)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetKnowledgeBases
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Inference/Pellet/PelletServer.cs
    startLine: 262
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nGets all the Knowledge Bases which support a given Server.\n"
  example: []
  syntax:
    content: public IEnumerable<KnowledgeBase> GetKnowledgeBases(Type t)
    parameters:
    - id: t
      type: System.Type
      description: Service Type.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Inference.Pellet.KnowledgeBase}
      description: ''
    content.vb: Public Function GetKnowledgeBases(t As Type) As IEnumerable(Of KnowledgeBase)
  overload: VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBases*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Inference.Pellet
  commentId: N:VDS.RDF.Query.Inference.Pellet
  name: VDS.RDF.Query.Inference.Pellet
  nameWithType: VDS.RDF.Query.Inference.Pellet
  fullName: VDS.RDF.Query.Inference.Pellet
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<PelletServer>()
  nameWithType: Extensions.AsEnumerable<PelletServer>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.Pellet.PelletServer>()
  nameWithType.vb: Extensions.AsEnumerable(Of PelletServer)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.Pellet.PelletServer)()
  name.vb: AsEnumerable(Of PelletServer)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<PelletServer>
    nameWithType: Extensions.AsEnumerable<PelletServer>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.Pellet.PelletServer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of PelletServer)
    nameWithType: Extensions.AsEnumerable(Of PelletServer)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.Pellet.PelletServer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.#ctor*
  commentId: Overload:VDS.RDF.Query.Inference.Pellet.PelletServer.#ctor
  name: PelletServer
  nameWithType: PelletServer.PelletServer
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.PelletServer
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.Connect*
  commentId: Overload:VDS.RDF.Query.Inference.Pellet.PelletServer.Connect
  name: Connect
  nameWithType: PelletServer.Connect
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.Connect
- uid: VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback
  commentId: T:VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback
  parent: VDS.RDF.Query.Inference.Pellet
  name: PelletServerReadyCallback
  nameWithType: PelletServerReadyCallback
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServerReadyCallback
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.KnowledgeBases*
  commentId: Overload:VDS.RDF.Query.Inference.Pellet.PelletServer.KnowledgeBases
  name: KnowledgeBases
  nameWithType: PelletServer.KnowledgeBases
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.KnowledgeBases
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Inference.Pellet.KnowledgeBase}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.Inference.Pellet.KnowledgeBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KnowledgeBase>
  nameWithType: IEnumerable<KnowledgeBase>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.Inference.Pellet.KnowledgeBase>
  nameWithType.vb: IEnumerable(Of KnowledgeBase)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Inference.Pellet.KnowledgeBase)
  name.vb: IEnumerable(Of KnowledgeBase)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Inference.Pellet.KnowledgeBase
    name: KnowledgeBase
    nameWithType: KnowledgeBase
    fullName: VDS.RDF.Query.Inference.Pellet.KnowledgeBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Inference.Pellet.KnowledgeBase
    name: KnowledgeBase
    nameWithType: KnowledgeBase
    fullName: VDS.RDF.Query.Inference.Pellet.KnowledgeBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase*
  commentId: Overload:VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase
  name: HasKnowledgeBase
  nameWithType: PelletServer.HasKnowledgeBase
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.HasKnowledgeBase
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBase*
  commentId: Overload:VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBase
  name: GetKnowledgeBase
  nameWithType: PelletServer.GetKnowledgeBase
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBase
- uid: VDS.RDF.Query.Inference.Pellet.KnowledgeBase
  commentId: T:VDS.RDF.Query.Inference.Pellet.KnowledgeBase
  parent: VDS.RDF.Query.Inference.Pellet
  name: KnowledgeBase
  nameWithType: KnowledgeBase
  fullName: VDS.RDF.Query.Inference.Pellet.KnowledgeBase
- uid: VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBases*
  commentId: Overload:VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBases
  name: GetKnowledgeBases
  nameWithType: PelletServer.GetKnowledgeBases
  fullName: VDS.RDF.Query.Inference.Pellet.PelletServer.GetKnowledgeBases
