### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Contexts.IncompleteTriple
  commentId: T:VDS.RDF.Parsing.Contexts.IncompleteTriple
  id: IncompleteTriple
  parent: VDS.RDF.Parsing.Contexts
  children:
  - VDS.RDF.Parsing.Contexts.IncompleteTriple.#ctor(VDS.RDF.INode,VDS.RDF.Parsing.Contexts.IncompleteTripleDirection)
  - VDS.RDF.Parsing.Contexts.IncompleteTriple.Direction
  - VDS.RDF.Parsing.Contexts.IncompleteTriple.Predicate
  langs:
  - csharp
  - vb
  name: IncompleteTriple
  nameWithType: IncompleteTriple
  fullName: VDS.RDF.Parsing.Contexts.IncompleteTriple
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/IncompleteTriple.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IncompleteTriple
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/IncompleteTriple.cs
    startLine: 31
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nRepresents an incomplete Triple as part of the RDFa parsing process.\n"
  example: []
  syntax:
    content: public class IncompleteTriple
    content.vb: Public Class IncompleteTriple
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.Contexts.IncompleteTriple.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.Contexts.IncompleteTriple.#ctor(VDS.RDF.INode,VDS.RDF.Parsing.Contexts.IncompleteTripleDirection)
  commentId: M:VDS.RDF.Parsing.Contexts.IncompleteTriple.#ctor(VDS.RDF.INode,VDS.RDF.Parsing.Contexts.IncompleteTripleDirection)
  id: '#ctor(VDS.RDF.INode,VDS.RDF.Parsing.Contexts.IncompleteTripleDirection)'
  parent: VDS.RDF.Parsing.Contexts.IncompleteTriple
  langs:
  - csharp
  - vb
  name: IncompleteTriple(INode, IncompleteTripleDirection)
  nameWithType: IncompleteTriple.IncompleteTriple(INode, IncompleteTripleDirection)
  fullName: VDS.RDF.Parsing.Contexts.IncompleteTriple.IncompleteTriple(VDS.RDF.INode, VDS.RDF.Parsing.Contexts.IncompleteTripleDirection)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/IncompleteTriple.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/IncompleteTriple.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Incomplete Triple.\n"
  example: []
  syntax:
    content: public IncompleteTriple(INode pred, IncompleteTripleDirection direction)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: direction
      type: VDS.RDF.Parsing.Contexts.IncompleteTripleDirection
      description: Direction.
    content.vb: Public Sub New(pred As INode, direction As IncompleteTripleDirection)
  overload: VDS.RDF.Parsing.Contexts.IncompleteTriple.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.IncompleteTriple.Predicate
  commentId: P:VDS.RDF.Parsing.Contexts.IncompleteTriple.Predicate
  id: Predicate
  parent: VDS.RDF.Parsing.Contexts.IncompleteTriple
  langs:
  - csharp
  - vb
  name: Predicate
  nameWithType: IncompleteTriple.Predicate
  fullName: VDS.RDF.Parsing.Contexts.IncompleteTriple.Predicate
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/IncompleteTriple.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Predicate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/IncompleteTriple.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Predicate of the Incomplete Triple.\n"
  example: []
  syntax:
    content: public INode Predicate { get; }
    parameters: []
    return:
      type: VDS.RDF.INode
    content.vb: Public ReadOnly Property Predicate As INode
  overload: VDS.RDF.Parsing.Contexts.IncompleteTriple.Predicate*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Contexts.IncompleteTriple.Direction
  commentId: P:VDS.RDF.Parsing.Contexts.IncompleteTriple.Direction
  id: Direction
  parent: VDS.RDF.Parsing.Contexts.IncompleteTriple
  langs:
  - csharp
  - vb
  name: Direction
  nameWithType: IncompleteTriple.Direction
  fullName: VDS.RDF.Parsing.Contexts.IncompleteTriple.Direction
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/IncompleteTriple.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Direction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/IncompleteTriple.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Direction of the Incomplete Triple.\n"
  example: []
  syntax:
    content: public IncompleteTripleDirection Direction { get; }
    parameters: []
    return:
      type: VDS.RDF.Parsing.Contexts.IncompleteTripleDirection
    content.vb: Public ReadOnly Property Direction As IncompleteTripleDirection
  overload: VDS.RDF.Parsing.Contexts.IncompleteTriple.Direction*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VDS.RDF.Parsing.Contexts
  commentId: N:VDS.RDF.Parsing.Contexts
  name: VDS.RDF.Parsing.Contexts
  nameWithType: VDS.RDF.Parsing.Contexts
  fullName: VDS.RDF.Parsing.Contexts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Contexts.IncompleteTriple.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IncompleteTriple>()
  nameWithType: Extensions.AsEnumerable<IncompleteTriple>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.IncompleteTriple>()
  nameWithType.vb: Extensions.AsEnumerable(Of IncompleteTriple)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.IncompleteTriple)()
  name.vb: AsEnumerable(Of IncompleteTriple)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IncompleteTriple>
    nameWithType: Extensions.AsEnumerable<IncompleteTriple>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.IncompleteTriple>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IncompleteTriple)
    nameWithType: Extensions.AsEnumerable(Of IncompleteTriple)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.IncompleteTriple)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Contexts.IncompleteTriple.#ctor*
  commentId: Overload:VDS.RDF.Parsing.Contexts.IncompleteTriple.#ctor
  name: IncompleteTriple
  nameWithType: IncompleteTriple.IncompleteTriple
  fullName: VDS.RDF.Parsing.Contexts.IncompleteTriple.IncompleteTriple
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Parsing.Contexts.IncompleteTripleDirection
  commentId: T:VDS.RDF.Parsing.Contexts.IncompleteTripleDirection
  parent: VDS.RDF.Parsing.Contexts
  name: IncompleteTripleDirection
  nameWithType: IncompleteTripleDirection
  fullName: VDS.RDF.Parsing.Contexts.IncompleteTripleDirection
- uid: VDS.RDF.Parsing.Contexts.IncompleteTriple.Predicate*
  commentId: Overload:VDS.RDF.Parsing.Contexts.IncompleteTriple.Predicate
  name: Predicate
  nameWithType: IncompleteTriple.Predicate
  fullName: VDS.RDF.Parsing.Contexts.IncompleteTriple.Predicate
- uid: VDS.RDF.Parsing.Contexts.IncompleteTriple.Direction*
  commentId: Overload:VDS.RDF.Parsing.Contexts.IncompleteTriple.Direction
  name: Direction
  nameWithType: IncompleteTriple.Direction
  fullName: VDS.RDF.Parsing.Contexts.IncompleteTriple.Direction
