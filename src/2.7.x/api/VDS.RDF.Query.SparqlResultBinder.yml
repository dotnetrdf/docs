### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.SparqlResultBinder
  commentId: T:VDS.RDF.Query.SparqlResultBinder
  id: SparqlResultBinder
  parent: VDS.RDF.Query
  children:
  - VDS.RDF.Query.SparqlResultBinder.#ctor
  - VDS.RDF.Query.SparqlResultBinder.#ctor(VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.Query.SparqlResultBinder.BindingIDs
  - VDS.RDF.Query.SparqlResultBinder.Dispose
  - VDS.RDF.Query.SparqlResultBinder.Group(System.Int32)
  - VDS.RDF.Query.SparqlResultBinder.Groups
  - VDS.RDF.Query.SparqlResultBinder.IsGroup(System.Int32)
  - VDS.RDF.Query.SparqlResultBinder.SetGroupContext(System.Boolean)
  - VDS.RDF.Query.SparqlResultBinder.Value(System.String,System.Int32)
  - VDS.RDF.Query.SparqlResultBinder.Variables
  langs:
  - csharp
  - vb
  name: SparqlResultBinder
  nameWithType: SparqlResultBinder
  fullName: VDS.RDF.Query.SparqlResultBinder
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlResultBinder
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nHelper Class used in the execution of Sparql Queries.\n"
  remarks: "\n"
  example: []
  syntax:
    content: 'public abstract class SparqlResultBinder : IDisposable'
    content.vb: >-
      Public MustInherit Class SparqlResultBinder
          Implements IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Query.LeviathanLeftJoinBinder
  - VDS.RDF.Query.LeviathanResultBinder
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.SparqlResultBinder.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.Query.SparqlResultBinder.#ctor
  commentId: M:VDS.RDF.Query.SparqlResultBinder.#ctor
  id: '#ctor'
  parent: VDS.RDF.Query.SparqlResultBinder
  langs:
  - csharp
  - vb
  name: SparqlResultBinder()
  nameWithType: SparqlResultBinder.SparqlResultBinder()
  fullName: VDS.RDF.Query.SparqlResultBinder.SparqlResultBinder()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nInternal Empty Constructor for derived classes.\n"
  example: []
  syntax:
    content: protected SparqlResultBinder()
    content.vb: Protected Sub New
  overload: VDS.RDF.Query.SparqlResultBinder.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Query.SparqlResultBinder.#ctor(VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.Query.SparqlResultBinder.#ctor(VDS.RDF.Query.SparqlQuery)
  id: '#ctor(VDS.RDF.Query.SparqlQuery)'
  parent: VDS.RDF.Query.SparqlResultBinder
  langs:
  - csharp
  - vb
  name: SparqlResultBinder(SparqlQuery)
  nameWithType: SparqlResultBinder.SparqlResultBinder(SparqlQuery)
  fullName: VDS.RDF.Query.SparqlResultBinder.SparqlResultBinder(VDS.RDF.Query.SparqlQuery)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCreates a new Results Binder.\n"
  example: []
  syntax:
    content: public SparqlResultBinder(SparqlQuery query)
    parameters:
    - id: query
      type: VDS.RDF.Query.SparqlQuery
      description: Query this provides Result Binding to.
    content.vb: Public Sub New(query As SparqlQuery)
  overload: VDS.RDF.Query.SparqlResultBinder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.SparqlResultBinder.Variables
  commentId: P:VDS.RDF.Query.SparqlResultBinder.Variables
  id: Variables
  parent: VDS.RDF.Query.SparqlResultBinder
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: SparqlResultBinder.Variables
  fullName: VDS.RDF.Query.SparqlResultBinder.Variables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
    startLine: 64
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the Variables that the Binder stores Bindings for.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<string> Variables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public MustOverride ReadOnly Property Variables As IEnumerable(Of String)
  overload: VDS.RDF.Query.SparqlResultBinder.Variables*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VDS.RDF.Query.SparqlResultBinder.BindingIDs
  commentId: P:VDS.RDF.Query.SparqlResultBinder.BindingIDs
  id: BindingIDs
  parent: VDS.RDF.Query.SparqlResultBinder
  langs:
  - csharp
  - vb
  name: BindingIDs
  nameWithType: SparqlResultBinder.BindingIDs
  fullName: VDS.RDF.Query.SparqlResultBinder.BindingIDs
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BindingIDs
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
    startLine: 72
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the enumeration of valid Binding IDs.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<int> BindingIDs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
    content.vb: Public MustOverride ReadOnly Property BindingIDs As IEnumerable(Of Integer)
  overload: VDS.RDF.Query.SparqlResultBinder.BindingIDs*
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VDS.RDF.Query.SparqlResultBinder.Groups
  commentId: P:VDS.RDF.Query.SparqlResultBinder.Groups
  id: Groups
  parent: VDS.RDF.Query.SparqlResultBinder
  langs:
  - csharp
  - vb
  name: Groups
  nameWithType: SparqlResultBinder.Groups
  fullName: VDS.RDF.Query.SparqlResultBinder.Groups
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Groups
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
    startLine: 80
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the set of Groups that result from the Query this Binder provides Binding to.\n"
  example: []
  syntax:
    content: public IEnumerable<BindingGroup> Groups { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.BindingGroup}
    content.vb: Public ReadOnly Property Groups As IEnumerable(Of BindingGroup)
  overload: VDS.RDF.Query.SparqlResultBinder.Groups*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.SparqlResultBinder.Value(System.String,System.Int32)
  commentId: M:VDS.RDF.Query.SparqlResultBinder.Value(System.String,System.Int32)
  id: Value(System.String,System.Int32)
  parent: VDS.RDF.Query.SparqlResultBinder
  langs:
  - csharp
  - vb
  name: Value(String, Int32)
  nameWithType: SparqlResultBinder.Value(String, Int32)
  fullName: VDS.RDF.Query.SparqlResultBinder.Value(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Value
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
    startLine: 102
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the Value bound to a given Variable for a given Binding ID.\n"
  example: []
  syntax:
    content: public abstract INode Value(string name, int bindingID)
    parameters:
    - id: name
      type: System.String
      description: Variable Name.
    - id: bindingID
      type: System.Int32
      description: Binding ID.
    return:
      type: VDS.RDF.INode
      description: ''
    content.vb: Public MustOverride Function Value(name As String, bindingID As Integer) As INode
  overload: VDS.RDF.Query.SparqlResultBinder.Value*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.Query.SparqlResultBinder.Group(System.Int32)
  commentId: M:VDS.RDF.Query.SparqlResultBinder.Group(System.Int32)
  id: Group(System.Int32)
  parent: VDS.RDF.Query.SparqlResultBinder
  langs:
  - csharp
  - vb
  name: Group(Int32)
  nameWithType: SparqlResultBinder.Group(Int32)
  fullName: VDS.RDF.Query.SparqlResultBinder.Group(System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Group
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
    startLine: 109
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets the Group referred to by the given ID.\n"
  example: []
  syntax:
    content: public virtual BindingGroup Group(int groupID)
    parameters:
    - id: groupID
      type: System.Int32
      description: Group ID.
    return:
      type: VDS.RDF.Query.BindingGroup
      description: ''
    content.vb: Public Overridable Function Group(groupID As Integer) As BindingGroup
  overload: VDS.RDF.Query.SparqlResultBinder.Group*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.SparqlResultBinder.IsGroup(System.Int32)
  commentId: M:VDS.RDF.Query.SparqlResultBinder.IsGroup(System.Int32)
  id: IsGroup(System.Int32)
  parent: VDS.RDF.Query.SparqlResultBinder
  langs:
  - csharp
  - vb
  name: IsGroup(Int32)
  nameWithType: SparqlResultBinder.IsGroup(Int32)
  fullName: VDS.RDF.Query.SparqlResultBinder.IsGroup(System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsGroup
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
    startLine: 133
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether the given ID refers to a Group.\n"
  example: []
  syntax:
    content: public virtual bool IsGroup(int groupID)
    parameters:
    - id: groupID
      type: System.Int32
      description: Group ID.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function IsGroup(groupID As Integer) As Boolean
  overload: VDS.RDF.Query.SparqlResultBinder.IsGroup*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.SparqlResultBinder.SetGroupContext(System.Boolean)
  commentId: M:VDS.RDF.Query.SparqlResultBinder.SetGroupContext(System.Boolean)
  id: SetGroupContext(System.Boolean)
  parent: VDS.RDF.Query.SparqlResultBinder
  langs:
  - csharp
  - vb
  name: SetGroupContext(Boolean)
  nameWithType: SparqlResultBinder.SetGroupContext(Boolean)
  fullName: VDS.RDF.Query.SparqlResultBinder.SetGroupContext(System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetGroupContext
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
    startLine: 149
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nSets the Group Context for the Binder.\n"
  example: []
  syntax:
    content: public virtual void SetGroupContext(bool accessContents)
    parameters:
    - id: accessContents
      type: System.Boolean
      description: Whether you want to access the Group Contents or the Groups themselves.
    content.vb: Public Overridable Sub SetGroupContext(accessContents As Boolean)
  overload: VDS.RDF.Query.SparqlResultBinder.SetGroupContext*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.SparqlResultBinder.Dispose
  commentId: M:VDS.RDF.Query.SparqlResultBinder.Dispose
  id: Dispose
  parent: VDS.RDF.Query.SparqlResultBinder
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: SparqlResultBinder.Dispose()
  fullName: VDS.RDF.Query.SparqlResultBinder.Dispose()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dispose
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLResultBinder.cs
    startLine: 156
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nDisposes of a Result Binder.\n"
  example: []
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  overload: VDS.RDF.Query.SparqlResultBinder.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlResultBinder.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlResultBinder>()
  nameWithType: Extensions.AsEnumerable<SparqlResultBinder>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlResultBinder>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlResultBinder)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlResultBinder)()
  name.vb: AsEnumerable(Of SparqlResultBinder)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlResultBinder>
    nameWithType: Extensions.AsEnumerable<SparqlResultBinder>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlResultBinder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlResultBinder)
    nameWithType: Extensions.AsEnumerable(Of SparqlResultBinder)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlResultBinder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.SparqlResultBinder.#ctor*
  commentId: Overload:VDS.RDF.Query.SparqlResultBinder.#ctor
  name: SparqlResultBinder
  nameWithType: SparqlResultBinder.SparqlResultBinder
  fullName: VDS.RDF.Query.SparqlResultBinder.SparqlResultBinder
- uid: VDS.RDF.Query.SparqlQuery
  commentId: T:VDS.RDF.Query.SparqlQuery
  parent: VDS.RDF.Query
  name: SparqlQuery
  nameWithType: SparqlQuery
  fullName: VDS.RDF.Query.SparqlQuery
- uid: VDS.RDF.Query.SparqlResultBinder.Variables*
  commentId: Overload:VDS.RDF.Query.SparqlResultBinder.Variables
  name: Variables
  nameWithType: SparqlResultBinder.Variables
  fullName: VDS.RDF.Query.SparqlResultBinder.Variables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.SparqlResultBinder.BindingIDs*
  commentId: Overload:VDS.RDF.Query.SparqlResultBinder.BindingIDs
  name: BindingIDs
  nameWithType: SparqlResultBinder.BindingIDs
  fullName: VDS.RDF.Query.SparqlResultBinder.BindingIDs
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlResultBinder.Groups*
  commentId: Overload:VDS.RDF.Query.SparqlResultBinder.Groups
  name: Groups
  nameWithType: SparqlResultBinder.Groups
  fullName: VDS.RDF.Query.SparqlResultBinder.Groups
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.BindingGroup}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.BindingGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<BindingGroup>
  nameWithType: IEnumerable<BindingGroup>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.BindingGroup>
  nameWithType.vb: IEnumerable(Of BindingGroup)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.BindingGroup)
  name.vb: IEnumerable(Of BindingGroup)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.BindingGroup
    name: BindingGroup
    nameWithType: BindingGroup
    fullName: VDS.RDF.Query.BindingGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.BindingGroup
    name: BindingGroup
    nameWithType: BindingGroup
    fullName: VDS.RDF.Query.BindingGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlResultBinder.Value*
  commentId: Overload:VDS.RDF.Query.SparqlResultBinder.Value
  name: Value
  nameWithType: SparqlResultBinder.Value
  fullName: VDS.RDF.Query.SparqlResultBinder.Value
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Query.SparqlResultBinder.Group*
  commentId: Overload:VDS.RDF.Query.SparqlResultBinder.Group
  name: Group
  nameWithType: SparqlResultBinder.Group
  fullName: VDS.RDF.Query.SparqlResultBinder.Group
- uid: VDS.RDF.Query.BindingGroup
  commentId: T:VDS.RDF.Query.BindingGroup
  parent: VDS.RDF.Query
  name: BindingGroup
  nameWithType: BindingGroup
  fullName: VDS.RDF.Query.BindingGroup
- uid: VDS.RDF.Query.SparqlResultBinder.IsGroup*
  commentId: Overload:VDS.RDF.Query.SparqlResultBinder.IsGroup
  name: IsGroup
  nameWithType: SparqlResultBinder.IsGroup
  fullName: VDS.RDF.Query.SparqlResultBinder.IsGroup
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.SparqlResultBinder.SetGroupContext*
  commentId: Overload:VDS.RDF.Query.SparqlResultBinder.SetGroupContext
  name: SetGroupContext
  nameWithType: SparqlResultBinder.SetGroupContext
  fullName: VDS.RDF.Query.SparqlResultBinder.SetGroupContext
- uid: VDS.RDF.Query.SparqlResultBinder.Dispose*
  commentId: Overload:VDS.RDF.Query.SparqlResultBinder.Dispose
  name: Dispose
  nameWithType: SparqlResultBinder.Dispose
  fullName: VDS.RDF.Query.SparqlResultBinder.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
