### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Builder.IPatternItemFactory
  commentId: T:VDS.RDF.Query.Builder.IPatternItemFactory
  id: IPatternItemFactory
  parent: VDS.RDF.Query.Builder
  children:
  - VDS.RDF.Query.Builder.IPatternItemFactory.CreateBlankNodeMatchPattern(System.String)
  - VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern(System.Object)
  - VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern(System.Object,System.String)
  - VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern(System.Object,System.Uri)
  - VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern(System.String,VDS.RDF.INamespaceMapper)
  - VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern(System.Uri)
  - VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern(VDS.RDF.INode)
  - VDS.RDF.Query.Builder.IPatternItemFactory.CreatePatternItem(System.Type,System.String,VDS.RDF.INamespaceMapper)
  - VDS.RDF.Query.Builder.IPatternItemFactory.CreateVariablePattern(System.String)
  langs:
  - csharp
  - vb
  name: IPatternItemFactory
  nameWithType: IPatternItemFactory
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IPatternItemFactory
    path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nInterface for creating <xref href=\"VDS.RDF.Query.Patterns.PatternItem\" data-throw-if-not-resolved=\"false\"></xref> instances.\n"
  example: []
  syntax:
    content: public interface IPatternItemFactory
    content.vb: Public Interface IPatternItemFactory
  extensionMethods:
  - VDS.RDF.Query.Builder.IPatternItemFactory.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreateVariablePattern(System.String)
  commentId: M:VDS.RDF.Query.Builder.IPatternItemFactory.CreateVariablePattern(System.String)
  id: CreateVariablePattern(System.String)
  parent: VDS.RDF.Query.Builder.IPatternItemFactory
  langs:
  - csharp
  - vb
  name: CreateVariablePattern(String)
  nameWithType: IPatternItemFactory.CreateVariablePattern(String)
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreateVariablePattern(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateVariablePattern
    path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreate a variable pattern item.\n"
  example: []
  syntax:
    content: PatternItem CreateVariablePattern(string variableName)
    parameters:
    - id: variableName
      type: System.String
      description: The name of the variable.
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
      description: ''
    content.vb: Function CreateVariablePattern(variableName As String) As PatternItem
  overload: VDS.RDF.Query.Builder.IPatternItemFactory.CreateVariablePattern*
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern(System.String,VDS.RDF.INamespaceMapper)
  commentId: M:VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern(System.String,VDS.RDF.INamespaceMapper)
  id: CreateNodeMatchPattern(System.String,VDS.RDF.INamespaceMapper)
  parent: VDS.RDF.Query.Builder.IPatternItemFactory
  langs:
  - csharp
  - vb
  name: CreateNodeMatchPattern(String, INamespaceMapper)
  nameWithType: IPatternItemFactory.CreateNodeMatchPattern(String, INamespaceMapper)
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern(System.String, VDS.RDF.INamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateNodeMatchPattern
    path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreate a URI node pattern.\n"
  example: []
  syntax:
    content: PatternItem CreateNodeMatchPattern(string qName, INamespaceMapper namespaceMapper)
    parameters:
    - id: qName
      type: System.String
      description: The CURIE representation of the URI.
    - id: namespaceMapper
      type: VDS.RDF.INamespaceMapper
      description: The mapper to use when resolving the prefix part of the CURIE.
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
      description: ''
    content.vb: Function CreateNodeMatchPattern(qName As String, namespaceMapper As INamespaceMapper) As PatternItem
  overload: VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern*
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern(System.Uri)
  commentId: M:VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern(System.Uri)
  id: CreateNodeMatchPattern(System.Uri)
  parent: VDS.RDF.Query.Builder.IPatternItemFactory
  langs:
  - csharp
  - vb
  name: CreateNodeMatchPattern(Uri)
  nameWithType: IPatternItemFactory.CreateNodeMatchPattern(Uri)
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateNodeMatchPattern
    path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreate a URI node pattern.\n"
  example: []
  syntax:
    content: PatternItem CreateNodeMatchPattern(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The URI for the pattern item.
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
      description: ''
    content.vb: Function CreateNodeMatchPattern(uri As Uri) As PatternItem
  overload: VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern*
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern(VDS.RDF.INode)
  id: CreateNodeMatchPattern(VDS.RDF.INode)
  parent: VDS.RDF.Query.Builder.IPatternItemFactory
  langs:
  - csharp
  - vb
  name: CreateNodeMatchPattern(INode)
  nameWithType: IPatternItemFactory.CreateNodeMatchPattern(INode)
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateNodeMatchPattern
    path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreate a pattern item that matches the specified node.\n"
  example: []
  syntax:
    content: PatternItem CreateNodeMatchPattern(INode node)
    parameters:
    - id: node
      type: VDS.RDF.INode
      description: The node to match.
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
      description: ''
    content.vb: Function CreateNodeMatchPattern(node As INode) As PatternItem
  overload: VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern*
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreateBlankNodeMatchPattern(System.String)
  commentId: M:VDS.RDF.Query.Builder.IPatternItemFactory.CreateBlankNodeMatchPattern(System.String)
  id: CreateBlankNodeMatchPattern(System.String)
  parent: VDS.RDF.Query.Builder.IPatternItemFactory
  langs:
  - csharp
  - vb
  name: CreateBlankNodeMatchPattern(String)
  nameWithType: IPatternItemFactory.CreateBlankNodeMatchPattern(String)
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreateBlankNodeMatchPattern(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlankNodeMatchPattern
    path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreate a pattern item that matches a specific blank node.\n"
  example: []
  syntax:
    content: PatternItem CreateBlankNodeMatchPattern(string blankNodeIdentifier)
    parameters:
    - id: blankNodeIdentifier
      type: System.String
      description: The blank node identifier to match.
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
      description: ''
    content.vb: Function CreateBlankNodeMatchPattern(blankNodeIdentifier As String) As PatternItem
  overload: VDS.RDF.Query.Builder.IPatternItemFactory.CreateBlankNodeMatchPattern*
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern(System.Object)
  commentId: M:VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern(System.Object)
  id: CreateLiteralNodeMatchPattern(System.Object)
  parent: VDS.RDF.Query.Builder.IPatternItemFactory
  langs:
  - csharp
  - vb
  name: CreateLiteralNodeMatchPattern(Object)
  nameWithType: IPatternItemFactory.CreateLiteralNodeMatchPattern(Object)
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern(System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNodeMatchPattern
    path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreate a pattern item that matches a literal value.\n"
  remarks: If <code data-dev-comment-type="paramref" class="paramref">literal</code> is a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> or <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> then the literal pattern will use the appropriate XML Schema-compatible string representation as the literal value. For all other types, the value returned by the ToString method will be used as the literal value.
  example: []
  syntax:
    content: PatternItem CreateLiteralNodeMatchPattern(object literal)
    parameters:
    - id: literal
      type: System.Object
      description: The value to match as a literal.
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
      description: ''
    content.vb: Function CreateLiteralNodeMatchPattern(literal As Object) As PatternItem
  overload: VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern*
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern(System.Object,System.Uri)
  commentId: M:VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern(System.Object,System.Uri)
  id: CreateLiteralNodeMatchPattern(System.Object,System.Uri)
  parent: VDS.RDF.Query.Builder.IPatternItemFactory
  langs:
  - csharp
  - vb
  name: CreateLiteralNodeMatchPattern(Object, Uri)
  nameWithType: IPatternItemFactory.CreateLiteralNodeMatchPattern(Object, Uri)
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern(System.Object, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNodeMatchPattern
    path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
    startLine: 87
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreate a pattern item that matches a literal value with its associated datatype.\n"
  remarks: If <code data-dev-comment-type="paramref" class="paramref">literal</code> is a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> or <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> then the literal pattern will use the appropriate XML Schema-compatible string representation as the literal value. For all other types, the value returned by the ToString method will be used as the literal value.
  example: []
  syntax:
    content: PatternItem CreateLiteralNodeMatchPattern(object literal, Uri datatype)
    parameters:
    - id: literal
      type: System.Object
      description: The literal value to match.
    - id: datatype
      type: System.Uri
      description: The literal datatype URI to match.
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
      description: ''
    content.vb: Function CreateLiteralNodeMatchPattern(literal As Object, datatype As Uri) As PatternItem
  overload: VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern*
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern(System.Object,System.String)
  commentId: M:VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern(System.Object,System.String)
  id: CreateLiteralNodeMatchPattern(System.Object,System.String)
  parent: VDS.RDF.Query.Builder.IPatternItemFactory
  langs:
  - csharp
  - vb
  name: CreateLiteralNodeMatchPattern(Object, String)
  nameWithType: IPatternItemFactory.CreateLiteralNodeMatchPattern(Object, String)
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern(System.Object, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNodeMatchPattern
    path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
    startLine: 96
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreate a pattern item that matches a literal value with an associated language tag.\n"
  remarks: If <code data-dev-comment-type="paramref" class="paramref">literal</code> is a <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> or <xref href="System.DateTimeOffset" data-throw-if-not-resolved="false"></xref> then the literal pattern will use the appropriate XML Schema-compatible string representation as the literal value. For all other types, the value returned by the ToString method will be used as the literal value.
  example: []
  syntax:
    content: PatternItem CreateLiteralNodeMatchPattern(object literal, string langSpec)
    parameters:
    - id: literal
      type: System.Object
      description: The literal value to match.
    - id: langSpec
      type: System.String
      description: The language tag to match.
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
      description: ''
    content.vb: Function CreateLiteralNodeMatchPattern(literal As Object, langSpec As String) As PatternItem
  overload: VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern*
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreatePatternItem(System.Type,System.String,VDS.RDF.INamespaceMapper)
  commentId: M:VDS.RDF.Query.Builder.IPatternItemFactory.CreatePatternItem(System.Type,System.String,VDS.RDF.INamespaceMapper)
  id: CreatePatternItem(System.Type,System.String,VDS.RDF.INamespaceMapper)
  parent: VDS.RDF.Query.Builder.IPatternItemFactory
  langs:
  - csharp
  - vb
  name: CreatePatternItem(Type, String, INamespaceMapper)
  nameWithType: IPatternItemFactory.CreatePatternItem(Type, String, INamespaceMapper)
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreatePatternItem(System.Type, System.String, VDS.RDF.INamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreatePatternItem
    path: Libraries/dotNetRDF/Query/Builder/IPatternItemFactory.cs
    startLine: 106
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nCreate a pattern item that matches a node of a specific type.\n"
  remarks: It is recommended to use one of the CreateXxxNodeMatchPattern methods in preference to this method.
  example: []
  syntax:
    content: PatternItem CreatePatternItem(Type nodeType, string patternString, INamespaceMapper namespaceMapper)
    parameters:
    - id: nodeType
      type: System.Type
      description: The type of node to match. Must be one of <xref href="VDS.RDF.IBlankNode" data-throw-if-not-resolved="false"></xref>, <xref href="VDS.RDF.ILiteralNode" data-throw-if-not-resolved="false"></xref>, <xref href="VDS.RDF.IUriNode" data-throw-if-not-resolved="false"></xref> or <xref href="VDS.RDF.IVariableNode" data-throw-if-not-resolved="false"></xref>.
    - id: patternString
      type: System.String
      description: The string value of the pattern item.
    - id: namespaceMapper
      type: VDS.RDF.INamespaceMapper
      description: The namespace mapper to use when resolving any prefixes in <code data-dev-comment-type="paramref" class="paramref">patternString</code>.
    return:
      type: VDS.RDF.Query.Patterns.PatternItem
      description: ''
    content.vb: Function CreatePatternItem(nodeType As Type, patternString As String, namespaceMapper As INamespaceMapper) As PatternItem
  overload: VDS.RDF.Query.Builder.IPatternItemFactory.CreatePatternItem*
references:
- uid: VDS.RDF.Query.Patterns.PatternItem
  commentId: T:VDS.RDF.Query.Patterns.PatternItem
  parent: VDS.RDF.Query.Patterns
  name: PatternItem
  nameWithType: PatternItem
  fullName: VDS.RDF.Query.Patterns.PatternItem
- uid: VDS.RDF.Query.Builder
  commentId: N:VDS.RDF.Query.Builder
  name: VDS.RDF.Query.Builder
  nameWithType: VDS.RDF.Query.Builder
  fullName: VDS.RDF.Query.Builder
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IPatternItemFactory>()
  nameWithType: Extensions.AsEnumerable<IPatternItemFactory>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.IPatternItemFactory>()
  nameWithType.vb: Extensions.AsEnumerable(Of IPatternItemFactory)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.IPatternItemFactory)()
  name.vb: AsEnumerable(Of IPatternItemFactory)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IPatternItemFactory>
    nameWithType: Extensions.AsEnumerable<IPatternItemFactory>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.IPatternItemFactory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IPatternItemFactory)
    nameWithType: Extensions.AsEnumerable(Of IPatternItemFactory)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.IPatternItemFactory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreateVariablePattern*
  commentId: Overload:VDS.RDF.Query.Builder.IPatternItemFactory.CreateVariablePattern
  name: CreateVariablePattern
  nameWithType: IPatternItemFactory.CreateVariablePattern
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreateVariablePattern
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern*
  commentId: Overload:VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern
  name: CreateNodeMatchPattern
  nameWithType: IPatternItemFactory.CreateNodeMatchPattern
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreateNodeMatchPattern
- uid: VDS.RDF.INamespaceMapper
  commentId: T:VDS.RDF.INamespaceMapper
  parent: VDS.RDF
  name: INamespaceMapper
  nameWithType: INamespaceMapper
  fullName: VDS.RDF.INamespaceMapper
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreateBlankNodeMatchPattern*
  commentId: Overload:VDS.RDF.Query.Builder.IPatternItemFactory.CreateBlankNodeMatchPattern
  name: CreateBlankNodeMatchPattern
  nameWithType: IPatternItemFactory.CreateBlankNodeMatchPattern
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreateBlankNodeMatchPattern
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern*
  commentId: Overload:VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern
  name: CreateLiteralNodeMatchPattern
  nameWithType: IPatternItemFactory.CreateLiteralNodeMatchPattern
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreateLiteralNodeMatchPattern
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.IBlankNode
  commentId: T:VDS.RDF.IBlankNode
  parent: VDS.RDF
  name: IBlankNode
  nameWithType: IBlankNode
  fullName: VDS.RDF.IBlankNode
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: VDS.RDF.IUriNode
  commentId: T:VDS.RDF.IUriNode
  parent: VDS.RDF
  name: IUriNode
  nameWithType: IUriNode
  fullName: VDS.RDF.IUriNode
- uid: VDS.RDF.IVariableNode
  commentId: T:VDS.RDF.IVariableNode
  parent: VDS.RDF
  name: IVariableNode
  nameWithType: IVariableNode
  fullName: VDS.RDF.IVariableNode
- uid: VDS.RDF.Query.Builder.IPatternItemFactory.CreatePatternItem*
  commentId: Overload:VDS.RDF.Query.Builder.IPatternItemFactory.CreatePatternItem
  name: CreatePatternItem
  nameWithType: IPatternItemFactory.CreatePatternItem
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory.CreatePatternItem
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
shouldSkipMarkup: true
