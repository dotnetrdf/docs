### YamlMime:ManagedReference
items:
- uid: VDS.RDF.MimeTypeSelector
  commentId: T:VDS.RDF.MimeTypeSelector
  id: MimeTypeSelector
  parent: VDS.RDF
  children:
  - VDS.RDF.MimeTypeSelector.#ctor(System.String,System.String,System.Double,System.Int32)
  - VDS.RDF.MimeTypeSelector.Charset
  - VDS.RDF.MimeTypeSelector.CompareTo(VDS.RDF.MimeTypeSelector)
  - VDS.RDF.MimeTypeSelector.Create(System.String,System.Int32)
  - VDS.RDF.MimeTypeSelector.CreateSelectors(System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.MimeTypeSelector.IsAny
  - VDS.RDF.MimeTypeSelector.IsInvalid
  - VDS.RDF.MimeTypeSelector.IsRange
  - VDS.RDF.MimeTypeSelector.IsSpecific
  - VDS.RDF.MimeTypeSelector.Order
  - VDS.RDF.MimeTypeSelector.Quality
  - VDS.RDF.MimeTypeSelector.RangeType
  - VDS.RDF.MimeTypeSelector.ToString
  - VDS.RDF.MimeTypeSelector.Type
  langs:
  - csharp
  - vb
  name: MimeTypeSelector
  nameWithType: MimeTypeSelector
  fullName: VDS.RDF.MimeTypeSelector
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MimeTypeSelector
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 832
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelector used in selecting which MIME type to use.\n"
  example: []
  syntax:
    content: 'public sealed class MimeTypeSelector : IComparable<MimeTypeSelector>'
    content.vb: >-
      Public NotInheritable Class MimeTypeSelector
          Implements IComparable(Of MimeTypeSelector)
  inheritance:
  - System.Object
  implements:
  - System.IComparable{VDS.RDF.MimeTypeSelector}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.MimeTypeSelector.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: VDS.RDF.MimeTypeSelector.Create(System.String,System.Int32)
  commentId: M:VDS.RDF.MimeTypeSelector.Create(System.String,System.Int32)
  id: Create(System.String,System.Int32)
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: Create(String, Int32)
  nameWithType: MimeTypeSelector.Create(String, Int32)
  fullName: VDS.RDF.MimeTypeSelector.Create(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Create
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 846
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a MIME Type selector.\n"
  example: []
  syntax:
    content: public static MimeTypeSelector Create(string contentType, int order)
    parameters:
    - id: contentType
      type: System.String
      description: MIME Type.
    - id: order
      type: System.Int32
      description: Order the selector appears in the input.
    return:
      type: VDS.RDF.MimeTypeSelector
      description: ''
    content.vb: Public Shared Function Create(contentType As String, order As Integer) As MimeTypeSelector
  overload: VDS.RDF.MimeTypeSelector.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.MimeTypeSelector.CreateSelectors(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.MimeTypeSelector.CreateSelectors(System.Collections.Generic.IEnumerable{System.String})
  id: CreateSelectors(System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: CreateSelectors(IEnumerable<String>)
  nameWithType: MimeTypeSelector.CreateSelectors(IEnumerable<String>)
  fullName: VDS.RDF.MimeTypeSelector.CreateSelectors(System.Collections.Generic.IEnumerable<System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateSelectors
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 886
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates an enumeration of MIME type selectors.\n"
  example: []
  syntax:
    content: public static IEnumerable<MimeTypeSelector> CreateSelectors(IEnumerable<string> ctypes)
    parameters:
    - id: ctypes
      type: System.Collections.Generic.IEnumerable{System.String}
      description: MIME Types.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.MimeTypeSelector}
      description: ''
    content.vb: Public Shared Function CreateSelectors(ctypes As IEnumerable(Of String)) As IEnumerable(Of MimeTypeSelector)
  overload: VDS.RDF.MimeTypeSelector.CreateSelectors*
  nameWithType.vb: MimeTypeSelector.CreateSelectors(IEnumerable(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.MimeTypeSelector.CreateSelectors(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: CreateSelectors(IEnumerable(Of String))
- uid: VDS.RDF.MimeTypeSelector.#ctor(System.String,System.String,System.Double,System.Int32)
  commentId: M:VDS.RDF.MimeTypeSelector.#ctor(System.String,System.String,System.Double,System.Int32)
  id: '#ctor(System.String,System.String,System.Double,System.Int32)'
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: MimeTypeSelector(String, String, Double, Int32)
  nameWithType: MimeTypeSelector.MimeTypeSelector(String, String, Double, Int32)
  fullName: VDS.RDF.MimeTypeSelector.MimeTypeSelector(System.String, System.String, System.Double, System.Int32)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 922
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new MIME Type Selector.\n"
  example: []
  syntax:
    content: public MimeTypeSelector(string type, string charset, double quality, int order)
    parameters:
    - id: type
      type: System.String
      description: MIME Type to match.
    - id: charset
      type: System.String
      description: Charset.
    - id: quality
      type: System.Double
      description: Quality (in range 0.0-1.0).
    - id: order
      type: System.Int32
      description: Order of appearance (used as precendence tiebreaker where necessary).
    content.vb: Public Sub New(type As String, charset As String, quality As Double, order As Integer)
  overload: VDS.RDF.MimeTypeSelector.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.MimeTypeSelector.Type
  commentId: P:VDS.RDF.MimeTypeSelector.Type
  id: Type
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MimeTypeSelector.Type
  fullName: VDS.RDF.MimeTypeSelector.Type
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Type
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 968
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the selected type.\n"
  example: []
  syntax:
    content: public string Type { get; }
    parameters: []
    return:
      type: System.String
      description: A type string of the form <strong>type/subtype</strong> assuming the type if valid.
    content.vb: Public ReadOnly Property Type As String
  overload: VDS.RDF.MimeTypeSelector.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.MimeTypeSelector.RangeType
  commentId: P:VDS.RDF.MimeTypeSelector.RangeType
  id: RangeType
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: RangeType
  nameWithType: MimeTypeSelector.RangeType
  fullName: VDS.RDF.MimeTypeSelector.RangeType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RangeType
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 980
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the range type if this is a range selector.\n"
  example: []
  syntax:
    content: public string RangeType { get; }
    parameters: []
    return:
      type: System.String
      description: A type string of the form <strong>type/</strong> if this is a range selector, otherwise null.
    content.vb: Public ReadOnly Property RangeType As String
  overload: VDS.RDF.MimeTypeSelector.RangeType*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.MimeTypeSelector.Charset
  commentId: P:VDS.RDF.MimeTypeSelector.Charset
  id: Charset
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: Charset
  nameWithType: MimeTypeSelector.Charset
  fullName: VDS.RDF.MimeTypeSelector.Charset
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Charset
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 991
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Charset for the selector (may be null if none specified).\n"
  example: []
  syntax:
    content: public string Charset { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Charset As String
  overload: VDS.RDF.MimeTypeSelector.Charset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.MimeTypeSelector.Quality
  commentId: P:VDS.RDF.MimeTypeSelector.Quality
  id: Quality
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: Quality
  nameWithType: MimeTypeSelector.Quality
  fullName: VDS.RDF.MimeTypeSelector.Quality
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Quality
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 1002
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the quality for the selector (range of 0.0-1.0).\n"
  example: []
  syntax:
    content: public double Quality { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Quality As Double
  overload: VDS.RDF.MimeTypeSelector.Quality*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.MimeTypeSelector.Order
  commentId: P:VDS.RDF.MimeTypeSelector.Order
  id: Order
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: Order
  nameWithType: MimeTypeSelector.Order
  fullName: VDS.RDF.MimeTypeSelector.Order
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Order
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 1013
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the order of apperance for the selector (used as precedence tiebreaker where necessary).\n"
  example: []
  syntax:
    content: public int Order { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Order As Integer
  overload: VDS.RDF.MimeTypeSelector.Order*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.MimeTypeSelector.IsAny
  commentId: P:VDS.RDF.MimeTypeSelector.IsAny
  id: IsAny
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: IsAny
  nameWithType: MimeTypeSelector.IsAny
  fullName: VDS.RDF.MimeTypeSelector.IsAny
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAny
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 1024
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether the selector if for a */* pattern i.e. accept any.\n"
  example: []
  syntax:
    content: public bool IsAny { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAny As Boolean
  overload: VDS.RDF.MimeTypeSelector.IsAny*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.MimeTypeSelector.IsRange
  commentId: P:VDS.RDF.MimeTypeSelector.IsRange
  id: IsRange
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: IsRange
  nameWithType: MimeTypeSelector.IsRange
  fullName: VDS.RDF.MimeTypeSelector.IsRange
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsRange
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 1035
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether the selector is for a type/* pattern i.e. accept any sub-type of the given type.\n"
  example: []
  syntax:
    content: public bool IsRange { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsRange As Boolean
  overload: VDS.RDF.MimeTypeSelector.IsRange*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.MimeTypeSelector.IsInvalid
  commentId: P:VDS.RDF.MimeTypeSelector.IsInvalid
  id: IsInvalid
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: IsInvalid
  nameWithType: MimeTypeSelector.IsInvalid
  fullName: VDS.RDF.MimeTypeSelector.IsInvalid
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsInvalid
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 1046
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether the selector is invalid.\n"
  example: []
  syntax:
    content: public bool IsInvalid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInvalid As Boolean
  overload: VDS.RDF.MimeTypeSelector.IsInvalid*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.MimeTypeSelector.IsSpecific
  commentId: P:VDS.RDF.MimeTypeSelector.IsSpecific
  id: IsSpecific
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: IsSpecific
  nameWithType: MimeTypeSelector.IsSpecific
  fullName: VDS.RDF.MimeTypeSelector.IsSpecific
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSpecific
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 1057
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether the selector is for a specific MIME type e.g. type/sub-type.\n"
  example: []
  syntax:
    content: public bool IsSpecific { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsSpecific As Boolean
  overload: VDS.RDF.MimeTypeSelector.IsSpecific*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.MimeTypeSelector.CompareTo(VDS.RDF.MimeTypeSelector)
  commentId: M:VDS.RDF.MimeTypeSelector.CompareTo(VDS.RDF.MimeTypeSelector)
  id: CompareTo(VDS.RDF.MimeTypeSelector)
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: CompareTo(MimeTypeSelector)
  nameWithType: MimeTypeSelector.CompareTo(MimeTypeSelector)
  fullName: VDS.RDF.MimeTypeSelector.CompareTo(VDS.RDF.MimeTypeSelector)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 1070
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSorts the selector in precedence order according to the content negotiation rules from the relevant RFCs.\n"
  example: []
  syntax:
    content: public int CompareTo(MimeTypeSelector other)
    parameters:
    - id: other
      type: VDS.RDF.MimeTypeSelector
      description: Selector to compare against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function CompareTo(other As MimeTypeSelector) As Integer
  overload: VDS.RDF.MimeTypeSelector.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.MimeTypeSelector}.CompareTo(VDS.RDF.MimeTypeSelector)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.MimeTypeSelector.ToString
  commentId: M:VDS.RDF.MimeTypeSelector.ToString
  id: ToString
  parent: VDS.RDF.MimeTypeSelector
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MimeTypeSelector.ToString()
  fullName: VDS.RDF.MimeTypeSelector.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF/Core/MimeTypeDefinition.cs
    startLine: 1168
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the string representation of the selector as it would appear in an Accept header.\n"
  remarks: "\nUnless this is an invalid selector this will always be a valid selector that could be appended to a MIME type header.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VDS.RDF.MimeTypeSelector.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable{VDS.RDF.MimeTypeSelector}
  commentId: T:System.IComparable{VDS.RDF.MimeTypeSelector}
  parent: System
  definition: System.IComparable`1
  name: IComparable<MimeTypeSelector>
  nameWithType: IComparable<MimeTypeSelector>
  fullName: System.IComparable<VDS.RDF.MimeTypeSelector>
  nameWithType.vb: IComparable(Of MimeTypeSelector)
  fullName.vb: System.IComparable(Of VDS.RDF.MimeTypeSelector)
  name.vb: IComparable(Of MimeTypeSelector)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.MimeTypeSelector
    name: MimeTypeSelector
    nameWithType: MimeTypeSelector
    fullName: VDS.RDF.MimeTypeSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.MimeTypeSelector
    name: MimeTypeSelector
    nameWithType: MimeTypeSelector
    fullName: VDS.RDF.MimeTypeSelector
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.MimeTypeSelector.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<MimeTypeSelector>()
  nameWithType: Extensions.AsEnumerable<MimeTypeSelector>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.MimeTypeSelector>()
  nameWithType.vb: Extensions.AsEnumerable(Of MimeTypeSelector)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.MimeTypeSelector)()
  name.vb: AsEnumerable(Of MimeTypeSelector)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<MimeTypeSelector>
    nameWithType: Extensions.AsEnumerable<MimeTypeSelector>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.MimeTypeSelector>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of MimeTypeSelector)
    nameWithType: Extensions.AsEnumerable(Of MimeTypeSelector)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.MimeTypeSelector)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.MimeTypeSelector.Create*
  commentId: Overload:VDS.RDF.MimeTypeSelector.Create
  name: Create
  nameWithType: MimeTypeSelector.Create
  fullName: VDS.RDF.MimeTypeSelector.Create
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.MimeTypeSelector
  commentId: T:VDS.RDF.MimeTypeSelector
  parent: VDS.RDF
  name: MimeTypeSelector
  nameWithType: MimeTypeSelector
  fullName: VDS.RDF.MimeTypeSelector
- uid: VDS.RDF.MimeTypeSelector.CreateSelectors*
  commentId: Overload:VDS.RDF.MimeTypeSelector.CreateSelectors
  name: CreateSelectors
  nameWithType: MimeTypeSelector.CreateSelectors
  fullName: VDS.RDF.MimeTypeSelector.CreateSelectors
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.MimeTypeSelector}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.MimeTypeSelector}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<MimeTypeSelector>
  nameWithType: IEnumerable<MimeTypeSelector>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.MimeTypeSelector>
  nameWithType.vb: IEnumerable(Of MimeTypeSelector)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.MimeTypeSelector)
  name.vb: IEnumerable(Of MimeTypeSelector)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.MimeTypeSelector
    name: MimeTypeSelector
    nameWithType: MimeTypeSelector
    fullName: VDS.RDF.MimeTypeSelector
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.MimeTypeSelector
    name: MimeTypeSelector
    nameWithType: MimeTypeSelector
    fullName: VDS.RDF.MimeTypeSelector
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.MimeTypeSelector.#ctor*
  commentId: Overload:VDS.RDF.MimeTypeSelector.#ctor
  name: MimeTypeSelector
  nameWithType: MimeTypeSelector.MimeTypeSelector
  fullName: VDS.RDF.MimeTypeSelector.MimeTypeSelector
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: VDS.RDF.MimeTypeSelector.Type*
  commentId: Overload:VDS.RDF.MimeTypeSelector.Type
  name: Type
  nameWithType: MimeTypeSelector.Type
  fullName: VDS.RDF.MimeTypeSelector.Type
- uid: VDS.RDF.MimeTypeSelector.RangeType*
  commentId: Overload:VDS.RDF.MimeTypeSelector.RangeType
  name: RangeType
  nameWithType: MimeTypeSelector.RangeType
  fullName: VDS.RDF.MimeTypeSelector.RangeType
- uid: VDS.RDF.MimeTypeSelector.Charset*
  commentId: Overload:VDS.RDF.MimeTypeSelector.Charset
  name: Charset
  nameWithType: MimeTypeSelector.Charset
  fullName: VDS.RDF.MimeTypeSelector.Charset
- uid: VDS.RDF.MimeTypeSelector.Quality*
  commentId: Overload:VDS.RDF.MimeTypeSelector.Quality
  name: Quality
  nameWithType: MimeTypeSelector.Quality
  fullName: VDS.RDF.MimeTypeSelector.Quality
- uid: VDS.RDF.MimeTypeSelector.Order*
  commentId: Overload:VDS.RDF.MimeTypeSelector.Order
  name: Order
  nameWithType: MimeTypeSelector.Order
  fullName: VDS.RDF.MimeTypeSelector.Order
- uid: VDS.RDF.MimeTypeSelector.IsAny*
  commentId: Overload:VDS.RDF.MimeTypeSelector.IsAny
  name: IsAny
  nameWithType: MimeTypeSelector.IsAny
  fullName: VDS.RDF.MimeTypeSelector.IsAny
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.MimeTypeSelector.IsRange*
  commentId: Overload:VDS.RDF.MimeTypeSelector.IsRange
  name: IsRange
  nameWithType: MimeTypeSelector.IsRange
  fullName: VDS.RDF.MimeTypeSelector.IsRange
- uid: VDS.RDF.MimeTypeSelector.IsInvalid*
  commentId: Overload:VDS.RDF.MimeTypeSelector.IsInvalid
  name: IsInvalid
  nameWithType: MimeTypeSelector.IsInvalid
  fullName: VDS.RDF.MimeTypeSelector.IsInvalid
- uid: VDS.RDF.MimeTypeSelector.IsSpecific*
  commentId: Overload:VDS.RDF.MimeTypeSelector.IsSpecific
  name: IsSpecific
  nameWithType: MimeTypeSelector.IsSpecific
  fullName: VDS.RDF.MimeTypeSelector.IsSpecific
- uid: VDS.RDF.MimeTypeSelector.CompareTo*
  commentId: Overload:VDS.RDF.MimeTypeSelector.CompareTo
  name: CompareTo
  nameWithType: MimeTypeSelector.CompareTo
  fullName: VDS.RDF.MimeTypeSelector.CompareTo
- uid: System.IComparable{VDS.RDF.MimeTypeSelector}.CompareTo(VDS.RDF.MimeTypeSelector)
  commentId: M:System.IComparable{VDS.RDF.MimeTypeSelector}.CompareTo(VDS.RDF.MimeTypeSelector)
  parent: System.IComparable{VDS.RDF.MimeTypeSelector}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(MimeTypeSelector)
  nameWithType: IComparable<MimeTypeSelector>.CompareTo(MimeTypeSelector)
  fullName: System.IComparable<VDS.RDF.MimeTypeSelector>.CompareTo(VDS.RDF.MimeTypeSelector)
  nameWithType.vb: IComparable(Of MimeTypeSelector).CompareTo(MimeTypeSelector)
  fullName.vb: System.IComparable(Of VDS.RDF.MimeTypeSelector).CompareTo(VDS.RDF.MimeTypeSelector)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<MimeTypeSelector>.CompareTo
    fullName: System.IComparable<VDS.RDF.MimeTypeSelector>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.MimeTypeSelector
    name: MimeTypeSelector
    nameWithType: MimeTypeSelector
    fullName: VDS.RDF.MimeTypeSelector
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of MimeTypeSelector).CompareTo
    fullName: System.IComparable(Of VDS.RDF.MimeTypeSelector).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.MimeTypeSelector
    name: MimeTypeSelector
    nameWithType: MimeTypeSelector
    fullName: VDS.RDF.MimeTypeSelector
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.MimeTypeSelector.ToString*
  commentId: Overload:VDS.RDF.MimeTypeSelector.ToString
  name: ToString
  nameWithType: MimeTypeSelector.ToString
  fullName: VDS.RDF.MimeTypeSelector.ToString
shouldSkipMarkup: true
