### YamlMime:ManagedReference
items:
- uid: VDS.RDF.VariableContext
  commentId: T:VDS.RDF.VariableContext
  id: VariableContext
  parent: VDS.RDF
  children:
  - VDS.RDF.VariableContext.#ctor(VDS.RDF.VariableContextType)
  - VDS.RDF.VariableContext.AddVariable(VDS.RDF.INode)
  - VDS.RDF.VariableContext.InnerContext
  - VDS.RDF.VariableContext.IsVariable(VDS.RDF.INode)
  - VDS.RDF.VariableContext.Type
  - VDS.RDF.VariableContext.Variables
  langs:
  - csharp
  - vb
  name: VariableContext
  nameWithType: VariableContext
  fullName: VDS.RDF.VariableContext
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/VariableContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: VariableContext
    path: Libraries/dotNetRDF/Core/VariableContext.cs
    startLine: 52
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRepresents the Variable Context for Triples.\n"
  example: []
  syntax:
    content: 'public class VariableContext : BasicTripleContext, ITripleContext'
    content.vb: >-
      Public Class VariableContext
          Inherits BasicTripleContext
          Implements ITripleContext
  inheritance:
  - System.Object
  - VDS.RDF.BasicTripleContext
  implements:
  - VDS.RDF.ITripleContext
  inheritedMembers:
  - VDS.RDF.BasicTripleContext.HasProperty(System.String)
  - VDS.RDF.BasicTripleContext.Item(System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.VariableContext.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.VariableContext.#ctor(VDS.RDF.VariableContextType)
  commentId: M:VDS.RDF.VariableContext.#ctor(VDS.RDF.VariableContextType)
  id: '#ctor(VDS.RDF.VariableContextType)'
  parent: VDS.RDF.VariableContext
  langs:
  - csharp
  - vb
  name: VariableContext(VariableContextType)
  nameWithType: VariableContext.VariableContext(VariableContextType)
  fullName: VDS.RDF.VariableContext.VariableContext(VDS.RDF.VariableContextType)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/VariableContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/VariableContext.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Variable Context.\n"
  example: []
  syntax:
    content: public VariableContext(VariableContextType type)
    parameters:
    - id: type
      type: VDS.RDF.VariableContextType
      description: Context Type.
    content.vb: Public Sub New(type As VariableContextType)
  overload: VDS.RDF.VariableContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.VariableContext.Type
  commentId: P:VDS.RDF.VariableContext.Type
  id: Type
  parent: VDS.RDF.VariableContext
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: VariableContext.Type
  fullName: VDS.RDF.VariableContext.Type
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/VariableContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Type
    path: Libraries/dotNetRDF/Core/VariableContext.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Context Type.\n"
  example: []
  syntax:
    content: public VariableContextType Type { get; }
    parameters: []
    return:
      type: VDS.RDF.VariableContextType
    content.vb: Public ReadOnly Property Type As VariableContextType
  overload: VDS.RDF.VariableContext.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.VariableContext.Variables
  commentId: P:VDS.RDF.VariableContext.Variables
  id: Variables
  parent: VDS.RDF.VariableContext
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: VariableContext.Variables
  fullName: VDS.RDF.VariableContext.Variables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/VariableContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variables
    path: Libraries/dotNetRDF/Core/VariableContext.cs
    startLine: 81
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Variables in this Context.\n"
  example: []
  syntax:
    content: public IEnumerable<INode> Variables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public ReadOnly Property Variables As IEnumerable(Of INode)
  overload: VDS.RDF.VariableContext.Variables*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.VariableContext.AddVariable(VDS.RDF.INode)
  commentId: M:VDS.RDF.VariableContext.AddVariable(VDS.RDF.INode)
  id: AddVariable(VDS.RDF.INode)
  parent: VDS.RDF.VariableContext
  langs:
  - csharp
  - vb
  name: AddVariable(INode)
  nameWithType: VariableContext.AddVariable(INode)
  fullName: VDS.RDF.VariableContext.AddVariable(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/VariableContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddVariable
    path: Libraries/dotNetRDF/Core/VariableContext.cs
    startLine: 93
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAdds a Variable to this Context.\n"
  example: []
  syntax:
    content: public void AddVariable(INode var)
    parameters:
    - id: var
      type: VDS.RDF.INode
      description: Variable.
    content.vb: Public Sub AddVariable(var As INode)
  overload: VDS.RDF.VariableContext.AddVariable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.VariableContext.IsVariable(VDS.RDF.INode)
  commentId: M:VDS.RDF.VariableContext.IsVariable(VDS.RDF.INode)
  id: IsVariable(VDS.RDF.INode)
  parent: VDS.RDF.VariableContext
  langs:
  - csharp
  - vb
  name: IsVariable(INode)
  nameWithType: VariableContext.IsVariable(INode)
  fullName: VDS.RDF.VariableContext.IsVariable(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/VariableContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsVariable
    path: Libraries/dotNetRDF/Core/VariableContext.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether a given Variable exists in this Context.\n"
  example: []
  syntax:
    content: public bool IsVariable(INode var)
    parameters:
    - id: var
      type: VDS.RDF.INode
      description: Variable Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsVariable(var As INode) As Boolean
  overload: VDS.RDF.VariableContext.IsVariable*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.VariableContext.InnerContext
  commentId: P:VDS.RDF.VariableContext.InnerContext
  id: InnerContext
  parent: VDS.RDF.VariableContext
  langs:
  - csharp
  - vb
  name: InnerContext
  nameWithType: VariableContext.InnerContext
  fullName: VDS.RDF.VariableContext.InnerContext
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/VariableContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: InnerContext
    path: Libraries/dotNetRDF/Core/VariableContext.cs
    startLine: 130
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets/Sets the Inner Context.\n"
  remarks: "\nWhen you set the Inner Context this sets the Inner Context of the most nested inner context, you can remove all nested contexts by setting this to null.\n"
  example: []
  syntax:
    content: public VariableContext InnerContext { get; set; }
    parameters: []
    return:
      type: VDS.RDF.VariableContext
    content.vb: Public Property InnerContext As VariableContext
  overload: VDS.RDF.VariableContext.InnerContext*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.BasicTripleContext
  commentId: T:VDS.RDF.BasicTripleContext
  parent: VDS.RDF
  name: BasicTripleContext
  nameWithType: BasicTripleContext
  fullName: VDS.RDF.BasicTripleContext
- uid: VDS.RDF.ITripleContext
  commentId: T:VDS.RDF.ITripleContext
  parent: VDS.RDF
  name: ITripleContext
  nameWithType: ITripleContext
  fullName: VDS.RDF.ITripleContext
- uid: VDS.RDF.BasicTripleContext.HasProperty(System.String)
  commentId: M:VDS.RDF.BasicTripleContext.HasProperty(System.String)
  parent: VDS.RDF.BasicTripleContext
  isExternal: true
  name: HasProperty(String)
  nameWithType: BasicTripleContext.HasProperty(String)
  fullName: VDS.RDF.BasicTripleContext.HasProperty(System.String)
  spec.csharp:
  - uid: VDS.RDF.BasicTripleContext.HasProperty(System.String)
    name: HasProperty
    nameWithType: BasicTripleContext.HasProperty
    fullName: VDS.RDF.BasicTripleContext.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BasicTripleContext.HasProperty(System.String)
    name: HasProperty
    nameWithType: BasicTripleContext.HasProperty
    fullName: VDS.RDF.BasicTripleContext.HasProperty
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BasicTripleContext.Item(System.String)
  commentId: P:VDS.RDF.BasicTripleContext.Item(System.String)
  parent: VDS.RDF.BasicTripleContext
  isExternal: true
  name: Item[String]
  nameWithType: BasicTripleContext.Item[String]
  fullName: VDS.RDF.BasicTripleContext.Item[System.String]
  nameWithType.vb: BasicTripleContext.Item(String)
  fullName.vb: VDS.RDF.BasicTripleContext.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: VDS.RDF.BasicTripleContext.Item(System.String)
    name: Item
    nameWithType: BasicTripleContext.Item
    fullName: VDS.RDF.BasicTripleContext.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: VDS.RDF.BasicTripleContext.Item(System.String)
    name: Item
    nameWithType: BasicTripleContext.Item
    fullName: VDS.RDF.BasicTripleContext.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.VariableContext.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<VariableContext>()
  nameWithType: Extensions.AsEnumerable<VariableContext>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.VariableContext>()
  nameWithType.vb: Extensions.AsEnumerable(Of VariableContext)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.VariableContext)()
  name.vb: AsEnumerable(Of VariableContext)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<VariableContext>
    nameWithType: Extensions.AsEnumerable<VariableContext>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.VariableContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of VariableContext)
    nameWithType: Extensions.AsEnumerable(Of VariableContext)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.VariableContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.VariableContext.#ctor*
  commentId: Overload:VDS.RDF.VariableContext.#ctor
  name: VariableContext
  nameWithType: VariableContext.VariableContext
  fullName: VDS.RDF.VariableContext.VariableContext
- uid: VDS.RDF.VariableContextType
  commentId: T:VDS.RDF.VariableContextType
  parent: VDS.RDF
  name: VariableContextType
  nameWithType: VariableContextType
  fullName: VDS.RDF.VariableContextType
- uid: VDS.RDF.VariableContext.Type*
  commentId: Overload:VDS.RDF.VariableContext.Type
  name: Type
  nameWithType: VariableContext.Type
  fullName: VDS.RDF.VariableContext.Type
- uid: VDS.RDF.VariableContext.Variables*
  commentId: Overload:VDS.RDF.VariableContext.Variables
  name: Variables
  nameWithType: VariableContext.Variables
  fullName: VDS.RDF.VariableContext.Variables
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INode>
  nameWithType: IEnumerable<INode>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.INode>
  nameWithType.vb: IEnumerable(Of INode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.INode)
  name.vb: IEnumerable(Of INode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.VariableContext.AddVariable*
  commentId: Overload:VDS.RDF.VariableContext.AddVariable
  name: AddVariable
  nameWithType: VariableContext.AddVariable
  fullName: VDS.RDF.VariableContext.AddVariable
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.VariableContext.IsVariable*
  commentId: Overload:VDS.RDF.VariableContext.IsVariable
  name: IsVariable
  nameWithType: VariableContext.IsVariable
  fullName: VDS.RDF.VariableContext.IsVariable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.VariableContext.InnerContext*
  commentId: Overload:VDS.RDF.VariableContext.InnerContext
  name: InnerContext
  nameWithType: VariableContext.InnerContext
  fullName: VDS.RDF.VariableContext.InnerContext
- uid: VDS.RDF.VariableContext
  commentId: T:VDS.RDF.VariableContext
  parent: VDS.RDF
  name: VariableContext
  nameWithType: VariableContext
  fullName: VDS.RDF.VariableContext
shouldSkipMarkup: true
