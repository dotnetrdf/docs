### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.SparqlSpecsHelper
  commentId: T:VDS.RDF.Query.SparqlSpecsHelper
  id: SparqlSpecsHelper
  parent: VDS.RDF.Query
  children:
  - VDS.RDF.Query.SparqlSpecsHelper.AggregateFunctionKeywords
  - VDS.RDF.Query.SparqlSpecsHelper.AggregateKeywords
  - VDS.RDF.Query.SparqlSpecsHelper.DateEquality(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.SparqlSpecsHelper.DateTimeEquality(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.SparqlSpecsHelper.EffectiveBooleanValue(VDS.RDF.INode)
  - VDS.RDF.Query.SparqlSpecsHelper.Equality(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.SparqlSpecsHelper.FunctionKeywords
  - VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri(System.Uri)
  - VDS.RDF.Query.SparqlSpecsHelper.Inequality(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.SparqlSpecsHelper.IntegerDataTypes
  - VDS.RDF.Query.SparqlSpecsHelper.IsAggregateFunctionKeyword(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsAggregateKeyword(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsDecimal(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsDouble(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsFloat(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword11(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsHex(System.Char)
  - VDS.RDF.Query.SparqlSpecsHelper.IsInteger(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsNonQueryKeyword(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsPLX(System.Char[],System.Int32,System.Int32@)
  - VDS.RDF.Query.SparqlSpecsHelper.IsPNChars(System.Char)
  - VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsBase(System.Char)
  - VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsU(System.Char)
  - VDS.RDF.Query.SparqlSpecsHelper.IsPNLocal(System.Char[],VDS.RDF.Parsing.SparqlQuerySyntax)
  - VDS.RDF.Query.SparqlSpecsHelper.IsPNPrefix(System.Char[])
  - VDS.RDF.Query.SparqlSpecsHelper.IsQueryKeyword(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsSelectQuery(VDS.RDF.Query.SparqlQueryType)
  - VDS.RDF.Query.SparqlSpecsHelper.IsUpdateKeyword(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsValidBNode(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsValidNumericLiteral(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsValidPrefix(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.IsValidQName(System.String,VDS.RDF.Parsing.SparqlQuerySyntax)
  - VDS.RDF.Query.SparqlSpecsHelper.IsValidVarName(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.NonQueryKeywords
  - VDS.RDF.Query.SparqlSpecsHelper.NumericEquality(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.Query.Expressions.SparqlNumericType)
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlDecimal
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlDouble
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlInteger
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAbs
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAdd
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAll
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAny
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAs
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAsc
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAsk
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAvg
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBase
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBind
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBindings
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBNode
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBound
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBy
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCall
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCeil
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordClear
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCoalesce
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordConcat
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordConstruct
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordContains
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCopy
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCount
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCreate
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordData
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDataType
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDay
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDefault
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDelete
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDesc
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDescribe
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDistinct
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDrop
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordEncodeForUri
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordExists
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFalse
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFilter
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFloor
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFrom
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFromNamed
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGraph
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGroup
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGroupBy
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGroupConcat
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordHaving
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordHours
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIf
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIn
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordInsert
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordInto
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIri
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsBlank
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsIri
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsLiteral
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsNumeric
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsUri
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLang
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLangMatches
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLCase
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLength
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLet
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLimit
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLoad
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMax
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMD5
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMedian
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMin
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMinus
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMinutes
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMode
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMonth
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMove
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNamed
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNMax
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNMin
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNone
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNot
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNotExists
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNotIn
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNow
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOffset
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOptional
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOrder
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOrderBy
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordPrefix
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordRand
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordReduced
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordRegex
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordReplace
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordRound
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSameTerm
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSample
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSeconds
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSelect
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSeparator
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordService
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha1
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha256
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha384
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha512
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSilent
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStr
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrAfter
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrBefore
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrDt
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrEnds
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrLang
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrLen
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrStarts
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrUUID
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSubStr
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSum
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTimezone
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTo
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTrue
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTz
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUCase
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUndef
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUnion
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUnsaid
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUri
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUsing
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUUID
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordValues
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordWhere
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordWith
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordYear
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlNamespace
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlQuery10Keywords
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlQuery11Keywords
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlRdfResultsNamespace
  - VDS.RDF.Query.SparqlSpecsHelper.SparqlUpdate11Keywords
  - VDS.RDF.Query.SparqlSpecsHelper.SupportedCastFunctions
  - VDS.RDF.Query.SparqlSpecsHelper.TimeSpanEquality(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.SparqlSpecsHelper.ToDateTime(VDS.RDF.ILiteralNode)
  - VDS.RDF.Query.SparqlSpecsHelper.ToDateTimeOffset(VDS.RDF.ILiteralNode)
  - VDS.RDF.Query.SparqlSpecsHelper.ToDecimal(VDS.RDF.ILiteralNode)
  - VDS.RDF.Query.SparqlSpecsHelper.ToDouble(VDS.RDF.ILiteralNode)
  - VDS.RDF.Query.SparqlSpecsHelper.ToFloat(VDS.RDF.ILiteralNode)
  - VDS.RDF.Query.SparqlSpecsHelper.ToInteger(VDS.RDF.ILiteralNode)
  - VDS.RDF.Query.SparqlSpecsHelper.ToTimeSpan(VDS.RDF.ILiteralNode)
  - VDS.RDF.Query.SparqlSpecsHelper.UnescapeQName(System.String)
  - VDS.RDF.Query.SparqlSpecsHelper.UpdateKeywords
  langs:
  - csharp
  - vb
  name: SparqlSpecsHelper
  nameWithType: SparqlSpecsHelper
  fullName: VDS.RDF.Query.SparqlSpecsHelper
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlSpecsHelper
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nClass containing Helper information and methods pertaining to the Sparql Query Language for RDF.\n"
  example: []
  syntax:
    content: public static class SparqlSpecsHelper
    content.vb: Public Module SparqlSpecsHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlNamespace
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlNamespace
  id: SparqlNamespace
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlNamespace
  nameWithType: SparqlSpecsHelper.SparqlNamespace
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlNamespace
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlNamespace
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nNamespace Uri for SPARQL Namespace.\n"
  example: []
  syntax:
    content: public const string SparqlNamespace = "http://www.w3.org/2005/sparql-results#"
    return:
      type: System.String
    content.vb: Public Const SparqlNamespace As String = "http://www.w3.org/2005/sparql-results#"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlRdfResultsNamespace
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlRdfResultsNamespace
  id: SparqlRdfResultsNamespace
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlRdfResultsNamespace
  nameWithType: SparqlSpecsHelper.SparqlRdfResultsNamespace
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlRdfResultsNamespace
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlRdfResultsNamespace
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nNamespace Uri for the RDF serialization of a SPARQL Result Set.\n"
  example: []
  syntax:
    content: public const string SparqlRdfResultsNamespace = "http://www.w3.org/2001/sw/DataAccess/tests/result-set#"
    return:
      type: System.String
    content.vb: Public Const SparqlRdfResultsNamespace As String = "http://www.w3.org/2001/sw/DataAccess/tests/result-set#"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBase
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBase
  id: SparqlKeywordBase
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordBase
  nameWithType: SparqlSpecsHelper.SparqlKeywordBase
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBase
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordBase
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordBase = "BASE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordBase As String = "BASE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordPrefix
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordPrefix
  id: SparqlKeywordPrefix
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordPrefix
  nameWithType: SparqlSpecsHelper.SparqlKeywordPrefix
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordPrefix
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordPrefix
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordPrefix = "PREFIX"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordPrefix As String = "PREFIX"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSelect
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSelect
  id: SparqlKeywordSelect
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordSelect
  nameWithType: SparqlSpecsHelper.SparqlKeywordSelect
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSelect
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordSelect
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordSelect = "SELECT"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordSelect As String = "SELECT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordConstruct
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordConstruct
  id: SparqlKeywordConstruct
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordConstruct
  nameWithType: SparqlSpecsHelper.SparqlKeywordConstruct
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordConstruct
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordConstruct
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordConstruct = "CONSTRUCT"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordConstruct As String = "CONSTRUCT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDescribe
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDescribe
  id: SparqlKeywordDescribe
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordDescribe
  nameWithType: SparqlSpecsHelper.SparqlKeywordDescribe
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDescribe
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordDescribe
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordDescribe = "DESCRIBE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordDescribe As String = "DESCRIBE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAsk
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAsk
  id: SparqlKeywordAsk
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordAsk
  nameWithType: SparqlSpecsHelper.SparqlKeywordAsk
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAsk
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordAsk
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 64
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordAsk = "ASK"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordAsk As String = "ASK"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOrder
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOrder
  id: SparqlKeywordOrder
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordOrder
  nameWithType: SparqlSpecsHelper.SparqlKeywordOrder
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOrder
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordOrder
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 65
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordOrder = "ORDER"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordOrder As String = "ORDER"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBy
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBy
  id: SparqlKeywordBy
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordBy
  nameWithType: SparqlSpecsHelper.SparqlKeywordBy
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBy
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordBy
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordBy = "BY"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordBy As String = "BY"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOrderBy
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOrderBy
  id: SparqlKeywordOrderBy
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordOrderBy
  nameWithType: SparqlSpecsHelper.SparqlKeywordOrderBy
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOrderBy
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordOrderBy
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 67
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordOrderBy = "ORDER BY"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordOrderBy As String = "ORDER BY"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLimit
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLimit
  id: SparqlKeywordLimit
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordLimit
  nameWithType: SparqlSpecsHelper.SparqlKeywordLimit
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLimit
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordLimit
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 68
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordLimit = "LIMIT"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordLimit As String = "LIMIT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOffset
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOffset
  id: SparqlKeywordOffset
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordOffset
  nameWithType: SparqlSpecsHelper.SparqlKeywordOffset
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOffset
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordOffset
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordOffset = "OFFSET"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordOffset As String = "OFFSET"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDistinct
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDistinct
  id: SparqlKeywordDistinct
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordDistinct
  nameWithType: SparqlSpecsHelper.SparqlKeywordDistinct
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDistinct
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordDistinct
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordDistinct = "DISTINCT"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordDistinct As String = "DISTINCT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordReduced
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordReduced
  id: SparqlKeywordReduced
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordReduced
  nameWithType: SparqlSpecsHelper.SparqlKeywordReduced
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordReduced
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordReduced
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 71
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordReduced = "REDUCED"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordReduced As String = "REDUCED"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFrom
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFrom
  id: SparqlKeywordFrom
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordFrom
  nameWithType: SparqlSpecsHelper.SparqlKeywordFrom
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFrom
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordFrom
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 72
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordFrom = "FROM"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordFrom As String = "FROM"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNamed
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNamed
  id: SparqlKeywordNamed
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordNamed
  nameWithType: SparqlSpecsHelper.SparqlKeywordNamed
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNamed
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordNamed
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 73
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordNamed = "NAMED"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordNamed As String = "NAMED"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFromNamed
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFromNamed
  id: SparqlKeywordFromNamed
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordFromNamed
  nameWithType: SparqlSpecsHelper.SparqlKeywordFromNamed
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFromNamed
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordFromNamed
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 74
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordFromNamed = "FROM NAMED"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordFromNamed As String = "FROM NAMED"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordWhere
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordWhere
  id: SparqlKeywordWhere
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordWhere
  nameWithType: SparqlSpecsHelper.SparqlKeywordWhere
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordWhere
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordWhere
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 75
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordWhere = "WHERE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordWhere As String = "WHERE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGraph
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGraph
  id: SparqlKeywordGraph
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordGraph
  nameWithType: SparqlSpecsHelper.SparqlKeywordGraph
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGraph
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 76
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordGraph = "GRAPH"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordGraph As String = "GRAPH"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOptional
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOptional
  id: SparqlKeywordOptional
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordOptional
  nameWithType: SparqlSpecsHelper.SparqlKeywordOptional
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordOptional
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordOptional
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 77
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordOptional = "OPTIONAL"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordOptional As String = "OPTIONAL"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUnion
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUnion
  id: SparqlKeywordUnion
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordUnion
  nameWithType: SparqlSpecsHelper.SparqlKeywordUnion
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUnion
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordUnion
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordUnion = "UNION"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordUnion As String = "UNION"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFilter
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFilter
  id: SparqlKeywordFilter
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordFilter
  nameWithType: SparqlSpecsHelper.SparqlKeywordFilter
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFilter
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordFilter
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 79
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordFilter = "FILTER"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordFilter As String = "FILTER"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStr
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStr
  id: SparqlKeywordStr
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordStr
  nameWithType: SparqlSpecsHelper.SparqlKeywordStr
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStr
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordStr
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 80
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordStr = "STR"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordStr As String = "STR"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLang
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLang
  id: SparqlKeywordLang
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordLang
  nameWithType: SparqlSpecsHelper.SparqlKeywordLang
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLang
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordLang
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 81
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordLang = "LANG"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordLang As String = "LANG"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLangMatches
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLangMatches
  id: SparqlKeywordLangMatches
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordLangMatches
  nameWithType: SparqlSpecsHelper.SparqlKeywordLangMatches
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLangMatches
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordLangMatches
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 82
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordLangMatches = "LANGMATCHES"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordLangMatches As String = "LANGMATCHES"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDataType
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDataType
  id: SparqlKeywordDataType
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordDataType
  nameWithType: SparqlSpecsHelper.SparqlKeywordDataType
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDataType
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordDataType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 83
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordDataType = "DATATYPE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordDataType As String = "DATATYPE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBound
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBound
  id: SparqlKeywordBound
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordBound
  nameWithType: SparqlSpecsHelper.SparqlKeywordBound
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBound
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordBound
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 84
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordBound = "BOUND"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordBound As String = "BOUND"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSameTerm
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSameTerm
  id: SparqlKeywordSameTerm
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordSameTerm
  nameWithType: SparqlSpecsHelper.SparqlKeywordSameTerm
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSameTerm
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordSameTerm
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 85
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordSameTerm = "SAMETERM"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordSameTerm As String = "SAMETERM"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsUri
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsUri
  id: SparqlKeywordIsUri
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordIsUri
  nameWithType: SparqlSpecsHelper.SparqlKeywordIsUri
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsUri
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordIsUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 86
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordIsUri = "ISURI"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordIsUri As String = "ISURI"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsIri
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsIri
  id: SparqlKeywordIsIri
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordIsIri
  nameWithType: SparqlSpecsHelper.SparqlKeywordIsIri
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsIri
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordIsIri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 87
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordIsIri = "ISIRI"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordIsIri As String = "ISIRI"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsLiteral
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsLiteral
  id: SparqlKeywordIsLiteral
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordIsLiteral
  nameWithType: SparqlSpecsHelper.SparqlKeywordIsLiteral
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsLiteral
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordIsLiteral
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 88
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordIsLiteral = "ISLITERAL"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordIsLiteral As String = "ISLITERAL"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsBlank
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsBlank
  id: SparqlKeywordIsBlank
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordIsBlank
  nameWithType: SparqlSpecsHelper.SparqlKeywordIsBlank
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsBlank
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordIsBlank
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 89
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordIsBlank = "ISBLANK"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordIsBlank As String = "ISBLANK"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordRegex
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordRegex
  id: SparqlKeywordRegex
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordRegex
  nameWithType: SparqlSpecsHelper.SparqlKeywordRegex
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordRegex
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordRegex
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 90
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordRegex = "REGEX"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordRegex As String = "REGEX"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTrue
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTrue
  id: SparqlKeywordTrue
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordTrue
  nameWithType: SparqlSpecsHelper.SparqlKeywordTrue
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTrue
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordTrue
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 91
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordTrue = "true"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordTrue As String = "true"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFalse
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFalse
  id: SparqlKeywordFalse
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordFalse
  nameWithType: SparqlSpecsHelper.SparqlKeywordFalse
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFalse
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordFalse
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 92
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordFalse = "false"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordFalse As String = "false"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAsc
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAsc
  id: SparqlKeywordAsc
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordAsc
  nameWithType: SparqlSpecsHelper.SparqlKeywordAsc
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAsc
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordAsc
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 93
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordAsc = "ASC"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordAsc As String = "ASC"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDesc
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDesc
  id: SparqlKeywordDesc
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordDesc
  nameWithType: SparqlSpecsHelper.SparqlKeywordDesc
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDesc
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordDesc
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 94
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordDesc = "DESC"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordDesc As String = "DESC"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCount
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCount
  id: SparqlKeywordCount
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordCount
  nameWithType: SparqlSpecsHelper.SparqlKeywordCount
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCount
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordCount
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 95
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordCount = "COUNT"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordCount As String = "COUNT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSum
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSum
  id: SparqlKeywordSum
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordSum
  nameWithType: SparqlSpecsHelper.SparqlKeywordSum
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSum
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordSum
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 96
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordSum = "SUM"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordSum As String = "SUM"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAvg
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAvg
  id: SparqlKeywordAvg
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordAvg
  nameWithType: SparqlSpecsHelper.SparqlKeywordAvg
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAvg
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordAvg
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 97
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordAvg = "AVG"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordAvg As String = "AVG"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMin
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMin
  id: SparqlKeywordMin
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordMin
  nameWithType: SparqlSpecsHelper.SparqlKeywordMin
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMin
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordMin
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 98
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordMin = "MIN"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordMin As String = "MIN"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMax
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMax
  id: SparqlKeywordMax
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordMax
  nameWithType: SparqlSpecsHelper.SparqlKeywordMax
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMax
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordMax
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 99
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordMax = "MAX"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordMax As String = "MAX"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGroupConcat
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGroupConcat
  id: SparqlKeywordGroupConcat
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordGroupConcat
  nameWithType: SparqlSpecsHelper.SparqlKeywordGroupConcat
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGroupConcat
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordGroupConcat
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordGroupConcat = "GROUP_CONCAT"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordGroupConcat As String = "GROUP_CONCAT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSample
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSample
  id: SparqlKeywordSample
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordSample
  nameWithType: SparqlSpecsHelper.SparqlKeywordSample
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSample
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordSample
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 101
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordSample = "SAMPLE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordSample As String = "SAMPLE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNMin
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNMin
  id: SparqlKeywordNMin
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordNMin
  nameWithType: SparqlSpecsHelper.SparqlKeywordNMin
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNMin
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordNMin
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 102
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordNMin = "NMIN"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordNMin As String = "NMIN"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNMax
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNMax
  id: SparqlKeywordNMax
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordNMax
  nameWithType: SparqlSpecsHelper.SparqlKeywordNMax
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNMax
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordNMax
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 103
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordNMax = "NMAX"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordNMax As String = "NMAX"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMedian
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMedian
  id: SparqlKeywordMedian
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordMedian
  nameWithType: SparqlSpecsHelper.SparqlKeywordMedian
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMedian
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordMedian
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 104
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordMedian = "MEDIAN"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordMedian As String = "MEDIAN"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMode
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMode
  id: SparqlKeywordMode
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordMode
  nameWithType: SparqlSpecsHelper.SparqlKeywordMode
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMode
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordMode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 105
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordMode = "MODE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordMode As String = "MODE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAs
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAs
  id: SparqlKeywordAs
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordAs
  nameWithType: SparqlSpecsHelper.SparqlKeywordAs
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAs
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordAs
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 106
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordAs = "AS"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordAs As String = "AS"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGroupBy
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGroupBy
  id: SparqlKeywordGroupBy
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordGroupBy
  nameWithType: SparqlSpecsHelper.SparqlKeywordGroupBy
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGroupBy
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordGroupBy
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 107
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordGroupBy = "GROUP BY"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordGroupBy As String = "GROUP BY"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGroup
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGroup
  id: SparqlKeywordGroup
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordGroup
  nameWithType: SparqlSpecsHelper.SparqlKeywordGroup
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordGroup
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordGroup
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 108
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordGroup = "GROUP"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordGroup As String = "GROUP"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordHaving
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordHaving
  id: SparqlKeywordHaving
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordHaving
  nameWithType: SparqlSpecsHelper.SparqlKeywordHaving
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordHaving
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordHaving
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 109
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordHaving = "HAVING"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordHaving As String = "HAVING"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordExists
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordExists
  id: SparqlKeywordExists
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordExists
  nameWithType: SparqlSpecsHelper.SparqlKeywordExists
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordExists
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordExists
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 110
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordExists = "EXISTS"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordExists As String = "EXISTS"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNot
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNot
  id: SparqlKeywordNot
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordNot
  nameWithType: SparqlSpecsHelper.SparqlKeywordNot
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNot
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordNot
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 111
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordNot = "NOT"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordNot As String = "NOT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNotExists
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNotExists
  id: SparqlKeywordNotExists
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordNotExists
  nameWithType: SparqlSpecsHelper.SparqlKeywordNotExists
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNotExists
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordNotExists
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordNotExists = "NOT EXISTS"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordNotExists As String = "NOT EXISTS"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUnsaid
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUnsaid
  id: SparqlKeywordUnsaid
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordUnsaid
  nameWithType: SparqlSpecsHelper.SparqlKeywordUnsaid
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUnsaid
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordUnsaid
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 113
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordUnsaid = "UNSAID"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordUnsaid As String = "UNSAID"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLet
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLet
  id: SparqlKeywordLet
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordLet
  nameWithType: SparqlSpecsHelper.SparqlKeywordLet
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLet
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordLet
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 114
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordLet = "LET"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordLet As String = "LET"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBind
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBind
  id: SparqlKeywordBind
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordBind
  nameWithType: SparqlSpecsHelper.SparqlKeywordBind
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBind
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordBind
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 115
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordBind = "BIND"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordBind As String = "BIND"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSeparator
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSeparator
  id: SparqlKeywordSeparator
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordSeparator
  nameWithType: SparqlSpecsHelper.SparqlKeywordSeparator
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSeparator
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordSeparator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 116
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordSeparator = "SEPARATOR"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordSeparator As String = "SEPARATOR"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLength
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLength
  id: SparqlKeywordLength
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordLength
  nameWithType: SparqlSpecsHelper.SparqlKeywordLength
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLength
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordLength
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 117
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordLength = "LENGTH"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordLength As String = "LENGTH"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrLang
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrLang
  id: SparqlKeywordStrLang
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordStrLang
  nameWithType: SparqlSpecsHelper.SparqlKeywordStrLang
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrLang
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordStrLang
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 118
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordStrLang = "STRLANG"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordStrLang As String = "STRLANG"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrDt
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrDt
  id: SparqlKeywordStrDt
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordStrDt
  nameWithType: SparqlSpecsHelper.SparqlKeywordStrDt
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrDt
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordStrDt
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 119
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordStrDt = "STRDT"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordStrDt As String = "STRDT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIri
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIri
  id: SparqlKeywordIri
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordIri
  nameWithType: SparqlSpecsHelper.SparqlKeywordIri
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIri
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordIri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 120
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordIri = "IRI"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordIri As String = "IRI"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUri
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUri
  id: SparqlKeywordUri
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordUri
  nameWithType: SparqlSpecsHelper.SparqlKeywordUri
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUri
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 121
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordUri = "URI"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordUri As String = "URI"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBNode
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBNode
  id: SparqlKeywordBNode
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordBNode
  nameWithType: SparqlSpecsHelper.SparqlKeywordBNode
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBNode
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordBNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 122
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordBNode = "BNODE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordBNode As String = "BNODE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIn
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIn
  id: SparqlKeywordIn
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordIn
  nameWithType: SparqlSpecsHelper.SparqlKeywordIn
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIn
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordIn
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 123
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordIn = "IN"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordIn As String = "IN"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNotIn
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNotIn
  id: SparqlKeywordNotIn
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordNotIn
  nameWithType: SparqlSpecsHelper.SparqlKeywordNotIn
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNotIn
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordNotIn
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 124
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordNotIn = "NOT IN"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordNotIn As String = "NOT IN"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCoalesce
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCoalesce
  id: SparqlKeywordCoalesce
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordCoalesce
  nameWithType: SparqlSpecsHelper.SparqlKeywordCoalesce
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCoalesce
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordCoalesce
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 125
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordCoalesce = "COALESCE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordCoalesce As String = "COALESCE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIf
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIf
  id: SparqlKeywordIf
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordIf
  nameWithType: SparqlSpecsHelper.SparqlKeywordIf
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIf
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordIf
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 126
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordIf = "IF"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordIf As String = "IF"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordInsert
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordInsert
  id: SparqlKeywordInsert
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordInsert
  nameWithType: SparqlSpecsHelper.SparqlKeywordInsert
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordInsert
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordInsert
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 127
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordInsert = "INSERT"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordInsert As String = "INSERT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDelete
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDelete
  id: SparqlKeywordDelete
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordDelete
  nameWithType: SparqlSpecsHelper.SparqlKeywordDelete
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDelete
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordDelete
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 128
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordDelete = "DELETE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordDelete As String = "DELETE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordClear
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordClear
  id: SparqlKeywordClear
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordClear
  nameWithType: SparqlSpecsHelper.SparqlKeywordClear
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordClear
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordClear
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 129
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordClear = "CLEAR"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordClear As String = "CLEAR"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLoad
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLoad
  id: SparqlKeywordLoad
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordLoad
  nameWithType: SparqlSpecsHelper.SparqlKeywordLoad
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLoad
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordLoad
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 130
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordLoad = "LOAD"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordLoad As String = "LOAD"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordData
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordData
  id: SparqlKeywordData
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordData
  nameWithType: SparqlSpecsHelper.SparqlKeywordData
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordData
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordData
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 131
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordData = "DATA"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordData As String = "DATA"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordInto
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordInto
  id: SparqlKeywordInto
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordInto
  nameWithType: SparqlSpecsHelper.SparqlKeywordInto
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordInto
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordInto
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 132
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordInto = "INTO"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordInto As String = "INTO"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSilent
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSilent
  id: SparqlKeywordSilent
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordSilent
  nameWithType: SparqlSpecsHelper.SparqlKeywordSilent
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSilent
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordSilent
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 133
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordSilent = "SILENT"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordSilent As String = "SILENT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCreate
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCreate
  id: SparqlKeywordCreate
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordCreate
  nameWithType: SparqlSpecsHelper.SparqlKeywordCreate
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCreate
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordCreate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 134
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordCreate = "CREATE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordCreate As String = "CREATE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDrop
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDrop
  id: SparqlKeywordDrop
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordDrop
  nameWithType: SparqlSpecsHelper.SparqlKeywordDrop
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDrop
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordDrop
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 135
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordDrop = "DROP"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordDrop As String = "DROP"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordWith
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordWith
  id: SparqlKeywordWith
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordWith
  nameWithType: SparqlSpecsHelper.SparqlKeywordWith
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordWith
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordWith
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 136
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordWith = "WITH"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordWith As String = "WITH"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUsing
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUsing
  id: SparqlKeywordUsing
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordUsing
  nameWithType: SparqlSpecsHelper.SparqlKeywordUsing
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUsing
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordUsing
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 137
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordUsing = "USING"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordUsing As String = "USING"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDefault
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDefault
  id: SparqlKeywordDefault
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordDefault
  nameWithType: SparqlSpecsHelper.SparqlKeywordDefault
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDefault
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordDefault
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 138
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordDefault = "DEFAULT"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordDefault As String = "DEFAULT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAll
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAll
  id: SparqlKeywordAll
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordAll
  nameWithType: SparqlSpecsHelper.SparqlKeywordAll
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAll
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordAll
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 139
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordAll = "ALL"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordAll As String = "ALL"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMinus
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMinus
  id: SparqlKeywordMinus
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordMinus
  nameWithType: SparqlSpecsHelper.SparqlKeywordMinus
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMinus
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordMinus
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 140
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordMinus = "MINUS"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordMinus As String = "MINUS"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordService
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordService
  id: SparqlKeywordService
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordService
  nameWithType: SparqlSpecsHelper.SparqlKeywordService
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordService
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordService
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 141
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordService = "SERVICE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordService As String = "SERVICE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBindings
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBindings
  id: SparqlKeywordBindings
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordBindings
  nameWithType: SparqlSpecsHelper.SparqlKeywordBindings
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordBindings
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordBindings
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 142
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordBindings = "BINDINGS"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordBindings As String = "BINDINGS"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordValues
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordValues
  id: SparqlKeywordValues
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordValues
  nameWithType: SparqlSpecsHelper.SparqlKeywordValues
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordValues
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordValues
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 143
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordValues = "VALUES"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordValues As String = "VALUES"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUndef
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUndef
  id: SparqlKeywordUndef
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordUndef
  nameWithType: SparqlSpecsHelper.SparqlKeywordUndef
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUndef
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordUndef
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 144
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordUndef = "UNDEF"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordUndef As String = "UNDEF"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsNumeric
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsNumeric
  id: SparqlKeywordIsNumeric
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordIsNumeric
  nameWithType: SparqlSpecsHelper.SparqlKeywordIsNumeric
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordIsNumeric
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordIsNumeric
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 145
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordIsNumeric = "ISNUMERIC"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordIsNumeric As String = "ISNUMERIC"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrLen
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrLen
  id: SparqlKeywordStrLen
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordStrLen
  nameWithType: SparqlSpecsHelper.SparqlKeywordStrLen
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrLen
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordStrLen
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 146
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordStrLen = "STRLEN"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordStrLen As String = "STRLEN"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSubStr
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSubStr
  id: SparqlKeywordSubStr
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordSubStr
  nameWithType: SparqlSpecsHelper.SparqlKeywordSubStr
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSubStr
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordSubStr
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 147
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordSubStr = "SUBSTR"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordSubStr As String = "SUBSTR"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUCase
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUCase
  id: SparqlKeywordUCase
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordUCase
  nameWithType: SparqlSpecsHelper.SparqlKeywordUCase
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUCase
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordUCase
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 148
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordUCase = "UCASE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordUCase As String = "UCASE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLCase
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLCase
  id: SparqlKeywordLCase
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordLCase
  nameWithType: SparqlSpecsHelper.SparqlKeywordLCase
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordLCase
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordLCase
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 149
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordLCase = "LCASE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordLCase As String = "LCASE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrStarts
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrStarts
  id: SparqlKeywordStrStarts
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordStrStarts
  nameWithType: SparqlSpecsHelper.SparqlKeywordStrStarts
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrStarts
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordStrStarts
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 150
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordStrStarts = "STRSTARTS"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordStrStarts As String = "STRSTARTS"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrEnds
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrEnds
  id: SparqlKeywordStrEnds
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordStrEnds
  nameWithType: SparqlSpecsHelper.SparqlKeywordStrEnds
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrEnds
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordStrEnds
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 151
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordStrEnds = "STRENDS"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordStrEnds As String = "STRENDS"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrBefore
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrBefore
  id: SparqlKeywordStrBefore
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordStrBefore
  nameWithType: SparqlSpecsHelper.SparqlKeywordStrBefore
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrBefore
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordStrBefore
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 152
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordStrBefore = "STRBEFORE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordStrBefore As String = "STRBEFORE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrAfter
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrAfter
  id: SparqlKeywordStrAfter
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordStrAfter
  nameWithType: SparqlSpecsHelper.SparqlKeywordStrAfter
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrAfter
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordStrAfter
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 153
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordStrAfter = "STRAFTER"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordStrAfter As String = "STRAFTER"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordReplace
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordReplace
  id: SparqlKeywordReplace
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordReplace
  nameWithType: SparqlSpecsHelper.SparqlKeywordReplace
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordReplace
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordReplace
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 154
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordReplace = "REPLACE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordReplace As String = "REPLACE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordContains
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordContains
  id: SparqlKeywordContains
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordContains
  nameWithType: SparqlSpecsHelper.SparqlKeywordContains
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordContains
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordContains
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 155
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordContains = "CONTAINS"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordContains As String = "CONTAINS"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordEncodeForUri
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordEncodeForUri
  id: SparqlKeywordEncodeForUri
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordEncodeForUri
  nameWithType: SparqlSpecsHelper.SparqlKeywordEncodeForUri
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordEncodeForUri
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordEncodeForUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 156
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordEncodeForUri = "ENCODE_FOR_URI"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordEncodeForUri As String = "ENCODE_FOR_URI"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordConcat
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordConcat
  id: SparqlKeywordConcat
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordConcat
  nameWithType: SparqlSpecsHelper.SparqlKeywordConcat
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordConcat
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordConcat
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 157
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordConcat = "CONCAT"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordConcat As String = "CONCAT"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAbs
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAbs
  id: SparqlKeywordAbs
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordAbs
  nameWithType: SparqlSpecsHelper.SparqlKeywordAbs
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAbs
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordAbs
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 158
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordAbs = "ABS"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordAbs As String = "ABS"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordRound
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordRound
  id: SparqlKeywordRound
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordRound
  nameWithType: SparqlSpecsHelper.SparqlKeywordRound
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordRound
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordRound
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 159
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordRound = "ROUND"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordRound As String = "ROUND"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCeil
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCeil
  id: SparqlKeywordCeil
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordCeil
  nameWithType: SparqlSpecsHelper.SparqlKeywordCeil
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCeil
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordCeil
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 160
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordCeil = "CEIL"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordCeil As String = "CEIL"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFloor
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFloor
  id: SparqlKeywordFloor
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordFloor
  nameWithType: SparqlSpecsHelper.SparqlKeywordFloor
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordFloor
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordFloor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 161
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordFloor = "FLOOR"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordFloor As String = "FLOOR"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordRand
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordRand
  id: SparqlKeywordRand
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordRand
  nameWithType: SparqlSpecsHelper.SparqlKeywordRand
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordRand
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordRand
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 162
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordRand = "RAND"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordRand As String = "RAND"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNow
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNow
  id: SparqlKeywordNow
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordNow
  nameWithType: SparqlSpecsHelper.SparqlKeywordNow
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNow
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordNow
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 163
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordNow = "NOW"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordNow As String = "NOW"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordYear
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordYear
  id: SparqlKeywordYear
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordYear
  nameWithType: SparqlSpecsHelper.SparqlKeywordYear
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordYear
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordYear
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 164
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordYear = "YEAR"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordYear As String = "YEAR"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMonth
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMonth
  id: SparqlKeywordMonth
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordMonth
  nameWithType: SparqlSpecsHelper.SparqlKeywordMonth
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMonth
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordMonth
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 165
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordMonth = "MONTH"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordMonth As String = "MONTH"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDay
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDay
  id: SparqlKeywordDay
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordDay
  nameWithType: SparqlSpecsHelper.SparqlKeywordDay
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordDay
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordDay
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 166
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordDay = "DAY"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordDay As String = "DAY"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordHours
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordHours
  id: SparqlKeywordHours
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordHours
  nameWithType: SparqlSpecsHelper.SparqlKeywordHours
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordHours
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordHours
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 167
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordHours = "HOURS"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordHours As String = "HOURS"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMinutes
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMinutes
  id: SparqlKeywordMinutes
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordMinutes
  nameWithType: SparqlSpecsHelper.SparqlKeywordMinutes
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMinutes
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordMinutes
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 168
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordMinutes = "MINUTES"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordMinutes As String = "MINUTES"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSeconds
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSeconds
  id: SparqlKeywordSeconds
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordSeconds
  nameWithType: SparqlSpecsHelper.SparqlKeywordSeconds
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSeconds
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordSeconds
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 169
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordSeconds = "SECONDS"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordSeconds As String = "SECONDS"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTimezone
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTimezone
  id: SparqlKeywordTimezone
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordTimezone
  nameWithType: SparqlSpecsHelper.SparqlKeywordTimezone
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTimezone
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordTimezone
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 170
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordTimezone = "TIMEZONE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordTimezone As String = "TIMEZONE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTz
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTz
  id: SparqlKeywordTz
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordTz
  nameWithType: SparqlSpecsHelper.SparqlKeywordTz
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTz
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordTz
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 171
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordTz = "TZ"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordTz As String = "TZ"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMD5
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMD5
  id: SparqlKeywordMD5
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordMD5
  nameWithType: SparqlSpecsHelper.SparqlKeywordMD5
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMD5
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordMD5
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 172
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordMD5 = "MD5"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordMD5 As String = "MD5"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha1
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha1
  id: SparqlKeywordSha1
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordSha1
  nameWithType: SparqlSpecsHelper.SparqlKeywordSha1
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha1
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordSha1
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 173
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordSha1 = "SHA1"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordSha1 As String = "SHA1"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha256
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha256
  id: SparqlKeywordSha256
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordSha256
  nameWithType: SparqlSpecsHelper.SparqlKeywordSha256
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha256
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordSha256
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 174
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordSha256 = "SHA256"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordSha256 As String = "SHA256"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha384
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha384
  id: SparqlKeywordSha384
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordSha384
  nameWithType: SparqlSpecsHelper.SparqlKeywordSha384
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha384
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordSha384
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 175
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordSha384 = "SHA384"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordSha384 As String = "SHA384"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha512
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha512
  id: SparqlKeywordSha512
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordSha512
  nameWithType: SparqlSpecsHelper.SparqlKeywordSha512
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordSha512
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordSha512
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 176
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordSha512 = "SHA512"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordSha512 As String = "SHA512"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAny
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAny
  id: SparqlKeywordAny
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordAny
  nameWithType: SparqlSpecsHelper.SparqlKeywordAny
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAny
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordAny
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 177
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordAny = "ANY"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordAny As String = "ANY"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNone
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNone
  id: SparqlKeywordNone
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordNone
  nameWithType: SparqlSpecsHelper.SparqlKeywordNone
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordNone
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordNone
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 178
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordNone = "NONE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordNone As String = "NONE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAdd
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAdd
  id: SparqlKeywordAdd
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordAdd
  nameWithType: SparqlSpecsHelper.SparqlKeywordAdd
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordAdd
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordAdd
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 179
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordAdd = "ADD"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordAdd As String = "ADD"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCopy
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCopy
  id: SparqlKeywordCopy
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordCopy
  nameWithType: SparqlSpecsHelper.SparqlKeywordCopy
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCopy
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordCopy
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 180
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordCopy = "COPY"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordCopy As String = "COPY"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMove
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMove
  id: SparqlKeywordMove
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordMove
  nameWithType: SparqlSpecsHelper.SparqlKeywordMove
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordMove
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordMove
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 181
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordMove = "MOVE"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordMove As String = "MOVE"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTo
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTo
  id: SparqlKeywordTo
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordTo
  nameWithType: SparqlSpecsHelper.SparqlKeywordTo
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordTo
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 182
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordTo = "TO"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordTo As String = "TO"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUUID
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUUID
  id: SparqlKeywordUUID
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordUUID
  nameWithType: SparqlSpecsHelper.SparqlKeywordUUID
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordUUID
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordUUID
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 183
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordUUID = "UUID"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordUUID As String = "UUID"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrUUID
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrUUID
  id: SparqlKeywordStrUUID
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordStrUUID
  nameWithType: SparqlSpecsHelper.SparqlKeywordStrUUID
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordStrUUID
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordStrUUID
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 184
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordStrUUID = "STRUUID"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordStrUUID As String = "STRUUID"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCall
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCall
  id: SparqlKeywordCall
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlKeywordCall
  nameWithType: SparqlSpecsHelper.SparqlKeywordCall
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlKeywordCall
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlKeywordCall
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 185
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nKeywords in Sparql.\n"
  example: []
  syntax:
    content: public const string SparqlKeywordCall = "CALL"
    return:
      type: System.String
    content.vb: Public Const SparqlKeywordCall As String = "CALL"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecsHelper.NonQueryKeywords
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.NonQueryKeywords
  id: NonQueryKeywords
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: NonQueryKeywords
  nameWithType: SparqlSpecsHelper.NonQueryKeywords
  fullName: VDS.RDF.Query.SparqlSpecsHelper.NonQueryKeywords
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NonQueryKeywords
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 191
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nSet of SPARQL Keywords that are Non-Query Keywords.\n"
  example: []
  syntax:
    content: public static string[] NonQueryKeywords
    return:
      type: System.String[]
    content.vb: Public Shared NonQueryKeywords As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.FunctionKeywords
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.FunctionKeywords
  id: FunctionKeywords
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: FunctionKeywords
  nameWithType: SparqlSpecsHelper.FunctionKeywords
  fullName: VDS.RDF.Query.SparqlSpecsHelper.FunctionKeywords
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FunctionKeywords
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 225
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nSet of SPARQL Keywords that are Function Keywords.\n"
  example: []
  syntax:
    content: public static string[] FunctionKeywords
    return:
      type: System.String[]
    content.vb: Public Shared FunctionKeywords As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.AggregateKeywords
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.AggregateKeywords
  id: AggregateKeywords
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: AggregateKeywords
  nameWithType: SparqlSpecsHelper.AggregateKeywords
  fullName: VDS.RDF.Query.SparqlSpecsHelper.AggregateKeywords
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AggregateKeywords
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 289
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nSet of SPARQL Keywords that are Aggregate Keywords.\n"
  remarks: "\nUnlike <xref href=\"VDS.RDF.Query.SparqlSpecsHelper.AggregateFunctionKeywords\" data-throw-if-not-resolved=\"false\"></xref> this includes keywords related to aggregates (like DISTINCT) and those for Leviathan extension aggregates which are not standard SPARQL 1.1 syntax.\n"
  example: []
  syntax:
    content: public static string[] AggregateKeywords
    return:
      type: System.String[]
    content.vb: Public Shared AggregateKeywords As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.AggregateFunctionKeywords
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.AggregateFunctionKeywords
  id: AggregateFunctionKeywords
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: AggregateFunctionKeywords
  nameWithType: SparqlSpecsHelper.AggregateFunctionKeywords
  fullName: VDS.RDF.Query.SparqlSpecsHelper.AggregateFunctionKeywords
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AggregateFunctionKeywords
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 312
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nSet of SPARQL Keywords that are built in SPARQL Aggregate Functions.\n"
  example: []
  syntax:
    content: public static string[] AggregateFunctionKeywords
    return:
      type: System.String[]
    content.vb: Public Shared AggregateFunctionKeywords As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IntegerDataTypes
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.IntegerDataTypes
  id: IntegerDataTypes
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IntegerDataTypes
  nameWithType: SparqlSpecsHelper.IntegerDataTypes
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IntegerDataTypes
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IntegerDataTypes
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 325
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nSet of XML Schema Data Types which are derived from Integer and can be treated as Integers by SPARQL.\n"
  example: []
  syntax:
    content: public static string[] IntegerDataTypes
    return:
      type: System.String[]
    content.vb: Public Shared IntegerDataTypes As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.SupportedCastFunctions
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SupportedCastFunctions
  id: SupportedCastFunctions
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SupportedCastFunctions
  nameWithType: SparqlSpecsHelper.SupportedCastFunctions
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SupportedCastFunctions
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SupportedCastFunctions
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 343
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nSet of IRIs for supported Cast Functions.\n"
  example: []
  syntax:
    content: public static string[] SupportedCastFunctions
    return:
      type: System.String[]
    content.vb: Public Shared SupportedCastFunctions As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlQuery10Keywords
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlQuery10Keywords
  id: SparqlQuery10Keywords
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlQuery10Keywords
  nameWithType: SparqlSpecsHelper.SparqlQuery10Keywords
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlQuery10Keywords
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlQuery10Keywords
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 356
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nSet of Keywords for SPARQL Query 1.0.\n"
  example: []
  syntax:
    content: public static string[] SparqlQuery10Keywords
    return:
      type: System.String[]
    content.vb: Public Shared SparqlQuery10Keywords As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlQuery11Keywords
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlQuery11Keywords
  id: SparqlQuery11Keywords
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlQuery11Keywords
  nameWithType: SparqlSpecsHelper.SparqlQuery11Keywords
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlQuery11Keywords
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlQuery11Keywords
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 396
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nSet of additional Keywords for SPARQL Query 1.1.\n"
  example: []
  syntax:
    content: public static string[] SparqlQuery11Keywords
    return:
      type: System.String[]
    content.vb: Public Shared SparqlQuery11Keywords As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.UpdateKeywords
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.UpdateKeywords
  id: UpdateKeywords
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: UpdateKeywords
  nameWithType: SparqlSpecsHelper.UpdateKeywords
  fullName: VDS.RDF.Query.SparqlSpecsHelper.UpdateKeywords
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UpdateKeywords
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 464
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nSet of SPARQL Keywords that are Update Keywords.\n"
  example: []
  syntax:
    content: public static string[] UpdateKeywords
    return:
      type: System.String[]
    content.vb: Public Shared UpdateKeywords As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlUpdate11Keywords
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlUpdate11Keywords
  id: SparqlUpdate11Keywords
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlUpdate11Keywords
  nameWithType: SparqlSpecsHelper.SparqlUpdate11Keywords
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlUpdate11Keywords
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlUpdate11Keywords
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 487
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nSet of Keywords for SPARQL Update 1.1.\n"
  example: []
  syntax:
    content: public static string[] SparqlUpdate11Keywords
    return:
      type: System.String[]
    content.vb: Public Shared SparqlUpdate11Keywords As String()
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlInteger
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlInteger
  id: SparqlInteger
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlInteger
  nameWithType: SparqlSpecsHelper.SparqlInteger
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlInteger
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlInteger
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 515
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nRegular Expression Pattern for Valid Integers in Sparql.\n"
  example: []
  syntax:
    content: public static Regex SparqlInteger
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Public Shared SparqlInteger As Regex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlDecimal
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlDecimal
  id: SparqlDecimal
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlDecimal
  nameWithType: SparqlSpecsHelper.SparqlDecimal
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlDecimal
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlDecimal
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 519
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nRegular Expression Pattern for Valid Decimals in Sparql.\n"
  example: []
  syntax:
    content: public static Regex SparqlDecimal
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Public Shared SparqlDecimal As Regex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.SparqlDouble
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.SparqlDouble
  id: SparqlDouble
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: SparqlDouble
  nameWithType: SparqlSpecsHelper.SparqlDouble
  fullName: VDS.RDF.Query.SparqlSpecsHelper.SparqlDouble
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlDouble
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 523
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nRegular Expression Pattern for Valid Doubles in Sparql.\n"
  example: []
  syntax:
    content: public static Regex SparqlDouble
    return:
      type: System.Text.RegularExpressions.Regex
    content.vb: Public Shared SparqlDouble As Regex
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsQueryKeyword(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsQueryKeyword(System.String)
  id: IsQueryKeyword(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsQueryKeyword(String)
  nameWithType: SparqlSpecsHelper.IsQueryKeyword(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsQueryKeyword(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsQueryKeyword
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 534
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given Keyword is a SPARQL Query Keyword.\n"
  example: []
  syntax:
    content: public static bool IsQueryKeyword(string keyword)
    parameters:
    - id: keyword
      type: System.String
      description: Keyword to check.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsQueryKeyword(keyword As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsQueryKeyword*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsNonQueryKeyword(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsNonQueryKeyword(System.String)
  id: IsNonQueryKeyword(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsNonQueryKeyword(String)
  nameWithType: SparqlSpecsHelper.IsNonQueryKeyword(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsNonQueryKeyword(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsNonQueryKeyword
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 552
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given Keyword is a SPARQL Non-Query Keyword.\n"
  example: []
  syntax:
    content: public static bool IsNonQueryKeyword(string keyword)
    parameters:
    - id: keyword
      type: System.String
      description: Keyword to check.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsNonQueryKeyword(keyword As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsNonQueryKeyword*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword(System.String)
  id: IsFunctionKeyword(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsFunctionKeyword(String)
  nameWithType: SparqlSpecsHelper.IsFunctionKeyword(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsFunctionKeyword
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 562
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given Keyword is a SPARQL Function Verb.\n"
  example: []
  syntax:
    content: public static bool IsFunctionKeyword(string keyword)
    parameters:
    - id: keyword
      type: System.String
      description: Keyword to check.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsFunctionKeyword(keyword As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword11(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword11(System.String)
  id: IsFunctionKeyword11(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsFunctionKeyword11(String)
  nameWithType: SparqlSpecsHelper.IsFunctionKeyword11(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword11(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsFunctionKeyword11
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 572
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given Keyword is a SPARQL 1.1 Function Verb.\n"
  example: []
  syntax:
    content: public static bool IsFunctionKeyword11(string keyword)
    parameters:
    - id: keyword
      type: System.String
      description: Keyword to check.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsFunctionKeyword11(keyword As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword11*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsAggregateKeyword(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsAggregateKeyword(System.String)
  id: IsAggregateKeyword(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsAggregateKeyword(String)
  nameWithType: SparqlSpecsHelper.IsAggregateKeyword(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsAggregateKeyword(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAggregateKeyword
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 582
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given Keyword is a SPARQL Aggregate Keyword (includes keywords related to aggregates like DISTINCT, AS and Leviathan extension aggregate keywords).\n"
  example: []
  syntax:
    content: public static bool IsAggregateKeyword(string keyword)
    parameters:
    - id: keyword
      type: System.String
      description: Keyword to check.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsAggregateKeyword(keyword As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsAggregateKeyword*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsAggregateFunctionKeyword(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsAggregateFunctionKeyword(System.String)
  id: IsAggregateFunctionKeyword(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsAggregateFunctionKeyword(String)
  nameWithType: SparqlSpecsHelper.IsAggregateFunctionKeyword(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsAggregateFunctionKeyword(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAggregateFunctionKeyword
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 592
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given Keyword is a SPARQL Aggregate Function Keyword (only keywords for the SPARQL built-in aggregate functions).\n"
  example: []
  syntax:
    content: public static bool IsAggregateFunctionKeyword(string keyword)
    parameters:
    - id: keyword
      type: System.String
      description: Keyword to check.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsAggregateFunctionKeyword(keyword As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsAggregateFunctionKeyword*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsUpdateKeyword(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsUpdateKeyword(System.String)
  id: IsUpdateKeyword(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsUpdateKeyword(String)
  nameWithType: SparqlSpecsHelper.IsUpdateKeyword(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsUpdateKeyword(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsUpdateKeyword
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 602
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given Keyword is a SPARQL Update Keyword.\n"
  example: []
  syntax:
    content: public static bool IsUpdateKeyword(string keyword)
    parameters:
    - id: keyword
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsUpdateKeyword(keyword As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsUpdateKeyword*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsValidQName(System.String,VDS.RDF.Parsing.SparqlQuerySyntax)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsValidQName(System.String,VDS.RDF.Parsing.SparqlQuerySyntax)
  id: IsValidQName(System.String,VDS.RDF.Parsing.SparqlQuerySyntax)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsValidQName(String, SparqlQuerySyntax)
  nameWithType: SparqlSpecsHelper.IsValidQName(String, SparqlQuerySyntax)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsValidQName(System.String, VDS.RDF.Parsing.SparqlQuerySyntax)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsValidQName
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 617
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given QName is valid in Sparql.\n"
  example: []
  syntax:
    content: public static bool IsValidQName(string value, SparqlQuerySyntax syntax)
    parameters:
    - id: value
      type: System.String
      description: QName to check.
    - id: syntax
      type: VDS.RDF.Parsing.SparqlQuerySyntax
      description: SPARQL Syntax.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsValidQName(value As String, syntax As SparqlQuerySyntax) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsValidQName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsValidVarName(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsValidVarName(System.String)
  id: IsValidVarName(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsValidVarName(String)
  nameWithType: SparqlSpecsHelper.IsValidVarName(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsValidVarName(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsValidVarName
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 647
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given Variable Name is valid in Sparql.\n"
  example: []
  syntax:
    content: public static bool IsValidVarName(string value)
    parameters:
    - id: value
      type: System.String
      description: Variable Name to check.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsValidVarName(value As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsValidVarName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsValidPrefix(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsValidPrefix(System.String)
  id: IsValidPrefix(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsValidPrefix(String)
  nameWithType: SparqlSpecsHelper.IsValidPrefix(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsValidPrefix(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsValidPrefix
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 690
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets whether a given prefix declaration is valid in SPARQL.\n"
  example: []
  syntax:
    content: public static bool IsValidPrefix(string value)
    parameters:
    - id: value
      type: System.String
      description: Prefix declaration.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsValidPrefix(value As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsValidPrefix*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsValidBNode(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsValidBNode(System.String)
  id: IsValidBNode(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsValidBNode(String)
  nameWithType: SparqlSpecsHelper.IsValidBNode(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsValidBNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsValidBNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 708
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets whether a given BNode ID is valid.\n"
  example: []
  syntax:
    content: public static bool IsValidBNode(string value)
    parameters:
    - id: value
      type: System.String
      description: Value.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsValidBNode(value As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsValidBNode*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsBase(System.Char)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsBase(System.Char)
  id: IsPNCharsBase(System.Char)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPNCharsBase(Char)
  nameWithType: SparqlSpecsHelper.IsPNCharsBase(Char)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsBase(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPNCharsBase
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 746
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given Character matches the PN_CHARS_BASE rule from the Sparql Specification.\n"
  example: []
  syntax:
    content: public static bool IsPNCharsBase(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsPNCharsBase(c As Char) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsBase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsU(System.Char)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsU(System.Char)
  id: IsPNCharsU(System.Char)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPNCharsU(Char)
  nameWithType: SparqlSpecsHelper.IsPNCharsU(Char)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsU(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPNCharsU
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 782
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given Character matches the PN_CHARS_U rule from the SPARQL Specification.\n"
  example: []
  syntax:
    content: public static bool IsPNCharsU(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsPNCharsU(c As Char) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsU*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsPNChars(System.Char)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsPNChars(System.Char)
  id: IsPNChars(System.Char)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPNChars(Char)
  nameWithType: SparqlSpecsHelper.IsPNChars(Char)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsPNChars(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPNChars
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 792
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given Character matches the PN_CHARS rule from the SPARQL Specification.\n"
  example: []
  syntax:
    content: public static bool IsPNChars(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsPNChars(c As Char) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsPNChars*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsPNLocal(System.Char[],VDS.RDF.Parsing.SparqlQuerySyntax)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsPNLocal(System.Char[],VDS.RDF.Parsing.SparqlQuerySyntax)
  id: IsPNLocal(System.Char[],VDS.RDF.Parsing.SparqlQuerySyntax)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPNLocal(Char[], SparqlQuerySyntax)
  nameWithType: SparqlSpecsHelper.IsPNLocal(Char[], SparqlQuerySyntax)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsPNLocal(System.Char[], VDS.RDF.Parsing.SparqlQuerySyntax)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPNLocal
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 823
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given String matches the PN_LOCAL rule from the Sparql Specification.\n"
  example: []
  syntax:
    content: public static bool IsPNLocal(char[] cs, SparqlQuerySyntax syntax)
    parameters:
    - id: cs
      type: System.Char[]
      description: String as character array.
    - id: syntax
      type: VDS.RDF.Parsing.SparqlQuerySyntax
      description: SPARQL Syntax.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsPNLocal(cs As Char(), syntax As SparqlQuerySyntax) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsPNLocal*
  nameWithType.vb: SparqlSpecsHelper.IsPNLocal(Char(), SparqlQuerySyntax)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.Query.SparqlSpecsHelper.IsPNLocal(System.Char(), VDS.RDF.Parsing.SparqlQuerySyntax)
  name.vb: IsPNLocal(Char(), SparqlQuerySyntax)
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsPNPrefix(System.Char[])
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsPNPrefix(System.Char[])
  id: IsPNPrefix(System.Char[])
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPNPrefix(Char[])
  nameWithType: SparqlSpecsHelper.IsPNPrefix(Char[])
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsPNPrefix(System.Char[])
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPNPrefix
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 900
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given String matches the PN_PREFIX rule from the SPARQL Specification.\n"
  example: []
  syntax:
    content: public static bool IsPNPrefix(char[] cs)
    parameters:
    - id: cs
      type: System.Char[]
      description: String as character array.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsPNPrefix(cs As Char()) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsPNPrefix*
  nameWithType.vb: SparqlSpecsHelper.IsPNPrefix(Char())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.Query.SparqlSpecsHelper.IsPNPrefix(System.Char())
  name.vb: IsPNPrefix(Char())
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsPLX(System.Char[],System.Int32,System.Int32@)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsPLX(System.Char[],System.Int32,System.Int32@)
  id: IsPLX(System.Char[],System.Int32,System.Int32@)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPLX(Char[], Int32, out Int32)
  nameWithType: SparqlSpecsHelper.IsPLX(Char[], Int32, out Int32)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsPLX(System.Char[], System.Int32, out System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPLX
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 949
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether a given String matches the PLX rule from the SPARQL Specification.\n"
  example: []
  syntax:
    content: public static bool IsPLX(char[] cs, int startIndex, out int endIndex)
    parameters:
    - id: cs
      type: System.Char[]
      description: String as character array.
    - id: startIndex
      type: System.Int32
      description: Start Index.
    - id: endIndex
      type: System.Int32
      description: Resulting End Index.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsPLX(cs As Char(), startIndex As Integer, ByRef endIndex As Integer) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsPLX*
  nameWithType.vb: SparqlSpecsHelper.IsPLX(Char(), Int32, ByRef Int32)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.Query.SparqlSpecsHelper.IsPLX(System.Char(), System.Int32, ByRef System.Int32)
  name.vb: IsPLX(Char(), Int32, ByRef Int32)
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsHex(System.Char)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsHex(System.Char)
  id: IsHex(System.Char)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsHex(Char)
  nameWithType: SparqlSpecsHelper.IsHex(Char)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsHex(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsHex
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1026
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nGets whether a character is a Hex character.\n"
  example: []
  syntax:
    content: public static bool IsHex(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsHex(c As Char) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsHex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.UnescapeQName(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.UnescapeQName(System.String)
  id: UnescapeQName(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: UnescapeQName(String)
  nameWithType: SparqlSpecsHelper.UnescapeQName(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.UnescapeQName(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UnescapeQName
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1059
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nUnescapes local name escapes from QNames.\n"
  example: []
  syntax:
    content: public static string UnescapeQName(string value)
    parameters:
    - id: value
      type: System.String
      description: Value to unescape.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function UnescapeQName(value As String) As String
  overload: VDS.RDF.Query.SparqlSpecsHelper.UnescapeQName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsValidNumericLiteral(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsValidNumericLiteral(System.String)
  id: IsValidNumericLiteral(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsValidNumericLiteral(String)
  nameWithType: SparqlSpecsHelper.IsValidNumericLiteral(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsValidNumericLiteral(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsValidNumericLiteral
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1144
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether the given value is a valid Numeric Literal in Sparql.\n"
  example: []
  syntax:
    content: public static bool IsValidNumericLiteral(string value)
    parameters:
    - id: value
      type: System.String
      description: Value to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsValidNumericLiteral(value As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsValidNumericLiteral*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsInteger(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsInteger(System.String)
  id: IsInteger(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsInteger(String)
  nameWithType: SparqlSpecsHelper.IsInteger(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsInteger(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsInteger
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1154
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether the given value is a valid Integer Literal in Sparql.\n"
  example: []
  syntax:
    content: public static bool IsInteger(string value)
    parameters:
    - id: value
      type: System.String
      description: Value to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsInteger(value As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsInteger*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsDecimal(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsDecimal(System.String)
  id: IsDecimal(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsDecimal(String)
  nameWithType: SparqlSpecsHelper.IsDecimal(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsDecimal(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsDecimal
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1164
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether the given value is a valid Decimal Literal in Sparql.\n"
  example: []
  syntax:
    content: public static bool IsDecimal(string value)
    parameters:
    - id: value
      type: System.String
      description: Value to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsDecimal(value As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsDecimal*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsFloat(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsFloat(System.String)
  id: IsFloat(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsFloat(String)
  nameWithType: SparqlSpecsHelper.IsFloat(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsFloat(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsFloat
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1174
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether the given value is a valid Float Literal in Sparql.\n"
  example: []
  syntax:
    content: public static bool IsFloat(string value)
    parameters:
    - id: value
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsFloat(value As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsFloat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsDouble(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsDouble(System.String)
  id: IsDouble(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsDouble(String)
  nameWithType: SparqlSpecsHelper.IsDouble(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsDouble(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsDouble
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1184
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether the given value is a valid Double Literal in Sparql.\n"
  example: []
  syntax:
    content: public static bool IsDouble(string value)
    parameters:
    - id: value
      type: System.String
      description: Value to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsDouble(value As String) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsDouble*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri(System.Uri)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri(System.Uri)
  id: GetNumericTypeFromDataTypeUri(System.Uri)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: GetNumericTypeFromDataTypeUri(Uri)
  nameWithType: SparqlSpecsHelper.GetNumericTypeFromDataTypeUri(Uri)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetNumericTypeFromDataTypeUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1198
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nDetermines the Sparql Numeric Type for a Literal based on its Data Type Uri.\n"
  example: []
  syntax:
    content: public static SparqlNumericType GetNumericTypeFromDataTypeUri(Uri dtUri)
    parameters:
    - id: dtUri
      type: System.Uri
      description: Data Type Uri.
    return:
      type: VDS.RDF.Query.Expressions.SparqlNumericType
      description: ''
    content.vb: Public Shared Function GetNumericTypeFromDataTypeUri(dtUri As Uri) As SparqlNumericType
  overload: VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri(System.String)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri(System.String)
  id: GetNumericTypeFromDataTypeUri(System.String)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: GetNumericTypeFromDataTypeUri(String)
  nameWithType: SparqlSpecsHelper.GetNumericTypeFromDataTypeUri(String)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetNumericTypeFromDataTypeUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1208
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nDetermines the Sparql Numeric Type for a Literal based on its Data Type Uri.\n"
  example: []
  syntax:
    content: public static SparqlNumericType GetNumericTypeFromDataTypeUri(string dtUri)
    parameters:
    - id: dtUri
      type: System.String
      description: Data Type Uri as a String.
    return:
      type: VDS.RDF.Query.Expressions.SparqlNumericType
      description: ''
    content.vb: Public Shared Function GetNumericTypeFromDataTypeUri(dtUri As String) As SparqlNumericType
  overload: VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.EffectiveBooleanValue(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.EffectiveBooleanValue(VDS.RDF.INode)
  id: EffectiveBooleanValue(VDS.RDF.INode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: EffectiveBooleanValue(INode)
  nameWithType: SparqlSpecsHelper.EffectiveBooleanValue(INode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.EffectiveBooleanValue(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EffectiveBooleanValue
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1239
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nCalculates the Effective Boolean Value of a given Node according to the Sparql specification.\n"
  example: []
  syntax:
    content: public static bool EffectiveBooleanValue(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: Node to computer EBV for.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function EffectiveBooleanValue(n As INode) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.EffectiveBooleanValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsSelectQuery(VDS.RDF.Query.SparqlQueryType)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.IsSelectQuery(VDS.RDF.Query.SparqlQueryType)
  id: IsSelectQuery(VDS.RDF.Query.SparqlQueryType)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsSelectQuery(SparqlQueryType)
  nameWithType: SparqlSpecsHelper.IsSelectQuery(SparqlQueryType)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsSelectQuery(VDS.RDF.Query.SparqlQueryType)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSelectQuery
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1392
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nChecks whether the Query is a SELECT Query.\n"
  example: []
  syntax:
    content: public static bool IsSelectQuery(SparqlQueryType type)
    parameters:
    - id: type
      type: VDS.RDF.Query.SparqlQueryType
      description: Query Type.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsSelectQuery(type As SparqlQueryType) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.IsSelectQuery*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.Equality(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.Equality(VDS.RDF.INode,VDS.RDF.INode)
  id: Equality(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: Equality(INode, INode)
  nameWithType: SparqlSpecsHelper.Equality(INode, INode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.Equality(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1416
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nImplements Node Equality with SPARQL Semantics.\n"
  example: []
  syntax:
    content: public static bool Equality(INode x, INode y)
    parameters:
    - id: x
      type: VDS.RDF.INode
      description: Node.
    - id: y
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function Equality(x As INode, y As INode) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.Inequality(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.Inequality(VDS.RDF.INode,VDS.RDF.INode)
  id: Inequality(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: Inequality(INode, INode)
  nameWithType: SparqlSpecsHelper.Inequality(INode, INode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.Inequality(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Inequality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1529
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nImplements Node Inequality with SPARQL Semantics.\n"
  example: []
  syntax:
    content: public static bool Inequality(INode x, INode y)
    parameters:
    - id: x
      type: VDS.RDF.INode
      description: Node.
    - id: y
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function Inequality(x As INode, y As INode) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.NumericEquality(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.Query.Expressions.SparqlNumericType)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.NumericEquality(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.Query.Expressions.SparqlNumericType)
  id: NumericEquality(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.Query.Expressions.SparqlNumericType)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: NumericEquality(INode, INode, SparqlNumericType)
  nameWithType: SparqlSpecsHelper.NumericEquality(INode, INode, SparqlNumericType)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.NumericEquality(VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.Query.Expressions.SparqlNumericType)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NumericEquality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1689
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nImplements Numeric Equality with SPARQL Semantics.\n"
  example: []
  syntax:
    content: public static bool NumericEquality(INode x, INode y, SparqlNumericType type)
    parameters:
    - id: x
      type: VDS.RDF.INode
      description: Node.
    - id: y
      type: VDS.RDF.INode
      description: Node.
    - id: type
      type: VDS.RDF.Query.Expressions.SparqlNumericType
      description: SPARQL Numeric Tyoe.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function NumericEquality(x As INode, y As INode, type As SparqlNumericType) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.NumericEquality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.DateTimeEquality(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.DateTimeEquality(VDS.RDF.INode,VDS.RDF.INode)
  id: DateTimeEquality(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: DateTimeEquality(INode, INode)
  nameWithType: SparqlSpecsHelper.DateTimeEquality(INode, INode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.DateTimeEquality(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DateTimeEquality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1718
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nImplements Date Time Equality with SPARQL Semantics.\n"
  example: []
  syntax:
    content: public static bool DateTimeEquality(INode x, INode y)
    parameters:
    - id: x
      type: VDS.RDF.INode
      description: Node.
    - id: y
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function DateTimeEquality(x As INode, y As INode) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.DateTimeEquality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.DateEquality(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.DateEquality(VDS.RDF.INode,VDS.RDF.INode)
  id: DateEquality(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: DateEquality(INode, INode)
  nameWithType: SparqlSpecsHelper.DateEquality(INode, INode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.DateEquality(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DateEquality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1767
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nImplements Date Equality with SPARQL Semantics.\n"
  example: []
  syntax:
    content: public static bool DateEquality(INode x, INode y)
    parameters:
    - id: x
      type: VDS.RDF.INode
      description: Node.
    - id: y
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function DateEquality(x As INode, y As INode) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.DateEquality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.TimeSpanEquality(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.TimeSpanEquality(VDS.RDF.INode,VDS.RDF.INode)
  id: TimeSpanEquality(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: TimeSpanEquality(INode, INode)
  nameWithType: SparqlSpecsHelper.TimeSpanEquality(INode, INode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.TimeSpanEquality(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TimeSpanEquality
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1820
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nImplements Time Span Equality with SPARQL Semantics.\n"
  example: []
  syntax:
    content: public static bool TimeSpanEquality(INode x, INode y)
    parameters:
    - id: x
      type: VDS.RDF.INode
      description: Node.
    - id: y
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function TimeSpanEquality(x As INode, y As INode) As Boolean
  overload: VDS.RDF.Query.SparqlSpecsHelper.TimeSpanEquality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToDecimal(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.ToDecimal(VDS.RDF.ILiteralNode)
  id: ToDecimal(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: ToDecimal(ILiteralNode)
  nameWithType: SparqlSpecsHelper.ToDecimal(ILiteralNode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToDecimal(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToDecimal
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1844
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nConverts a Literal Node to a Decimal.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AsValuedNode().AsDecimal() instead")]

      public static decimal ToDecimal(ILiteralNode n)
    parameters:
    - id: n
      type: VDS.RDF.ILiteralNode
      description: Literal Node.
    return:
      type: System.Decimal
      description: ''
    content.vb: >-
      <Obsolete("Use AsValuedNode().AsDecimal() instead")>

      Public Shared Function ToDecimal(n As ILiteralNode) As Decimal
  overload: VDS.RDF.Query.SparqlSpecsHelper.ToDecimal*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AsValuedNode().AsDecimal() instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToDouble(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.ToDouble(VDS.RDF.ILiteralNode)
  id: ToDouble(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: ToDouble(ILiteralNode)
  nameWithType: SparqlSpecsHelper.ToDouble(ILiteralNode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToDouble(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToDouble
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1856
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nConverts a Literal Node to a Double.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AsValuedNode().AsDouble() instead")]

      public static double ToDouble(ILiteralNode n)
    parameters:
    - id: n
      type: VDS.RDF.ILiteralNode
      description: Literal Node.
    return:
      type: System.Double
      description: ''
    content.vb: >-
      <Obsolete("Use AsValuedNode().AsDouble() instead")>

      Public Shared Function ToDouble(n As ILiteralNode) As Double
  overload: VDS.RDF.Query.SparqlSpecsHelper.ToDouble*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AsValuedNode().AsDouble() instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToFloat(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.ToFloat(VDS.RDF.ILiteralNode)
  id: ToFloat(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: ToFloat(ILiteralNode)
  nameWithType: SparqlSpecsHelper.ToFloat(ILiteralNode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToFloat(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToFloat
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1868
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nConverts a Literal Node to a Float.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AsValuedNode().AsFloat() instead")]

      public static float ToFloat(ILiteralNode n)
    parameters:
    - id: n
      type: VDS.RDF.ILiteralNode
      description: Literal Node.
    return:
      type: System.Single
      description: ''
    content.vb: >-
      <Obsolete("Use AsValuedNode().AsFloat() instead")>

      Public Shared Function ToFloat(n As ILiteralNode) As Single
  overload: VDS.RDF.Query.SparqlSpecsHelper.ToFloat*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AsValuedNode().AsFloat() instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToInteger(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.ToInteger(VDS.RDF.ILiteralNode)
  id: ToInteger(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: ToInteger(ILiteralNode)
  nameWithType: SparqlSpecsHelper.ToInteger(ILiteralNode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToInteger(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToInteger
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1880
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nConverts a Literal Node to an Integer.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AsValuedNode().AsInteger() instead")]

      public static long ToInteger(ILiteralNode n)
    parameters:
    - id: n
      type: VDS.RDF.ILiteralNode
      description: Literal Node.
    return:
      type: System.Int64
      description: ''
    content.vb: >-
      <Obsolete("Use AsValuedNode().AsInteger() instead")>

      Public Shared Function ToInteger(n As ILiteralNode) As Long
  overload: VDS.RDF.Query.SparqlSpecsHelper.ToInteger*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AsValuedNode().AsInteger() instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToDateTime(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.ToDateTime(VDS.RDF.ILiteralNode)
  id: ToDateTime(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: ToDateTime(ILiteralNode)
  nameWithType: SparqlSpecsHelper.ToDateTime(ILiteralNode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToDateTime(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToDateTime
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1892
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nConverts a Literal Node to a Date Time.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AsValuedNode().AsDateTime() instead")]

      public static DateTime ToDateTime(ILiteralNode n)
    parameters:
    - id: n
      type: VDS.RDF.ILiteralNode
      description: Literal Node.
    return:
      type: System.DateTime
      description: ''
    content.vb: >-
      <Obsolete("Use AsValuedNode().AsDateTime() instead")>

      Public Shared Function ToDateTime(n As ILiteralNode) As Date
  overload: VDS.RDF.Query.SparqlSpecsHelper.ToDateTime*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AsValuedNode().AsDateTime() instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToDateTimeOffset(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.ToDateTimeOffset(VDS.RDF.ILiteralNode)
  id: ToDateTimeOffset(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: ToDateTimeOffset(ILiteralNode)
  nameWithType: SparqlSpecsHelper.ToDateTimeOffset(ILiteralNode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToDateTimeOffset(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToDateTimeOffset
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1904
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nConverts a Literal Node to a Date Time Offset.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AsValuedNode().AsDateTimeOffset() instead")]

      public static DateTimeOffset ToDateTimeOffset(ILiteralNode n)
    parameters:
    - id: n
      type: VDS.RDF.ILiteralNode
      description: Literal Node.
    return:
      type: System.DateTimeOffset
      description: ''
    content.vb: >-
      <Obsolete("Use AsValuedNode().AsDateTimeOffset() instead")>

      Public Shared Function ToDateTimeOffset(n As ILiteralNode) As DateTimeOffset
  overload: VDS.RDF.Query.SparqlSpecsHelper.ToDateTimeOffset*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AsValuedNode().AsDateTimeOffset() instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToTimeSpan(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.Query.SparqlSpecsHelper.ToTimeSpan(VDS.RDF.ILiteralNode)
  id: ToTimeSpan(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.Query.SparqlSpecsHelper
  langs:
  - csharp
  - vb
  name: ToTimeSpan(ILiteralNode)
  nameWithType: SparqlSpecsHelper.ToTimeSpan(ILiteralNode)
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToTimeSpan(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToTimeSpan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/SPARQLSpecsHelper.cs
    startLine: 1916
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nConverts a Literal Node to a Time Span.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use AsValuedNode().AsTimeSpan() instead")]

      public static TimeSpan ToTimeSpan(ILiteralNode n)
    parameters:
    - id: n
      type: VDS.RDF.ILiteralNode
      description: Literal Node.
    return:
      type: System.TimeSpan
      description: ''
    content.vb: >-
      <Obsolete("Use AsValuedNode().AsTimeSpan() instead")>

      Public Shared Function ToTimeSpan(n As ILiteralNode) As TimeSpan
  overload: VDS.RDF.Query.SparqlSpecsHelper.ToTimeSpan*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use AsValuedNode().AsTimeSpan() instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: VDS.RDF.Query.SparqlSpecsHelper.AggregateFunctionKeywords
  commentId: F:VDS.RDF.Query.SparqlSpecsHelper.AggregateFunctionKeywords
  isExternal: true
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsQueryKeyword*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsQueryKeyword
  name: IsQueryKeyword
  nameWithType: SparqlSpecsHelper.IsQueryKeyword
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsQueryKeyword
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsNonQueryKeyword*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsNonQueryKeyword
  name: IsNonQueryKeyword
  nameWithType: SparqlSpecsHelper.IsNonQueryKeyword
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsNonQueryKeyword
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword
  name: IsFunctionKeyword
  nameWithType: SparqlSpecsHelper.IsFunctionKeyword
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword11*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword11
  name: IsFunctionKeyword11
  nameWithType: SparqlSpecsHelper.IsFunctionKeyword11
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsFunctionKeyword11
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsAggregateKeyword*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsAggregateKeyword
  name: IsAggregateKeyword
  nameWithType: SparqlSpecsHelper.IsAggregateKeyword
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsAggregateKeyword
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsAggregateFunctionKeyword*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsAggregateFunctionKeyword
  name: IsAggregateFunctionKeyword
  nameWithType: SparqlSpecsHelper.IsAggregateFunctionKeyword
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsAggregateFunctionKeyword
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsUpdateKeyword*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsUpdateKeyword
  name: IsUpdateKeyword
  nameWithType: SparqlSpecsHelper.IsUpdateKeyword
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsUpdateKeyword
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsValidQName*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsValidQName
  name: IsValidQName
  nameWithType: SparqlSpecsHelper.IsValidQName
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsValidQName
- uid: VDS.RDF.Parsing.SparqlQuerySyntax
  commentId: T:VDS.RDF.Parsing.SparqlQuerySyntax
  parent: VDS.RDF.Parsing
  name: SparqlQuerySyntax
  nameWithType: SparqlQuerySyntax
  fullName: VDS.RDF.Parsing.SparqlQuerySyntax
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsValidVarName*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsValidVarName
  name: IsValidVarName
  nameWithType: SparqlSpecsHelper.IsValidVarName
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsValidVarName
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsValidPrefix*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsValidPrefix
  name: IsValidPrefix
  nameWithType: SparqlSpecsHelper.IsValidPrefix
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsValidPrefix
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsValidBNode*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsValidBNode
  name: IsValidBNode
  nameWithType: SparqlSpecsHelper.IsValidBNode
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsValidBNode
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsBase*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsBase
  name: IsPNCharsBase
  nameWithType: SparqlSpecsHelper.IsPNCharsBase
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsBase
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsU*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsU
  name: IsPNCharsU
  nameWithType: SparqlSpecsHelper.IsPNCharsU
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsPNCharsU
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsPNChars*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsPNChars
  name: IsPNChars
  nameWithType: SparqlSpecsHelper.IsPNChars
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsPNChars
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsPNLocal*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsPNLocal
  name: IsPNLocal
  nameWithType: SparqlSpecsHelper.IsPNLocal
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsPNLocal
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsPNPrefix*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsPNPrefix
  name: IsPNPrefix
  nameWithType: SparqlSpecsHelper.IsPNPrefix
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsPNPrefix
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsPLX*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsPLX
  name: IsPLX
  nameWithType: SparqlSpecsHelper.IsPLX
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsPLX
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsHex*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsHex
  name: IsHex
  nameWithType: SparqlSpecsHelper.IsHex
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsHex
- uid: VDS.RDF.Query.SparqlSpecsHelper.UnescapeQName*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.UnescapeQName
  name: UnescapeQName
  nameWithType: SparqlSpecsHelper.UnescapeQName
  fullName: VDS.RDF.Query.SparqlSpecsHelper.UnescapeQName
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsValidNumericLiteral*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsValidNumericLiteral
  name: IsValidNumericLiteral
  nameWithType: SparqlSpecsHelper.IsValidNumericLiteral
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsValidNumericLiteral
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsInteger*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsInteger
  name: IsInteger
  nameWithType: SparqlSpecsHelper.IsInteger
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsInteger
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsDecimal*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsDecimal
  name: IsDecimal
  nameWithType: SparqlSpecsHelper.IsDecimal
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsDecimal
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsFloat*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsFloat
  name: IsFloat
  nameWithType: SparqlSpecsHelper.IsFloat
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsFloat
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsDouble*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsDouble
  name: IsDouble
  nameWithType: SparqlSpecsHelper.IsDouble
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsDouble
- uid: VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri
  name: GetNumericTypeFromDataTypeUri
  nameWithType: SparqlSpecsHelper.GetNumericTypeFromDataTypeUri
  fullName: VDS.RDF.Query.SparqlSpecsHelper.GetNumericTypeFromDataTypeUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Query.Expressions.SparqlNumericType
  commentId: T:VDS.RDF.Query.Expressions.SparqlNumericType
  parent: VDS.RDF.Query.Expressions
  name: SparqlNumericType
  nameWithType: SparqlNumericType
  fullName: VDS.RDF.Query.Expressions.SparqlNumericType
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Query.SparqlSpecsHelper.EffectiveBooleanValue*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.EffectiveBooleanValue
  name: EffectiveBooleanValue
  nameWithType: SparqlSpecsHelper.EffectiveBooleanValue
  fullName: VDS.RDF.Query.SparqlSpecsHelper.EffectiveBooleanValue
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.SparqlSpecsHelper.IsSelectQuery*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.IsSelectQuery
  name: IsSelectQuery
  nameWithType: SparqlSpecsHelper.IsSelectQuery
  fullName: VDS.RDF.Query.SparqlSpecsHelper.IsSelectQuery
- uid: VDS.RDF.Query.SparqlQueryType
  commentId: T:VDS.RDF.Query.SparqlQueryType
  parent: VDS.RDF.Query
  name: SparqlQueryType
  nameWithType: SparqlQueryType
  fullName: VDS.RDF.Query.SparqlQueryType
- uid: VDS.RDF.Query.SparqlSpecsHelper.Equality*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.Equality
  name: Equality
  nameWithType: SparqlSpecsHelper.Equality
  fullName: VDS.RDF.Query.SparqlSpecsHelper.Equality
- uid: VDS.RDF.Query.SparqlSpecsHelper.Inequality*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.Inequality
  name: Inequality
  nameWithType: SparqlSpecsHelper.Inequality
  fullName: VDS.RDF.Query.SparqlSpecsHelper.Inequality
- uid: VDS.RDF.Query.SparqlSpecsHelper.NumericEquality*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.NumericEquality
  name: NumericEquality
  nameWithType: SparqlSpecsHelper.NumericEquality
  fullName: VDS.RDF.Query.SparqlSpecsHelper.NumericEquality
- uid: VDS.RDF.Query.SparqlSpecsHelper.DateTimeEquality*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.DateTimeEquality
  name: DateTimeEquality
  nameWithType: SparqlSpecsHelper.DateTimeEquality
  fullName: VDS.RDF.Query.SparqlSpecsHelper.DateTimeEquality
- uid: VDS.RDF.Query.SparqlSpecsHelper.DateEquality*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.DateEquality
  name: DateEquality
  nameWithType: SparqlSpecsHelper.DateEquality
  fullName: VDS.RDF.Query.SparqlSpecsHelper.DateEquality
- uid: VDS.RDF.Query.SparqlSpecsHelper.TimeSpanEquality*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.TimeSpanEquality
  name: TimeSpanEquality
  nameWithType: SparqlSpecsHelper.TimeSpanEquality
  fullName: VDS.RDF.Query.SparqlSpecsHelper.TimeSpanEquality
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToDecimal*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.ToDecimal
  name: ToDecimal
  nameWithType: SparqlSpecsHelper.ToDecimal
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToDecimal
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToDouble*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.ToDouble
  name: ToDouble
  nameWithType: SparqlSpecsHelper.ToDouble
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToDouble
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToFloat*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.ToFloat
  name: ToFloat
  nameWithType: SparqlSpecsHelper.ToFloat
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToFloat
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToInteger*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.ToInteger
  name: ToInteger
  nameWithType: SparqlSpecsHelper.ToInteger
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToInteger
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToDateTime*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.ToDateTime
  name: ToDateTime
  nameWithType: SparqlSpecsHelper.ToDateTime
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToDateTimeOffset*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.ToDateTimeOffset
  name: ToDateTimeOffset
  nameWithType: SparqlSpecsHelper.ToDateTimeOffset
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToDateTimeOffset
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: VDS.RDF.Query.SparqlSpecsHelper.ToTimeSpan*
  commentId: Overload:VDS.RDF.Query.SparqlSpecsHelper.ToTimeSpan
  name: ToTimeSpan
  nameWithType: SparqlSpecsHelper.ToTimeSpan
  fullName: VDS.RDF.Query.SparqlSpecsHelper.ToTimeSpan
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
