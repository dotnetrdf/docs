### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Algebra.IBgp
  commentId: T:VDS.RDF.Query.Algebra.IBgp
  id: IBgp
  parent: VDS.RDF.Query.Algebra
  children:
  - VDS.RDF.Query.Algebra.IBgp.PatternCount
  - VDS.RDF.Query.Algebra.IBgp.TriplePatterns
  langs:
  - csharp
  - vb
  name: IBgp
  nameWithType: IBgp
  fullName: VDS.RDF.Query.Algebra.IBgp
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IBgp
    path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
    startLine: 116
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nRepresents an Algebra construct which is a BGP.\n"
  example: []
  syntax:
    content: 'public interface IBgp : ITerminalOperator, ISparqlAlgebra'
    content.vb: >-
      Public Interface IBgp
          Inherits ISparqlAlgebra, ITerminalOperator
  inheritedMembers:
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  extensionMethods:
  - VDS.RDF.Query.Algebra.IBgp.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Algebra.IBgp.PatternCount
  commentId: P:VDS.RDF.Query.Algebra.IBgp.PatternCount
  id: PatternCount
  parent: VDS.RDF.Query.Algebra.IBgp
  langs:
  - csharp
  - vb
  name: PatternCount
  nameWithType: IBgp.PatternCount
  fullName: VDS.RDF.Query.Algebra.IBgp.PatternCount
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PatternCount
    path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
    startLine: 122
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the Number of Patterns in the BGP.\n"
  example: []
  syntax:
    content: int PatternCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property PatternCount As Integer
  overload: VDS.RDF.Query.Algebra.IBgp.PatternCount*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Algebra.IBgp.TriplePatterns
  commentId: P:VDS.RDF.Query.Algebra.IBgp.TriplePatterns
  id: TriplePatterns
  parent: VDS.RDF.Query.Algebra.IBgp
  langs:
  - csharp
  - vb
  name: TriplePatterns
  nameWithType: IBgp.TriplePatterns
  fullName: VDS.RDF.Query.Algebra.IBgp.TriplePatterns
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TriplePatterns
    path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
    startLine: 130
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the Triple Patterns in the BGP.\n"
  example: []
  syntax:
    content: IEnumerable<ITriplePattern> TriplePatterns { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern}
    content.vb: ReadOnly Property TriplePatterns As IEnumerable(Of ITriplePattern)
  overload: VDS.RDF.Query.Algebra.IBgp.TriplePatterns*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VDS.RDF.Query.Algebra
  commentId: N:VDS.RDF.Query.Algebra
  name: VDS.RDF.Query.Algebra
  nameWithType: VDS.RDF.Query.Algebra
  fullName: VDS.RDF.Query.Algebra
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ISparqlAlgebra.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ISparqlAlgebra.Evaluate
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ISparqlAlgebra.Evaluate
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
  commentId: P:VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: Variables
  nameWithType: ISparqlAlgebra.Variables
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
  commentId: P:VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: FloatingVariables
  nameWithType: ISparqlAlgebra.FloatingVariables
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
  commentId: P:VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: FixedVariables
  nameWithType: ISparqlAlgebra.FixedVariables
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: ToQuery()
  nameWithType: ISparqlAlgebra.ToQuery()
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
    name: ToQuery
    nameWithType: ISparqlAlgebra.ToQuery
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
    name: ToQuery
    nameWithType: ISparqlAlgebra.ToQuery
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: ToGraphPattern()
  nameWithType: ISparqlAlgebra.ToGraphPattern()
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
    name: ToGraphPattern
    nameWithType: ISparqlAlgebra.ToGraphPattern
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
    name: ToGraphPattern
    nameWithType: ISparqlAlgebra.ToGraphPattern
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.IBgp.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IBgp>()
  nameWithType: Extensions.AsEnumerable<IBgp>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.IBgp>()
  nameWithType.vb: Extensions.AsEnumerable(Of IBgp)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.IBgp)()
  name.vb: AsEnumerable(Of IBgp)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IBgp>
    nameWithType: Extensions.AsEnumerable<IBgp>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.IBgp>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IBgp)
    nameWithType: Extensions.AsEnumerable(Of IBgp)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.IBgp)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra
  commentId: T:VDS.RDF.Query.Algebra.ISparqlAlgebra
  parent: VDS.RDF.Query.Algebra
  name: ISparqlAlgebra
  nameWithType: ISparqlAlgebra
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Algebra.IBgp.PatternCount*
  commentId: Overload:VDS.RDF.Query.Algebra.IBgp.PatternCount
  name: PatternCount
  nameWithType: IBgp.PatternCount
  fullName: VDS.RDF.Query.Algebra.IBgp.PatternCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Algebra.IBgp.TriplePatterns*
  commentId: Overload:VDS.RDF.Query.Algebra.IBgp.TriplePatterns
  name: TriplePatterns
  nameWithType: IBgp.TriplePatterns
  fullName: VDS.RDF.Query.Algebra.IBgp.TriplePatterns
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.Patterns.ITriplePattern}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ITriplePattern>
  nameWithType: IEnumerable<ITriplePattern>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.Patterns.ITriplePattern>
  nameWithType.vb: IEnumerable(Of ITriplePattern)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Patterns.ITriplePattern)
  name.vb: IEnumerable(Of ITriplePattern)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
shouldSkipMarkup: true
