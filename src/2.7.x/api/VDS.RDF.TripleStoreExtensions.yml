### YamlMime:ManagedReference
items:
- uid: VDS.RDF.TripleStoreExtensions
  commentId: T:VDS.RDF.TripleStoreExtensions
  id: TripleStoreExtensions
  parent: VDS.RDF
  children:
  - VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String)
  - VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  - VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String)
  - VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  - VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String)
  - VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  - VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri)
  - VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri,VDS.RDF.IStoreReader)
  - VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String)
  - VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreWriter)
  langs:
  - csharp
  - vb
  name: TripleStoreExtensions
  nameWithType: TripleStoreExtensions
  fullName: VDS.RDF.TripleStoreExtensions
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TripleStoreExtensions
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1350
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nProvides useful Extension Methods for working with Triple Stores.\n"
  example: []
  syntax:
    content: public static class TripleStoreExtensions
    content.vb: Public Module TripleStoreExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  id: LoadFromFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  isExtensionMethod: true
  parent: VDS.RDF.TripleStoreExtensions
  langs:
  - csharp
  - vb
  name: LoadFromFile(ITripleStore, String, IStoreReader)
  nameWithType: TripleStoreExtensions.LoadFromFile(ITripleStore, String, IStoreReader)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore, System.String, VDS.RDF.IStoreReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromFile
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1361
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads an RDF dataset from a file into a Triple Store.\n"
  remarks: "\nThis is just a shortcut to using the static <strong>Load()</strong> methods from the <xref href=\"VDS.RDF.Parsing.FileLoader\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n"
  example: []
  syntax:
    content: public static void LoadFromFile(this ITripleStore store, string file, IStoreReader parser)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Triple Store to load into.
    - id: file
      type: System.String
      description: File to load from.
    - id: parser
      type: VDS.RDF.IStoreReader
      description: Parser to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromFile(store As ITripleStore, file As String, parser As IStoreReader)
  overload: VDS.RDF.TripleStoreExtensions.LoadFromFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String)
  id: LoadFromFile(VDS.RDF.ITripleStore,System.String)
  isExtensionMethod: true
  parent: VDS.RDF.TripleStoreExtensions
  langs:
  - csharp
  - vb
  name: LoadFromFile(ITripleStore, String)
  nameWithType: TripleStoreExtensions.LoadFromFile(ITripleStore, String)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromFile
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1374
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads an RDF dataset from a file into a Triple Store.\n"
  remarks: "\nThis is just a shortcut to using the static <strong>Load()</strong> methods from the <xref href=\"VDS.RDF.Parsing.FileLoader\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n"
  example: []
  syntax:
    content: public static void LoadFromFile(this ITripleStore store, string file)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Triple Store to load into.
    - id: file
      type: System.String
      description: File to load from.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromFile(store As ITripleStore, file As String)
  overload: VDS.RDF.TripleStoreExtensions.LoadFromFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri,VDS.RDF.IStoreReader)
  id: LoadFromUri(VDS.RDF.ITripleStore,System.Uri,VDS.RDF.IStoreReader)
  isExtensionMethod: true
  parent: VDS.RDF.TripleStoreExtensions
  langs:
  - csharp
  - vb
  name: LoadFromUri(ITripleStore, Uri, IStoreReader)
  nameWithType: TripleStoreExtensions.LoadFromUri(ITripleStore, Uri, IStoreReader)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore, System.Uri, VDS.RDF.IStoreReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1388
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads an RDF dataset from a URI into a Triple Store.\n"
  remarks: "\nThis is just a shortcut to using the static <strong>Load()</strong> methods from the <xref href=\"VDS.RDF.Parsing.UriLoader\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n"
  example: []
  syntax:
    content: public static void LoadFromUri(this ITripleStore store, Uri u, IStoreReader parser)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Triple Store to load into.
    - id: u
      type: System.Uri
      description: URI to load from.
    - id: parser
      type: VDS.RDF.IStoreReader
      description: Parser to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromUri(store As ITripleStore, u As Uri, parser As IStoreReader)
  overload: VDS.RDF.TripleStoreExtensions.LoadFromUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri)
  id: LoadFromUri(VDS.RDF.ITripleStore,System.Uri)
  isExtensionMethod: true
  parent: VDS.RDF.TripleStoreExtensions
  langs:
  - csharp
  - vb
  name: LoadFromUri(ITripleStore, Uri)
  nameWithType: TripleStoreExtensions.LoadFromUri(ITripleStore, Uri)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1401
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads an RDF dataset from a URI into a Triple Store.\n"
  remarks: "\nThis is just a shortcut to using the static <strong>Load()</strong> methods from the <xref href=\"VDS.RDF.Parsing.UriLoader\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n"
  example: []
  syntax:
    content: public static void LoadFromUri(this ITripleStore store, Uri u)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Triple Store to load into.
    - id: u
      type: System.Uri
      description: URI to load from.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromUri(store As ITripleStore, u As Uri)
  overload: VDS.RDF.TripleStoreExtensions.LoadFromUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  id: LoadFromString(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  isExtensionMethod: true
  parent: VDS.RDF.TripleStoreExtensions
  langs:
  - csharp
  - vb
  name: LoadFromString(ITripleStore, String, IStoreReader)
  nameWithType: TripleStoreExtensions.LoadFromString(ITripleStore, String, IStoreReader)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore, System.String, VDS.RDF.IStoreReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1415
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads an RDF dataset from a String into a Triple Store.\n"
  remarks: "\nThis is just a shortcut to using the static <strong>ParseDataset()</strong> methods from the <xref href=\"VDS.RDF.Parsing.StringParser\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n"
  example: []
  syntax:
    content: public static void LoadFromString(this ITripleStore store, string data, IStoreReader parser)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Triple Store to load into.
    - id: data
      type: System.String
      description: Data to load.
    - id: parser
      type: VDS.RDF.IStoreReader
      description: Parser to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromString(store As ITripleStore, data As String, parser As IStoreReader)
  overload: VDS.RDF.TripleStoreExtensions.LoadFromString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String)
  id: LoadFromString(VDS.RDF.ITripleStore,System.String)
  isExtensionMethod: true
  parent: VDS.RDF.TripleStoreExtensions
  langs:
  - csharp
  - vb
  name: LoadFromString(ITripleStore, String)
  nameWithType: TripleStoreExtensions.LoadFromString(ITripleStore, String)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1428
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads an RDF dataset from a String into a Triple Store.\n"
  remarks: "\nThis is just a shortcut to using the static <strong>ParseDataset()</strong> methods from the <xref href=\"VDS.RDF.Parsing.StringParser\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n"
  example: []
  syntax:
    content: public static void LoadFromString(this ITripleStore store, string data)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Triple Store to load into.
    - id: data
      type: System.String
      description: Data to load.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromString(store As ITripleStore, data As String)
  overload: VDS.RDF.TripleStoreExtensions.LoadFromString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  id: LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  isExtensionMethod: true
  parent: VDS.RDF.TripleStoreExtensions
  langs:
  - csharp
  - vb
  name: LoadFromEmbeddedResource(ITripleStore, String, IStoreReader)
  nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource(ITripleStore, String, IStoreReader)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore, System.String, VDS.RDF.IStoreReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromEmbeddedResource
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1442
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads an RDF dataset from an Embedded Resource into a Triple Store.\n"
  remarks: "\nThis is just a shortcut to using the static <strong>Load()</strong> methods from the <xref href=\"VDS.RDF.Parsing.EmbeddedResourceLoader\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n"
  example: []
  syntax:
    content: public static void LoadFromEmbeddedResource(this ITripleStore store, string resource, IStoreReader parser)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Triple Store to load into.
    - id: resource
      type: System.String
      description: Assembly Qualified Name of the Embedded Resource to load from.
    - id: parser
      type: VDS.RDF.IStoreReader
      description: Parser to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromEmbeddedResource(store As ITripleStore, resource As String, parser As IStoreReader)
  overload: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String)
  id: LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String)
  isExtensionMethod: true
  parent: VDS.RDF.TripleStoreExtensions
  langs:
  - csharp
  - vb
  name: LoadFromEmbeddedResource(ITripleStore, String)
  nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource(ITripleStore, String)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromEmbeddedResource
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1455
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads an RDF dataset from an Embedded Resource into a Triple Store.\n"
  remarks: "\nThis is just a shortcut to using the static <strong>Load()</strong> methods from the <xref href=\"VDS.RDF.Parsing.EmbeddedResourceLoader\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n"
  example: []
  syntax:
    content: public static void LoadFromEmbeddedResource(this ITripleStore store, string resource)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Triple Store to load into.
    - id: resource
      type: System.String
      description: Assembly Qualified Name of the Embedded Resource to load from.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromEmbeddedResource(store As ITripleStore, resource As String)
  overload: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreWriter)
  id: SaveToFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreWriter)
  isExtensionMethod: true
  parent: VDS.RDF.TripleStoreExtensions
  langs:
  - csharp
  - vb
  name: SaveToFile(ITripleStore, String, IStoreWriter)
  nameWithType: TripleStoreExtensions.SaveToFile(ITripleStore, String, IStoreWriter)
  fullName: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore, System.String, VDS.RDF.IStoreWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SaveToFile
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1466
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSaves a Triple Store to a file.\n"
  example: []
  syntax:
    content: public static void SaveToFile(this ITripleStore store, string file, IStoreWriter writer)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Triple Store to save.
    - id: file
      type: System.String
      description: File to save to.
    - id: writer
      type: VDS.RDF.IStoreWriter
      description: Writer to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SaveToFile(store As ITripleStore, file As String, writer As IStoreWriter)
  overload: VDS.RDF.TripleStoreExtensions.SaveToFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String)
  commentId: M:VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String)
  id: SaveToFile(VDS.RDF.ITripleStore,System.String)
  isExtensionMethod: true
  parent: VDS.RDF.TripleStoreExtensions
  langs:
  - csharp
  - vb
  name: SaveToFile(ITripleStore, String)
  nameWithType: TripleStoreExtensions.SaveToFile(ITripleStore, String)
  fullName: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SaveToFile
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1483
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSaves a Triple Store to a file.\n"
  example: []
  syntax:
    content: public static void SaveToFile(this ITripleStore store, string file)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Triple Store to save.
    - id: file
      type: System.String
      description: File to save to.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SaveToFile(store As ITripleStore, file As String)
  overload: VDS.RDF.TripleStoreExtensions.SaveToFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.FileLoader
  commentId: T:VDS.RDF.Parsing.FileLoader
  name: FileLoader
  nameWithType: FileLoader
  fullName: VDS.RDF.Parsing.FileLoader
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: VDS.RDF.TripleStoreExtensions.LoadFromFile*
  commentId: Overload:VDS.RDF.TripleStoreExtensions.LoadFromFile
  name: LoadFromFile
  nameWithType: TripleStoreExtensions.LoadFromFile
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile
- uid: VDS.RDF.ITripleStore
  commentId: T:VDS.RDF.ITripleStore
  parent: VDS.RDF
  name: ITripleStore
  nameWithType: ITripleStore
  fullName: VDS.RDF.ITripleStore
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.IStoreReader
  commentId: T:VDS.RDF.IStoreReader
  parent: VDS.RDF
  name: IStoreReader
  nameWithType: IStoreReader
  fullName: VDS.RDF.IStoreReader
- uid: VDS.RDF.Parsing.UriLoader
  commentId: T:VDS.RDF.Parsing.UriLoader
  name: UriLoader
  nameWithType: UriLoader
  fullName: VDS.RDF.Parsing.UriLoader
- uid: VDS.RDF.TripleStoreExtensions.LoadFromUri*
  commentId: Overload:VDS.RDF.TripleStoreExtensions.LoadFromUri
  name: LoadFromUri
  nameWithType: TripleStoreExtensions.LoadFromUri
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Parsing.StringParser
  commentId: T:VDS.RDF.Parsing.StringParser
  name: StringParser
  nameWithType: StringParser
  fullName: VDS.RDF.Parsing.StringParser
- uid: VDS.RDF.TripleStoreExtensions.LoadFromString*
  commentId: Overload:VDS.RDF.TripleStoreExtensions.LoadFromString
  name: LoadFromString
  nameWithType: TripleStoreExtensions.LoadFromString
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromString
- uid: VDS.RDF.Parsing.EmbeddedResourceLoader
  commentId: T:VDS.RDF.Parsing.EmbeddedResourceLoader
  name: EmbeddedResourceLoader
  nameWithType: EmbeddedResourceLoader
  fullName: VDS.RDF.Parsing.EmbeddedResourceLoader
- uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource*
  commentId: Overload:VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource
  name: LoadFromEmbeddedResource
  nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource
- uid: VDS.RDF.TripleStoreExtensions.SaveToFile*
  commentId: Overload:VDS.RDF.TripleStoreExtensions.SaveToFile
  name: SaveToFile
  nameWithType: TripleStoreExtensions.SaveToFile
  fullName: VDS.RDF.TripleStoreExtensions.SaveToFile
- uid: VDS.RDF.IStoreWriter
  commentId: T:VDS.RDF.IStoreWriter
  parent: VDS.RDF
  name: IStoreWriter
  nameWithType: IStoreWriter
  fullName: VDS.RDF.IStoreWriter
