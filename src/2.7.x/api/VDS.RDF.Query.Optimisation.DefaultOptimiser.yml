### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Optimisation.DefaultOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.DefaultOptimiser
  id: DefaultOptimiser
  parent: VDS.RDF.Query.Optimisation
  children:
  - VDS.RDF.Query.Optimisation.DefaultOptimiser.GetRankingComparer
  langs:
  - csharp
  - vb
  name: DefaultOptimiser
  nameWithType: DefaultOptimiser
  fullName: VDS.RDF.Query.Optimisation.DefaultOptimiser
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/QueryOptimisers.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultOptimiser
    path: Libraries/dotNetRDF/Query/Optimisation/QueryOptimisers.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nDefault SPARQL Query Optimiser.\n"
  example: []
  syntax:
    content: 'public class DefaultOptimiser : BaseQueryOptimiser, IQueryOptimiser'
    content.vb: >-
      Public Class DefaultOptimiser
          Inherits BaseQueryOptimiser
          Implements IQueryOptimiser
  inheritance:
  - System.Object
  - VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  implements:
  - VDS.RDF.Query.Optimisation.IQueryOptimiser
  inheritedMembers:
  - VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldReorder
  - VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldSplitFilters
  - VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceFilters
  - VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceAssignments
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Optimisation.DefaultOptimiser.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Optimisation.DefaultOptimiser.GetRankingComparer
  commentId: M:VDS.RDF.Query.Optimisation.DefaultOptimiser.GetRankingComparer
  id: GetRankingComparer
  parent: VDS.RDF.Query.Optimisation.DefaultOptimiser
  langs:
  - csharp
  - vb
  name: GetRankingComparer()
  nameWithType: DefaultOptimiser.GetRankingComparer()
  fullName: VDS.RDF.Query.Optimisation.DefaultOptimiser.GetRankingComparer()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/QueryOptimisers.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetRankingComparer
    path: Libraries/dotNetRDF/Query/Optimisation/QueryOptimisers.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nGets the Default Comparer for Triple Patterns to rank them.\n"
  example: []
  syntax:
    content: protected override IComparer<ITriplePattern> GetRankingComparer()
    return:
      type: System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}
      description: ''
    content.vb: Protected Overrides Function GetRankingComparer As IComparer(Of ITriplePattern)
  overridden: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
  overload: VDS.RDF.Query.Optimisation.DefaultOptimiser.GetRankingComparer*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: VDS.RDF.Query.Optimisation
  commentId: N:VDS.RDF.Query.Optimisation
  name: VDS.RDF.Query.Optimisation
  nameWithType: VDS.RDF.Query.Optimisation
  fullName: VDS.RDF.Query.Optimisation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  parent: VDS.RDF.Query.Optimisation
  name: BaseQueryOptimiser
  nameWithType: BaseQueryOptimiser
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
- uid: VDS.RDF.Query.Optimisation.IQueryOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.IQueryOptimiser
  parent: VDS.RDF.Query.Optimisation
  name: IQueryOptimiser
  nameWithType: IQueryOptimiser
  fullName: VDS.RDF.Query.Optimisation.IQueryOptimiser
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  isExternal: true
  name: Optimise(GraphPattern, IEnumerable<String>)
  nameWithType: BaseQueryOptimiser.Optimise(GraphPattern, IEnumerable<String>)
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern, System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: BaseQueryOptimiser.Optimise(GraphPattern, IEnumerable(Of String))
  fullName.vb: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Optimise(GraphPattern, IEnumerable(Of String))
  spec.csharp:
  - uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
    name: Optimise
    nameWithType: BaseQueryOptimiser.Optimise
    fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.GraphPattern
    name: GraphPattern
    nameWithType: GraphPattern
    fullName: VDS.RDF.Query.Patterns.GraphPattern
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise(VDS.RDF.Query.Patterns.GraphPattern,System.Collections.Generic.IEnumerable{System.String})
    name: Optimise
    nameWithType: BaseQueryOptimiser.Optimise
    fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.Optimise
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.GraphPattern
    name: GraphPattern
    nameWithType: GraphPattern
    fullName: VDS.RDF.Query.Patterns.GraphPattern
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldReorder
  commentId: P:VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldReorder
  parent: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  name: ShouldReorder
  nameWithType: BaseQueryOptimiser.ShouldReorder
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldReorder
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldSplitFilters
  commentId: P:VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldSplitFilters
  parent: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  name: ShouldSplitFilters
  nameWithType: BaseQueryOptimiser.ShouldSplitFilters
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldSplitFilters
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceFilters
  commentId: P:VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceFilters
  parent: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  name: ShouldPlaceFilters
  nameWithType: BaseQueryOptimiser.ShouldPlaceFilters
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceFilters
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceAssignments
  commentId: P:VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceAssignments
  parent: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  name: ShouldPlaceAssignments
  nameWithType: BaseQueryOptimiser.ShouldPlaceAssignments
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.ShouldPlaceAssignments
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Optimisation.DefaultOptimiser.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<DefaultOptimiser>()
  nameWithType: Extensions.AsEnumerable<DefaultOptimiser>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Optimisation.DefaultOptimiser>()
  nameWithType.vb: Extensions.AsEnumerable(Of DefaultOptimiser)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Optimisation.DefaultOptimiser)()
  name.vb: AsEnumerable(Of DefaultOptimiser)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<DefaultOptimiser>
    nameWithType: Extensions.AsEnumerable<DefaultOptimiser>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Optimisation.DefaultOptimiser>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of DefaultOptimiser)
    nameWithType: Extensions.AsEnumerable(Of DefaultOptimiser)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Optimisation.DefaultOptimiser)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
  commentId: M:VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
  parent: VDS.RDF.Query.Optimisation.BaseQueryOptimiser
  name: GetRankingComparer()
  nameWithType: BaseQueryOptimiser.GetRankingComparer()
  fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer()
  spec.csharp:
  - uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
    name: GetRankingComparer
    nameWithType: BaseQueryOptimiser.GetRankingComparer
    fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
    name: GetRankingComparer
    nameWithType: BaseQueryOptimiser.GetRankingComparer
    fullName: VDS.RDF.Query.Optimisation.BaseQueryOptimiser.GetRankingComparer
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Optimisation.DefaultOptimiser.GetRankingComparer*
  commentId: Overload:VDS.RDF.Query.Optimisation.DefaultOptimiser.GetRankingComparer
  name: GetRankingComparer
  nameWithType: DefaultOptimiser.GetRankingComparer
  fullName: VDS.RDF.Query.Optimisation.DefaultOptimiser.GetRankingComparer
- uid: System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}
  commentId: T:System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<ITriplePattern>
  nameWithType: IComparer<ITriplePattern>
  fullName: System.Collections.Generic.IComparer<VDS.RDF.Query.Patterns.ITriplePattern>
  nameWithType.vb: IComparer(Of ITriplePattern)
  fullName.vb: System.Collections.Generic.IComparer(Of VDS.RDF.Query.Patterns.ITriplePattern)
  name.vb: IComparer(Of ITriplePattern)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
shouldSkipMarkup: true
