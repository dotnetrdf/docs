### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory
  commentId: T:VDS.RDF.Query.Expressions.XPathFunctionFactory
  id: XPathFunctionFactory
  parent: VDS.RDF.Query.Expressions
  children:
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Absolute
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.AcceptIntegerArguments
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.AcceptNumericArguments
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.AcceptStringArguments
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.AdjustDateTimeToTimezone
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionAggregates
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionFunctions
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Boolean
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Ceiling
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Compare
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Concat
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Contains
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.DayFromDateTime
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.EncodeForURI
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.EndsWith
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.EscapeHtmlURI
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.False
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Floor
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.HoursFromDateTime
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.LowerCase
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Matches
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.MinutesFromDateTime
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.MonthFromDateTime
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.NormalizeSpace
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.NormalizeUnicode
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Not
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Replace
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Round
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.RoundHalfToEven
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.SecondsFromDateTime
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.StartsWith
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.StringJoin
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.StringLength
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Substring
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.SubstringAfter
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.SubstringBefore
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.TimezoneFromDateTime
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.Translate
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.True
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.UpperCase
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathFunctionsNamespace
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormC
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormD
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormFull
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormKC
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormKD
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.YearFromDateTime
  langs:
  - csharp
  - vb
  name: XPathFunctionFactory
  nameWithType: XPathFunctionFactory
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XPathFunctionFactory
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 44
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nExpression Factory which generates XPath Function expressions.\n"
  example: []
  syntax:
    content: 'public class XPathFunctionFactory : ISparqlCustomExpressionFactory'
    content.vb: >-
      Public Class XPathFunctionFactory
          Implements ISparqlCustomExpressionFactory
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Expressions.XPathFunctionFactory.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathFunctionsNamespace
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathFunctionsNamespace
  id: XPathFunctionsNamespace
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: XPathFunctionsNamespace
  nameWithType: XPathFunctionFactory.XPathFunctionsNamespace
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathFunctionsNamespace
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XPathFunctionsNamespace
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nNamespace Uri for XPath Functions Namespace.\n"
  example: []
  syntax:
    content: public const string XPathFunctionsNamespace = "http://www.w3.org/2005/xpath-functions#"
    return:
      type: System.String
    content.vb: Public Const XPathFunctionsNamespace As String = "http://www.w3.org/2005/xpath-functions#"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Not
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Not
  id: Not
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Not
  nameWithType: XPathFunctionFactory.Not
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Not
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Not
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstant representing the XPath boolean functions.\n"
  example: []
  syntax:
    content: public const string Not = "not"
    return:
      type: System.String
    content.vb: Public Const Not As String = "not"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Boolean
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Boolean
  id: Boolean
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Boolean
  nameWithType: XPathFunctionFactory.Boolean
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Boolean
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Boolean
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstant representing the XPath boolean functions.\n"
  example: []
  syntax:
    content: public const string Boolean = "boolean"
    return:
      type: System.String
    content.vb: Public Const Boolean As String = "boolean"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Matches
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Matches
  id: Matches
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Matches
  nameWithType: XPathFunctionFactory.Matches
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Matches
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Matches
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string Matches = "matches"
    return:
      type: System.String
    content.vb: Public Const Matches As String = "matches"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Contains
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Contains
  id: Contains
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Contains
  nameWithType: XPathFunctionFactory.Contains
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Contains
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Contains
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string Contains = "contains"
    return:
      type: System.String
    content.vb: Public Const Contains As String = "contains"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.StartsWith
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.StartsWith
  id: StartsWith
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: StartsWith
  nameWithType: XPathFunctionFactory.StartsWith
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.StartsWith
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: StartsWith
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string StartsWith = "starts-with"
    return:
      type: System.String
    content.vb: Public Const StartsWith As String = "starts-with"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.EndsWith
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.EndsWith
  id: EndsWith
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: EndsWith
  nameWithType: XPathFunctionFactory.EndsWith
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.EndsWith
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EndsWith
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 64
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string EndsWith = "ends-with"
    return:
      type: System.String
    content.vb: Public Const EndsWith As String = "ends-with"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.StringLength
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.StringLength
  id: StringLength
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: StringLength
  nameWithType: XPathFunctionFactory.StringLength
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.StringLength
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: StringLength
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 65
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string StringLength = "string-length"
    return:
      type: System.String
    content.vb: Public Const StringLength As String = "string-length"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Concat
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Concat
  id: Concat
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Concat
  nameWithType: XPathFunctionFactory.Concat
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Concat
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Concat
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string Concat = "concat"
    return:
      type: System.String
    content.vb: Public Const Concat As String = "concat"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Substring
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Substring
  id: Substring
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Substring
  nameWithType: XPathFunctionFactory.Substring
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Substring
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Substring
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 67
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string Substring = "substring"
    return:
      type: System.String
    content.vb: Public Const Substring As String = "substring"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.NormalizeSpace
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.NormalizeSpace
  id: NormalizeSpace
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: NormalizeSpace
  nameWithType: XPathFunctionFactory.NormalizeSpace
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.NormalizeSpace
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NormalizeSpace
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 68
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string NormalizeSpace = "normalize-space"
    return:
      type: System.String
    content.vb: Public Const NormalizeSpace As String = "normalize-space"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.NormalizeUnicode
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.NormalizeUnicode
  id: NormalizeUnicode
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: NormalizeUnicode
  nameWithType: XPathFunctionFactory.NormalizeUnicode
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.NormalizeUnicode
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NormalizeUnicode
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string NormalizeUnicode = "normalize-unicode"
    return:
      type: System.String
    content.vb: Public Const NormalizeUnicode As String = "normalize-unicode"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.UpperCase
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.UpperCase
  id: UpperCase
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: UpperCase
  nameWithType: XPathFunctionFactory.UpperCase
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.UpperCase
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UpperCase
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string UpperCase = "upper-case"
    return:
      type: System.String
    content.vb: Public Const UpperCase As String = "upper-case"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.LowerCase
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.LowerCase
  id: LowerCase
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: LowerCase
  nameWithType: XPathFunctionFactory.LowerCase
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.LowerCase
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LowerCase
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 71
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string LowerCase = "lower-case"
    return:
      type: System.String
    content.vb: Public Const LowerCase As String = "lower-case"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.EncodeForURI
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.EncodeForURI
  id: EncodeForURI
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: EncodeForURI
  nameWithType: XPathFunctionFactory.EncodeForURI
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.EncodeForURI
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EncodeForURI
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 72
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string EncodeForURI = "encode-for-uri"
    return:
      type: System.String
    content.vb: Public Const EncodeForURI As String = "encode-for-uri"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.SubstringBefore
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.SubstringBefore
  id: SubstringBefore
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: SubstringBefore
  nameWithType: XPathFunctionFactory.SubstringBefore
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.SubstringBefore
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SubstringBefore
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 73
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string SubstringBefore = "substring-before"
    return:
      type: System.String
    content.vb: Public Const SubstringBefore As String = "substring-before"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.SubstringAfter
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.SubstringAfter
  id: SubstringAfter
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: SubstringAfter
  nameWithType: XPathFunctionFactory.SubstringAfter
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.SubstringAfter
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SubstringAfter
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 74
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string SubstringAfter = "substring-after"
    return:
      type: System.String
    content.vb: Public Const SubstringAfter As String = "substring-after"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Replace
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Replace
  id: Replace
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Replace
  nameWithType: XPathFunctionFactory.Replace
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Replace
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Replace
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 75
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string Replace = "replace"
    return:
      type: System.String
    content.vb: Public Const Replace As String = "replace"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Translate
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Translate
  id: Translate
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Translate
  nameWithType: XPathFunctionFactory.Translate
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Translate
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Translate
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 76
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string Translate = "translate"
    return:
      type: System.String
    content.vb: Public Const Translate As String = "translate"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Compare
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Compare
  id: Compare
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Compare
  nameWithType: XPathFunctionFactory.Compare
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Compare
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Compare
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 77
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string Compare = "compare"
    return:
      type: System.String
    content.vb: Public Const Compare As String = "compare"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.StringJoin
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.StringJoin
  id: StringJoin
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: StringJoin
  nameWithType: XPathFunctionFactory.StringJoin
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.StringJoin
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: StringJoin
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string StringJoin = "string-join"
    return:
      type: System.String
    content.vb: Public Const StringJoin As String = "string-join"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.EscapeHtmlURI
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.EscapeHtmlURI
  id: EscapeHtmlURI
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: EscapeHtmlURI
  nameWithType: XPathFunctionFactory.EscapeHtmlURI
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.EscapeHtmlURI
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EscapeHtmlURI
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 79
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the names of XPath String functions.\n"
  example: []
  syntax:
    content: public const string EscapeHtmlURI = "escape-html-uri"
    return:
      type: System.String
    content.vb: Public Const EscapeHtmlURI As String = "escape-html-uri"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.True
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.True
  id: "True"
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: "True"
  nameWithType: XPathFunctionFactory.True
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.True
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: "True"
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 84
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Boolean constructor functions.\n"
  example: []
  syntax:
    content: public const string True = "true"
    return:
      type: System.String
    content.vb: Public Const True As String = "true"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.False
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.False
  id: "False"
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: "False"
  nameWithType: XPathFunctionFactory.False
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.False
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: "False"
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 85
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Boolean constructor functions.\n"
  example: []
  syntax:
    content: public const string False = "false"
    return:
      type: System.String
    content.vb: Public Const False As String = "false"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Absolute
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Absolute
  id: Absolute
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Absolute
  nameWithType: XPathFunctionFactory.Absolute
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Absolute
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Absolute
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 90
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Numeric Functions.\n"
  example: []
  syntax:
    content: public const string Absolute = "abs"
    return:
      type: System.String
    content.vb: Public Const Absolute As String = "abs"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Ceiling
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Ceiling
  id: Ceiling
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Ceiling
  nameWithType: XPathFunctionFactory.Ceiling
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Ceiling
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Ceiling
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 91
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Numeric Functions.\n"
  example: []
  syntax:
    content: public const string Ceiling = "ceiling"
    return:
      type: System.String
    content.vb: Public Const Ceiling As String = "ceiling"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Floor
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Floor
  id: Floor
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Floor
  nameWithType: XPathFunctionFactory.Floor
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Floor
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Floor
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 92
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Numeric Functions.\n"
  example: []
  syntax:
    content: public const string Floor = "floor"
    return:
      type: System.String
    content.vb: Public Const Floor As String = "floor"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.Round
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.Round
  id: Round
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: Round
  nameWithType: XPathFunctionFactory.Round
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.Round
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Round
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 93
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Numeric Functions.\n"
  example: []
  syntax:
    content: public const string Round = "round"
    return:
      type: System.String
    content.vb: Public Const Round As String = "round"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.RoundHalfToEven
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.RoundHalfToEven
  id: RoundHalfToEven
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: RoundHalfToEven
  nameWithType: XPathFunctionFactory.RoundHalfToEven
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.RoundHalfToEven
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RoundHalfToEven
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 94
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Numeric Functions.\n"
  example: []
  syntax:
    content: public const string RoundHalfToEven = "round-half-to-even"
    return:
      type: System.String
    content.vb: Public Const RoundHalfToEven As String = "round-half-to-even"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.YearFromDateTime
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.YearFromDateTime
  id: YearFromDateTime
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: YearFromDateTime
  nameWithType: XPathFunctionFactory.YearFromDateTime
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.YearFromDateTime
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: YearFromDateTime
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 99
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Date Time functions.\n"
  example: []
  syntax:
    content: public const string YearFromDateTime = "year-from-dateTime"
    return:
      type: System.String
    content.vb: Public Const YearFromDateTime As String = "year-from-dateTime"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.MonthFromDateTime
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.MonthFromDateTime
  id: MonthFromDateTime
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: MonthFromDateTime
  nameWithType: XPathFunctionFactory.MonthFromDateTime
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.MonthFromDateTime
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MonthFromDateTime
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Date Time functions.\n"
  example: []
  syntax:
    content: public const string MonthFromDateTime = "month-from-dateTime"
    return:
      type: System.String
    content.vb: Public Const MonthFromDateTime As String = "month-from-dateTime"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.DayFromDateTime
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.DayFromDateTime
  id: DayFromDateTime
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: DayFromDateTime
  nameWithType: XPathFunctionFactory.DayFromDateTime
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.DayFromDateTime
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DayFromDateTime
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 101
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Date Time functions.\n"
  example: []
  syntax:
    content: public const string DayFromDateTime = "day-from-dateTime"
    return:
      type: System.String
    content.vb: Public Const DayFromDateTime As String = "day-from-dateTime"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.HoursFromDateTime
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.HoursFromDateTime
  id: HoursFromDateTime
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: HoursFromDateTime
  nameWithType: XPathFunctionFactory.HoursFromDateTime
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.HoursFromDateTime
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HoursFromDateTime
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 102
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Date Time functions.\n"
  example: []
  syntax:
    content: public const string HoursFromDateTime = "hours-from-dateTime"
    return:
      type: System.String
    content.vb: Public Const HoursFromDateTime As String = "hours-from-dateTime"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.MinutesFromDateTime
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.MinutesFromDateTime
  id: MinutesFromDateTime
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: MinutesFromDateTime
  nameWithType: XPathFunctionFactory.MinutesFromDateTime
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.MinutesFromDateTime
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MinutesFromDateTime
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 103
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Date Time functions.\n"
  example: []
  syntax:
    content: public const string MinutesFromDateTime = "minutes-from-dateTime"
    return:
      type: System.String
    content.vb: Public Const MinutesFromDateTime As String = "minutes-from-dateTime"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.SecondsFromDateTime
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.SecondsFromDateTime
  id: SecondsFromDateTime
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: SecondsFromDateTime
  nameWithType: XPathFunctionFactory.SecondsFromDateTime
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.SecondsFromDateTime
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SecondsFromDateTime
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 104
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Date Time functions.\n"
  example: []
  syntax:
    content: public const string SecondsFromDateTime = "seconds-from-dateTime"
    return:
      type: System.String
    content.vb: Public Const SecondsFromDateTime As String = "seconds-from-dateTime"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.TimezoneFromDateTime
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.TimezoneFromDateTime
  id: TimezoneFromDateTime
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: TimezoneFromDateTime
  nameWithType: XPathFunctionFactory.TimezoneFromDateTime
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.TimezoneFromDateTime
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TimezoneFromDateTime
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 105
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Date Time functions.\n"
  example: []
  syntax:
    content: public const string TimezoneFromDateTime = "timezone-from-dateTime"
    return:
      type: System.String
    content.vb: Public Const TimezoneFromDateTime As String = "timezone-from-dateTime"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.AdjustDateTimeToTimezone
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.AdjustDateTimeToTimezone
  id: AdjustDateTimeToTimezone
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: AdjustDateTimeToTimezone
  nameWithType: XPathFunctionFactory.AdjustDateTimeToTimezone
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.AdjustDateTimeToTimezone
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AdjustDateTimeToTimezone
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 106
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the XPath Date Time functions.\n"
  example: []
  syntax:
    content: public const string AdjustDateTimeToTimezone = "adjust-dateTime-to-timezone"
    return:
      type: System.String
    content.vb: Public Const AdjustDateTimeToTimezone As String = "adjust-dateTime-to-timezone"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormC
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormC
  id: XPathUnicodeNormalizationFormC
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: XPathUnicodeNormalizationFormC
  nameWithType: XPathFunctionFactory.XPathUnicodeNormalizationFormC
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormC
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XPathUnicodeNormalizationFormC
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 111
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the Normalization Form values supported by the XPath normalize-unicode() function.\n"
  example: []
  syntax:
    content: public const string XPathUnicodeNormalizationFormC = "NFC"
    return:
      type: System.String
    content.vb: Public Const XPathUnicodeNormalizationFormC As String = "NFC"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormD
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormD
  id: XPathUnicodeNormalizationFormD
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: XPathUnicodeNormalizationFormD
  nameWithType: XPathFunctionFactory.XPathUnicodeNormalizationFormD
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormD
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XPathUnicodeNormalizationFormD
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the Normalization Form values supported by the XPath normalize-unicode() function.\n"
  example: []
  syntax:
    content: public const string XPathUnicodeNormalizationFormD = "NFD"
    return:
      type: System.String
    content.vb: Public Const XPathUnicodeNormalizationFormD As String = "NFD"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormKC
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormKC
  id: XPathUnicodeNormalizationFormKC
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: XPathUnicodeNormalizationFormKC
  nameWithType: XPathFunctionFactory.XPathUnicodeNormalizationFormKC
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormKC
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XPathUnicodeNormalizationFormKC
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 113
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the Normalization Form values supported by the XPath normalize-unicode() function.\n"
  example: []
  syntax:
    content: public const string XPathUnicodeNormalizationFormKC = "NFKC"
    return:
      type: System.String
    content.vb: Public Const XPathUnicodeNormalizationFormKC As String = "NFKC"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormKD
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormKD
  id: XPathUnicodeNormalizationFormKD
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: XPathUnicodeNormalizationFormKD
  nameWithType: XPathFunctionFactory.XPathUnicodeNormalizationFormKD
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormKD
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XPathUnicodeNormalizationFormKD
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 114
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the Normalization Form values supported by the XPath normalize-unicode() function.\n"
  example: []
  syntax:
    content: public const string XPathUnicodeNormalizationFormKD = "NFKD"
    return:
      type: System.String
    content.vb: Public Const XPathUnicodeNormalizationFormKD As String = "NFKD"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormFull
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormFull
  id: XPathUnicodeNormalizationFormFull
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: XPathUnicodeNormalizationFormFull
  nameWithType: XPathFunctionFactory.XPathUnicodeNormalizationFormFull
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.XPathUnicodeNormalizationFormFull
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XPathUnicodeNormalizationFormFull
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 115
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nConstants representing the Normalization Form values supported by the XPath normalize-unicode() function.\n"
  example: []
  syntax:
    content: public const string XPathUnicodeNormalizationFormFull = "FULLY-NORMALIZED"
    return:
      type: System.String
    content.vb: Public Const XPathUnicodeNormalizationFormFull As String = "FULLY-NORMALIZED"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.AcceptStringArguments
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.AcceptStringArguments
  id: AcceptStringArguments
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: AcceptStringArguments
  nameWithType: XPathFunctionFactory.AcceptStringArguments
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.AcceptStringArguments
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AcceptStringArguments
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 157
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nArgument Type Validator for validating that a Literal either has no datatype or is a String.\n"
  example: []
  syntax:
    content: public static Func<Uri, bool> AcceptStringArguments
    return:
      type: System.Func{System.Uri,System.Boolean}
    content.vb: Public Shared AcceptStringArguments As Func(Of Uri, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.AcceptIntegerArguments
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.AcceptIntegerArguments
  id: AcceptIntegerArguments
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: AcceptIntegerArguments
  nameWithType: XPathFunctionFactory.AcceptIntegerArguments
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.AcceptIntegerArguments
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AcceptIntegerArguments
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 161
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nArgument Type Validator for validating that a Literal has an Integer datatype.\n"
  example: []
  syntax:
    content: public static Func<Uri, bool> AcceptIntegerArguments
    return:
      type: System.Func{System.Uri,System.Boolean}
    content.vb: Public Shared AcceptIntegerArguments As Func(Of Uri, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.AcceptNumericArguments
  commentId: F:VDS.RDF.Query.Expressions.XPathFunctionFactory.AcceptNumericArguments
  id: AcceptNumericArguments
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: AcceptNumericArguments
  nameWithType: XPathFunctionFactory.AcceptNumericArguments
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.AcceptNumericArguments
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AcceptNumericArguments
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 165
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nArgument Type Validator for validating that a Literal has a Numeric datatype.\n"
  example: []
  syntax:
    content: public static Func<Uri, bool> AcceptNumericArguments
    return:
      type: System.Func{System.Uri,System.Boolean}
    content.vb: Public Shared AcceptNumericArguments As Func(Of Uri, Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  commentId: M:VDS.RDF.Query.Expressions.XPathFunctionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  id: TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: TryCreateExpression(Uri, List<ISparqlExpression>, Dictionary<String, ISparqlExpression>, out ISparqlExpression)
  nameWithType: XPathFunctionFactory.TryCreateExpression(Uri, List<ISparqlExpression>, Dictionary<String, ISparqlExpression>, out ISparqlExpression)
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.TryCreateExpression(System.Uri, System.Collections.Generic.List<VDS.RDF.Query.Expressions.ISparqlExpression>, System.Collections.Generic.Dictionary<System.String, VDS.RDF.Query.Expressions.ISparqlExpression>, out VDS.RDF.Query.Expressions.ISparqlExpression)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryCreateExpression
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 175
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nTries to create an XPath Function expression if the function Uri correseponds to a supported XPath Function.\n"
  example: []
  syntax:
    content: public bool TryCreateExpression(Uri u, List<ISparqlExpression> args, Dictionary<string, ISparqlExpression> scalarArgs, out ISparqlExpression expr)
    parameters:
    - id: u
      type: System.Uri
      description: Function Uri.
    - id: args
      type: System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression}
      description: Function Arguments.
    - id: scalarArgs
      type: System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression}
      description: Scalar Arguments.
    - id: expr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: Generated Expression.
    return:
      type: System.Boolean
      description: Whether an expression was successfully generated.
    content.vb: Public Function TryCreateExpression(u As Uri, args As List(Of ISparqlExpression), scalarArgs As Dictionary(Of String, ISparqlExpression), ByRef expr As ISparqlExpression) As Boolean
  overload: VDS.RDF.Query.Expressions.XPathFunctionFactory.TryCreateExpression*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  nameWithType.vb: XPathFunctionFactory.TryCreateExpression(Uri, List(Of ISparqlExpression), Dictionary(Of String, ISparqlExpression), ByRef ISparqlExpression)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Expressions.XPathFunctionFactory.TryCreateExpression(System.Uri, System.Collections.Generic.List(Of VDS.RDF.Query.Expressions.ISparqlExpression), System.Collections.Generic.Dictionary(Of System.String, VDS.RDF.Query.Expressions.ISparqlExpression), ByRef VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: TryCreateExpression(Uri, List(Of ISparqlExpression), Dictionary(Of String, ISparqlExpression), ByRef ISparqlExpression)
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionFunctions
  commentId: P:VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionFunctions
  id: AvailableExtensionFunctions
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: AvailableExtensionFunctions
  nameWithType: XPathFunctionFactory.AvailableExtensionFunctions
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionFunctions
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AvailableExtensionFunctions
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 579
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nGets the Extension Function URIs supported by this Factory.\n"
  example: []
  syntax:
    content: public IEnumerable<Uri> AvailableExtensionFunctions { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public ReadOnly Property AvailableExtensionFunctions As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionFunctions*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionFunctions
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionAggregates
  commentId: P:VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionAggregates
  id: AvailableExtensionAggregates
  parent: VDS.RDF.Query.Expressions.XPathFunctionFactory
  langs:
  - csharp
  - vb
  name: AvailableExtensionAggregates
  nameWithType: XPathFunctionFactory.AvailableExtensionAggregates
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionAggregates
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AvailableExtensionAggregates
    path: Libraries/dotNetRDF/Query/Expressions/XPathFunctionFactory.cs
    startLine: 591
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions
  summary: "\nGets the Extension Aggregate URIs supported by this Factory.\n"
  example: []
  syntax:
    content: public IEnumerable<Uri> AvailableExtensionAggregates { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public ReadOnly Property AvailableExtensionAggregates As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionAggregates*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionAggregates
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  commentId: T:VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  parent: VDS.RDF.Query.Expressions
  name: ISparqlCustomExpressionFactory
  nameWithType: ISparqlCustomExpressionFactory
  fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<XPathFunctionFactory>()
  nameWithType: Extensions.AsEnumerable<XPathFunctionFactory>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.XPathFunctionFactory>()
  nameWithType.vb: Extensions.AsEnumerable(Of XPathFunctionFactory)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.XPathFunctionFactory)()
  name.vb: AsEnumerable(Of XPathFunctionFactory)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<XPathFunctionFactory>
    nameWithType: Extensions.AsEnumerable<XPathFunctionFactory>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.XPathFunctionFactory>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of XPathFunctionFactory)
    nameWithType: Extensions.AsEnumerable(Of XPathFunctionFactory)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.XPathFunctionFactory)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Func{System.Uri,System.Boolean}
  commentId: T:System.Func{System.Uri,System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<Uri, Boolean>
  nameWithType: Func<Uri, Boolean>
  fullName: System.Func<System.Uri, System.Boolean>
  nameWithType.vb: Func(Of Uri, Boolean)
  fullName.vb: System.Func(Of System.Uri, System.Boolean)
  name.vb: Func(Of Uri, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.TryCreateExpression*
  commentId: Overload:VDS.RDF.Query.Expressions.XPathFunctionFactory.TryCreateExpression
  name: TryCreateExpression
  nameWithType: XPathFunctionFactory.TryCreateExpression
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.TryCreateExpression
- uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  commentId: M:VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
  parent: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  isExternal: true
  name: TryCreateExpression(Uri, List<ISparqlExpression>, Dictionary<String, ISparqlExpression>, ISparqlExpression)
  nameWithType: ISparqlCustomExpressionFactory.TryCreateExpression(Uri, List<ISparqlExpression>, Dictionary<String, ISparqlExpression>, ISparqlExpression)
  fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri, System.Collections.Generic.List<VDS.RDF.Query.Expressions.ISparqlExpression>, System.Collections.Generic.Dictionary<System.String, VDS.RDF.Query.Expressions.ISparqlExpression>, VDS.RDF.Query.Expressions.ISparqlExpression)
  nameWithType.vb: ISparqlCustomExpressionFactory.TryCreateExpression(Uri, List(Of ISparqlExpression), Dictionary(Of String, ISparqlExpression), ISparqlExpression)
  fullName.vb: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri, System.Collections.Generic.List(Of VDS.RDF.Query.Expressions.ISparqlExpression), System.Collections.Generic.Dictionary(Of System.String, VDS.RDF.Query.Expressions.ISparqlExpression), VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: TryCreateExpression(Uri, List(Of ISparqlExpression), Dictionary(Of String, ISparqlExpression), ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
    name: TryCreateExpression
    nameWithType: ISparqlCustomExpressionFactory.TryCreateExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression(System.Uri,System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression},System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression},VDS.RDF.Query.Expressions.ISparqlExpression@)
    name: TryCreateExpression
    nameWithType: ISparqlCustomExpressionFactory.TryCreateExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.TryCreateExpression
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression}
  commentId: T:System.Collections.Generic.List{VDS.RDF.Query.Expressions.ISparqlExpression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ISparqlExpression>
  nameWithType: List<ISparqlExpression>
  fullName: System.Collections.Generic.List<VDS.RDF.Query.Expressions.ISparqlExpression>
  nameWithType.vb: List(Of ISparqlExpression)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: List(Of ISparqlExpression)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression}
  commentId: T:System.Collections.Generic.Dictionary{System.String,VDS.RDF.Query.Expressions.ISparqlExpression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, ISparqlExpression>
  nameWithType: Dictionary<String, ISparqlExpression>
  fullName: System.Collections.Generic.Dictionary<System.String, VDS.RDF.Query.Expressions.ISparqlExpression>
  nameWithType.vb: Dictionary(Of String, ISparqlExpression)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: Dictionary(Of String, ISparqlExpression)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionFunctions*
  commentId: Overload:VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionFunctions
  name: AvailableExtensionFunctions
  nameWithType: XPathFunctionFactory.AvailableExtensionFunctions
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionFunctions
- uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionFunctions
  commentId: P:VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionFunctions
  parent: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  name: AvailableExtensionFunctions
  nameWithType: ISparqlCustomExpressionFactory.AvailableExtensionFunctions
  fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionFunctions
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  commentId: T:System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  nameWithType.vb: IEnumerable(Of Uri)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Uri)
  name.vb: IEnumerable(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionAggregates*
  commentId: Overload:VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionAggregates
  name: AvailableExtensionAggregates
  nameWithType: XPathFunctionFactory.AvailableExtensionAggregates
  fullName: VDS.RDF.Query.Expressions.XPathFunctionFactory.AvailableExtensionAggregates
- uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionAggregates
  commentId: P:VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionAggregates
  parent: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  name: AvailableExtensionAggregates
  nameWithType: ISparqlCustomExpressionFactory.AvailableExtensionAggregates
  fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory.AvailableExtensionAggregates
shouldSkipMarkup: true
