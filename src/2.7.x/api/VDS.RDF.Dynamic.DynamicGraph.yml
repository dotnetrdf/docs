### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Dynamic.DynamicGraph
  commentId: T:VDS.RDF.Dynamic.DynamicGraph
  id: DynamicGraph
  parent: VDS.RDF.Dynamic
  children:
  - VDS.RDF.Dynamic.DynamicGraph.#ctor(VDS.RDF.IGraph,System.Uri,System.Uri)
  - VDS.RDF.Dynamic.DynamicGraph.Add(System.String,System.Object)
  - VDS.RDF.Dynamic.DynamicGraph.Add(System.Uri,System.Object)
  - VDS.RDF.Dynamic.DynamicGraph.Add(VDS.RDF.INode,System.Object)
  - VDS.RDF.Dynamic.DynamicGraph.Contains(System.String,System.Object)
  - VDS.RDF.Dynamic.DynamicGraph.Contains(System.Uri,System.Object)
  - VDS.RDF.Dynamic.DynamicGraph.Contains(VDS.RDF.INode,System.Object)
  - VDS.RDF.Dynamic.DynamicGraph.ContainsKey(System.String)
  - VDS.RDF.Dynamic.DynamicGraph.ContainsKey(System.Uri)
  - VDS.RDF.Dynamic.DynamicGraph.ContainsKey(VDS.RDF.INode)
  - VDS.RDF.Dynamic.DynamicGraph.Count
  - VDS.RDF.Dynamic.DynamicGraph.IsReadOnly
  - VDS.RDF.Dynamic.DynamicGraph.Item(System.String)
  - VDS.RDF.Dynamic.DynamicGraph.Item(System.Uri)
  - VDS.RDF.Dynamic.DynamicGraph.Item(VDS.RDF.INode)
  - VDS.RDF.Dynamic.DynamicGraph.Keys
  - VDS.RDF.Dynamic.DynamicGraph.PredicateBaseUri
  - VDS.RDF.Dynamic.DynamicGraph.Remove(System.String)
  - VDS.RDF.Dynamic.DynamicGraph.Remove(System.String,System.Object)
  - VDS.RDF.Dynamic.DynamicGraph.Remove(System.Uri)
  - VDS.RDF.Dynamic.DynamicGraph.Remove(System.Uri,System.Object)
  - VDS.RDF.Dynamic.DynamicGraph.Remove(VDS.RDF.INode)
  - VDS.RDF.Dynamic.DynamicGraph.Remove(VDS.RDF.INode,System.Object)
  - VDS.RDF.Dynamic.DynamicGraph.SubjectBaseUri
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,System.Object}[],System.Int32)
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Add(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}[],System.Int32)
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IDictionary{System#Uri,System#Object}#Keys
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IDictionary{VDS#RDF#INode,System#Object}#Keys
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#GetEnumerator
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#GetEnumerator
  - VDS.RDF.Dynamic.DynamicGraph.System#Collections#IEnumerable#GetEnumerator
  - VDS.RDF.Dynamic.DynamicGraph.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  - VDS.RDF.Dynamic.DynamicGraph.TryGetValue(System.String,System.Object@)
  - VDS.RDF.Dynamic.DynamicGraph.TryGetValue(System.Uri,System.Object@)
  - VDS.RDF.Dynamic.DynamicGraph.TryGetValue(VDS.RDF.INode,System.Object@)
  - VDS.RDF.Dynamic.DynamicGraph.Values
  langs:
  - csharp
  - vb
  name: DynamicGraph
  nameWithType: DynamicGraph
  fullName: VDS.RDF.Dynamic.DynamicGraph
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DynamicGraph
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 32
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nA <xref href=\"VDS.RDF.WrapperGraph\" data-throw-if-not-resolved=\"false\"></xref> that provides read/write dictionary and dynamic functionality.\n"
  example: []
  syntax:
    content: 'public class DynamicGraph : WrapperGraph, IGraph, INodeFactory, IDisposable, IXmlSerializable, ISerializable, IDynamicMetaObjectProvider, IDictionary<INode, object>, ICollection<KeyValuePair<INode, object>>, IEnumerable<KeyValuePair<INode, object>>, IDictionary<string, object>, ICollection<KeyValuePair<string, object>>, IEnumerable<KeyValuePair<string, object>>, IDictionary<Uri, object>, ICollection<KeyValuePair<Uri, object>>, IEnumerable<KeyValuePair<Uri, object>>, IEnumerable'
    content.vb: >-
      Public Class DynamicGraph
          Inherits WrapperGraph
          Implements IGraph, INodeFactory, IDisposable, IXmlSerializable, ISerializable, IDynamicMetaObjectProvider, IDictionary(Of INode, Object), ICollection(Of KeyValuePair(Of INode, Object)), IEnumerable(Of KeyValuePair(Of INode, Object)), IDictionary(Of String, Object), ICollection(Of KeyValuePair(Of String, Object)), IEnumerable(Of KeyValuePair(Of String, Object)), IDictionary(Of Uri, Object), ICollection(Of KeyValuePair(Of Uri, Object)), IEnumerable(Of KeyValuePair(Of Uri, Object)), IEnumerable
  inheritance:
  - System.Object
  - VDS.RDF.WrapperGraph
  implements:
  - VDS.RDF.IGraph
  - VDS.RDF.INodeFactory
  - System.IDisposable
  - System.Xml.Serialization.IXmlSerializable
  - System.Runtime.Serialization.ISerializable
  - System.Dynamic.IDynamicMetaObjectProvider
  - System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  - System.Collections.Generic.IDictionary{System.String,System.Object}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  - System.Collections.Generic.IDictionary{System.Uri,System.Object}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - VDS.RDF.WrapperGraph._g
  - VDS.RDF.WrapperGraph.BaseUri
  - VDS.RDF.WrapperGraph.IsEmpty
  - VDS.RDF.WrapperGraph.NamespaceMap
  - VDS.RDF.WrapperGraph.Nodes
  - VDS.RDF.WrapperGraph.AllNodes
  - VDS.RDF.WrapperGraph.Triples
  - VDS.RDF.WrapperGraph.Assert(VDS.RDF.Triple)
  - VDS.RDF.WrapperGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.WrapperGraph.Retract(VDS.RDF.Triple)
  - VDS.RDF.WrapperGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.WrapperGraph.Clear
  - VDS.RDF.WrapperGraph.CreateBlankNode(System.String)
  - VDS.RDF.WrapperGraph.CreateBlankNode
  - VDS.RDF.WrapperGraph.GetNextBlankNodeID
  - VDS.RDF.WrapperGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  - VDS.RDF.WrapperGraph.CreateGraphLiteralNode
  - VDS.RDF.WrapperGraph.CreateLiteralNode(System.String)
  - VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.Uri)
  - VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.String)
  - VDS.RDF.WrapperGraph.CreateUriNode
  - VDS.RDF.WrapperGraph.CreateUriNode(System.String)
  - VDS.RDF.WrapperGraph.CreateUriNode(System.Uri)
  - VDS.RDF.WrapperGraph.CreateVariableNode(System.String)
  - VDS.RDF.WrapperGraph.GetBlankNode(System.String)
  - VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.String)
  - VDS.RDF.WrapperGraph.GetLiteralNode(System.String)
  - VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.Uri)
  - VDS.RDF.WrapperGraph.GetTriples(System.Uri)
  - VDS.RDF.WrapperGraph.GetTriples(VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetTriplesWithObject(System.Uri)
  - VDS.RDF.WrapperGraph.GetTriplesWithObject(VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetTriplesWithPredicate(System.Uri)
  - VDS.RDF.WrapperGraph.GetTriplesWithSubject(VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetTriplesWithSubject(System.Uri)
  - VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetUriNode(System.String)
  - VDS.RDF.WrapperGraph.GetUriNode(System.Uri)
  - VDS.RDF.WrapperGraph.ContainsTriple(VDS.RDF.Triple)
  - VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph)
  - VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.WrapperGraph.Equals(System.Object)
  - VDS.RDF.WrapperGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph)
  - VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph)
  - VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.WrapperGraph.Difference(VDS.RDF.IGraph)
  - VDS.RDF.WrapperGraph.ResolveQName(System.String)
  - VDS.RDF.WrapperGraph.TripleAsserted
  - VDS.RDF.WrapperGraph.TripleRetracted
  - VDS.RDF.WrapperGraph.Changed
  - VDS.RDF.WrapperGraph.ClearRequested
  - VDS.RDF.WrapperGraph.Cleared
  - VDS.RDF.WrapperGraph.MergeRequested
  - VDS.RDF.WrapperGraph.Merged
  - VDS.RDF.WrapperGraph.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  - VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  - VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.Triple)
  - VDS.RDF.WrapperGraph.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  - VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  - VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.Triple)
  - VDS.RDF.WrapperGraph.OnChanged(System.Object,VDS.RDF.GraphEventArgs)
  - VDS.RDF.WrapperGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  - VDS.RDF.WrapperGraph.RaiseGraphChanged
  - VDS.RDF.WrapperGraph.OnClearRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  - VDS.RDF.WrapperGraph.RaiseClearRequested(VDS.RDF.CancellableGraphEventArgs)
  - VDS.RDF.WrapperGraph.OnCleared(System.Object,VDS.RDF.GraphEventArgs)
  - VDS.RDF.WrapperGraph.RaiseCleared
  - VDS.RDF.WrapperGraph.OnMergeRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  - VDS.RDF.WrapperGraph.RaiseMergeRequested(VDS.RDF.CancellableGraphEventArgs)
  - VDS.RDF.WrapperGraph.OnMerged(System.Object,VDS.RDF.GraphEventArgs)
  - VDS.RDF.WrapperGraph.RaiseMerged
  - VDS.RDF.WrapperGraph.AttachEventHandlers
  - VDS.RDF.WrapperGraph.Dispose
  - VDS.RDF.WrapperGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.WrapperGraph.GetSchema
  - VDS.RDF.WrapperGraph.ReadXml(System.Xml.XmlReader)
  - VDS.RDF.WrapperGraph.WriteXml(System.Xml.XmlWriter)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.IGraph.VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - VDS.RDF.Dynamic.DynamicGraph.VDS.RDF.Extensions.AsEnumerable``1
  - VDS.RDF.IGraph.VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
  - VDS.RDF.IGraph.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Dynamic.DynamicGraph.#ctor(VDS.RDF.IGraph,System.Uri,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.#ctor(VDS.RDF.IGraph,System.Uri,System.Uri)
  id: '#ctor(VDS.RDF.IGraph,System.Uri,System.Uri)'
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: DynamicGraph(IGraph, Uri, Uri)
  nameWithType: DynamicGraph.DynamicGraph(IGraph, Uri, Uri)
  fullName: VDS.RDF.Dynamic.DynamicGraph.DynamicGraph(VDS.RDF.IGraph, System.Uri, System.Uri)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nInitializes a new instance of the <xref href=\"VDS.RDF.Dynamic.DynamicGraph\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DynamicGraph(IGraph graph = null, Uri subjectBaseUri = null, Uri predicateBaseUri = null)
    parameters:
    - id: graph
      type: VDS.RDF.IGraph
      description: The <xref href="VDS.RDF.IGraph" data-throw-if-not-resolved="false"></xref> to wrap.
    - id: subjectBaseUri
      type: System.Uri
      description: The <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> used for resolving relative subject references.
    - id: predicateBaseUri
      type: System.Uri
      description: The <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> used for resolving relative predicate references.
    content.vb: Public Sub New(graph As IGraph = Nothing, subjectBaseUri As Uri = Nothing, predicateBaseUri As Uri = Nothing)
  overload: VDS.RDF.Dynamic.DynamicGraph.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.SubjectBaseUri
  commentId: P:VDS.RDF.Dynamic.DynamicGraph.SubjectBaseUri
  id: SubjectBaseUri
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: SubjectBaseUri
  nameWithType: DynamicGraph.SubjectBaseUri
  fullName: VDS.RDF.Dynamic.DynamicGraph.SubjectBaseUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SubjectBaseUri
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nGets the <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> used for resolving relative subject references.\n"
  example: []
  syntax:
    content: public Uri SubjectBaseUri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property SubjectBaseUri As Uri
  overload: VDS.RDF.Dynamic.DynamicGraph.SubjectBaseUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Dynamic.DynamicGraph.PredicateBaseUri
  commentId: P:VDS.RDF.Dynamic.DynamicGraph.PredicateBaseUri
  id: PredicateBaseUri
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: PredicateBaseUri
  nameWithType: DynamicGraph.PredicateBaseUri
  fullName: VDS.RDF.Dynamic.DynamicGraph.PredicateBaseUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PredicateBaseUri
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.cs
    startLine: 67
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nGets the URI used for resolving relative predicate references.\n"
  example: []
  syntax:
    content: public Uri PredicateBaseUri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property PredicateBaseUri As Uri
  overload: VDS.RDF.Dynamic.DynamicGraph.PredicateBaseUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  id: System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: IDynamicMetaObjectProvider.GetMetaObject(Expression)
  nameWithType: DynamicGraph.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.cs
    startLine: 76
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: DynamicMetaObject IDynamicMetaObjectProvider.GetMetaObject(Expression parameter)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.Expression
    return:
      type: System.Dynamic.DynamicMetaObject
    content.vb: Function System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(parameter As Expression) As DynamicMetaObject Implements IDynamicMetaObjectProvider.GetMetaObject
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject*
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  nameWithType.vb: DynamicGraph.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  name.vb: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
- uid: VDS.RDF.Dynamic.DynamicGraph.Values
  commentId: P:VDS.RDF.Dynamic.DynamicGraph.Values
  id: Values
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: DynamicGraph.Values
  fullName: VDS.RDF.Dynamic.DynamicGraph.Values
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.Dictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Values
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.Dictionary.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nGets a collection of <xref href=\"VDS.RDF.Dynamic.DynamicNode\" data-throw-if-not-resolved=\"false\"></xref>s representing URI nodes in this graph.\n"
  example: []
  syntax:
    content: public ICollection<object> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Object}
    content.vb: Public ReadOnly Property Values As ICollection(Of Object)
  overload: VDS.RDF.Dynamic.DynamicGraph.Values*
  implements:
  - System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Values
  - System.Collections.Generic.IDictionary{System.String,System.Object}.Values
  - System.Collections.Generic.IDictionary{System.Uri,System.Object}.Values
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Dynamic.DynamicGraph.Count
  commentId: P:VDS.RDF.Dynamic.DynamicGraph.Count
  id: Count
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: DynamicGraph.Count
  fullName: VDS.RDF.Dynamic.DynamicGraph.Count
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.Dictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Count
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.Dictionary.cs
    startLine: 48
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nGets the number of URI nodes in this graph.\n"
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: VDS.RDF.Dynamic.DynamicGraph.Count*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.Count
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Count
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.Count
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Dynamic.DynamicGraph.IsReadOnly
  commentId: P:VDS.RDF.Dynamic.DynamicGraph.IsReadOnly
  id: IsReadOnly
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: IsReadOnly
  nameWithType: DynamicGraph.IsReadOnly
  fullName: VDS.RDF.Dynamic.DynamicGraph.IsReadOnly
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.Dictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsReadOnly
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.Dictionary.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nGets a value indicating whether this graph dictionary is read only (always false).\n"
  example: []
  syntax:
    content: public bool IsReadOnly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsReadOnly As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.IsReadOnly*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.IsReadOnly
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.IsReadOnly
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.IsReadOnly
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#IEnumerable#GetEnumerator
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: DynamicGraph.IEnumerable.GetEnumerator()
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.Dictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.Dictionary.cs
    startLine: 68
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: DynamicGraph.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IDictionary{VDS#RDF#INode,System#Object}#Keys
  commentId: P:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IDictionary{VDS#RDF#INode,System#Object}#Keys
  id: System#Collections#Generic#IDictionary{VDS#RDF#INode,System#Object}#Keys
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: IDictionary<INode, Object>.Keys
  nameWithType: DynamicGraph.IDictionary<INode, Object>.Keys
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.Keys
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.IDictionary<VDS.RDF.INode,System.Object>.Keys
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: ICollection<INode> IDictionary<INode, object>.Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{VDS.RDF.INode}
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<VDS.RDF.INode,System.Object>.Keys As ICollection(Of INode) Implements IDictionary(Of INode, Object).Keys
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IDictionary{VDS#RDF#INode,System#Object}#Keys*
  implements:
  - System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Keys
  nameWithType.vb: DynamicGraph.System.Collections.Generic.IDictionary<VDS.RDF.INode,System.Object>.Keys
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IDictionary<VDS.RDF.INode,System.Object>.Keys
  name.vb: System.Collections.Generic.IDictionary<VDS.RDF.INode,System.Object>.Keys
- uid: VDS.RDF.Dynamic.DynamicGraph.Item(VDS.RDF.INode)
  commentId: P:VDS.RDF.Dynamic.DynamicGraph.Item(VDS.RDF.INode)
  id: Item(VDS.RDF.INode)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Item[INode]
  nameWithType: DynamicGraph.Item[INode]
  fullName: VDS.RDF.Dynamic.DynamicGraph.Item[VDS.RDF.INode]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nGets nodes equal to <code data-dev-comment-type=\"paramref\" class=\"paramref\">node</code> or sets statements with subject equal to <code data-dev-comment-type=\"paramref\" class=\"paramref\">node</code> and predicate and objects equivalent to <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code>.\n"
  example: []
  syntax:
    content: public object this[INode node] { get; set; }
    parameters:
    - id: node
      type: VDS.RDF.INode
      description: The node to wrap dynamically.
    return:
      type: System.Object
      description: A <xref href="VDS.RDF.Dynamic.DynamicNode" data-throw-if-not-resolved="false"></xref> wrapped around the <code data-dev-comment-type="paramref" class="paramref">node</code>.
    content.vb: Public Property Item(node As INode) As Object
  overload: VDS.RDF.Dynamic.DynamicGraph.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <code data-dev-comment-type="paramref" class="paramref">node</code> is null.
  implements:
  - System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Item(VDS.RDF.INode)
  nameWithType.vb: DynamicGraph.Item(INode)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.Item(VDS.RDF.INode)
  name.vb: Item(INode)
- uid: VDS.RDF.Dynamic.DynamicGraph.Add(VDS.RDF.INode,System.Object)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.Add(VDS.RDF.INode,System.Object)
  id: Add(VDS.RDF.INode,System.Object)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Add(INode, Object)
  nameWithType: DynamicGraph.Add(INode, Object)
  fullName: VDS.RDF.Dynamic.DynamicGraph.Add(VDS.RDF.INode, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Add
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 104
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nAsserts statements equivalent to the parameters.\n"
  example: []
  syntax:
    content: public void Add(INode subject, object predicateAndObjects)
    parameters:
    - id: subject
      type: VDS.RDF.INode
      description: The subject to assert.
    - id: predicateAndObjects
      type: System.Object
      description: An object with public properties or a dictionary representing predicates and objects to assert.
    content.vb: Public Sub Add(subject As INode, predicateAndObjects As Object)
  overload: VDS.RDF.Dynamic.DynamicGraph.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <code data-dev-comment-type="paramref" class="paramref">subject</code> or <code data-dev-comment-type="paramref" class="paramref">predicateAndObjects</code> is null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: When <code data-dev-comment-type="paramref" class="paramref">predicateAndObjects</code> is a dictionary with keys other than <xref href="VDS.RDF.INode" data-throw-if-not-resolved="false"></xref>, <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> or <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  implements:
  - System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Add(VDS.RDF.INode,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Add(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Add(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Add(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<INode, Object>>.Add(KeyValuePair<INode, Object>)
  nameWithType: DynamicGraph.ICollection<KeyValuePair<INode, Object>>.Add(KeyValuePair<INode, Object>)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Add(System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Add
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 145
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: void ICollection<KeyValuePair<INode, object>>.Add(KeyValuePair<INode, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Add(item As KeyValuePair(Of INode, Object)) Implements ICollection(Of KeyValuePair(Of INode, Object)).Add
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Add*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.Add(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Add(KeyValuePair(Of INode, Object))
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Add(System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Add(KeyValuePair(Of INode, Object))
- uid: VDS.RDF.Dynamic.DynamicGraph.Contains(VDS.RDF.INode,System.Object)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.Contains(VDS.RDF.INode,System.Object)
  id: Contains(VDS.RDF.INode,System.Object)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Contains(INode, Object)
  nameWithType: DynamicGraph.Contains(INode, Object)
  fullName: VDS.RDF.Dynamic.DynamicGraph.Contains(VDS.RDF.INode, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Contains
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 157
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nChecks whether statements exist equivalent to the parameters.\n"
  example: []
  syntax:
    content: public bool Contains(INode subject, object predicateAndObjects)
    parameters:
    - id: subject
      type: VDS.RDF.INode
      description: The subject to check.
    - id: predicateAndObjects
      type: System.Object
      description: An object with public properties or a dictionary representing predicates and objects to check.
    return:
      type: System.Boolean
      description: Whether statements exist equivalent to the parameters.
    content.vb: Public Function Contains(subject As INode, predicateAndObjects As Object) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.Contains*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: When <code data-dev-comment-type="paramref" class="paramref">predicateAndObjects</code> is a dictionary with keys other than <xref href="VDS.RDF.INode" data-throw-if-not-resolved="false"></xref>, <xref href="System.Uri" data-throw-if-not-resolved="false"></xref> or <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<INode, Object>>.Contains(KeyValuePair<INode, Object>)
  nameWithType: DynamicGraph.ICollection<KeyValuePair<INode, Object>>.Contains(KeyValuePair<INode, Object>)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Contains(System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Contains
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 208
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: bool ICollection<KeyValuePair<INode, object>>.Contains(KeyValuePair<INode, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}
    return:
      type: System.Boolean
    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Contains(item As KeyValuePair(Of INode, Object)) As Boolean Implements ICollection(Of KeyValuePair(Of INode, Object)).Contains
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Contains*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.Contains(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Contains(KeyValuePair(Of INode, Object))
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Contains(System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Contains(KeyValuePair(Of INode, Object))
- uid: VDS.RDF.Dynamic.DynamicGraph.ContainsKey(VDS.RDF.INode)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.ContainsKey(VDS.RDF.INode)
  id: ContainsKey(VDS.RDF.INode)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ContainsKey(INode)
  nameWithType: DynamicGraph.ContainsKey(INode)
  fullName: VDS.RDF.Dynamic.DynamicGraph.ContainsKey(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ContainsKey
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 218
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nChecks whether a URI node equal to <code data-dev-comment-type=\"paramref\" class=\"paramref\">key</code> exists.\n"
  example: []
  syntax:
    content: public bool ContainsKey(INode key)
    parameters:
    - id: key
      type: VDS.RDF.INode
      description: The node to check.
    return:
      type: System.Boolean
      description: Whether a URI node equal to <code data-dev-comment-type="paramref" class="paramref">key</code> exists.
    content.vb: Public Function ContainsKey(key As INode) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.ContainsKey*
  implements:
  - System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.ContainsKey(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}[],System.Int32)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}[],System.Int32)
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<INode, Object>>.CopyTo(KeyValuePair<INode, Object>[], Int32)
  nameWithType: DynamicGraph.ICollection<KeyValuePair<INode, Object>>.CopyTo(KeyValuePair<INode, Object>[], Int32)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>[], System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.CopyTo
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 229
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: void ICollection<KeyValuePair<INode, object>>.CopyTo(KeyValuePair<INode, object>[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}[]
    - id: arrayIndex
      type: System.Int32
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.CopyTo(array As KeyValuePair(Of INode, Object)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of INode, Object)).CopyTo
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#CopyTo*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.CopyTo(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}[],System.Int32)
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.CopyTo(KeyValuePair(Of INode, Object)(), Int32)
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.CopyTo(KeyValuePair(Of INode, Object)(), Int32)
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#GetEnumerator
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#GetEnumerator
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: IEnumerable<KeyValuePair<INode, Object>>.GetEnumerator()
  nameWithType: DynamicGraph.IEnumerable<KeyValuePair<INode, Object>>.GetEnumerator()
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.GetEnumerator()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.GetEnumerator
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 235
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: IEnumerator<KeyValuePair<INode, object>> IEnumerable<KeyValuePair<INode, object>>.GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
    content.vb: Function System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.GetEnumerator As IEnumerator(Of KeyValuePair(Of INode, Object)) Implements IEnumerable(Of KeyValuePair(Of INode, Object)).GetEnumerator
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.GetEnumerator
  nameWithType.vb: DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.GetEnumerator()
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.GetEnumerator()
- uid: VDS.RDF.Dynamic.DynamicGraph.Remove(VDS.RDF.INode)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.Remove(VDS.RDF.INode)
  id: Remove(VDS.RDF.INode)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Remove(INode)
  nameWithType: DynamicGraph.Remove(INode)
  fullName: VDS.RDF.Dynamic.DynamicGraph.Remove(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Remove
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 245
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nRetracts statements with <code data-dev-comment-type=\"paramref\" class=\"paramref\">subject</code>.\n"
  example: []
  syntax:
    content: public bool Remove(INode subject)
    parameters:
    - id: subject
      type: VDS.RDF.INode
      description: The subject to retract.
    return:
      type: System.Boolean
      description: Whether any statements were retracted.
    content.vb: Public Function Remove(subject As INode) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.Remove*
  implements:
  - System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Remove(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.Remove(VDS.RDF.INode,System.Object)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.Remove(VDS.RDF.INode,System.Object)
  id: Remove(VDS.RDF.INode,System.Object)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Remove(INode, Object)
  nameWithType: DynamicGraph.Remove(INode, Object)
  fullName: VDS.RDF.Dynamic.DynamicGraph.Remove(VDS.RDF.INode, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Remove
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 261
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nRetracts statements equivalent to the parameters.\n"
  example: []
  syntax:
    content: public bool Remove(INode subject, object predicateAndObjects)
    parameters:
    - id: subject
      type: VDS.RDF.INode
      description: The subject to retract.
    - id: predicateAndObjects
      type: System.Object
      description: An object with public properties or a dictionary representing predicates and objects to retract.
    return:
      type: System.Boolean
      description: Whether any statements were retracted.
    content.vb: Public Function Remove(subject As INode, predicateAndObjects As Object) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<INode, Object>>.Remove(KeyValuePair<INode, Object>)
  nameWithType: DynamicGraph.ICollection<KeyValuePair<INode, Object>>.Remove(KeyValuePair<INode, Object>)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Remove(System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Remove
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 302
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: bool ICollection<KeyValuePair<INode, object>>.Remove(KeyValuePair<INode, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}
    return:
      type: System.Boolean
    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Remove(item As KeyValuePair(Of INode, Object)) As Boolean Implements ICollection(Of KeyValuePair(Of INode, Object)).Remove
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Remove*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.Remove(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Remove(KeyValuePair(Of INode, Object))
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Remove(System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Remove(KeyValuePair(Of INode, Object))
- uid: VDS.RDF.Dynamic.DynamicGraph.TryGetValue(VDS.RDF.INode,System.Object@)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.TryGetValue(VDS.RDF.INode,System.Object@)
  id: TryGetValue(VDS.RDF.INode,System.Object@)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: TryGetValue(INode, out Object)
  nameWithType: DynamicGraph.TryGetValue(INode, out Object)
  fullName: VDS.RDF.Dynamic.DynamicGraph.TryGetValue(VDS.RDF.INode, out System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryGetValue
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.NodeDictionary.cs
    startLine: 313
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nTries to get a node from the graph.\n"
  example: []
  syntax:
    content: public bool TryGetValue(INode node, out object value)
    parameters:
    - id: node
      type: VDS.RDF.INode
      description: The node to try.
    - id: value
      type: System.Object
      description: A <xref href="VDS.RDF.Dynamic.DynamicNode" data-throw-if-not-resolved="false"></xref> wrapped around the <code data-dev-comment-type="paramref" class="paramref">node</code>.
    return:
      type: System.Boolean
      description: A value representing whether a <code data-dev-comment-type="paramref" class="paramref">value</code> was set or not.
    content.vb: Public Function TryGetValue(node As INode, ByRef value As Object) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.TryGetValue*
  implements:
  - System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.TryGetValue(VDS.RDF.INode,System.Object@)
  nameWithType.vb: DynamicGraph.TryGetValue(INode, ByRef Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.TryGetValue(VDS.RDF.INode, ByRef System.Object)
  name.vb: TryGetValue(INode, ByRef Object)
- uid: VDS.RDF.Dynamic.DynamicGraph.Keys
  commentId: P:VDS.RDF.Dynamic.DynamicGraph.Keys
  id: Keys
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Keys
  nameWithType: DynamicGraph.Keys
  fullName: VDS.RDF.Dynamic.DynamicGraph.Keys
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Keys
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nGets an <xref href=\"System.Collections.Generic.ICollection%601\" data-throw-if-not-resolved=\"false\"></xref> containing Uri subject node names shortened as much as possible.\n"
  example: []
  syntax:
    content: public ICollection<string> Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: Public ReadOnly Property Keys As ICollection(Of String)
  overload: VDS.RDF.Dynamic.DynamicGraph.Keys*
  implements:
  - System.Collections.Generic.IDictionary{System.String,System.Object}.Keys
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Dynamic.DynamicGraph.Item(System.String)
  commentId: P:VDS.RDF.Dynamic.DynamicGraph.Item(System.String)
  id: Item(System.String)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: DynamicGraph.Item[String]
  fullName: VDS.RDF.Dynamic.DynamicGraph.Item[System.String]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nGets nodes equivalent to <code data-dev-comment-type=\"paramref\" class=\"paramref\">node</code> or sets statements with subject equivalent to <code data-dev-comment-type=\"paramref\" class=\"paramref\">node</code> and predicate and objects equivalent to <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code>.\n"
  example: []
  syntax:
    content: public object this[string node] { get; set; }
    parameters:
    - id: node
      type: System.String
      description: The node to wrap dynamically.
    return:
      type: System.Object
      description: A <xref href="VDS.RDF.Dynamic.DynamicNode" data-throw-if-not-resolved="false"></xref> wrapped around the <code data-dev-comment-type="paramref" class="paramref">node</code>.
    content.vb: Public Property Item(node As String) As Object
  overload: VDS.RDF.Dynamic.DynamicGraph.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <code data-dev-comment-type="paramref" class="paramref">node</code> is null.
  implements:
  - System.Collections.Generic.IDictionary{System.String,System.Object}.Item(System.String)
  nameWithType.vb: DynamicGraph.Item(String)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.Item(System.String)
  name.vb: Item(String)
- uid: VDS.RDF.Dynamic.DynamicGraph.Add(System.String,System.Object)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.Add(System.String,System.Object)
  id: Add(System.String,System.Object)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Add(String, Object)
  nameWithType: DynamicGraph.Add(String, Object)
  fullName: VDS.RDF.Dynamic.DynamicGraph.Add(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Add
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 91
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nAsserts statements equivalent to the parameters.\n"
  example: []
  syntax:
    content: public void Add(string subject, object predicateAndObjects)
    parameters:
    - id: subject
      type: System.String
      description: The subject to assert.
    - id: predicateAndObjects
      type: System.Object
      description: An object with public properties or a dictionary representing predicates and objects to assert.
    content.vb: Public Sub Add(subject As String, predicateAndObjects As Object)
  overload: VDS.RDF.Dynamic.DynamicGraph.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <code data-dev-comment-type="paramref" class="paramref">subject</code> or <code data-dev-comment-type="paramref" class="paramref">predicateAndObjects</code> is null.
  implements:
  - System.Collections.Generic.IDictionary{System.String,System.Object}.Add(System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<String, Object>>.Add(KeyValuePair<String, Object>)
  nameWithType: DynamicGraph.ICollection<KeyValuePair<String, Object>>.Add(KeyValuePair<String, Object>)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 107
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: void ICollection<KeyValuePair<string, object>>.Add(KeyValuePair<string, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add(item As KeyValuePair(Of String, Object)) Implements ICollection(Of KeyValuePair(Of String, Object)).Add
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add(KeyValuePair(Of String, Object))
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add(KeyValuePair(Of String, Object))
- uid: VDS.RDF.Dynamic.DynamicGraph.Contains(System.String,System.Object)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.Contains(System.String,System.Object)
  id: Contains(System.String,System.Object)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Contains(String, Object)
  nameWithType: DynamicGraph.Contains(String, Object)
  fullName: VDS.RDF.Dynamic.DynamicGraph.Contains(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Contains
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 118
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nChecks whether statements exist equivalent to the parameters.\n"
  example: []
  syntax:
    content: public bool Contains(string subject, object predicateAndObjects)
    parameters:
    - id: subject
      type: System.String
      description: The subject to check.
    - id: predicateAndObjects
      type: System.Object
      description: An object with public properties or a dictionary representing predicates and objects to check.
    return:
      type: System.Boolean
      description: Whether statements exist equivalent to the parameters.
    content.vb: Public Function Contains(subject As String, predicateAndObjects As Object) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<String, Object>>.Contains(KeyValuePair<String, Object>)
  nameWithType: DynamicGraph.ICollection<KeyValuePair<String, Object>>.Contains(KeyValuePair<String, Object>)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 134
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: bool ICollection<KeyValuePair<string, object>>.Contains(KeyValuePair<string, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
    return:
      type: System.Boolean
    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains(item As KeyValuePair(Of String, Object)) As Boolean Implements ICollection(Of KeyValuePair(Of String, Object)).Contains
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains(KeyValuePair(Of String, Object))
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains(KeyValuePair(Of String, Object))
- uid: VDS.RDF.Dynamic.DynamicGraph.ContainsKey(System.String)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ContainsKey(String)
  nameWithType: DynamicGraph.ContainsKey(String)
  fullName: VDS.RDF.Dynamic.DynamicGraph.ContainsKey(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ContainsKey
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 144
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nChecks whether a URI node equivalent to <code data-dev-comment-type=\"paramref\" class=\"paramref\">key</code> exists.\n"
  example: []
  syntax:
    content: public bool ContainsKey(string key)
    parameters:
    - id: key
      type: System.String
      description: The node to check.
    return:
      type: System.Boolean
      description: Whether a URI node equivalent to <code data-dev-comment-type="paramref" class="paramref">key</code> exists.
    content.vb: Public Function ContainsKey(key As String) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.ContainsKey*
  implements:
  - System.Collections.Generic.IDictionary{System.String,System.Object}.ContainsKey(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[], Int32)
  nameWithType: DynamicGraph.ICollection<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[], Int32)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.Object>[], System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 155
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: void ICollection<KeyValuePair<string, object>>.CopyTo(KeyValuePair<string, object>[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}[]
    - id: arrayIndex
      type: System.Int32
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo(array As KeyValuePair(Of String, Object)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of String, Object)).CopyTo
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo(KeyValuePair(Of String, Object)(), Int32)
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair(Of System.String, System.Object)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo(KeyValuePair(Of String, Object)(), Int32)
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: IEnumerable<KeyValuePair<String, Object>>.GetEnumerator()
  nameWithType: DynamicGraph.IEnumerable<KeyValuePair<String, Object>>.GetEnumerator()
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.GetEnumerator()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 161
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: IEnumerator<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>>.GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
    content.vb: Function System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.GetEnumerator
  nameWithType.vb: DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator()
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator()
- uid: VDS.RDF.Dynamic.DynamicGraph.Remove(System.String)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.Remove(System.String)
  id: Remove(System.String)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: DynamicGraph.Remove(String)
  fullName: VDS.RDF.Dynamic.DynamicGraph.Remove(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Remove
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 171
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nRetracts statements with <code data-dev-comment-type=\"paramref\" class=\"paramref\">subject</code>.\n"
  example: []
  syntax:
    content: public bool Remove(string subject)
    parameters:
    - id: subject
      type: System.String
      description: The subject to retract.
    return:
      type: System.Boolean
      description: Whether any statements were retracted.
    content.vb: Public Function Remove(subject As String) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.Remove*
  implements:
  - System.Collections.Generic.IDictionary{System.String,System.Object}.Remove(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.Remove(System.String,System.Object)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.Remove(System.String,System.Object)
  id: Remove(System.String,System.Object)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Remove(String, Object)
  nameWithType: DynamicGraph.Remove(String, Object)
  fullName: VDS.RDF.Dynamic.DynamicGraph.Remove(System.String, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Remove
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 187
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nRetracts statements equivalent to the parameters.\n"
  example: []
  syntax:
    content: public bool Remove(string subject, object predicateAndObjects)
    parameters:
    - id: subject
      type: System.String
      description: The subject to retract.
    - id: predicateAndObjects
      type: System.Object
      description: An object with public properties or a dictionary representing predicates and objects to retract.
    return:
      type: System.Boolean
      description: Whether any statements were retracted.
    content.vb: Public Function Remove(subject As String, predicateAndObjects As Object) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<String, Object>>.Remove(KeyValuePair<String, Object>)
  nameWithType: DynamicGraph.ICollection<KeyValuePair<String, Object>>.Remove(KeyValuePair<String, Object>)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 198
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: bool ICollection<KeyValuePair<string, object>>.Remove(KeyValuePair<string, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
    return:
      type: System.Boolean
    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove(item As KeyValuePair(Of String, Object)) As Boolean Implements ICollection(Of KeyValuePair(Of String, Object)).Remove
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove(KeyValuePair(Of String, Object))
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove(KeyValuePair(Of String, Object))
- uid: VDS.RDF.Dynamic.DynamicGraph.TryGetValue(System.String,System.Object@)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: TryGetValue(String, out Object)
  nameWithType: DynamicGraph.TryGetValue(String, out Object)
  fullName: VDS.RDF.Dynamic.DynamicGraph.TryGetValue(System.String, out System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryGetValue
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.StringDictionary.cs
    startLine: 209
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nTries to get a node from the graph.\n"
  example: []
  syntax:
    content: public bool TryGetValue(string node, out object value)
    parameters:
    - id: node
      type: System.String
      description: The node to try.
    - id: value
      type: System.Object
      description: A <xref href="VDS.RDF.Dynamic.DynamicNode" data-throw-if-not-resolved="false"></xref> wrapped around the <code data-dev-comment-type="paramref" class="paramref">node</code>.
    return:
      type: System.Boolean
      description: A value representing whether a <code data-dev-comment-type="paramref" class="paramref">value</code> was set or not.
    content.vb: Public Function TryGetValue(node As String, ByRef value As Object) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.TryGetValue*
  implements:
  - System.Collections.Generic.IDictionary{System.String,System.Object}.TryGetValue(System.String,System.Object@)
  nameWithType.vb: DynamicGraph.TryGetValue(String, ByRef Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.TryGetValue(System.String, ByRef System.Object)
  name.vb: TryGetValue(String, ByRef Object)
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IDictionary{System#Uri,System#Object}#Keys
  commentId: P:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IDictionary{System#Uri,System#Object}#Keys
  id: System#Collections#Generic#IDictionary{System#Uri,System#Object}#Keys
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: IDictionary<Uri, Object>.Keys
  nameWithType: DynamicGraph.IDictionary<Uri, Object>.Keys
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IDictionary<System.Uri, System.Object>.Keys
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.IDictionary<System.Uri,System.Object>.Keys
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: ICollection<Uri> IDictionary<Uri, object>.Keys { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.Uri}
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<System.Uri,System.Object>.Keys As ICollection(Of Uri) Implements IDictionary(Of Uri, Object).Keys
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IDictionary{System#Uri,System#Object}#Keys*
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,System.Object}.Keys
  nameWithType.vb: DynamicGraph.System.Collections.Generic.IDictionary<System.Uri,System.Object>.Keys
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IDictionary<System.Uri,System.Object>.Keys
  name.vb: System.Collections.Generic.IDictionary<System.Uri,System.Object>.Keys
- uid: VDS.RDF.Dynamic.DynamicGraph.Item(System.Uri)
  commentId: P:VDS.RDF.Dynamic.DynamicGraph.Item(System.Uri)
  id: Item(System.Uri)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Item[Uri]
  nameWithType: DynamicGraph.Item[Uri]
  fullName: VDS.RDF.Dynamic.DynamicGraph.Item[System.Uri]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nGets nodes equivalent to <code data-dev-comment-type=\"paramref\" class=\"paramref\">node</code> or sets statements with subject equivalent to <code data-dev-comment-type=\"paramref\" class=\"paramref\">node</code> and predicate and objects equivalent to <code data-dev-comment-type=\"paramref\" class=\"paramref\">value</code>.\n"
  example: []
  syntax:
    content: public object this[Uri node] { get; set; }
    parameters:
    - id: node
      type: System.Uri
      description: The node to wrap dynamically.
    return:
      type: System.Object
      description: A <xref href="VDS.RDF.Dynamic.DynamicNode" data-throw-if-not-resolved="false"></xref> wrapped around the <code data-dev-comment-type="paramref" class="paramref">node</code>.
    content.vb: Public Property Item(node As Uri) As Object
  overload: VDS.RDF.Dynamic.DynamicGraph.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <code data-dev-comment-type="paramref" class="paramref">node</code> is null.
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,System.Object}.Item(System.Uri)
  nameWithType.vb: DynamicGraph.Item(Uri)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.Item(System.Uri)
  name.vb: Item(Uri)
- uid: VDS.RDF.Dynamic.DynamicGraph.Add(System.Uri,System.Object)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.Add(System.Uri,System.Object)
  id: Add(System.Uri,System.Object)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Add(Uri, Object)
  nameWithType: DynamicGraph.Add(Uri, Object)
  fullName: VDS.RDF.Dynamic.DynamicGraph.Add(System.Uri, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Add
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 89
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nAsserts statements equivalent to the parameters.\n"
  example: []
  syntax:
    content: public void Add(Uri subject, object predicateAndObjects)
    parameters:
    - id: subject
      type: System.Uri
      description: The subject to assert.
    - id: predicateAndObjects
      type: System.Object
      description: An object with public properties or a dictionary representing predicates and objects to assert.
    content.vb: Public Sub Add(subject As Uri, predicateAndObjects As Object)
  overload: VDS.RDF.Dynamic.DynamicGraph.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <code data-dev-comment-type="paramref" class="paramref">subject</code>.
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,System.Object}.Add(System.Uri,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<Uri, Object>>.Add(KeyValuePair<Uri, Object>)
  nameWithType: DynamicGraph.ICollection<KeyValuePair<Uri, Object>>.Add(KeyValuePair<Uri, Object>)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Add(System.Collections.Generic.KeyValuePair<System.Uri, System.Object>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Add
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: void ICollection<KeyValuePair<Uri, object>>.Add(KeyValuePair<Uri, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Uri,System.Object}
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Add(item As KeyValuePair(Of Uri, Object)) Implements ICollection(Of KeyValuePair(Of Uri, Object)).Add
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Add*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.Add(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Add(KeyValuePair(Of Uri, Object))
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Add(System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Add(KeyValuePair(Of Uri, Object))
- uid: VDS.RDF.Dynamic.DynamicGraph.Contains(System.Uri,System.Object)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.Contains(System.Uri,System.Object)
  id: Contains(System.Uri,System.Object)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Contains(Uri, Object)
  nameWithType: DynamicGraph.Contains(Uri, Object)
  fullName: VDS.RDF.Dynamic.DynamicGraph.Contains(System.Uri, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Contains
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 111
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nChecks whether statements exist equivalent to the parameters.\n"
  example: []
  syntax:
    content: public bool Contains(Uri subject, object predicateAndObjects)
    parameters:
    - id: subject
      type: System.Uri
      description: The subject to check.
    - id: predicateAndObjects
      type: System.Object
      description: An object with public properties or a dictionary representing predicates and objects to check.
    return:
      type: System.Boolean
      description: Whether statements exist equivalent to the parameters.
    content.vb: Public Function Contains(subject As Uri, predicateAndObjects As Object) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.Contains*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<Uri, Object>>.Contains(KeyValuePair<Uri, Object>)
  nameWithType: DynamicGraph.ICollection<KeyValuePair<Uri, Object>>.Contains(KeyValuePair<Uri, Object>)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Contains(System.Collections.Generic.KeyValuePair<System.Uri, System.Object>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Contains
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 122
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: bool ICollection<KeyValuePair<Uri, object>>.Contains(KeyValuePair<Uri, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Uri,System.Object}
    return:
      type: System.Boolean
    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Contains(item As KeyValuePair(Of Uri, Object)) As Boolean Implements ICollection(Of KeyValuePair(Of Uri, Object)).Contains
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Contains*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.Contains(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Contains(KeyValuePair(Of Uri, Object))
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Contains(System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Contains(KeyValuePair(Of Uri, Object))
- uid: VDS.RDF.Dynamic.DynamicGraph.ContainsKey(System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.ContainsKey(System.Uri)
  id: ContainsKey(System.Uri)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ContainsKey(Uri)
  nameWithType: DynamicGraph.ContainsKey(Uri)
  fullName: VDS.RDF.Dynamic.DynamicGraph.ContainsKey(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ContainsKey
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 132
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nChecks whether a URI node equivalent to <code data-dev-comment-type=\"paramref\" class=\"paramref\">key</code> exists.\n"
  example: []
  syntax:
    content: public bool ContainsKey(Uri key)
    parameters:
    - id: key
      type: System.Uri
      description: The node to check.
    return:
      type: System.Boolean
      description: Whether a URI node equivalent to <code data-dev-comment-type="paramref" class="paramref">key</code> exists.
    content.vb: Public Function ContainsKey(key As Uri) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.ContainsKey*
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,System.Object}.ContainsKey(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,System.Object}[],System.Int32)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,System.Object}[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,System.Object}[],System.Int32)
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<Uri, Object>>.CopyTo(KeyValuePair<Uri, Object>[], Int32)
  nameWithType: DynamicGraph.ICollection<KeyValuePair<Uri, Object>>.CopyTo(KeyValuePair<Uri, Object>[], Int32)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair<System.Uri, System.Object>[], System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.CopyTo
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 143
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: void ICollection<KeyValuePair<Uri, object>>.CopyTo(KeyValuePair<Uri, object>[] array, int arrayIndex)
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{System.Uri,System.Object}[]
    - id: arrayIndex
      type: System.Int32
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.CopyTo(array As KeyValuePair(Of Uri, Object)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of Uri, Object)).CopyTo
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#CopyTo*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,System.Object}[],System.Int32)
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.CopyTo(KeyValuePair(Of Uri, Object)(), Int32)
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)(), System.Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.CopyTo(KeyValuePair(Of Uri, Object)(), Int32)
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#GetEnumerator
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#GetEnumerator
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: IEnumerable<KeyValuePair<Uri, Object>>.GetEnumerator()
  nameWithType: DynamicGraph.IEnumerable<KeyValuePair<Uri, Object>>.GetEnumerator()
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.GetEnumerator()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.GetEnumerator
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 149
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: IEnumerator<KeyValuePair<Uri, object>> IEnumerable<KeyValuePair<Uri, object>>.GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
    content.vb: Function System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.GetEnumerator As IEnumerator(Of KeyValuePair(Of Uri, Object)) Implements IEnumerable(Of KeyValuePair(Of Uri, Object)).GetEnumerator
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.GetEnumerator
  nameWithType.vb: DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.GetEnumerator()
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.GetEnumerator()
- uid: VDS.RDF.Dynamic.DynamicGraph.Remove(System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.Remove(System.Uri)
  id: Remove(System.Uri)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Remove(Uri)
  nameWithType: DynamicGraph.Remove(Uri)
  fullName: VDS.RDF.Dynamic.DynamicGraph.Remove(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Remove
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 160
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nRetracts statements with <code data-dev-comment-type=\"paramref\" class=\"paramref\">subject</code>.\n"
  example: []
  syntax:
    content: public bool Remove(Uri subject)
    parameters:
    - id: subject
      type: System.Uri
      description: The subject to retract.
    return:
      type: System.Boolean
      description: Whether any statements were retracted.
    content.vb: Public Function Remove(subject As Uri) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: When <code data-dev-comment-type="paramref" class="paramref">subject</code> is null.
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,System.Object}.Remove(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.Remove(System.Uri,System.Object)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.Remove(System.Uri,System.Object)
  id: Remove(System.Uri,System.Object)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: Remove(Uri, Object)
  nameWithType: DynamicGraph.Remove(Uri, Object)
  fullName: VDS.RDF.Dynamic.DynamicGraph.Remove(System.Uri, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Remove
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 176
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nRetracts statements equivalent to  parameters.\n"
  example: []
  syntax:
    content: public bool Remove(Uri subject, object predicateAndObjects)
    parameters:
    - id: subject
      type: System.Uri
      description: The subject to retract.
    - id: predicateAndObjects
      type: System.Object
      description: An object with public properties or a dictionary representing predicates and objects to retract.
    return:
      type: System.Boolean
      description: Whether any statements were retracted.
    content.vb: Public Function Remove(subject As Uri, predicateAndObjects As Object) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: ICollection<KeyValuePair<Uri, Object>>.Remove(KeyValuePair<Uri, Object>)
  nameWithType: DynamicGraph.ICollection<KeyValuePair<Uri, Object>>.Remove(KeyValuePair<Uri, Object>)
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Remove(System.Collections.Generic.KeyValuePair<System.Uri, System.Object>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Remove
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 187
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: bool ICollection<KeyValuePair<Uri, object>>.Remove(KeyValuePair<Uri, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.Uri,System.Object}
    return:
      type: System.Boolean
    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Remove(item As KeyValuePair(Of Uri, Object)) As Boolean Implements ICollection(Of KeyValuePair(Of Uri, Object)).Remove
  overload: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Remove*
  implements:
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.Remove(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Remove(KeyValuePair(Of Uri, Object))
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Remove(System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object))
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Remove(KeyValuePair(Of Uri, Object))
- uid: VDS.RDF.Dynamic.DynamicGraph.TryGetValue(System.Uri,System.Object@)
  commentId: M:VDS.RDF.Dynamic.DynamicGraph.TryGetValue(System.Uri,System.Object@)
  id: TryGetValue(System.Uri,System.Object@)
  parent: VDS.RDF.Dynamic.DynamicGraph
  langs:
  - csharp
  - vb
  name: TryGetValue(Uri, out Object)
  nameWithType: DynamicGraph.TryGetValue(Uri, out Object)
  fullName: VDS.RDF.Dynamic.DynamicGraph.TryGetValue(System.Uri, out System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryGetValue
    path: Libraries/dotNetRDF/Dynamic/DynamicGraph.UriDictionary.cs
    startLine: 198
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nTries to get a node from the graph.\n"
  example: []
  syntax:
    content: public bool TryGetValue(Uri node, out object value)
    parameters:
    - id: node
      type: System.Uri
      description: The node to try.
    - id: value
      type: System.Object
      description: A <xref href="VDS.RDF.Dynamic.DynamicNode" data-throw-if-not-resolved="false"></xref> wrapped around the <code data-dev-comment-type="paramref" class="paramref">node</code>.
    return:
      type: System.Boolean
      description: A value representing whether a <code data-dev-comment-type="paramref" class="paramref">value</code> was set or not.
    content.vb: Public Function TryGetValue(node As Uri, ByRef value As Object) As Boolean
  overload: VDS.RDF.Dynamic.DynamicGraph.TryGetValue*
  implements:
  - System.Collections.Generic.IDictionary{System.Uri,System.Object}.TryGetValue(System.Uri,System.Object@)
  nameWithType.vb: DynamicGraph.TryGetValue(Uri, ByRef Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.TryGetValue(System.Uri, ByRef System.Object)
  name.vb: TryGetValue(Uri, ByRef Object)
references:
- uid: VDS.RDF.WrapperGraph
  commentId: T:VDS.RDF.WrapperGraph
  parent: VDS.RDF
  name: WrapperGraph
  nameWithType: WrapperGraph
  fullName: VDS.RDF.WrapperGraph
- uid: VDS.RDF.Dynamic
  commentId: N:VDS.RDF.Dynamic
  name: VDS.RDF.Dynamic
  nameWithType: VDS.RDF.Dynamic
  fullName: VDS.RDF.Dynamic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.INodeFactory
  commentId: T:VDS.RDF.INodeFactory
  parent: VDS.RDF
  name: INodeFactory
  nameWithType: INodeFactory
  fullName: VDS.RDF.INodeFactory
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Dynamic.IDynamicMetaObjectProvider
  commentId: T:System.Dynamic.IDynamicMetaObjectProvider
  parent: System.Dynamic
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<INode, Object>
  nameWithType: IDictionary<INode, Object>
  fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>
  nameWithType.vb: IDictionary(Of INode, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object)
  name.vb: IDictionary(Of INode, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<INode, Object>>
  nameWithType: ICollection<KeyValuePair<INode, Object>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of INode, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object))
  name.vb: ICollection(Of KeyValuePair(Of INode, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<INode, Object>>
  nameWithType: IEnumerable<KeyValuePair<INode, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of INode, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of INode, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<String, Object>>
  nameWithType: ICollection<KeyValuePair<String, Object>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: ICollection(Of KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, Object>>
  nameWithType: IEnumerable<KeyValuePair<String, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.Uri,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.Uri,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Uri, Object>
  nameWithType: IDictionary<Uri, Object>
  fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>
  nameWithType.vb: IDictionary(Of Uri, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, System.Object)
  name.vb: IDictionary(Of Uri, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<KeyValuePair<Uri, Object>>
  nameWithType: ICollection<KeyValuePair<Uri, Object>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object))
  name.vb: ICollection(Of KeyValuePair(Of Uri, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Uri, Object>>
  nameWithType: IEnumerable<KeyValuePair<Uri, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Uri, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of Uri, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: VDS.RDF.WrapperGraph._g
  commentId: F:VDS.RDF.WrapperGraph._g
  parent: VDS.RDF.WrapperGraph
  name: _g
  nameWithType: WrapperGraph._g
  fullName: VDS.RDF.WrapperGraph._g
- uid: VDS.RDF.WrapperGraph.BaseUri
  commentId: P:VDS.RDF.WrapperGraph.BaseUri
  parent: VDS.RDF.WrapperGraph
  name: BaseUri
  nameWithType: WrapperGraph.BaseUri
  fullName: VDS.RDF.WrapperGraph.BaseUri
- uid: VDS.RDF.WrapperGraph.IsEmpty
  commentId: P:VDS.RDF.WrapperGraph.IsEmpty
  parent: VDS.RDF.WrapperGraph
  name: IsEmpty
  nameWithType: WrapperGraph.IsEmpty
  fullName: VDS.RDF.WrapperGraph.IsEmpty
- uid: VDS.RDF.WrapperGraph.NamespaceMap
  commentId: P:VDS.RDF.WrapperGraph.NamespaceMap
  parent: VDS.RDF.WrapperGraph
  name: NamespaceMap
  nameWithType: WrapperGraph.NamespaceMap
  fullName: VDS.RDF.WrapperGraph.NamespaceMap
- uid: VDS.RDF.WrapperGraph.Nodes
  commentId: P:VDS.RDF.WrapperGraph.Nodes
  parent: VDS.RDF.WrapperGraph
  name: Nodes
  nameWithType: WrapperGraph.Nodes
  fullName: VDS.RDF.WrapperGraph.Nodes
- uid: VDS.RDF.WrapperGraph.AllNodes
  commentId: P:VDS.RDF.WrapperGraph.AllNodes
  parent: VDS.RDF.WrapperGraph
  name: AllNodes
  nameWithType: WrapperGraph.AllNodes
  fullName: VDS.RDF.WrapperGraph.AllNodes
- uid: VDS.RDF.WrapperGraph.Triples
  commentId: P:VDS.RDF.WrapperGraph.Triples
  parent: VDS.RDF.WrapperGraph
  name: Triples
  nameWithType: WrapperGraph.Triples
  fullName: VDS.RDF.WrapperGraph.Triples
- uid: VDS.RDF.WrapperGraph.Assert(VDS.RDF.Triple)
  commentId: M:VDS.RDF.WrapperGraph.Assert(VDS.RDF.Triple)
  parent: VDS.RDF.WrapperGraph
  name: Assert(Triple)
  nameWithType: WrapperGraph.Assert(Triple)
  fullName: VDS.RDF.WrapperGraph.Assert(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.Assert(VDS.RDF.Triple)
    name: Assert
    nameWithType: WrapperGraph.Assert
    fullName: VDS.RDF.WrapperGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.Assert(VDS.RDF.Triple)
    name: Assert
    nameWithType: WrapperGraph.Assert
    fullName: VDS.RDF.WrapperGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.WrapperGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: Assert(IEnumerable<Triple>)
  nameWithType: WrapperGraph.Assert(IEnumerable<Triple>)
  fullName: VDS.RDF.WrapperGraph.Assert(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: WrapperGraph.Assert(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.WrapperGraph.Assert(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Assert(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Assert
    nameWithType: WrapperGraph.Assert
    fullName: VDS.RDF.WrapperGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Assert
    nameWithType: WrapperGraph.Assert
    fullName: VDS.RDF.WrapperGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Retract(VDS.RDF.Triple)
  commentId: M:VDS.RDF.WrapperGraph.Retract(VDS.RDF.Triple)
  parent: VDS.RDF.WrapperGraph
  name: Retract(Triple)
  nameWithType: WrapperGraph.Retract(Triple)
  fullName: VDS.RDF.WrapperGraph.Retract(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.Retract(VDS.RDF.Triple)
    name: Retract
    nameWithType: WrapperGraph.Retract
    fullName: VDS.RDF.WrapperGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.Retract(VDS.RDF.Triple)
    name: Retract
    nameWithType: WrapperGraph.Retract
    fullName: VDS.RDF.WrapperGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.WrapperGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: Retract(IEnumerable<Triple>)
  nameWithType: WrapperGraph.Retract(IEnumerable<Triple>)
  fullName: VDS.RDF.WrapperGraph.Retract(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: WrapperGraph.Retract(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.WrapperGraph.Retract(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Retract(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Retract
    nameWithType: WrapperGraph.Retract
    fullName: VDS.RDF.WrapperGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Retract
    nameWithType: WrapperGraph.Retract
    fullName: VDS.RDF.WrapperGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Clear
  commentId: M:VDS.RDF.WrapperGraph.Clear
  parent: VDS.RDF.WrapperGraph
  name: Clear()
  nameWithType: WrapperGraph.Clear()
  fullName: VDS.RDF.WrapperGraph.Clear()
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.Clear
    name: Clear
    nameWithType: WrapperGraph.Clear
    fullName: VDS.RDF.WrapperGraph.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.Clear
    name: Clear
    nameWithType: WrapperGraph.Clear
    fullName: VDS.RDF.WrapperGraph.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateBlankNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.CreateBlankNode(System.String)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: CreateBlankNode(String)
  nameWithType: WrapperGraph.CreateBlankNode(String)
  fullName: VDS.RDF.WrapperGraph.CreateBlankNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.CreateBlankNode(System.String)
    name: CreateBlankNode
    nameWithType: WrapperGraph.CreateBlankNode
    fullName: VDS.RDF.WrapperGraph.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.CreateBlankNode(System.String)
    name: CreateBlankNode
    nameWithType: WrapperGraph.CreateBlankNode
    fullName: VDS.RDF.WrapperGraph.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateBlankNode
  commentId: M:VDS.RDF.WrapperGraph.CreateBlankNode
  parent: VDS.RDF.WrapperGraph
  name: CreateBlankNode()
  nameWithType: WrapperGraph.CreateBlankNode()
  fullName: VDS.RDF.WrapperGraph.CreateBlankNode()
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.CreateBlankNode
    name: CreateBlankNode
    nameWithType: WrapperGraph.CreateBlankNode
    fullName: VDS.RDF.WrapperGraph.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.CreateBlankNode
    name: CreateBlankNode
    nameWithType: WrapperGraph.CreateBlankNode
    fullName: VDS.RDF.WrapperGraph.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetNextBlankNodeID
  commentId: M:VDS.RDF.WrapperGraph.GetNextBlankNodeID
  parent: VDS.RDF.WrapperGraph
  name: GetNextBlankNodeID()
  nameWithType: WrapperGraph.GetNextBlankNodeID()
  fullName: VDS.RDF.WrapperGraph.GetNextBlankNodeID()
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetNextBlankNodeID
    name: GetNextBlankNodeID
    nameWithType: WrapperGraph.GetNextBlankNodeID
    fullName: VDS.RDF.WrapperGraph.GetNextBlankNodeID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetNextBlankNodeID
    name: GetNextBlankNodeID
    nameWithType: WrapperGraph.GetNextBlankNodeID
    fullName: VDS.RDF.WrapperGraph.GetNextBlankNodeID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.WrapperGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  parent: VDS.RDF.WrapperGraph
  name: CreateGraphLiteralNode(IGraph)
  nameWithType: WrapperGraph.CreateGraphLiteralNode(IGraph)
  fullName: VDS.RDF.WrapperGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
    name: CreateGraphLiteralNode
    nameWithType: WrapperGraph.CreateGraphLiteralNode
    fullName: VDS.RDF.WrapperGraph.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
    name: CreateGraphLiteralNode
    nameWithType: WrapperGraph.CreateGraphLiteralNode
    fullName: VDS.RDF.WrapperGraph.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateGraphLiteralNode
  commentId: M:VDS.RDF.WrapperGraph.CreateGraphLiteralNode
  parent: VDS.RDF.WrapperGraph
  name: CreateGraphLiteralNode()
  nameWithType: WrapperGraph.CreateGraphLiteralNode()
  fullName: VDS.RDF.WrapperGraph.CreateGraphLiteralNode()
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.CreateGraphLiteralNode
    name: CreateGraphLiteralNode
    nameWithType: WrapperGraph.CreateGraphLiteralNode
    fullName: VDS.RDF.WrapperGraph.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.CreateGraphLiteralNode
    name: CreateGraphLiteralNode
    nameWithType: WrapperGraph.CreateGraphLiteralNode
    fullName: VDS.RDF.WrapperGraph.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.CreateLiteralNode(System.String)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: CreateLiteralNode(String)
  nameWithType: WrapperGraph.CreateLiteralNode(String)
  fullName: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String)
    name: CreateLiteralNode
    nameWithType: WrapperGraph.CreateLiteralNode
    fullName: VDS.RDF.WrapperGraph.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String)
    name: CreateLiteralNode
    nameWithType: WrapperGraph.CreateLiteralNode
    fullName: VDS.RDF.WrapperGraph.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: CreateLiteralNode(String, Uri)
  nameWithType: WrapperGraph.CreateLiteralNode(String, Uri)
  fullName: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.Uri)
    name: CreateLiteralNode
    nameWithType: WrapperGraph.CreateLiteralNode
    fullName: VDS.RDF.WrapperGraph.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.Uri)
    name: CreateLiteralNode
    nameWithType: WrapperGraph.CreateLiteralNode
    fullName: VDS.RDF.WrapperGraph.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.String)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: CreateLiteralNode(String, String)
  nameWithType: WrapperGraph.CreateLiteralNode(String, String)
  fullName: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.String)
    name: CreateLiteralNode
    nameWithType: WrapperGraph.CreateLiteralNode
    fullName: VDS.RDF.WrapperGraph.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.String)
    name: CreateLiteralNode
    nameWithType: WrapperGraph.CreateLiteralNode
    fullName: VDS.RDF.WrapperGraph.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateUriNode
  commentId: M:VDS.RDF.WrapperGraph.CreateUriNode
  parent: VDS.RDF.WrapperGraph
  name: CreateUriNode()
  nameWithType: WrapperGraph.CreateUriNode()
  fullName: VDS.RDF.WrapperGraph.CreateUriNode()
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.CreateUriNode
    name: CreateUriNode
    nameWithType: WrapperGraph.CreateUriNode
    fullName: VDS.RDF.WrapperGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.CreateUriNode
    name: CreateUriNode
    nameWithType: WrapperGraph.CreateUriNode
    fullName: VDS.RDF.WrapperGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateUriNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.CreateUriNode(System.String)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: CreateUriNode(String)
  nameWithType: WrapperGraph.CreateUriNode(String)
  fullName: VDS.RDF.WrapperGraph.CreateUriNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.CreateUriNode(System.String)
    name: CreateUriNode
    nameWithType: WrapperGraph.CreateUriNode
    fullName: VDS.RDF.WrapperGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.CreateUriNode(System.String)
    name: CreateUriNode
    nameWithType: WrapperGraph.CreateUriNode
    fullName: VDS.RDF.WrapperGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateUriNode(System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.CreateUriNode(System.Uri)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: CreateUriNode(Uri)
  nameWithType: WrapperGraph.CreateUriNode(Uri)
  fullName: VDS.RDF.WrapperGraph.CreateUriNode(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.CreateUriNode(System.Uri)
    name: CreateUriNode
    nameWithType: WrapperGraph.CreateUriNode
    fullName: VDS.RDF.WrapperGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.CreateUriNode(System.Uri)
    name: CreateUriNode
    nameWithType: WrapperGraph.CreateUriNode
    fullName: VDS.RDF.WrapperGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateVariableNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.CreateVariableNode(System.String)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: CreateVariableNode(String)
  nameWithType: WrapperGraph.CreateVariableNode(String)
  fullName: VDS.RDF.WrapperGraph.CreateVariableNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.CreateVariableNode(System.String)
    name: CreateVariableNode
    nameWithType: WrapperGraph.CreateVariableNode
    fullName: VDS.RDF.WrapperGraph.CreateVariableNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.CreateVariableNode(System.String)
    name: CreateVariableNode
    nameWithType: WrapperGraph.CreateVariableNode
    fullName: VDS.RDF.WrapperGraph.CreateVariableNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetBlankNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.GetBlankNode(System.String)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: GetBlankNode(String)
  nameWithType: WrapperGraph.GetBlankNode(String)
  fullName: VDS.RDF.WrapperGraph.GetBlankNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetBlankNode(System.String)
    name: GetBlankNode
    nameWithType: WrapperGraph.GetBlankNode
    fullName: VDS.RDF.WrapperGraph.GetBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetBlankNode(System.String)
    name: GetBlankNode
    nameWithType: WrapperGraph.GetBlankNode
    fullName: VDS.RDF.WrapperGraph.GetBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.String)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: GetLiteralNode(String, String)
  nameWithType: WrapperGraph.GetLiteralNode(String, String)
  fullName: VDS.RDF.WrapperGraph.GetLiteralNode(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.String)
    name: GetLiteralNode
    nameWithType: WrapperGraph.GetLiteralNode
    fullName: VDS.RDF.WrapperGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.String)
    name: GetLiteralNode
    nameWithType: WrapperGraph.GetLiteralNode
    fullName: VDS.RDF.WrapperGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetLiteralNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.GetLiteralNode(System.String)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: GetLiteralNode(String)
  nameWithType: WrapperGraph.GetLiteralNode(String)
  fullName: VDS.RDF.WrapperGraph.GetLiteralNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetLiteralNode(System.String)
    name: GetLiteralNode
    nameWithType: WrapperGraph.GetLiteralNode
    fullName: VDS.RDF.WrapperGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetLiteralNode(System.String)
    name: GetLiteralNode
    nameWithType: WrapperGraph.GetLiteralNode
    fullName: VDS.RDF.WrapperGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: GetLiteralNode(String, Uri)
  nameWithType: WrapperGraph.GetLiteralNode(String, Uri)
  fullName: VDS.RDF.WrapperGraph.GetLiteralNode(System.String, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.Uri)
    name: GetLiteralNode
    nameWithType: WrapperGraph.GetLiteralNode
    fullName: VDS.RDF.WrapperGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.Uri)
    name: GetLiteralNode
    nameWithType: WrapperGraph.GetLiteralNode
    fullName: VDS.RDF.WrapperGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriples(System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.GetTriples(System.Uri)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: GetTriples(Uri)
  nameWithType: WrapperGraph.GetTriples(Uri)
  fullName: VDS.RDF.WrapperGraph.GetTriples(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetTriples(System.Uri)
    name: GetTriples
    nameWithType: WrapperGraph.GetTriples
    fullName: VDS.RDF.WrapperGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetTriples(System.Uri)
    name: GetTriples
    nameWithType: WrapperGraph.GetTriples
    fullName: VDS.RDF.WrapperGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriples(VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  name: GetTriples(INode)
  nameWithType: WrapperGraph.GetTriples(INode)
  fullName: VDS.RDF.WrapperGraph.GetTriples(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetTriples(VDS.RDF.INode)
    name: GetTriples
    nameWithType: WrapperGraph.GetTriples
    fullName: VDS.RDF.WrapperGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetTriples(VDS.RDF.INode)
    name: GetTriples
    nameWithType: WrapperGraph.GetTriples
    fullName: VDS.RDF.WrapperGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithObject(System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithObject(System.Uri)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: GetTriplesWithObject(Uri)
  nameWithType: WrapperGraph.GetTriplesWithObject(Uri)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithObject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithObject(System.Uri)
    name: GetTriplesWithObject
    nameWithType: WrapperGraph.GetTriplesWithObject
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithObject(System.Uri)
    name: GetTriplesWithObject
    nameWithType: WrapperGraph.GetTriplesWithObject
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  name: GetTriplesWithObject(INode)
  nameWithType: WrapperGraph.GetTriplesWithObject(INode)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithObject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: WrapperGraph.GetTriplesWithObject
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: WrapperGraph.GetTriplesWithObject
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  name: GetTriplesWithPredicate(INode)
  nameWithType: WrapperGraph.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: WrapperGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: WrapperGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicate(System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithPredicate(System.Uri)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: GetTriplesWithPredicate(Uri)
  nameWithType: WrapperGraph.GetTriplesWithPredicate(Uri)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicate(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicate(System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: WrapperGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicate(System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: WrapperGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  name: GetTriplesWithSubject(INode)
  nameWithType: WrapperGraph.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: WrapperGraph.GetTriplesWithSubject
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: WrapperGraph.GetTriplesWithSubject
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithSubject(System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithSubject(System.Uri)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: GetTriplesWithSubject(Uri)
  nameWithType: WrapperGraph.GetTriplesWithSubject(Uri)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithSubject(System.Uri)
    name: GetTriplesWithSubject
    nameWithType: WrapperGraph.GetTriplesWithSubject
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithSubject(System.Uri)
    name: GetTriplesWithSubject
    nameWithType: WrapperGraph.GetTriplesWithSubject
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: WrapperGraph.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: WrapperGraph.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: WrapperGraph.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: WrapperGraph.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: WrapperGraph.GetTriplesWithSubjectObject
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: WrapperGraph.GetTriplesWithSubjectObject
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: WrapperGraph.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: WrapperGraph.GetTriplesWithPredicateObject
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: WrapperGraph.GetTriplesWithPredicateObject
    fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetUriNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.GetUriNode(System.String)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: GetUriNode(String)
  nameWithType: WrapperGraph.GetUriNode(String)
  fullName: VDS.RDF.WrapperGraph.GetUriNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetUriNode(System.String)
    name: GetUriNode
    nameWithType: WrapperGraph.GetUriNode
    fullName: VDS.RDF.WrapperGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetUriNode(System.String)
    name: GetUriNode
    nameWithType: WrapperGraph.GetUriNode
    fullName: VDS.RDF.WrapperGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetUriNode(System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.GetUriNode(System.Uri)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: GetUriNode(Uri)
  nameWithType: WrapperGraph.GetUriNode(Uri)
  fullName: VDS.RDF.WrapperGraph.GetUriNode(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetUriNode(System.Uri)
    name: GetUriNode
    nameWithType: WrapperGraph.GetUriNode
    fullName: VDS.RDF.WrapperGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetUriNode(System.Uri)
    name: GetUriNode
    nameWithType: WrapperGraph.GetUriNode
    fullName: VDS.RDF.WrapperGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.WrapperGraph.ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.WrapperGraph
  name: ContainsTriple(Triple)
  nameWithType: WrapperGraph.ContainsTriple(Triple)
  fullName: VDS.RDF.WrapperGraph.ContainsTriple(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: WrapperGraph.ContainsTriple
    fullName: VDS.RDF.WrapperGraph.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: WrapperGraph.ContainsTriple
    fullName: VDS.RDF.WrapperGraph.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph)
  parent: VDS.RDF.WrapperGraph
  name: Merge(IGraph)
  nameWithType: WrapperGraph.Merge(IGraph)
  fullName: VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph)
    name: Merge
    nameWithType: WrapperGraph.Merge
    fullName: VDS.RDF.WrapperGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph)
    name: Merge
    nameWithType: WrapperGraph.Merge
    fullName: VDS.RDF.WrapperGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: Merge(IGraph, Boolean)
  nameWithType: WrapperGraph.Merge(IGraph, Boolean)
  fullName: VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph,System.Boolean)
    name: Merge
    nameWithType: WrapperGraph.Merge
    fullName: VDS.RDF.WrapperGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph,System.Boolean)
    name: Merge
    nameWithType: WrapperGraph.Merge
    fullName: VDS.RDF.WrapperGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Equals(System.Object)
  commentId: M:VDS.RDF.WrapperGraph.Equals(System.Object)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: Equals(Object)
  nameWithType: WrapperGraph.Equals(Object)
  fullName: VDS.RDF.WrapperGraph.Equals(System.Object)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.Equals(System.Object)
    name: Equals
    nameWithType: WrapperGraph.Equals
    fullName: VDS.RDF.WrapperGraph.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.Equals(System.Object)
    name: Equals
    nameWithType: WrapperGraph.Equals
    fullName: VDS.RDF.WrapperGraph.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.WrapperGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: Equals(IGraph, Dictionary<INode, INode>)
  nameWithType: WrapperGraph.Equals(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.WrapperGraph.Equals(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: WrapperGraph.Equals(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.WrapperGraph.Equals(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: Equals(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: Equals
    nameWithType: WrapperGraph.Equals
    fullName: VDS.RDF.WrapperGraph.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: Equals
    nameWithType: WrapperGraph.Equals
    fullName: VDS.RDF.WrapperGraph.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph)
  parent: VDS.RDF.WrapperGraph
  name: IsSubGraphOf(IGraph)
  nameWithType: WrapperGraph.IsSubGraphOf(IGraph)
  fullName: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph)
    name: IsSubGraphOf
    nameWithType: WrapperGraph.IsSubGraphOf
    fullName: VDS.RDF.WrapperGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph)
    name: IsSubGraphOf
    nameWithType: WrapperGraph.IsSubGraphOf
    fullName: VDS.RDF.WrapperGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: IsSubGraphOf(IGraph, Dictionary<INode, INode>)
  nameWithType: WrapperGraph.IsSubGraphOf(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: WrapperGraph.IsSubGraphOf(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: IsSubGraphOf(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: IsSubGraphOf
    nameWithType: WrapperGraph.IsSubGraphOf
    fullName: VDS.RDF.WrapperGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: IsSubGraphOf
    nameWithType: WrapperGraph.IsSubGraphOf
    fullName: VDS.RDF.WrapperGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.WrapperGraph
  name: HasSubGraph(IGraph)
  nameWithType: WrapperGraph.HasSubGraph(IGraph)
  fullName: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph)
    name: HasSubGraph
    nameWithType: WrapperGraph.HasSubGraph
    fullName: VDS.RDF.WrapperGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph)
    name: HasSubGraph
    nameWithType: WrapperGraph.HasSubGraph
    fullName: VDS.RDF.WrapperGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: HasSubGraph(IGraph, Dictionary<INode, INode>)
  nameWithType: WrapperGraph.HasSubGraph(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: WrapperGraph.HasSubGraph(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: HasSubGraph(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: HasSubGraph
    nameWithType: WrapperGraph.HasSubGraph
    fullName: VDS.RDF.WrapperGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: HasSubGraph
    nameWithType: WrapperGraph.HasSubGraph
    fullName: VDS.RDF.WrapperGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Difference(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.WrapperGraph.Difference(VDS.RDF.IGraph)
  parent: VDS.RDF.WrapperGraph
  name: Difference(IGraph)
  nameWithType: WrapperGraph.Difference(IGraph)
  fullName: VDS.RDF.WrapperGraph.Difference(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.Difference(VDS.RDF.IGraph)
    name: Difference
    nameWithType: WrapperGraph.Difference
    fullName: VDS.RDF.WrapperGraph.Difference
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.Difference(VDS.RDF.IGraph)
    name: Difference
    nameWithType: WrapperGraph.Difference
    fullName: VDS.RDF.WrapperGraph.Difference
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.ResolveQName(System.String)
  commentId: M:VDS.RDF.WrapperGraph.ResolveQName(System.String)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: ResolveQName(String)
  nameWithType: WrapperGraph.ResolveQName(String)
  fullName: VDS.RDF.WrapperGraph.ResolveQName(System.String)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.ResolveQName(System.String)
    name: ResolveQName
    nameWithType: WrapperGraph.ResolveQName
    fullName: VDS.RDF.WrapperGraph.ResolveQName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.ResolveQName(System.String)
    name: ResolveQName
    nameWithType: WrapperGraph.ResolveQName
    fullName: VDS.RDF.WrapperGraph.ResolveQName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.TripleAsserted
  commentId: E:VDS.RDF.WrapperGraph.TripleAsserted
  parent: VDS.RDF.WrapperGraph
  name: TripleAsserted
  nameWithType: WrapperGraph.TripleAsserted
  fullName: VDS.RDF.WrapperGraph.TripleAsserted
- uid: VDS.RDF.WrapperGraph.TripleRetracted
  commentId: E:VDS.RDF.WrapperGraph.TripleRetracted
  parent: VDS.RDF.WrapperGraph
  name: TripleRetracted
  nameWithType: WrapperGraph.TripleRetracted
  fullName: VDS.RDF.WrapperGraph.TripleRetracted
- uid: VDS.RDF.WrapperGraph.Changed
  commentId: E:VDS.RDF.WrapperGraph.Changed
  parent: VDS.RDF.WrapperGraph
  name: Changed
  nameWithType: WrapperGraph.Changed
  fullName: VDS.RDF.WrapperGraph.Changed
- uid: VDS.RDF.WrapperGraph.ClearRequested
  commentId: E:VDS.RDF.WrapperGraph.ClearRequested
  parent: VDS.RDF.WrapperGraph
  name: ClearRequested
  nameWithType: WrapperGraph.ClearRequested
  fullName: VDS.RDF.WrapperGraph.ClearRequested
- uid: VDS.RDF.WrapperGraph.Cleared
  commentId: E:VDS.RDF.WrapperGraph.Cleared
  parent: VDS.RDF.WrapperGraph
  name: Cleared
  nameWithType: WrapperGraph.Cleared
  fullName: VDS.RDF.WrapperGraph.Cleared
- uid: VDS.RDF.WrapperGraph.MergeRequested
  commentId: E:VDS.RDF.WrapperGraph.MergeRequested
  parent: VDS.RDF.WrapperGraph
  name: MergeRequested
  nameWithType: WrapperGraph.MergeRequested
  fullName: VDS.RDF.WrapperGraph.MergeRequested
- uid: VDS.RDF.WrapperGraph.Merged
  commentId: E:VDS.RDF.WrapperGraph.Merged
  parent: VDS.RDF.WrapperGraph
  name: Merged
  nameWithType: WrapperGraph.Merged
  fullName: VDS.RDF.WrapperGraph.Merged
- uid: VDS.RDF.WrapperGraph.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: OnTripleAsserted(Object, TripleEventArgs)
  nameWithType: WrapperGraph.OnTripleAsserted(Object, TripleEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnTripleAsserted(System.Object, VDS.RDF.TripleEventArgs)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
    name: OnTripleAsserted
    nameWithType: WrapperGraph.OnTripleAsserted
    fullName: VDS.RDF.WrapperGraph.OnTripleAsserted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.TripleEventArgs
    name: TripleEventArgs
    nameWithType: TripleEventArgs
    fullName: VDS.RDF.TripleEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
    name: OnTripleAsserted
    nameWithType: WrapperGraph.OnTripleAsserted
    fullName: VDS.RDF.WrapperGraph.OnTripleAsserted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.TripleEventArgs
    name: TripleEventArgs
    nameWithType: TripleEventArgs
    fullName: VDS.RDF.TripleEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.WrapperGraph
  name: RaiseTripleAsserted(TripleEventArgs)
  nameWithType: WrapperGraph.RaiseTripleAsserted(TripleEventArgs)
  fullName: VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
    name: RaiseTripleAsserted
    nameWithType: WrapperGraph.RaiseTripleAsserted
    fullName: VDS.RDF.WrapperGraph.RaiseTripleAsserted
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.TripleEventArgs
    name: TripleEventArgs
    nameWithType: TripleEventArgs
    fullName: VDS.RDF.TripleEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
    name: RaiseTripleAsserted
    nameWithType: WrapperGraph.RaiseTripleAsserted
    fullName: VDS.RDF.WrapperGraph.RaiseTripleAsserted
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.TripleEventArgs
    name: TripleEventArgs
    nameWithType: TripleEventArgs
    fullName: VDS.RDF.TripleEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.Triple)
  commentId: M:VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.Triple)
  parent: VDS.RDF.WrapperGraph
  name: RaiseTripleAsserted(Triple)
  nameWithType: WrapperGraph.RaiseTripleAsserted(Triple)
  fullName: VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.Triple)
    name: RaiseTripleAsserted
    nameWithType: WrapperGraph.RaiseTripleAsserted
    fullName: VDS.RDF.WrapperGraph.RaiseTripleAsserted
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.Triple)
    name: RaiseTripleAsserted
    nameWithType: WrapperGraph.RaiseTripleAsserted
    fullName: VDS.RDF.WrapperGraph.RaiseTripleAsserted
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: OnTripleRetracted(Object, TripleEventArgs)
  nameWithType: WrapperGraph.OnTripleRetracted(Object, TripleEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnTripleRetracted(System.Object, VDS.RDF.TripleEventArgs)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
    name: OnTripleRetracted
    nameWithType: WrapperGraph.OnTripleRetracted
    fullName: VDS.RDF.WrapperGraph.OnTripleRetracted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.TripleEventArgs
    name: TripleEventArgs
    nameWithType: TripleEventArgs
    fullName: VDS.RDF.TripleEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
    name: OnTripleRetracted
    nameWithType: WrapperGraph.OnTripleRetracted
    fullName: VDS.RDF.WrapperGraph.OnTripleRetracted
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.TripleEventArgs
    name: TripleEventArgs
    nameWithType: TripleEventArgs
    fullName: VDS.RDF.TripleEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.WrapperGraph
  name: RaiseTripleRetracted(TripleEventArgs)
  nameWithType: WrapperGraph.RaiseTripleRetracted(TripleEventArgs)
  fullName: VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
    name: RaiseTripleRetracted
    nameWithType: WrapperGraph.RaiseTripleRetracted
    fullName: VDS.RDF.WrapperGraph.RaiseTripleRetracted
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.TripleEventArgs
    name: TripleEventArgs
    nameWithType: TripleEventArgs
    fullName: VDS.RDF.TripleEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
    name: RaiseTripleRetracted
    nameWithType: WrapperGraph.RaiseTripleRetracted
    fullName: VDS.RDF.WrapperGraph.RaiseTripleRetracted
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.TripleEventArgs
    name: TripleEventArgs
    nameWithType: TripleEventArgs
    fullName: VDS.RDF.TripleEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.Triple)
  commentId: M:VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.Triple)
  parent: VDS.RDF.WrapperGraph
  name: RaiseTripleRetracted(Triple)
  nameWithType: WrapperGraph.RaiseTripleRetracted(Triple)
  fullName: VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.Triple)
    name: RaiseTripleRetracted
    nameWithType: WrapperGraph.RaiseTripleRetracted
    fullName: VDS.RDF.WrapperGraph.RaiseTripleRetracted
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.Triple)
    name: RaiseTripleRetracted
    nameWithType: WrapperGraph.RaiseTripleRetracted
    fullName: VDS.RDF.WrapperGraph.RaiseTripleRetracted
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.OnChanged(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnChanged(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: OnChanged(Object, GraphEventArgs)
  nameWithType: WrapperGraph.OnChanged(Object, GraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnChanged(System.Object, VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.OnChanged(System.Object,VDS.RDF.GraphEventArgs)
    name: OnChanged
    nameWithType: WrapperGraph.OnChanged
    fullName: VDS.RDF.WrapperGraph.OnChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.OnChanged(System.Object,VDS.RDF.GraphEventArgs)
    name: OnChanged
    nameWithType: WrapperGraph.OnChanged
    fullName: VDS.RDF.WrapperGraph.OnChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.WrapperGraph
  name: RaiseGraphChanged(TripleEventArgs)
  nameWithType: WrapperGraph.RaiseGraphChanged(TripleEventArgs)
  fullName: VDS.RDF.WrapperGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
    name: RaiseGraphChanged
    nameWithType: WrapperGraph.RaiseGraphChanged
    fullName: VDS.RDF.WrapperGraph.RaiseGraphChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.TripleEventArgs
    name: TripleEventArgs
    nameWithType: TripleEventArgs
    fullName: VDS.RDF.TripleEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
    name: RaiseGraphChanged
    nameWithType: WrapperGraph.RaiseGraphChanged
    fullName: VDS.RDF.WrapperGraph.RaiseGraphChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.TripleEventArgs
    name: TripleEventArgs
    nameWithType: TripleEventArgs
    fullName: VDS.RDF.TripleEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.RaiseGraphChanged
  commentId: M:VDS.RDF.WrapperGraph.RaiseGraphChanged
  parent: VDS.RDF.WrapperGraph
  name: RaiseGraphChanged()
  nameWithType: WrapperGraph.RaiseGraphChanged()
  fullName: VDS.RDF.WrapperGraph.RaiseGraphChanged()
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.RaiseGraphChanged
    name: RaiseGraphChanged
    nameWithType: WrapperGraph.RaiseGraphChanged
    fullName: VDS.RDF.WrapperGraph.RaiseGraphChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.RaiseGraphChanged
    name: RaiseGraphChanged
    nameWithType: WrapperGraph.RaiseGraphChanged
    fullName: VDS.RDF.WrapperGraph.RaiseGraphChanged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.OnClearRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnClearRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: OnClearRequested(Object, CancellableGraphEventArgs)
  nameWithType: WrapperGraph.OnClearRequested(Object, CancellableGraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnClearRequested(System.Object, VDS.RDF.CancellableGraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.OnClearRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
    name: OnClearRequested
    nameWithType: WrapperGraph.OnClearRequested
    fullName: VDS.RDF.WrapperGraph.OnClearRequested
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.CancellableGraphEventArgs
    name: CancellableGraphEventArgs
    nameWithType: CancellableGraphEventArgs
    fullName: VDS.RDF.CancellableGraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.OnClearRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
    name: OnClearRequested
    nameWithType: WrapperGraph.OnClearRequested
    fullName: VDS.RDF.WrapperGraph.OnClearRequested
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.CancellableGraphEventArgs
    name: CancellableGraphEventArgs
    nameWithType: CancellableGraphEventArgs
    fullName: VDS.RDF.CancellableGraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.RaiseClearRequested(VDS.RDF.CancellableGraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.RaiseClearRequested(VDS.RDF.CancellableGraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  name: RaiseClearRequested(CancellableGraphEventArgs)
  nameWithType: WrapperGraph.RaiseClearRequested(CancellableGraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.RaiseClearRequested(VDS.RDF.CancellableGraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.RaiseClearRequested(VDS.RDF.CancellableGraphEventArgs)
    name: RaiseClearRequested
    nameWithType: WrapperGraph.RaiseClearRequested
    fullName: VDS.RDF.WrapperGraph.RaiseClearRequested
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.CancellableGraphEventArgs
    name: CancellableGraphEventArgs
    nameWithType: CancellableGraphEventArgs
    fullName: VDS.RDF.CancellableGraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.RaiseClearRequested(VDS.RDF.CancellableGraphEventArgs)
    name: RaiseClearRequested
    nameWithType: WrapperGraph.RaiseClearRequested
    fullName: VDS.RDF.WrapperGraph.RaiseClearRequested
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.CancellableGraphEventArgs
    name: CancellableGraphEventArgs
    nameWithType: CancellableGraphEventArgs
    fullName: VDS.RDF.CancellableGraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.OnCleared(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnCleared(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: OnCleared(Object, GraphEventArgs)
  nameWithType: WrapperGraph.OnCleared(Object, GraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnCleared(System.Object, VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.OnCleared(System.Object,VDS.RDF.GraphEventArgs)
    name: OnCleared
    nameWithType: WrapperGraph.OnCleared
    fullName: VDS.RDF.WrapperGraph.OnCleared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.OnCleared(System.Object,VDS.RDF.GraphEventArgs)
    name: OnCleared
    nameWithType: WrapperGraph.OnCleared
    fullName: VDS.RDF.WrapperGraph.OnCleared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.RaiseCleared
  commentId: M:VDS.RDF.WrapperGraph.RaiseCleared
  parent: VDS.RDF.WrapperGraph
  name: RaiseCleared()
  nameWithType: WrapperGraph.RaiseCleared()
  fullName: VDS.RDF.WrapperGraph.RaiseCleared()
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.RaiseCleared
    name: RaiseCleared
    nameWithType: WrapperGraph.RaiseCleared
    fullName: VDS.RDF.WrapperGraph.RaiseCleared
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.RaiseCleared
    name: RaiseCleared
    nameWithType: WrapperGraph.RaiseCleared
    fullName: VDS.RDF.WrapperGraph.RaiseCleared
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.OnMergeRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnMergeRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: OnMergeRequested(Object, CancellableGraphEventArgs)
  nameWithType: WrapperGraph.OnMergeRequested(Object, CancellableGraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnMergeRequested(System.Object, VDS.RDF.CancellableGraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.OnMergeRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
    name: OnMergeRequested
    nameWithType: WrapperGraph.OnMergeRequested
    fullName: VDS.RDF.WrapperGraph.OnMergeRequested
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.CancellableGraphEventArgs
    name: CancellableGraphEventArgs
    nameWithType: CancellableGraphEventArgs
    fullName: VDS.RDF.CancellableGraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.OnMergeRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
    name: OnMergeRequested
    nameWithType: WrapperGraph.OnMergeRequested
    fullName: VDS.RDF.WrapperGraph.OnMergeRequested
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.CancellableGraphEventArgs
    name: CancellableGraphEventArgs
    nameWithType: CancellableGraphEventArgs
    fullName: VDS.RDF.CancellableGraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.RaiseMergeRequested(VDS.RDF.CancellableGraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.RaiseMergeRequested(VDS.RDF.CancellableGraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  name: RaiseMergeRequested(CancellableGraphEventArgs)
  nameWithType: WrapperGraph.RaiseMergeRequested(CancellableGraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.RaiseMergeRequested(VDS.RDF.CancellableGraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.RaiseMergeRequested(VDS.RDF.CancellableGraphEventArgs)
    name: RaiseMergeRequested
    nameWithType: WrapperGraph.RaiseMergeRequested
    fullName: VDS.RDF.WrapperGraph.RaiseMergeRequested
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.CancellableGraphEventArgs
    name: CancellableGraphEventArgs
    nameWithType: CancellableGraphEventArgs
    fullName: VDS.RDF.CancellableGraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.RaiseMergeRequested(VDS.RDF.CancellableGraphEventArgs)
    name: RaiseMergeRequested
    nameWithType: WrapperGraph.RaiseMergeRequested
    fullName: VDS.RDF.WrapperGraph.RaiseMergeRequested
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.CancellableGraphEventArgs
    name: CancellableGraphEventArgs
    nameWithType: CancellableGraphEventArgs
    fullName: VDS.RDF.CancellableGraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.OnMerged(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnMerged(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: OnMerged(Object, GraphEventArgs)
  nameWithType: WrapperGraph.OnMerged(Object, GraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnMerged(System.Object, VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.OnMerged(System.Object,VDS.RDF.GraphEventArgs)
    name: OnMerged
    nameWithType: WrapperGraph.OnMerged
    fullName: VDS.RDF.WrapperGraph.OnMerged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.OnMerged(System.Object,VDS.RDF.GraphEventArgs)
    name: OnMerged
    nameWithType: WrapperGraph.OnMerged
    fullName: VDS.RDF.WrapperGraph.OnMerged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.RaiseMerged
  commentId: M:VDS.RDF.WrapperGraph.RaiseMerged
  parent: VDS.RDF.WrapperGraph
  name: RaiseMerged()
  nameWithType: WrapperGraph.RaiseMerged()
  fullName: VDS.RDF.WrapperGraph.RaiseMerged()
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.RaiseMerged
    name: RaiseMerged
    nameWithType: WrapperGraph.RaiseMerged
    fullName: VDS.RDF.WrapperGraph.RaiseMerged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.RaiseMerged
    name: RaiseMerged
    nameWithType: WrapperGraph.RaiseMerged
    fullName: VDS.RDF.WrapperGraph.RaiseMerged
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.AttachEventHandlers
  commentId: M:VDS.RDF.WrapperGraph.AttachEventHandlers
  parent: VDS.RDF.WrapperGraph
  name: AttachEventHandlers()
  nameWithType: WrapperGraph.AttachEventHandlers()
  fullName: VDS.RDF.WrapperGraph.AttachEventHandlers()
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.AttachEventHandlers
    name: AttachEventHandlers
    nameWithType: WrapperGraph.AttachEventHandlers
    fullName: VDS.RDF.WrapperGraph.AttachEventHandlers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.AttachEventHandlers
    name: AttachEventHandlers
    nameWithType: WrapperGraph.AttachEventHandlers
    fullName: VDS.RDF.WrapperGraph.AttachEventHandlers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Dispose
  commentId: M:VDS.RDF.WrapperGraph.Dispose
  parent: VDS.RDF.WrapperGraph
  name: Dispose()
  nameWithType: WrapperGraph.Dispose()
  fullName: VDS.RDF.WrapperGraph.Dispose()
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.Dispose
    name: Dispose
    nameWithType: WrapperGraph.Dispose
    fullName: VDS.RDF.WrapperGraph.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.Dispose
    name: Dispose
    nameWithType: WrapperGraph.Dispose
    fullName: VDS.RDF.WrapperGraph.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.WrapperGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: WrapperGraph.GetObjectData(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.WrapperGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: WrapperGraph.GetObjectData
    fullName: VDS.RDF.WrapperGraph.GetObjectData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: WrapperGraph.GetObjectData
    fullName: VDS.RDF.WrapperGraph.GetObjectData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetSchema
  commentId: M:VDS.RDF.WrapperGraph.GetSchema
  parent: VDS.RDF.WrapperGraph
  name: GetSchema()
  nameWithType: WrapperGraph.GetSchema()
  fullName: VDS.RDF.WrapperGraph.GetSchema()
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.GetSchema
    name: GetSchema
    nameWithType: WrapperGraph.GetSchema
    fullName: VDS.RDF.WrapperGraph.GetSchema
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.GetSchema
    name: GetSchema
    nameWithType: WrapperGraph.GetSchema
    fullName: VDS.RDF.WrapperGraph.GetSchema
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.WrapperGraph.ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: WrapperGraph.ReadXml(XmlReader)
  fullName: VDS.RDF.WrapperGraph.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: WrapperGraph.ReadXml
    fullName: VDS.RDF.WrapperGraph.ReadXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: WrapperGraph.ReadXml
    fullName: VDS.RDF.WrapperGraph.ReadXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.WrapperGraph.WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.WrapperGraph
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: WrapperGraph.WriteXml(XmlWriter)
  fullName: VDS.RDF.WrapperGraph.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: WrapperGraph.WriteXml
    fullName: VDS.RDF.WrapperGraph.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: WrapperGraph.WriteXml
    fullName: VDS.RDF.WrapperGraph.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  commentId: M:VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  parent: VDS.RDF.Data.DataTables.GraphExtensions
  definition: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  name: ToDataTable()
  nameWithType: GraphExtensions.ToDataTable()
  fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable()
  spec.csharp:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<DynamicGraph>()
  nameWithType: Extensions.AsEnumerable<DynamicGraph>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Dynamic.DynamicGraph>()
  nameWithType.vb: Extensions.AsEnumerable(Of DynamicGraph)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Dynamic.DynamicGraph)()
  name.vb: AsEnumerable(Of DynamicGraph)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<DynamicGraph>
    nameWithType: Extensions.AsEnumerable<DynamicGraph>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Dynamic.DynamicGraph>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of DynamicGraph)
    nameWithType: Extensions.AsEnumerable(Of DynamicGraph)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Dynamic.DynamicGraph)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Assert(INode, INode, INode)
  nameWithType: Extensions.Assert(INode, INode, INode)
  fullName: VDS.RDF.Extensions.Assert(VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Retract(INode, INode, INode)
  nameWithType: Extensions.Retract(INode, INode, INode)
  fullName: VDS.RDF.Extensions.Retract(VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: AssertList<T>(IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: AssertList<T>(INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: AssertList(IEnumerable<INode>)
  nameWithType: Extensions.AssertList(IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: AssertList(INode, IEnumerable<INode>)
  nameWithType: Extensions.AssertList(INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListAsTriples(INode)
  nameWithType: Extensions.GetListAsTriples(INode)
  fullName: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListItems(INode)
  nameWithType: Extensions.GetListItems(INode)
  fullName: VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListNodes(INode)
  nameWithType: Extensions.GetListNodes(INode)
  fullName: VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  name: RetractList(INode)
  nameWithType: Extensions.RetractList(INode)
  fullName: VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: AddToList<T>(INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AddToList<T>(INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AddToList<T>(VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(Of T)(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AddToList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList<T>
    nameWithType: Extensions.AddToList<T>
    fullName: VDS.RDF.Extensions.AddToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList(Of T)
    nameWithType: Extensions.AddToList(Of T)
    fullName: VDS.RDF.Extensions.AddToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: AddToList(INode, IEnumerable<INode>)
  nameWithType: Extensions.AddToList(INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AddToList(VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AddToList(INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: RemoveFromList<T>(INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.RemoveFromList<T>(INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList<T>(VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(Of T)(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: RemoveFromList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList<T>
    nameWithType: Extensions.RemoveFromList<T>
    fullName: VDS.RDF.Extensions.RemoveFromList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList(Of T)
    nameWithType: Extensions.RemoveFromList(Of T)
    fullName: VDS.RDF.Extensions.RemoveFromList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: RemoveFromList(INode, IEnumerable<INode>)
  nameWithType: Extensions.RemoveFromList(INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: RemoveFromList(INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  name: ExecuteQuery(String)
  nameWithType: GraphExtensions.ExecuteQuery(String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, String)
  nameWithType: GraphExtensions.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  name: LoadFromFile(String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromFile(String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  name: LoadFromFile(String)
  nameWithType: GraphExtensions.LoadFromFile(String)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  name: LoadFromUri(Uri, IRdfReader)
  nameWithType: GraphExtensions.LoadFromUri(Uri, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  name: LoadFromUri(Uri)
  nameWithType: GraphExtensions.LoadFromUri(Uri)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  name: LoadFromString(String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromString(String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  name: LoadFromString(String)
  nameWithType: GraphExtensions.LoadFromString(String)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  name: LoadFromEmbeddedResource(String)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(String)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  name: LoadFromEmbeddedResource(String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  name: SaveToFile(String, IRdfWriter)
  nameWithType: GraphExtensions.SaveToFile(String, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(System.String, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  name: SaveToFile(String, IStoreWriter)
  nameWithType: GraphExtensions.SaveToFile(String, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(System.String, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  name: SaveToFile(String)
  nameWithType: GraphExtensions.SaveToFile(String)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  name: SaveToStream(TextWriter, IRdfWriter)
  nameWithType: GraphExtensions.SaveToStream(TextWriter, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  name: SaveToStream(TextWriter, IStoreWriter)
  nameWithType: GraphExtensions.SaveToStream(TextWriter, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  name: SaveToStream(String, TextWriter)
  nameWithType: GraphExtensions.SaveToStream(String, TextWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(System.String, System.IO.TextWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  parent: VDS.RDF.Dynamic.DynamicExtensions
  definition: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  name: AsDynamic(Uri, Uri)
  nameWithType: DynamicExtensions.AsDynamic(Uri, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: true
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  name: ToDataTable(IGraph)
  nameWithType: GraphExtensions.ToDataTable(IGraph)
  fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Data.DataTables.GraphExtensions
  commentId: T:VDS.RDF.Data.DataTables.GraphExtensions
  parent: VDS.RDF.Data.DataTables
  name: GraphExtensions
  nameWithType: GraphExtensions
  fullName: VDS.RDF.Data.DataTables.GraphExtensions
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Assert(IGraph, INode, INode, INode)
  nameWithType: Extensions.Assert(IGraph, INode, INode, INode)
  fullName: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph, VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Retract(IGraph, INode, INode, INode)
  nameWithType: Extensions.Retract(IGraph, INode, INode, INode)
  fullName: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph, VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: AssertList<T>(IGraph, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(IGraph, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(IGraph, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(IGraph, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: AssertList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: AssertList(IGraph, IEnumerable<INode>)
  nameWithType: Extensions.AssertList(IGraph, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(IGraph, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(IGraph, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: AssertList(IGraph, INode, IEnumerable<INode>)
  nameWithType: Extensions.AssertList(IGraph, INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(IGraph, INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(IGraph, INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListAsTriples(IGraph, INode)
  nameWithType: Extensions.GetListAsTriples(IGraph, INode)
  fullName: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListItems(IGraph, INode)
  nameWithType: Extensions.GetListItems(IGraph, INode)
  fullName: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListNodes(IGraph, INode)
  nameWithType: Extensions.GetListNodes(IGraph, INode)
  fullName: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  name: RetractList(IGraph, INode)
  nameWithType: Extensions.RetractList(IGraph, INode)
  fullName: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: AddToList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AddToList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AddToList<T>(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(Of T)(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AddToList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList<T>
    nameWithType: Extensions.AddToList<T>
    fullName: VDS.RDF.Extensions.AddToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList(Of T)
    nameWithType: Extensions.AddToList(Of T)
    fullName: VDS.RDF.Extensions.AddToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: AddToList(IGraph, INode, IEnumerable<INode>)
  nameWithType: Extensions.AddToList(IGraph, INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(IGraph, INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AddToList(IGraph, INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: RemoveFromList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.RemoveFromList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList<T>(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(Of T)(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: RemoveFromList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList<T>
    nameWithType: Extensions.RemoveFromList<T>
    fullName: VDS.RDF.Extensions.RemoveFromList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList(Of T)
    nameWithType: Extensions.RemoveFromList(Of T)
    fullName: VDS.RDF.Extensions.RemoveFromList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: RemoveFromList(IGraph, INode, IEnumerable<INode>)
  nameWithType: Extensions.RemoveFromList(IGraph, INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(IGraph, INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: RemoveFromList(IGraph, INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: ExecuteQuery(IGraph, String)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions
  commentId: T:VDS.RDF.GraphExtensions
  parent: VDS.RDF
  name: GraphExtensions
  nameWithType: GraphExtensions
  fullName: VDS.RDF.GraphExtensions
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  isExternal: true
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, String)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(IGraph, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(IGraph, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromFile(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromFile(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: LoadFromFile(IGraph, String)
  nameWithType: GraphExtensions.LoadFromFile(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromUri(IGraph, Uri, IRdfReader)
  nameWithType: GraphExtensions.LoadFromUri(IGraph, Uri, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph, System.Uri, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  isExternal: true
  name: LoadFromUri(IGraph, Uri)
  nameWithType: GraphExtensions.LoadFromUri(IGraph, Uri)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromString(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromString(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: LoadFromString(IGraph, String)
  nameWithType: GraphExtensions.LoadFromString(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: LoadFromEmbeddedResource(IGraph, String)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromEmbeddedResource(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  isExternal: true
  name: SaveToFile(IGraph, String, IRdfWriter)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  isExternal: true
  name: SaveToFile(IGraph, String, IStoreWriter)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: SaveToFile(IGraph, String)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  isExternal: true
  name: SaveToStream(IGraph, TextWriter, IRdfWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, TextWriter, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.IO.TextWriter, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  isExternal: true
  name: SaveToStream(IGraph, TextWriter, IStoreWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, TextWriter, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.IO.TextWriter, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  isExternal: true
  name: SaveToStream(IGraph, String, TextWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, String, TextWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.String, System.IO.TextWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  isExternal: true
  name: AsDynamic(IGraph, Uri, Uri)
  nameWithType: DynamicExtensions.AsDynamic(IGraph, Uri, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph, System.Uri, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions
  commentId: T:VDS.RDF.Dynamic.DynamicExtensions
  parent: VDS.RDF.Dynamic
  name: DynamicExtensions
  nameWithType: DynamicExtensions
  fullName: VDS.RDF.Dynamic.DynamicExtensions
- uid: VDS.RDF.Data.DataTables
  commentId: N:VDS.RDF.Data.DataTables
  name: VDS.RDF.Data.DataTables
  nameWithType: VDS.RDF.Data.DataTables
  fullName: VDS.RDF.Data.DataTables
- uid: VDS.RDF.Dynamic.DynamicGraph
  commentId: T:VDS.RDF.Dynamic.DynamicGraph
  name: DynamicGraph
  nameWithType: DynamicGraph
  fullName: VDS.RDF.Dynamic.DynamicGraph
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Dynamic.DynamicGraph.#ctor*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.#ctor
  name: DynamicGraph
  nameWithType: DynamicGraph.DynamicGraph
  fullName: VDS.RDF.Dynamic.DynamicGraph.DynamicGraph
- uid: VDS.RDF.Dynamic.DynamicGraph.SubjectBaseUri*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.SubjectBaseUri
  name: SubjectBaseUri
  nameWithType: DynamicGraph.SubjectBaseUri
  fullName: VDS.RDF.Dynamic.DynamicGraph.SubjectBaseUri
- uid: VDS.RDF.Dynamic.DynamicGraph.PredicateBaseUri*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.PredicateBaseUri
  name: PredicateBaseUri
  nameWithType: DynamicGraph.PredicateBaseUri
  fullName: VDS.RDF.Dynamic.DynamicGraph.PredicateBaseUri
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject
  name: IDynamicMetaObjectProvider.GetMetaObject
  nameWithType: DynamicGraph.IDynamicMetaObjectProvider.GetMetaObject
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  nameWithType.vb: DynamicGraph.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  name.vb: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
- uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  parent: System.Dynamic.IDynamicMetaObjectProvider
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: IDynamicMetaObjectProvider.GetMetaObject(Expression)
  fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: IDynamicMetaObjectProvider.GetMetaObject
    fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: IDynamicMetaObjectProvider.GetMetaObject
    fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Dynamic.DynamicMetaObject
  commentId: T:System.Dynamic.DynamicMetaObject
  parent: System.Dynamic
  isExternal: true
  name: DynamicMetaObject
  nameWithType: DynamicMetaObject
  fullName: System.Dynamic.DynamicMetaObject
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: VDS.RDF.Dynamic.DynamicNode
  commentId: T:VDS.RDF.Dynamic.DynamicNode
  parent: VDS.RDF.Dynamic
  name: DynamicNode
  nameWithType: DynamicNode
  fullName: VDS.RDF.Dynamic.DynamicNode
- uid: VDS.RDF.Dynamic.DynamicGraph.Values*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.Values
  name: Values
  nameWithType: DynamicGraph.Values
  fullName: VDS.RDF.Dynamic.DynamicGraph.Values
- uid: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Values
  commentId: P:System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Values
  parent: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Values
  name: Values
  nameWithType: IDictionary<INode, Object>.Values
  fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.Values
  nameWithType.vb: IDictionary(Of INode, Object).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object).Values
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.Values
  commentId: P:System.Collections.Generic.IDictionary{System.String,System.Object}.Values
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Values
  name: Values
  nameWithType: IDictionary<String, Object>.Values
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Values
  nameWithType.vb: IDictionary(Of String, Object).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).Values
- uid: System.Collections.Generic.IDictionary{System.Uri,System.Object}.Values
  commentId: P:System.Collections.Generic.IDictionary{System.Uri,System.Object}.Values
  parent: System.Collections.Generic.IDictionary{System.Uri,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Values
  name: Values
  nameWithType: IDictionary<Uri, Object>.Values
  fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>.Values
  nameWithType.vb: IDictionary(Of Uri, Object).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, System.Object).Values
- uid: System.Collections.Generic.ICollection{System.Object}
  commentId: T:System.Collections.Generic.ICollection{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Object>
  nameWithType: ICollection<Object>
  fullName: System.Collections.Generic.ICollection<System.Object>
  nameWithType.vb: ICollection(Of Object)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Object)
  name.vb: ICollection(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Values
  commentId: P:System.Collections.Generic.IDictionary`2.Values
  isExternal: true
  name: Values
  nameWithType: IDictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Values
  nameWithType.vb: IDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Values
- uid: VDS.RDF.Dynamic.DynamicGraph.Count*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.Count
  name: Count
  nameWithType: DynamicGraph.Count
  fullName: VDS.RDF.Dynamic.DynamicGraph.Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<KeyValuePair<INode, Object>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of INode, Object)).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)).Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<KeyValuePair<String, Object>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Count
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.Count
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.Count
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Count
  name: Count
  nameWithType: ICollection<KeyValuePair<Uri, Object>>.Count
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Count
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Object)).Count
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.Count
  commentId: P:System.Collections.Generic.ICollection`1.Count
  isExternal: true
  name: Count
  nameWithType: ICollection<T>.Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  nameWithType.vb: ICollection(Of T).Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: VDS.RDF.Dynamic.DynamicGraph.IsReadOnly*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.IsReadOnly
  name: IsReadOnly
  nameWithType: DynamicGraph.IsReadOnly
  fullName: VDS.RDF.Dynamic.DynamicGraph.IsReadOnly
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<INode, Object>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of INode, Object)).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)).IsReadOnly
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<String, Object>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).IsReadOnly
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  name: IsReadOnly
  nameWithType: ICollection<KeyValuePair<Uri, Object>>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.IsReadOnly
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Object)).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)).IsReadOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  commentId: P:System.Collections.Generic.ICollection`1.IsReadOnly
  isExternal: true
  name: IsReadOnly
  nameWithType: ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  nameWithType.vb: ICollection(Of T).IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: DynamicGraph.IEnumerable.GetEnumerator
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: DynamicGraph.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IDictionary{VDS#RDF#INode,System#Object}#Keys*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IDictionary{VDS#RDF#INode,System#Object}#Keys
  name: IDictionary<INode, Object>.Keys
  nameWithType: DynamicGraph.IDictionary<INode, Object>.Keys
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.Keys
  nameWithType.vb: DynamicGraph.System.Collections.Generic.IDictionary<VDS.RDF.INode,System.Object>.Keys
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IDictionary<VDS.RDF.INode,System.Object>.Keys
  name.vb: System.Collections.Generic.IDictionary<VDS.RDF.INode,System.Object>.Keys
- uid: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Keys
  commentId: P:System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Keys
  parent: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Keys
  name: Keys
  nameWithType: IDictionary<INode, Object>.Keys
  fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.Keys
  nameWithType.vb: IDictionary(Of INode, Object).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object).Keys
- uid: System.Collections.Generic.ICollection{VDS.RDF.INode}
  commentId: T:System.Collections.Generic.ICollection{VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<INode>
  nameWithType: ICollection<INode>
  fullName: System.Collections.Generic.ICollection<VDS.RDF.INode>
  nameWithType.vb: ICollection(Of INode)
  fullName.vb: System.Collections.Generic.ICollection(Of VDS.RDF.INode)
  name.vb: ICollection(Of INode)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Keys
  commentId: P:System.Collections.Generic.IDictionary`2.Keys
  isExternal: true
  name: Keys
  nameWithType: IDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  nameWithType.vb: IDictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Keys
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: VDS.RDF.Dynamic.DynamicGraph.Item*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.Item
  name: Item
  nameWithType: DynamicGraph.Item
  fullName: VDS.RDF.Dynamic.DynamicGraph.Item
- uid: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Item(VDS.RDF.INode)
  commentId: P:System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Item(VDS.RDF.INode)
  parent: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  name: Item[INode]
  nameWithType: IDictionary<INode, Object>.Item[INode]
  fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.Item[VDS.RDF.INode]
  nameWithType.vb: IDictionary(Of INode, Object).Item(INode)
  fullName.vb: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object).Item(VDS.RDF.INode)
  name.vb: Item(INode)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<INode, Object>.Item
    fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of INode, Object).Item
    fullName: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: System.Collections.Generic.IDictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.IDictionary`2.Item(`0)
  isExternal: true
  name: Item[TKey]
  nameWithType: IDictionary<TKey, TValue>.Item[TKey]
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: IDictionary(Of TKey, TValue).Item(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Item(TKey)
  name.vb: Item(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<TKey, TValue>.Item
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of TKey, TValue).Item
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: VDS.RDF.Dynamic.DynamicGraph.Add*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.Add
  name: Add
  nameWithType: DynamicGraph.Add
  fullName: VDS.RDF.Dynamic.DynamicGraph.Add
- uid: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Add(VDS.RDF.INode,System.Object)
  commentId: M:System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Add(VDS.RDF.INode,System.Object)
  parent: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  name: Add(INode, Object)
  nameWithType: IDictionary<INode, Object>.Add(INode, Object)
  fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.Add(VDS.RDF.INode, System.Object)
  nameWithType.vb: IDictionary(Of INode, Object).Add(INode, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object).Add(VDS.RDF.INode, System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<INode, Object>.Add
    fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of INode, Object).Add
    fullName: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.IDictionary`2.Add(`0,`1)
  isExternal: true
  name: Add(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<TKey, TValue>.Add
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of TKey, TValue).Add
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Add*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Add
  name: ICollection<KeyValuePair<INode, Object>>.Add
  nameWithType: DynamicGraph.ICollection<KeyValuePair<INode, Object>>.Add
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Add
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Add
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Add
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Add
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.Add(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.Add(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(KeyValuePair<INode, Object>)
  nameWithType: ICollection<KeyValuePair<INode, Object>>.Add(KeyValuePair<INode, Object>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Add(System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of INode, Object)).Add(KeyValuePair(Of INode, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)).Add(System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object))
  name.vb: Add(KeyValuePair(Of INode, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<KeyValuePair<INode, Object>>.Add
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of KeyValuePair(Of INode, Object)).Add
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}
  commentId: T:System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<INode, Object>
  nameWithType: KeyValuePair<INode, Object>
  fullName: System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>
  nameWithType.vb: KeyValuePair(Of INode, Object)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)
  name.vb: KeyValuePair(Of INode, Object)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.Contains*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.Contains
  name: Contains
  nameWithType: DynamicGraph.Contains
  fullName: VDS.RDF.Dynamic.DynamicGraph.Contains
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Contains*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Contains
  name: ICollection<KeyValuePair<INode, Object>>.Contains
  nameWithType: DynamicGraph.ICollection<KeyValuePair<INode, Object>>.Contains
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Contains
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Contains
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Contains
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Contains
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.Contains(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.Contains(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(KeyValuePair<INode, Object>)
  nameWithType: ICollection<KeyValuePair<INode, Object>>.Contains(KeyValuePair<INode, Object>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Contains(System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of INode, Object)).Contains(KeyValuePair(Of INode, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)).Contains(System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object))
  name.vb: Contains(KeyValuePair(Of INode, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<KeyValuePair<INode, Object>>.Contains
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of KeyValuePair(Of INode, Object)).Contains
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.ContainsKey*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.ContainsKey
  name: ContainsKey
  nameWithType: DynamicGraph.ContainsKey
  fullName: VDS.RDF.Dynamic.DynamicGraph.ContainsKey
- uid: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.ContainsKey(VDS.RDF.INode)
  commentId: M:System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.ContainsKey(VDS.RDF.INode)
  parent: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  name: ContainsKey(INode)
  nameWithType: IDictionary<INode, Object>.ContainsKey(INode)
  fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.ContainsKey(VDS.RDF.INode)
  nameWithType.vb: IDictionary(Of INode, Object).ContainsKey(INode)
  fullName.vb: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object).ContainsKey(VDS.RDF.INode)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<INode, Object>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of INode, Object).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  isExternal: true
  name: ContainsKey(TKey)
  nameWithType: IDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<TKey, TValue>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of TKey, TValue).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#CopyTo*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#CopyTo
  name: ICollection<KeyValuePair<INode, Object>>.CopyTo
  nameWithType: DynamicGraph.ICollection<KeyValuePair<INode, Object>>.CopyTo
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.CopyTo
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.CopyTo
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.CopyTo
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.CopyTo
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.CopyTo(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.CopyTo(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(KeyValuePair<INode, Object>[], Int32)
  nameWithType: ICollection<KeyValuePair<INode, Object>>.CopyTo(KeyValuePair<INode, Object>[], Int32)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>[], System.Int32)
  nameWithType.vb: ICollection(Of KeyValuePair(Of INode, Object)).CopyTo(KeyValuePair(Of INode, Object)(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)).CopyTo(System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)(), System.Int32)
  name.vb: CopyTo(KeyValuePair(Of INode, Object)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<KeyValuePair<INode, Object>>.CopyTo
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of KeyValuePair(Of INode, Object)).CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}[]
  isExternal: true
  name: KeyValuePair<INode, Object>[]
  nameWithType: KeyValuePair<INode, Object>[]
  fullName: System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>[]
  nameWithType.vb: KeyValuePair(Of INode, Object)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)()
  name.vb: KeyValuePair(Of INode, Object)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#GetEnumerator*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#GetEnumerator
  name: IEnumerable<KeyValuePair<INode, Object>>.GetEnumerator
  nameWithType: DynamicGraph.IEnumerable<KeyValuePair<INode, Object>>.GetEnumerator
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.GetEnumerator
  nameWithType.vb: DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.GetEnumerator
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<INode, Object>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of INode, Object)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<INode, Object>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of INode, Object)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<INode, Object>>
  nameWithType: IEnumerator<KeyValuePair<INode, Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of INode, Object))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object))
  name.vb: IEnumerator(Of KeyValuePair(Of INode, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.Remove*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.Remove
  name: Remove
  nameWithType: DynamicGraph.Remove
  fullName: VDS.RDF.Dynamic.DynamicGraph.Remove
- uid: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Remove(VDS.RDF.INode)
  commentId: M:System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.Remove(VDS.RDF.INode)
  parent: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  name: Remove(INode)
  nameWithType: IDictionary<INode, Object>.Remove(INode)
  fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.Remove(VDS.RDF.INode)
  nameWithType.vb: IDictionary(Of INode, Object).Remove(INode)
  fullName.vb: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object).Remove(VDS.RDF.INode)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<INode, Object>.Remove
    fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of INode, Object).Remove
    fullName: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.IDictionary`2.Remove(`0)
  isExternal: true
  name: Remove(TKey)
  nameWithType: IDictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: IDictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<TKey, TValue>.Remove
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of TKey, TValue).Remove
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Remove*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{VDS#RDF#INode,System#Object}}#Remove
  name: ICollection<KeyValuePair<INode, Object>>.Remove
  nameWithType: DynamicGraph.ICollection<KeyValuePair<INode, Object>>.Remove
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Remove
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Remove
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Remove
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode,System.Object>>.Remove
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.Remove(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}.Remove(System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{VDS.RDF.INode,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(KeyValuePair<INode, Object>)
  nameWithType: ICollection<KeyValuePair<INode, Object>>.Remove(KeyValuePair<INode, Object>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Remove(System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of INode, Object)).Remove(KeyValuePair(Of INode, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)).Remove(System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object))
  name.vb: Remove(KeyValuePair(Of INode, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<KeyValuePair<INode, Object>>.Remove
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<VDS.RDF.INode, System.Object>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of KeyValuePair(Of INode, Object)).Remove
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of VDS.RDF.INode, System.Object)).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.TryGetValue*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.TryGetValue
  name: TryGetValue
  nameWithType: DynamicGraph.TryGetValue
  fullName: VDS.RDF.Dynamic.DynamicGraph.TryGetValue
- uid: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.TryGetValue(VDS.RDF.INode,System.Object@)
  commentId: M:System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}.TryGetValue(VDS.RDF.INode,System.Object@)
  parent: System.Collections.Generic.IDictionary{VDS.RDF.INode,System.Object}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(INode, Object)
  nameWithType: IDictionary<INode, Object>.TryGetValue(INode, Object)
  fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.TryGetValue(VDS.RDF.INode, System.Object)
  nameWithType.vb: IDictionary(Of INode, Object).TryGetValue(INode, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object).TryGetValue(VDS.RDF.INode, System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<INode, Object>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<VDS.RDF.INode, System.Object>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of INode, Object).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of VDS.RDF.INode, System.Object).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  name: TryGetValue(TKey, TValue)
  nameWithType: IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue(TKey, TValue)
  nameWithType.vb: IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<TKey, TValue>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<TKey, TValue>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of TKey, TValue).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of TKey, TValue).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.Keys*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.Keys
  name: Keys
  nameWithType: DynamicGraph.Keys
  fullName: VDS.RDF.Dynamic.DynamicGraph.Keys
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.Keys
  commentId: P:System.Collections.Generic.IDictionary{System.String,System.Object}.Keys
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Keys
  name: Keys
  nameWithType: IDictionary<String, Object>.Keys
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Keys
  nameWithType.vb: IDictionary(Of String, Object).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).Keys
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.Item(System.String)
  commentId: P:System.Collections.Generic.IDictionary{System.String,System.Object}.Item(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  name: Item[String]
  nameWithType: IDictionary<String, Object>.Item[String]
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Item[System.String]
  nameWithType.vb: IDictionary(Of String, Object).Item(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<String, Object>.Item
    fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of String, Object).Item
    fullName: System.Collections.Generic.IDictionary(Of System.String, System.Object).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.Add(System.String,System.Object)
  commentId: M:System.Collections.Generic.IDictionary{System.String,System.Object}.Add(System.String,System.Object)
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  name: Add(String, Object)
  nameWithType: IDictionary<String, Object>.Add(String, Object)
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Add(System.String, System.Object)
  nameWithType.vb: IDictionary(Of String, Object).Add(String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).Add(System.String, System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<String, Object>.Add
    fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of String, Object).Add
    fullName: System.Collections.Generic.IDictionary(Of System.String, System.Object).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add
  name: ICollection<KeyValuePair<String, Object>>.Add
  nameWithType: DynamicGraph.ICollection<KeyValuePair<String, Object>>.Add
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Add
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(KeyValuePair<String, Object>)
  nameWithType: ICollection<KeyValuePair<String, Object>>.Add(KeyValuePair<String, Object>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Add(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).Add(KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Add(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Add(KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<KeyValuePair<String, Object>>.Add
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of KeyValuePair(Of String, Object)).Add
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}
  commentId: T:System.Collections.Generic.KeyValuePair{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<String, Object>
  nameWithType: KeyValuePair<String, Object>
  fullName: System.Collections.Generic.KeyValuePair<System.String, System.Object>
  nameWithType.vb: KeyValuePair(Of String, Object)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.String, System.Object)
  name.vb: KeyValuePair(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains
  name: ICollection<KeyValuePair<String, Object>>.Contains
  nameWithType: DynamicGraph.ICollection<KeyValuePair<String, Object>>.Contains
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Contains
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(KeyValuePair<String, Object>)
  nameWithType: ICollection<KeyValuePair<String, Object>>.Contains(KeyValuePair<String, Object>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Contains(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).Contains(KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Contains(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Contains(KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<KeyValuePair<String, Object>>.Contains
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of KeyValuePair(Of String, Object)).Contains
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.ContainsKey(System.String)
  commentId: M:System.Collections.Generic.IDictionary{System.String,System.Object}.ContainsKey(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  name: ContainsKey(String)
  nameWithType: IDictionary<String, Object>.ContainsKey(String)
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.ContainsKey(System.String)
  nameWithType.vb: IDictionary(Of String, Object).ContainsKey(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).ContainsKey(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<String, Object>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of String, Object).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of System.String, System.Object).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo
  name: ICollection<KeyValuePair<String, Object>>.CopyTo
  nameWithType: DynamicGraph.ICollection<KeyValuePair<String, Object>>.CopyTo
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.CopyTo
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(KeyValuePair<String, Object>[], Int32)
  nameWithType: ICollection<KeyValuePair<String, Object>>.CopyTo(KeyValuePair<String, Object>[], Int32)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair<System.String, System.Object>[], System.Int32)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).CopyTo(KeyValuePair(Of String, Object)(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).CopyTo(System.Collections.Generic.KeyValuePair(Of System.String, System.Object)(), System.Int32)
  name.vb: CopyTo(KeyValuePair(Of String, Object)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<KeyValuePair<String, Object>>.CopyTo
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of KeyValuePair(Of String, Object)).CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}[]
  isExternal: true
  name: KeyValuePair<String, Object>[]
  nameWithType: KeyValuePair<String, Object>[]
  fullName: System.Collections.Generic.KeyValuePair<System.String, System.Object>[]
  nameWithType.vb: KeyValuePair(Of String, Object)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.String, System.Object)()
  name.vb: KeyValuePair(Of String, Object)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator
  name: IEnumerable<KeyValuePair<String, Object>>.GetEnumerator
  nameWithType: DynamicGraph.IEnumerable<KeyValuePair<String, Object>>.GetEnumerator
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.GetEnumerator
  nameWithType.vb: DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<String, Object>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<String, Object>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<String, Object>>
  nameWithType: IEnumerator<KeyValuePair<String, Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String, System.Object>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: IEnumerator(Of KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.Remove(System.String)
  commentId: M:System.Collections.Generic.IDictionary{System.String,System.Object}.Remove(System.String)
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  name: Remove(String)
  nameWithType: IDictionary<String, Object>.Remove(String)
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Remove(System.String)
  nameWithType.vb: IDictionary(Of String, Object).Remove(String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).Remove(System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<String, Object>.Remove
    fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of String, Object).Remove
    fullName: System.Collections.Generic.IDictionary(Of System.String, System.Object).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove
  name: ICollection<KeyValuePair<String, Object>>.Remove
  nameWithType: DynamicGraph.ICollection<KeyValuePair<String, Object>>.Remove
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Remove
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(KeyValuePair<String, Object>)
  nameWithType: ICollection<KeyValuePair<String, Object>>.Remove(KeyValuePair<String, Object>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Remove(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of String, Object)).Remove(KeyValuePair(Of String, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Remove(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Remove(KeyValuePair(Of String, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<KeyValuePair<String, Object>>.Remove
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String, System.Object>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of KeyValuePair(Of String, Object)).Remove
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.String, System.Object)).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}.TryGetValue(System.String,System.Object@)
  commentId: M:System.Collections.Generic.IDictionary{System.String,System.Object}.TryGetValue(System.String,System.Object@)
  parent: System.Collections.Generic.IDictionary{System.String,System.Object}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(String, Object)
  nameWithType: IDictionary<String, Object>.TryGetValue(String, Object)
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.TryGetValue(System.String, System.Object)
  nameWithType.vb: IDictionary(Of String, Object).TryGetValue(String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object).TryGetValue(System.String, System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<String, Object>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<System.String, System.Object>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of String, Object).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of System.String, System.Object).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IDictionary{System#Uri,System#Object}#Keys*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IDictionary{System#Uri,System#Object}#Keys
  name: IDictionary<Uri, Object>.Keys
  nameWithType: DynamicGraph.IDictionary<Uri, Object>.Keys
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IDictionary<System.Uri, System.Object>.Keys
  nameWithType.vb: DynamicGraph.System.Collections.Generic.IDictionary<System.Uri,System.Object>.Keys
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IDictionary<System.Uri,System.Object>.Keys
  name.vb: System.Collections.Generic.IDictionary<System.Uri,System.Object>.Keys
- uid: System.Collections.Generic.IDictionary{System.Uri,System.Object}.Keys
  commentId: P:System.Collections.Generic.IDictionary{System.Uri,System.Object}.Keys
  parent: System.Collections.Generic.IDictionary{System.Uri,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Keys
  name: Keys
  nameWithType: IDictionary<Uri, Object>.Keys
  fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>.Keys
  nameWithType.vb: IDictionary(Of Uri, Object).Keys
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, System.Object).Keys
- uid: System.Collections.Generic.ICollection{System.Uri}
  commentId: T:System.Collections.Generic.ICollection{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Uri>
  nameWithType: ICollection<Uri>
  fullName: System.Collections.Generic.ICollection<System.Uri>
  nameWithType.vb: ICollection(Of Uri)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Uri)
  name.vb: ICollection(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.Uri,System.Object}.Item(System.Uri)
  commentId: P:System.Collections.Generic.IDictionary{System.Uri,System.Object}.Item(System.Uri)
  parent: System.Collections.Generic.IDictionary{System.Uri,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Item(`0)
  name: Item[Uri]
  nameWithType: IDictionary<Uri, Object>.Item[Uri]
  fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>.Item[System.Uri]
  nameWithType.vb: IDictionary(Of Uri, Object).Item(Uri)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, System.Object).Item(System.Uri)
  name.vb: Item(Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary<Uri, Object>.Item
    fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>.Item
    isExternal: true
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Item(`0)
    name: Item
    nameWithType: IDictionary(Of Uri, Object).Item
    fullName: System.Collections.Generic.IDictionary(Of System.Uri, System.Object).Item
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.Uri,System.Object}.Add(System.Uri,System.Object)
  commentId: M:System.Collections.Generic.IDictionary{System.Uri,System.Object}.Add(System.Uri,System.Object)
  parent: System.Collections.Generic.IDictionary{System.Uri,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Add(`0,`1)
  name: Add(Uri, Object)
  nameWithType: IDictionary<Uri, Object>.Add(Uri, Object)
  fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>.Add(System.Uri, System.Object)
  nameWithType.vb: IDictionary(Of Uri, Object).Add(Uri, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, System.Object).Add(System.Uri, System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary<Uri, Object>.Add
    fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)
    name: Add
    nameWithType: IDictionary(Of Uri, Object).Add
    fullName: System.Collections.Generic.IDictionary(Of System.Uri, System.Object).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Add*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Add
  name: ICollection<KeyValuePair<Uri, Object>>.Add
  nameWithType: DynamicGraph.ICollection<KeyValuePair<Uri, Object>>.Add
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Add
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Add
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Add
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Add
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.Add(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.Add(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(KeyValuePair<Uri, Object>)
  nameWithType: ICollection<KeyValuePair<Uri, Object>>.Add(KeyValuePair<Uri, Object>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Add(System.Collections.Generic.KeyValuePair<System.Uri, System.Object>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Object)).Add(KeyValuePair(Of Uri, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)).Add(System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object))
  name.vb: Add(KeyValuePair(Of Uri, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<KeyValuePair<Uri, Object>>.Add
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of KeyValuePair(Of Uri, Object)).Add
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{System.Uri,System.Object}
  commentId: T:System.Collections.Generic.KeyValuePair{System.Uri,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<Uri, Object>
  nameWithType: KeyValuePair<Uri, Object>
  fullName: System.Collections.Generic.KeyValuePair<System.Uri, System.Object>
  nameWithType.vb: KeyValuePair(Of Uri, Object)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)
  name.vb: KeyValuePair(Of Uri, Object)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Contains*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Contains
  name: ICollection<KeyValuePair<Uri, Object>>.Contains
  nameWithType: DynamicGraph.ICollection<KeyValuePair<Uri, Object>>.Contains
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Contains
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Contains
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Contains
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Contains
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.Contains(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.Contains(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(KeyValuePair<Uri, Object>)
  nameWithType: ICollection<KeyValuePair<Uri, Object>>.Contains(KeyValuePair<Uri, Object>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Contains(System.Collections.Generic.KeyValuePair<System.Uri, System.Object>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Object)).Contains(KeyValuePair(Of Uri, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)).Contains(System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object))
  name.vb: Contains(KeyValuePair(Of Uri, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<KeyValuePair<Uri, Object>>.Contains
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of KeyValuePair(Of Uri, Object)).Contains
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.Uri,System.Object}.ContainsKey(System.Uri)
  commentId: M:System.Collections.Generic.IDictionary{System.Uri,System.Object}.ContainsKey(System.Uri)
  parent: System.Collections.Generic.IDictionary{System.Uri,System.Object}
  definition: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
  name: ContainsKey(Uri)
  nameWithType: IDictionary<Uri, Object>.ContainsKey(Uri)
  fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>.ContainsKey(System.Uri)
  nameWithType.vb: IDictionary(Of Uri, Object).ContainsKey(Uri)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, System.Object).ContainsKey(System.Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary<Uri, Object>.ContainsKey
    fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>.ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)
    name: ContainsKey
    nameWithType: IDictionary(Of Uri, Object).ContainsKey
    fullName: System.Collections.Generic.IDictionary(Of System.Uri, System.Object).ContainsKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#CopyTo*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#CopyTo
  name: ICollection<KeyValuePair<Uri, Object>>.CopyTo
  nameWithType: DynamicGraph.ICollection<KeyValuePair<Uri, Object>>.CopyTo
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.CopyTo
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.CopyTo
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.CopyTo
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.CopyTo
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,System.Object}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.CopyTo(System.Collections.Generic.KeyValuePair{System.Uri,System.Object}[],System.Int32)
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(KeyValuePair<Uri, Object>[], Int32)
  nameWithType: ICollection<KeyValuePair<Uri, Object>>.CopyTo(KeyValuePair<Uri, Object>[], Int32)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.CopyTo(System.Collections.Generic.KeyValuePair<System.Uri, System.Object>[], System.Int32)
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Object)).CopyTo(KeyValuePair(Of Uri, Object)(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)).CopyTo(System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)(), System.Int32)
  name.vb: CopyTo(KeyValuePair(Of Uri, Object)(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<KeyValuePair<Uri, Object>>.CopyTo
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of KeyValuePair(Of Uri, Object)).CopyTo
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{System.Uri,System.Object}[]
  isExternal: true
  name: KeyValuePair<Uri, Object>[]
  nameWithType: KeyValuePair<Uri, Object>[]
  fullName: System.Collections.Generic.KeyValuePair<System.Uri, System.Object>[]
  nameWithType.vb: KeyValuePair(Of Uri, Object)()
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)()
  name.vb: KeyValuePair(Of Uri, Object)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#GetEnumerator*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#GetEnumerator
  name: IEnumerable<KeyValuePair<Uri, Object>>.GetEnumerator
  nameWithType: DynamicGraph.IEnumerable<KeyValuePair<Uri, Object>>.GetEnumerator
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.GetEnumerator
  nameWithType.vb: DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.GetEnumerator
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<KeyValuePair<Uri, Object>>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Uri, Object)).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<KeyValuePair<Uri, Object>>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of KeyValuePair(Of Uri, Object)).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<Uri, Object>>
  nameWithType: IEnumerator<KeyValuePair<Uri, Object>>
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>
  nameWithType.vb: IEnumerator(Of KeyValuePair(Of Uri, Object))
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object))
  name.vb: IEnumerator(Of KeyValuePair(Of Uri, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.Uri,System.Object}.Remove(System.Uri)
  commentId: M:System.Collections.Generic.IDictionary{System.Uri,System.Object}.Remove(System.Uri)
  parent: System.Collections.Generic.IDictionary{System.Uri,System.Object}
  definition: System.Collections.Generic.IDictionary`2.Remove(`0)
  name: Remove(Uri)
  nameWithType: IDictionary<Uri, Object>.Remove(Uri)
  fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>.Remove(System.Uri)
  nameWithType.vb: IDictionary(Of Uri, Object).Remove(Uri)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, System.Object).Remove(System.Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary<Uri, Object>.Remove
    fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.Remove(`0)
    name: Remove
    nameWithType: IDictionary(Of Uri, Object).Remove
    fullName: System.Collections.Generic.IDictionary(Of System.Uri, System.Object).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Remove*
  commentId: Overload:VDS.RDF.Dynamic.DynamicGraph.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#Uri,System#Object}}#Remove
  name: ICollection<KeyValuePair<Uri, Object>>.Remove
  nameWithType: DynamicGraph.ICollection<KeyValuePair<Uri, Object>>.Remove
  fullName: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Remove
  nameWithType.vb: DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Remove
  fullName.vb: VDS.RDF.Dynamic.DynamicGraph.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Remove
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri,System.Object>>.Remove
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.Remove(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  commentId: M:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}.Remove(System.Collections.Generic.KeyValuePair{System.Uri,System.Object})
  parent: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.Uri,System.Object}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(KeyValuePair<Uri, Object>)
  nameWithType: ICollection<KeyValuePair<Uri, Object>>.Remove(KeyValuePair<Uri, Object>)
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Remove(System.Collections.Generic.KeyValuePair<System.Uri, System.Object>)
  nameWithType.vb: ICollection(Of KeyValuePair(Of Uri, Object)).Remove(KeyValuePair(Of Uri, Object))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)).Remove(System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object))
  name.vb: Remove(KeyValuePair(Of Uri, Object))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<KeyValuePair<Uri, Object>>.Remove
    fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.Uri, System.Object>>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of KeyValuePair(Of Uri, Object)).Remove
    fullName: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of System.Uri, System.Object)).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary{System.Uri,System.Object}.TryGetValue(System.Uri,System.Object@)
  commentId: M:System.Collections.Generic.IDictionary{System.Uri,System.Object}.TryGetValue(System.Uri,System.Object@)
  parent: System.Collections.Generic.IDictionary{System.Uri,System.Object}
  definition: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(Uri, Object)
  nameWithType: IDictionary<Uri, Object>.TryGetValue(Uri, Object)
  fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>.TryGetValue(System.Uri, System.Object)
  nameWithType.vb: IDictionary(Of Uri, Object).TryGetValue(Uri, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Uri, System.Object).TryGetValue(System.Uri, System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary<Uri, Object>.TryGetValue
    fullName: System.Collections.Generic.IDictionary<System.Uri, System.Object>.TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    nameWithType: IDictionary(Of Uri, Object).TryGetValue
    fullName: System.Collections.Generic.IDictionary(Of System.Uri, System.Object).TryGetValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
