### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Validation.SparqlQueryValidator
  commentId: T:VDS.RDF.Parsing.Validation.SparqlQueryValidator
  id: SparqlQueryValidator
  parent: VDS.RDF.Parsing.Validation
  children:
  - VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor
  - VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor(VDS.RDF.Parsing.SparqlQueryParser)
  - VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor(VDS.RDF.Parsing.SparqlQuerySyntax)
  - VDS.RDF.Parsing.Validation.SparqlQueryValidator.Validate(System.String)
  langs:
  - csharp
  - vb
  name: SparqlQueryValidator
  nameWithType: SparqlQueryValidator
  fullName: VDS.RDF.Parsing.Validation.SparqlQueryValidator
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SparqlQueryValidator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlQueryValidator
    path: Libraries/dotNetRDF/Parsing/Validation/SparqlQueryValidator.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nSyntax Validator for SPARQL Queries.\n"
  example: []
  syntax:
    content: 'public class SparqlQueryValidator : ISyntaxValidator'
    content.vb: >-
      Public Class SparqlQueryValidator
          Implements ISyntaxValidator
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Parsing.Validation.ISyntaxValidator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.Validation.SparqlQueryValidator.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor
  commentId: M:VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor
  id: '#ctor'
  parent: VDS.RDF.Parsing.Validation.SparqlQueryValidator
  langs:
  - csharp
  - vb
  name: SparqlQueryValidator()
  nameWithType: SparqlQueryValidator.SparqlQueryValidator()
  fullName: VDS.RDF.Parsing.Validation.SparqlQueryValidator.SparqlQueryValidator()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SparqlQueryValidator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/Validation/SparqlQueryValidator.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nCreates a new SPARQL Query Validator.\n"
  example: []
  syntax:
    content: public SparqlQueryValidator()
    content.vb: Public Sub New
  overload: VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor(VDS.RDF.Parsing.SparqlQuerySyntax)
  commentId: M:VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor(VDS.RDF.Parsing.SparqlQuerySyntax)
  id: '#ctor(VDS.RDF.Parsing.SparqlQuerySyntax)'
  parent: VDS.RDF.Parsing.Validation.SparqlQueryValidator
  langs:
  - csharp
  - vb
  name: SparqlQueryValidator(SparqlQuerySyntax)
  nameWithType: SparqlQueryValidator.SparqlQueryValidator(SparqlQuerySyntax)
  fullName: VDS.RDF.Parsing.Validation.SparqlQueryValidator.SparqlQueryValidator(VDS.RDF.Parsing.SparqlQuerySyntax)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SparqlQueryValidator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/Validation/SparqlQueryValidator.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nCreates a new SPARQL Query Validator using the given Syntax.\n"
  example: []
  syntax:
    content: public SparqlQueryValidator(SparqlQuerySyntax syntax)
    parameters:
    - id: syntax
      type: VDS.RDF.Parsing.SparqlQuerySyntax
      description: Query Syntax.
    content.vb: Public Sub New(syntax As SparqlQuerySyntax)
  overload: VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor(VDS.RDF.Parsing.SparqlQueryParser)
  commentId: M:VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor(VDS.RDF.Parsing.SparqlQueryParser)
  id: '#ctor(VDS.RDF.Parsing.SparqlQueryParser)'
  parent: VDS.RDF.Parsing.Validation.SparqlQueryValidator
  langs:
  - csharp
  - vb
  name: SparqlQueryValidator(SparqlQueryParser)
  nameWithType: SparqlQueryValidator.SparqlQueryValidator(SparqlQueryParser)
  fullName: VDS.RDF.Parsing.Validation.SparqlQueryValidator.SparqlQueryValidator(VDS.RDF.Parsing.SparqlQueryParser)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SparqlQueryValidator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/Validation/SparqlQueryValidator.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nCreates a new SPARQL Query Validator using the given Query Parser.\n"
  example: []
  syntax:
    content: public SparqlQueryValidator(SparqlQueryParser parser)
    parameters:
    - id: parser
      type: VDS.RDF.Parsing.SparqlQueryParser
      description: Query Parser.
    content.vb: Public Sub New(parser As SparqlQueryParser)
  overload: VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Validation.SparqlQueryValidator.Validate(System.String)
  commentId: M:VDS.RDF.Parsing.Validation.SparqlQueryValidator.Validate(System.String)
  id: Validate(System.String)
  parent: VDS.RDF.Parsing.Validation.SparqlQueryValidator
  langs:
  - csharp
  - vb
  name: Validate(String)
  nameWithType: SparqlQueryValidator.Validate(String)
  fullName: VDS.RDF.Parsing.Validation.SparqlQueryValidator.Validate(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SparqlQueryValidator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Validate
    path: Libraries/dotNetRDF/Parsing/Validation/SparqlQueryValidator.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nValidates whether the given Data is a valid SPARQL Query.\n"
  example: []
  syntax:
    content: public ISyntaxValidationResults Validate(string data)
    parameters:
    - id: data
      type: System.String
      description: Data.
    return:
      type: VDS.RDF.Parsing.Validation.ISyntaxValidationResults
      description: ''
    content.vb: Public Function Validate(data As String) As ISyntaxValidationResults
  overload: VDS.RDF.Parsing.Validation.SparqlQueryValidator.Validate*
  implements:
  - VDS.RDF.Parsing.Validation.ISyntaxValidator.Validate(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Parsing.Validation
  commentId: N:VDS.RDF.Parsing.Validation
  name: VDS.RDF.Parsing.Validation
  nameWithType: VDS.RDF.Parsing.Validation
  fullName: VDS.RDF.Parsing.Validation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.Validation.ISyntaxValidator
  commentId: T:VDS.RDF.Parsing.Validation.ISyntaxValidator
  parent: VDS.RDF.Parsing.Validation
  name: ISyntaxValidator
  nameWithType: ISyntaxValidator
  fullName: VDS.RDF.Parsing.Validation.ISyntaxValidator
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Validation.SparqlQueryValidator.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlQueryValidator>()
  nameWithType: Extensions.AsEnumerable<SparqlQueryValidator>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Validation.SparqlQueryValidator>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlQueryValidator)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Validation.SparqlQueryValidator)()
  name.vb: AsEnumerable(Of SparqlQueryValidator)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlQueryValidator>
    nameWithType: Extensions.AsEnumerable<SparqlQueryValidator>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Validation.SparqlQueryValidator>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlQueryValidator)
    nameWithType: Extensions.AsEnumerable(Of SparqlQueryValidator)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Validation.SparqlQueryValidator)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor*
  commentId: Overload:VDS.RDF.Parsing.Validation.SparqlQueryValidator.#ctor
  name: SparqlQueryValidator
  nameWithType: SparqlQueryValidator.SparqlQueryValidator
  fullName: VDS.RDF.Parsing.Validation.SparqlQueryValidator.SparqlQueryValidator
- uid: VDS.RDF.Parsing.SparqlQuerySyntax
  commentId: T:VDS.RDF.Parsing.SparqlQuerySyntax
  parent: VDS.RDF.Parsing
  name: SparqlQuerySyntax
  nameWithType: SparqlQuerySyntax
  fullName: VDS.RDF.Parsing.SparqlQuerySyntax
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: VDS.RDF.Parsing.SparqlQueryParser
  commentId: T:VDS.RDF.Parsing.SparqlQueryParser
  parent: VDS.RDF.Parsing
  name: SparqlQueryParser
  nameWithType: SparqlQueryParser
  fullName: VDS.RDF.Parsing.SparqlQueryParser
- uid: VDS.RDF.Parsing.Validation.SparqlQueryValidator.Validate*
  commentId: Overload:VDS.RDF.Parsing.Validation.SparqlQueryValidator.Validate
  name: Validate
  nameWithType: SparqlQueryValidator.Validate
  fullName: VDS.RDF.Parsing.Validation.SparqlQueryValidator.Validate
- uid: VDS.RDF.Parsing.Validation.ISyntaxValidator.Validate(System.String)
  commentId: M:VDS.RDF.Parsing.Validation.ISyntaxValidator.Validate(System.String)
  parent: VDS.RDF.Parsing.Validation.ISyntaxValidator
  isExternal: true
  name: Validate(String)
  nameWithType: ISyntaxValidator.Validate(String)
  fullName: VDS.RDF.Parsing.Validation.ISyntaxValidator.Validate(System.String)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Validation.ISyntaxValidator.Validate(System.String)
    name: Validate
    nameWithType: ISyntaxValidator.Validate
    fullName: VDS.RDF.Parsing.Validation.ISyntaxValidator.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Validation.ISyntaxValidator.Validate(System.String)
    name: Validate
    nameWithType: ISyntaxValidator.Validate
    fullName: VDS.RDF.Parsing.Validation.ISyntaxValidator.Validate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Parsing.Validation.ISyntaxValidationResults
  commentId: T:VDS.RDF.Parsing.Validation.ISyntaxValidationResults
  parent: VDS.RDF.Parsing.Validation
  name: ISyntaxValidationResults
  nameWithType: ISyntaxValidationResults
  fullName: VDS.RDF.Parsing.Validation.ISyntaxValidationResults
shouldSkipMarkup: true
