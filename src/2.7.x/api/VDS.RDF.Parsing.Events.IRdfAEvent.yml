### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Events.IRdfAEvent
  commentId: T:VDS.RDF.Parsing.Events.IRdfAEvent
  id: IRdfAEvent
  parent: VDS.RDF.Parsing.Events
  children:
  - VDS.RDF.Parsing.Events.IRdfAEvent.Attributes
  - VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute(System.String)
  - VDS.RDF.Parsing.Events.IRdfAEvent.Item(System.String)
  langs:
  - csharp
  - vb
  name: IRdfAEvent
  nameWithType: IRdfAEvent
  fullName: VDS.RDF.Parsing.Events.IRdfAEvent
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IRdfAEvent.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IRdfAEvent
    path: Libraries/dotNetRDF/Parsing/Events/IRdfAEvent.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nInterface for RDFa events.\n"
  example: []
  syntax:
    content: 'public interface IRdfAEvent : IEvent'
    content.vb: >-
      Public Interface IRdfAEvent
          Inherits IEvent
  inheritedMembers:
  - VDS.RDF.Parsing.Events.IEvent.EventType
  - VDS.RDF.Parsing.Events.IEvent.Position
  extensionMethods:
  - VDS.RDF.Parsing.Events.IRdfAEvent.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Parsing.Events.IRdfAEvent.Attributes
  commentId: P:VDS.RDF.Parsing.Events.IRdfAEvent.Attributes
  id: Attributes
  parent: VDS.RDF.Parsing.Events.IRdfAEvent
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: IRdfAEvent.Attributes
  fullName: VDS.RDF.Parsing.Events.IRdfAEvent.Attributes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IRdfAEvent.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Attributes
    path: Libraries/dotNetRDF/Parsing/Events/IRdfAEvent.cs
    startLine: 40
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets the attributes of the event i.e. the attributes of the source element.\n"
  example: []
  syntax:
    content: IEnumerable<KeyValuePair<string, string>> Attributes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: ReadOnly Property Attributes As IEnumerable(Of KeyValuePair(Of String, String))
  overload: VDS.RDF.Parsing.Events.IRdfAEvent.Attributes*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute(System.String)
  commentId: M:VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute(System.String)
  id: HasAttribute(System.String)
  parent: VDS.RDF.Parsing.Events.IRdfAEvent
  langs:
  - csharp
  - vb
  name: HasAttribute(String)
  nameWithType: IRdfAEvent.HasAttribute(String)
  fullName: VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IRdfAEvent.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasAttribute
    path: Libraries/dotNetRDF/Parsing/Events/IRdfAEvent.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets whether the Event has a given attribute.\n"
  example: []
  syntax:
    content: bool HasAttribute(string name)
    parameters:
    - id: name
      type: System.String
      description: Attribute Name.
    return:
      type: System.Boolean
      description: ''
    content.vb: Function HasAttribute(name As String) As Boolean
  overload: VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute*
- uid: VDS.RDF.Parsing.Events.IRdfAEvent.Item(System.String)
  commentId: P:VDS.RDF.Parsing.Events.IRdfAEvent.Item(System.String)
  id: Item(System.String)
  parent: VDS.RDF.Parsing.Events.IRdfAEvent
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: IRdfAEvent.Item[String]
  fullName: VDS.RDF.Parsing.Events.IRdfAEvent.Item[System.String]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IRdfAEvent.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: Libraries/dotNetRDF/Parsing/Events/IRdfAEvent.cs
    startLine: 57
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets the value of a specific attribute.\n"
  example: []
  syntax:
    content: string this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: Attribute Name.
    return:
      type: System.String
      description: ''
    content.vb: ReadOnly Property Item(name As String) As String
  overload: VDS.RDF.Parsing.Events.IRdfAEvent.Item*
  nameWithType.vb: IRdfAEvent.Item(String)
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: VDS.RDF.Parsing.Events.IRdfAEvent.Item(System.String)
  name.vb: Item(String)
references:
- uid: VDS.RDF.Parsing.Events
  commentId: N:VDS.RDF.Parsing.Events
  name: VDS.RDF.Parsing.Events
  nameWithType: VDS.RDF.Parsing.Events
  fullName: VDS.RDF.Parsing.Events
- uid: VDS.RDF.Parsing.Events.IEvent.EventType
  commentId: P:VDS.RDF.Parsing.Events.IEvent.EventType
  parent: VDS.RDF.Parsing.Events.IEvent
  name: EventType
  nameWithType: IEvent.EventType
  fullName: VDS.RDF.Parsing.Events.IEvent.EventType
- uid: VDS.RDF.Parsing.Events.IEvent.Position
  commentId: P:VDS.RDF.Parsing.Events.IEvent.Position
  parent: VDS.RDF.Parsing.Events.IEvent
  name: Position
  nameWithType: IEvent.Position
  fullName: VDS.RDF.Parsing.Events.IEvent.Position
- uid: VDS.RDF.Parsing.Events.IRdfAEvent.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IRdfAEvent>()
  nameWithType: Extensions.AsEnumerable<IRdfAEvent>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.IRdfAEvent>()
  nameWithType.vb: Extensions.AsEnumerable(Of IRdfAEvent)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.IRdfAEvent)()
  name.vb: AsEnumerable(Of IRdfAEvent)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IRdfAEvent>
    nameWithType: Extensions.AsEnumerable<IRdfAEvent>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.IRdfAEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IRdfAEvent)
    nameWithType: Extensions.AsEnumerable(Of IRdfAEvent)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.IRdfAEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.IEvent
  commentId: T:VDS.RDF.Parsing.Events.IEvent
  parent: VDS.RDF.Parsing.Events
  name: IEvent
  nameWithType: IEvent
  fullName: VDS.RDF.Parsing.Events.IEvent
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Events.IRdfAEvent.Attributes*
  commentId: Overload:VDS.RDF.Parsing.Events.IRdfAEvent.Attributes
  name: Attributes
  nameWithType: IRdfAEvent.Attributes
  fullName: VDS.RDF.Parsing.Events.IRdfAEvent.Attributes
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute*
  commentId: Overload:VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute
  name: HasAttribute
  nameWithType: IRdfAEvent.HasAttribute
  fullName: VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.Events.IRdfAEvent.Item*
  commentId: Overload:VDS.RDF.Parsing.Events.IRdfAEvent.Item
  name: Item
  nameWithType: IRdfAEvent.Item
  fullName: VDS.RDF.Parsing.Events.IRdfAEvent.Item
shouldSkipMarkup: true
