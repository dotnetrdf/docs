### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Algebra.ILeftJoin
  commentId: T:VDS.RDF.Query.Algebra.ILeftJoin
  id: ILeftJoin
  parent: VDS.RDF.Query.Algebra
  children:
  - VDS.RDF.Query.Algebra.ILeftJoin.Filter
  langs:
  - csharp
  - vb
  name: ILeftJoin
  nameWithType: ILeftJoin
  fullName: VDS.RDF.Query.Algebra.ILeftJoin
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ILeftJoin
    path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
    startLine: 220
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nRepresents an Algebra construct which is a Left Join.\n"
  example: []
  syntax:
    content: 'public interface ILeftJoin : IAbstractJoin, ISparqlAlgebra'
    content.vb: >-
      Public Interface ILeftJoin
          Inherits IAbstractJoin
  inheritedMembers:
  - VDS.RDF.Query.Algebra.IAbstractJoin.Lhs
  - VDS.RDF.Query.Algebra.IAbstractJoin.Rhs
  - VDS.RDF.Query.Algebra.IAbstractJoin.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  - VDS.RDF.Query.Algebra.IAbstractJoin.TransformLhs(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  - VDS.RDF.Query.Algebra.IAbstractJoin.TransformRhs(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  extensionMethods:
  - VDS.RDF.Query.Algebra.ILeftJoin.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Algebra.ILeftJoin.Filter
  commentId: P:VDS.RDF.Query.Algebra.ILeftJoin.Filter
  id: Filter
  parent: VDS.RDF.Query.Algebra.ILeftJoin
  langs:
  - csharp
  - vb
  name: Filter
  nameWithType: ILeftJoin.Filter
  fullName: VDS.RDF.Query.Algebra.ILeftJoin.Filter
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Filter
    path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
    startLine: 226
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the Filter used on the Join.\n"
  example: []
  syntax:
    content: ISparqlFilter Filter { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Filters.ISparqlFilter
    content.vb: ReadOnly Property Filter As ISparqlFilter
  overload: VDS.RDF.Query.Algebra.ILeftJoin.Filter*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VDS.RDF.Query.Algebra
  commentId: N:VDS.RDF.Query.Algebra
  name: VDS.RDF.Query.Algebra
  nameWithType: VDS.RDF.Query.Algebra
  fullName: VDS.RDF.Query.Algebra
- uid: VDS.RDF.Query.Algebra.IAbstractJoin.Lhs
  commentId: P:VDS.RDF.Query.Algebra.IAbstractJoin.Lhs
  parent: VDS.RDF.Query.Algebra.IAbstractJoin
  name: Lhs
  nameWithType: IAbstractJoin.Lhs
  fullName: VDS.RDF.Query.Algebra.IAbstractJoin.Lhs
- uid: VDS.RDF.Query.Algebra.IAbstractJoin.Rhs
  commentId: P:VDS.RDF.Query.Algebra.IAbstractJoin.Rhs
  parent: VDS.RDF.Query.Algebra.IAbstractJoin
  name: Rhs
  nameWithType: IAbstractJoin.Rhs
  fullName: VDS.RDF.Query.Algebra.IAbstractJoin.Rhs
- uid: VDS.RDF.Query.Algebra.IAbstractJoin.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  commentId: M:VDS.RDF.Query.Algebra.IAbstractJoin.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  parent: VDS.RDF.Query.Algebra.IAbstractJoin
  name: Transform(IAlgebraOptimiser)
  nameWithType: IAbstractJoin.Transform(IAlgebraOptimiser)
  fullName: VDS.RDF.Query.Algebra.IAbstractJoin.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.IAbstractJoin.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
    name: Transform
    nameWithType: IAbstractJoin.Transform
    fullName: VDS.RDF.Query.Algebra.IAbstractJoin.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
    name: IAlgebraOptimiser
    nameWithType: IAlgebraOptimiser
    fullName: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.IAbstractJoin.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
    name: Transform
    nameWithType: IAbstractJoin.Transform
    fullName: VDS.RDF.Query.Algebra.IAbstractJoin.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
    name: IAlgebraOptimiser
    nameWithType: IAlgebraOptimiser
    fullName: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.IAbstractJoin.TransformLhs(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  commentId: M:VDS.RDF.Query.Algebra.IAbstractJoin.TransformLhs(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  parent: VDS.RDF.Query.Algebra.IAbstractJoin
  name: TransformLhs(IAlgebraOptimiser)
  nameWithType: IAbstractJoin.TransformLhs(IAlgebraOptimiser)
  fullName: VDS.RDF.Query.Algebra.IAbstractJoin.TransformLhs(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.IAbstractJoin.TransformLhs(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
    name: TransformLhs
    nameWithType: IAbstractJoin.TransformLhs
    fullName: VDS.RDF.Query.Algebra.IAbstractJoin.TransformLhs
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
    name: IAlgebraOptimiser
    nameWithType: IAlgebraOptimiser
    fullName: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.IAbstractJoin.TransformLhs(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
    name: TransformLhs
    nameWithType: IAbstractJoin.TransformLhs
    fullName: VDS.RDF.Query.Algebra.IAbstractJoin.TransformLhs
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
    name: IAlgebraOptimiser
    nameWithType: IAlgebraOptimiser
    fullName: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.IAbstractJoin.TransformRhs(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  commentId: M:VDS.RDF.Query.Algebra.IAbstractJoin.TransformRhs(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  parent: VDS.RDF.Query.Algebra.IAbstractJoin
  name: TransformRhs(IAlgebraOptimiser)
  nameWithType: IAbstractJoin.TransformRhs(IAlgebraOptimiser)
  fullName: VDS.RDF.Query.Algebra.IAbstractJoin.TransformRhs(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.IAbstractJoin.TransformRhs(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
    name: TransformRhs
    nameWithType: IAbstractJoin.TransformRhs
    fullName: VDS.RDF.Query.Algebra.IAbstractJoin.TransformRhs
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
    name: IAlgebraOptimiser
    nameWithType: IAlgebraOptimiser
    fullName: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.IAbstractJoin.TransformRhs(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
    name: TransformRhs
    nameWithType: IAbstractJoin.TransformRhs
    fullName: VDS.RDF.Query.Algebra.IAbstractJoin.TransformRhs
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
    name: IAlgebraOptimiser
    nameWithType: IAlgebraOptimiser
    fullName: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ISparqlAlgebra.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ISparqlAlgebra.Evaluate
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ISparqlAlgebra.Evaluate
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
  commentId: P:VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: Variables
  nameWithType: ISparqlAlgebra.Variables
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
  commentId: P:VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: FloatingVariables
  nameWithType: ISparqlAlgebra.FloatingVariables
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
  commentId: P:VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: FixedVariables
  nameWithType: ISparqlAlgebra.FixedVariables
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: ToQuery()
  nameWithType: ISparqlAlgebra.ToQuery()
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
    name: ToQuery
    nameWithType: ISparqlAlgebra.ToQuery
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
    name: ToQuery
    nameWithType: ISparqlAlgebra.ToQuery
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: ToGraphPattern()
  nameWithType: ISparqlAlgebra.ToGraphPattern()
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
    name: ToGraphPattern
    nameWithType: ISparqlAlgebra.ToGraphPattern
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
    name: ToGraphPattern
    nameWithType: ISparqlAlgebra.ToGraphPattern
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.ILeftJoin.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ILeftJoin>()
  nameWithType: Extensions.AsEnumerable<ILeftJoin>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.ILeftJoin>()
  nameWithType.vb: Extensions.AsEnumerable(Of ILeftJoin)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.ILeftJoin)()
  name.vb: AsEnumerable(Of ILeftJoin)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ILeftJoin>
    nameWithType: Extensions.AsEnumerable<ILeftJoin>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.ILeftJoin>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ILeftJoin)
    nameWithType: Extensions.AsEnumerable(Of ILeftJoin)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.ILeftJoin)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.IAbstractJoin
  commentId: T:VDS.RDF.Query.Algebra.IAbstractJoin
  parent: VDS.RDF.Query.Algebra
  name: IAbstractJoin
  nameWithType: IAbstractJoin
  fullName: VDS.RDF.Query.Algebra.IAbstractJoin
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra
  commentId: T:VDS.RDF.Query.Algebra.ISparqlAlgebra
  parent: VDS.RDF.Query.Algebra
  name: ISparqlAlgebra
  nameWithType: ISparqlAlgebra
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Algebra.ILeftJoin.Filter*
  commentId: Overload:VDS.RDF.Query.Algebra.ILeftJoin.Filter
  name: Filter
  nameWithType: ILeftJoin.Filter
  fullName: VDS.RDF.Query.Algebra.ILeftJoin.Filter
- uid: VDS.RDF.Query.Filters.ISparqlFilter
  commentId: T:VDS.RDF.Query.Filters.ISparqlFilter
  parent: VDS.RDF.Query.Filters
  name: ISparqlFilter
  nameWithType: ISparqlFilter
  fullName: VDS.RDF.Query.Filters.ISparqlFilter
- uid: VDS.RDF.Query.Filters
  commentId: N:VDS.RDF.Query.Filters
  name: VDS.RDF.Query.Filters
  nameWithType: VDS.RDF.Query.Filters
  fullName: VDS.RDF.Query.Filters
shouldSkipMarkup: true
