### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Algebra.SetDistinctnessComparer
  commentId: T:VDS.RDF.Query.Algebra.SetDistinctnessComparer
  id: SetDistinctnessComparer
  parent: VDS.RDF.Query.Algebra
  children:
  - VDS.RDF.Query.Algebra.SetDistinctnessComparer.#ctor
  - VDS.RDF.Query.Algebra.SetDistinctnessComparer.#ctor(System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.Query.Algebra.SetDistinctnessComparer.Equals(VDS.RDF.Query.Algebra.ISet,VDS.RDF.Query.Algebra.ISet)
  - VDS.RDF.Query.Algebra.SetDistinctnessComparer.GetHashCode(VDS.RDF.Query.Algebra.ISet)
  langs:
  - csharp
  - vb
  name: SetDistinctnessComparer
  nameWithType: SetDistinctnessComparer
  fullName: VDS.RDF.Query.Algebra.SetDistinctnessComparer
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/SetDistinctnessComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetDistinctnessComparer
    path: Libraries/dotNetRDF/Query/Algebra/SetDistinctnessComparer.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nComparer for checking whether sets are distinct, check may either be using the entire set or by using only a subset of variables.\n"
  example: []
  syntax:
    content: 'public class SetDistinctnessComparer : IEqualityComparer<ISet>'
    content.vb: >-
      Public Class SetDistinctnessComparer
          Implements IEqualityComparer(Of ISet)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEqualityComparer{VDS.RDF.Query.Algebra.ISet}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Algebra.SetDistinctnessComparer.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Algebra.SetDistinctnessComparer.#ctor
  commentId: M:VDS.RDF.Query.Algebra.SetDistinctnessComparer.#ctor
  id: '#ctor'
  parent: VDS.RDF.Query.Algebra.SetDistinctnessComparer
  langs:
  - csharp
  - vb
  name: SetDistinctnessComparer()
  nameWithType: SetDistinctnessComparer.SetDistinctnessComparer()
  fullName: VDS.RDF.Query.Algebra.SetDistinctnessComparer.SetDistinctnessComparer()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/SetDistinctnessComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Algebra/SetDistinctnessComparer.cs
    startLine: 45
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nCreates a new comparer that compares across all variables.\n"
  example: []
  syntax:
    content: public SetDistinctnessComparer()
    content.vb: Public Sub New
  overload: VDS.RDF.Query.Algebra.SetDistinctnessComparer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Algebra.SetDistinctnessComparer.#ctor(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.Query.Algebra.SetDistinctnessComparer.#ctor(System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String})'
  parent: VDS.RDF.Query.Algebra.SetDistinctnessComparer
  langs:
  - csharp
  - vb
  name: SetDistinctnessComparer(IEnumerable<String>)
  nameWithType: SetDistinctnessComparer.SetDistinctnessComparer(IEnumerable<String>)
  fullName: VDS.RDF.Query.Algebra.SetDistinctnessComparer.SetDistinctnessComparer(System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/SetDistinctnessComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Algebra/SetDistinctnessComparer.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nCreates a new comparer that compare only on the specific variables.\n"
  example: []
  syntax:
    content: public SetDistinctnessComparer(IEnumerable<string> variables)
    parameters:
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Variables.
    content.vb: Public Sub New(variables As IEnumerable(Of String))
  overload: VDS.RDF.Query.Algebra.SetDistinctnessComparer.#ctor*
  nameWithType.vb: SetDistinctnessComparer.SetDistinctnessComparer(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Algebra.SetDistinctnessComparer.SetDistinctnessComparer(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: SetDistinctnessComparer(IEnumerable(Of String))
- uid: VDS.RDF.Query.Algebra.SetDistinctnessComparer.Equals(VDS.RDF.Query.Algebra.ISet,VDS.RDF.Query.Algebra.ISet)
  commentId: M:VDS.RDF.Query.Algebra.SetDistinctnessComparer.Equals(VDS.RDF.Query.Algebra.ISet,VDS.RDF.Query.Algebra.ISet)
  id: Equals(VDS.RDF.Query.Algebra.ISet,VDS.RDF.Query.Algebra.ISet)
  parent: VDS.RDF.Query.Algebra.SetDistinctnessComparer
  langs:
  - csharp
  - vb
  name: Equals(ISet, ISet)
  nameWithType: SetDistinctnessComparer.Equals(ISet, ISet)
  fullName: VDS.RDF.Query.Algebra.SetDistinctnessComparer.Equals(VDS.RDF.Query.Algebra.ISet, VDS.RDF.Query.Algebra.ISet)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/SetDistinctnessComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Query/Algebra/SetDistinctnessComparer.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nDetermines whether the given sets are equal.\n"
  example: []
  syntax:
    content: public bool Equals(ISet x, ISet y)
    parameters:
    - id: x
      type: VDS.RDF.Query.Algebra.ISet
      description: First Set.
    - id: y
      type: VDS.RDF.Query.Algebra.ISet
      description: Second Set.
    return:
      type: System.Boolean
      description: True if sets are equal, false otherwise.
    content.vb: Public Function Equals(x As ISet, y As ISet) As Boolean
  overload: VDS.RDF.Query.Algebra.SetDistinctnessComparer.Equals*
  implements:
  - System.Collections.Generic.IEqualityComparer{VDS.RDF.Query.Algebra.ISet}.Equals(VDS.RDF.Query.Algebra.ISet,VDS.RDF.Query.Algebra.ISet)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Algebra.SetDistinctnessComparer.GetHashCode(VDS.RDF.Query.Algebra.ISet)
  commentId: M:VDS.RDF.Query.Algebra.SetDistinctnessComparer.GetHashCode(VDS.RDF.Query.Algebra.ISet)
  id: GetHashCode(VDS.RDF.Query.Algebra.ISet)
  parent: VDS.RDF.Query.Algebra.SetDistinctnessComparer
  langs:
  - csharp
  - vb
  name: GetHashCode(ISet)
  nameWithType: SetDistinctnessComparer.GetHashCode(ISet)
  fullName: VDS.RDF.Query.Algebra.SetDistinctnessComparer.GetHashCode(VDS.RDF.Query.Algebra.ISet)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/SetDistinctnessComparer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetHashCode
    path: Libraries/dotNetRDF/Query/Algebra/SetDistinctnessComparer.cs
    startLine: 87
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the hash code for a set.\n"
  example: []
  syntax:
    content: public int GetHashCode(ISet obj)
    parameters:
    - id: obj
      type: VDS.RDF.Query.Algebra.ISet
      description: Set.
    return:
      type: System.Int32
      description: Hash Code.
    content.vb: Public Function GetHashCode(obj As ISet) As Integer
  overload: VDS.RDF.Query.Algebra.SetDistinctnessComparer.GetHashCode*
  implements:
  - System.Collections.Generic.IEqualityComparer{VDS.RDF.Query.Algebra.ISet}.GetHashCode(VDS.RDF.Query.Algebra.ISet)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Algebra
  commentId: N:VDS.RDF.Query.Algebra
  name: VDS.RDF.Query.Algebra
  nameWithType: VDS.RDF.Query.Algebra
  fullName: VDS.RDF.Query.Algebra
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEqualityComparer{VDS.RDF.Query.Algebra.ISet}
  commentId: T:System.Collections.Generic.IEqualityComparer{VDS.RDF.Query.Algebra.ISet}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<ISet>
  nameWithType: IEqualityComparer<ISet>
  fullName: System.Collections.Generic.IEqualityComparer<VDS.RDF.Query.Algebra.ISet>
  nameWithType.vb: IEqualityComparer(Of ISet)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of VDS.RDF.Query.Algebra.ISet)
  name.vb: IEqualityComparer(Of ISet)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Algebra.ISet
    name: ISet
    nameWithType: ISet
    fullName: VDS.RDF.Query.Algebra.ISet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Algebra.ISet
    name: ISet
    nameWithType: ISet
    fullName: VDS.RDF.Query.Algebra.ISet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.SetDistinctnessComparer.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SetDistinctnessComparer>()
  nameWithType: Extensions.AsEnumerable<SetDistinctnessComparer>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.SetDistinctnessComparer>()
  nameWithType.vb: Extensions.AsEnumerable(Of SetDistinctnessComparer)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.SetDistinctnessComparer)()
  name.vb: AsEnumerable(Of SetDistinctnessComparer)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SetDistinctnessComparer>
    nameWithType: Extensions.AsEnumerable<SetDistinctnessComparer>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.SetDistinctnessComparer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SetDistinctnessComparer)
    nameWithType: Extensions.AsEnumerable(Of SetDistinctnessComparer)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.SetDistinctnessComparer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEqualityComparer`1
  commentId: T:System.Collections.Generic.IEqualityComparer`1
  isExternal: true
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
  nameWithType.vb: IEqualityComparer(Of T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  name.vb: IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    nameWithType: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Algebra.SetDistinctnessComparer.#ctor*
  commentId: Overload:VDS.RDF.Query.Algebra.SetDistinctnessComparer.#ctor
  name: SetDistinctnessComparer
  nameWithType: SetDistinctnessComparer.SetDistinctnessComparer
  fullName: VDS.RDF.Query.Algebra.SetDistinctnessComparer.SetDistinctnessComparer
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.SetDistinctnessComparer.Equals*
  commentId: Overload:VDS.RDF.Query.Algebra.SetDistinctnessComparer.Equals
  name: Equals
  nameWithType: SetDistinctnessComparer.Equals
  fullName: VDS.RDF.Query.Algebra.SetDistinctnessComparer.Equals
- uid: System.Collections.Generic.IEqualityComparer{VDS.RDF.Query.Algebra.ISet}.Equals(VDS.RDF.Query.Algebra.ISet,VDS.RDF.Query.Algebra.ISet)
  commentId: M:System.Collections.Generic.IEqualityComparer{VDS.RDF.Query.Algebra.ISet}.Equals(VDS.RDF.Query.Algebra.ISet,VDS.RDF.Query.Algebra.ISet)
  parent: System.Collections.Generic.IEqualityComparer{VDS.RDF.Query.Algebra.ISet}
  definition: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  name: Equals(ISet, ISet)
  nameWithType: IEqualityComparer<ISet>.Equals(ISet, ISet)
  fullName: System.Collections.Generic.IEqualityComparer<VDS.RDF.Query.Algebra.ISet>.Equals(VDS.RDF.Query.Algebra.ISet, VDS.RDF.Query.Algebra.ISet)
  nameWithType.vb: IEqualityComparer(Of ISet).Equals(ISet, ISet)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of VDS.RDF.Query.Algebra.ISet).Equals(VDS.RDF.Query.Algebra.ISet, VDS.RDF.Query.Algebra.ISet)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<ISet>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<VDS.RDF.Query.Algebra.ISet>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Algebra.ISet
    name: ISet
    nameWithType: ISet
    fullName: VDS.RDF.Query.Algebra.ISet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Algebra.ISet
    name: ISet
    nameWithType: ISet
    fullName: VDS.RDF.Query.Algebra.ISet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of ISet).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of VDS.RDF.Query.Algebra.ISet).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Algebra.ISet
    name: ISet
    nameWithType: ISet
    fullName: VDS.RDF.Query.Algebra.ISet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Algebra.ISet
    name: ISet
    nameWithType: ISet
    fullName: VDS.RDF.Query.Algebra.ISet
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.ISet
  commentId: T:VDS.RDF.Query.Algebra.ISet
  parent: VDS.RDF.Query.Algebra
  name: ISet
  nameWithType: ISet
  fullName: VDS.RDF.Query.Algebra.ISet
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
  isExternal: true
  name: Equals(T, T)
  nameWithType: IEqualityComparer<T>.Equals(T, T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T, T)
  nameWithType.vb: IEqualityComparer(Of T).Equals(T, T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).Equals(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer<T>.Equals
    fullName: System.Collections.Generic.IEqualityComparer<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)
    name: Equals
    nameWithType: IEqualityComparer(Of T).Equals
    fullName: System.Collections.Generic.IEqualityComparer(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.SetDistinctnessComparer.GetHashCode*
  commentId: Overload:VDS.RDF.Query.Algebra.SetDistinctnessComparer.GetHashCode
  name: GetHashCode
  nameWithType: SetDistinctnessComparer.GetHashCode
  fullName: VDS.RDF.Query.Algebra.SetDistinctnessComparer.GetHashCode
- uid: System.Collections.Generic.IEqualityComparer{VDS.RDF.Query.Algebra.ISet}.GetHashCode(VDS.RDF.Query.Algebra.ISet)
  commentId: M:System.Collections.Generic.IEqualityComparer{VDS.RDF.Query.Algebra.ISet}.GetHashCode(VDS.RDF.Query.Algebra.ISet)
  parent: System.Collections.Generic.IEqualityComparer{VDS.RDF.Query.Algebra.ISet}
  definition: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  name: GetHashCode(ISet)
  nameWithType: IEqualityComparer<ISet>.GetHashCode(ISet)
  fullName: System.Collections.Generic.IEqualityComparer<VDS.RDF.Query.Algebra.ISet>.GetHashCode(VDS.RDF.Query.Algebra.ISet)
  nameWithType.vb: IEqualityComparer(Of ISet).GetHashCode(ISet)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of VDS.RDF.Query.Algebra.ISet).GetHashCode(VDS.RDF.Query.Algebra.ISet)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<ISet>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<VDS.RDF.Query.Algebra.ISet>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Algebra.ISet
    name: ISet
    nameWithType: ISet
    fullName: VDS.RDF.Query.Algebra.ISet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of ISet).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of VDS.RDF.Query.Algebra.ISet).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Algebra.ISet
    name: ISet
    nameWithType: ISet
    fullName: VDS.RDF.Query.Algebra.ISet
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  commentId: M:System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
  isExternal: true
  name: GetHashCode(T)
  nameWithType: IEqualityComparer<T>.GetHashCode(T)
  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)
  nameWithType.vb: IEqualityComparer(Of T).GetHashCode(T)
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode(T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer<T>.GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)
    name: GetHashCode
    nameWithType: IEqualityComparer(Of T).GetHashCode
    fullName: System.Collections.Generic.IEqualityComparer(Of T).GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
