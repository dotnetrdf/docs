### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator
  commentId: T:VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator
  id: DomBasedEventGenerator
  parent: VDS.RDF.Parsing.Events.RdfXml
  children:
  - VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor(System.IO.StreamReader)
  - VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor(System.String)
  - VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor(System.Xml.XmlDocument)
  - VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.GetAllEvents(VDS.RDF.Parsing.Contexts.RdfXmlParserContext)
  langs:
  - csharp
  - vb
  name: DomBasedEventGenerator
  nameWithType: DomBasedEventGenerator
  fullName: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/DomBasedEventGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DomBasedEventGenerator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/DomBasedEventGenerator.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nA DOM Based event generator for RDF/XML parser that uses System.Xml DOM to parse events.\n"
  example: []
  syntax:
    content: 'public class DomBasedEventGenerator : IRdfXmlPreProcessingEventGenerator, IPreProcessingEventGenerator<IRdfXmlEvent, RdfXmlParserContext>, IEventGenerator<IRdfXmlEvent>'
    content.vb: >-
      Public Class DomBasedEventGenerator
          Implements IRdfXmlPreProcessingEventGenerator, IPreProcessingEventGenerator(Of IRdfXmlEvent, RdfXmlParserContext), IEventGenerator(Of IRdfXmlEvent)
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Parsing.Events.IRdfXmlPreProcessingEventGenerator
  - VDS.RDF.Parsing.Events.IPreProcessingEventGenerator{VDS.RDF.Parsing.Events.IRdfXmlEvent,VDS.RDF.Parsing.Contexts.RdfXmlParserContext}
  - VDS.RDF.Parsing.Events.IEventGenerator{VDS.RDF.Parsing.Events.IRdfXmlEvent}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor(System.Xml.XmlDocument)
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor(System.Xml.XmlDocument)
  id: '#ctor(System.Xml.XmlDocument)'
  parent: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator
  langs:
  - csharp
  - vb
  name: DomBasedEventGenerator(XmlDocument)
  nameWithType: DomBasedEventGenerator.DomBasedEventGenerator(XmlDocument)
  fullName: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.DomBasedEventGenerator(System.Xml.XmlDocument)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/DomBasedEventGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/DomBasedEventGenerator.cs
    startLine: 45
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nCreates a new DOM Based event generator.\n"
  example: []
  syntax:
    content: public DomBasedEventGenerator(XmlDocument document)
    parameters:
    - id: document
      type: System.Xml.XmlDocument
      description: XML Document.
    content.vb: Public Sub New(document As XmlDocument)
  overload: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor(System.IO.StreamReader)
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor(System.IO.StreamReader)
  id: '#ctor(System.IO.StreamReader)'
  parent: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator
  langs:
  - csharp
  - vb
  name: DomBasedEventGenerator(StreamReader)
  nameWithType: DomBasedEventGenerator.DomBasedEventGenerator(StreamReader)
  fullName: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.DomBasedEventGenerator(System.IO.StreamReader)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/DomBasedEventGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/DomBasedEventGenerator.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nCreates a new DOM Based event generator.\n"
  example: []
  syntax:
    content: public DomBasedEventGenerator(StreamReader input)
    parameters:
    - id: input
      type: System.IO.StreamReader
      description: Input Stream.
    content.vb: Public Sub New(input As StreamReader)
  overload: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor(System.String)
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator
  langs:
  - csharp
  - vb
  name: DomBasedEventGenerator(String)
  nameWithType: DomBasedEventGenerator.DomBasedEventGenerator(String)
  fullName: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.DomBasedEventGenerator(System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/DomBasedEventGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/DomBasedEventGenerator.cs
    startLine: 64
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nCreates a new DOM Based event generator.\n"
  example: []
  syntax:
    content: public DomBasedEventGenerator(string file)
    parameters:
    - id: file
      type: System.String
      description: Input File.
    content.vb: Public Sub New(file As String)
  overload: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.GetAllEvents(VDS.RDF.Parsing.Contexts.RdfXmlParserContext)
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.GetAllEvents(VDS.RDF.Parsing.Contexts.RdfXmlParserContext)
  id: GetAllEvents(VDS.RDF.Parsing.Contexts.RdfXmlParserContext)
  parent: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator
  langs:
  - csharp
  - vb
  name: GetAllEvents(RdfXmlParserContext)
  nameWithType: DomBasedEventGenerator.GetAllEvents(RdfXmlParserContext)
  fullName: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.GetAllEvents(VDS.RDF.Parsing.Contexts.RdfXmlParserContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/DomBasedEventGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetAllEvents
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/RdfXml/DomBasedEventGenerator.cs
    startLine: 74
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets all events from the XML DOM.\n"
  example: []
  syntax:
    content: public void GetAllEvents(RdfXmlParserContext context)
    parameters:
    - id: context
      type: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
      description: Parser Context.
    content.vb: Public Sub GetAllEvents(context As RdfXmlParserContext)
  overload: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.GetAllEvents*
  implements:
  - VDS.RDF.Parsing.Events.IPreProcessingEventGenerator{VDS.RDF.Parsing.Events.IRdfXmlEvent,VDS.RDF.Parsing.Contexts.RdfXmlParserContext}.GetAllEvents(VDS.RDF.Parsing.Contexts.RdfXmlParserContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Parsing.Events.RdfXml
  commentId: N:VDS.RDF.Parsing.Events.RdfXml
  name: VDS.RDF.Parsing.Events.RdfXml
  nameWithType: VDS.RDF.Parsing.Events.RdfXml
  fullName: VDS.RDF.Parsing.Events.RdfXml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.Events.IRdfXmlPreProcessingEventGenerator
  commentId: T:VDS.RDF.Parsing.Events.IRdfXmlPreProcessingEventGenerator
  parent: VDS.RDF.Parsing.Events
  name: IRdfXmlPreProcessingEventGenerator
  nameWithType: IRdfXmlPreProcessingEventGenerator
  fullName: VDS.RDF.Parsing.Events.IRdfXmlPreProcessingEventGenerator
- uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator{VDS.RDF.Parsing.Events.IRdfXmlEvent,VDS.RDF.Parsing.Contexts.RdfXmlParserContext}
  commentId: T:VDS.RDF.Parsing.Events.IPreProcessingEventGenerator{VDS.RDF.Parsing.Events.IRdfXmlEvent,VDS.RDF.Parsing.Contexts.RdfXmlParserContext}
  parent: VDS.RDF.Parsing.Events
  definition: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2
  name: IPreProcessingEventGenerator<IRdfXmlEvent, RdfXmlParserContext>
  nameWithType: IPreProcessingEventGenerator<IRdfXmlEvent, RdfXmlParserContext>
  fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator<VDS.RDF.Parsing.Events.IRdfXmlEvent, VDS.RDF.Parsing.Contexts.RdfXmlParserContext>
  nameWithType.vb: IPreProcessingEventGenerator(Of IRdfXmlEvent, RdfXmlParserContext)
  fullName.vb: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator(Of VDS.RDF.Parsing.Events.IRdfXmlEvent, VDS.RDF.Parsing.Contexts.RdfXmlParserContext)
  name.vb: IPreProcessingEventGenerator(Of IRdfXmlEvent, RdfXmlParserContext)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2
    name: IPreProcessingEventGenerator
    nameWithType: IPreProcessingEventGenerator
    fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
    name: IRdfXmlEvent
    nameWithType: IRdfXmlEvent
    fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
    name: RdfXmlParserContext
    nameWithType: RdfXmlParserContext
    fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2
    name: IPreProcessingEventGenerator
    nameWithType: IPreProcessingEventGenerator
    fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
    name: IRdfXmlEvent
    nameWithType: IRdfXmlEvent
    fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
    name: RdfXmlParserContext
    nameWithType: RdfXmlParserContext
    fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.IEventGenerator{VDS.RDF.Parsing.Events.IRdfXmlEvent}
  commentId: T:VDS.RDF.Parsing.Events.IEventGenerator{VDS.RDF.Parsing.Events.IRdfXmlEvent}
  parent: VDS.RDF.Parsing.Events
  definition: VDS.RDF.Parsing.Events.IEventGenerator`1
  name: IEventGenerator<IRdfXmlEvent>
  nameWithType: IEventGenerator<IRdfXmlEvent>
  fullName: VDS.RDF.Parsing.Events.IEventGenerator<VDS.RDF.Parsing.Events.IRdfXmlEvent>
  nameWithType.vb: IEventGenerator(Of IRdfXmlEvent)
  fullName.vb: VDS.RDF.Parsing.Events.IEventGenerator(Of VDS.RDF.Parsing.Events.IRdfXmlEvent)
  name.vb: IEventGenerator(Of IRdfXmlEvent)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventGenerator`1
    name: IEventGenerator
    nameWithType: IEventGenerator
    fullName: VDS.RDF.Parsing.Events.IEventGenerator
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
    name: IRdfXmlEvent
    nameWithType: IRdfXmlEvent
    fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventGenerator`1
    name: IEventGenerator
    nameWithType: IEventGenerator
    fullName: VDS.RDF.Parsing.Events.IEventGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
    name: IRdfXmlEvent
    nameWithType: IRdfXmlEvent
    fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<DomBasedEventGenerator>()
  nameWithType: Extensions.AsEnumerable<DomBasedEventGenerator>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator>()
  nameWithType.vb: Extensions.AsEnumerable(Of DomBasedEventGenerator)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator)()
  name.vb: AsEnumerable(Of DomBasedEventGenerator)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<DomBasedEventGenerator>
    nameWithType: Extensions.AsEnumerable<DomBasedEventGenerator>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of DomBasedEventGenerator)
    nameWithType: Extensions.AsEnumerable(Of DomBasedEventGenerator)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.Events
  commentId: N:VDS.RDF.Parsing.Events
  name: VDS.RDF.Parsing.Events
  nameWithType: VDS.RDF.Parsing.Events
  fullName: VDS.RDF.Parsing.Events
- uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2
  commentId: T:VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2
  name: IPreProcessingEventGenerator<TEvent, TContext>
  nameWithType: IPreProcessingEventGenerator<TEvent, TContext>
  fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator<TEvent, TContext>
  nameWithType.vb: IPreProcessingEventGenerator(Of TEvent, TContext)
  fullName.vb: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator(Of TEvent, TContext)
  name.vb: IPreProcessingEventGenerator(Of TEvent, TContext)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2
    name: IPreProcessingEventGenerator
    nameWithType: IPreProcessingEventGenerator
    fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator
  - name: <
    nameWithType: <
    fullName: <
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2
    name: IPreProcessingEventGenerator
    nameWithType: IPreProcessingEventGenerator
    fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEvent
    nameWithType: TEvent
    fullName: TEvent
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.IEventGenerator`1
  commentId: T:VDS.RDF.Parsing.Events.IEventGenerator`1
  name: IEventGenerator<T>
  nameWithType: IEventGenerator<T>
  fullName: VDS.RDF.Parsing.Events.IEventGenerator<T>
  nameWithType.vb: IEventGenerator(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.IEventGenerator(Of T)
  name.vb: IEventGenerator(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventGenerator`1
    name: IEventGenerator
    nameWithType: IEventGenerator
    fullName: VDS.RDF.Parsing.Events.IEventGenerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventGenerator`1
    name: IEventGenerator
    nameWithType: IEventGenerator
    fullName: VDS.RDF.Parsing.Events.IEventGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.#ctor
  name: DomBasedEventGenerator
  nameWithType: DomBasedEventGenerator.DomBasedEventGenerator
  fullName: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.DomBasedEventGenerator
- uid: System.Xml.XmlDocument
  commentId: T:System.Xml.XmlDocument
  parent: System.Xml
  isExternal: true
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: System.IO.StreamReader
  commentId: T:System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.GetAllEvents*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.GetAllEvents
  name: GetAllEvents
  nameWithType: DomBasedEventGenerator.GetAllEvents
  fullName: VDS.RDF.Parsing.Events.RdfXml.DomBasedEventGenerator.GetAllEvents
- uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator{VDS.RDF.Parsing.Events.IRdfXmlEvent,VDS.RDF.Parsing.Contexts.RdfXmlParserContext}.GetAllEvents(VDS.RDF.Parsing.Contexts.RdfXmlParserContext)
  commentId: M:VDS.RDF.Parsing.Events.IPreProcessingEventGenerator{VDS.RDF.Parsing.Events.IRdfXmlEvent,VDS.RDF.Parsing.Contexts.RdfXmlParserContext}.GetAllEvents(VDS.RDF.Parsing.Contexts.RdfXmlParserContext)
  parent: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator{VDS.RDF.Parsing.Events.IRdfXmlEvent,VDS.RDF.Parsing.Contexts.RdfXmlParserContext}
  definition: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents(`1)
  name: GetAllEvents(RdfXmlParserContext)
  nameWithType: IPreProcessingEventGenerator<IRdfXmlEvent, RdfXmlParserContext>.GetAllEvents(RdfXmlParserContext)
  fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator<VDS.RDF.Parsing.Events.IRdfXmlEvent, VDS.RDF.Parsing.Contexts.RdfXmlParserContext>.GetAllEvents(VDS.RDF.Parsing.Contexts.RdfXmlParserContext)
  nameWithType.vb: IPreProcessingEventGenerator(Of IRdfXmlEvent, RdfXmlParserContext).GetAllEvents(RdfXmlParserContext)
  fullName.vb: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator(Of VDS.RDF.Parsing.Events.IRdfXmlEvent, VDS.RDF.Parsing.Contexts.RdfXmlParserContext).GetAllEvents(VDS.RDF.Parsing.Contexts.RdfXmlParserContext)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents(`1)
    name: GetAllEvents
    nameWithType: IPreProcessingEventGenerator<IRdfXmlEvent, RdfXmlParserContext>.GetAllEvents
    fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator<VDS.RDF.Parsing.Events.IRdfXmlEvent, VDS.RDF.Parsing.Contexts.RdfXmlParserContext>.GetAllEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
    name: RdfXmlParserContext
    nameWithType: RdfXmlParserContext
    fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents(`1)
    name: GetAllEvents
    nameWithType: IPreProcessingEventGenerator(Of IRdfXmlEvent, RdfXmlParserContext).GetAllEvents
    fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator(Of VDS.RDF.Parsing.Events.IRdfXmlEvent, VDS.RDF.Parsing.Contexts.RdfXmlParserContext).GetAllEvents
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
    name: RdfXmlParserContext
    nameWithType: RdfXmlParserContext
    fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: RdfXmlParserContext
  nameWithType: RdfXmlParserContext
  fullName: VDS.RDF.Parsing.Contexts.RdfXmlParserContext
- uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents(`1)
  commentId: M:VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents(`1)
  name: GetAllEvents(TContext)
  nameWithType: IPreProcessingEventGenerator<TEvent, TContext>.GetAllEvents(TContext)
  fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator<TEvent, TContext>.GetAllEvents(TContext)
  nameWithType.vb: IPreProcessingEventGenerator(Of TEvent, TContext).GetAllEvents(TContext)
  fullName.vb: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator(Of TEvent, TContext).GetAllEvents(TContext)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents(`1)
    name: GetAllEvents
    nameWithType: IPreProcessingEventGenerator<TEvent, TContext>.GetAllEvents
    fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator<TEvent, TContext>.GetAllEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents(`1)
    name: GetAllEvents
    nameWithType: IPreProcessingEventGenerator(Of TEvent, TContext).GetAllEvents
    fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator(Of TEvent, TContext).GetAllEvents
  - name: (
    nameWithType: (
    fullName: (
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Contexts
  commentId: N:VDS.RDF.Parsing.Contexts
  name: VDS.RDF.Parsing.Contexts
  nameWithType: VDS.RDF.Parsing.Contexts
  fullName: VDS.RDF.Parsing.Contexts
