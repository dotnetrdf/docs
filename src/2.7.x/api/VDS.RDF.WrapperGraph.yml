### YamlMime:ManagedReference
items:
- uid: VDS.RDF.WrapperGraph
  commentId: T:VDS.RDF.WrapperGraph
  id: WrapperGraph
  parent: VDS.RDF
  children:
  - VDS.RDF.WrapperGraph.#ctor
  - VDS.RDF.WrapperGraph.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.WrapperGraph.#ctor(VDS.RDF.IGraph)
  - VDS.RDF.WrapperGraph._g
  - VDS.RDF.WrapperGraph.AllNodes
  - VDS.RDF.WrapperGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.WrapperGraph.Assert(VDS.RDF.Triple)
  - VDS.RDF.WrapperGraph.AttachEventHandlers
  - VDS.RDF.WrapperGraph.BaseUri
  - VDS.RDF.WrapperGraph.Changed
  - VDS.RDF.WrapperGraph.Clear
  - VDS.RDF.WrapperGraph.Cleared
  - VDS.RDF.WrapperGraph.ClearRequested
  - VDS.RDF.WrapperGraph.ContainsTriple(VDS.RDF.Triple)
  - VDS.RDF.WrapperGraph.CreateBlankNode
  - VDS.RDF.WrapperGraph.CreateBlankNode(System.String)
  - VDS.RDF.WrapperGraph.CreateGraphLiteralNode
  - VDS.RDF.WrapperGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  - VDS.RDF.WrapperGraph.CreateLiteralNode(System.String)
  - VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.String)
  - VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.Uri)
  - VDS.RDF.WrapperGraph.CreateUriNode
  - VDS.RDF.WrapperGraph.CreateUriNode(System.String)
  - VDS.RDF.WrapperGraph.CreateUriNode(System.Uri)
  - VDS.RDF.WrapperGraph.CreateVariableNode(System.String)
  - VDS.RDF.WrapperGraph.Difference(VDS.RDF.IGraph)
  - VDS.RDF.WrapperGraph.Dispose
  - VDS.RDF.WrapperGraph.Equals(System.Object)
  - VDS.RDF.WrapperGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.WrapperGraph.GetBlankNode(System.String)
  - VDS.RDF.WrapperGraph.GetLiteralNode(System.String)
  - VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.String)
  - VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.Uri)
  - VDS.RDF.WrapperGraph.GetNextBlankNodeID
  - VDS.RDF.WrapperGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.WrapperGraph.GetSchema
  - VDS.RDF.WrapperGraph.GetTriples(System.Uri)
  - VDS.RDF.WrapperGraph.GetTriples(VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetTriplesWithObject(System.Uri)
  - VDS.RDF.WrapperGraph.GetTriplesWithObject(VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetTriplesWithPredicate(System.Uri)
  - VDS.RDF.WrapperGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetTriplesWithSubject(System.Uri)
  - VDS.RDF.WrapperGraph.GetTriplesWithSubject(VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.WrapperGraph.GetUriNode(System.String)
  - VDS.RDF.WrapperGraph.GetUriNode(System.Uri)
  - VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph)
  - VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.WrapperGraph.IsEmpty
  - VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph)
  - VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  - VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph)
  - VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.WrapperGraph.Merged
  - VDS.RDF.WrapperGraph.MergeRequested
  - VDS.RDF.WrapperGraph.NamespaceMap
  - VDS.RDF.WrapperGraph.Nodes
  - VDS.RDF.WrapperGraph.OnChanged(System.Object,VDS.RDF.GraphEventArgs)
  - VDS.RDF.WrapperGraph.OnCleared(System.Object,VDS.RDF.GraphEventArgs)
  - VDS.RDF.WrapperGraph.OnClearRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  - VDS.RDF.WrapperGraph.OnMerged(System.Object,VDS.RDF.GraphEventArgs)
  - VDS.RDF.WrapperGraph.OnMergeRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  - VDS.RDF.WrapperGraph.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  - VDS.RDF.WrapperGraph.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  - VDS.RDF.WrapperGraph.RaiseCleared
  - VDS.RDF.WrapperGraph.RaiseClearRequested(VDS.RDF.CancellableGraphEventArgs)
  - VDS.RDF.WrapperGraph.RaiseGraphChanged
  - VDS.RDF.WrapperGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  - VDS.RDF.WrapperGraph.RaiseMerged
  - VDS.RDF.WrapperGraph.RaiseMergeRequested(VDS.RDF.CancellableGraphEventArgs)
  - VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.Triple)
  - VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  - VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.Triple)
  - VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  - VDS.RDF.WrapperGraph.ReadXml(System.Xml.XmlReader)
  - VDS.RDF.WrapperGraph.ResolveQName(System.String)
  - VDS.RDF.WrapperGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  - VDS.RDF.WrapperGraph.Retract(VDS.RDF.Triple)
  - VDS.RDF.WrapperGraph.TripleAsserted
  - VDS.RDF.WrapperGraph.TripleRetracted
  - VDS.RDF.WrapperGraph.Triples
  - VDS.RDF.WrapperGraph.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: WrapperGraph
  nameWithType: WrapperGraph
  fullName: VDS.RDF.WrapperGraph
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WrapperGraph
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAbstract decorator for Graphs to make it easier to layer functionality on top of existing implementations.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public abstract class WrapperGraph : IGraph, INodeFactory, IDisposable, IXmlSerializable, ISerializable
    content.vb: >-
      <Serializable>

      Public MustInherit Class WrapperGraph
          Implements IGraph, INodeFactory, IDisposable, IXmlSerializable, ISerializable
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Dynamic.DynamicGraph
  - VDS.RDF.Shacl.ShapesGraph
  - VDS.RDF.Skos.SkosGraph
  implements:
  - VDS.RDF.IGraph
  - VDS.RDF.INodeFactory
  - System.IDisposable
  - System.Xml.Serialization.IXmlSerializable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.IGraph.VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - VDS.RDF.WrapperGraph.VDS.RDF.Extensions.AsEnumerable``1
  - VDS.RDF.IGraph.VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
  - VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
  - VDS.RDF.IGraph.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.WrapperGraph._g
  commentId: F:VDS.RDF.WrapperGraph._g
  id: _g
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: _g
  nameWithType: WrapperGraph._g
  fullName: VDS.RDF.WrapperGraph._g
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _g
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 52
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nUnderlying Graph this is a wrapper around.\n"
  example: []
  syntax:
    content: protected readonly IGraph _g
    return:
      type: VDS.RDF.IGraph
    content.vb: Protected ReadOnly _g As IGraph
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: VDS.RDF.WrapperGraph.#ctor
  commentId: M:VDS.RDF.WrapperGraph.#ctor
  id: '#ctor'
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: WrapperGraph()
  nameWithType: WrapperGraph.WrapperGraph()
  fullName: VDS.RDF.WrapperGraph.WrapperGraph()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a wrapper around the default Graph implementation, primarily required only for deserialization and requires that the caller call <xref href=\"VDS.RDF.WrapperGraph.AttachEventHandlers\" data-throw-if-not-resolved=\"false\"></xref> to properly wire up event handling.\n"
  example: []
  syntax:
    content: protected WrapperGraph()
    content.vb: Protected Sub New
  overload: VDS.RDF.WrapperGraph.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.#ctor(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.WrapperGraph.#ctor(VDS.RDF.IGraph)
  id: '#ctor(VDS.RDF.IGraph)'
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: WrapperGraph(IGraph)
  nameWithType: WrapperGraph.WrapperGraph(IGraph)
  fullName: VDS.RDF.WrapperGraph.WrapperGraph(VDS.RDF.IGraph)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new wrapper around the given Graph.\n"
  example: []
  syntax:
    content: public WrapperGraph(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    content.vb: Public Sub New(g As IGraph)
  overload: VDS.RDF.WrapperGraph.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.WrapperGraph.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.WrapperGraph.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: WrapperGraph(SerializationInfo, StreamingContext)
  nameWithType: WrapperGraph.WrapperGraph(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.WrapperGraph.WrapperGraph(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 93
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDeserialization Constructor.\n"
  example: []
  syntax:
    content: protected WrapperGraph(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: VDS.RDF.WrapperGraph.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.BaseUri
  commentId: P:VDS.RDF.WrapperGraph.BaseUri
  id: BaseUri
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: WrapperGraph.BaseUri
  fullName: VDS.RDF.WrapperGraph.BaseUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseUri
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 110
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets/Sets the Base URI of the Graph.\n"
  example: []
  syntax:
    content: public virtual Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Overridable Property BaseUri As Uri
  overload: VDS.RDF.WrapperGraph.BaseUri*
  implements:
  - VDS.RDF.IGraph.BaseUri
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.IsEmpty
  commentId: P:VDS.RDF.WrapperGraph.IsEmpty
  id: IsEmpty
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: WrapperGraph.IsEmpty
  fullName: VDS.RDF.WrapperGraph.IsEmpty
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsEmpty
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 119
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether the Graph is empty.\n"
  example: []
  syntax:
    content: public virtual bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsEmpty As Boolean
  overload: VDS.RDF.WrapperGraph.IsEmpty*
  implements:
  - VDS.RDF.IGraph.IsEmpty
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.WrapperGraph.NamespaceMap
  commentId: P:VDS.RDF.WrapperGraph.NamespaceMap
  id: NamespaceMap
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: NamespaceMap
  nameWithType: WrapperGraph.NamespaceMap
  fullName: VDS.RDF.WrapperGraph.NamespaceMap
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NamespaceMap
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 124
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Namespace Map for the Graph.\n"
  example: []
  syntax:
    content: public virtual INamespaceMapper NamespaceMap { get; }
    parameters: []
    return:
      type: VDS.RDF.INamespaceMapper
    content.vb: Public Overridable ReadOnly Property NamespaceMap As INamespaceMapper
  overload: VDS.RDF.WrapperGraph.NamespaceMap*
  implements:
  - VDS.RDF.IGraph.NamespaceMap
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.WrapperGraph.Nodes
  commentId: P:VDS.RDF.WrapperGraph.Nodes
  id: Nodes
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Nodes
  nameWithType: WrapperGraph.Nodes
  fullName: VDS.RDF.WrapperGraph.Nodes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Nodes
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 127
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the unique Subject and Object nodes of the Graph.\n"
  remarks: This property returns only nodes that appear in the Subject or Object position in triples. To retrieve a list of all INode instances in a graph including those in Predicate position in a triple, use the <xref href="VDS.RDF.IGraph.AllNodes" data-throw-if-not-resolved="false"></xref> property.
  example: []
  syntax:
    content: public virtual IEnumerable<INode> Nodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public Overridable ReadOnly Property Nodes As IEnumerable(Of INode)
  overload: VDS.RDF.WrapperGraph.Nodes*
  implements:
  - VDS.RDF.IGraph.Nodes
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.WrapperGraph.AllNodes
  commentId: P:VDS.RDF.WrapperGraph.AllNodes
  id: AllNodes
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: AllNodes
  nameWithType: WrapperGraph.AllNodes
  fullName: VDS.RDF.WrapperGraph.AllNodes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AllNodes
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 131
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the unique Subject, Predicate and Object nodes of the Graph.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<INode> AllNodes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
    content.vb: Public Overridable ReadOnly Property AllNodes As IEnumerable(Of INode)
  overload: VDS.RDF.WrapperGraph.AllNodes*
  implements:
  - VDS.RDF.IGraph.AllNodes
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.WrapperGraph.Triples
  commentId: P:VDS.RDF.WrapperGraph.Triples
  id: Triples
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Triples
  nameWithType: WrapperGraph.Triples
  fullName: VDS.RDF.WrapperGraph.Triples
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Triples
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 136
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Triple Collection for the Graph.\n"
  example: []
  syntax:
    content: public virtual BaseTripleCollection Triples { get; }
    parameters: []
    return:
      type: VDS.RDF.BaseTripleCollection
    content.vb: Public Overridable ReadOnly Property Triples As BaseTripleCollection
  overload: VDS.RDF.WrapperGraph.Triples*
  implements:
  - VDS.RDF.IGraph.Triples
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.WrapperGraph.Assert(VDS.RDF.Triple)
  commentId: M:VDS.RDF.WrapperGraph.Assert(VDS.RDF.Triple)
  id: Assert(VDS.RDF.Triple)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Assert(Triple)
  nameWithType: WrapperGraph.Assert(Triple)
  fullName: VDS.RDF.WrapperGraph.Assert(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Assert
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 142
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAsserts a Triple in the Graph.\n"
  example: []
  syntax:
    content: public virtual bool Assert(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Assert(t As Triple) As Boolean
  overload: VDS.RDF.WrapperGraph.Assert*
  implements:
  - VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.WrapperGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  id: Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Assert(IEnumerable<Triple>)
  nameWithType: WrapperGraph.Assert(IEnumerable<Triple>)
  fullName: VDS.RDF.WrapperGraph.Assert(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Assert
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 151
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAsserts Triples in the Graph.\n"
  example: []
  syntax:
    content: public virtual bool Assert(IEnumerable<Triple> ts)
    parameters:
    - id: ts
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Triples.
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Assert(ts As IEnumerable(Of Triple)) As Boolean
  overload: VDS.RDF.WrapperGraph.Assert*
  implements:
  - VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  nameWithType.vb: WrapperGraph.Assert(IEnumerable(Of Triple))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.WrapperGraph.Assert(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Assert(IEnumerable(Of Triple))
- uid: VDS.RDF.WrapperGraph.Retract(VDS.RDF.Triple)
  commentId: M:VDS.RDF.WrapperGraph.Retract(VDS.RDF.Triple)
  id: Retract(VDS.RDF.Triple)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Retract(Triple)
  nameWithType: WrapperGraph.Retract(Triple)
  fullName: VDS.RDF.WrapperGraph.Retract(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Retract
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 160
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRetracts a Triple from the Graph.\n"
  example: []
  syntax:
    content: public virtual bool Retract(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Retract(t As Triple) As Boolean
  overload: VDS.RDF.WrapperGraph.Retract*
  implements:
  - VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.WrapperGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  id: Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Retract(IEnumerable<Triple>)
  nameWithType: WrapperGraph.Retract(IEnumerable<Triple>)
  fullName: VDS.RDF.WrapperGraph.Retract(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Retract
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 169
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRetracts Triples from the Graph.\n"
  example: []
  syntax:
    content: public virtual bool Retract(IEnumerable<Triple> ts)
    parameters:
    - id: ts
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Triples.
    return:
      type: System.Boolean
    content.vb: Public Overridable Function Retract(ts As IEnumerable(Of Triple)) As Boolean
  overload: VDS.RDF.WrapperGraph.Retract*
  implements:
  - VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  nameWithType.vb: WrapperGraph.Retract(IEnumerable(Of Triple))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.WrapperGraph.Retract(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Retract(IEnumerable(Of Triple))
- uid: VDS.RDF.WrapperGraph.Clear
  commentId: M:VDS.RDF.WrapperGraph.Clear
  id: Clear
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: WrapperGraph.Clear()
  fullName: VDS.RDF.WrapperGraph.Clear()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Clear
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 177
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nClears the Graph.\n"
  example: []
  syntax:
    content: public virtual void Clear()
    content.vb: Public Overridable Sub Clear
  overload: VDS.RDF.WrapperGraph.Clear*
  implements:
  - VDS.RDF.IGraph.Clear
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.CreateBlankNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.CreateBlankNode(System.String)
  id: CreateBlankNode(System.String)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: CreateBlankNode(String)
  nameWithType: WrapperGraph.CreateBlankNode(String)
  fullName: VDS.RDF.WrapperGraph.CreateBlankNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlankNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 187
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Blank Node with the given Node ID.\n"
  example: []
  syntax:
    content: public virtual IBlankNode CreateBlankNode(string nodeId)
    parameters:
    - id: nodeId
      type: System.String
      description: Node ID.
    return:
      type: VDS.RDF.IBlankNode
      description: ''
    content.vb: Public Overridable Function CreateBlankNode(nodeId As String) As IBlankNode
  overload: VDS.RDF.WrapperGraph.CreateBlankNode*
  implements:
  - VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.CreateBlankNode
  commentId: M:VDS.RDF.WrapperGraph.CreateBlankNode
  id: CreateBlankNode
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: CreateBlankNode()
  nameWithType: WrapperGraph.CreateBlankNode()
  fullName: VDS.RDF.WrapperGraph.CreateBlankNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateBlankNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 196
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Blank Node.\n"
  example: []
  syntax:
    content: public virtual IBlankNode CreateBlankNode()
    return:
      type: VDS.RDF.IBlankNode
      description: ''
    content.vb: Public Overridable Function CreateBlankNode As IBlankNode
  overload: VDS.RDF.WrapperGraph.CreateBlankNode*
  implements:
  - VDS.RDF.INodeFactory.CreateBlankNode
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetNextBlankNodeID
  commentId: M:VDS.RDF.WrapperGraph.GetNextBlankNodeID
  id: GetNextBlankNodeID
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetNextBlankNodeID()
  nameWithType: WrapperGraph.GetNextBlankNodeID()
  fullName: VDS.RDF.WrapperGraph.GetNextBlankNodeID()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetNextBlankNodeID
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 205
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the next available Blank Node ID.\n"
  example: []
  syntax:
    content: public virtual string GetNextBlankNodeID()
    return:
      type: System.String
      description: ''
    content.vb: Public Overridable Function GetNextBlankNodeID As String
  overload: VDS.RDF.WrapperGraph.GetNextBlankNodeID*
  implements:
  - VDS.RDF.INodeFactory.GetNextBlankNodeID
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.WrapperGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  id: CreateGraphLiteralNode(VDS.RDF.IGraph)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: CreateGraphLiteralNode(IGraph)
  nameWithType: WrapperGraph.CreateGraphLiteralNode(IGraph)
  fullName: VDS.RDF.WrapperGraph.CreateGraphLiteralNode(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateGraphLiteralNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 215
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Graph Literal Node with the given sub-graph.\n"
  example: []
  syntax:
    content: public virtual IGraphLiteralNode CreateGraphLiteralNode(IGraph subgraph)
    parameters:
    - id: subgraph
      type: VDS.RDF.IGraph
      description: Sub-graph.
    return:
      type: VDS.RDF.IGraphLiteralNode
      description: ''
    content.vb: Public Overridable Function CreateGraphLiteralNode(subgraph As IGraph) As IGraphLiteralNode
  overload: VDS.RDF.WrapperGraph.CreateGraphLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.CreateGraphLiteralNode
  commentId: M:VDS.RDF.WrapperGraph.CreateGraphLiteralNode
  id: CreateGraphLiteralNode
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: CreateGraphLiteralNode()
  nameWithType: WrapperGraph.CreateGraphLiteralNode()
  fullName: VDS.RDF.WrapperGraph.CreateGraphLiteralNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateGraphLiteralNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 224
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Graph Literal Node.\n"
  example: []
  syntax:
    content: public virtual IGraphLiteralNode CreateGraphLiteralNode()
    return:
      type: VDS.RDF.IGraphLiteralNode
      description: ''
    content.vb: Public Overridable Function CreateGraphLiteralNode As IGraphLiteralNode
  overload: VDS.RDF.WrapperGraph.CreateGraphLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateGraphLiteralNode
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.CreateLiteralNode(System.String)
  id: CreateLiteralNode(System.String)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String)
  nameWithType: WrapperGraph.CreateLiteralNode(String)
  fullName: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 234
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Literal Node.\n"
  example: []
  syntax:
    content: public virtual ILiteralNode CreateLiteralNode(string literal)
    parameters:
    - id: literal
      type: System.String
      description: Value.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Overridable Function CreateLiteralNode(literal As String) As ILiteralNode
  overload: VDS.RDF.WrapperGraph.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.Uri)
  id: CreateLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String, Uri)
  nameWithType: WrapperGraph.CreateLiteralNode(String, Uri)
  fullName: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 245
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Literal Node with the given Datatype.\n"
  example: []
  syntax:
    content: public virtual ILiteralNode CreateLiteralNode(string literal, Uri datatype)
    parameters:
    - id: literal
      type: System.String
      description: Value.
    - id: datatype
      type: System.Uri
      description: Datatype URI.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Overridable Function CreateLiteralNode(literal As String, datatype As Uri) As ILiteralNode
  overload: VDS.RDF.WrapperGraph.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.WrapperGraph.CreateLiteralNode(System.String,System.String)
  id: CreateLiteralNode(System.String,System.String)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: CreateLiteralNode(String, String)
  nameWithType: WrapperGraph.CreateLiteralNode(String, String)
  fullName: VDS.RDF.WrapperGraph.CreateLiteralNode(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateLiteralNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 256
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Literal Node with the given Language.\n"
  example: []
  syntax:
    content: public virtual ILiteralNode CreateLiteralNode(string literal, string langspec)
    parameters:
    - id: literal
      type: System.String
      description: Value.
    - id: langspec
      type: System.String
      description: Language.
    return:
      type: VDS.RDF.ILiteralNode
      description: ''
    content.vb: Public Overridable Function CreateLiteralNode(literal As String, langspec As String) As ILiteralNode
  overload: VDS.RDF.WrapperGraph.CreateLiteralNode*
  implements:
  - VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.CreateUriNode
  commentId: M:VDS.RDF.WrapperGraph.CreateUriNode
  id: CreateUriNode
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: CreateUriNode()
  nameWithType: WrapperGraph.CreateUriNode()
  fullName: VDS.RDF.WrapperGraph.CreateUriNode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 265
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new URI Node that references the Graphs Base URI.\n"
  example: []
  syntax:
    content: public virtual IUriNode CreateUriNode()
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Overridable Function CreateUriNode As IUriNode
  overload: VDS.RDF.WrapperGraph.CreateUriNode*
  implements:
  - VDS.RDF.IGraph.CreateUriNode
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.CreateUriNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.CreateUriNode(System.String)
  id: CreateUriNode(System.String)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: CreateUriNode(String)
  nameWithType: WrapperGraph.CreateUriNode(String)
  fullName: VDS.RDF.WrapperGraph.CreateUriNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 275
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new URI Node from a QName.\n"
  example: []
  syntax:
    content: public virtual IUriNode CreateUriNode(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName.
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Overridable Function CreateUriNode(qname As String) As IUriNode
  overload: VDS.RDF.WrapperGraph.CreateUriNode*
  implements:
  - VDS.RDF.IGraph.CreateUriNode(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.CreateUriNode(System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.CreateUriNode(System.Uri)
  id: CreateUriNode(System.Uri)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: CreateUriNode(Uri)
  nameWithType: WrapperGraph.CreateUriNode(Uri)
  fullName: VDS.RDF.WrapperGraph.CreateUriNode(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateUriNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 285
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new URI Node.\n"
  example: []
  syntax:
    content: public virtual IUriNode CreateUriNode(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: URI.
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Overridable Function CreateUriNode(uri As Uri) As IUriNode
  overload: VDS.RDF.WrapperGraph.CreateUriNode*
  implements:
  - VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.CreateVariableNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.CreateVariableNode(System.String)
  id: CreateVariableNode(System.String)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: CreateVariableNode(String)
  nameWithType: WrapperGraph.CreateVariableNode(String)
  fullName: VDS.RDF.WrapperGraph.CreateVariableNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateVariableNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 295
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Variable Node.\n"
  example: []
  syntax:
    content: public virtual IVariableNode CreateVariableNode(string varname)
    parameters:
    - id: varname
      type: System.String
      description: Variable Name.
    return:
      type: VDS.RDF.IVariableNode
      description: ''
    content.vb: Public Overridable Function CreateVariableNode(varname As String) As IVariableNode
  overload: VDS.RDF.WrapperGraph.CreateVariableNode*
  implements:
  - VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetBlankNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.GetBlankNode(System.String)
  id: GetBlankNode(System.String)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetBlankNode(String)
  nameWithType: WrapperGraph.GetBlankNode(String)
  fullName: VDS.RDF.WrapperGraph.GetBlankNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetBlankNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 305
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAttempts to get the Blank Node with the given ID.\n"
  example: []
  syntax:
    content: public virtual IBlankNode GetBlankNode(string nodeId)
    parameters:
    - id: nodeId
      type: System.String
      description: Node ID.
    return:
      type: VDS.RDF.IBlankNode
      description: The Node if it exists or null.
    content.vb: Public Overridable Function GetBlankNode(nodeId As String) As IBlankNode
  overload: VDS.RDF.WrapperGraph.GetBlankNode*
  implements:
  - VDS.RDF.IGraph.GetBlankNode(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.String)
  id: GetLiteralNode(System.String,System.String)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetLiteralNode(String, String)
  nameWithType: WrapperGraph.GetLiteralNode(String, String)
  fullName: VDS.RDF.WrapperGraph.GetLiteralNode(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetLiteralNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 316
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAttempts to get the Literal Node with the given Value and Language.\n"
  example: []
  syntax:
    content: public virtual ILiteralNode GetLiteralNode(string literal, string langspec)
    parameters:
    - id: literal
      type: System.String
      description: Value.
    - id: langspec
      type: System.String
      description: Language.
    return:
      type: VDS.RDF.ILiteralNode
      description: The Node if it exists or null.
    content.vb: Public Overridable Function GetLiteralNode(literal As String, langspec As String) As ILiteralNode
  overload: VDS.RDF.WrapperGraph.GetLiteralNode*
  implements:
  - VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetLiteralNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.GetLiteralNode(System.String)
  id: GetLiteralNode(System.String)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetLiteralNode(String)
  nameWithType: WrapperGraph.GetLiteralNode(String)
  fullName: VDS.RDF.WrapperGraph.GetLiteralNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetLiteralNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 326
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAttempts to get the Literal Node with the given Value.\n"
  example: []
  syntax:
    content: public virtual ILiteralNode GetLiteralNode(string literal)
    parameters:
    - id: literal
      type: System.String
      description: Value.
    return:
      type: VDS.RDF.ILiteralNode
      description: The Node if it exists or null.
    content.vb: Public Overridable Function GetLiteralNode(literal As String) As ILiteralNode
  overload: VDS.RDF.WrapperGraph.GetLiteralNode*
  implements:
  - VDS.RDF.IGraph.GetLiteralNode(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.GetLiteralNode(System.String,System.Uri)
  id: GetLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetLiteralNode(String, Uri)
  nameWithType: WrapperGraph.GetLiteralNode(String, Uri)
  fullName: VDS.RDF.WrapperGraph.GetLiteralNode(System.String, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetLiteralNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 337
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAttempts to get the Literal Node with the given Value and Datatype.\n"
  example: []
  syntax:
    content: public virtual ILiteralNode GetLiteralNode(string literal, Uri datatype)
    parameters:
    - id: literal
      type: System.String
      description: Value.
    - id: datatype
      type: System.Uri
      description: Datatype URI.
    return:
      type: VDS.RDF.ILiteralNode
      description: The Node if it exists or null otherwise.
    content.vb: Public Overridable Function GetLiteralNode(literal As String, datatype As Uri) As ILiteralNode
  overload: VDS.RDF.WrapperGraph.GetLiteralNode*
  implements:
  - VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetTriples(System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.GetTriples(System.Uri)
  id: GetTriples(System.Uri)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetTriples(Uri)
  nameWithType: WrapperGraph.GetTriples(Uri)
  fullName: VDS.RDF.WrapperGraph.GetTriples(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 347
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples involving the given URI.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriples(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The URI to find Triples involving.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public Overridable Function GetTriples(uri As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.WrapperGraph.GetTriples*
  implements:
  - VDS.RDF.IGraph.GetTriples(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriples(VDS.RDF.INode)
  id: GetTriples(VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetTriples(INode)
  nameWithType: WrapperGraph.GetTriples(INode)
  fullName: VDS.RDF.WrapperGraph.GetTriples(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 357
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples involving the given Node.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriples(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: The Node to find Triples involving.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public Overridable Function GetTriples(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.WrapperGraph.GetTriples*
  implements:
  - VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetTriplesWithObject(System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithObject(System.Uri)
  id: GetTriplesWithObject(System.Uri)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(Uri)
  nameWithType: WrapperGraph.GetTriplesWithObject(Uri)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithObject(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 367
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given URI as the Object.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithObject(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: The URI to find Triples with it as the Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public Overridable Function GetTriplesWithObject(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.WrapperGraph.GetTriplesWithObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithObject(VDS.RDF.INode)
  id: GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(INode)
  nameWithType: WrapperGraph.GetTriplesWithObject(INode)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithObject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 377
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Node as the Object.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithObject(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: The Node to find Triples with it as the Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overridable Function GetTriplesWithObject(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.WrapperGraph.GetTriplesWithObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  id: GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(INode)
  nameWithType: WrapperGraph.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 387
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Node as the Predicate.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithPredicate(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: The Node to find Triples with it as the Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overridable Function GetTriplesWithPredicate(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.WrapperGraph.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicate(System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithPredicate(System.Uri)
  id: GetTriplesWithPredicate(System.Uri)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(Uri)
  nameWithType: WrapperGraph.GetTriplesWithPredicate(Uri)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicate(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 397
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Uri as the Predicate.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithPredicate(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: The Uri to find Triples with it as the Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public Overridable Function GetTriplesWithPredicate(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.WrapperGraph.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithSubject(VDS.RDF.INode)
  id: GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(INode)
  nameWithType: WrapperGraph.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 407
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Node as the Subject.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithSubject(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: The Node to find Triples with it as the Subject.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public Overridable Function GetTriplesWithSubject(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.WrapperGraph.GetTriplesWithSubject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetTriplesWithSubject(System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithSubject(System.Uri)
  id: GetTriplesWithSubject(System.Uri)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(Uri)
  nameWithType: WrapperGraph.GetTriplesWithSubject(Uri)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubject(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 417
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets all the Triples with the given Uri as the Subject.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithSubject(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: The Uri to find Triples with it as the Subject.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: Zero/More Triples.
    content.vb: Public Overridable Function GetTriplesWithSubject(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.WrapperGraph.GetTriplesWithSubject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: WrapperGraph.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectPredicate
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 428
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples with the given Subject and Predicate.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithSubjectPredicate(INode subj, INode pred)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overridable Function GetTriplesWithSubjectPredicate(subj As INode, pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: WrapperGraph.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectObject
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 439
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples with the given Subject and Object.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithSubjectObject(INode subj, INode obj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overridable Function GetTriplesWithSubjectObject(subj As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: WrapperGraph.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicateObject
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 450
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples with the given Predicate and Object.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<Triple> GetTriplesWithPredicateObject(INode pred, INode obj)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Overridable Function GetTriplesWithPredicateObject(pred As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject*
  implements:
  - VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetUriNode(System.String)
  commentId: M:VDS.RDF.WrapperGraph.GetUriNode(System.String)
  id: GetUriNode(System.String)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetUriNode(String)
  nameWithType: WrapperGraph.GetUriNode(String)
  fullName: VDS.RDF.WrapperGraph.GetUriNode(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetUriNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 460
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns the UriNode with the given QName if it exists.\n"
  example: []
  syntax:
    content: public virtual IUriNode GetUriNode(string qname)
    parameters:
    - id: qname
      type: System.String
      description: The QName of the Node to select.
    return:
      type: VDS.RDF.IUriNode
      description: ''
    content.vb: Public Overridable Function GetUriNode(qname As String) As IUriNode
  overload: VDS.RDF.WrapperGraph.GetUriNode*
  implements:
  - VDS.RDF.IGraph.GetUriNode(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetUriNode(System.Uri)
  commentId: M:VDS.RDF.WrapperGraph.GetUriNode(System.Uri)
  id: GetUriNode(System.Uri)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetUriNode(Uri)
  nameWithType: WrapperGraph.GetUriNode(Uri)
  fullName: VDS.RDF.WrapperGraph.GetUriNode(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetUriNode
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 470
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns the UriNode with the given Uri if it exists.\n"
  example: []
  syntax:
    content: public virtual IUriNode GetUriNode(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: The Uri of the Node to select.
    return:
      type: VDS.RDF.IUriNode
      description: Either the UriNode Or null if no Node with the given Uri exists.
    content.vb: Public Overridable Function GetUriNode(uri As Uri) As IUriNode
  overload: VDS.RDF.WrapperGraph.GetUriNode*
  implements:
  - VDS.RDF.IGraph.GetUriNode(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.WrapperGraph.ContainsTriple(VDS.RDF.Triple)
  id: ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: ContainsTriple(Triple)
  nameWithType: WrapperGraph.ContainsTriple(Triple)
  fullName: VDS.RDF.WrapperGraph.ContainsTriple(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ContainsTriple
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 480
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether a given Triple exists in this Graph.\n"
  example: []
  syntax:
    content: public virtual bool ContainsTriple(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function ContainsTriple(t As Triple) As Boolean
  overload: VDS.RDF.WrapperGraph.ContainsTriple*
  implements:
  - VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph)
  id: Merge(VDS.RDF.IGraph)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Merge(IGraph)
  nameWithType: WrapperGraph.Merge(IGraph)
  fullName: VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merge
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 490
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMerges another Graph into the current Graph.\n"
  remarks: The Graph on which you invoke this method will preserve its Blank Node IDs while the Blank Nodes from the Graph being merged in will be given new IDs as required in the scope of this Graph.
  example: []
  syntax:
    content: public virtual void Merge(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to Merge into this Graph.
    content.vb: Public Overridable Sub Merge(g As IGraph)
  overload: VDS.RDF.WrapperGraph.Merge*
  implements:
  - VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  id: Merge(VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Merge(IGraph, Boolean)
  nameWithType: WrapperGraph.Merge(IGraph, Boolean)
  fullName: VDS.RDF.WrapperGraph.Merge(VDS.RDF.IGraph, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merge
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 508
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nMerges another Graph into the current Graph.\n"
  remarks: "\n<p>\nThe Graph on which you invoke this method will preserve its Blank Node IDs while the Blank Nodes from the Graph being merged in will be given new IDs as required in the scope of this Graph.\n</p>\n<p>\nThe Graph will raise the <xref href=\"VDS.RDF.WrapperGraph.MergeRequested\" data-throw-if-not-resolved=\"false\"></xref> event before the Merge operation which gives any event handlers the oppurtunity to cancel this event.  When the Merge operation is completed the <xref href=\"VDS.RDF.WrapperGraph.Merged\" data-throw-if-not-resolved=\"false\"></xref> event is raised.\n</p>\n"
  example: []
  syntax:
    content: public virtual void Merge(IGraph g, bool keepOriginalGraphUri)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to Merge into this Graph.
    - id: keepOriginalGraphUri
      type: System.Boolean
      description: Indicates that the Merge should preserve the Graph URIs of Nodes so they refer to the Graph they originated in.
    content.vb: Public Overridable Sub Merge(g As IGraph, keepOriginalGraphUri As Boolean)
  overload: VDS.RDF.WrapperGraph.Merge*
  implements:
  - VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.Equals(System.Object)
  commentId: M:VDS.RDF.WrapperGraph.Equals(System.Object)
  id: Equals(System.Object)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: WrapperGraph.Equals(Object)
  fullName: VDS.RDF.WrapperGraph.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 526
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether a Graph is equal to another Object.\n"
  remarks: "\n<p>\nA Graph can only be equal to another Object which is an <xref href=\"VDS.RDF.IGraph\" data-throw-if-not-resolved=\"false\"></xref>.\n</p>\n<p>\nGraph Equality is determined by a somewhat complex algorithm which is explained in the remarks of the other overload for Equals.\n</p>\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: VDS.RDF.WrapperGraph.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.WrapperGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.WrapperGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  id: Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Equals(IGraph, out Dictionary<INode, INode>)
  nameWithType: WrapperGraph.Equals(IGraph, out Dictionary<INode, INode>)
  fullName: VDS.RDF.WrapperGraph.Equals(VDS.RDF.IGraph, out System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 585
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Graph is equal to the given Graph.\n"
  remarks: "\n<p>\nThe algorithm used to determine Graph equality is based in part on a Iterative Vertex Classification Algorithm described in a Technical Report from HP by Jeremy J Carroll -. <a href=\"http://www.hpl.hp.com/techreports/2001/HPL-2001-293.html\">Matching RDF Graphs</a>\n</p>\n<p>\nGraph Equality is determined according to the following algorithm:.\n</p>\n<ol>\n<li>If the given Graph is null Graphs are not equal</li>\n<li>If the given Graph is this Graph (as determined by Reference Equality) then Graphs are equal</li>\n<li>If the Graphs have a different number of Triples they are not equal</li>\n<li>Declare a list of Triples which are the Triples of the given Graph called <em>OtherTriples</em></li>\n<li>Declare two dictionaries of Nodes to Integers which are called <em>LocalClassification</em> and <em>OtherClassification</em></li>\n<li>For Each Triple in this Graph\n<ol>\n<li>If it is a Ground Triple and cannot be found and removed from <em>OtherTriples</em> then Graphs are not equal since the Triple does not exist in both Graphs</li>\n<li>If it contains Blank Nodes track the number of usages of this Blank Node in <em>LocalClassification</em></li>\n</ol>\n</li> \n<li>If there are any Triples remaining in <em>OtherTriples</em> which are Ground Triples then Graphs are not equal since this Graph does not contain them</li>\n<li>If all the Triples from both Graphs were Ground Triples and there were no Blank Nodes then the Graphs are equal</li>\n<li>Iterate over the remaining Triples in <em>OtherTriples</em> and populate the <em>OtherClassification</em></li>\n<li>If the count of the two classifications is different the Graphs are not equal since there are differing numbers of Blank Nodes in the Graph</li>\n<li>Now build two additional dictionaries of Integers to Integers which are called <em>LocalDegreeClassification</em> and <em>OtherDegreeClassification</em>.  Iterate over <em>LocalClassification</em> and <em>OtherClassification</em> such that the corresponding degree classifications contain a mapping of the number of Blank Nodes with a given degree</li>\n<li>If the count of the two degree classifications is different the Graphs are not equal since there are not the same range of Blank Node degrees in both Graphs</li>\n<li>For All classifications in <em>LocalDegreeClassification</em> there must be a matching classification in <em>OtherDegreeClassification</em> else the Graphs are not equal</li>\n<li>Then build a possible mapping using the following rules:\n<ol>\n<li>Any Blank Node used only once should be mapped to an equivalent Blank Node in the other Graph.  If this is not possible then the Graphs are not equal</li>\n<li>Any Blank Node with a unique degree should be mapped to an equivalent Blank Node in the other Graph.  If this is not possible then the Graphs are not equal</li>\n<li>Keep a copy of the mapping up to this point as a Base Mapping for use as a fallback in later steps</li>\n<li>Build up lists of dependent pairs of Blank Nodes for both Graphs</li>\n<li>Use these lists to determine if there are any independent nodes not yet mapped.  These should be mapped to equivalent Blank Nodes in the other Graph, if this is not possible the Graphs are not equal</li>\n<li>Use the Dependencies and existing mappings to generate a possible mapping</li>\n<li>If a Complete Possible Mapping (there is a Mapping for each Blank Node from this Graph to the Other Graph) then test this mapping.  If it succeeds then the Graphs are equal</li>\n<li>Otherwise we now fallback to the Base Mapping and use it as a basis for Brute Forcing the possible solution space and testing every possibility until either a mapping works or we find the Graphs to be non-equal</li>\n</ol>\n</li>\n</ol>\n"
  example: []
  syntax:
    content: public virtual bool Equals(IGraph g, out Dictionary<INode, INode> mapping)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to test for equality.
    - id: mapping
      type: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
      description: Mapping of Blank Nodes iff the Graphs are equal and contain some Blank Nodes.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function Equals(g As IGraph, ByRef mapping As Dictionary(Of INode, INode)) As Boolean
  overload: VDS.RDF.WrapperGraph.Equals*
  implements:
  - VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  nameWithType.vb: WrapperGraph.Equals(IGraph, ByRef Dictionary(Of INode, INode))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.WrapperGraph.Equals(VDS.RDF.IGraph, ByRef System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: Equals(IGraph, ByRef Dictionary(Of INode, INode))
- uid: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph)
  id: IsSubGraphOf(VDS.RDF.IGraph)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: IsSubGraphOf(IGraph)
  nameWithType: WrapperGraph.IsSubGraphOf(IGraph)
  fullName: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSubGraphOf
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 595
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether this Graph is a sub-graph of the given Graph.\n"
  example: []
  syntax:
    content: public virtual bool IsSubGraphOf(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function IsSubGraphOf(g As IGraph) As Boolean
  overload: VDS.RDF.WrapperGraph.IsSubGraphOf*
  implements:
  - VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  id: IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: IsSubGraphOf(IGraph, out Dictionary<INode, INode>)
  nameWithType: WrapperGraph.IsSubGraphOf(IGraph, out Dictionary<INode, INode>)
  fullName: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph, out System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSubGraphOf
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 606
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether this Graph is a sub-graph of the given Graph.\n"
  example: []
  syntax:
    content: public virtual bool IsSubGraphOf(IGraph g, out Dictionary<INode, INode> mapping)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: mapping
      type: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
      description: Mapping of Blank Nodes.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function IsSubGraphOf(g As IGraph, ByRef mapping As Dictionary(Of INode, INode)) As Boolean
  overload: VDS.RDF.WrapperGraph.IsSubGraphOf*
  implements:
  - VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  nameWithType.vb: WrapperGraph.IsSubGraphOf(IGraph, ByRef Dictionary(Of INode, INode))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.WrapperGraph.IsSubGraphOf(VDS.RDF.IGraph, ByRef System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: IsSubGraphOf(IGraph, ByRef Dictionary(Of INode, INode))
- uid: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph)
  id: HasSubGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: HasSubGraph(IGraph)
  nameWithType: WrapperGraph.HasSubGraph(IGraph)
  fullName: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasSubGraph
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 616
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether this Graph has the given Graph as a sub-graph.\n"
  example: []
  syntax:
    content: public virtual bool HasSubGraph(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function HasSubGraph(g As IGraph) As Boolean
  overload: VDS.RDF.WrapperGraph.HasSubGraph*
  implements:
  - VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  id: HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: HasSubGraph(IGraph, out Dictionary<INode, INode>)
  nameWithType: WrapperGraph.HasSubGraph(IGraph, out Dictionary<INode, INode>)
  fullName: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph, out System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasSubGraph
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 627
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nChecks whether this Graph has the given Graph as a sub-graph.\n"
  example: []
  syntax:
    content: public virtual bool HasSubGraph(IGraph g, out Dictionary<INode, INode> mapping)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: mapping
      type: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
      description: Mapping of Blank Nodes.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overridable Function HasSubGraph(g As IGraph, ByRef mapping As Dictionary(Of INode, INode)) As Boolean
  overload: VDS.RDF.WrapperGraph.HasSubGraph*
  implements:
  - VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  nameWithType.vb: WrapperGraph.HasSubGraph(IGraph, ByRef Dictionary(Of INode, INode))
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.WrapperGraph.HasSubGraph(VDS.RDF.IGraph, ByRef System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: HasSubGraph(IGraph, ByRef Dictionary(Of INode, INode))
- uid: VDS.RDF.WrapperGraph.Difference(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.WrapperGraph.Difference(VDS.RDF.IGraph)
  id: Difference(VDS.RDF.IGraph)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Difference(IGraph)
  nameWithType: WrapperGraph.Difference(IGraph)
  fullName: VDS.RDF.WrapperGraph.Difference(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Difference
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 642
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nComputes the Difference between this Graph the given Graph.\n"
  remarks: "\n<p>\nProduces a report which shows the changes that must be made to this Graph to produce the given Graph.\n</p>\n"
  example: []
  syntax:
    content: public virtual GraphDiffReport Difference(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: VDS.RDF.GraphDiffReport
      description: ''
    content.vb: Public Overridable Function Difference(g As IGraph) As GraphDiffReport
  overload: VDS.RDF.WrapperGraph.Difference*
  implements:
  - VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.ResolveQName(System.String)
  commentId: M:VDS.RDF.WrapperGraph.ResolveQName(System.String)
  id: ResolveQName(System.String)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: ResolveQName(String)
  nameWithType: WrapperGraph.ResolveQName(String)
  fullName: VDS.RDF.WrapperGraph.ResolveQName(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResolveQName
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 652
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper function for Resolving QNames to URIs.\n"
  example: []
  syntax:
    content: public virtual Uri ResolveQName(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName to resolve to a Uri.
    return:
      type: System.Uri
      description: ''
    content.vb: Public Overridable Function ResolveQName(qname As String) As Uri
  overload: VDS.RDF.WrapperGraph.ResolveQName*
  implements:
  - VDS.RDF.IGraph.ResolveQName(System.String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.TripleAsserted
  commentId: E:VDS.RDF.WrapperGraph.TripleAsserted
  id: TripleAsserted
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: TripleAsserted
  nameWithType: WrapperGraph.TripleAsserted
  fullName: VDS.RDF.WrapperGraph.TripleAsserted
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TripleAsserted
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 664
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when a Triple is asserted in the Graph\n"
  example: []
  syntax:
    content: public event TripleEventHandler TripleAsserted
    return:
      type: VDS.RDF.TripleEventHandler
    content.vb: Public Event TripleAsserted As TripleEventHandler
  implements:
  - VDS.RDF.IGraph.TripleAsserted
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.WrapperGraph.TripleRetracted
  commentId: E:VDS.RDF.WrapperGraph.TripleRetracted
  id: TripleRetracted
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: TripleRetracted
  nameWithType: WrapperGraph.TripleRetracted
  fullName: VDS.RDF.WrapperGraph.TripleRetracted
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TripleRetracted
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 669
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when a Triple is retracted from the Graph\n"
  example: []
  syntax:
    content: public event TripleEventHandler TripleRetracted
    return:
      type: VDS.RDF.TripleEventHandler
    content.vb: Public Event TripleRetracted As TripleEventHandler
  implements:
  - VDS.RDF.IGraph.TripleRetracted
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.WrapperGraph.Changed
  commentId: E:VDS.RDF.WrapperGraph.Changed
  id: Changed
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Changed
  nameWithType: WrapperGraph.Changed
  fullName: VDS.RDF.WrapperGraph.Changed
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Changed
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 674
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when the Graph contents change\n"
  example: []
  syntax:
    content: public event GraphEventHandler Changed
    return:
      type: VDS.RDF.GraphEventHandler
    content.vb: Public Event Changed As GraphEventHandler
  implements:
  - VDS.RDF.IGraph.Changed
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.WrapperGraph.ClearRequested
  commentId: E:VDS.RDF.WrapperGraph.ClearRequested
  id: ClearRequested
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: ClearRequested
  nameWithType: WrapperGraph.ClearRequested
  fullName: VDS.RDF.WrapperGraph.ClearRequested
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ClearRequested
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 679
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised just before the Graph is cleared of its contents\n"
  example: []
  syntax:
    content: public event CancellableGraphEventHandler ClearRequested
    return:
      type: VDS.RDF.CancellableGraphEventHandler
    content.vb: Public Event ClearRequested As CancellableGraphEventHandler
  implements:
  - VDS.RDF.IGraph.ClearRequested
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.WrapperGraph.Cleared
  commentId: E:VDS.RDF.WrapperGraph.Cleared
  id: Cleared
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Cleared
  nameWithType: WrapperGraph.Cleared
  fullName: VDS.RDF.WrapperGraph.Cleared
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Cleared
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 684
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised after the Graph is cleared of its contents\n"
  example: []
  syntax:
    content: public event GraphEventHandler Cleared
    return:
      type: VDS.RDF.GraphEventHandler
    content.vb: Public Event Cleared As GraphEventHandler
  implements:
  - VDS.RDF.IGraph.Cleared
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.WrapperGraph.MergeRequested
  commentId: E:VDS.RDF.WrapperGraph.MergeRequested
  id: MergeRequested
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: MergeRequested
  nameWithType: WrapperGraph.MergeRequested
  fullName: VDS.RDF.WrapperGraph.MergeRequested
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: MergeRequested
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 689
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when a Merge operation is requested on the Graph\n"
  example: []
  syntax:
    content: public event CancellableGraphEventHandler MergeRequested
    return:
      type: VDS.RDF.CancellableGraphEventHandler
    content.vb: Public Event MergeRequested As CancellableGraphEventHandler
  implements:
  - VDS.RDF.IGraph.MergeRequested
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.WrapperGraph.Merged
  commentId: E:VDS.RDF.WrapperGraph.Merged
  id: Merged
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Merged
  nameWithType: WrapperGraph.Merged
  fullName: VDS.RDF.WrapperGraph.Merged
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merged
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 694
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent which is raised when a Merge operation is completed on the Graph\n"
  example: []
  syntax:
    content: public event GraphEventHandler Merged
    return:
      type: VDS.RDF.GraphEventHandler
    content.vb: Public Event Merged As GraphEventHandler
  implements:
  - VDS.RDF.IGraph.Merged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.WrapperGraph.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  id: OnTripleAsserted(System.Object,VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: OnTripleAsserted(Object, TripleEventArgs)
  nameWithType: WrapperGraph.OnTripleAsserted(Object, TripleEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnTripleAsserted(System.Object, VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnTripleAsserted
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 701
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent Handler which handles the <xref href=\"VDS.RDF.BaseTripleCollection.TripleAdded\" data-throw-if-not-resolved=\"false\"></xref> event from the underlying Triple Collection by raising the Graph&apos;s <xref href=\"VDS.RDF.WrapperGraph.TripleAsserted\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected virtual void OnTripleAsserted(object sender, TripleEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Sender.
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: Triple Event Arguments.
    content.vb: Protected Overridable Sub OnTripleAsserted(sender As Object, args As TripleEventArgs)
  overload: VDS.RDF.WrapperGraph.OnTripleAsserted*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  id: RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: RaiseTripleAsserted(TripleEventArgs)
  nameWithType: WrapperGraph.RaiseTripleAsserted(TripleEventArgs)
  fullName: VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleAsserted
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 710
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.WrapperGraph.TripleAsserted\" data-throw-if-not-resolved=\"false\"></xref> event manually.\n"
  example: []
  syntax:
    content: protected void RaiseTripleAsserted(TripleEventArgs args)
    parameters:
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: Triple Event Arguments.
    content.vb: Protected Sub RaiseTripleAsserted(args As TripleEventArgs)
  overload: VDS.RDF.WrapperGraph.RaiseTripleAsserted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.Triple)
  commentId: M:VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.Triple)
  id: RaiseTripleAsserted(VDS.RDF.Triple)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: RaiseTripleAsserted(Triple)
  nameWithType: WrapperGraph.RaiseTripleAsserted(Triple)
  fullName: VDS.RDF.WrapperGraph.RaiseTripleAsserted(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleAsserted
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 725
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.WrapperGraph.TripleAsserted\" data-throw-if-not-resolved=\"false\"></xref> event manually.\n"
  example: []
  syntax:
    content: protected void RaiseTripleAsserted(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    content.vb: Protected Sub RaiseTripleAsserted(t As Triple)
  overload: VDS.RDF.WrapperGraph.RaiseTripleAsserted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  id: OnTripleRetracted(System.Object,VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: OnTripleRetracted(Object, TripleEventArgs)
  nameWithType: WrapperGraph.OnTripleRetracted(Object, TripleEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnTripleRetracted(System.Object, VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnTripleRetracted
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 742
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent Handler which handles the <xref href=\"VDS.RDF.BaseTripleCollection.TripleRemoved\" data-throw-if-not-resolved=\"false\"></xref> event from the underlying Triple Collection by raising the Graph&apos;s <xref href=\"VDS.RDF.WrapperGraph.TripleRetracted\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected virtual void OnTripleRetracted(object sender, TripleEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Sender.
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: Triple Event Arguments.
    content.vb: Protected Overridable Sub OnTripleRetracted(sender As Object, args As TripleEventArgs)
  overload: VDS.RDF.WrapperGraph.OnTripleRetracted*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  id: RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: RaiseTripleRetracted(TripleEventArgs)
  nameWithType: WrapperGraph.RaiseTripleRetracted(TripleEventArgs)
  fullName: VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleRetracted
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 751
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.WrapperGraph.TripleRetracted\" data-throw-if-not-resolved=\"false\"></xref> event manually.\n"
  example: []
  syntax:
    content: protected void RaiseTripleRetracted(TripleEventArgs args)
    parameters:
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: ''
    content.vb: Protected Sub RaiseTripleRetracted(args As TripleEventArgs)
  overload: VDS.RDF.WrapperGraph.RaiseTripleRetracted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.Triple)
  commentId: M:VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.Triple)
  id: RaiseTripleRetracted(VDS.RDF.Triple)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: RaiseTripleRetracted(Triple)
  nameWithType: WrapperGraph.RaiseTripleRetracted(Triple)
  fullName: VDS.RDF.WrapperGraph.RaiseTripleRetracted(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseTripleRetracted
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 766
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.WrapperGraph.TripleRetracted\" data-throw-if-not-resolved=\"false\"></xref> event manually.\n"
  example: []
  syntax:
    content: protected void RaiseTripleRetracted(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    content.vb: Protected Sub RaiseTripleRetracted(t As Triple)
  overload: VDS.RDF.WrapperGraph.RaiseTripleRetracted*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.OnChanged(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnChanged(System.Object,VDS.RDF.GraphEventArgs)
  id: OnChanged(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: OnChanged(Object, GraphEventArgs)
  nameWithType: WrapperGraph.OnChanged(Object, GraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnChanged(System.Object, VDS.RDF.GraphEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnChanged
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 783
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent handler to help propogate Graph events from the underlying graph.\n"
  example: []
  syntax:
    content: protected virtual void OnChanged(object sender, GraphEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Sender.
    - id: args
      type: VDS.RDF.GraphEventArgs
      description: Arguments.
    content.vb: Protected Overridable Sub OnChanged(sender As Object, args As GraphEventArgs)
  overload: VDS.RDF.WrapperGraph.OnChanged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.WrapperGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  id: RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: RaiseGraphChanged(TripleEventArgs)
  nameWithType: WrapperGraph.RaiseGraphChanged(TripleEventArgs)
  fullName: VDS.RDF.WrapperGraph.RaiseGraphChanged(VDS.RDF.TripleEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseGraphChanged
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 792
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.WrapperGraph.Changed\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void RaiseGraphChanged(TripleEventArgs args)
    parameters:
    - id: args
      type: VDS.RDF.TripleEventArgs
      description: Triple Event Arguments.
    content.vb: Protected Sub RaiseGraphChanged(args As TripleEventArgs)
  overload: VDS.RDF.WrapperGraph.RaiseGraphChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.RaiseGraphChanged
  commentId: M:VDS.RDF.WrapperGraph.RaiseGraphChanged
  id: RaiseGraphChanged
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: RaiseGraphChanged()
  nameWithType: WrapperGraph.RaiseGraphChanged()
  fullName: VDS.RDF.WrapperGraph.RaiseGraphChanged()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseGraphChanged
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 804
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.WrapperGraph.Changed\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void RaiseGraphChanged()
    content.vb: Protected Sub RaiseGraphChanged
  overload: VDS.RDF.WrapperGraph.RaiseGraphChanged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.OnClearRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnClearRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  id: OnClearRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: OnClearRequested(Object, CancellableGraphEventArgs)
  nameWithType: WrapperGraph.OnClearRequested(Object, CancellableGraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnClearRequested(System.Object, VDS.RDF.CancellableGraphEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnClearRequested
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 818
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent handler to help propogate Graph events from the underlying graph.\n"
  example: []
  syntax:
    content: protected virtual void OnClearRequested(object sender, CancellableGraphEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Sender.
    - id: args
      type: VDS.RDF.CancellableGraphEventArgs
      description: Arguments.
    content.vb: Protected Overridable Sub OnClearRequested(sender As Object, args As CancellableGraphEventArgs)
  overload: VDS.RDF.WrapperGraph.OnClearRequested*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.WrapperGraph.RaiseClearRequested(VDS.RDF.CancellableGraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.RaiseClearRequested(VDS.RDF.CancellableGraphEventArgs)
  id: RaiseClearRequested(VDS.RDF.CancellableGraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: RaiseClearRequested(CancellableGraphEventArgs)
  nameWithType: WrapperGraph.RaiseClearRequested(CancellableGraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.RaiseClearRequested(VDS.RDF.CancellableGraphEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseClearRequested
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 827
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.WrapperGraph.ClearRequested\" data-throw-if-not-resolved=\"false\"></xref> event and returning whether any of the Event Handlers cancelled the operation.\n"
  example: []
  syntax:
    content: protected void RaiseClearRequested(CancellableGraphEventArgs args)
    parameters:
    - id: args
      type: VDS.RDF.CancellableGraphEventArgs
    content.vb: Protected Sub RaiseClearRequested(args As CancellableGraphEventArgs)
  overload: VDS.RDF.WrapperGraph.RaiseClearRequested*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.OnCleared(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnCleared(System.Object,VDS.RDF.GraphEventArgs)
  id: OnCleared(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: OnCleared(Object, GraphEventArgs)
  nameWithType: WrapperGraph.OnCleared(Object, GraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnCleared(System.Object, VDS.RDF.GraphEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnCleared
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 841
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent handler to help propogate Graph events from the underlying graph.\n"
  example: []
  syntax:
    content: protected virtual void OnCleared(object sender, GraphEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Sender.
    - id: args
      type: VDS.RDF.GraphEventArgs
      description: Arguments.
    content.vb: Protected Overridable Sub OnCleared(sender As Object, args As GraphEventArgs)
  overload: VDS.RDF.WrapperGraph.OnCleared*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.WrapperGraph.RaiseCleared
  commentId: M:VDS.RDF.WrapperGraph.RaiseCleared
  id: RaiseCleared
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: RaiseCleared()
  nameWithType: WrapperGraph.RaiseCleared()
  fullName: VDS.RDF.WrapperGraph.RaiseCleared()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseCleared
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 849
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.WrapperGraph.Cleared\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void RaiseCleared()
    content.vb: Protected Sub RaiseCleared
  overload: VDS.RDF.WrapperGraph.RaiseCleared*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.OnMergeRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnMergeRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  id: OnMergeRequested(System.Object,VDS.RDF.CancellableGraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: OnMergeRequested(Object, CancellableGraphEventArgs)
  nameWithType: WrapperGraph.OnMergeRequested(Object, CancellableGraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnMergeRequested(System.Object, VDS.RDF.CancellableGraphEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnMergeRequested
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 863
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent handler to help propogate Graph events from the underlying graph.\n"
  example: []
  syntax:
    content: protected virtual void OnMergeRequested(object sender, CancellableGraphEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Sender.
    - id: args
      type: VDS.RDF.CancellableGraphEventArgs
      description: Arguments.
    content.vb: Protected Overridable Sub OnMergeRequested(sender As Object, args As CancellableGraphEventArgs)
  overload: VDS.RDF.WrapperGraph.OnMergeRequested*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.WrapperGraph.RaiseMergeRequested(VDS.RDF.CancellableGraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.RaiseMergeRequested(VDS.RDF.CancellableGraphEventArgs)
  id: RaiseMergeRequested(VDS.RDF.CancellableGraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: RaiseMergeRequested(CancellableGraphEventArgs)
  nameWithType: WrapperGraph.RaiseMergeRequested(CancellableGraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.RaiseMergeRequested(VDS.RDF.CancellableGraphEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseMergeRequested
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 872
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.WrapperGraph.MergeRequested\" data-throw-if-not-resolved=\"false\"></xref> event and returning whether any of the Event Handlers cancelled the operation.\n"
  example: []
  syntax:
    content: protected void RaiseMergeRequested(CancellableGraphEventArgs args)
    parameters:
    - id: args
      type: VDS.RDF.CancellableGraphEventArgs
    content.vb: Protected Sub RaiseMergeRequested(args As CancellableGraphEventArgs)
  overload: VDS.RDF.WrapperGraph.RaiseMergeRequested*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.OnMerged(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.WrapperGraph.OnMerged(System.Object,VDS.RDF.GraphEventArgs)
  id: OnMerged(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: OnMerged(Object, GraphEventArgs)
  nameWithType: WrapperGraph.OnMerged(Object, GraphEventArgs)
  fullName: VDS.RDF.WrapperGraph.OnMerged(System.Object, VDS.RDF.GraphEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnMerged
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 886
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent handler to help propogate Graph events from the underlying graph.\n"
  example: []
  syntax:
    content: protected virtual void OnMerged(object sender, GraphEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Sender.
    - id: args
      type: VDS.RDF.GraphEventArgs
      description: Arguments.
    content.vb: Protected Overridable Sub OnMerged(sender As Object, args As GraphEventArgs)
  overload: VDS.RDF.WrapperGraph.OnMerged*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.WrapperGraph.RaiseMerged
  commentId: M:VDS.RDF.WrapperGraph.RaiseMerged
  id: RaiseMerged
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: RaiseMerged()
  nameWithType: WrapperGraph.RaiseMerged()
  fullName: VDS.RDF.WrapperGraph.RaiseMerged()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RaiseMerged
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 894
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for raising the <xref href=\"VDS.RDF.WrapperGraph.Merged\" data-throw-if-not-resolved=\"false\"></xref> event.\n"
  example: []
  syntax:
    content: protected void RaiseMerged()
    content.vb: Protected Sub RaiseMerged
  overload: VDS.RDF.WrapperGraph.RaiseMerged*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.AttachEventHandlers
  commentId: M:VDS.RDF.WrapperGraph.AttachEventHandlers
  id: AttachEventHandlers
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: AttachEventHandlers()
  nameWithType: WrapperGraph.AttachEventHandlers()
  fullName: VDS.RDF.WrapperGraph.AttachEventHandlers()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AttachEventHandlers
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 906
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nHelper method for attaching the necessary event handlers to the underlying graph.\n"
  example: []
  syntax:
    content: protected void AttachEventHandlers()
    content.vb: Protected Sub AttachEventHandlers
  overload: VDS.RDF.WrapperGraph.AttachEventHandlers*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.WrapperGraph.Dispose
  commentId: M:VDS.RDF.WrapperGraph.Dispose
  id: Dispose
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: WrapperGraph.Dispose()
  fullName: VDS.RDF.WrapperGraph.Dispose()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dispose
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 921
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDisposes of the wrapper and in doing so disposes of the underlying graph.\n"
  example: []
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose
  overload: VDS.RDF.WrapperGraph.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.WrapperGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: WrapperGraph.GetObjectData(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.WrapperGraph.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetObjectData
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 935
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Serialization Information.\n"
  example: []
  syntax:
    content: public virtual void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Public Overridable Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: VDS.RDF.WrapperGraph.GetObjectData*
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.GetSchema
  commentId: M:VDS.RDF.WrapperGraph.GetSchema
  id: GetSchema
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: WrapperGraph.GetSchema()
  fullName: VDS.RDF.WrapperGraph.GetSchema()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSchema
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 949
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Schema for XML serialization.\n"
  example: []
  syntax:
    content: public virtual XmlSchema GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
      description: ''
    content.vb: Public Overridable Function GetSchema As XmlSchema
  overload: VDS.RDF.WrapperGraph.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.WrapperGraph.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: WrapperGraph.ReadXml(XmlReader)
  fullName: VDS.RDF.WrapperGraph.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ReadXml
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 958
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReads the data for XML deserialization.\n"
  example: []
  syntax:
    content: public virtual void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: XML Reader.
    content.vb: Public Overridable Sub ReadXml(reader As XmlReader)
  overload: VDS.RDF.WrapperGraph.ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.WrapperGraph.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.WrapperGraph.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.WrapperGraph
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: WrapperGraph.WriteXml(XmlWriter)
  fullName: VDS.RDF.WrapperGraph.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/WrapperGraph.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WriteXml
    path: Libraries/dotNetRDF/Core/WrapperGraph.cs
    startLine: 992
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nWrites the data for XML serialization.\n"
  example: []
  syntax:
    content: public virtual void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: XML Writer.
    content.vb: Public Overridable Sub WriteXml(writer As XmlWriter)
  overload: VDS.RDF.WrapperGraph.WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.INodeFactory
  commentId: T:VDS.RDF.INodeFactory
  parent: VDS.RDF
  name: INodeFactory
  nameWithType: INodeFactory
  fullName: VDS.RDF.INodeFactory
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  commentId: M:VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  parent: VDS.RDF.Data.DataTables.GraphExtensions
  definition: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  name: ToDataTable()
  nameWithType: GraphExtensions.ToDataTable()
  fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable()
  spec.csharp:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<WrapperGraph>()
  nameWithType: Extensions.AsEnumerable<WrapperGraph>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.WrapperGraph>()
  nameWithType.vb: Extensions.AsEnumerable(Of WrapperGraph)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.WrapperGraph)()
  name.vb: AsEnumerable(Of WrapperGraph)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<WrapperGraph>
    nameWithType: Extensions.AsEnumerable<WrapperGraph>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.WrapperGraph>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of WrapperGraph)
    nameWithType: Extensions.AsEnumerable(Of WrapperGraph)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.WrapperGraph)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Assert(INode, INode, INode)
  nameWithType: Extensions.Assert(INode, INode, INode)
  fullName: VDS.RDF.Extensions.Assert(VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Retract(INode, INode, INode)
  nameWithType: Extensions.Retract(INode, INode, INode)
  fullName: VDS.RDF.Extensions.Retract(VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: AssertList<T>(IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: AssertList<T>(INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: AssertList(IEnumerable<INode>)
  nameWithType: Extensions.AssertList(IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: AssertList(INode, IEnumerable<INode>)
  nameWithType: Extensions.AssertList(INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListAsTriples(INode)
  nameWithType: Extensions.GetListAsTriples(INode)
  fullName: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListItems(INode)
  nameWithType: Extensions.GetListItems(INode)
  fullName: VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListNodes(INode)
  nameWithType: Extensions.GetListNodes(INode)
  fullName: VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  name: RetractList(INode)
  nameWithType: Extensions.RetractList(INode)
  fullName: VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: AddToList<T>(INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AddToList<T>(INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AddToList<T>(VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(Of T)(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AddToList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList<T>
    nameWithType: Extensions.AddToList<T>
    fullName: VDS.RDF.Extensions.AddToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList(Of T)
    nameWithType: Extensions.AddToList(Of T)
    fullName: VDS.RDF.Extensions.AddToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: AddToList(INode, IEnumerable<INode>)
  nameWithType: Extensions.AddToList(INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AddToList(VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AddToList(INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{{T}},System.Func{{T},VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  name: RemoveFromList<T>(INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.RemoveFromList<T>(INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList<T>(VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(Of T)(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: RemoveFromList(Of T)(INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList<T>
    nameWithType: Extensions.RemoveFromList<T>
    fullName: VDS.RDF.Extensions.RemoveFromList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList(Of T)
    nameWithType: Extensions.RemoveFromList(Of T)
    fullName: VDS.RDF.Extensions.RemoveFromList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  name: RemoveFromList(INode, IEnumerable<INode>)
  nameWithType: Extensions.RemoveFromList(INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: RemoveFromList(INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  name: ExecuteQuery(String)
  nameWithType: GraphExtensions.ExecuteQuery(String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, String)
  nameWithType: GraphExtensions.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  name: LoadFromFile(String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromFile(String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromFile(System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  name: LoadFromFile(String)
  nameWithType: GraphExtensions.LoadFromFile(String)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  name: LoadFromUri(Uri, IRdfReader)
  nameWithType: GraphExtensions.LoadFromUri(Uri, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  name: LoadFromUri(Uri)
  nameWithType: GraphExtensions.LoadFromUri(Uri)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  name: LoadFromString(String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromString(String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromString(System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  name: LoadFromString(String)
  nameWithType: GraphExtensions.LoadFromString(String)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  name: LoadFromEmbeddedResource(String)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(String)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  name: LoadFromEmbeddedResource(String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  name: SaveToFile(String, IRdfWriter)
  nameWithType: GraphExtensions.SaveToFile(String, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(System.String, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  name: SaveToFile(String, IStoreWriter)
  nameWithType: GraphExtensions.SaveToFile(String, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(System.String, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToFile(System.String)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  name: SaveToFile(String)
  nameWithType: GraphExtensions.SaveToFile(String)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  name: SaveToStream(TextWriter, IRdfWriter)
  nameWithType: GraphExtensions.SaveToStream(TextWriter, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  name: SaveToStream(TextWriter, IStoreWriter)
  nameWithType: GraphExtensions.SaveToStream(TextWriter, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  parent: VDS.RDF.GraphExtensions
  definition: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  name: SaveToStream(String, TextWriter)
  nameWithType: GraphExtensions.SaveToStream(String, TextWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(System.String, System.IO.TextWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  parent: VDS.RDF.Dynamic.DynamicExtensions
  definition: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  name: AsDynamic(Uri, Uri)
  nameWithType: DynamicExtensions.AsDynamic(Uri, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  name: ToDataTable(IGraph)
  nameWithType: GraphExtensions.ToDataTable(IGraph)
  fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable(VDS.RDF.IGraph)
    name: ToDataTable
    nameWithType: GraphExtensions.ToDataTable
    fullName: VDS.RDF.Data.DataTables.GraphExtensions.ToDataTable
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Data.DataTables.GraphExtensions
  commentId: T:VDS.RDF.Data.DataTables.GraphExtensions
  parent: VDS.RDF.Data.DataTables
  name: GraphExtensions
  nameWithType: GraphExtensions
  fullName: VDS.RDF.Data.DataTables.GraphExtensions
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Assert(IGraph, INode, INode, INode)
  nameWithType: Extensions.Assert(IGraph, INode, INode, INode)
  fullName: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph, VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Assert(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Assert
    nameWithType: Extensions.Assert
    fullName: VDS.RDF.Extensions.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
  name: Retract(IGraph, INode, INode, INode)
  nameWithType: Extensions.Retract(IGraph, INode, INode, INode)
  fullName: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph, VDS.RDF.INode, VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.Retract(VDS.RDF.IGraph,VDS.RDF.INode,VDS.RDF.INode,VDS.RDF.INode)
    name: Retract
    nameWithType: Extensions.Retract
    fullName: VDS.RDF.Extensions.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: AssertList<T>(IGraph, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(IGraph, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(IGraph, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(IGraph, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: AssertList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AssertList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AssertList<T>(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(Of T)(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AssertList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList<T>
    nameWithType: Extensions.AssertList<T>
    fullName: VDS.RDF.Extensions.AssertList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AssertList(Of T)
    nameWithType: Extensions.AssertList(Of T)
    fullName: VDS.RDF.Extensions.AssertList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: AssertList(IGraph, IEnumerable<INode>)
  nameWithType: Extensions.AssertList(IGraph, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(IGraph, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(IGraph, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: AssertList(IGraph, INode, IEnumerable<INode>)
  nameWithType: Extensions.AssertList(IGraph, INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AssertList(IGraph, INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AssertList(IGraph, INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AssertList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AssertList
    nameWithType: Extensions.AssertList
    fullName: VDS.RDF.Extensions.AssertList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListAsTriples(IGraph, INode)
  nameWithType: Extensions.GetListAsTriples(IGraph, INode)
  fullName: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListAsTriples(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListAsTriples
    nameWithType: Extensions.GetListAsTriples
    fullName: VDS.RDF.Extensions.GetListAsTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListItems(IGraph, INode)
  nameWithType: Extensions.GetListItems(IGraph, INode)
  fullName: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListItems(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListItems
    nameWithType: Extensions.GetListItems
    fullName: VDS.RDF.Extensions.GetListItems
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
  name: GetListNodes(IGraph, INode)
  nameWithType: Extensions.GetListNodes(IGraph, INode)
  fullName: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.GetListNodes(VDS.RDF.IGraph,VDS.RDF.INode)
    name: GetListNodes
    nameWithType: Extensions.GetListNodes
    fullName: VDS.RDF.Extensions.GetListNodes
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
  name: RetractList(IGraph, INode)
  nameWithType: Extensions.RetractList(IGraph, INode)
  fullName: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RetractList(VDS.RDF.IGraph,VDS.RDF.INode)
    name: RetractList
    nameWithType: Extensions.RetractList
    fullName: VDS.RDF.Extensions.RetractList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: AddToList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.AddToList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.AddToList<T>(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(Of T)(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: AddToList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList<T>
    nameWithType: Extensions.AddToList<T>
    fullName: VDS.RDF.Extensions.AddToList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: AddToList(Of T)
    nameWithType: Extensions.AddToList(Of T)
    fullName: VDS.RDF.Extensions.AddToList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: AddToList(IGraph, INode, IEnumerable<INode>)
  nameWithType: Extensions.AddToList(IGraph, INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.AddToList(IGraph, INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: AddToList(IGraph, INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AddToList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: AddToList
    nameWithType: Extensions.AddToList
    fullName: VDS.RDF.Extensions.AddToList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
  isExternal: true
  name: RemoveFromList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  nameWithType: Extensions.RemoveFromList<T>(IGraph, INode, IEnumerable<T>, Func<T, INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList<T>(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<T>, System.Func<T, VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(Of T)(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, VDS.RDF.INode))
  name.vb: RemoveFromList(Of T)(IGraph, INode, IEnumerable(Of T), Func(Of T, INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList<T>
    nameWithType: Extensions.RemoveFromList<T>
    fullName: VDS.RDF.Extensions.RemoveFromList<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList``1(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{``0},System.Func{``0,VDS.RDF.INode})
    name: RemoveFromList(Of T)
    nameWithType: Extensions.RemoveFromList(Of T)
    fullName: VDS.RDF.Extensions.RemoveFromList(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  commentId: M:VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
  isExternal: true
  name: RemoveFromList(IGraph, INode, IEnumerable<INode>)
  nameWithType: Extensions.RemoveFromList(IGraph, INode, IEnumerable<INode>)
  fullName: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable<VDS.RDF.INode>)
  nameWithType.vb: Extensions.RemoveFromList(IGraph, INode, IEnumerable(Of INode))
  fullName.vb: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph, VDS.RDF.INode, System.Collections.Generic.IEnumerable(Of VDS.RDF.INode))
  name.vb: RemoveFromList(IGraph, INode, IEnumerable(Of INode))
  spec.csharp:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.RemoveFromList(VDS.RDF.IGraph,VDS.RDF.INode,System.Collections.Generic.IEnumerable{VDS.RDF.INode})
    name: RemoveFromList
    nameWithType: Extensions.RemoveFromList
    fullName: VDS.RDF.Extensions.RemoveFromList
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: ExecuteQuery(IGraph, String)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions
  commentId: T:VDS.RDF.GraphExtensions
  parent: VDS.RDF
  name: GraphExtensions
  nameWithType: GraphExtensions
  fullName: VDS.RDF.GraphExtensions
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  isExternal: true
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, String)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(IGraph, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(IGraph, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: GraphExtensions.ExecuteQuery
    fullName: VDS.RDF.GraphExtensions.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromFile(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromFile(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: LoadFromFile(IGraph, String)
  nameWithType: GraphExtensions.LoadFromFile(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
    name: LoadFromFile
    nameWithType: GraphExtensions.LoadFromFile
    fullName: VDS.RDF.GraphExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromUri(IGraph, Uri, IRdfReader)
  nameWithType: GraphExtensions.LoadFromUri(IGraph, Uri, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph, System.Uri, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  isExternal: true
  name: LoadFromUri(IGraph, Uri)
  nameWithType: GraphExtensions.LoadFromUri(IGraph, Uri)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
    name: LoadFromUri
    nameWithType: GraphExtensions.LoadFromUri
    fullName: VDS.RDF.GraphExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromString(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromString(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: LoadFromString(IGraph, String)
  nameWithType: GraphExtensions.LoadFromString(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
    name: LoadFromString
    nameWithType: GraphExtensions.LoadFromString
    fullName: VDS.RDF.GraphExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: LoadFromEmbeddedResource(IGraph, String)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExternal: true
  name: LoadFromEmbeddedResource(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
    name: LoadFromEmbeddedResource
    nameWithType: GraphExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfReader
    name: IRdfReader
    nameWithType: IRdfReader
    fullName: VDS.RDF.IRdfReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  isExternal: true
  name: SaveToFile(IGraph, String, IRdfWriter)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  isExternal: true
  name: SaveToFile(IGraph, String, IStoreWriter)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  isExternal: true
  name: SaveToFile(IGraph, String)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
    name: SaveToFile
    nameWithType: GraphExtensions.SaveToFile
    fullName: VDS.RDF.GraphExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  isExternal: true
  name: SaveToStream(IGraph, TextWriter, IRdfWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, TextWriter, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.IO.TextWriter, VDS.RDF.IRdfWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IRdfWriter
    name: IRdfWriter
    nameWithType: IRdfWriter
    fullName: VDS.RDF.IRdfWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  isExternal: true
  name: SaveToStream(IGraph, TextWriter, IStoreWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, TextWriter, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.IO.TextWriter, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  isExternal: true
  name: SaveToStream(IGraph, String, TextWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, String, TextWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.String, System.IO.TextWriter)
  spec.csharp:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
    name: SaveToStream
    nameWithType: GraphExtensions.SaveToStream
    fullName: VDS.RDF.GraphExtensions.SaveToStream
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.IO.TextWriter
    name: TextWriter
    nameWithType: TextWriter
    fullName: System.IO.TextWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
  isExternal: true
  name: AsDynamic(IGraph, Uri, Uri)
  nameWithType: DynamicExtensions.AsDynamic(IGraph, Uri, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph, System.Uri, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.IGraph,System.Uri,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions
  commentId: T:VDS.RDF.Dynamic.DynamicExtensions
  parent: VDS.RDF.Dynamic
  name: DynamicExtensions
  nameWithType: DynamicExtensions
  fullName: VDS.RDF.Dynamic.DynamicExtensions
- uid: VDS.RDF.Data.DataTables
  commentId: N:VDS.RDF.Data.DataTables
  name: VDS.RDF.Data.DataTables
  nameWithType: VDS.RDF.Data.DataTables
  fullName: VDS.RDF.Data.DataTables
- uid: VDS.RDF.Dynamic
  commentId: N:VDS.RDF.Dynamic
  name: VDS.RDF.Dynamic
  nameWithType: VDS.RDF.Dynamic
  fullName: VDS.RDF.Dynamic
- uid: VDS.RDF.WrapperGraph.AttachEventHandlers
  commentId: M:VDS.RDF.WrapperGraph.AttachEventHandlers
  parent: VDS.RDF.WrapperGraph
  name: AttachEventHandlers()
  nameWithType: WrapperGraph.AttachEventHandlers()
  fullName: VDS.RDF.WrapperGraph.AttachEventHandlers()
  spec.csharp:
  - uid: VDS.RDF.WrapperGraph.AttachEventHandlers
    name: AttachEventHandlers
    nameWithType: WrapperGraph.AttachEventHandlers
    fullName: VDS.RDF.WrapperGraph.AttachEventHandlers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.WrapperGraph.AttachEventHandlers
    name: AttachEventHandlers
    nameWithType: WrapperGraph.AttachEventHandlers
    fullName: VDS.RDF.WrapperGraph.AttachEventHandlers
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.#ctor*
  commentId: Overload:VDS.RDF.WrapperGraph.#ctor
  name: WrapperGraph
  nameWithType: WrapperGraph.WrapperGraph
  fullName: VDS.RDF.WrapperGraph.WrapperGraph
- uid: VDS.RDF.WrapperGraph
  commentId: T:VDS.RDF.WrapperGraph
  parent: VDS.RDF
  name: WrapperGraph
  nameWithType: WrapperGraph
  fullName: VDS.RDF.WrapperGraph
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: VDS.RDF.WrapperGraph.BaseUri*
  commentId: Overload:VDS.RDF.WrapperGraph.BaseUri
  name: BaseUri
  nameWithType: WrapperGraph.BaseUri
  fullName: VDS.RDF.WrapperGraph.BaseUri
- uid: VDS.RDF.IGraph.BaseUri
  commentId: P:VDS.RDF.IGraph.BaseUri
  parent: VDS.RDF.IGraph
  name: BaseUri
  nameWithType: IGraph.BaseUri
  fullName: VDS.RDF.IGraph.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.WrapperGraph.IsEmpty*
  commentId: Overload:VDS.RDF.WrapperGraph.IsEmpty
  name: IsEmpty
  nameWithType: WrapperGraph.IsEmpty
  fullName: VDS.RDF.WrapperGraph.IsEmpty
- uid: VDS.RDF.IGraph.IsEmpty
  commentId: P:VDS.RDF.IGraph.IsEmpty
  parent: VDS.RDF.IGraph
  name: IsEmpty
  nameWithType: IGraph.IsEmpty
  fullName: VDS.RDF.IGraph.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.WrapperGraph.NamespaceMap*
  commentId: Overload:VDS.RDF.WrapperGraph.NamespaceMap
  name: NamespaceMap
  nameWithType: WrapperGraph.NamespaceMap
  fullName: VDS.RDF.WrapperGraph.NamespaceMap
- uid: VDS.RDF.IGraph.NamespaceMap
  commentId: P:VDS.RDF.IGraph.NamespaceMap
  parent: VDS.RDF.IGraph
  name: NamespaceMap
  nameWithType: IGraph.NamespaceMap
  fullName: VDS.RDF.IGraph.NamespaceMap
- uid: VDS.RDF.INamespaceMapper
  commentId: T:VDS.RDF.INamespaceMapper
  parent: VDS.RDF
  name: INamespaceMapper
  nameWithType: INamespaceMapper
  fullName: VDS.RDF.INamespaceMapper
- uid: VDS.RDF.WrapperGraph.Nodes*
  commentId: Overload:VDS.RDF.WrapperGraph.Nodes
  name: Nodes
  nameWithType: WrapperGraph.Nodes
  fullName: VDS.RDF.WrapperGraph.Nodes
- uid: VDS.RDF.IGraph.Nodes
  commentId: P:VDS.RDF.IGraph.Nodes
  parent: VDS.RDF.IGraph
  name: Nodes
  nameWithType: IGraph.Nodes
  fullName: VDS.RDF.IGraph.Nodes
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<INode>
  nameWithType: IEnumerable<INode>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.INode>
  nameWithType.vb: IEnumerable(Of INode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.INode)
  name.vb: IEnumerable(Of INode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.WrapperGraph.AllNodes*
  commentId: Overload:VDS.RDF.WrapperGraph.AllNodes
  name: AllNodes
  nameWithType: WrapperGraph.AllNodes
  fullName: VDS.RDF.WrapperGraph.AllNodes
- uid: VDS.RDF.IGraph.AllNodes
  commentId: P:VDS.RDF.IGraph.AllNodes
  parent: VDS.RDF.IGraph
  name: AllNodes
  nameWithType: IGraph.AllNodes
  fullName: VDS.RDF.IGraph.AllNodes
- uid: VDS.RDF.WrapperGraph.Triples*
  commentId: Overload:VDS.RDF.WrapperGraph.Triples
  name: Triples
  nameWithType: WrapperGraph.Triples
  fullName: VDS.RDF.WrapperGraph.Triples
- uid: VDS.RDF.IGraph.Triples
  commentId: P:VDS.RDF.IGraph.Triples
  parent: VDS.RDF.IGraph
  name: Triples
  nameWithType: IGraph.Triples
  fullName: VDS.RDF.IGraph.Triples
- uid: VDS.RDF.BaseTripleCollection
  commentId: T:VDS.RDF.BaseTripleCollection
  parent: VDS.RDF
  name: BaseTripleCollection
  nameWithType: BaseTripleCollection
  fullName: VDS.RDF.BaseTripleCollection
- uid: VDS.RDF.WrapperGraph.Assert*
  commentId: Overload:VDS.RDF.WrapperGraph.Assert
  name: Assert
  nameWithType: WrapperGraph.Assert
  fullName: VDS.RDF.WrapperGraph.Assert
- uid: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  parent: VDS.RDF.IGraph
  name: Assert(Triple)
  nameWithType: IGraph.Assert(Triple)
  fullName: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Assert(VDS.RDF.Triple)
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Assert(IEnumerable<Triple>)
  nameWithType: IGraph.Assert(IEnumerable<Triple>)
  fullName: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: IGraph.Assert(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Assert(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Assert(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Assert
    nameWithType: IGraph.Assert
    fullName: VDS.RDF.IGraph.Assert
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Triple>
  nameWithType: IEnumerable<Triple>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Triple>
  nameWithType.vb: IEnumerable(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple)
  name.vb: IEnumerable(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Retract*
  commentId: Overload:VDS.RDF.WrapperGraph.Retract
  name: Retract
  nameWithType: WrapperGraph.Retract
  fullName: VDS.RDF.WrapperGraph.Retract
- uid: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  parent: VDS.RDF.IGraph
  name: Retract(Triple)
  nameWithType: IGraph.Retract(Triple)
  fullName: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Retract(VDS.RDF.Triple)
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  commentId: M:VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Retract(IEnumerable<Triple>)
  nameWithType: IGraph.Retract(IEnumerable<Triple>)
  fullName: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable<VDS.RDF.Triple>)
  nameWithType.vb: IGraph.Retract(IEnumerable(Of Triple))
  fullName.vb: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple))
  name.vb: Retract(IEnumerable(Of Triple))
  spec.csharp:
  - uid: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Retract(System.Collections.Generic.IEnumerable{VDS.RDF.Triple})
    name: Retract
    nameWithType: IGraph.Retract
    fullName: VDS.RDF.IGraph.Retract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Clear*
  commentId: Overload:VDS.RDF.WrapperGraph.Clear
  name: Clear
  nameWithType: WrapperGraph.Clear
  fullName: VDS.RDF.WrapperGraph.Clear
- uid: VDS.RDF.IGraph.Clear
  commentId: M:VDS.RDF.IGraph.Clear
  parent: VDS.RDF.IGraph
  name: Clear()
  nameWithType: IGraph.Clear()
  fullName: VDS.RDF.IGraph.Clear()
  spec.csharp:
  - uid: VDS.RDF.IGraph.Clear
    name: Clear
    nameWithType: IGraph.Clear
    fullName: VDS.RDF.IGraph.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Clear
    name: Clear
    nameWithType: IGraph.Clear
    fullName: VDS.RDF.IGraph.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateBlankNode*
  commentId: Overload:VDS.RDF.WrapperGraph.CreateBlankNode
  name: CreateBlankNode
  nameWithType: WrapperGraph.CreateBlankNode
  fullName: VDS.RDF.WrapperGraph.CreateBlankNode
- uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateBlankNode(String)
  nameWithType: INodeFactory.CreateBlankNode(String)
  fullName: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode(System.String)
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.IBlankNode
  commentId: T:VDS.RDF.IBlankNode
  parent: VDS.RDF
  name: IBlankNode
  nameWithType: IBlankNode
  fullName: VDS.RDF.IBlankNode
- uid: VDS.RDF.INodeFactory.CreateBlankNode
  commentId: M:VDS.RDF.INodeFactory.CreateBlankNode
  parent: VDS.RDF.INodeFactory
  name: CreateBlankNode()
  nameWithType: INodeFactory.CreateBlankNode()
  fullName: VDS.RDF.INodeFactory.CreateBlankNode()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateBlankNode
    name: CreateBlankNode
    nameWithType: INodeFactory.CreateBlankNode
    fullName: VDS.RDF.INodeFactory.CreateBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetNextBlankNodeID*
  commentId: Overload:VDS.RDF.WrapperGraph.GetNextBlankNodeID
  name: GetNextBlankNodeID
  nameWithType: WrapperGraph.GetNextBlankNodeID
  fullName: VDS.RDF.WrapperGraph.GetNextBlankNodeID
- uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
  commentId: M:VDS.RDF.INodeFactory.GetNextBlankNodeID
  parent: VDS.RDF.INodeFactory
  name: GetNextBlankNodeID()
  nameWithType: INodeFactory.GetNextBlankNodeID()
  fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
    name: GetNextBlankNodeID
    nameWithType: INodeFactory.GetNextBlankNodeID
    fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.GetNextBlankNodeID
    name: GetNextBlankNodeID
    nameWithType: INodeFactory.GetNextBlankNodeID
    fullName: VDS.RDF.INodeFactory.GetNextBlankNodeID
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateGraphLiteralNode*
  commentId: Overload:VDS.RDF.WrapperGraph.CreateGraphLiteralNode
  name: CreateGraphLiteralNode
  nameWithType: WrapperGraph.CreateGraphLiteralNode
  fullName: VDS.RDF.WrapperGraph.CreateGraphLiteralNode
- uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  parent: VDS.RDF.INodeFactory
  name: CreateGraphLiteralNode(IGraph)
  nameWithType: INodeFactory.CreateGraphLiteralNode(IGraph)
  fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode(VDS.RDF.IGraph)
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraphLiteralNode
  commentId: T:VDS.RDF.IGraphLiteralNode
  parent: VDS.RDF
  name: IGraphLiteralNode
  nameWithType: IGraphLiteralNode
  fullName: VDS.RDF.IGraphLiteralNode
- uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  commentId: M:VDS.RDF.INodeFactory.CreateGraphLiteralNode
  parent: VDS.RDF.INodeFactory
  name: CreateGraphLiteralNode()
  nameWithType: INodeFactory.CreateGraphLiteralNode()
  fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode()
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateGraphLiteralNode
    name: CreateGraphLiteralNode
    nameWithType: INodeFactory.CreateGraphLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateGraphLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateLiteralNode*
  commentId: Overload:VDS.RDF.WrapperGraph.CreateLiteralNode
  name: CreateLiteralNode
  nameWithType: WrapperGraph.CreateLiteralNode
  fullName: VDS.RDF.WrapperGraph.CreateLiteralNode
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String)
  nameWithType: INodeFactory.CreateLiteralNode(String)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String, Uri)
  nameWithType: INodeFactory.CreateLiteralNode(String, Uri)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.Uri)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateLiteralNode(String, String)
  nameWithType: INodeFactory.CreateLiteralNode(String, String)
  fullName: VDS.RDF.INodeFactory.CreateLiteralNode(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateLiteralNode(System.String,System.String)
    name: CreateLiteralNode
    nameWithType: INodeFactory.CreateLiteralNode
    fullName: VDS.RDF.INodeFactory.CreateLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateUriNode*
  commentId: Overload:VDS.RDF.WrapperGraph.CreateUriNode
  name: CreateUriNode
  nameWithType: WrapperGraph.CreateUriNode
  fullName: VDS.RDF.WrapperGraph.CreateUriNode
- uid: VDS.RDF.IGraph.CreateUriNode
  commentId: M:VDS.RDF.IGraph.CreateUriNode
  parent: VDS.RDF.IGraph
  name: CreateUriNode()
  nameWithType: IGraph.CreateUriNode()
  fullName: VDS.RDF.IGraph.CreateUriNode()
  spec.csharp:
  - uid: VDS.RDF.IGraph.CreateUriNode
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.CreateUriNode
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IUriNode
  commentId: T:VDS.RDF.IUriNode
  parent: VDS.RDF
  name: IUriNode
  nameWithType: IUriNode
  fullName: VDS.RDF.IUriNode
- uid: VDS.RDF.IGraph.CreateUriNode(System.String)
  commentId: M:VDS.RDF.IGraph.CreateUriNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: CreateUriNode(String)
  nameWithType: IGraph.CreateUriNode(String)
  fullName: VDS.RDF.IGraph.CreateUriNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.CreateUriNode(System.String)
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.CreateUriNode(System.String)
    name: CreateUriNode
    nameWithType: IGraph.CreateUriNode
    fullName: VDS.RDF.IGraph.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  commentId: M:VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateUriNode(Uri)
  nameWithType: INodeFactory.CreateUriNode(Uri)
  fullName: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
    name: CreateUriNode
    nameWithType: INodeFactory.CreateUriNode
    fullName: VDS.RDF.INodeFactory.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateUriNode(System.Uri)
    name: CreateUriNode
    nameWithType: INodeFactory.CreateUriNode
    fullName: VDS.RDF.INodeFactory.CreateUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.CreateVariableNode*
  commentId: Overload:VDS.RDF.WrapperGraph.CreateVariableNode
  name: CreateVariableNode
  nameWithType: WrapperGraph.CreateVariableNode
  fullName: VDS.RDF.WrapperGraph.CreateVariableNode
- uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  commentId: M:VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  parent: VDS.RDF.INodeFactory
  isExternal: true
  name: CreateVariableNode(String)
  nameWithType: INodeFactory.CreateVariableNode(String)
  fullName: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
    name: CreateVariableNode
    nameWithType: INodeFactory.CreateVariableNode
    fullName: VDS.RDF.INodeFactory.CreateVariableNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INodeFactory.CreateVariableNode(System.String)
    name: CreateVariableNode
    nameWithType: INodeFactory.CreateVariableNode
    fullName: VDS.RDF.INodeFactory.CreateVariableNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IVariableNode
  commentId: T:VDS.RDF.IVariableNode
  parent: VDS.RDF
  name: IVariableNode
  nameWithType: IVariableNode
  fullName: VDS.RDF.IVariableNode
- uid: VDS.RDF.WrapperGraph.GetBlankNode*
  commentId: Overload:VDS.RDF.WrapperGraph.GetBlankNode
  name: GetBlankNode
  nameWithType: WrapperGraph.GetBlankNode
  fullName: VDS.RDF.WrapperGraph.GetBlankNode
- uid: VDS.RDF.IGraph.GetBlankNode(System.String)
  commentId: M:VDS.RDF.IGraph.GetBlankNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetBlankNode(String)
  nameWithType: IGraph.GetBlankNode(String)
  fullName: VDS.RDF.IGraph.GetBlankNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetBlankNode(System.String)
    name: GetBlankNode
    nameWithType: IGraph.GetBlankNode
    fullName: VDS.RDF.IGraph.GetBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetBlankNode(System.String)
    name: GetBlankNode
    nameWithType: IGraph.GetBlankNode
    fullName: VDS.RDF.IGraph.GetBlankNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetLiteralNode*
  commentId: Overload:VDS.RDF.WrapperGraph.GetLiteralNode
  name: GetLiteralNode
  nameWithType: WrapperGraph.GetLiteralNode
  fullName: VDS.RDF.WrapperGraph.GetLiteralNode
- uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
  commentId: M:VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetLiteralNode(String, String)
  nameWithType: IGraph.GetLiteralNode(String, String)
  fullName: VDS.RDF.IGraph.GetLiteralNode(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetLiteralNode(System.String)
  commentId: M:VDS.RDF.IGraph.GetLiteralNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetLiteralNode(String)
  nameWithType: IGraph.GetLiteralNode(String)
  fullName: VDS.RDF.IGraph.GetLiteralNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
  commentId: M:VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetLiteralNode(String, Uri)
  nameWithType: IGraph.GetLiteralNode(String, Uri)
  fullName: VDS.RDF.IGraph.GetLiteralNode(System.String, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetLiteralNode(System.String,System.Uri)
    name: GetLiteralNode
    nameWithType: IGraph.GetLiteralNode
    fullName: VDS.RDF.IGraph.GetLiteralNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriples*
  commentId: Overload:VDS.RDF.WrapperGraph.GetTriples
  name: GetTriples
  nameWithType: WrapperGraph.GetTriples
  fullName: VDS.RDF.WrapperGraph.GetTriples
- uid: VDS.RDF.IGraph.GetTriples(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriples(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriples(Uri)
  nameWithType: IGraph.GetTriples(Uri)
  fullName: VDS.RDF.IGraph.GetTriples(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriples(System.Uri)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriples(System.Uri)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriples(INode)
  nameWithType: IGraph.GetTriples(INode)
  fullName: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriples(VDS.RDF.INode)
    name: GetTriples
    nameWithType: IGraph.GetTriples
    fullName: VDS.RDF.IGraph.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.WrapperGraph.GetTriplesWithObject*
  commentId: Overload:VDS.RDF.WrapperGraph.GetTriplesWithObject
  name: GetTriplesWithObject
  nameWithType: WrapperGraph.GetTriplesWithObject
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithObject
- uid: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriplesWithObject(Uri)
  nameWithType: IGraph.GetTriplesWithObject(Uri)
  fullName: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(System.Uri)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithObject(INode)
  nameWithType: IGraph.GetTriplesWithObject(INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: IGraph.GetTriplesWithObject
    fullName: VDS.RDF.IGraph.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicate*
  commentId: Overload:VDS.RDF.WrapperGraph.GetTriplesWithPredicate
  name: GetTriplesWithPredicate
  nameWithType: WrapperGraph.GetTriplesWithPredicate
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicate
- uid: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithPredicate(INode)
  nameWithType: IGraph.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriplesWithPredicate(Uri)
  nameWithType: IGraph.GetTriplesWithPredicate(Uri)
  fullName: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicate(System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: IGraph.GetTriplesWithPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithSubject*
  commentId: Overload:VDS.RDF.WrapperGraph.GetTriplesWithSubject
  name: GetTriplesWithSubject
  nameWithType: WrapperGraph.GetTriplesWithSubject
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubject
- uid: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithSubject(INode)
  nameWithType: IGraph.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetTriplesWithSubject(Uri)
  nameWithType: IGraph.GetTriplesWithSubject(Uri)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubject(System.Uri)
    name: GetTriplesWithSubject
    nameWithType: IGraph.GetTriplesWithSubject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate*
  commentId: Overload:VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate
  name: GetTriplesWithSubjectPredicate
  nameWithType: WrapperGraph.GetTriplesWithSubjectPredicate
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubjectPredicate
- uid: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: IGraph.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: IGraph.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: IGraph.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject*
  commentId: Overload:VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject
  name: GetTriplesWithSubjectObject
  nameWithType: WrapperGraph.GetTriplesWithSubjectObject
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithSubjectObject
- uid: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: IGraph.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: IGraph.GetTriplesWithSubjectObject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: IGraph.GetTriplesWithSubjectObject
    fullName: VDS.RDF.IGraph.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject*
  commentId: Overload:VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject
  name: GetTriplesWithPredicateObject
  nameWithType: WrapperGraph.GetTriplesWithPredicateObject
  fullName: VDS.RDF.WrapperGraph.GetTriplesWithPredicateObject
- uid: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IGraph
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: IGraph.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: IGraph.GetTriplesWithPredicateObject
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: IGraph.GetTriplesWithPredicateObject
    fullName: VDS.RDF.IGraph.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetUriNode*
  commentId: Overload:VDS.RDF.WrapperGraph.GetUriNode
  name: GetUriNode
  nameWithType: WrapperGraph.GetUriNode
  fullName: VDS.RDF.WrapperGraph.GetUriNode
- uid: VDS.RDF.IGraph.GetUriNode(System.String)
  commentId: M:VDS.RDF.IGraph.GetUriNode(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetUriNode(String)
  nameWithType: IGraph.GetUriNode(String)
  fullName: VDS.RDF.IGraph.GetUriNode(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetUriNode(System.String)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetUriNode(System.String)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.GetUriNode(System.Uri)
  commentId: M:VDS.RDF.IGraph.GetUriNode(System.Uri)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: GetUriNode(Uri)
  nameWithType: IGraph.GetUriNode(Uri)
  fullName: VDS.RDF.IGraph.GetUriNode(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IGraph.GetUriNode(System.Uri)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.GetUriNode(System.Uri)
    name: GetUriNode
    nameWithType: IGraph.GetUriNode
    fullName: VDS.RDF.IGraph.GetUriNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.ContainsTriple*
  commentId: Overload:VDS.RDF.WrapperGraph.ContainsTriple
  name: ContainsTriple
  nameWithType: WrapperGraph.ContainsTriple
  fullName: VDS.RDF.WrapperGraph.ContainsTriple
- uid: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.IGraph
  name: ContainsTriple(Triple)
  nameWithType: IGraph.ContainsTriple(Triple)
  fullName: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: IGraph.ContainsTriple
    fullName: VDS.RDF.IGraph.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: IGraph.ContainsTriple
    fullName: VDS.RDF.IGraph.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Merge*
  commentId: Overload:VDS.RDF.WrapperGraph.Merge
  name: Merge
  nameWithType: WrapperGraph.Merge
  fullName: VDS.RDF.WrapperGraph.Merge
- uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: Merge(IGraph)
  nameWithType: IGraph.Merge(IGraph)
  fullName: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.MergeRequested
  commentId: E:VDS.RDF.WrapperGraph.MergeRequested
  parent: VDS.RDF.WrapperGraph
  name: MergeRequested
  nameWithType: WrapperGraph.MergeRequested
  fullName: VDS.RDF.WrapperGraph.MergeRequested
- uid: VDS.RDF.WrapperGraph.Merged
  commentId: E:VDS.RDF.WrapperGraph.Merged
  parent: VDS.RDF.WrapperGraph
  name: Merged
  nameWithType: WrapperGraph.Merged
  fullName: VDS.RDF.WrapperGraph.Merged
- uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Merge(IGraph, Boolean)
  nameWithType: IGraph.Merge(IGraph, Boolean)
  fullName: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Merge(VDS.RDF.IGraph,System.Boolean)
    name: Merge
    nameWithType: IGraph.Merge
    fullName: VDS.RDF.IGraph.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Equals*
  commentId: Overload:VDS.RDF.WrapperGraph.Equals
  name: Equals
  nameWithType: WrapperGraph.Equals
  fullName: VDS.RDF.WrapperGraph.Equals
- uid: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: Equals(IGraph, Dictionary<INode, INode>)
  nameWithType: IGraph.Equals(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: IGraph.Equals(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: Equals(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: Equals
    nameWithType: IGraph.Equals
    fullName: VDS.RDF.IGraph.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: Equals
    nameWithType: IGraph.Equals
    fullName: VDS.RDF.IGraph.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
  commentId: T:System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<INode, INode>
  nameWithType: Dictionary<INode, INode>
  fullName: System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>
  nameWithType.vb: Dictionary(Of INode, INode)
  fullName.vb: System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode)
  name.vb: Dictionary(Of INode, INode)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.IsSubGraphOf*
  commentId: Overload:VDS.RDF.WrapperGraph.IsSubGraphOf
  name: IsSubGraphOf
  nameWithType: WrapperGraph.IsSubGraphOf
  fullName: VDS.RDF.WrapperGraph.IsSubGraphOf
- uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: IsSubGraphOf(IGraph)
  nameWithType: IGraph.IsSubGraphOf(IGraph)
  fullName: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: IsSubGraphOf(IGraph, Dictionary<INode, INode>)
  nameWithType: IGraph.IsSubGraphOf(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: IGraph.IsSubGraphOf(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: IsSubGraphOf(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.IsSubGraphOf(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: IsSubGraphOf
    nameWithType: IGraph.IsSubGraphOf
    fullName: VDS.RDF.IGraph.IsSubGraphOf
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.HasSubGraph*
  commentId: Overload:VDS.RDF.WrapperGraph.HasSubGraph
  name: HasSubGraph
  nameWithType: WrapperGraph.HasSubGraph
  fullName: VDS.RDF.WrapperGraph.HasSubGraph
- uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: HasSubGraph(IGraph)
  nameWithType: IGraph.HasSubGraph(IGraph)
  fullName: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  commentId: M:VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: HasSubGraph(IGraph, Dictionary<INode, INode>)
  nameWithType: IGraph.HasSubGraph(IGraph, Dictionary<INode, INode>)
  fullName: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph, System.Collections.Generic.Dictionary<VDS.RDF.INode, VDS.RDF.INode>)
  nameWithType.vb: IGraph.HasSubGraph(IGraph, Dictionary(Of INode, INode))
  fullName.vb: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph, System.Collections.Generic.Dictionary(Of VDS.RDF.INode, VDS.RDF.INode))
  name.vb: HasSubGraph(IGraph, Dictionary(Of INode, INode))
  spec.csharp:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.HasSubGraph(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)
    name: HasSubGraph
    nameWithType: IGraph.HasSubGraph
    fullName: VDS.RDF.IGraph.HasSubGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.Difference*
  commentId: Overload:VDS.RDF.WrapperGraph.Difference
  name: Difference
  nameWithType: WrapperGraph.Difference
  fullName: VDS.RDF.WrapperGraph.Difference
- uid: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  parent: VDS.RDF.IGraph
  name: Difference(IGraph)
  nameWithType: IGraph.Difference(IGraph)
  fullName: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
    name: Difference
    nameWithType: IGraph.Difference
    fullName: VDS.RDF.IGraph.Difference
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.Difference(VDS.RDF.IGraph)
    name: Difference
    nameWithType: IGraph.Difference
    fullName: VDS.RDF.IGraph.Difference
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.GraphDiffReport
  commentId: T:VDS.RDF.GraphDiffReport
  parent: VDS.RDF
  name: GraphDiffReport
  nameWithType: GraphDiffReport
  fullName: VDS.RDF.GraphDiffReport
- uid: VDS.RDF.WrapperGraph.ResolveQName*
  commentId: Overload:VDS.RDF.WrapperGraph.ResolveQName
  name: ResolveQName
  nameWithType: WrapperGraph.ResolveQName
  fullName: VDS.RDF.WrapperGraph.ResolveQName
- uid: VDS.RDF.IGraph.ResolveQName(System.String)
  commentId: M:VDS.RDF.IGraph.ResolveQName(System.String)
  parent: VDS.RDF.IGraph
  isExternal: true
  name: ResolveQName(String)
  nameWithType: IGraph.ResolveQName(String)
  fullName: VDS.RDF.IGraph.ResolveQName(System.String)
  spec.csharp:
  - uid: VDS.RDF.IGraph.ResolveQName(System.String)
    name: ResolveQName
    nameWithType: IGraph.ResolveQName
    fullName: VDS.RDF.IGraph.ResolveQName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IGraph.ResolveQName(System.String)
    name: ResolveQName
    nameWithType: IGraph.ResolveQName
    fullName: VDS.RDF.IGraph.ResolveQName
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph.TripleAsserted
  commentId: E:VDS.RDF.IGraph.TripleAsserted
  parent: VDS.RDF.IGraph
  name: TripleAsserted
  nameWithType: IGraph.TripleAsserted
  fullName: VDS.RDF.IGraph.TripleAsserted
- uid: VDS.RDF.TripleEventHandler
  commentId: T:VDS.RDF.TripleEventHandler
  parent: VDS.RDF
  name: TripleEventHandler
  nameWithType: TripleEventHandler
  fullName: VDS.RDF.TripleEventHandler
- uid: VDS.RDF.IGraph.TripleRetracted
  commentId: E:VDS.RDF.IGraph.TripleRetracted
  parent: VDS.RDF.IGraph
  name: TripleRetracted
  nameWithType: IGraph.TripleRetracted
  fullName: VDS.RDF.IGraph.TripleRetracted
- uid: VDS.RDF.IGraph.Changed
  commentId: E:VDS.RDF.IGraph.Changed
  parent: VDS.RDF.IGraph
  name: Changed
  nameWithType: IGraph.Changed
  fullName: VDS.RDF.IGraph.Changed
- uid: VDS.RDF.GraphEventHandler
  commentId: T:VDS.RDF.GraphEventHandler
  parent: VDS.RDF
  name: GraphEventHandler
  nameWithType: GraphEventHandler
  fullName: VDS.RDF.GraphEventHandler
- uid: VDS.RDF.IGraph.ClearRequested
  commentId: E:VDS.RDF.IGraph.ClearRequested
  parent: VDS.RDF.IGraph
  name: ClearRequested
  nameWithType: IGraph.ClearRequested
  fullName: VDS.RDF.IGraph.ClearRequested
- uid: VDS.RDF.CancellableGraphEventHandler
  commentId: T:VDS.RDF.CancellableGraphEventHandler
  parent: VDS.RDF
  name: CancellableGraphEventHandler
  nameWithType: CancellableGraphEventHandler
  fullName: VDS.RDF.CancellableGraphEventHandler
- uid: VDS.RDF.IGraph.Cleared
  commentId: E:VDS.RDF.IGraph.Cleared
  parent: VDS.RDF.IGraph
  name: Cleared
  nameWithType: IGraph.Cleared
  fullName: VDS.RDF.IGraph.Cleared
- uid: VDS.RDF.IGraph.MergeRequested
  commentId: E:VDS.RDF.IGraph.MergeRequested
  parent: VDS.RDF.IGraph
  name: MergeRequested
  nameWithType: IGraph.MergeRequested
  fullName: VDS.RDF.IGraph.MergeRequested
- uid: VDS.RDF.IGraph.Merged
  commentId: E:VDS.RDF.IGraph.Merged
  parent: VDS.RDF.IGraph
  name: Merged
  nameWithType: IGraph.Merged
  fullName: VDS.RDF.IGraph.Merged
- uid: VDS.RDF.BaseTripleCollection.TripleAdded
  commentId: E:VDS.RDF.BaseTripleCollection.TripleAdded
  parent: VDS.RDF.BaseTripleCollection
  name: TripleAdded
  nameWithType: BaseTripleCollection.TripleAdded
  fullName: VDS.RDF.BaseTripleCollection.TripleAdded
- uid: VDS.RDF.WrapperGraph.TripleAsserted
  commentId: E:VDS.RDF.WrapperGraph.TripleAsserted
  parent: VDS.RDF.WrapperGraph
  name: TripleAsserted
  nameWithType: WrapperGraph.TripleAsserted
  fullName: VDS.RDF.WrapperGraph.TripleAsserted
- uid: VDS.RDF.WrapperGraph.OnTripleAsserted*
  commentId: Overload:VDS.RDF.WrapperGraph.OnTripleAsserted
  name: OnTripleAsserted
  nameWithType: WrapperGraph.OnTripleAsserted
  fullName: VDS.RDF.WrapperGraph.OnTripleAsserted
- uid: VDS.RDF.TripleEventArgs
  commentId: T:VDS.RDF.TripleEventArgs
  parent: VDS.RDF
  name: TripleEventArgs
  nameWithType: TripleEventArgs
  fullName: VDS.RDF.TripleEventArgs
- uid: VDS.RDF.WrapperGraph.RaiseTripleAsserted*
  commentId: Overload:VDS.RDF.WrapperGraph.RaiseTripleAsserted
  name: RaiseTripleAsserted
  nameWithType: WrapperGraph.RaiseTripleAsserted
  fullName: VDS.RDF.WrapperGraph.RaiseTripleAsserted
- uid: VDS.RDF.BaseTripleCollection.TripleRemoved
  commentId: E:VDS.RDF.BaseTripleCollection.TripleRemoved
  parent: VDS.RDF.BaseTripleCollection
  name: TripleRemoved
  nameWithType: BaseTripleCollection.TripleRemoved
  fullName: VDS.RDF.BaseTripleCollection.TripleRemoved
- uid: VDS.RDF.WrapperGraph.TripleRetracted
  commentId: E:VDS.RDF.WrapperGraph.TripleRetracted
  parent: VDS.RDF.WrapperGraph
  name: TripleRetracted
  nameWithType: WrapperGraph.TripleRetracted
  fullName: VDS.RDF.WrapperGraph.TripleRetracted
- uid: VDS.RDF.WrapperGraph.OnTripleRetracted*
  commentId: Overload:VDS.RDF.WrapperGraph.OnTripleRetracted
  name: OnTripleRetracted
  nameWithType: WrapperGraph.OnTripleRetracted
  fullName: VDS.RDF.WrapperGraph.OnTripleRetracted
- uid: VDS.RDF.WrapperGraph.RaiseTripleRetracted*
  commentId: Overload:VDS.RDF.WrapperGraph.RaiseTripleRetracted
  name: RaiseTripleRetracted
  nameWithType: WrapperGraph.RaiseTripleRetracted
  fullName: VDS.RDF.WrapperGraph.RaiseTripleRetracted
- uid: VDS.RDF.WrapperGraph.OnChanged*
  commentId: Overload:VDS.RDF.WrapperGraph.OnChanged
  name: OnChanged
  nameWithType: WrapperGraph.OnChanged
  fullName: VDS.RDF.WrapperGraph.OnChanged
- uid: VDS.RDF.GraphEventArgs
  commentId: T:VDS.RDF.GraphEventArgs
  parent: VDS.RDF
  name: GraphEventArgs
  nameWithType: GraphEventArgs
  fullName: VDS.RDF.GraphEventArgs
- uid: VDS.RDF.WrapperGraph.Changed
  commentId: E:VDS.RDF.WrapperGraph.Changed
  parent: VDS.RDF.WrapperGraph
  name: Changed
  nameWithType: WrapperGraph.Changed
  fullName: VDS.RDF.WrapperGraph.Changed
- uid: VDS.RDF.WrapperGraph.RaiseGraphChanged*
  commentId: Overload:VDS.RDF.WrapperGraph.RaiseGraphChanged
  name: RaiseGraphChanged
  nameWithType: WrapperGraph.RaiseGraphChanged
  fullName: VDS.RDF.WrapperGraph.RaiseGraphChanged
- uid: VDS.RDF.WrapperGraph.OnClearRequested*
  commentId: Overload:VDS.RDF.WrapperGraph.OnClearRequested
  name: OnClearRequested
  nameWithType: WrapperGraph.OnClearRequested
  fullName: VDS.RDF.WrapperGraph.OnClearRequested
- uid: VDS.RDF.CancellableGraphEventArgs
  commentId: T:VDS.RDF.CancellableGraphEventArgs
  parent: VDS.RDF
  name: CancellableGraphEventArgs
  nameWithType: CancellableGraphEventArgs
  fullName: VDS.RDF.CancellableGraphEventArgs
- uid: VDS.RDF.WrapperGraph.ClearRequested
  commentId: E:VDS.RDF.WrapperGraph.ClearRequested
  parent: VDS.RDF.WrapperGraph
  name: ClearRequested
  nameWithType: WrapperGraph.ClearRequested
  fullName: VDS.RDF.WrapperGraph.ClearRequested
- uid: VDS.RDF.WrapperGraph.RaiseClearRequested*
  commentId: Overload:VDS.RDF.WrapperGraph.RaiseClearRequested
  name: RaiseClearRequested
  nameWithType: WrapperGraph.RaiseClearRequested
  fullName: VDS.RDF.WrapperGraph.RaiseClearRequested
- uid: VDS.RDF.WrapperGraph.OnCleared*
  commentId: Overload:VDS.RDF.WrapperGraph.OnCleared
  name: OnCleared
  nameWithType: WrapperGraph.OnCleared
  fullName: VDS.RDF.WrapperGraph.OnCleared
- uid: VDS.RDF.WrapperGraph.Cleared
  commentId: E:VDS.RDF.WrapperGraph.Cleared
  parent: VDS.RDF.WrapperGraph
  name: Cleared
  nameWithType: WrapperGraph.Cleared
  fullName: VDS.RDF.WrapperGraph.Cleared
- uid: VDS.RDF.WrapperGraph.RaiseCleared*
  commentId: Overload:VDS.RDF.WrapperGraph.RaiseCleared
  name: RaiseCleared
  nameWithType: WrapperGraph.RaiseCleared
  fullName: VDS.RDF.WrapperGraph.RaiseCleared
- uid: VDS.RDF.WrapperGraph.OnMergeRequested*
  commentId: Overload:VDS.RDF.WrapperGraph.OnMergeRequested
  name: OnMergeRequested
  nameWithType: WrapperGraph.OnMergeRequested
  fullName: VDS.RDF.WrapperGraph.OnMergeRequested
- uid: VDS.RDF.WrapperGraph.RaiseMergeRequested*
  commentId: Overload:VDS.RDF.WrapperGraph.RaiseMergeRequested
  name: RaiseMergeRequested
  nameWithType: WrapperGraph.RaiseMergeRequested
  fullName: VDS.RDF.WrapperGraph.RaiseMergeRequested
- uid: VDS.RDF.WrapperGraph.OnMerged*
  commentId: Overload:VDS.RDF.WrapperGraph.OnMerged
  name: OnMerged
  nameWithType: WrapperGraph.OnMerged
  fullName: VDS.RDF.WrapperGraph.OnMerged
- uid: VDS.RDF.WrapperGraph.RaiseMerged*
  commentId: Overload:VDS.RDF.WrapperGraph.RaiseMerged
  name: RaiseMerged
  nameWithType: WrapperGraph.RaiseMerged
  fullName: VDS.RDF.WrapperGraph.RaiseMerged
- uid: VDS.RDF.WrapperGraph.AttachEventHandlers*
  commentId: Overload:VDS.RDF.WrapperGraph.AttachEventHandlers
  name: AttachEventHandlers
  nameWithType: WrapperGraph.AttachEventHandlers
  fullName: VDS.RDF.WrapperGraph.AttachEventHandlers
- uid: VDS.RDF.WrapperGraph.Dispose*
  commentId: Overload:VDS.RDF.WrapperGraph.Dispose
  name: Dispose
  nameWithType: WrapperGraph.Dispose
  fullName: VDS.RDF.WrapperGraph.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetObjectData*
  commentId: Overload:VDS.RDF.WrapperGraph.GetObjectData
  name: GetObjectData
  nameWithType: WrapperGraph.GetObjectData
  fullName: VDS.RDF.WrapperGraph.GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.WrapperGraph.GetSchema*
  commentId: Overload:VDS.RDF.WrapperGraph.GetSchema
  name: GetSchema
  nameWithType: WrapperGraph.GetSchema
  fullName: VDS.RDF.WrapperGraph.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: true
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: VDS.RDF.WrapperGraph.ReadXml*
  commentId: Overload:VDS.RDF.WrapperGraph.ReadXml
  name: ReadXml
  nameWithType: WrapperGraph.ReadXml
  fullName: VDS.RDF.WrapperGraph.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: VDS.RDF.WrapperGraph.WriteXml*
  commentId: Overload:VDS.RDF.WrapperGraph.WriteXml
  name: WriteXml
  nameWithType: WrapperGraph.WriteXml
  fullName: VDS.RDF.WrapperGraph.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
shouldSkipMarkup: true
