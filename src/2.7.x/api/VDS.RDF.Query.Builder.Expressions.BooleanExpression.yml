### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.BooleanExpression
  id: BooleanExpression
  parent: VDS.RDF.Query.Builder.Expressions
  children:
  - VDS.RDF.Query.Builder.Expressions.BooleanExpression.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_BitwiseAnd(VDS.RDF.Query.Builder.Expressions.BooleanExpression,VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  - VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_BitwiseOr(VDS.RDF.Query.Builder.Expressions.BooleanExpression,VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  - VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_False(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  - VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_LogicalNot(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  - VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_True(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  langs:
  - csharp
  - vb
  name: BooleanExpression
  nameWithType: BooleanExpression
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BooleanExpression
    path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  summary: "\nRepresents a logical expression.\n"
  example: []
  syntax:
    content: 'public sealed class BooleanExpression : TypedLiteralExpression<bool>'
    content.vb: >-
      Public NotInheritable Class BooleanExpression
          Inherits TypedLiteralExpression(Of Boolean)
  inheritance:
  - System.Object
  - VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression
  - VDS.RDF.Query.Builder.Expressions.RdfTermExpression
  - VDS.RDF.Query.Builder.Expressions.LiteralExpression
  - VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression{System.Boolean}
  inheritedMembers:
  - VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}.Expression
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Builder.Expressions.BooleanExpression.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.BooleanExpression.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  id: '#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)'
  parent: VDS.RDF.Query.Builder.Expressions.BooleanExpression
  langs:
  - csharp
  - vb
  name: BooleanExpression(ISparqlExpression)
  nameWithType: BooleanExpression.BooleanExpression(ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression.BooleanExpression(VDS.RDF.Query.Expressions.ISparqlExpression)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
    startLine: 40
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  summary: "\nWraps the <code data-dev-comment-type=\"paramref\" class=\"paramref\">expression</code> as a boolean expression.\n"
  example: []
  syntax:
    content: public BooleanExpression(ISparqlExpression expression)
    parameters:
    - id: expression
      type: VDS.RDF.Query.Expressions.ISparqlExpression
    content.vb: Public Sub New(expression As ISparqlExpression)
  overload: VDS.RDF.Query.Builder.Expressions.BooleanExpression.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_BitwiseAnd(VDS.RDF.Query.Builder.Expressions.BooleanExpression,VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_BitwiseAnd(VDS.RDF.Query.Builder.Expressions.BooleanExpression,VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  id: op_BitwiseAnd(VDS.RDF.Query.Builder.Expressions.BooleanExpression,VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  parent: VDS.RDF.Query.Builder.Expressions.BooleanExpression
  langs:
  - csharp
  - vb
  name: BitwiseAnd(BooleanExpression, BooleanExpression)
  nameWithType: BooleanExpression.BitwiseAnd(BooleanExpression, BooleanExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression.BitwiseAnd(VDS.RDF.Query.Builder.Expressions.BooleanExpression, VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_BitwiseAnd
    path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator &(BooleanExpression left, BooleanExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator And(left As BooleanExpression, right As BooleanExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_BitwiseAnd*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_BitwiseOr(VDS.RDF.Query.Builder.Expressions.BooleanExpression,VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_BitwiseOr(VDS.RDF.Query.Builder.Expressions.BooleanExpression,VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  id: op_BitwiseOr(VDS.RDF.Query.Builder.Expressions.BooleanExpression,VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  parent: VDS.RDF.Query.Builder.Expressions.BooleanExpression
  langs:
  - csharp
  - vb
  name: BitwiseOr(BooleanExpression, BooleanExpression)
  nameWithType: BooleanExpression.BitwiseOr(BooleanExpression, BooleanExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression.BitwiseOr(VDS.RDF.Query.Builder.Expressions.BooleanExpression, VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_BitwiseOr
    path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator |(BooleanExpression left, BooleanExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator Or(left As BooleanExpression, right As BooleanExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_BitwiseOr*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_False(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_False(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  id: op_False(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  parent: VDS.RDF.Query.Builder.Expressions.BooleanExpression
  langs:
  - csharp
  - vb
  name: False(BooleanExpression)
  nameWithType: BooleanExpression.False(BooleanExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression.False(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_False
    path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
    startLine: 73
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static bool operator false (BooleanExpression left)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    return:
      type: System.Boolean
    content.vb: Public Shared Operator IsFalse(left As BooleanExpression) As Boolean
  overload: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_False*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_True(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_True(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  id: op_True(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  parent: VDS.RDF.Query.Builder.Expressions.BooleanExpression
  langs:
  - csharp
  - vb
  name: True(BooleanExpression)
  nameWithType: BooleanExpression.True(BooleanExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression.True(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_True
    path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static bool operator true (BooleanExpression left)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    return:
      type: System.Boolean
    content.vb: Public Shared Operator IsTrue(left As BooleanExpression) As Boolean
  overload: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_True*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_LogicalNot(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_LogicalNot(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  id: op_LogicalNot(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  parent: VDS.RDF.Query.Builder.Expressions.BooleanExpression
  langs:
  - csharp
  - vb
  name: LogicalNot(BooleanExpression)
  nameWithType: BooleanExpression.LogicalNot(BooleanExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression.LogicalNot(VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LogicalNot
    path: Libraries/dotNetRDF/Query/Builder/Expressions/BooleanExpression.cs
    startLine: 83
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator !(BooleanExpression expression)
    parameters:
    - id: expression
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: VB cannot support this operator.
  overload: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_LogicalNot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.Query.Builder.Expressions
  commentId: N:VDS.RDF.Query.Builder.Expressions
  name: VDS.RDF.Query.Builder.Expressions
  nameWithType: VDS.RDF.Query.Builder.Expressions
  fullName: VDS.RDF.Query.Builder.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}
  commentId: T:VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}
  parent: VDS.RDF.Query.Builder.Expressions
  definition: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
  name: PrimaryExpression<ISparqlExpression>
  nameWithType: PrimaryExpression<ISparqlExpression>
  fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression<VDS.RDF.Query.Expressions.ISparqlExpression>
  nameWithType.vb: PrimaryExpression(Of ISparqlExpression)
  fullName.vb: VDS.RDF.Query.Builder.Expressions.PrimaryExpression(Of VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: PrimaryExpression(Of ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
    name: PrimaryExpression
    nameWithType: PrimaryExpression
    fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
    name: PrimaryExpression
    nameWithType: PrimaryExpression
    fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.SparqlExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: SparqlExpression
  nameWithType: SparqlExpression
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression
- uid: VDS.RDF.Query.Builder.Expressions.RdfTermExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.RdfTermExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: RdfTermExpression
  nameWithType: RdfTermExpression
  fullName: VDS.RDF.Query.Builder.Expressions.RdfTermExpression
- uid: VDS.RDF.Query.Builder.Expressions.LiteralExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.LiteralExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: LiteralExpression
  nameWithType: LiteralExpression
  fullName: VDS.RDF.Query.Builder.Expressions.LiteralExpression
- uid: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression{System.Boolean}
  commentId: T:VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression{System.Boolean}
  parent: VDS.RDF.Query.Builder.Expressions
  definition: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression`1
  name: TypedLiteralExpression<Boolean>
  nameWithType: TypedLiteralExpression<Boolean>
  fullName: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression<System.Boolean>
  nameWithType.vb: TypedLiteralExpression(Of Boolean)
  fullName.vb: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression(Of System.Boolean)
  name.vb: TypedLiteralExpression(Of Boolean)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression`1
    name: TypedLiteralExpression
    nameWithType: TypedLiteralExpression
    fullName: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression`1
    name: TypedLiteralExpression
    nameWithType: TypedLiteralExpression
    fullName: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
  commentId: M:VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
  parent: VDS.RDF.Query.Builder.Expressions.LiteralExpression
  name: ToSimpleLiteral()
  nameWithType: LiteralExpression.ToSimpleLiteral()
  fullName: VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral()
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
    name: ToSimpleLiteral
    nameWithType: LiteralExpression.ToSimpleLiteral
    fullName: VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
    name: ToSimpleLiteral
    nameWithType: LiteralExpression.ToSimpleLiteral
    fullName: VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: In(SparqlExpression[])
  nameWithType: SparqlExpression.In(SparqlExpression[])
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
  nameWithType.vb: SparqlExpression.In(SparqlExpression())
  fullName.vb: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression())
  name.vb: In(SparqlExpression())
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
    name: In
    nameWithType: SparqlExpression.In
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression
    name: SparqlExpression
    nameWithType: SparqlExpression
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
    name: In
    nameWithType: SparqlExpression.In
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression
    name: SparqlExpression
    nameWithType: SparqlExpression
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: Gt(ISparqlExpression, ISparqlExpression)
  nameWithType: SparqlExpression.Gt(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Gt
    nameWithType: SparqlExpression.Gt
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Gt
    nameWithType: SparqlExpression.Gt
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: Lt(ISparqlExpression, ISparqlExpression)
  nameWithType: SparqlExpression.Lt(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Lt
    nameWithType: SparqlExpression.Lt
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Lt
    nameWithType: SparqlExpression.Lt
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: Ge(ISparqlExpression, ISparqlExpression)
  nameWithType: SparqlExpression.Ge(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Ge
    nameWithType: SparqlExpression.Ge
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Ge
    nameWithType: SparqlExpression.Ge
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: Le(ISparqlExpression, ISparqlExpression)
  nameWithType: SparqlExpression.Le(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Le
    nameWithType: SparqlExpression.Le
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Le
    nameWithType: SparqlExpression.Le
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}.Expression
  commentId: P:VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}.Expression
  parent: VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}
  definition: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1.Expression
  name: Expression
  nameWithType: PrimaryExpression<ISparqlExpression>.Expression
  fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression<VDS.RDF.Query.Expressions.ISparqlExpression>.Expression
  nameWithType.vb: PrimaryExpression(Of ISparqlExpression).Expression
  fullName.vb: VDS.RDF.Query.Builder.Expressions.PrimaryExpression(Of VDS.RDF.Query.Expressions.ISparqlExpression).Expression
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BooleanExpression>()
  nameWithType: Extensions.AsEnumerable<BooleanExpression>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.Expressions.BooleanExpression>()
  nameWithType.vb: Extensions.AsEnumerable(Of BooleanExpression)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.Expressions.BooleanExpression)()
  name.vb: AsEnumerable(Of BooleanExpression)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BooleanExpression>
    nameWithType: Extensions.AsEnumerable<BooleanExpression>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.Expressions.BooleanExpression>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BooleanExpression)
    nameWithType: Extensions.AsEnumerable(Of BooleanExpression)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.Expressions.BooleanExpression)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
  commentId: T:VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
  name: PrimaryExpression<TExpression>
  nameWithType: PrimaryExpression<TExpression>
  fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression<TExpression>
  nameWithType.vb: PrimaryExpression(Of TExpression)
  fullName.vb: VDS.RDF.Query.Builder.Expressions.PrimaryExpression(Of TExpression)
  name.vb: PrimaryExpression(Of TExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
    name: PrimaryExpression
    nameWithType: PrimaryExpression
    fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TExpression
    nameWithType: TExpression
    fullName: TExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
    name: PrimaryExpression
    nameWithType: PrimaryExpression
    fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TExpression
    nameWithType: TExpression
    fullName: TExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression`1
  commentId: T:VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression`1
  parent: VDS.RDF.Query.Builder.Expressions
  name: TypedLiteralExpression<T>
  nameWithType: TypedLiteralExpression<T>
  fullName: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression<T>
  nameWithType.vb: TypedLiteralExpression(Of T)
  fullName.vb: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression(Of T)
  name.vb: TypedLiteralExpression(Of T)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression`1
    name: TypedLiteralExpression
    nameWithType: TypedLiteralExpression
    fullName: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression`1
    name: TypedLiteralExpression
    nameWithType: TypedLiteralExpression
    fullName: VDS.RDF.Query.Builder.Expressions.TypedLiteralExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1.Expression
  commentId: P:VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1.Expression
  name: Expression
  nameWithType: PrimaryExpression<TExpression>.Expression
  fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression<TExpression>.Expression
  nameWithType.vb: PrimaryExpression(Of TExpression).Expression
  fullName.vb: VDS.RDF.Query.Builder.Expressions.PrimaryExpression(Of TExpression).Expression
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.#ctor*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.BooleanExpression.#ctor
  name: BooleanExpression
  nameWithType: BooleanExpression.BooleanExpression
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression.BooleanExpression
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_BitwiseAnd*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_BitwiseAnd
  name: BitwiseAnd
  nameWithType: BooleanExpression.BitwiseAnd
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression.BitwiseAnd
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.BooleanExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: BooleanExpression
  nameWithType: BooleanExpression
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_BitwiseOr*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_BitwiseOr
  name: BitwiseOr
  nameWithType: BooleanExpression.BitwiseOr
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression.BitwiseOr
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_False*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_False
  name: "False"
  nameWithType: BooleanExpression.False
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression.False
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_True*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_True
  name: "True"
  nameWithType: BooleanExpression.True
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression.True
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_LogicalNot*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.BooleanExpression.op_LogicalNot
  name: LogicalNot
  nameWithType: BooleanExpression.LogicalNot
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression.LogicalNot
shouldSkipMarkup: true
