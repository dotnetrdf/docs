### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra
  commentId: T:VDS.RDF.Query.Algebra.ISparqlAlgebra
  id: ISparqlAlgebra
  parent: VDS.RDF.Query.Algebra
  children:
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
  langs:
  - csharp
  - vb
  name: ISparqlAlgebra
  nameWithType: ISparqlAlgebra
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ISparqlAlgebra
    path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nInterface for classes that represent the SPARQL Algebra and are used to evaluate queries.\n"
  example: []
  syntax:
    content: public interface ISparqlAlgebra
    content.vb: Public Interface ISparqlAlgebra
  extensionMethods:
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  id: Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  langs:
  - csharp
  - vb
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ISparqlAlgebra.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Evaluate
    path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
    startLine: 44
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nEvaluates the Algebra in the given Context.\n"
  example: []
  syntax:
    content: BaseMultiset Evaluate(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    return:
      type: VDS.RDF.Query.Algebra.BaseMultiset
      description: ''
    content.vb: Function Evaluate(context As SparqlEvaluationContext) As BaseMultiset
  overload: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate*
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
  commentId: P:VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
  id: Variables
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: ISparqlAlgebra.Variables
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variables
    path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the enumeration of Variables used in the Algebra.\n"
  example: []
  syntax:
    content: IEnumerable<string> Variables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: ReadOnly Property Variables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
  commentId: P:VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
  id: FloatingVariables
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  langs:
  - csharp
  - vb
  name: FloatingVariables
  nameWithType: ISparqlAlgebra.FloatingVariables
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FloatingVariables
    path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
    startLine: 57
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the enumeration of floating variables in the algebra i.e. variables that are not guaranteed to have a bound value.\n"
  example: []
  syntax:
    content: IEnumerable<string> FloatingVariables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: ReadOnly Property FloatingVariables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
  commentId: P:VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
  id: FixedVariables
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  langs:
  - csharp
  - vb
  name: FixedVariables
  nameWithType: ISparqlAlgebra.FixedVariables
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FixedVariables
    path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the enumeration of fixed variables in the algebra i.e. variables that are guaranteed to have a bound value.\n"
  example: []
  syntax:
    content: IEnumerable<string> FixedVariables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: ReadOnly Property FixedVariables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  id: ToQuery
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  langs:
  - csharp
  - vb
  name: ToQuery()
  nameWithType: ISparqlAlgebra.ToQuery()
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToQuery
    path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nConverts the Algebra back to a SPARQL Query.\n"
  example: []
  syntax:
    content: SparqlQuery ToQuery()
    return:
      type: VDS.RDF.Query.SparqlQuery
      description: ''
    content.vb: Function ToQuery As SparqlQuery
  overload: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Thrown if the given Algebra cannot be converted to a SPARQL Query.
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  id: ToGraphPattern
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  langs:
  - csharp
  - vb
  name: ToGraphPattern()
  nameWithType: ISparqlAlgebra.ToGraphPattern()
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToGraphPattern
    path: Libraries/dotNetRDF/Query/Algebra/ISparqlAlgebra.cs
    startLine: 76
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Algebra
  summary: "\nConverts the Algebra back to a Graph Pattern.\n"
  example: []
  syntax:
    content: GraphPattern ToGraphPattern()
    return:
      type: VDS.RDF.Query.Patterns.GraphPattern
      description: ''
    content.vb: Function ToGraphPattern As GraphPattern
  overload: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Thrown if the given Algebra cannot be converted to a Graph Pattern.
references:
- uid: VDS.RDF.Query.Algebra
  commentId: N:VDS.RDF.Query.Algebra
  name: VDS.RDF.Query.Algebra
  nameWithType: VDS.RDF.Query.Algebra
  fullName: VDS.RDF.Query.Algebra
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ISparqlAlgebra>()
  nameWithType: Extensions.AsEnumerable<ISparqlAlgebra>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.ISparqlAlgebra>()
  nameWithType.vb: Extensions.AsEnumerable(Of ISparqlAlgebra)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.ISparqlAlgebra)()
  name.vb: AsEnumerable(Of ISparqlAlgebra)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ISparqlAlgebra>
    nameWithType: Extensions.AsEnumerable<ISparqlAlgebra>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.ISparqlAlgebra>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ISparqlAlgebra)
    nameWithType: Extensions.AsEnumerable(Of ISparqlAlgebra)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.ISparqlAlgebra)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate*
  commentId: Overload:VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate
  name: Evaluate
  nameWithType: ISparqlAlgebra.Evaluate
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.Query.Algebra.BaseMultiset
  commentId: T:VDS.RDF.Query.Algebra.BaseMultiset
  parent: VDS.RDF.Query.Algebra
  name: BaseMultiset
  nameWithType: BaseMultiset
  fullName: VDS.RDF.Query.Algebra.BaseMultiset
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables*
  commentId: Overload:VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
  name: Variables
  nameWithType: ISparqlAlgebra.Variables
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Variables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables*
  commentId: Overload:VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
  name: FloatingVariables
  nameWithType: ISparqlAlgebra.FloatingVariables
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.FloatingVariables
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables*
  commentId: Overload:VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
  name: FixedVariables
  nameWithType: ISparqlAlgebra.FixedVariables
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.FixedVariables
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery*
  commentId: Overload:VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  name: ToQuery
  nameWithType: ISparqlAlgebra.ToQuery
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
- uid: VDS.RDF.Query.SparqlQuery
  commentId: T:VDS.RDF.Query.SparqlQuery
  parent: VDS.RDF.Query
  name: SparqlQuery
  nameWithType: SparqlQuery
  fullName: VDS.RDF.Query.SparqlQuery
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern*
  commentId: Overload:VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  name: ToGraphPattern
  nameWithType: ISparqlAlgebra.ToGraphPattern
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
- uid: VDS.RDF.Query.Patterns.GraphPattern
  commentId: T:VDS.RDF.Query.Patterns.GraphPattern
  parent: VDS.RDF.Query.Patterns
  name: GraphPattern
  nameWithType: GraphPattern
  fullName: VDS.RDF.Query.Patterns.GraphPattern
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
shouldSkipMarkup: true
