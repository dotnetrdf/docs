### YamlMime:ManagedReference
items:
- uid: VDS.RDF.LiteralEqualityMode
  commentId: T:VDS.RDF.LiteralEqualityMode
  id: LiteralEqualityMode
  parent: VDS.RDF
  children:
  - VDS.RDF.LiteralEqualityMode.Loose
  - VDS.RDF.LiteralEqualityMode.Strict
  langs:
  - csharp
  - vb
  name: LiteralEqualityMode
  nameWithType: LiteralEqualityMode
  fullName: VDS.RDF.LiteralEqualityMode
  type: Enum
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Options.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LiteralEqualityMode
    path: Libraries/dotNetRDF/Core/Options.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nPossible Literal Equality Mode Settings.\n"
  example: []
  syntax:
    content: public enum LiteralEqualityMode
    content.vb: Public Enum LiteralEqualityMode
  extensionMethods:
  - VDS.RDF.LiteralEqualityMode.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: VDS.RDF.LiteralEqualityMode.Strict
  commentId: F:VDS.RDF.LiteralEqualityMode.Strict
  id: Strict
  parent: VDS.RDF.LiteralEqualityMode
  langs:
  - csharp
  - vb
  name: Strict
  nameWithType: LiteralEqualityMode.Strict
  fullName: VDS.RDF.LiteralEqualityMode.Strict
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Options.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Strict
    path: Libraries/dotNetRDF/Core/Options.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nStrict Mode compares Literals according to the official W3C RDF Specification\n"
  remarks: "\nThis means Literals are equal if and only if:\n<ol>\n<li>The Lexical Values are identical when compared using Ordinal Comparison</li>\n<li>The Language Tags if present are identical</li>\n<li>The Datatypes if present are identical</li>\n</ol>\n"
  example: []
  syntax:
    content: Strict = 0
    return:
      type: VDS.RDF.LiteralEqualityMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.LiteralEqualityMode.Loose
  commentId: F:VDS.RDF.LiteralEqualityMode.Loose
  id: Loose
  parent: VDS.RDF.LiteralEqualityMode
  langs:
  - csharp
  - vb
  name: Loose
  nameWithType: LiteralEqualityMode.Loose
  fullName: VDS.RDF.LiteralEqualityMode.Loose
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Options.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Loose
    path: Libraries/dotNetRDF/Core/Options.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoose Mode compares Literals based on values (if they have known Datatypes)\n"
  remarks: "\nThis means Literals can be equal if they have lexically different values which are equivalent when converted to the Datatype.\n<br /><br />\nLiterals without Datatypes and those whose Datatypes are unknown or not handled by the Library will be compared using lexical equivalence as with <xref href=\"VDS.RDF.LiteralEqualityMode.Strict\" data-throw-if-not-resolved=\"false\"></xref> mode.\n"
  example: []
  syntax:
    content: Loose = 1
    return:
      type: VDS.RDF.LiteralEqualityMode
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.LiteralEqualityMode.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<LiteralEqualityMode>()
  nameWithType: Extensions.AsEnumerable<LiteralEqualityMode>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.LiteralEqualityMode>()
  nameWithType.vb: Extensions.AsEnumerable(Of LiteralEqualityMode)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.LiteralEqualityMode)()
  name.vb: AsEnumerable(Of LiteralEqualityMode)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<LiteralEqualityMode>
    nameWithType: Extensions.AsEnumerable<LiteralEqualityMode>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.LiteralEqualityMode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of LiteralEqualityMode)
    nameWithType: Extensions.AsEnumerable(Of LiteralEqualityMode)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.LiteralEqualityMode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.LiteralEqualityMode
  commentId: T:VDS.RDF.LiteralEqualityMode
  parent: VDS.RDF
  name: LiteralEqualityMode
  nameWithType: LiteralEqualityMode
  fullName: VDS.RDF.LiteralEqualityMode
- uid: VDS.RDF.LiteralEqualityMode.Strict
  commentId: F:VDS.RDF.LiteralEqualityMode.Strict
  isExternal: true
shouldSkipMarkup: true
