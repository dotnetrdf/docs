### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer
  commentId: T:VDS.RDF.Storage.Management.IAsyncStorageServer
  id: IAsyncStorageServer
  parent: VDS.RDF.Storage.Management
  children:
  - VDS.RDF.Storage.Management.IAsyncStorageServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  - VDS.RDF.Storage.Management.IAsyncStorageServer.DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  - VDS.RDF.Storage.Management.IAsyncStorageServer.GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  - VDS.RDF.Storage.Management.IAsyncStorageServer.GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  - VDS.RDF.Storage.Management.IAsyncStorageServer.GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  - VDS.RDF.Storage.Management.IAsyncStorageServer.IOBehaviour
  - VDS.RDF.Storage.Management.IAsyncStorageServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  langs:
  - csharp
  - vb
  name: IAsyncStorageServer
  nameWithType: IAsyncStorageServer
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IAsyncStorageServer
    path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
    startLine: 96
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nInterface for storage providers which are capable of managing multiple stores asynchronously.\n"
  example: []
  syntax:
    content: 'public interface IAsyncStorageServer : IDisposable'
    content.vb: >-
      Public Interface IAsyncStorageServer
          Inherits IDisposable
  inheritedMembers:
  - System.IDisposable.Dispose
  extensionMethods:
  - VDS.RDF.Storage.Management.IAsyncStorageServer.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.IOBehaviour
  commentId: P:VDS.RDF.Storage.Management.IAsyncStorageServer.IOBehaviour
  id: IOBehaviour
  parent: VDS.RDF.Storage.Management.IAsyncStorageServer
  langs:
  - csharp
  - vb
  name: IOBehaviour
  nameWithType: IAsyncStorageServer.IOBehaviour
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.IOBehaviour
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IOBehaviour
    path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
    startLine: 102
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nGets information on the IO Behaviour of the Server.\n"
  example: []
  syntax:
    content: IOBehaviour IOBehaviour { get; }
    parameters: []
    return:
      type: VDS.RDF.Storage.IOBehaviour
    content.vb: ReadOnly Property IOBehaviour As IOBehaviour
  overload: VDS.RDF.Storage.Management.IAsyncStorageServer.IOBehaviour*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.IAsyncStorageServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  id: ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.IAsyncStorageServer
  langs:
  - csharp
  - vb
  name: ListStores(AsyncStorageCallback, Object)
  nameWithType: IAsyncStorageServer.ListStores(AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ListStores
    path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nLists the available stores asynchronously.\n"
  example: []
  syntax:
    content: void ListStores(AsyncStorageCallback callback, object state)
    parameters:
    - id: callback
      type: VDS.RDF.Storage.AsyncStorageCallback
      description: Callback.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Sub ListStores(callback As AsyncStorageCallback, state As Object)
  overload: VDS.RDF.Storage.Management.IAsyncStorageServer.ListStores*
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.IAsyncStorageServer.GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  id: GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.IAsyncStorageServer
  langs:
  - csharp
  - vb
  name: GetDefaultTemplate(String, AsyncStorageCallback, Object)
  nameWithType: IAsyncStorageServer.GetDefaultTemplate(String, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.GetDefaultTemplate(System.String, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetDefaultTemplate
    path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
    startLine: 121
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nGets a default template for creating a store with the given ID.\n"
  example: []
  syntax:
    content: void GetDefaultTemplate(string id, AsyncStorageCallback callback, object state)
    parameters:
    - id: id
      type: System.String
      description: ID.
    - id: callback
      type: VDS.RDF.Storage.AsyncStorageCallback
      description: Callback.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Sub GetDefaultTemplate(id As String, callback As AsyncStorageCallback, state As Object)
  overload: VDS.RDF.Storage.Management.IAsyncStorageServer.GetDefaultTemplate*
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.IAsyncStorageServer.GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  id: GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.IAsyncStorageServer
  langs:
  - csharp
  - vb
  name: GetAvailableTemplates(String, AsyncStorageCallback, Object)
  nameWithType: IAsyncStorageServer.GetAvailableTemplates(String, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.GetAvailableTemplates(System.String, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetAvailableTemplates
    path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
    startLine: 129
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nGets all available templates for creating a store with the given ID.\n"
  example: []
  syntax:
    content: void GetAvailableTemplates(string id, AsyncStorageCallback callback, object state)
    parameters:
    - id: id
      type: System.String
      description: ID.
    - id: callback
      type: VDS.RDF.Storage.AsyncStorageCallback
      description: Callback.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Sub GetAvailableTemplates(id As String, callback As AsyncStorageCallback, state As Object)
  overload: VDS.RDF.Storage.Management.IAsyncStorageServer.GetAvailableTemplates*
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.IAsyncStorageServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  id: CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.IAsyncStorageServer
  langs:
  - csharp
  - vb
  name: CreateStore(IStoreTemplate, AsyncStorageCallback, Object)
  nameWithType: IAsyncStorageServer.CreateStore(IStoreTemplate, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateStore
    path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
    startLine: 140
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nCreates a store asynchronously.\n"
  remarks: "\nBehaviour with regards to whether creating a store overwrites an existing store with the same ID is at the discretion of the implementation and <em>SHOULD</em> be documented in an implementations comments.\n"
  example: []
  syntax:
    content: void CreateStore(IStoreTemplate template, AsyncStorageCallback callback, object state)
    parameters:
    - id: template
      type: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
      description: Template for the store to be created.
    - id: callback
      type: VDS.RDF.Storage.AsyncStorageCallback
      description: Callback.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Sub CreateStore(template As IStoreTemplate, callback As AsyncStorageCallback, state As Object)
  overload: VDS.RDF.Storage.Management.IAsyncStorageServer.CreateStore*
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.IAsyncStorageServer.DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  id: DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.IAsyncStorageServer
  langs:
  - csharp
  - vb
  name: DeleteStore(String, AsyncStorageCallback, Object)
  nameWithType: IAsyncStorageServer.DeleteStore(String, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.DeleteStore(System.String, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DeleteStore
    path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
    startLine: 148
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nDeletes a store asynchronously.\n"
  example: []
  syntax:
    content: void DeleteStore(string storeID, AsyncStorageCallback callback, object state)
    parameters:
    - id: storeID
      type: System.String
      description: ID of the store to delete.
    - id: callback
      type: VDS.RDF.Storage.AsyncStorageCallback
      description: Callback.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Sub DeleteStore(storeID As String, callback As AsyncStorageCallback, state As Object)
  overload: VDS.RDF.Storage.Management.IAsyncStorageServer.DeleteStore*
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.IAsyncStorageServer.GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  id: GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.IAsyncStorageServer
  langs:
  - csharp
  - vb
  name: GetStore(String, AsyncStorageCallback, Object)
  nameWithType: IAsyncStorageServer.GetStore(String, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.GetStore(System.String, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetStore
    path: Libraries/dotNetRDF/Storage/Management/IStorageServer.cs
    startLine: 156
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nGets a store asynchronously.\n"
  example: []
  syntax:
    content: void GetStore(string storeID, AsyncStorageCallback callback, object state)
    parameters:
    - id: storeID
      type: System.String
      description: Store ID.
    - id: callback
      type: VDS.RDF.Storage.AsyncStorageCallback
      description: Callback.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Sub GetStore(storeID As String, callback As AsyncStorageCallback, state As Object)
  overload: VDS.RDF.Storage.Management.IAsyncStorageServer.GetStore*
references:
- uid: VDS.RDF.Storage.Management
  commentId: N:VDS.RDF.Storage.Management
  name: VDS.RDF.Storage.Management
  nameWithType: VDS.RDF.Storage.Management
  fullName: VDS.RDF.Storage.Management
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IAsyncStorageServer>()
  nameWithType: Extensions.AsEnumerable<IAsyncStorageServer>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.Management.IAsyncStorageServer>()
  nameWithType.vb: Extensions.AsEnumerable(Of IAsyncStorageServer)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.Management.IAsyncStorageServer)()
  name.vb: AsEnumerable(Of IAsyncStorageServer)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IAsyncStorageServer>
    nameWithType: Extensions.AsEnumerable<IAsyncStorageServer>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.Management.IAsyncStorageServer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IAsyncStorageServer)
    nameWithType: Extensions.AsEnumerable(Of IAsyncStorageServer)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.Management.IAsyncStorageServer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.IOBehaviour*
  commentId: Overload:VDS.RDF.Storage.Management.IAsyncStorageServer.IOBehaviour
  name: IOBehaviour
  nameWithType: IAsyncStorageServer.IOBehaviour
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.IOBehaviour
- uid: VDS.RDF.Storage.IOBehaviour
  commentId: T:VDS.RDF.Storage.IOBehaviour
  parent: VDS.RDF.Storage
  name: IOBehaviour
  nameWithType: IOBehaviour
  fullName: VDS.RDF.Storage.IOBehaviour
- uid: VDS.RDF.Storage
  commentId: N:VDS.RDF.Storage
  name: VDS.RDF.Storage
  nameWithType: VDS.RDF.Storage
  fullName: VDS.RDF.Storage
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.ListStores*
  commentId: Overload:VDS.RDF.Storage.Management.IAsyncStorageServer.ListStores
  name: ListStores
  nameWithType: IAsyncStorageServer.ListStores
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.ListStores
- uid: VDS.RDF.Storage.AsyncStorageCallback
  commentId: T:VDS.RDF.Storage.AsyncStorageCallback
  parent: VDS.RDF.Storage
  name: AsyncStorageCallback
  nameWithType: AsyncStorageCallback
  fullName: VDS.RDF.Storage.AsyncStorageCallback
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.GetDefaultTemplate*
  commentId: Overload:VDS.RDF.Storage.Management.IAsyncStorageServer.GetDefaultTemplate
  name: GetDefaultTemplate
  nameWithType: IAsyncStorageServer.GetDefaultTemplate
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.GetDefaultTemplate
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.GetAvailableTemplates*
  commentId: Overload:VDS.RDF.Storage.Management.IAsyncStorageServer.GetAvailableTemplates
  name: GetAvailableTemplates
  nameWithType: IAsyncStorageServer.GetAvailableTemplates
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.GetAvailableTemplates
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.CreateStore*
  commentId: Overload:VDS.RDF.Storage.Management.IAsyncStorageServer.CreateStore
  name: CreateStore
  nameWithType: IAsyncStorageServer.CreateStore
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.CreateStore
- uid: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
  commentId: T:VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
  parent: VDS.RDF.Storage.Management.Provisioning
  name: IStoreTemplate
  nameWithType: IStoreTemplate
  fullName: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
- uid: VDS.RDF.Storage.Management.Provisioning
  commentId: N:VDS.RDF.Storage.Management.Provisioning
  name: VDS.RDF.Storage.Management.Provisioning
  nameWithType: VDS.RDF.Storage.Management.Provisioning
  fullName: VDS.RDF.Storage.Management.Provisioning
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.DeleteStore*
  commentId: Overload:VDS.RDF.Storage.Management.IAsyncStorageServer.DeleteStore
  name: DeleteStore
  nameWithType: IAsyncStorageServer.DeleteStore
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.DeleteStore
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer.GetStore*
  commentId: Overload:VDS.RDF.Storage.Management.IAsyncStorageServer.GetStore
  name: GetStore
  nameWithType: IAsyncStorageServer.GetStore
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer.GetStore
shouldSkipMarkup: true
