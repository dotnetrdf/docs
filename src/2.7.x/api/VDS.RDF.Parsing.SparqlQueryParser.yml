### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.SparqlQueryParser
  commentId: T:VDS.RDF.Parsing.SparqlQueryParser
  id: SparqlQueryParser
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.SparqlQueryParser.#ctor
  - VDS.RDF.Parsing.SparqlQueryParser.#ctor(VDS.RDF.Parsing.SparqlQuerySyntax)
  - VDS.RDF.Parsing.SparqlQueryParser.#ctor(VDS.RDF.Parsing.Tokens.TokenQueueMode)
  - VDS.RDF.Parsing.SparqlQueryParser.#ctor(VDS.RDF.Parsing.Tokens.TokenQueueMode,VDS.RDF.Parsing.SparqlQuerySyntax)
  - VDS.RDF.Parsing.SparqlQueryParser.DefaultBaseUri
  - VDS.RDF.Parsing.SparqlQueryParser.ExcessTokensString(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext,System.Int32)
  - VDS.RDF.Parsing.SparqlQueryParser.ExpressionFactories
  - VDS.RDF.Parsing.SparqlQueryParser.Parse(System.IO.StreamReader)
  - VDS.RDF.Parsing.SparqlQueryParser.Parse(System.IO.TextReader)
  - VDS.RDF.Parsing.SparqlQueryParser.ParseFromFile(System.String)
  - VDS.RDF.Parsing.SparqlQueryParser.ParseFromString(System.String)
  - VDS.RDF.Parsing.SparqlQueryParser.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  - VDS.RDF.Parsing.SparqlQueryParser.QueryOptimiser
  - VDS.RDF.Parsing.SparqlQueryParser.SyntaxMode
  - VDS.RDF.Parsing.SparqlQueryParser.TraceTokeniser
  - VDS.RDF.Parsing.SparqlQueryParser.TryParseGraphPattern(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext,System.Boolean)
  - VDS.RDF.Parsing.SparqlQueryParser.Warning
  langs:
  - csharp
  - vb
  name: SparqlQueryParser
  nameWithType: SparqlQueryParser
  fullName: VDS.RDF.Parsing.SparqlQueryParser
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlQueryParser
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 80
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nClass for parsing SPARQL Queries into <xref href=\"VDS.RDF.Query.SparqlQuery\" data-throw-if-not-resolved=\"false\"></xref> objects that can be used to query a Graph or Triple Store.\n"
  example: []
  syntax:
    content: 'public class SparqlQueryParser : ITraceableTokeniser, IObjectParser<SparqlQuery>'
    content.vb: >-
      Public Class SparqlQueryParser
          Implements ITraceableTokeniser, IObjectParser(Of SparqlQuery)
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Parsing.ITraceableTokeniser
  - VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.SparqlQueryParser.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.SparqlQueryParser.#ctor
  commentId: M:VDS.RDF.Parsing.SparqlQueryParser.#ctor
  id: '#ctor'
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: SparqlQueryParser()
  nameWithType: SparqlQueryParser.SparqlQueryParser()
  fullName: VDS.RDF.Parsing.SparqlQueryParser.SparqlQueryParser()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 95
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new instance of the SPARQL Query Parser.\n"
  example: []
  syntax:
    content: public SparqlQueryParser()
    content.vb: Public Sub New
  overload: VDS.RDF.Parsing.SparqlQueryParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.#ctor(VDS.RDF.Parsing.SparqlQuerySyntax)
  commentId: M:VDS.RDF.Parsing.SparqlQueryParser.#ctor(VDS.RDF.Parsing.SparqlQuerySyntax)
  id: '#ctor(VDS.RDF.Parsing.SparqlQuerySyntax)'
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: SparqlQueryParser(SparqlQuerySyntax)
  nameWithType: SparqlQueryParser.SparqlQueryParser(SparqlQuerySyntax)
  fullName: VDS.RDF.Parsing.SparqlQueryParser.SparqlQueryParser(VDS.RDF.Parsing.SparqlQuerySyntax)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 102
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new instance of the SPARQL Query Parser which supports the given SPARQL Syntax.\n"
  example: []
  syntax:
    content: public SparqlQueryParser(SparqlQuerySyntax syntax)
    parameters:
    - id: syntax
      type: VDS.RDF.Parsing.SparqlQuerySyntax
      description: SPARQL Syntax.
    content.vb: Public Sub New(syntax As SparqlQuerySyntax)
  overload: VDS.RDF.Parsing.SparqlQueryParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.#ctor(VDS.RDF.Parsing.Tokens.TokenQueueMode)
  commentId: M:VDS.RDF.Parsing.SparqlQueryParser.#ctor(VDS.RDF.Parsing.Tokens.TokenQueueMode)
  id: '#ctor(VDS.RDF.Parsing.Tokens.TokenQueueMode)'
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: SparqlQueryParser(TokenQueueMode)
  nameWithType: SparqlQueryParser.SparqlQueryParser(TokenQueueMode)
  fullName: VDS.RDF.Parsing.SparqlQueryParser.SparqlQueryParser(VDS.RDF.Parsing.Tokens.TokenQueueMode)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 109
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new instance of the SPARQL Query Parser using the given Tokeniser Queue Mode.\n"
  example: []
  syntax:
    content: public SparqlQueryParser(TokenQueueMode queueMode)
    parameters:
    - id: queueMode
      type: VDS.RDF.Parsing.Tokens.TokenQueueMode
      description: Token Queue Mode.
    content.vb: Public Sub New(queueMode As TokenQueueMode)
  overload: VDS.RDF.Parsing.SparqlQueryParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.#ctor(VDS.RDF.Parsing.Tokens.TokenQueueMode,VDS.RDF.Parsing.SparqlQuerySyntax)
  commentId: M:VDS.RDF.Parsing.SparqlQueryParser.#ctor(VDS.RDF.Parsing.Tokens.TokenQueueMode,VDS.RDF.Parsing.SparqlQuerySyntax)
  id: '#ctor(VDS.RDF.Parsing.Tokens.TokenQueueMode,VDS.RDF.Parsing.SparqlQuerySyntax)'
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: SparqlQueryParser(TokenQueueMode, SparqlQuerySyntax)
  nameWithType: SparqlQueryParser.SparqlQueryParser(TokenQueueMode, SparqlQuerySyntax)
  fullName: VDS.RDF.Parsing.SparqlQueryParser.SparqlQueryParser(VDS.RDF.Parsing.Tokens.TokenQueueMode, VDS.RDF.Parsing.SparqlQuerySyntax)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 117
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nCreates a new instance of the SPARQL Query Parser using the given Tokeniser which supports the given SPARQL Syntax.\n"
  example: []
  syntax:
    content: public SparqlQueryParser(TokenQueueMode queueMode, SparqlQuerySyntax syntax)
    parameters:
    - id: queueMode
      type: VDS.RDF.Parsing.Tokens.TokenQueueMode
      description: Token Queue Mode.
    - id: syntax
      type: VDS.RDF.Parsing.SparqlQuerySyntax
      description: SPARQL Syntax.
    content.vb: Public Sub New(queueMode As TokenQueueMode, syntax As SparqlQuerySyntax)
  overload: VDS.RDF.Parsing.SparqlQueryParser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.TraceTokeniser
  commentId: P:VDS.RDF.Parsing.SparqlQueryParser.TraceTokeniser
  id: TraceTokeniser
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: TraceTokeniser
  nameWithType: SparqlQueryParser.TraceTokeniser
  fullName: VDS.RDF.Parsing.SparqlQueryParser.TraceTokeniser
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TraceTokeniser
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 126
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets/Sets whether Tokeniser progress is Traced to the Console.\n"
  example: []
  syntax:
    content: public bool TraceTokeniser { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property TraceTokeniser As Boolean
  overload: VDS.RDF.Parsing.SparqlQueryParser.TraceTokeniser*
  implements:
  - VDS.RDF.Parsing.ITraceableTokeniser.TraceTokeniser
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.DefaultBaseUri
  commentId: P:VDS.RDF.Parsing.SparqlQueryParser.DefaultBaseUri
  id: DefaultBaseUri
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: DefaultBaseUri
  nameWithType: SparqlQueryParser.DefaultBaseUri
  fullName: VDS.RDF.Parsing.SparqlQueryParser.DefaultBaseUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultBaseUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 141
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets/Sets the Default Base URI for Queries parsed by this Parser instance.\n"
  example: []
  syntax:
    content: public Uri DefaultBaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property DefaultBaseUri As Uri
  overload: VDS.RDF.Parsing.SparqlQueryParser.DefaultBaseUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.SyntaxMode
  commentId: P:VDS.RDF.Parsing.SparqlQueryParser.SyntaxMode
  id: SyntaxMode
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: SyntaxMode
  nameWithType: SparqlQueryParser.SyntaxMode
  fullName: VDS.RDF.Parsing.SparqlQueryParser.SyntaxMode
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SyntaxMode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 156
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets/Sets the Syntax that should be supported.\n"
  example: []
  syntax:
    content: public SparqlQuerySyntax SyntaxMode { get; set; }
    parameters: []
    return:
      type: VDS.RDF.Parsing.SparqlQuerySyntax
    content.vb: Public Property SyntaxMode As SparqlQuerySyntax
  overload: VDS.RDF.Parsing.SparqlQueryParser.SyntaxMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.ExpressionFactories
  commentId: P:VDS.RDF.Parsing.SparqlQueryParser.ExpressionFactories
  id: ExpressionFactories
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: ExpressionFactories
  nameWithType: SparqlQueryParser.ExpressionFactories
  fullName: VDS.RDF.Parsing.SparqlQueryParser.ExpressionFactories
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExpressionFactories
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 171
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets/Sets the locally scoped custom expression factories.\n"
  example: []
  syntax:
    content: public IEnumerable<ISparqlCustomExpressionFactory> ExpressionFactories { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory}
    content.vb: Public Property ExpressionFactories As IEnumerable(Of ISparqlCustomExpressionFactory)
  overload: VDS.RDF.Parsing.SparqlQueryParser.ExpressionFactories*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.QueryOptimiser
  commentId: P:VDS.RDF.Parsing.SparqlQueryParser.QueryOptimiser
  id: QueryOptimiser
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: QueryOptimiser
  nameWithType: SparqlQueryParser.QueryOptimiser
  fullName: VDS.RDF.Parsing.SparqlQueryParser.QueryOptimiser
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryOptimiser
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 198
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets/Sets the locally scoped Query Optimiser applied to queries at the end of the parsing process.\n"
  remarks: "\n<p>\nMay be null if no locally scoped optimiser is set in which case the globally scoped optimiser will be used.\n</p>\n"
  example: []
  syntax:
    content: public IQueryOptimiser QueryOptimiser { get; set; }
    parameters: []
    return:
      type: VDS.RDF.Query.Optimisation.IQueryOptimiser
    content.vb: Public Property QueryOptimiser As IQueryOptimiser
  overload: VDS.RDF.Parsing.SparqlQueryParser.QueryOptimiser*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.Warning
  commentId: E:VDS.RDF.Parsing.SparqlQueryParser.Warning
  id: Warning
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: Warning
  nameWithType: SparqlQueryParser.Warning
  fullName: VDS.RDF.Parsing.SparqlQueryParser.Warning
  type: Event
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Warning
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 230
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nEvent raised when a non-fatal issue with the SPARQL Query being parsed is detected\n"
  example: []
  syntax:
    content: public event SparqlWarning Warning
    return:
      type: VDS.RDF.SparqlWarning
    content.vb: Public Event Warning As SparqlWarning
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.ParseFromFile(System.String)
  commentId: M:VDS.RDF.Parsing.SparqlQueryParser.ParseFromFile(System.String)
  id: ParseFromFile(System.String)
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: ParseFromFile(String)
  nameWithType: SparqlQueryParser.ParseFromFile(String)
  fullName: VDS.RDF.Parsing.SparqlQueryParser.ParseFromFile(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ParseFromFile
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 241
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses a SPARQL Query from a File.\n"
  example: []
  syntax:
    content: public SparqlQuery ParseFromFile(string queryFile)
    parameters:
    - id: queryFile
      type: System.String
      description: File containing the Query.
    return:
      type: VDS.RDF.Query.SparqlQuery
      description: ''
    content.vb: Public Function ParseFromFile(queryFile As String) As SparqlQuery
  overload: VDS.RDF.Parsing.SparqlQueryParser.ParseFromFile*
  implements:
  - VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.ParseFromFile(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.Parse(System.IO.StreamReader)
  commentId: M:VDS.RDF.Parsing.SparqlQueryParser.Parse(System.IO.StreamReader)
  id: Parse(System.IO.StreamReader)
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: Parse(StreamReader)
  nameWithType: SparqlQueryParser.Parse(StreamReader)
  fullName: VDS.RDF.Parsing.SparqlQueryParser.Parse(System.IO.StreamReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Parse
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 253
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses a SPARQL Query from an arbitrary Input Stream.\n"
  example: []
  syntax:
    content: public SparqlQuery Parse(StreamReader input)
    parameters:
    - id: input
      type: System.IO.StreamReader
      description: Input Stream.
    return:
      type: VDS.RDF.Query.SparqlQuery
      description: ''
    content.vb: Public Function Parse(input As StreamReader) As SparqlQuery
  overload: VDS.RDF.Parsing.SparqlQueryParser.Parse*
  implements:
  - VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.Parse(System.IO.StreamReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.Parse(System.IO.TextReader)
  commentId: M:VDS.RDF.Parsing.SparqlQueryParser.Parse(System.IO.TextReader)
  id: Parse(System.IO.TextReader)
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: Parse(TextReader)
  nameWithType: SparqlQueryParser.Parse(TextReader)
  fullName: VDS.RDF.Parsing.SparqlQueryParser.Parse(System.IO.TextReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Parse
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 271
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses a SPARQL Query from an arbitrary Input.\n"
  example: []
  syntax:
    content: public SparqlQuery Parse(TextReader input)
    parameters:
    - id: input
      type: System.IO.TextReader
      description: Input.
    return:
      type: VDS.RDF.Query.SparqlQuery
      description: ''
    content.vb: Public Function Parse(input As TextReader) As SparqlQuery
  overload: VDS.RDF.Parsing.SparqlQueryParser.Parse*
  implements:
  - VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.Parse(System.IO.TextReader)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.ParseFromString(System.String)
  commentId: M:VDS.RDF.Parsing.SparqlQueryParser.ParseFromString(System.String)
  id: ParseFromString(System.String)
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: ParseFromString(String)
  nameWithType: SparqlQueryParser.ParseFromString(String)
  fullName: VDS.RDF.Parsing.SparqlQueryParser.ParseFromString(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ParseFromString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 282
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses a SPARQL Query from a String.\n"
  example: []
  syntax:
    content: public SparqlQuery ParseFromString(string queryString)
    parameters:
    - id: queryString
      type: System.String
      description: A SPARQL Query.
    return:
      type: VDS.RDF.Query.SparqlQuery
      description: ''
    content.vb: Public Function ParseFromString(queryString As String) As SparqlQuery
  overload: VDS.RDF.Parsing.SparqlQueryParser.ParseFromString*
  implements:
  - VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.ParseFromString(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.Parsing.SparqlQueryParser.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  id: ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: ParseFromString(SparqlParameterizedString)
  nameWithType: SparqlQueryParser.ParseFromString(SparqlParameterizedString)
  fullName: VDS.RDF.Parsing.SparqlQueryParser.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ParseFromString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 296
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses a SPARQL Query from a SPARQL Parameterized String.\n"
  remarks: "\nThe <xref href=\"VDS.RDF.Query.SparqlParameterizedString\" data-throw-if-not-resolved=\"false\"></xref> class allows you to use parameters in a String in a manner similar to SQL Commands in the ADO.Net model.  See the documentation for <xref href=\"VDS.RDF.Query.SparqlParameterizedString\" data-throw-if-not-resolved=\"false\"></xref> for details of this.\n"
  example: []
  syntax:
    content: public SparqlQuery ParseFromString(SparqlParameterizedString queryString)
    parameters:
    - id: queryString
      type: VDS.RDF.Query.SparqlParameterizedString
      description: A SPARQL Parameterized String.
    return:
      type: VDS.RDF.Query.SparqlQuery
      description: ''
    content.vb: Public Function ParseFromString(queryString As SparqlParameterizedString) As SparqlQuery
  overload: VDS.RDF.Parsing.SparqlQueryParser.ParseFromString*
  implements:
  - VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.SparqlQueryParser.TryParseGraphPattern(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext,System.Boolean)
  commentId: M:VDS.RDF.Parsing.SparqlQueryParser.TryParseGraphPattern(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext,System.Boolean)
  id: TryParseGraphPattern(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext,System.Boolean)
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: TryParseGraphPattern(SparqlQueryParserContext, Boolean)
  nameWithType: SparqlQueryParser.TryParseGraphPattern(SparqlQueryParserContext, Boolean)
  fullName: VDS.RDF.Parsing.SparqlQueryParser.TryParseGraphPattern(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryParseGraphPattern
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 1295
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nTries to parse a Graph Pattern from the given Parser Context.\n"
  example: []
  syntax:
    content: protected GraphPattern TryParseGraphPattern(SparqlQueryParserContext context, bool requireOpeningLeftBracket)
    parameters:
    - id: context
      type: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
      description: Parser Context.
    - id: requireOpeningLeftBracket
      type: System.Boolean
      description: Whether the opening Left Curly Bracket is required.
    return:
      type: VDS.RDF.Query.Patterns.GraphPattern
      description: ''
    content.vb: Protected Function TryParseGraphPattern(context As SparqlQueryParserContext, requireOpeningLeftBracket As Boolean) As GraphPattern
  overload: VDS.RDF.Parsing.SparqlQueryParser.TryParseGraphPattern*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Parsing.SparqlQueryParser.ExcessTokensString(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext,System.Int32)
  commentId: M:VDS.RDF.Parsing.SparqlQueryParser.ExcessTokensString(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext,System.Int32)
  id: ExcessTokensString(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext,System.Int32)
  parent: VDS.RDF.Parsing.SparqlQueryParser
  langs:
  - csharp
  - vb
  name: ExcessTokensString(SparqlQueryParserContext, Int32)
  nameWithType: SparqlQueryParser.ExcessTokensString(SparqlQueryParserContext, Int32)
  fullName: VDS.RDF.Parsing.SparqlQueryParser.ExcessTokensString(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExcessTokensString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/SPARQLQueryParser.cs
    startLine: 3800
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nConstructs an error message that informs the user about unexpected excess tokens in a SPARQL qery.\n"
  example: []
  syntax:
    content: public string ExcessTokensString(SparqlQueryParserContext context, int expectedCount)
    parameters:
    - id: context
      type: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
      description: Current parser context.
    - id: expectedCount
      type: System.Int32
      description: The expected number of tokens.
    return:
      type: System.String
      description: ''
    content.vb: Public Function ExcessTokensString(context As SparqlQueryParserContext, expectedCount As Integer) As String
  overload: VDS.RDF.Parsing.SparqlQueryParser.ExcessTokensString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.SparqlQuery
  commentId: T:VDS.RDF.Query.SparqlQuery
  parent: VDS.RDF.Query
  name: SparqlQuery
  nameWithType: SparqlQuery
  fullName: VDS.RDF.Query.SparqlQuery
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.ITraceableTokeniser
  commentId: T:VDS.RDF.Parsing.ITraceableTokeniser
  parent: VDS.RDF.Parsing
  name: ITraceableTokeniser
  nameWithType: ITraceableTokeniser
  fullName: VDS.RDF.Parsing.ITraceableTokeniser
- uid: VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}
  commentId: T:VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}
  parent: VDS.RDF
  definition: VDS.RDF.IObjectParser`1
  name: IObjectParser<SparqlQuery>
  nameWithType: IObjectParser<SparqlQuery>
  fullName: VDS.RDF.IObjectParser<VDS.RDF.Query.SparqlQuery>
  nameWithType.vb: IObjectParser(Of SparqlQuery)
  fullName.vb: VDS.RDF.IObjectParser(Of VDS.RDF.Query.SparqlQuery)
  name.vb: IObjectParser(Of SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.IObjectParser`1
    name: IObjectParser
    nameWithType: IObjectParser
    fullName: VDS.RDF.IObjectParser
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.IObjectParser`1
    name: IObjectParser
    nameWithType: IObjectParser
    fullName: VDS.RDF.IObjectParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.SparqlQueryParser.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlQueryParser>()
  nameWithType: Extensions.AsEnumerable<SparqlQueryParser>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.SparqlQueryParser>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlQueryParser)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.SparqlQueryParser)()
  name.vb: AsEnumerable(Of SparqlQueryParser)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlQueryParser>
    nameWithType: Extensions.AsEnumerable<SparqlQueryParser>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.SparqlQueryParser>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlQueryParser)
    nameWithType: Extensions.AsEnumerable(Of SparqlQueryParser)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.SparqlQueryParser)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.IObjectParser`1
  commentId: T:VDS.RDF.IObjectParser`1
  name: IObjectParser<T>
  nameWithType: IObjectParser<T>
  fullName: VDS.RDF.IObjectParser<T>
  nameWithType.vb: IObjectParser(Of T)
  fullName.vb: VDS.RDF.IObjectParser(Of T)
  name.vb: IObjectParser(Of T)
  spec.csharp:
  - uid: VDS.RDF.IObjectParser`1
    name: IObjectParser
    nameWithType: IObjectParser
    fullName: VDS.RDF.IObjectParser
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.IObjectParser`1
    name: IObjectParser
    nameWithType: IObjectParser
    fullName: VDS.RDF.IObjectParser
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Parsing.SparqlQueryParser.#ctor*
  commentId: Overload:VDS.RDF.Parsing.SparqlQueryParser.#ctor
  name: SparqlQueryParser
  nameWithType: SparqlQueryParser.SparqlQueryParser
  fullName: VDS.RDF.Parsing.SparqlQueryParser.SparqlQueryParser
- uid: VDS.RDF.Parsing.SparqlQuerySyntax
  commentId: T:VDS.RDF.Parsing.SparqlQuerySyntax
  parent: VDS.RDF.Parsing
  name: SparqlQuerySyntax
  nameWithType: SparqlQuerySyntax
  fullName: VDS.RDF.Parsing.SparqlQuerySyntax
- uid: VDS.RDF.Parsing.Tokens.TokenQueueMode
  commentId: T:VDS.RDF.Parsing.Tokens.TokenQueueMode
  parent: VDS.RDF.Parsing.Tokens
  name: TokenQueueMode
  nameWithType: TokenQueueMode
  fullName: VDS.RDF.Parsing.Tokens.TokenQueueMode
- uid: VDS.RDF.Parsing.Tokens
  commentId: N:VDS.RDF.Parsing.Tokens
  name: VDS.RDF.Parsing.Tokens
  nameWithType: VDS.RDF.Parsing.Tokens
  fullName: VDS.RDF.Parsing.Tokens
- uid: VDS.RDF.Parsing.SparqlQueryParser.TraceTokeniser*
  commentId: Overload:VDS.RDF.Parsing.SparqlQueryParser.TraceTokeniser
  name: TraceTokeniser
  nameWithType: SparqlQueryParser.TraceTokeniser
  fullName: VDS.RDF.Parsing.SparqlQueryParser.TraceTokeniser
- uid: VDS.RDF.Parsing.ITraceableTokeniser.TraceTokeniser
  commentId: P:VDS.RDF.Parsing.ITraceableTokeniser.TraceTokeniser
  parent: VDS.RDF.Parsing.ITraceableTokeniser
  name: TraceTokeniser
  nameWithType: ITraceableTokeniser.TraceTokeniser
  fullName: VDS.RDF.Parsing.ITraceableTokeniser.TraceTokeniser
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Parsing.SparqlQueryParser.DefaultBaseUri*
  commentId: Overload:VDS.RDF.Parsing.SparqlQueryParser.DefaultBaseUri
  name: DefaultBaseUri
  nameWithType: SparqlQueryParser.DefaultBaseUri
  fullName: VDS.RDF.Parsing.SparqlQueryParser.DefaultBaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Parsing.SparqlQueryParser.SyntaxMode*
  commentId: Overload:VDS.RDF.Parsing.SparqlQueryParser.SyntaxMode
  name: SyntaxMode
  nameWithType: SparqlQueryParser.SyntaxMode
  fullName: VDS.RDF.Parsing.SparqlQueryParser.SyntaxMode
- uid: VDS.RDF.Parsing.SparqlQueryParser.ExpressionFactories*
  commentId: Overload:VDS.RDF.Parsing.SparqlQueryParser.ExpressionFactories
  name: ExpressionFactories
  nameWithType: SparqlQueryParser.ExpressionFactories
  fullName: VDS.RDF.Parsing.SparqlQueryParser.ExpressionFactories
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISparqlCustomExpressionFactory>
  nameWithType: IEnumerable<ISparqlCustomExpressionFactory>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory>
  nameWithType.vb: IEnumerable(Of ISparqlCustomExpressionFactory)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory)
  name.vb: IEnumerable(Of ISparqlCustomExpressionFactory)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
    name: ISparqlCustomExpressionFactory
    nameWithType: ISparqlCustomExpressionFactory
    fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
    name: ISparqlCustomExpressionFactory
    nameWithType: ISparqlCustomExpressionFactory
    fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Parsing.SparqlQueryParser.QueryOptimiser*
  commentId: Overload:VDS.RDF.Parsing.SparqlQueryParser.QueryOptimiser
  name: QueryOptimiser
  nameWithType: SparqlQueryParser.QueryOptimiser
  fullName: VDS.RDF.Parsing.SparqlQueryParser.QueryOptimiser
- uid: VDS.RDF.Query.Optimisation.IQueryOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.IQueryOptimiser
  parent: VDS.RDF.Query.Optimisation
  name: IQueryOptimiser
  nameWithType: IQueryOptimiser
  fullName: VDS.RDF.Query.Optimisation.IQueryOptimiser
- uid: VDS.RDF.Query.Optimisation
  commentId: N:VDS.RDF.Query.Optimisation
  name: VDS.RDF.Query.Optimisation
  nameWithType: VDS.RDF.Query.Optimisation
  fullName: VDS.RDF.Query.Optimisation
- uid: VDS.RDF.SparqlWarning
  commentId: T:VDS.RDF.SparqlWarning
  parent: VDS.RDF
  name: SparqlWarning
  nameWithType: SparqlWarning
  fullName: VDS.RDF.SparqlWarning
- uid: VDS.RDF.Parsing.SparqlQueryParser.ParseFromFile*
  commentId: Overload:VDS.RDF.Parsing.SparqlQueryParser.ParseFromFile
  name: ParseFromFile
  nameWithType: SparqlQueryParser.ParseFromFile
  fullName: VDS.RDF.Parsing.SparqlQueryParser.ParseFromFile
- uid: VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.ParseFromFile(System.String)
  commentId: M:VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.ParseFromFile(System.String)
  parent: VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}
  definition: VDS.RDF.IObjectParser`1.ParseFromFile(System.String)
  name: ParseFromFile(String)
  nameWithType: IObjectParser<SparqlQuery>.ParseFromFile(String)
  fullName: VDS.RDF.IObjectParser<VDS.RDF.Query.SparqlQuery>.ParseFromFile(System.String)
  nameWithType.vb: IObjectParser(Of SparqlQuery).ParseFromFile(String)
  fullName.vb: VDS.RDF.IObjectParser(Of VDS.RDF.Query.SparqlQuery).ParseFromFile(System.String)
  spec.csharp:
  - uid: VDS.RDF.IObjectParser`1.ParseFromFile(System.String)
    name: ParseFromFile
    nameWithType: IObjectParser<SparqlQuery>.ParseFromFile
    fullName: VDS.RDF.IObjectParser<VDS.RDF.Query.SparqlQuery>.ParseFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IObjectParser`1.ParseFromFile(System.String)
    name: ParseFromFile
    nameWithType: IObjectParser(Of SparqlQuery).ParseFromFile
    fullName: VDS.RDF.IObjectParser(Of VDS.RDF.Query.SparqlQuery).ParseFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.IObjectParser`1.ParseFromFile(System.String)
  commentId: M:VDS.RDF.IObjectParser`1.ParseFromFile(System.String)
  isExternal: true
  name: ParseFromFile(String)
  nameWithType: IObjectParser<T>.ParseFromFile(String)
  fullName: VDS.RDF.IObjectParser<T>.ParseFromFile(System.String)
  nameWithType.vb: IObjectParser(Of T).ParseFromFile(String)
  fullName.vb: VDS.RDF.IObjectParser(Of T).ParseFromFile(System.String)
  spec.csharp:
  - uid: VDS.RDF.IObjectParser`1.ParseFromFile(System.String)
    name: ParseFromFile
    nameWithType: IObjectParser<T>.ParseFromFile
    fullName: VDS.RDF.IObjectParser<T>.ParseFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IObjectParser`1.ParseFromFile(System.String)
    name: ParseFromFile
    nameWithType: IObjectParser(Of T).ParseFromFile
    fullName: VDS.RDF.IObjectParser(Of T).ParseFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.SparqlQueryParser.Parse*
  commentId: Overload:VDS.RDF.Parsing.SparqlQueryParser.Parse
  name: Parse
  nameWithType: SparqlQueryParser.Parse
  fullName: VDS.RDF.Parsing.SparqlQueryParser.Parse
- uid: VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.Parse(System.IO.StreamReader)
  commentId: M:VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.Parse(System.IO.StreamReader)
  parent: VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}
  definition: VDS.RDF.IObjectParser`1.Parse(System.IO.StreamReader)
  name: Parse(StreamReader)
  nameWithType: IObjectParser<SparqlQuery>.Parse(StreamReader)
  fullName: VDS.RDF.IObjectParser<VDS.RDF.Query.SparqlQuery>.Parse(System.IO.StreamReader)
  nameWithType.vb: IObjectParser(Of SparqlQuery).Parse(StreamReader)
  fullName.vb: VDS.RDF.IObjectParser(Of VDS.RDF.Query.SparqlQuery).Parse(System.IO.StreamReader)
  spec.csharp:
  - uid: VDS.RDF.IObjectParser`1.Parse(System.IO.StreamReader)
    name: Parse
    nameWithType: IObjectParser<SparqlQuery>.Parse
    fullName: VDS.RDF.IObjectParser<VDS.RDF.Query.SparqlQuery>.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.StreamReader
    name: StreamReader
    nameWithType: StreamReader
    fullName: System.IO.StreamReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IObjectParser`1.Parse(System.IO.StreamReader)
    name: Parse
    nameWithType: IObjectParser(Of SparqlQuery).Parse
    fullName: VDS.RDF.IObjectParser(Of VDS.RDF.Query.SparqlQuery).Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.StreamReader
    name: StreamReader
    nameWithType: StreamReader
    fullName: System.IO.StreamReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.StreamReader
  commentId: T:System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: VDS.RDF.IObjectParser`1.Parse(System.IO.StreamReader)
  commentId: M:VDS.RDF.IObjectParser`1.Parse(System.IO.StreamReader)
  isExternal: true
  name: Parse(StreamReader)
  nameWithType: IObjectParser<T>.Parse(StreamReader)
  fullName: VDS.RDF.IObjectParser<T>.Parse(System.IO.StreamReader)
  nameWithType.vb: IObjectParser(Of T).Parse(StreamReader)
  fullName.vb: VDS.RDF.IObjectParser(Of T).Parse(System.IO.StreamReader)
  spec.csharp:
  - uid: VDS.RDF.IObjectParser`1.Parse(System.IO.StreamReader)
    name: Parse
    nameWithType: IObjectParser<T>.Parse
    fullName: VDS.RDF.IObjectParser<T>.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.StreamReader
    name: StreamReader
    nameWithType: StreamReader
    fullName: System.IO.StreamReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IObjectParser`1.Parse(System.IO.StreamReader)
    name: Parse
    nameWithType: IObjectParser(Of T).Parse
    fullName: VDS.RDF.IObjectParser(Of T).Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.StreamReader
    name: StreamReader
    nameWithType: StreamReader
    fullName: System.IO.StreamReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.Parse(System.IO.TextReader)
  commentId: M:VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.Parse(System.IO.TextReader)
  parent: VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}
  definition: VDS.RDF.IObjectParser`1.Parse(System.IO.TextReader)
  name: Parse(TextReader)
  nameWithType: IObjectParser<SparqlQuery>.Parse(TextReader)
  fullName: VDS.RDF.IObjectParser<VDS.RDF.Query.SparqlQuery>.Parse(System.IO.TextReader)
  nameWithType.vb: IObjectParser(Of SparqlQuery).Parse(TextReader)
  fullName.vb: VDS.RDF.IObjectParser(Of VDS.RDF.Query.SparqlQuery).Parse(System.IO.TextReader)
  spec.csharp:
  - uid: VDS.RDF.IObjectParser`1.Parse(System.IO.TextReader)
    name: Parse
    nameWithType: IObjectParser<SparqlQuery>.Parse
    fullName: VDS.RDF.IObjectParser<VDS.RDF.Query.SparqlQuery>.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IObjectParser`1.Parse(System.IO.TextReader)
    name: Parse
    nameWithType: IObjectParser(Of SparqlQuery).Parse
    fullName: VDS.RDF.IObjectParser(Of VDS.RDF.Query.SparqlQuery).Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: VDS.RDF.IObjectParser`1.Parse(System.IO.TextReader)
  commentId: M:VDS.RDF.IObjectParser`1.Parse(System.IO.TextReader)
  isExternal: true
  name: Parse(TextReader)
  nameWithType: IObjectParser<T>.Parse(TextReader)
  fullName: VDS.RDF.IObjectParser<T>.Parse(System.IO.TextReader)
  nameWithType.vb: IObjectParser(Of T).Parse(TextReader)
  fullName.vb: VDS.RDF.IObjectParser(Of T).Parse(System.IO.TextReader)
  spec.csharp:
  - uid: VDS.RDF.IObjectParser`1.Parse(System.IO.TextReader)
    name: Parse
    nameWithType: IObjectParser<T>.Parse
    fullName: VDS.RDF.IObjectParser<T>.Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IObjectParser`1.Parse(System.IO.TextReader)
    name: Parse
    nameWithType: IObjectParser(Of T).Parse
    fullName: VDS.RDF.IObjectParser(Of T).Parse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.IO.TextReader
    name: TextReader
    nameWithType: TextReader
    fullName: System.IO.TextReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.SparqlQueryParser.ParseFromString*
  commentId: Overload:VDS.RDF.Parsing.SparqlQueryParser.ParseFromString
  name: ParseFromString
  nameWithType: SparqlQueryParser.ParseFromString
  fullName: VDS.RDF.Parsing.SparqlQueryParser.ParseFromString
- uid: VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.ParseFromString(System.String)
  commentId: M:VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.ParseFromString(System.String)
  parent: VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}
  definition: VDS.RDF.IObjectParser`1.ParseFromString(System.String)
  name: ParseFromString(String)
  nameWithType: IObjectParser<SparqlQuery>.ParseFromString(String)
  fullName: VDS.RDF.IObjectParser<VDS.RDF.Query.SparqlQuery>.ParseFromString(System.String)
  nameWithType.vb: IObjectParser(Of SparqlQuery).ParseFromString(String)
  fullName.vb: VDS.RDF.IObjectParser(Of VDS.RDF.Query.SparqlQuery).ParseFromString(System.String)
  spec.csharp:
  - uid: VDS.RDF.IObjectParser`1.ParseFromString(System.String)
    name: ParseFromString
    nameWithType: IObjectParser<SparqlQuery>.ParseFromString
    fullName: VDS.RDF.IObjectParser<VDS.RDF.Query.SparqlQuery>.ParseFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IObjectParser`1.ParseFromString(System.String)
    name: ParseFromString
    nameWithType: IObjectParser(Of SparqlQuery).ParseFromString
    fullName: VDS.RDF.IObjectParser(Of VDS.RDF.Query.SparqlQuery).ParseFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IObjectParser`1.ParseFromString(System.String)
  commentId: M:VDS.RDF.IObjectParser`1.ParseFromString(System.String)
  isExternal: true
  name: ParseFromString(String)
  nameWithType: IObjectParser<T>.ParseFromString(String)
  fullName: VDS.RDF.IObjectParser<T>.ParseFromString(System.String)
  nameWithType.vb: IObjectParser(Of T).ParseFromString(String)
  fullName.vb: VDS.RDF.IObjectParser(Of T).ParseFromString(System.String)
  spec.csharp:
  - uid: VDS.RDF.IObjectParser`1.ParseFromString(System.String)
    name: ParseFromString
    nameWithType: IObjectParser<T>.ParseFromString
    fullName: VDS.RDF.IObjectParser<T>.ParseFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IObjectParser`1.ParseFromString(System.String)
    name: ParseFromString
    nameWithType: IObjectParser(Of T).ParseFromString
    fullName: VDS.RDF.IObjectParser(Of T).ParseFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlParameterizedString
  commentId: T:VDS.RDF.Query.SparqlParameterizedString
  parent: VDS.RDF.Query
  name: SparqlParameterizedString
  nameWithType: SparqlParameterizedString
  fullName: VDS.RDF.Query.SparqlParameterizedString
- uid: VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  parent: VDS.RDF.IObjectParser{VDS.RDF.Query.SparqlQuery}
  definition: VDS.RDF.IObjectParser`1.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  name: ParseFromString(SparqlParameterizedString)
  nameWithType: IObjectParser<SparqlQuery>.ParseFromString(SparqlParameterizedString)
  fullName: VDS.RDF.IObjectParser<VDS.RDF.Query.SparqlQuery>.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  nameWithType.vb: IObjectParser(Of SparqlQuery).ParseFromString(SparqlParameterizedString)
  fullName.vb: VDS.RDF.IObjectParser(Of VDS.RDF.Query.SparqlQuery).ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.IObjectParser`1.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
    name: ParseFromString
    nameWithType: IObjectParser<SparqlQuery>.ParseFromString
    fullName: VDS.RDF.IObjectParser<VDS.RDF.Query.SparqlQuery>.ParseFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IObjectParser`1.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
    name: ParseFromString
    nameWithType: IObjectParser(Of SparqlQuery).ParseFromString
    fullName: VDS.RDF.IObjectParser(Of VDS.RDF.Query.SparqlQuery).ParseFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IObjectParser`1.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.IObjectParser`1.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  name: ParseFromString(SparqlParameterizedString)
  nameWithType: IObjectParser<T>.ParseFromString(SparqlParameterizedString)
  fullName: VDS.RDF.IObjectParser<T>.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  nameWithType.vb: IObjectParser(Of T).ParseFromString(SparqlParameterizedString)
  fullName.vb: VDS.RDF.IObjectParser(Of T).ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
  spec.csharp:
  - uid: VDS.RDF.IObjectParser`1.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
    name: ParseFromString
    nameWithType: IObjectParser<T>.ParseFromString
    fullName: VDS.RDF.IObjectParser<T>.ParseFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IObjectParser`1.ParseFromString(VDS.RDF.Query.SparqlParameterizedString)
    name: ParseFromString
    nameWithType: IObjectParser(Of T).ParseFromString
    fullName: VDS.RDF.IObjectParser(Of T).ParseFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlParameterizedString
    name: SparqlParameterizedString
    nameWithType: SparqlParameterizedString
    fullName: VDS.RDF.Query.SparqlParameterizedString
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.SparqlQueryParser.TryParseGraphPattern*
  commentId: Overload:VDS.RDF.Parsing.SparqlQueryParser.TryParseGraphPattern
  name: TryParseGraphPattern
  nameWithType: SparqlQueryParser.TryParseGraphPattern
  fullName: VDS.RDF.Parsing.SparqlQueryParser.TryParseGraphPattern
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: SparqlQueryParserContext
  nameWithType: SparqlQueryParserContext
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
- uid: VDS.RDF.Query.Patterns.GraphPattern
  commentId: T:VDS.RDF.Query.Patterns.GraphPattern
  parent: VDS.RDF.Query.Patterns
  name: GraphPattern
  nameWithType: GraphPattern
  fullName: VDS.RDF.Query.Patterns.GraphPattern
- uid: VDS.RDF.Parsing.Contexts
  commentId: N:VDS.RDF.Parsing.Contexts
  name: VDS.RDF.Parsing.Contexts
  nameWithType: VDS.RDF.Parsing.Contexts
  fullName: VDS.RDF.Parsing.Contexts
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: VDS.RDF.Parsing.SparqlQueryParser.ExcessTokensString*
  commentId: Overload:VDS.RDF.Parsing.SparqlQueryParser.ExcessTokensString
  name: ExcessTokensString
  nameWithType: SparqlQueryParser.ExcessTokensString
  fullName: VDS.RDF.Parsing.SparqlQueryParser.ExcessTokensString
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
