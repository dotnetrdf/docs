### YamlMime:ManagedReference
items:
- uid: VDS.RDF.LiteralNode
  commentId: T:VDS.RDF.LiteralNode
  id: LiteralNode
  parent: VDS.RDF
  children:
  - VDS.RDF.LiteralNode.#ctor
  - VDS.RDF.LiteralNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String)
  - VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Boolean)
  - VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.String)
  - VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.String,System.Boolean)
  - VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Uri)
  - VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Uri,System.Boolean)
  - VDS.RDF.LiteralNode.CompareTo(VDS.RDF.LiteralNode)
  - VDS.RDF.LiteralNode.Equals(VDS.RDF.LiteralNode)
  langs:
  - csharp
  - vb
  name: LiteralNode
  nameWithType: LiteralNode
  fullName: VDS.RDF.LiteralNode
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 603
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nClass for representing Literal Nodes.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public class LiteralNode : BaseLiteralNode, ILiteralNode, INode, IComparable<INode>, IComparable<IBlankNode>, IComparable<IGraphLiteralNode>, IComparable<ILiteralNode>, IComparable<IUriNode>, IComparable<IVariableNode>, IEquatable<INode>, IEquatable<IBlankNode>, IEquatable<IGraphLiteralNode>, IEquatable<ILiteralNode>, IEquatable<IUriNode>, IEquatable<IVariableNode>, ISerializable, IXmlSerializable, IEquatable<BaseLiteralNode>, IComparable<BaseLiteralNode>, IEquatable<LiteralNode>, IComparable<LiteralNode>
    content.vb: >-
      <Serializable>

      Public Class LiteralNode
          Inherits BaseLiteralNode
          Implements ILiteralNode, INode, IComparable(Of INode), IComparable(Of IBlankNode), IComparable(Of IGraphLiteralNode), IComparable(Of ILiteralNode), IComparable(Of IUriNode), IComparable(Of IVariableNode), IEquatable(Of INode), IEquatable(Of IBlankNode), IEquatable(Of IGraphLiteralNode), IEquatable(Of ILiteralNode), IEquatable(Of IUriNode), IEquatable(Of IVariableNode), ISerializable, IXmlSerializable, IEquatable(Of BaseLiteralNode), IComparable(Of BaseLiteralNode), IEquatable(Of LiteralNode), IComparable(Of LiteralNode)
  inheritance:
  - System.Object
  - VDS.RDF.BaseNode
  - VDS.RDF.BaseLiteralNode
  derivedClasses:
  - VDS.RDF.Nodes.BooleanNode
  - VDS.RDF.Nodes.DateTimeNode
  - VDS.RDF.Nodes.NumericNode
  - VDS.RDF.Nodes.StringNode
  - VDS.RDF.Nodes.TimeSpanNode
  implements:
  - VDS.RDF.ILiteralNode
  - VDS.RDF.INode
  - System.IComparable{VDS.RDF.INode}
  - System.IComparable{VDS.RDF.IBlankNode}
  - System.IComparable{VDS.RDF.IGraphLiteralNode}
  - System.IComparable{VDS.RDF.ILiteralNode}
  - System.IComparable{VDS.RDF.IUriNode}
  - System.IComparable{VDS.RDF.IVariableNode}
  - System.IEquatable{VDS.RDF.INode}
  - System.IEquatable{VDS.RDF.IBlankNode}
  - System.IEquatable{VDS.RDF.IGraphLiteralNode}
  - System.IEquatable{VDS.RDF.ILiteralNode}
  - System.IEquatable{VDS.RDF.IUriNode}
  - System.IEquatable{VDS.RDF.IVariableNode}
  - System.Runtime.Serialization.ISerializable
  - System.Xml.Serialization.IXmlSerializable
  - System.IEquatable{VDS.RDF.BaseLiteralNode}
  - System.IComparable{VDS.RDF.BaseLiteralNode}
  - System.IEquatable{VDS.RDF.LiteralNode}
  - System.IComparable{VDS.RDF.LiteralNode}
  inheritedMembers:
  - VDS.RDF.BaseLiteralNode.Value
  - VDS.RDF.BaseLiteralNode.Language
  - VDS.RDF.BaseLiteralNode.DataType
  - VDS.RDF.BaseLiteralNode.Equals(System.Object)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.INode)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IBlankNode)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.ILiteralNode)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IUriNode)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IVariableNode)
  - VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.BaseLiteralNode)
  - VDS.RDF.BaseLiteralNode.ToString
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.INode)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IBlankNode)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IUriNode)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IVariableNode)
  - VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.BaseLiteralNode)
  - VDS.RDF.BaseLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.BaseLiteralNode.ReadXml(System.Xml.XmlReader)
  - VDS.RDF.BaseLiteralNode.WriteXml(System.Xml.XmlWriter)
  - VDS.RDF.BaseNode._graph
  - VDS.RDF.BaseNode._graphUri
  - VDS.RDF.BaseNode._nodetype
  - VDS.RDF.BaseNode._hashcode
  - VDS.RDF.BaseNode.NodeType
  - VDS.RDF.BaseNode.Graph
  - VDS.RDF.BaseNode.GraphUri
  - VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  - VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  - VDS.RDF.BaseNode.GetHashCode
  - VDS.RDF.BaseNode.GetSchema
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.LiteralNode.VDS.RDF.Extensions.AsEnumerable``1
  - VDS.RDF.INode.VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  - VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  - VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.INode.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  - VDS.RDF.INode.VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String)
  id: '#ctor(VDS.RDF.IGraph,System.String)'
  parent: VDS.RDF.LiteralNode
  langs:
  - csharp
  - vb
  name: LiteralNode(IGraph, String)
  nameWithType: LiteralNode.LiteralNode(IGraph, String)
  fullName: VDS.RDF.LiteralNode.LiteralNode(VDS.RDF.IGraph, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 620
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nInternal Only Constructor for Literal Nodes.\n"
  example: []
  syntax:
    content: protected LiteralNode(IGraph g, string literal)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: literal
      type: System.String
      description: String value of the Literal.
    content.vb: Protected Sub New(g As IGraph, literal As String)
  overload: VDS.RDF.LiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Boolean)
  commentId: M:VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Boolean)
  id: '#ctor(VDS.RDF.IGraph,System.String,System.Boolean)'
  parent: VDS.RDF.LiteralNode
  langs:
  - csharp
  - vb
  name: LiteralNode(IGraph, String, Boolean)
  nameWithType: LiteralNode.LiteralNode(IGraph, String, Boolean)
  fullName: VDS.RDF.LiteralNode.LiteralNode(VDS.RDF.IGraph, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 629
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nInternal Only Constructor for Literal Nodes.\n"
  example: []
  syntax:
    content: protected LiteralNode(IGraph g, string literal, bool normalize)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: literal
      type: System.String
      description: String value of the Literal.
    - id: normalize
      type: System.Boolean
      description: Whether to Normalize the Literal Value.
    content.vb: Protected Sub New(g As IGraph, literal As String, normalize As Boolean)
  overload: VDS.RDF.LiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.String)
  commentId: M:VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.String)
  id: '#ctor(VDS.RDF.IGraph,System.String,System.String)'
  parent: VDS.RDF.LiteralNode
  langs:
  - csharp
  - vb
  name: LiteralNode(IGraph, String, String)
  nameWithType: LiteralNode.LiteralNode(IGraph, String, String)
  fullName: VDS.RDF.LiteralNode.LiteralNode(VDS.RDF.IGraph, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 638
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nInternal Only Constructor for Literal Nodes.\n"
  example: []
  syntax:
    content: protected LiteralNode(IGraph g, string literal, string langspec)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: literal
      type: System.String
      description: String value of the Literal.
    - id: langspec
      type: System.String
      description: String value for the Language Specifier for the Literal.
    content.vb: Protected Sub New(g As IGraph, literal As String, langspec As String)
  overload: VDS.RDF.LiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.String,System.Boolean)
  commentId: M:VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.String,System.Boolean)
  id: '#ctor(VDS.RDF.IGraph,System.String,System.String,System.Boolean)'
  parent: VDS.RDF.LiteralNode
  langs:
  - csharp
  - vb
  name: LiteralNode(IGraph, String, String, Boolean)
  nameWithType: LiteralNode.LiteralNode(IGraph, String, String, Boolean)
  fullName: VDS.RDF.LiteralNode.LiteralNode(VDS.RDF.IGraph, System.String, System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 648
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nInternal Only Constructor for Literal Nodes.\n"
  example: []
  syntax:
    content: protected LiteralNode(IGraph g, string literal, string langspec, bool normalize)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: literal
      type: System.String
      description: String value of the Literal.
    - id: langspec
      type: System.String
      description: String value for the Language Specifier for the Literal.
    - id: normalize
      type: System.Boolean
      description: Whether to Normalize the Literal Value.
    content.vb: Protected Sub New(g As IGraph, literal As String, langspec As String, normalize As Boolean)
  overload: VDS.RDF.LiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Uri)
  commentId: M:VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Uri)
  id: '#ctor(VDS.RDF.IGraph,System.String,System.Uri)'
  parent: VDS.RDF.LiteralNode
  langs:
  - csharp
  - vb
  name: LiteralNode(IGraph, String, Uri)
  nameWithType: LiteralNode.LiteralNode(IGraph, String, Uri)
  fullName: VDS.RDF.LiteralNode.LiteralNode(VDS.RDF.IGraph, System.String, System.Uri)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 657
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nInternal Only Constructor for Literal Nodes.\n"
  example: []
  syntax:
    content: protected LiteralNode(IGraph g, string literal, Uri datatype)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: literal
      type: System.String
      description: String value of the Literal.
    - id: datatype
      type: System.Uri
      description: Uri for the Literals Data Type.
    content.vb: Protected Sub New(g As IGraph, literal As String, datatype As Uri)
  overload: VDS.RDF.LiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Uri,System.Boolean)
  commentId: M:VDS.RDF.LiteralNode.#ctor(VDS.RDF.IGraph,System.String,System.Uri,System.Boolean)
  id: '#ctor(VDS.RDF.IGraph,System.String,System.Uri,System.Boolean)'
  parent: VDS.RDF.LiteralNode
  langs:
  - csharp
  - vb
  name: LiteralNode(IGraph, String, Uri, Boolean)
  nameWithType: LiteralNode.LiteralNode(IGraph, String, Uri, Boolean)
  fullName: VDS.RDF.LiteralNode.LiteralNode(VDS.RDF.IGraph, System.String, System.Uri, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 667
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nInternal Only Constructor for Literal Nodes.\n"
  example: []
  syntax:
    content: protected LiteralNode(IGraph g, string literal, Uri datatype, bool normalize)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: literal
      type: System.String
      description: String value of the Literal.
    - id: datatype
      type: System.Uri
      description: Uri for the Literals Data Type.
    - id: normalize
      type: System.Boolean
      description: Whether to Normalize the Literal Value.
    content.vb: Protected Sub New(g As IGraph, literal As String, datatype As Uri, normalize As Boolean)
  overload: VDS.RDF.LiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.LiteralNode.#ctor
  commentId: M:VDS.RDF.LiteralNode.#ctor
  id: '#ctor'
  parent: VDS.RDF.LiteralNode
  langs:
  - csharp
  - vb
  name: LiteralNode()
  nameWithType: LiteralNode.LiteralNode()
  fullName: VDS.RDF.LiteralNode.LiteralNode()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 673
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDeserialization Only Constructor.\n"
  example: []
  syntax:
    content: protected LiteralNode()
    content.vb: Protected Sub New
  overload: VDS.RDF.LiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.LiteralNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.LiteralNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: VDS.RDF.LiteralNode
  langs:
  - csharp
  - vb
  name: LiteralNode(SerializationInfo, StreamingContext)
  nameWithType: LiteralNode.LiteralNode(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.LiteralNode.LiteralNode(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 682
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDeserialization Constructor.\n"
  example: []
  syntax:
    content: protected LiteralNode(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: VDS.RDF.LiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.LiteralNode.CompareTo(VDS.RDF.LiteralNode)
  commentId: M:VDS.RDF.LiteralNode.CompareTo(VDS.RDF.LiteralNode)
  id: CompareTo(VDS.RDF.LiteralNode)
  parent: VDS.RDF.LiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(LiteralNode)
  nameWithType: LiteralNode.CompareTo(LiteralNode)
  fullName: VDS.RDF.LiteralNode.CompareTo(VDS.RDF.LiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 694
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nImplementation of Compare To for Literal Nodes.\n"
  remarks: "\nSimply invokes the more general implementation of this method.\n"
  example: []
  syntax:
    content: public int CompareTo(LiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.LiteralNode
      description: Literal Node to Compare To.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function CompareTo(other As LiteralNode) As Integer
  overload: VDS.RDF.LiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.LiteralNode}.CompareTo(VDS.RDF.LiteralNode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.LiteralNode.Equals(VDS.RDF.LiteralNode)
  commentId: M:VDS.RDF.LiteralNode.Equals(VDS.RDF.LiteralNode)
  id: Equals(VDS.RDF.LiteralNode)
  parent: VDS.RDF.LiteralNode
  langs:
  - csharp
  - vb
  name: Equals(LiteralNode)
  nameWithType: LiteralNode.Equals(LiteralNode)
  fullName: VDS.RDF.LiteralNode.Equals(VDS.RDF.LiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/LiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/LiteralNode.cs
    startLine: 704
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a Literal Node.\n"
  example: []
  syntax:
    content: public bool Equals(LiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.LiteralNode
      description: Literal Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Equals(other As LiteralNode) As Boolean
  overload: VDS.RDF.LiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.LiteralNode}.Equals(VDS.RDF.LiteralNode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.BaseNode
  commentId: T:VDS.RDF.BaseNode
  parent: VDS.RDF
  name: BaseNode
  nameWithType: BaseNode
  fullName: VDS.RDF.BaseNode
- uid: VDS.RDF.BaseLiteralNode
  commentId: T:VDS.RDF.BaseLiteralNode
  parent: VDS.RDF
  name: BaseLiteralNode
  nameWithType: BaseLiteralNode
  fullName: VDS.RDF.BaseLiteralNode
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: System.IComparable{VDS.RDF.INode}
  commentId: T:System.IComparable{VDS.RDF.INode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<INode>
  nameWithType: IComparable<INode>
  fullName: System.IComparable<VDS.RDF.INode>
  nameWithType.vb: IComparable(Of INode)
  fullName.vb: System.IComparable(Of VDS.RDF.INode)
  name.vb: IComparable(Of INode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IBlankNode}
  commentId: T:System.IComparable{VDS.RDF.IBlankNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IBlankNode>
  nameWithType: IComparable<IBlankNode>
  fullName: System.IComparable<VDS.RDF.IBlankNode>
  nameWithType.vb: IComparable(Of IBlankNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IBlankNode)
  name.vb: IComparable(Of IBlankNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IGraphLiteralNode}
  commentId: T:System.IComparable{VDS.RDF.IGraphLiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IGraphLiteralNode>
  nameWithType: IComparable<IGraphLiteralNode>
  fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>
  nameWithType.vb: IComparable(Of IGraphLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IGraphLiteralNode)
  name.vb: IComparable(Of IGraphLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.ILiteralNode}
  commentId: T:System.IComparable{VDS.RDF.ILiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ILiteralNode>
  nameWithType: IComparable<ILiteralNode>
  fullName: System.IComparable<VDS.RDF.ILiteralNode>
  nameWithType.vb: IComparable(Of ILiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.ILiteralNode)
  name.vb: IComparable(Of ILiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IUriNode}
  commentId: T:System.IComparable{VDS.RDF.IUriNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IUriNode>
  nameWithType: IComparable<IUriNode>
  fullName: System.IComparable<VDS.RDF.IUriNode>
  nameWithType.vb: IComparable(Of IUriNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IUriNode)
  name.vb: IComparable(Of IUriNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IVariableNode}
  commentId: T:System.IComparable{VDS.RDF.IVariableNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IVariableNode>
  nameWithType: IComparable<IVariableNode>
  fullName: System.IComparable<VDS.RDF.IVariableNode>
  nameWithType.vb: IComparable(Of IVariableNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IVariableNode)
  name.vb: IComparable(Of IVariableNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.INode}
  commentId: T:System.IEquatable{VDS.RDF.INode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<INode>
  nameWithType: IEquatable<INode>
  fullName: System.IEquatable<VDS.RDF.INode>
  nameWithType.vb: IEquatable(Of INode)
  fullName.vb: System.IEquatable(Of VDS.RDF.INode)
  name.vb: IEquatable(Of INode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IBlankNode}
  commentId: T:System.IEquatable{VDS.RDF.IBlankNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IBlankNode>
  nameWithType: IEquatable<IBlankNode>
  fullName: System.IEquatable<VDS.RDF.IBlankNode>
  nameWithType.vb: IEquatable(Of IBlankNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IBlankNode)
  name.vb: IEquatable(Of IBlankNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IGraphLiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.IGraphLiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IGraphLiteralNode>
  nameWithType: IEquatable<IGraphLiteralNode>
  fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>
  nameWithType.vb: IEquatable(Of IGraphLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IGraphLiteralNode)
  name.vb: IEquatable(Of IGraphLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.ILiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.ILiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ILiteralNode>
  nameWithType: IEquatable<ILiteralNode>
  fullName: System.IEquatable<VDS.RDF.ILiteralNode>
  nameWithType.vb: IEquatable(Of ILiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.ILiteralNode)
  name.vb: IEquatable(Of ILiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IUriNode}
  commentId: T:System.IEquatable{VDS.RDF.IUriNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IUriNode>
  nameWithType: IEquatable<IUriNode>
  fullName: System.IEquatable<VDS.RDF.IUriNode>
  nameWithType.vb: IEquatable(Of IUriNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IUriNode)
  name.vb: IEquatable(Of IUriNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IVariableNode}
  commentId: T:System.IEquatable{VDS.RDF.IVariableNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IVariableNode>
  nameWithType: IEquatable<IVariableNode>
  fullName: System.IEquatable<VDS.RDF.IVariableNode>
  nameWithType.vb: IEquatable(Of IVariableNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IVariableNode)
  name.vb: IEquatable(Of IVariableNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.IEquatable{VDS.RDF.BaseLiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.BaseLiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<BaseLiteralNode>
  nameWithType: IEquatable<BaseLiteralNode>
  fullName: System.IEquatable<VDS.RDF.BaseLiteralNode>
  nameWithType.vb: IEquatable(Of BaseLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.BaseLiteralNode)
  name.vb: IEquatable(Of BaseLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.BaseLiteralNode}
  commentId: T:System.IComparable{VDS.RDF.BaseLiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<BaseLiteralNode>
  nameWithType: IComparable<BaseLiteralNode>
  fullName: System.IComparable<VDS.RDF.BaseLiteralNode>
  nameWithType.vb: IComparable(Of BaseLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.BaseLiteralNode)
  name.vb: IComparable(Of BaseLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.LiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.LiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<LiteralNode>
  nameWithType: IEquatable<LiteralNode>
  fullName: System.IEquatable<VDS.RDF.LiteralNode>
  nameWithType.vb: IEquatable(Of LiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.LiteralNode)
  name.vb: IEquatable(Of LiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.LiteralNode
    name: LiteralNode
    nameWithType: LiteralNode
    fullName: VDS.RDF.LiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.LiteralNode
    name: LiteralNode
    nameWithType: LiteralNode
    fullName: VDS.RDF.LiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.LiteralNode}
  commentId: T:System.IComparable{VDS.RDF.LiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<LiteralNode>
  nameWithType: IComparable<LiteralNode>
  fullName: System.IComparable<VDS.RDF.LiteralNode>
  nameWithType.vb: IComparable(Of LiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.LiteralNode)
  name.vb: IComparable(Of LiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.LiteralNode
    name: LiteralNode
    nameWithType: LiteralNode
    fullName: VDS.RDF.LiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.LiteralNode
    name: LiteralNode
    nameWithType: LiteralNode
    fullName: VDS.RDF.LiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.Value
  commentId: P:VDS.RDF.BaseLiteralNode.Value
  parent: VDS.RDF.BaseLiteralNode
  name: Value
  nameWithType: BaseLiteralNode.Value
  fullName: VDS.RDF.BaseLiteralNode.Value
- uid: VDS.RDF.BaseLiteralNode.Language
  commentId: P:VDS.RDF.BaseLiteralNode.Language
  parent: VDS.RDF.BaseLiteralNode
  name: Language
  nameWithType: BaseLiteralNode.Language
  fullName: VDS.RDF.BaseLiteralNode.Language
- uid: VDS.RDF.BaseLiteralNode.DataType
  commentId: P:VDS.RDF.BaseLiteralNode.DataType
  parent: VDS.RDF.BaseLiteralNode
  name: DataType
  nameWithType: BaseLiteralNode.DataType
  fullName: VDS.RDF.BaseLiteralNode.DataType
- uid: VDS.RDF.BaseLiteralNode.Equals(System.Object)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(System.Object)
  parent: VDS.RDF.BaseLiteralNode
  isExternal: true
  name: Equals(Object)
  nameWithType: BaseLiteralNode.Equals(Object)
  fullName: VDS.RDF.BaseLiteralNode.Equals(System.Object)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.Equals(System.Object)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.Equals(System.Object)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.INode)
  parent: VDS.RDF.BaseLiteralNode
  name: Equals(INode)
  nameWithType: BaseLiteralNode.Equals(INode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.INode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.INode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IBlankNode)
  parent: VDS.RDF.BaseLiteralNode
  name: Equals(IBlankNode)
  nameWithType: BaseLiteralNode.Equals(IBlankNode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IBlankNode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IBlankNode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.BaseLiteralNode
  name: Equals(IGraphLiteralNode)
  nameWithType: BaseLiteralNode.Equals(IGraphLiteralNode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.BaseLiteralNode
  name: Equals(ILiteralNode)
  nameWithType: BaseLiteralNode.Equals(ILiteralNode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.ILiteralNode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.ILiteralNode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IUriNode)
  parent: VDS.RDF.BaseLiteralNode
  name: Equals(IUriNode)
  nameWithType: BaseLiteralNode.Equals(IUriNode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IUriNode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IUriNode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IVariableNode)
  parent: VDS.RDF.BaseLiteralNode
  name: Equals(IVariableNode)
  nameWithType: BaseLiteralNode.Equals(IVariableNode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IVariableNode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.IVariableNode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.BaseLiteralNode)
  commentId: M:VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.BaseLiteralNode)
  parent: VDS.RDF.BaseLiteralNode
  name: Equals(BaseLiteralNode)
  nameWithType: BaseLiteralNode.Equals(BaseLiteralNode)
  fullName: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.BaseLiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.BaseLiteralNode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.Equals(VDS.RDF.BaseLiteralNode)
    name: Equals
    nameWithType: BaseLiteralNode.Equals
    fullName: VDS.RDF.BaseLiteralNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.ToString
  commentId: M:VDS.RDF.BaseLiteralNode.ToString
  parent: VDS.RDF.BaseLiteralNode
  name: ToString()
  nameWithType: BaseLiteralNode.ToString()
  fullName: VDS.RDF.BaseLiteralNode.ToString()
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.ToString
    name: ToString
    nameWithType: BaseLiteralNode.ToString
    fullName: VDS.RDF.BaseLiteralNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.ToString
    name: ToString
    nameWithType: BaseLiteralNode.ToString
    fullName: VDS.RDF.BaseLiteralNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.INode)
  parent: VDS.RDF.BaseLiteralNode
  name: CompareTo(INode)
  nameWithType: BaseLiteralNode.CompareTo(INode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.INode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.INode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IBlankNode)
  parent: VDS.RDF.BaseLiteralNode
  name: CompareTo(IBlankNode)
  nameWithType: BaseLiteralNode.CompareTo(IBlankNode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IBlankNode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IBlankNode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.BaseLiteralNode
  name: CompareTo(ILiteralNode)
  nameWithType: BaseLiteralNode.CompareTo(ILiteralNode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.BaseLiteralNode
  name: CompareTo(IGraphLiteralNode)
  nameWithType: BaseLiteralNode.CompareTo(IGraphLiteralNode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IUriNode)
  parent: VDS.RDF.BaseLiteralNode
  name: CompareTo(IUriNode)
  nameWithType: BaseLiteralNode.CompareTo(IUriNode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IUriNode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IUriNode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IVariableNode)
  parent: VDS.RDF.BaseLiteralNode
  name: CompareTo(IVariableNode)
  nameWithType: BaseLiteralNode.CompareTo(IVariableNode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IVariableNode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.IVariableNode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.BaseLiteralNode)
  commentId: M:VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.BaseLiteralNode)
  parent: VDS.RDF.BaseLiteralNode
  name: CompareTo(BaseLiteralNode)
  nameWithType: BaseLiteralNode.CompareTo(BaseLiteralNode)
  fullName: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.BaseLiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.BaseLiteralNode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.CompareTo(VDS.RDF.BaseLiteralNode)
    name: CompareTo
    nameWithType: BaseLiteralNode.CompareTo
    fullName: VDS.RDF.BaseLiteralNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.BaseLiteralNode
    name: BaseLiteralNode
    nameWithType: BaseLiteralNode
    fullName: VDS.RDF.BaseLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.BaseLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: VDS.RDF.BaseLiteralNode
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: BaseLiteralNode.GetObjectData(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.BaseLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: BaseLiteralNode.GetObjectData
    fullName: VDS.RDF.BaseLiteralNode.GetObjectData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: BaseLiteralNode.GetObjectData
    fullName: VDS.RDF.BaseLiteralNode.GetObjectData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.BaseLiteralNode.ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.BaseLiteralNode
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: BaseLiteralNode.ReadXml(XmlReader)
  fullName: VDS.RDF.BaseLiteralNode.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: BaseLiteralNode.ReadXml
    fullName: VDS.RDF.BaseLiteralNode.ReadXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: BaseLiteralNode.ReadXml
    fullName: VDS.RDF.BaseLiteralNode.ReadXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseLiteralNode.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.BaseLiteralNode.WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.BaseLiteralNode
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: BaseLiteralNode.WriteXml(XmlWriter)
  fullName: VDS.RDF.BaseLiteralNode.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: VDS.RDF.BaseLiteralNode.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: BaseLiteralNode.WriteXml
    fullName: VDS.RDF.BaseLiteralNode.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseLiteralNode.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: BaseLiteralNode.WriteXml
    fullName: VDS.RDF.BaseLiteralNode.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode._graph
  commentId: F:VDS.RDF.BaseNode._graph
  parent: VDS.RDF.BaseNode
  name: _graph
  nameWithType: BaseNode._graph
  fullName: VDS.RDF.BaseNode._graph
- uid: VDS.RDF.BaseNode._graphUri
  commentId: F:VDS.RDF.BaseNode._graphUri
  parent: VDS.RDF.BaseNode
  name: _graphUri
  nameWithType: BaseNode._graphUri
  fullName: VDS.RDF.BaseNode._graphUri
- uid: VDS.RDF.BaseNode._nodetype
  commentId: F:VDS.RDF.BaseNode._nodetype
  parent: VDS.RDF.BaseNode
  name: _nodetype
  nameWithType: BaseNode._nodetype
  fullName: VDS.RDF.BaseNode._nodetype
- uid: VDS.RDF.BaseNode._hashcode
  commentId: F:VDS.RDF.BaseNode._hashcode
  parent: VDS.RDF.BaseNode
  name: _hashcode
  nameWithType: BaseNode._hashcode
  fullName: VDS.RDF.BaseNode._hashcode
- uid: VDS.RDF.BaseNode.NodeType
  commentId: P:VDS.RDF.BaseNode.NodeType
  parent: VDS.RDF.BaseNode
  name: NodeType
  nameWithType: BaseNode.NodeType
  fullName: VDS.RDF.BaseNode.NodeType
- uid: VDS.RDF.BaseNode.Graph
  commentId: P:VDS.RDF.BaseNode.Graph
  parent: VDS.RDF.BaseNode
  name: Graph
  nameWithType: BaseNode.Graph
  fullName: VDS.RDF.BaseNode.Graph
- uid: VDS.RDF.BaseNode.GraphUri
  commentId: P:VDS.RDF.BaseNode.GraphUri
  parent: VDS.RDF.BaseNode
  name: GraphUri
  nameWithType: BaseNode.GraphUri
  fullName: VDS.RDF.BaseNode.GraphUri
- uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  commentId: M:VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  parent: VDS.RDF.BaseNode
  name: ToString(INodeFormatter)
  nameWithType: BaseNode.ToString(INodeFormatter)
  fullName: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  commentId: M:VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  parent: VDS.RDF.BaseNode
  name: ToString(INodeFormatter, TripleSegment)
  nameWithType: BaseNode.ToString(INodeFormatter, TripleSegment)
  fullName: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter, VDS.RDF.Writing.TripleSegment)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Writing.TripleSegment
    name: TripleSegment
    nameWithType: TripleSegment
    fullName: VDS.RDF.Writing.TripleSegment
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Writing.TripleSegment
    name: TripleSegment
    nameWithType: TripleSegment
    fullName: VDS.RDF.Writing.TripleSegment
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.GetHashCode
  commentId: M:VDS.RDF.BaseNode.GetHashCode
  parent: VDS.RDF.BaseNode
  name: GetHashCode()
  nameWithType: BaseNode.GetHashCode()
  fullName: VDS.RDF.BaseNode.GetHashCode()
  spec.csharp:
  - uid: VDS.RDF.BaseNode.GetHashCode
    name: GetHashCode
    nameWithType: BaseNode.GetHashCode
    fullName: VDS.RDF.BaseNode.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.GetHashCode
    name: GetHashCode
    nameWithType: BaseNode.GetHashCode
    fullName: VDS.RDF.BaseNode.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.GetSchema
  commentId: M:VDS.RDF.BaseNode.GetSchema
  parent: VDS.RDF.BaseNode
  name: GetSchema()
  nameWithType: BaseNode.GetSchema()
  fullName: VDS.RDF.BaseNode.GetSchema()
  spec.csharp:
  - uid: VDS.RDF.BaseNode.GetSchema
    name: GetSchema
    nameWithType: BaseNode.GetSchema
    fullName: VDS.RDF.BaseNode.GetSchema
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.GetSchema
    name: GetSchema
    nameWithType: BaseNode.GetSchema
    fullName: VDS.RDF.BaseNode.GetSchema
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.LiteralNode.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<LiteralNode>()
  nameWithType: Extensions.AsEnumerable<LiteralNode>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.LiteralNode>()
  nameWithType.vb: Extensions.AsEnumerable(Of LiteralNode)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.LiteralNode)()
  name.vb: AsEnumerable(Of LiteralNode)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<LiteralNode>
    nameWithType: Extensions.AsEnumerable<LiteralNode>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.LiteralNode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of LiteralNode)
    nameWithType: Extensions.AsEnumerable(Of LiteralNode)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.LiteralNode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  name: IsListRoot(IGraph)
  nameWithType: Extensions.IsListRoot(IGraph)
  fullName: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  name: CopyNode(IGraph)
  nameWithType: Extensions.CopyNode(IGraph)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  name: CopyNode(IGraph, Boolean)
  nameWithType: Extensions.CopyNode(IGraph, Boolean)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  parent: VDS.RDF.Dynamic.DynamicExtensions
  definition: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  name: AsDynamic(Uri)
  nameWithType: DynamicExtensions.AsDynamic(Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  parent: VDS.RDF.Nodes.ValuedNodeExtensions
  definition: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  name: AsValuedNode()
  nameWithType: ValuedNodeExtensions.AsValuedNode()
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode()
  spec.csharp:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  name: IsListRoot(INode, IGraph)
  nameWithType: Extensions.IsListRoot(INode, IGraph)
  fullName: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode, VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  name: CopyNode(INode, IGraph)
  nameWithType: Extensions.CopyNode(INode, IGraph)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode, VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  isExternal: true
  name: CopyNode(INode, IGraph, Boolean)
  nameWithType: Extensions.CopyNode(INode, IGraph, Boolean)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode, VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  isExternal: true
  name: AsDynamic(INode, Uri)
  nameWithType: DynamicExtensions.AsDynamic(INode, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions
  commentId: T:VDS.RDF.Dynamic.DynamicExtensions
  parent: VDS.RDF.Dynamic
  name: DynamicExtensions
  nameWithType: DynamicExtensions
  fullName: VDS.RDF.Dynamic.DynamicExtensions
- uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  name: AsValuedNode(INode)
  nameWithType: ValuedNodeExtensions.AsValuedNode(INode)
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Nodes.ValuedNodeExtensions
  commentId: T:VDS.RDF.Nodes.ValuedNodeExtensions
  parent: VDS.RDF.Nodes
  name: ValuedNodeExtensions
  nameWithType: ValuedNodeExtensions
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions
- uid: VDS.RDF.Dynamic
  commentId: N:VDS.RDF.Dynamic
  name: VDS.RDF.Dynamic
  nameWithType: VDS.RDF.Dynamic
  fullName: VDS.RDF.Dynamic
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
- uid: VDS.RDF.LiteralNode.#ctor*
  commentId: Overload:VDS.RDF.LiteralNode.#ctor
  name: LiteralNode
  nameWithType: LiteralNode.LiteralNode
  fullName: VDS.RDF.LiteralNode.LiteralNode
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: VDS.RDF.LiteralNode.CompareTo*
  commentId: Overload:VDS.RDF.LiteralNode.CompareTo
  name: CompareTo
  nameWithType: LiteralNode.CompareTo
  fullName: VDS.RDF.LiteralNode.CompareTo
- uid: System.IComparable{VDS.RDF.LiteralNode}.CompareTo(VDS.RDF.LiteralNode)
  commentId: M:System.IComparable{VDS.RDF.LiteralNode}.CompareTo(VDS.RDF.LiteralNode)
  parent: System.IComparable{VDS.RDF.LiteralNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(LiteralNode)
  nameWithType: IComparable<LiteralNode>.CompareTo(LiteralNode)
  fullName: System.IComparable<VDS.RDF.LiteralNode>.CompareTo(VDS.RDF.LiteralNode)
  nameWithType.vb: IComparable(Of LiteralNode).CompareTo(LiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.LiteralNode).CompareTo(VDS.RDF.LiteralNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<LiteralNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.LiteralNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.LiteralNode
    name: LiteralNode
    nameWithType: LiteralNode
    fullName: VDS.RDF.LiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of LiteralNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.LiteralNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.LiteralNode
    name: LiteralNode
    nameWithType: LiteralNode
    fullName: VDS.RDF.LiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.LiteralNode
  commentId: T:VDS.RDF.LiteralNode
  parent: VDS.RDF
  name: LiteralNode
  nameWithType: LiteralNode
  fullName: VDS.RDF.LiteralNode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.LiteralNode.Equals*
  commentId: Overload:VDS.RDF.LiteralNode.Equals
  name: Equals
  nameWithType: LiteralNode.Equals
  fullName: VDS.RDF.LiteralNode.Equals
- uid: System.IEquatable{VDS.RDF.LiteralNode}.Equals(VDS.RDF.LiteralNode)
  commentId: M:System.IEquatable{VDS.RDF.LiteralNode}.Equals(VDS.RDF.LiteralNode)
  parent: System.IEquatable{VDS.RDF.LiteralNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(LiteralNode)
  nameWithType: IEquatable<LiteralNode>.Equals(LiteralNode)
  fullName: System.IEquatable<VDS.RDF.LiteralNode>.Equals(VDS.RDF.LiteralNode)
  nameWithType.vb: IEquatable(Of LiteralNode).Equals(LiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.LiteralNode).Equals(VDS.RDF.LiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<LiteralNode>.Equals
    fullName: System.IEquatable<VDS.RDF.LiteralNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.LiteralNode
    name: LiteralNode
    nameWithType: LiteralNode
    fullName: VDS.RDF.LiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of LiteralNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.LiteralNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.LiteralNode
    name: LiteralNode
    nameWithType: LiteralNode
    fullName: VDS.RDF.LiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
