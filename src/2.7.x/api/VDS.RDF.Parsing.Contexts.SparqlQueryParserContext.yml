### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  id: SparqlQueryParserContext
  parent: VDS.RDF.Parsing.Contexts
  children:
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext,VDS.RDF.Parsing.Tokens.ITokenQueue)
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokeniser)
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokeniser,System.Boolean,System.Boolean)
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.Tokens.TokenQueueMode)
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.Tokens.TokenQueueMode,System.Boolean,System.Boolean)
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokenQueue)
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeID
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeIDUsages
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.CheckBlankNodeScope
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.DefaultBaseUri
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.ExpressionFactories
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GetNewBlankNodeID
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GraphPatternID
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.NextAliasID
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.Query
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SubQueryMode
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SyntaxMode
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.VerbSeen
  langs:
  - csharp
  - vb
  name: SparqlQueryParserContext
  nameWithType: SparqlQueryParserContext
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlQueryParserContext
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nParser Context for SPARQL Query parser.\n"
  example: []
  syntax:
    content: 'public class SparqlQueryParserContext : TokenisingParserContext, IParserContext, ITokenisingParserContext'
    content.vb: >-
      Public Class SparqlQueryParserContext
          Inherits TokenisingParserContext
          Implements IParserContext, ITokenisingParserContext
  inheritance:
  - System.Object
  - VDS.RDF.Parsing.Contexts.BaseParserContext
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext
  implements:
  - VDS.RDF.Parsing.Contexts.IParserContext
  - VDS.RDF.Parsing.Contexts.ITokenisingParserContext
  inheritedMembers:
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext._queue
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext._traceTokeniser
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext._localTokens
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext.Tokens
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext.LocalTokens
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext.TraceTokeniser
  - VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  - VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  - VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  - VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  - VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  - VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokeniser)
  commentId: M:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokeniser)
  id: '#ctor(VDS.RDF.Parsing.Tokens.ITokeniser)'
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: SparqlQueryParserContext(ITokeniser)
  nameWithType: SparqlQueryParserContext.SparqlQueryParserContext(ITokeniser)
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SparqlQueryParserContext(VDS.RDF.Parsing.Tokens.ITokeniser)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new SPARQL Query Parser Context with default settings.\n"
  example: []
  syntax:
    content: public SparqlQueryParserContext(ITokeniser tokeniser)
    parameters:
    - id: tokeniser
      type: VDS.RDF.Parsing.Tokens.ITokeniser
      description: Tokeniser to use.
    content.vb: Public Sub New(tokeniser As ITokeniser)
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.Tokens.TokenQueueMode)
  commentId: M:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.Tokens.TokenQueueMode)
  id: '#ctor(VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.Tokens.TokenQueueMode)'
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: SparqlQueryParserContext(ITokeniser, TokenQueueMode)
  nameWithType: SparqlQueryParserContext.SparqlQueryParserContext(ITokeniser, TokenQueueMode)
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SparqlQueryParserContext(VDS.RDF.Parsing.Tokens.ITokeniser, VDS.RDF.Parsing.Tokens.TokenQueueMode)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 67
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new SPARQL Query Parser Context with custom settings.\n"
  example: []
  syntax:
    content: public SparqlQueryParserContext(ITokeniser tokeniser, TokenQueueMode queueMode)
    parameters:
    - id: tokeniser
      type: VDS.RDF.Parsing.Tokens.ITokeniser
      description: Tokeniser to use.
    - id: queueMode
      type: VDS.RDF.Parsing.Tokens.TokenQueueMode
      description: Tokeniser Queue Mode.
    content.vb: Public Sub New(tokeniser As ITokeniser, queueMode As TokenQueueMode)
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokeniser,System.Boolean,System.Boolean)
  commentId: M:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokeniser,System.Boolean,System.Boolean)
  id: '#ctor(VDS.RDF.Parsing.Tokens.ITokeniser,System.Boolean,System.Boolean)'
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: SparqlQueryParserContext(ITokeniser, Boolean, Boolean)
  nameWithType: SparqlQueryParserContext.SparqlQueryParserContext(ITokeniser, Boolean, Boolean)
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SparqlQueryParserContext(VDS.RDF.Parsing.Tokens.ITokeniser, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 76
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new SPARQL Query Parser Context with custom settings.\n"
  example: []
  syntax:
    content: public SparqlQueryParserContext(ITokeniser tokeniser, bool traceParsing, bool traceTokeniser)
    parameters:
    - id: tokeniser
      type: VDS.RDF.Parsing.Tokens.ITokeniser
      description: Tokeniser to use.
    - id: traceParsing
      type: System.Boolean
      description: Whether to trace parsing.
    - id: traceTokeniser
      type: System.Boolean
      description: Whether to trace tokenisation.
    content.vb: Public Sub New(tokeniser As ITokeniser, traceParsing As Boolean, traceTokeniser As Boolean)
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.Tokens.TokenQueueMode,System.Boolean,System.Boolean)
  commentId: M:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.Tokens.TokenQueueMode,System.Boolean,System.Boolean)
  id: '#ctor(VDS.RDF.Parsing.Tokens.ITokeniser,VDS.RDF.Parsing.Tokens.TokenQueueMode,System.Boolean,System.Boolean)'
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: SparqlQueryParserContext(ITokeniser, TokenQueueMode, Boolean, Boolean)
  nameWithType: SparqlQueryParserContext.SparqlQueryParserContext(ITokeniser, TokenQueueMode, Boolean, Boolean)
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SparqlQueryParserContext(VDS.RDF.Parsing.Tokens.ITokeniser, VDS.RDF.Parsing.Tokens.TokenQueueMode, System.Boolean, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 86
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new SPARQL Query Parser Context with custom settings.\n"
  example: []
  syntax:
    content: public SparqlQueryParserContext(ITokeniser tokeniser, TokenQueueMode queueMode, bool traceParsing, bool traceTokeniser)
    parameters:
    - id: tokeniser
      type: VDS.RDF.Parsing.Tokens.ITokeniser
      description: Tokeniser to use.
    - id: queueMode
      type: VDS.RDF.Parsing.Tokens.TokenQueueMode
      description: Tokeniser Queue Mode.
    - id: traceParsing
      type: System.Boolean
      description: Whether to trace parsing.
    - id: traceTokeniser
      type: System.Boolean
      description: Whether to trace tokenisation.
    content.vb: Public Sub New(tokeniser As ITokeniser, queueMode As TokenQueueMode, traceParsing As Boolean, traceTokeniser As Boolean)
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext,VDS.RDF.Parsing.Tokens.ITokenQueue)
  commentId: M:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext,VDS.RDF.Parsing.Tokens.ITokenQueue)
  id: '#ctor(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext,VDS.RDF.Parsing.Tokens.ITokenQueue)'
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: SparqlQueryParserContext(SparqlQueryParserContext, ITokenQueue)
  nameWithType: SparqlQueryParserContext.SparqlQueryParserContext(SparqlQueryParserContext, ITokenQueue)
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SparqlQueryParserContext(VDS.RDF.Parsing.Contexts.SparqlQueryParserContext, VDS.RDF.Parsing.Tokens.ITokenQueue)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 94
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new SPARQL Query Parser Context for parsing sub-queries.\n"
  example: []
  syntax:
    content: protected SparqlQueryParserContext(SparqlQueryParserContext parent, ITokenQueue tokens)
    parameters:
    - id: parent
      type: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
      description: Parent Query Parser Context.
    - id: tokens
      type: VDS.RDF.Parsing.Tokens.ITokenQueue
      description: Tokens that need parsing to form a subquery.
    content.vb: Protected Sub New(parent As SparqlQueryParserContext, tokens As ITokenQueue)
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokenQueue)
  commentId: M:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor(VDS.RDF.Parsing.Tokens.ITokenQueue)
  id: '#ctor(VDS.RDF.Parsing.Tokens.ITokenQueue)'
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: SparqlQueryParserContext(ITokenQueue)
  nameWithType: SparqlQueryParserContext.SparqlQueryParserContext(ITokenQueue)
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SparqlQueryParserContext(VDS.RDF.Parsing.Tokens.ITokenQueue)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 111
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Query Parser Context from the given Token Queue.\n"
  example: []
  syntax:
    content: protected SparqlQueryParserContext(ITokenQueue tokens)
    parameters:
    - id: tokens
      type: VDS.RDF.Parsing.Tokens.ITokenQueue
      description: Token Queue.
    content.vb: Protected Sub New(tokens As ITokenQueue)
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.Query
  commentId: P:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.Query
  id: Query
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: Query
  nameWithType: SparqlQueryParserContext.Query
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.Query
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Query
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 121
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Query that this Parser Context is populating.\n"
  example: []
  syntax:
    content: public SparqlQuery Query { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.SparqlQuery
    content.vb: Public ReadOnly Property Query As SparqlQuery
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.Query*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.VerbSeen
  commentId: P:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.VerbSeen
  id: VerbSeen
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: VerbSeen
  nameWithType: SparqlQueryParserContext.VerbSeen
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.VerbSeen
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: VerbSeen
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 132
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets/Sets whether the Query Verb has been seen.\n"
  example: []
  syntax:
    content: public bool VerbSeen { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property VerbSeen As Boolean
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.VerbSeen*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SubQueryMode
  commentId: P:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SubQueryMode
  id: SubQueryMode
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: SubQueryMode
  nameWithType: SparqlQueryParserContext.SubQueryMode
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SubQueryMode
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SubQueryMode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 150
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nReturns whether this Parser Context is for a sub-query.\n"
  example: []
  syntax:
    content: public bool SubQueryMode { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property SubQueryMode As Boolean
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SubQueryMode*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SyntaxMode
  commentId: P:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SyntaxMode
  id: SyntaxMode
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: SyntaxMode
  nameWithType: SparqlQueryParserContext.SyntaxMode
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SyntaxMode
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SyntaxMode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 161
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets/Sets the Syntax that should be supported.\n"
  example: []
  syntax:
    content: public SparqlQuerySyntax SyntaxMode { get; set; }
    parameters: []
    return:
      type: VDS.RDF.Parsing.SparqlQuerySyntax
    content.vb: Public Property SyntaxMode As SparqlQuerySyntax
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SyntaxMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.DefaultBaseUri
  commentId: P:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.DefaultBaseUri
  id: DefaultBaseUri
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: DefaultBaseUri
  nameWithType: SparqlQueryParserContext.DefaultBaseUri
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.DefaultBaseUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultBaseUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 177
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets/Sets the default Base Uri to resolve relative URIs against.\n"
  example: []
  syntax:
    content: public Uri DefaultBaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property DefaultBaseUri As Uri
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.DefaultBaseUri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GraphPatternID
  commentId: P:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GraphPatternID
  id: GraphPatternID
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: GraphPatternID
  nameWithType: SparqlQueryParserContext.GraphPatternID
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GraphPatternID
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GraphPatternID
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 216
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets/Sets the current Graph Pattern ID.\n"
  example: []
  syntax:
    content: public int GraphPatternID { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property GraphPatternID As Integer
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GraphPatternID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GetNewBlankNodeID
  commentId: M:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GetNewBlankNodeID
  id: GetNewBlankNodeID
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: GetNewBlankNodeID()
  nameWithType: SparqlQueryParserContext.GetNewBlankNodeID()
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GetNewBlankNodeID()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetNewBlankNodeID
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 232
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets a new Blank Node ID.\n"
  example: []
  syntax:
    content: public string GetNewBlankNodeID()
    return:
      type: System.String
      description: ''
    content.vb: Public Function GetNewBlankNodeID As String
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GetNewBlankNodeID*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeIDUsages
  commentId: P:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeIDUsages
  id: BlankNodeIDUsages
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: BlankNodeIDUsages
  nameWithType: SparqlQueryParserContext.BlankNodeIDUsages
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeIDUsages
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BlankNodeIDUsages
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 248
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the mapping of in use Blank Nodes IDs.\n"
  example: []
  syntax:
    content: public Dictionary<string, int> BlankNodeIDUsages { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
    content.vb: Public ReadOnly Property BlankNodeIDUsages As Dictionary(Of String, Integer)
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeIDUsages*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeID
  commentId: P:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeID
  id: BlankNodeID
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: BlankNodeID
  nameWithType: SparqlQueryParserContext.BlankNodeID
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeID
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BlankNodeID
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 259
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the last Blank Node ID that was issued.\n"
  example: []
  syntax:
    content: public int BlankNodeID { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BlankNodeID As Integer
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeID*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.CheckBlankNodeScope
  commentId: P:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.CheckBlankNodeScope
  id: CheckBlankNodeScope
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: CheckBlankNodeScope
  nameWithType: SparqlQueryParserContext.CheckBlankNodeScope
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.CheckBlankNodeScope
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CheckBlankNodeScope
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 273
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets/Sets whether Blank Node scoping must be checked.\n"
  remarks: "\nIf false then only name tracking will be done to prevent auto-generated IDs colliding with user allocated IDs.\n"
  example: []
  syntax:
    content: public bool CheckBlankNodeScope { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CheckBlankNodeScope As Boolean
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.CheckBlankNodeScope*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.NextAliasID
  commentId: P:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.NextAliasID
  id: NextAliasID
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: NextAliasID
  nameWithType: SparqlQueryParserContext.NextAliasID
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.NextAliasID
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NextAliasID
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 288
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Next Available Alias ID for aliasing Project Expressions and Aggregates which don&apos;t have an Aggregate Specified.\n"
  example: []
  syntax:
    content: public int NextAliasID { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property NextAliasID As Integer
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.NextAliasID*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.ExpressionFactories
  commentId: P:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.ExpressionFactories
  id: ExpressionFactories
  parent: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  langs:
  - csharp
  - vb
  name: ExpressionFactories
  nameWithType: SparqlQueryParserContext.ExpressionFactories
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.ExpressionFactories
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExpressionFactories
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/SparqlQueryParserContext.cs
    startLine: 301
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Custom Expression Factories valid for this Parser.\n"
  example: []
  syntax:
    content: public IEnumerable<ISparqlCustomExpressionFactory> ExpressionFactories { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory}
    content.vb: Public Property ExpressionFactories As IEnumerable(Of ISparqlCustomExpressionFactory)
  overload: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.ExpressionFactories*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Parsing.Contexts
  commentId: N:VDS.RDF.Parsing.Contexts
  name: VDS.RDF.Parsing.Contexts
  nameWithType: VDS.RDF.Parsing.Contexts
  fullName: VDS.RDF.Parsing.Contexts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.BaseParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: BaseParserContext
  nameWithType: BaseParserContext
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.TokenisingParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: TokenisingParserContext
  nameWithType: TokenisingParserContext
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext
- uid: VDS.RDF.Parsing.Contexts.IParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.IParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: IParserContext
  nameWithType: IParserContext
  fullName: VDS.RDF.Parsing.Contexts.IParserContext
- uid: VDS.RDF.Parsing.Contexts.ITokenisingParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.ITokenisingParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: ITokenisingParserContext
  nameWithType: ITokenisingParserContext
  fullName: VDS.RDF.Parsing.Contexts.ITokenisingParserContext
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext._queue
  commentId: F:VDS.RDF.Parsing.Contexts.TokenisingParserContext._queue
  parent: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  name: _queue
  nameWithType: TokenisingParserContext._queue
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext._queue
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext._traceTokeniser
  commentId: F:VDS.RDF.Parsing.Contexts.TokenisingParserContext._traceTokeniser
  parent: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  name: _traceTokeniser
  nameWithType: TokenisingParserContext._traceTokeniser
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext._traceTokeniser
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext._localTokens
  commentId: F:VDS.RDF.Parsing.Contexts.TokenisingParserContext._localTokens
  parent: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  name: _localTokens
  nameWithType: TokenisingParserContext._localTokens
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext._localTokens
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext.Tokens
  commentId: P:VDS.RDF.Parsing.Contexts.TokenisingParserContext.Tokens
  parent: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  name: Tokens
  nameWithType: TokenisingParserContext.Tokens
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext.Tokens
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext.LocalTokens
  commentId: P:VDS.RDF.Parsing.Contexts.TokenisingParserContext.LocalTokens
  parent: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  name: LocalTokens
  nameWithType: TokenisingParserContext.LocalTokens
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext.LocalTokens
- uid: VDS.RDF.Parsing.Contexts.TokenisingParserContext.TraceTokeniser
  commentId: P:VDS.RDF.Parsing.Contexts.TokenisingParserContext.TraceTokeniser
  parent: VDS.RDF.Parsing.Contexts.TokenisingParserContext
  name: TraceTokeniser
  nameWithType: TokenisingParserContext.TraceTokeniser
  fullName: VDS.RDF.Parsing.Contexts.TokenisingParserContext.TraceTokeniser
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  commentId: F:VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: _handler
  nameWithType: BaseParserContext._handler
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext._handler
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  commentId: F:VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: _traceParsing
  nameWithType: BaseParserContext._traceParsing
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: Handler
  nameWithType: BaseParserContext.Handler
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: TraceParsing
  nameWithType: BaseParserContext.TraceParsing
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: Namespaces
  nameWithType: BaseParserContext.Namespaces
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  name: BaseUri
  nameWithType: BaseParserContext.BaseUri
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlQueryParserContext>()
  nameWithType: Extensions.AsEnumerable<SparqlQueryParserContext>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.SparqlQueryParserContext>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlQueryParserContext)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.SparqlQueryParserContext)()
  name.vb: AsEnumerable(Of SparqlQueryParserContext)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlQueryParserContext>
    nameWithType: Extensions.AsEnumerable<SparqlQueryParserContext>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.SparqlQueryParserContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlQueryParserContext)
    nameWithType: Extensions.AsEnumerable(Of SparqlQueryParserContext)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.SparqlQueryParserContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.#ctor
  name: SparqlQueryParserContext
  nameWithType: SparqlQueryParserContext.SparqlQueryParserContext
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SparqlQueryParserContext
- uid: VDS.RDF.Parsing.Tokens.ITokeniser
  commentId: T:VDS.RDF.Parsing.Tokens.ITokeniser
  parent: VDS.RDF.Parsing.Tokens
  name: ITokeniser
  nameWithType: ITokeniser
  fullName: VDS.RDF.Parsing.Tokens.ITokeniser
- uid: VDS.RDF.Parsing.Tokens
  commentId: N:VDS.RDF.Parsing.Tokens
  name: VDS.RDF.Parsing.Tokens
  nameWithType: VDS.RDF.Parsing.Tokens
  fullName: VDS.RDF.Parsing.Tokens
- uid: VDS.RDF.Parsing.Tokens.TokenQueueMode
  commentId: T:VDS.RDF.Parsing.Tokens.TokenQueueMode
  parent: VDS.RDF.Parsing.Tokens
  name: TokenQueueMode
  nameWithType: TokenQueueMode
  fullName: VDS.RDF.Parsing.Tokens.TokenQueueMode
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: SparqlQueryParserContext
  nameWithType: SparqlQueryParserContext
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext
- uid: VDS.RDF.Parsing.Tokens.ITokenQueue
  commentId: T:VDS.RDF.Parsing.Tokens.ITokenQueue
  parent: VDS.RDF.Parsing.Tokens
  name: ITokenQueue
  nameWithType: ITokenQueue
  fullName: VDS.RDF.Parsing.Tokens.ITokenQueue
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.Query*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.Query
  name: Query
  nameWithType: SparqlQueryParserContext.Query
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.Query
- uid: VDS.RDF.Query.SparqlQuery
  commentId: T:VDS.RDF.Query.SparqlQuery
  parent: VDS.RDF.Query
  name: SparqlQuery
  nameWithType: SparqlQuery
  fullName: VDS.RDF.Query.SparqlQuery
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.VerbSeen*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.VerbSeen
  name: VerbSeen
  nameWithType: SparqlQueryParserContext.VerbSeen
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.VerbSeen
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SubQueryMode*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SubQueryMode
  name: SubQueryMode
  nameWithType: SparqlQueryParserContext.SubQueryMode
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SubQueryMode
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SyntaxMode*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SyntaxMode
  name: SyntaxMode
  nameWithType: SparqlQueryParserContext.SyntaxMode
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.SyntaxMode
- uid: VDS.RDF.Parsing.SparqlQuerySyntax
  commentId: T:VDS.RDF.Parsing.SparqlQuerySyntax
  parent: VDS.RDF.Parsing
  name: SparqlQuerySyntax
  nameWithType: SparqlQuerySyntax
  fullName: VDS.RDF.Parsing.SparqlQuerySyntax
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.DefaultBaseUri*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.DefaultBaseUri
  name: DefaultBaseUri
  nameWithType: SparqlQueryParserContext.DefaultBaseUri
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.DefaultBaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GraphPatternID*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GraphPatternID
  name: GraphPatternID
  nameWithType: SparqlQueryParserContext.GraphPatternID
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GraphPatternID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GetNewBlankNodeID*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GetNewBlankNodeID
  name: GetNewBlankNodeID
  nameWithType: SparqlQueryParserContext.GetNewBlankNodeID
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.GetNewBlankNodeID
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeIDUsages*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeIDUsages
  name: BlankNodeIDUsages
  nameWithType: SparqlQueryParserContext.BlankNodeIDUsages
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeIDUsages
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Int32>
  nameWithType: Dictionary<String, Int32>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Int32>
  nameWithType.vb: Dictionary(Of String, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Int32)
  name.vb: Dictionary(Of String, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeID*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeID
  name: BlankNodeID
  nameWithType: SparqlQueryParserContext.BlankNodeID
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.BlankNodeID
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.CheckBlankNodeScope*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.CheckBlankNodeScope
  name: CheckBlankNodeScope
  nameWithType: SparqlQueryParserContext.CheckBlankNodeScope
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.CheckBlankNodeScope
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.NextAliasID*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.NextAliasID
  name: NextAliasID
  nameWithType: SparqlQueryParserContext.NextAliasID
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.NextAliasID
- uid: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.ExpressionFactories*
  commentId: Overload:VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.ExpressionFactories
  name: ExpressionFactories
  nameWithType: SparqlQueryParserContext.ExpressionFactories
  fullName: VDS.RDF.Parsing.Contexts.SparqlQueryParserContext.ExpressionFactories
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISparqlCustomExpressionFactory>
  nameWithType: IEnumerable<ISparqlCustomExpressionFactory>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory>
  nameWithType.vb: IEnumerable(Of ISparqlCustomExpressionFactory)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory)
  name.vb: IEnumerable(Of ISparqlCustomExpressionFactory)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
    name: ISparqlCustomExpressionFactory
    nameWithType: ISparqlCustomExpressionFactory
    fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
    name: ISparqlCustomExpressionFactory
    nameWithType: ISparqlCustomExpressionFactory
    fullName: VDS.RDF.Query.Expressions.ISparqlCustomExpressionFactory
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
