### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Optimisation.SparqlOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.SparqlOptimiser
  id: SparqlOptimiser
  parent: VDS.RDF.Query.Optimisation
  children:
  - VDS.RDF.Query.Optimisation.SparqlOptimiser.AddOptimiser(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  - VDS.RDF.Query.Optimisation.SparqlOptimiser.AlgebraOptimisers
  - VDS.RDF.Query.Optimisation.SparqlOptimiser.OptimiserStatsNamespace
  - VDS.RDF.Query.Optimisation.SparqlOptimiser.QueryOptimiser
  - VDS.RDF.Query.Optimisation.SparqlOptimiser.RemoveOptimiser(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  - VDS.RDF.Query.Optimisation.SparqlOptimiser.ResetOptimisers
  langs:
  - csharp
  - vb
  name: SparqlOptimiser
  nameWithType: SparqlOptimiser
  fullName: VDS.RDF.Query.Optimisation.SparqlOptimiser
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlOptimiser
    path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nStatic Helper class which provides global registry of Algebra Optimisers and the global Query Optimiser.\n"
  example: []
  syntax:
    content: public static class SparqlOptimiser
    content.vb: Public Module SparqlOptimiser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Query.Optimisation.SparqlOptimiser.OptimiserStatsNamespace
  commentId: F:VDS.RDF.Query.Optimisation.SparqlOptimiser.OptimiserStatsNamespace
  id: OptimiserStatsNamespace
  parent: VDS.RDF.Query.Optimisation.SparqlOptimiser
  langs:
  - csharp
  - vb
  name: OptimiserStatsNamespace
  nameWithType: SparqlOptimiser.OptimiserStatsNamespace
  fullName: VDS.RDF.Query.Optimisation.SparqlOptimiser.OptimiserStatsNamespace
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OptimiserStatsNamespace
    path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
    startLine: 57
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nNamespace URI for the Optimiser Statistics vocabulary.\n"
  example: []
  syntax:
    content: public const string OptimiserStatsNamespace = "http://www.dotnetrdf.org/optimiserStats#"
    return:
      type: System.String
    content.vb: Public Const OptimiserStatsNamespace As String = "http://www.dotnetrdf.org/optimiserStats#"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Optimisation.SparqlOptimiser.QueryOptimiser
  commentId: P:VDS.RDF.Query.Optimisation.SparqlOptimiser.QueryOptimiser
  id: QueryOptimiser
  parent: VDS.RDF.Query.Optimisation.SparqlOptimiser
  langs:
  - csharp
  - vb
  name: QueryOptimiser
  nameWithType: SparqlOptimiser.QueryOptimiser
  fullName: VDS.RDF.Query.Optimisation.SparqlOptimiser.QueryOptimiser
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryOptimiser
    path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
    startLine: 73
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nGets/Sets the global Query Optimiser that is used by default.\n"
  remarks: "\n<p>\n<strong>Note:</strong> May be overridden by the Optimiser setting on a SparqlQueryParser.\n</p>\n<p>\nUnlike previous releases a Query may be reoptimised using a different optimiser if desired by calling the <xref href=\"VDS.RDF.Query.SparqlQuery.Optimise\" data-throw-if-not-resolved=\"false\"></xref> method again and providing a different Optimiser.  This may not always fully reoptimise the query since the first optimisation will have caused any Filters and Assignments to be placed in the Triple Pattern.\n</p>\n<p>\n<em>Warning:</em> Setting this to null has no effect, to disable automatic optimisation use the global property <xref href=\"VDS.RDF.Options.QueryOptimisation\" data-throw-if-not-resolved=\"false\"></xref>.  Even with this option disabled a Query can still be optimised manually by calling its <xref href=\"VDS.RDF.Query.SparqlQuery.Optimise\" data-throw-if-not-resolved=\"false\"></xref> method.\n</p>\n"
  example: []
  syntax:
    content: public static IQueryOptimiser QueryOptimiser { get; set; }
    parameters: []
    return:
      type: VDS.RDF.Query.Optimisation.IQueryOptimiser
    content.vb: Public Shared Property QueryOptimiser As IQueryOptimiser
  overload: VDS.RDF.Query.Optimisation.SparqlOptimiser.QueryOptimiser*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Optimisation.SparqlOptimiser.AlgebraOptimisers
  commentId: P:VDS.RDF.Query.Optimisation.SparqlOptimiser.AlgebraOptimisers
  id: AlgebraOptimisers
  parent: VDS.RDF.Query.Optimisation.SparqlOptimiser
  langs:
  - csharp
  - vb
  name: AlgebraOptimisers
  nameWithType: SparqlOptimiser.AlgebraOptimisers
  fullName: VDS.RDF.Query.Optimisation.SparqlOptimiser.AlgebraOptimisers
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AlgebraOptimisers
    path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
    startLine: 96
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nGets the global Algebra Optimisers that are in use.\n"
  remarks: "\n<p>\nUnlike Query Optimisation multiple Algebra Optimisations may apply.  Algebra optimisers may also be specified and apply locally by the use of the relevant properties on the <xref href=\"VDS.RDF.Parsing.SparqlQueryParser\" data-throw-if-not-resolved=\"false\"></xref> and <xref href=\"VDS.RDF.Query.SparqlQuery\" data-throw-if-not-resolved=\"false\"></xref> classes.  Those specified on a parser will automatically be passed through to all queries parsed by the parser.  Locally specified optimisers apply prior to globally specified ones.\n</p>\n"
  example: []
  syntax:
    content: public static IEnumerable<IAlgebraOptimiser> AlgebraOptimisers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Optimisation.IAlgebraOptimiser}
    content.vb: Public Shared ReadOnly Property AlgebraOptimisers As IEnumerable(Of IAlgebraOptimiser)
  overload: VDS.RDF.Query.Optimisation.SparqlOptimiser.AlgebraOptimisers*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VDS.RDF.Query.Optimisation.SparqlOptimiser.AddOptimiser(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  commentId: M:VDS.RDF.Query.Optimisation.SparqlOptimiser.AddOptimiser(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  id: AddOptimiser(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  parent: VDS.RDF.Query.Optimisation.SparqlOptimiser
  langs:
  - csharp
  - vb
  name: AddOptimiser(IAlgebraOptimiser)
  nameWithType: SparqlOptimiser.AddOptimiser(IAlgebraOptimiser)
  fullName: VDS.RDF.Query.Optimisation.SparqlOptimiser.AddOptimiser(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddOptimiser
    path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
    startLine: 108
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nAdds a new Algebra Optimiser.\n"
  example: []
  syntax:
    content: public static void AddOptimiser(IAlgebraOptimiser optimiser)
    parameters:
    - id: optimiser
      type: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
      description: Optimiser.
    content.vb: Public Shared Sub AddOptimiser(optimiser As IAlgebraOptimiser)
  overload: VDS.RDF.Query.Optimisation.SparqlOptimiser.AddOptimiser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Optimisation.SparqlOptimiser.RemoveOptimiser(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  commentId: M:VDS.RDF.Query.Optimisation.SparqlOptimiser.RemoveOptimiser(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  id: RemoveOptimiser(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  parent: VDS.RDF.Query.Optimisation.SparqlOptimiser
  langs:
  - csharp
  - vb
  name: RemoveOptimiser(IAlgebraOptimiser)
  nameWithType: SparqlOptimiser.RemoveOptimiser(IAlgebraOptimiser)
  fullName: VDS.RDF.Query.Optimisation.SparqlOptimiser.RemoveOptimiser(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RemoveOptimiser
    path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
    startLine: 117
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nRemoves an Algebra Optimiser.\n"
  example: []
  syntax:
    content: public static void RemoveOptimiser(IAlgebraOptimiser optimiser)
    parameters:
    - id: optimiser
      type: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
      description: ''
    content.vb: Public Shared Sub RemoveOptimiser(optimiser As IAlgebraOptimiser)
  overload: VDS.RDF.Query.Optimisation.SparqlOptimiser.RemoveOptimiser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Optimisation.SparqlOptimiser.ResetOptimisers
  commentId: M:VDS.RDF.Query.Optimisation.SparqlOptimiser.ResetOptimisers
  id: ResetOptimisers
  parent: VDS.RDF.Query.Optimisation.SparqlOptimiser
  langs:
  - csharp
  - vb
  name: ResetOptimisers()
  nameWithType: SparqlOptimiser.ResetOptimisers()
  fullName: VDS.RDF.Query.Optimisation.SparqlOptimiser.ResetOptimisers()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResetOptimisers
    path: Libraries/dotNetRDF/Query/Optimisation/SparqlOptimiser.cs
    startLine: 125
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nResets Optimisers to default settings.\n"
  example: []
  syntax:
    content: public static void ResetOptimisers()
    content.vb: Public Shared Sub ResetOptimisers
  overload: VDS.RDF.Query.Optimisation.SparqlOptimiser.ResetOptimisers*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.Query.Optimisation
  commentId: N:VDS.RDF.Query.Optimisation
  name: VDS.RDF.Query.Optimisation
  nameWithType: VDS.RDF.Query.Optimisation
  fullName: VDS.RDF.Query.Optimisation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.SparqlQuery.Optimise
  commentId: M:VDS.RDF.Query.SparqlQuery.Optimise
  isExternal: true
- uid: VDS.RDF.Options.QueryOptimisation
  commentId: P:VDS.RDF.Options.QueryOptimisation
  isExternal: true
- uid: VDS.RDF.Query.Optimisation.SparqlOptimiser.QueryOptimiser*
  commentId: Overload:VDS.RDF.Query.Optimisation.SparqlOptimiser.QueryOptimiser
  name: QueryOptimiser
  nameWithType: SparqlOptimiser.QueryOptimiser
  fullName: VDS.RDF.Query.Optimisation.SparqlOptimiser.QueryOptimiser
- uid: VDS.RDF.Query.Optimisation.IQueryOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.IQueryOptimiser
  parent: VDS.RDF.Query.Optimisation
  name: IQueryOptimiser
  nameWithType: IQueryOptimiser
  fullName: VDS.RDF.Query.Optimisation.IQueryOptimiser
- uid: VDS.RDF.Parsing.SparqlQueryParser
  commentId: T:VDS.RDF.Parsing.SparqlQueryParser
  parent: VDS.RDF.Parsing
  name: SparqlQueryParser
  nameWithType: SparqlQueryParser
  fullName: VDS.RDF.Parsing.SparqlQueryParser
- uid: VDS.RDF.Query.SparqlQuery
  commentId: T:VDS.RDF.Query.SparqlQuery
  parent: VDS.RDF.Query
  name: SparqlQuery
  nameWithType: SparqlQuery
  fullName: VDS.RDF.Query.SparqlQuery
- uid: VDS.RDF.Query.Optimisation.SparqlOptimiser.AlgebraOptimisers*
  commentId: Overload:VDS.RDF.Query.Optimisation.SparqlOptimiser.AlgebraOptimisers
  name: AlgebraOptimisers
  nameWithType: SparqlOptimiser.AlgebraOptimisers
  fullName: VDS.RDF.Query.Optimisation.SparqlOptimiser.AlgebraOptimisers
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Optimisation.IAlgebraOptimiser}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.Optimisation.IAlgebraOptimiser}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IAlgebraOptimiser>
  nameWithType: IEnumerable<IAlgebraOptimiser>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.Optimisation.IAlgebraOptimiser>
  nameWithType.vb: IEnumerable(Of IAlgebraOptimiser)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  name.vb: IEnumerable(Of IAlgebraOptimiser)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
    name: IAlgebraOptimiser
    nameWithType: IAlgebraOptimiser
    fullName: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
    name: IAlgebraOptimiser
    nameWithType: IAlgebraOptimiser
    fullName: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Optimisation.SparqlOptimiser.AddOptimiser*
  commentId: Overload:VDS.RDF.Query.Optimisation.SparqlOptimiser.AddOptimiser
  name: AddOptimiser
  nameWithType: SparqlOptimiser.AddOptimiser
  fullName: VDS.RDF.Query.Optimisation.SparqlOptimiser.AddOptimiser
- uid: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  parent: VDS.RDF.Query.Optimisation
  name: IAlgebraOptimiser
  nameWithType: IAlgebraOptimiser
  fullName: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
- uid: VDS.RDF.Query.Optimisation.SparqlOptimiser.RemoveOptimiser*
  commentId: Overload:VDS.RDF.Query.Optimisation.SparqlOptimiser.RemoveOptimiser
  name: RemoveOptimiser
  nameWithType: SparqlOptimiser.RemoveOptimiser
  fullName: VDS.RDF.Query.Optimisation.SparqlOptimiser.RemoveOptimiser
- uid: VDS.RDF.Query.Optimisation.SparqlOptimiser.ResetOptimisers*
  commentId: Overload:VDS.RDF.Query.Optimisation.SparqlOptimiser.ResetOptimisers
  name: ResetOptimisers
  nameWithType: SparqlOptimiser.ResetOptimisers
  fullName: VDS.RDF.Query.Optimisation.SparqlOptimiser.ResetOptimisers
shouldSkipMarkup: true
