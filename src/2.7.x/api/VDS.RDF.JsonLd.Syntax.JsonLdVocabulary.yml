### YamlMime:ManagedReference
items:
- uid: VDS.RDF.JsonLd.Syntax.JsonLdVocabulary
  commentId: T:VDS.RDF.JsonLd.Syntax.JsonLdVocabulary
  id: JsonLdVocabulary
  parent: VDS.RDF.JsonLd.Syntax
  children:
  - VDS.RDF.JsonLd.Syntax.JsonLdVocabulary.Context
  - VDS.RDF.JsonLd.Syntax.JsonLdVocabulary.VocabularyBase
  langs:
  - csharp
  - vb
  name: JsonLdVocabulary
  nameWithType: JsonLdVocabulary
  fullName: VDS.RDF.JsonLd.Syntax.JsonLdVocabulary
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/Syntax/JsonLdVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: JsonLdVocabulary
    path: Libraries/dotNetRDF/JsonLd/Syntax/JsonLdVocabulary.cs
    startLine: 31
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd.Syntax
  summary: "\nDefines string constants for elements of the JSON-LD vocabulary that are required by the <xref href=\"VDS.RDF.JsonLd.JsonLdProcessor\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public static class JsonLdVocabulary
    content.vb: Public Module JsonLdVocabulary
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.JsonLd.Syntax.JsonLdVocabulary.VocabularyBase
  commentId: F:VDS.RDF.JsonLd.Syntax.JsonLdVocabulary.VocabularyBase
  id: VocabularyBase
  parent: VDS.RDF.JsonLd.Syntax.JsonLdVocabulary
  langs:
  - csharp
  - vb
  name: VocabularyBase
  nameWithType: JsonLdVocabulary.VocabularyBase
  fullName: VDS.RDF.JsonLd.Syntax.JsonLdVocabulary.VocabularyBase
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/Syntax/JsonLdVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: VocabularyBase
    path: Libraries/dotNetRDF/JsonLd/Syntax/JsonLdVocabulary.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd.Syntax
  summary: "\nThe prefix part of each JSON-LD vocabulary IRI up to and including the fragment separator.\n"
  example: []
  syntax:
    content: public static string VocabularyBase
    return:
      type: System.String
    content.vb: Public Shared VocabularyBase As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.JsonLd.Syntax.JsonLdVocabulary.Context
  commentId: F:VDS.RDF.JsonLd.Syntax.JsonLdVocabulary.Context
  id: Context
  parent: VDS.RDF.JsonLd.Syntax.JsonLdVocabulary
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: JsonLdVocabulary.Context
  fullName: VDS.RDF.JsonLd.Syntax.JsonLdVocabulary.Context
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/Syntax/JsonLdVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Context
    path: Libraries/dotNetRDF/JsonLd/Syntax/JsonLdVocabulary.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd.Syntax
  summary: "\nIdentifier for the context term.\n"
  example: []
  syntax:
    content: public static string Context
    return:
      type: System.String
    content.vb: Public Shared Context As String
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.JsonLd.JsonLdProcessor
  commentId: T:VDS.RDF.JsonLd.JsonLdProcessor
  name: JsonLdProcessor
  nameWithType: JsonLdProcessor
  fullName: VDS.RDF.JsonLd.JsonLdProcessor
- uid: VDS.RDF.JsonLd.Syntax
  commentId: N:VDS.RDF.JsonLd.Syntax
  name: VDS.RDF.JsonLd.Syntax
  nameWithType: VDS.RDF.JsonLd.Syntax
  fullName: VDS.RDF.JsonLd.Syntax
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
shouldSkipMarkup: true
