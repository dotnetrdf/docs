### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Contexts.IResultsParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.IResultsParserContext
  id: IResultsParserContext
  parent: VDS.RDF.Parsing.Contexts
  children:
  - VDS.RDF.Parsing.Contexts.IResultsParserContext.Handler
  langs:
  - csharp
  - vb
  name: IResultsParserContext
  nameWithType: IResultsParserContext
  fullName: VDS.RDF.Parsing.Contexts.IResultsParserContext
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/IResultsParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IResultsParserContext
    path: Libraries/dotNetRDF/Parsing/Contexts/IResultsParserContext.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nInterface for SPARQL Results Parser Contexts.\n"
  example: []
  syntax:
    content: public interface IResultsParserContext
    content.vb: Public Interface IResultsParserContext
  extensionMethods:
  - VDS.RDF.Parsing.Contexts.IResultsParserContext.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Parsing.Contexts.IResultsParserContext.Handler
  commentId: P:VDS.RDF.Parsing.Contexts.IResultsParserContext.Handler
  id: Handler
  parent: VDS.RDF.Parsing.Contexts.IResultsParserContext
  langs:
  - csharp
  - vb
  name: Handler
  nameWithType: IResultsParserContext.Handler
  fullName: VDS.RDF.Parsing.Contexts.IResultsParserContext.Handler
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/IResultsParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Handler
    path: Libraries/dotNetRDF/Parsing/Contexts/IResultsParserContext.cs
    startLine: 71
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the SPARQL Results Handler to use.\n"
  example: []
  syntax:
    content: ISparqlResultsHandler Handler { get; }
    parameters: []
    return:
      type: VDS.RDF.ISparqlResultsHandler
    content.vb: ReadOnly Property Handler As ISparqlResultsHandler
  overload: VDS.RDF.Parsing.Contexts.IResultsParserContext.Handler*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VDS.RDF.Parsing.Contexts
  commentId: N:VDS.RDF.Parsing.Contexts
  name: VDS.RDF.Parsing.Contexts
  nameWithType: VDS.RDF.Parsing.Contexts
  fullName: VDS.RDF.Parsing.Contexts
- uid: VDS.RDF.Parsing.Contexts.IResultsParserContext.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IResultsParserContext>()
  nameWithType: Extensions.AsEnumerable<IResultsParserContext>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.IResultsParserContext>()
  nameWithType.vb: Extensions.AsEnumerable(Of IResultsParserContext)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.IResultsParserContext)()
  name.vb: AsEnumerable(Of IResultsParserContext)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IResultsParserContext>
    nameWithType: Extensions.AsEnumerable<IResultsParserContext>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.IResultsParserContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IResultsParserContext)
    nameWithType: Extensions.AsEnumerable(Of IResultsParserContext)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.IResultsParserContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Contexts.IResultsParserContext.Handler*
  commentId: Overload:VDS.RDF.Parsing.Contexts.IResultsParserContext.Handler
  name: Handler
  nameWithType: IResultsParserContext.Handler
  fullName: VDS.RDF.Parsing.Contexts.IResultsParserContext.Handler
- uid: VDS.RDF.ISparqlResultsHandler
  commentId: T:VDS.RDF.ISparqlResultsHandler
  parent: VDS.RDF
  name: ISparqlResultsHandler
  nameWithType: ISparqlResultsHandler
  fullName: VDS.RDF.ISparqlResultsHandler
shouldSkipMarkup: true
