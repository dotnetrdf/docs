### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.StringParser
  commentId: T:VDS.RDF.Parsing.StringParser
  id: StringParser
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.StringParser.GetDatasetParser(System.String)
  - VDS.RDF.Parsing.StringParser.GetParser(System.String)
  - VDS.RDF.Parsing.StringParser.GetResultSetParser(System.String)
  - VDS.RDF.Parsing.StringParser.Parse(VDS.RDF.IGraph,System.String)
  - VDS.RDF.Parsing.StringParser.Parse(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.Parsing.StringParser.ParseDataset(VDS.RDF.ITripleStore,System.String)
  - VDS.RDF.Parsing.StringParser.ParseDataset(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  - VDS.RDF.Parsing.StringParser.ParseResultSet(VDS.RDF.Query.SparqlResultSet,System.String)
  - VDS.RDF.Parsing.StringParser.ParseResultSet(VDS.RDF.Query.SparqlResultSet,System.String,VDS.RDF.ISparqlResultsReader)
  langs:
  - csharp
  - vb
  name: StringParser
  nameWithType: StringParser
  fullName: VDS.RDF.Parsing.StringParser
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/StringParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: StringParser
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/StringParser.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nStatic Helper Class which allows raw strings of RDF/SPARQL Results to be parsed directly.\n"
  remarks: "\nThe API structure for dotNetRDF means that our <xref href=\"VDS.RDF.IRdfReader\" data-throw-if-not-resolved=\"false\"></xref> classes which are our Parsers only have to support parsing from a file or a stream.  For most applications this is fine but there may be occassions when you wish to parse a small fragment of RDF and you don&apos;t want to have to put it into a file before you can parse it.\n"
  example: []
  syntax:
    content: public static class StringParser
    content.vb: Public Module StringParser
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Parsing.StringParser.Parse(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.Parsing.StringParser.Parse(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  id: Parse(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  parent: VDS.RDF.Parsing.StringParser
  langs:
  - csharp
  - vb
  name: Parse(IGraph, String, IRdfReader)
  nameWithType: StringParser.Parse(IGraph, String, IRdfReader)
  fullName: VDS.RDF.Parsing.StringParser.Parse(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/StringParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Parse
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/StringParser.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses a raw RDF String using the given <xref href=\"VDS.RDF.IRdfReader\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: Use this when you have a raw RDF string and you know the syntax the RDF is in.
  example: []
  syntax:
    content: public static void Parse(IGraph g, string data, IRdfReader reader)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: data
      type: System.String
      description: Raw RDF String.
    - id: reader
      type: VDS.RDF.IRdfReader
      description: Parser to use to read the data.
    content.vb: Public Shared Sub Parse(g As IGraph, data As String, reader As IRdfReader)
  overload: VDS.RDF.Parsing.StringParser.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.StringParser.Parse(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.Parsing.StringParser.Parse(VDS.RDF.IGraph,System.String)
  id: Parse(VDS.RDF.IGraph,System.String)
  parent: VDS.RDF.Parsing.StringParser
  langs:
  - csharp
  - vb
  name: Parse(IGraph, String)
  nameWithType: StringParser.Parse(IGraph, String)
  fullName: VDS.RDF.Parsing.StringParser.Parse(VDS.RDF.IGraph, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/StringParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Parse
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/StringParser.cs
    startLine: 99
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses a raw RDF String (attempts to auto-detect the format).\n"
  remarks: "\n<p>\nAuto-detection is based on testing the string to see if it contains certain keyword constructs which might indicate a particular syntax has been used.  This detection may not always be accurate and it may choose a parser which is less expressive than the actual syntax e.g. <xref href=\"VDS.RDF.Parsing.TurtleParser\" data-throw-if-not-resolved=\"false\"></xref> instead of <xref href=\"VDS.RDF.Parsing.Notation3Parser\" data-throw-if-not-resolved=\"false\"></xref> as it tends to guess downwards.  \n</p>\n<p>\nFor example if you parsed a Notation 3 string that contained Graph Literals but didn&apos;t use any of the Notation 3 specific directives like @keywords it would be assumed to be Turtle but then would fail to parse\n</p>\n<p>\nThe auto-detection rules used are as follows:\n</p>\n<ol>\n<li>If it contains &lt;?xml and &lt;rdf:RDF then it&apos;s most likely RDF/XML</li>\n<li>If it contains &lt;html then it&apos;s most likely HTML with possibly RDFa embedded</li>\n<li>\nIf it contains @prefix or @base then its Turtle/Notation 3\n<ol>\n<li>If it contains @keywords, @forall or @forsome then it&apos;s Notation 3</li>\n<li>Otherwise it&apos;s Turtle</li>\n</ol>\n</li>\n<li>If it contains all of a set of terms and symbols that occur in RDF/JSON then it&apos;s most likely RDF/JSON.  These terms are &quot;value&quot;,&quot;type&quot;,{,},[ and ]</li>\n<li>Otherwise try it as NTriples, NTriples has no real distinctive syntax so hard to test if it&apos;s NTriples other than by parsing it</li>\n</ol>\n"
  example: []
  syntax:
    content: public static void Parse(IGraph g, string data)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: data
      type: System.String
      description: Raw RDF String.
    content.vb: Public Shared Sub Parse(g As IGraph, data As String)
  overload: VDS.RDF.Parsing.StringParser.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.StringParser.ParseDataset(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.Parsing.StringParser.ParseDataset(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  id: ParseDataset(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  parent: VDS.RDF.Parsing.StringParser
  langs:
  - csharp
  - vb
  name: ParseDataset(ITripleStore, String, IStoreReader)
  nameWithType: StringParser.ParseDataset(ITripleStore, String, IStoreReader)
  fullName: VDS.RDF.Parsing.StringParser.ParseDataset(VDS.RDF.ITripleStore, System.String, VDS.RDF.IStoreReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/StringParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ParseDataset
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/StringParser.cs
    startLine: 168
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses a raw RDF Dataset String using the given Parser.\n"
  example: []
  syntax:
    content: public static void ParseDataset(ITripleStore store, string data, IStoreReader reader)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Store to load into.
    - id: data
      type: System.String
      description: Raw RDF Dataset String.
    - id: reader
      type: VDS.RDF.IStoreReader
      description: Parser to use.
    content.vb: Public Shared Sub ParseDataset(store As ITripleStore, data As String, reader As IStoreReader)
  overload: VDS.RDF.Parsing.StringParser.ParseDataset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.StringParser.ParseDataset(VDS.RDF.ITripleStore,System.String)
  commentId: M:VDS.RDF.Parsing.StringParser.ParseDataset(VDS.RDF.ITripleStore,System.String)
  id: ParseDataset(VDS.RDF.ITripleStore,System.String)
  parent: VDS.RDF.Parsing.StringParser
  langs:
  - csharp
  - vb
  name: ParseDataset(ITripleStore, String)
  nameWithType: StringParser.ParseDataset(ITripleStore, String)
  fullName: VDS.RDF.Parsing.StringParser.ParseDataset(VDS.RDF.ITripleStore, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/StringParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ParseDataset
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/StringParser.cs
    startLine: 201
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses a raw RDF Dataset String (attempts to auto-detect the format).\n"
  remarks: "\n<p>\nAuto-detection is based on testing the string to see if it contains certain keyword constructs which might indicate a particular syntax has been used.  This detection may not always be accurate.\n</p>\n"
  example: []
  syntax:
    content: public static void ParseDataset(ITripleStore store, string data)
    parameters:
    - id: store
      type: VDS.RDF.ITripleStore
      description: Store to load into.
    - id: data
      type: System.String
      description: Raw RDF Dataset String.
    content.vb: Public Shared Sub ParseDataset(store As ITripleStore, data As String)
  overload: VDS.RDF.Parsing.StringParser.ParseDataset*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.StringParser.ParseResultSet(VDS.RDF.Query.SparqlResultSet,System.String)
  commentId: M:VDS.RDF.Parsing.StringParser.ParseResultSet(VDS.RDF.Query.SparqlResultSet,System.String)
  id: ParseResultSet(VDS.RDF.Query.SparqlResultSet,System.String)
  parent: VDS.RDF.Parsing.StringParser
  langs:
  - csharp
  - vb
  name: ParseResultSet(SparqlResultSet, String)
  nameWithType: StringParser.ParseResultSet(SparqlResultSet, String)
  fullName: VDS.RDF.Parsing.StringParser.ParseResultSet(VDS.RDF.Query.SparqlResultSet, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/StringParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ParseResultSet
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/StringParser.cs
    startLine: 247
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses a raw SPARQL Results String (attempts to auto-detect the format).\n"
  remarks: "\n<p>\nAuto-detection is based on testing the string to see if it contains certain keyword constructs which might indicate a particular syntax has been used.  This detection may not always be accurate.\n</p>\n"
  example: []
  syntax:
    content: public static void ParseResultSet(SparqlResultSet results, string data)
    parameters:
    - id: results
      type: VDS.RDF.Query.SparqlResultSet
      description: SPARQL Result Set to fill.
    - id: data
      type: System.String
      description: Raw SPARQL Results String.
    content.vb: Public Shared Sub ParseResultSet(results As SparqlResultSet, data As String)
  overload: VDS.RDF.Parsing.StringParser.ParseResultSet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.StringParser.ParseResultSet(VDS.RDF.Query.SparqlResultSet,System.String,VDS.RDF.ISparqlResultsReader)
  commentId: M:VDS.RDF.Parsing.StringParser.ParseResultSet(VDS.RDF.Query.SparqlResultSet,System.String,VDS.RDF.ISparqlResultsReader)
  id: ParseResultSet(VDS.RDF.Query.SparqlResultSet,System.String,VDS.RDF.ISparqlResultsReader)
  parent: VDS.RDF.Parsing.StringParser
  langs:
  - csharp
  - vb
  name: ParseResultSet(SparqlResultSet, String, ISparqlResultsReader)
  nameWithType: StringParser.ParseResultSet(SparqlResultSet, String, ISparqlResultsReader)
  fullName: VDS.RDF.Parsing.StringParser.ParseResultSet(VDS.RDF.Query.SparqlResultSet, System.String, VDS.RDF.ISparqlResultsReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/StringParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ParseResultSet
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/StringParser.cs
    startLine: 291
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nParses a raw SPARQL Results String using the given Parser.\n"
  example: []
  syntax:
    content: public static void ParseResultSet(SparqlResultSet results, string data, ISparqlResultsReader reader)
    parameters:
    - id: results
      type: VDS.RDF.Query.SparqlResultSet
      description: SPARQL Result Set to fill.
    - id: data
      type: System.String
      description: Raw SPARQL Results String.
    - id: reader
      type: VDS.RDF.ISparqlResultsReader
      description: Parser to use.
    content.vb: Public Shared Sub ParseResultSet(results As SparqlResultSet, data As String, reader As ISparqlResultsReader)
  overload: VDS.RDF.Parsing.StringParser.ParseResultSet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.StringParser.GetParser(System.String)
  commentId: M:VDS.RDF.Parsing.StringParser.GetParser(System.String)
  id: GetParser(System.String)
  parent: VDS.RDF.Parsing.StringParser
  langs:
  - csharp
  - vb
  name: GetParser(String)
  nameWithType: StringParser.GetParser(String)
  fullName: VDS.RDF.Parsing.StringParser.GetParser(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/StringParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetParser
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/StringParser.cs
    startLine: 324
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nUses the rules described in the remarks for the <xref href=\"VDS.RDF.Parsing.StringParser.Parse(VDS.RDF.IGraph%2cSystem.String)\" data-throw-if-not-resolved=\"false\"></xref> to return the most likely Parser.\n"
  example: []
  syntax:
    content: public static IRdfReader GetParser(string data)
    parameters:
    - id: data
      type: System.String
      description: Raw RDF String.
    return:
      type: VDS.RDF.IRdfReader
    content.vb: Public Shared Function GetParser(data As String) As IRdfReader
  overload: VDS.RDF.Parsing.StringParser.GetParser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.StringParser.GetDatasetParser(System.String)
  commentId: M:VDS.RDF.Parsing.StringParser.GetDatasetParser(System.String)
  id: GetDatasetParser(System.String)
  parent: VDS.RDF.Parsing.StringParser
  langs:
  - csharp
  - vb
  name: GetDatasetParser(String)
  nameWithType: StringParser.GetDatasetParser(String)
  fullName: VDS.RDF.Parsing.StringParser.GetDatasetParser(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/StringParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetDatasetParser
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/StringParser.cs
    startLine: 375
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nUses the format detection rules to determine the most likely RDF Dataset Parser.\n"
  example: []
  syntax:
    content: public static IStoreReader GetDatasetParser(string data)
    parameters:
    - id: data
      type: System.String
      description: Raw RDF Dataset String.
    return:
      type: VDS.RDF.IStoreReader
      description: ''
    content.vb: Public Shared Function GetDatasetParser(data As String) As IStoreReader
  overload: VDS.RDF.Parsing.StringParser.GetDatasetParser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.StringParser.GetResultSetParser(System.String)
  commentId: M:VDS.RDF.Parsing.StringParser.GetResultSetParser(System.String)
  id: GetResultSetParser(System.String)
  parent: VDS.RDF.Parsing.StringParser
  langs:
  - csharp
  - vb
  name: GetResultSetParser(String)
  nameWithType: StringParser.GetResultSetParser(String)
  fullName: VDS.RDF.Parsing.StringParser.GetResultSetParser(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/StringParser.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetResultSetParser
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/StringParser.cs
    startLine: 402
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nUses the format detection rules to return the most likely SPARQL Results parser.\n"
  example: []
  syntax:
    content: public static ISparqlResultsReader GetResultSetParser(string data)
    parameters:
    - id: data
      type: System.String
      description: Raw SPARQL Results String.
    return:
      type: VDS.RDF.ISparqlResultsReader
      description: ''
    content.vb: Public Shared Function GetResultSetParser(data As String) As ISparqlResultsReader
  overload: VDS.RDF.Parsing.StringParser.GetResultSetParser*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.IRdfReader
  commentId: T:VDS.RDF.IRdfReader
  parent: VDS.RDF
  name: IRdfReader
  nameWithType: IRdfReader
  fullName: VDS.RDF.IRdfReader
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.StringParser.Parse*
  commentId: Overload:VDS.RDF.Parsing.StringParser.Parse
  name: Parse
  nameWithType: StringParser.Parse
  fullName: VDS.RDF.Parsing.StringParser.Parse
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Parsing.TurtleParser
  commentId: T:VDS.RDF.Parsing.TurtleParser
  name: TurtleParser
  nameWithType: TurtleParser
  fullName: VDS.RDF.Parsing.TurtleParser
- uid: VDS.RDF.Parsing.Notation3Parser
  commentId: T:VDS.RDF.Parsing.Notation3Parser
  name: Notation3Parser
  nameWithType: Notation3Parser
  fullName: VDS.RDF.Parsing.Notation3Parser
- uid: VDS.RDF.Parsing.StringParser.ParseDataset*
  commentId: Overload:VDS.RDF.Parsing.StringParser.ParseDataset
  name: ParseDataset
  nameWithType: StringParser.ParseDataset
  fullName: VDS.RDF.Parsing.StringParser.ParseDataset
- uid: VDS.RDF.ITripleStore
  commentId: T:VDS.RDF.ITripleStore
  parent: VDS.RDF
  name: ITripleStore
  nameWithType: ITripleStore
  fullName: VDS.RDF.ITripleStore
- uid: VDS.RDF.IStoreReader
  commentId: T:VDS.RDF.IStoreReader
  parent: VDS.RDF
  name: IStoreReader
  nameWithType: IStoreReader
  fullName: VDS.RDF.IStoreReader
- uid: VDS.RDF.Parsing.StringParser.ParseResultSet*
  commentId: Overload:VDS.RDF.Parsing.StringParser.ParseResultSet
  name: ParseResultSet
  nameWithType: StringParser.ParseResultSet
  fullName: VDS.RDF.Parsing.StringParser.ParseResultSet
- uid: VDS.RDF.Query.SparqlResultSet
  commentId: T:VDS.RDF.Query.SparqlResultSet
  parent: VDS.RDF.Query
  name: SparqlResultSet
  nameWithType: SparqlResultSet
  fullName: VDS.RDF.Query.SparqlResultSet
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.ISparqlResultsReader
  commentId: T:VDS.RDF.ISparqlResultsReader
  parent: VDS.RDF
  name: ISparqlResultsReader
  nameWithType: ISparqlResultsReader
  fullName: VDS.RDF.ISparqlResultsReader
- uid: VDS.RDF.Parsing.StringParser.Parse(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.Parsing.StringParser.Parse(VDS.RDF.IGraph,System.String)
  isExternal: true
- uid: VDS.RDF.Parsing.StringParser.GetParser*
  commentId: Overload:VDS.RDF.Parsing.StringParser.GetParser
  name: GetParser
  nameWithType: StringParser.GetParser
  fullName: VDS.RDF.Parsing.StringParser.GetParser
- uid: VDS.RDF.Parsing.StringParser.GetDatasetParser*
  commentId: Overload:VDS.RDF.Parsing.StringParser.GetDatasetParser
  name: GetDatasetParser
  nameWithType: StringParser.GetDatasetParser
  fullName: VDS.RDF.Parsing.StringParser.GetDatasetParser
- uid: VDS.RDF.Parsing.StringParser.GetResultSetParser*
  commentId: Overload:VDS.RDF.Parsing.StringParser.GetResultSetParser
  name: GetResultSetParser
  nameWithType: StringParser.GetResultSetParser
  fullName: VDS.RDF.Parsing.StringParser.GetResultSetParser
