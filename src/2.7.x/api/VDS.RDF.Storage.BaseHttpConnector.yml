### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Storage.BaseHttpConnector
  commentId: T:VDS.RDF.Storage.BaseHttpConnector
  id: BaseHttpConnector
  parent: VDS.RDF.Storage
  children:
  - VDS.RDF.Storage.BaseHttpConnector.#ctor
  - VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions(System.Net.HttpWebRequest)
  - VDS.RDF.Storage.BaseHttpConnector.ClearProxy
  - VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials
  - VDS.RDF.Storage.BaseHttpConnector.Password
  - VDS.RDF.Storage.BaseHttpConnector.Proxy
  - VDS.RDF.Storage.BaseHttpConnector.ProxyCredentials
  - VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig(VDS.RDF.INode,VDS.RDF.Configuration.ConfigurationSerializationContext)
  - VDS.RDF.Storage.BaseHttpConnector.SetCredentials(System.String,System.String)
  - VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.String)
  - VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.Uri)
  - VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String)
  - VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String,System.String)
  - VDS.RDF.Storage.BaseHttpConnector.Timeout
  - VDS.RDF.Storage.BaseHttpConnector.Username
  langs:
  - csharp
  - vb
  name: BaseHttpConnector
  nameWithType: BaseHttpConnector
  fullName: VDS.RDF.Storage.BaseHttpConnector
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseHttpConnector
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nAbstract Base Class for HTTP based Storage API implementations.\n"
  example: []
  syntax:
    content: public abstract class BaseHttpConnector
    content.vb: Public MustInherit Class BaseHttpConnector
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Storage.BaseAsyncHttpConnector
  - VDS.RDF.Storage.Management.BaseStardogServer
  - VDS.RDF.Storage.Management.SesameServer
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Storage.BaseHttpConnector.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.Storage.BaseHttpConnector.#ctor
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.#ctor
  id: '#ctor'
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: BaseHttpConnector()
  nameWithType: BaseHttpConnector.BaseHttpConnector()
  fullName: VDS.RDF.Storage.BaseHttpConnector.BaseHttpConnector()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 42
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nCreates a new connector.\n"
  example: []
  syntax:
    content: protected BaseHttpConnector()
    content.vb: Protected Sub New
  overload: VDS.RDF.Storage.BaseHttpConnector.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.String)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.String)
  id: SetProxy(System.String)
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: SetProxy(String)
  nameWithType: BaseHttpConnector.SetProxy(String)
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetProxy
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nSets a Proxy Server to be used.\n"
  example: []
  syntax:
    content: public void SetProxy(string address)
    parameters:
    - id: address
      type: System.String
      description: Proxy Address.
    content.vb: Public Sub SetProxy(address As String)
  overload: VDS.RDF.Storage.BaseHttpConnector.SetProxy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.Uri)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.Uri)
  id: SetProxy(System.Uri)
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: SetProxy(Uri)
  nameWithType: BaseHttpConnector.SetProxy(Uri)
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetProxy
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 65
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nSets a Proxy Server to be used.\n"
  example: []
  syntax:
    content: public void SetProxy(Uri address)
    parameters:
    - id: address
      type: System.Uri
      description: Proxy Address.
    content.vb: Public Sub SetProxy(address As Uri)
  overload: VDS.RDF.Storage.BaseHttpConnector.SetProxy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.BaseHttpConnector.Proxy
  commentId: P:VDS.RDF.Storage.BaseHttpConnector.Proxy
  id: Proxy
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: Proxy
  nameWithType: BaseHttpConnector.Proxy
  fullName: VDS.RDF.Storage.BaseHttpConnector.Proxy
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Proxy
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 73
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nGets/Sets a Proxy Server to be used.\n"
  example: []
  syntax:
    content: public IWebProxy Proxy { get; set; }
    parameters: []
    return:
      type: System.Net.IWebProxy
    content.vb: Public Property Proxy As IWebProxy
  overload: VDS.RDF.Storage.BaseHttpConnector.Proxy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.BaseHttpConnector.ClearProxy
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.ClearProxy
  id: ClearProxy
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: ClearProxy()
  nameWithType: BaseHttpConnector.ClearProxy()
  fullName: VDS.RDF.Storage.BaseHttpConnector.ClearProxy()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ClearProxy
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nClears any in-use credentials so subsequent requests will not use a proxy server.\n"
  example: []
  syntax:
    content: public void ClearProxy()
    content.vb: Public Sub ClearProxy
  overload: VDS.RDF.Storage.BaseHttpConnector.ClearProxy*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String)
  id: SetProxyCredentials(System.String,System.String)
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: SetProxyCredentials(String, String)
  nameWithType: BaseHttpConnector.SetProxyCredentials(String, String)
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetProxyCredentials
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 88
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nSets Credentials to be used for Proxy Server.\n"
  example: []
  syntax:
    content: public void SetProxyCredentials(string username, string password)
    parameters:
    - id: username
      type: System.String
      description: Username.
    - id: password
      type: System.String
      description: Password.
    content.vb: Public Sub SetProxyCredentials(username As String, password As String)
  overload: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String,System.String)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String,System.String)
  id: SetProxyCredentials(System.String,System.String,System.String)
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: SetProxyCredentials(String, String, String)
  nameWithType: BaseHttpConnector.SetProxyCredentials(String, String, String)
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetProxyCredentials
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 106
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nSets Credentials to be used for Proxy Server.\n"
  example: []
  syntax:
    content: public void SetProxyCredentials(string username, string password, string domain)
    parameters:
    - id: username
      type: System.String
      description: Username.
    - id: password
      type: System.String
      description: Password.
    - id: domain
      type: System.String
      description: Domain.
    content.vb: Public Sub SetProxyCredentials(username As String, password As String, domain As String)
  overload: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.BaseHttpConnector.ProxyCredentials
  commentId: P:VDS.RDF.Storage.BaseHttpConnector.ProxyCredentials
  id: ProxyCredentials
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: ProxyCredentials
  nameWithType: BaseHttpConnector.ProxyCredentials
  fullName: VDS.RDF.Storage.BaseHttpConnector.ProxyCredentials
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ProxyCredentials
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 121
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nGets/Sets Credentials to be used for Proxy Server.\n"
  example: []
  syntax:
    content: public ICredentials ProxyCredentials { get; set; }
    parameters: []
    return:
      type: System.Net.ICredentials
    content.vb: Public Property ProxyCredentials As ICredentials
  overload: VDS.RDF.Storage.BaseHttpConnector.ProxyCredentials*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials
  id: ClearProxyCredentials
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: ClearProxyCredentials()
  nameWithType: BaseHttpConnector.ClearProxyCredentials()
  fullName: VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ClearProxyCredentials
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 140
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nClears the in-use proxy credentials so subsequent requests still use the proxy server but without credentials.\n"
  example: []
  syntax:
    content: public void ClearProxyCredentials()
    content.vb: Public Sub ClearProxyCredentials
  overload: VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.BaseHttpConnector.Timeout
  commentId: P:VDS.RDF.Storage.BaseHttpConnector.Timeout
  id: Timeout
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: Timeout
  nameWithType: BaseHttpConnector.Timeout
  fullName: VDS.RDF.Storage.BaseHttpConnector.Timeout
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Timeout
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 165
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nGets/Sets the HTTP Timeouts used specified in milliseconds.\n"
  remarks: "\n<p>\nDefaults to 30 seconds (i.e. the default value is 30,000).\n</p>\n<p>\nIt is important to understand that this timeout only applies to the HTTP request portions of any operation performed and that the timeout may apply more than once if a POST operation is used since the timeout applies separately to obtaining the request stream to POST the request and obtaining the response stream.  Also the timeout does not in any way apply to subsequent work that may be carried out before the operation can return so if you need a hard timeout on an operation you should manage that yourself.\n</p>\n<p>\nWhen set to a zero/negative value then the standard .Net timeout of 100 seconds will apply, use <xref href=\"System.Int32.MaxValue\" data-throw-if-not-resolved=\"false\"></xref> if you want the maximum possible timeout i.e. if you expect to launch extremely long running operations.\n</p>\n<p>\nNot supported under Silverlight, Windows Phone and Portable Class Library builds.\n</p>\n"
  example: []
  syntax:
    content: public int Timeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Timeout As Integer
  overload: VDS.RDF.Storage.BaseHttpConnector.Timeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.BaseHttpConnector.Username
  commentId: P:VDS.RDF.Storage.BaseHttpConnector.Username
  id: Username
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: Username
  nameWithType: BaseHttpConnector.Username
  fullName: VDS.RDF.Storage.BaseHttpConnector.Username
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Username
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 170
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nPassword for accessing the Store.\n"
  example: []
  syntax:
    content: protected string Username { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property Username As String
  overload: VDS.RDF.Storage.BaseHttpConnector.Username*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: VDS.RDF.Storage.BaseHttpConnector.Password
  commentId: P:VDS.RDF.Storage.BaseHttpConnector.Password
  id: Password
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: BaseHttpConnector.Password
  fullName: VDS.RDF.Storage.BaseHttpConnector.Password
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Password
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 175
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nPassword for accessing the Store.\n"
  example: []
  syntax:
    content: protected string Password { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property Password As String
  overload: VDS.RDF.Storage.BaseHttpConnector.Password*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions(System.Net.HttpWebRequest)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions(System.Net.HttpWebRequest)
  id: ApplyRequestOptions(System.Net.HttpWebRequest)
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: ApplyRequestOptions(HttpWebRequest)
  nameWithType: BaseHttpConnector.ApplyRequestOptions(HttpWebRequest)
  fullName: VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions(System.Net.HttpWebRequest)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ApplyRequestOptions
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 182
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nHelper method which applies standard request options to the request, these currently include proxy settings and HTTP timeout.\n"
  example: []
  syntax:
    content: protected HttpWebRequest ApplyRequestOptions(HttpWebRequest request)
    parameters:
    - id: request
      type: System.Net.HttpWebRequest
      description: HTTP Web Request.
    return:
      type: System.Net.HttpWebRequest
      description: HTTP Web Request with standard options applied.
    content.vb: Protected Function ApplyRequestOptions(request As HttpWebRequest) As HttpWebRequest
  overload: VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig(VDS.RDF.INode,VDS.RDF.Configuration.ConfigurationSerializationContext)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig(VDS.RDF.INode,VDS.RDF.Configuration.ConfigurationSerializationContext)
  id: SerializeStandardConfig(VDS.RDF.INode,VDS.RDF.Configuration.ConfigurationSerializationContext)
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: SerializeStandardConfig(INode, ConfigurationSerializationContext)
  nameWithType: BaseHttpConnector.SerializeStandardConfig(INode, ConfigurationSerializationContext)
  fullName: VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig(VDS.RDF.INode, VDS.RDF.Configuration.ConfigurationSerializationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SerializeStandardConfig
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 217
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nHelper method which adds standard configuration information (proxy and timeout settings) to serialized configuration.\n"
  example: []
  syntax:
    content: protected void SerializeStandardConfig(INode objNode, ConfigurationSerializationContext context)
    parameters:
    - id: objNode
      type: VDS.RDF.INode
      description: Object Node representing the <xref href="VDS.RDF.Storage.IStorageProvider" data-throw-if-not-resolved="false"></xref> whose configuration is being serialized.
    - id: context
      type: VDS.RDF.Configuration.ConfigurationSerializationContext
      description: Serialization Context.
    content.vb: Protected Sub SerializeStandardConfig(objNode As INode, context As ConfigurationSerializationContext)
  overload: VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Storage.BaseHttpConnector.SetCredentials(System.String,System.String)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.SetCredentials(System.String,System.String)
  id: SetCredentials(System.String,System.String)
  parent: VDS.RDF.Storage.BaseHttpConnector
  langs:
  - csharp
  - vb
  name: SetCredentials(String, String)
  nameWithType: BaseHttpConnector.SetCredentials(String, String)
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetCredentials(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetCredentials
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/BaseHttpConnector.cs
    startLine: 255
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  syntax:
    content: public void SetCredentials(string username, string password)
    parameters:
    - id: username
      type: System.String
    - id: password
      type: System.String
    content.vb: Public Sub SetCredentials(username As String, password As String)
  overload: VDS.RDF.Storage.BaseHttpConnector.SetCredentials*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Storage
  commentId: N:VDS.RDF.Storage
  name: VDS.RDF.Storage
  nameWithType: VDS.RDF.Storage
  fullName: VDS.RDF.Storage
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BaseHttpConnector.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseHttpConnector>()
  nameWithType: Extensions.AsEnumerable<BaseHttpConnector>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.BaseHttpConnector>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseHttpConnector)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.BaseHttpConnector)()
  name.vb: AsEnumerable(Of BaseHttpConnector)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseHttpConnector>
    nameWithType: Extensions.AsEnumerable<BaseHttpConnector>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.BaseHttpConnector>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseHttpConnector)
    nameWithType: Extensions.AsEnumerable(Of BaseHttpConnector)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.BaseHttpConnector)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Storage.BaseHttpConnector.#ctor*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.#ctor
  name: BaseHttpConnector
  nameWithType: BaseHttpConnector.BaseHttpConnector
  fullName: VDS.RDF.Storage.BaseHttpConnector.BaseHttpConnector
- uid: VDS.RDF.Storage.BaseHttpConnector.SetProxy*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.SetProxy
  name: SetProxy
  nameWithType: BaseHttpConnector.SetProxy
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxy
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Storage.BaseHttpConnector.Proxy*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.Proxy
  name: Proxy
  nameWithType: BaseHttpConnector.Proxy
  fullName: VDS.RDF.Storage.BaseHttpConnector.Proxy
- uid: System.Net.IWebProxy
  commentId: T:System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: VDS.RDF.Storage.BaseHttpConnector.ClearProxy*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.ClearProxy
  name: ClearProxy
  nameWithType: BaseHttpConnector.ClearProxy
  fullName: VDS.RDF.Storage.BaseHttpConnector.ClearProxy
- uid: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials
  name: SetProxyCredentials
  nameWithType: BaseHttpConnector.SetProxyCredentials
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials
- uid: VDS.RDF.Storage.BaseHttpConnector.ProxyCredentials*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.ProxyCredentials
  name: ProxyCredentials
  nameWithType: BaseHttpConnector.ProxyCredentials
  fullName: VDS.RDF.Storage.BaseHttpConnector.ProxyCredentials
- uid: System.Net.ICredentials
  commentId: T:System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials
  name: ClearProxyCredentials
  nameWithType: BaseHttpConnector.ClearProxyCredentials
  fullName: VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials
- uid: System.Int32.MaxValue
  commentId: F:System.Int32.MaxValue
  isExternal: true
- uid: VDS.RDF.Storage.BaseHttpConnector.Timeout*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.Timeout
  name: Timeout
  nameWithType: BaseHttpConnector.Timeout
  fullName: VDS.RDF.Storage.BaseHttpConnector.Timeout
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Storage.BaseHttpConnector.Username*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.Username
  name: Username
  nameWithType: BaseHttpConnector.Username
  fullName: VDS.RDF.Storage.BaseHttpConnector.Username
- uid: VDS.RDF.Storage.BaseHttpConnector.Password*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.Password
  name: Password
  nameWithType: BaseHttpConnector.Password
  fullName: VDS.RDF.Storage.BaseHttpConnector.Password
- uid: VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions
  name: ApplyRequestOptions
  nameWithType: BaseHttpConnector.ApplyRequestOptions
  fullName: VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions
- uid: System.Net.HttpWebRequest
  commentId: T:System.Net.HttpWebRequest
  parent: System.Net
  isExternal: true
  name: HttpWebRequest
  nameWithType: HttpWebRequest
  fullName: System.Net.HttpWebRequest
- uid: VDS.RDF.Storage.IStorageProvider
  commentId: T:VDS.RDF.Storage.IStorageProvider
  parent: VDS.RDF.Storage
  name: IStorageProvider
  nameWithType: IStorageProvider
  fullName: VDS.RDF.Storage.IStorageProvider
- uid: VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig
  name: SerializeStandardConfig
  nameWithType: BaseHttpConnector.SerializeStandardConfig
  fullName: VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Configuration.ConfigurationSerializationContext
  commentId: T:VDS.RDF.Configuration.ConfigurationSerializationContext
  parent: VDS.RDF.Configuration
  name: ConfigurationSerializationContext
  nameWithType: ConfigurationSerializationContext
  fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
- uid: VDS.RDF.Configuration
  commentId: N:VDS.RDF.Configuration
  name: VDS.RDF.Configuration
  nameWithType: VDS.RDF.Configuration
  fullName: VDS.RDF.Configuration
- uid: VDS.RDF.Storage.BaseHttpConnector.SetCredentials*
  commentId: Overload:VDS.RDF.Storage.BaseHttpConnector.SetCredentials
  name: SetCredentials
  nameWithType: BaseHttpConnector.SetCredentials
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetCredentials
