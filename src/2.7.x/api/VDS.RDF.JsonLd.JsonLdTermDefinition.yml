### YamlMime:ManagedReference
items:
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition
  commentId: T:VDS.RDF.JsonLd.JsonLdTermDefinition
  id: JsonLdTermDefinition
  parent: VDS.RDF.JsonLd
  children:
  - VDS.RDF.JsonLd.JsonLdTermDefinition.#ctor
  - VDS.RDF.JsonLd.JsonLdTermDefinition.BaseUrl
  - VDS.RDF.JsonLd.JsonLdTermDefinition.Clone
  - VDS.RDF.JsonLd.JsonLdTermDefinition.ContainerMapping
  - VDS.RDF.JsonLd.JsonLdTermDefinition.DirectionMapping
  - VDS.RDF.JsonLd.JsonLdTermDefinition.EquivalentTo(VDS.RDF.JsonLd.JsonLdTermDefinition)
  - VDS.RDF.JsonLd.JsonLdTermDefinition.HasLanguageMapping
  - VDS.RDF.JsonLd.JsonLdTermDefinition.IndexMapping
  - VDS.RDF.JsonLd.JsonLdTermDefinition.IriMapping
  - VDS.RDF.JsonLd.JsonLdTermDefinition.LanguageMapping
  - VDS.RDF.JsonLd.JsonLdTermDefinition.LocalContext
  - VDS.RDF.JsonLd.JsonLdTermDefinition.Nest
  - VDS.RDF.JsonLd.JsonLdTermDefinition.Prefix
  - VDS.RDF.JsonLd.JsonLdTermDefinition.Protected
  - VDS.RDF.JsonLd.JsonLdTermDefinition.Reverse
  - VDS.RDF.JsonLd.JsonLdTermDefinition.TypeMapping
  langs:
  - csharp
  - vb
  name: JsonLdTermDefinition
  nameWithType: JsonLdTermDefinition
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: JsonLdTermDefinition
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nRepresents a term definition in a context.\n"
  example: []
  syntax:
    content: public class JsonLdTermDefinition
    content.vb: Public Class JsonLdTermDefinition
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.JsonLd.JsonLdTermDefinition.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.#ctor
  commentId: M:VDS.RDF.JsonLd.JsonLdTermDefinition.#ctor
  id: '#ctor'
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: JsonLdTermDefinition()
  nameWithType: JsonLdTermDefinition.JsonLdTermDefinition()
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.JsonLdTermDefinition()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nCreate a new term definition.\n"
  example: []
  syntax:
    content: public JsonLdTermDefinition()
    content.vb: Public Sub New
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.IriMapping
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.IriMapping
  id: IriMapping
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: IriMapping
  nameWithType: JsonLdTermDefinition.IriMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.IriMapping
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IriMapping
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the IRI mapping for the term.\n"
  example: []
  syntax:
    content: public string IriMapping { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IriMapping As String
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.IriMapping*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.Prefix
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.Prefix
  id: Prefix
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: Prefix
  nameWithType: JsonLdTermDefinition.Prefix
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.Prefix
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Prefix
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the prefix flag for the term.\n"
  example: []
  syntax:
    content: public bool Prefix { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Prefix As Boolean
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.Prefix*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.Protected
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.Protected
  id: Protected
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: Protected
  nameWithType: JsonLdTermDefinition.Protected
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.Protected
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Protected
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the protected flag for the term.\n"
  example: []
  syntax:
    content: public bool Protected { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Protected As Boolean
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.Protected*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.BaseUrl
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.BaseUrl
  id: BaseUrl
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: BaseUrl
  nameWithType: JsonLdTermDefinition.BaseUrl
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.BaseUrl
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseUrl
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 64
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the base URL for the term.\n"
  example: []
  syntax:
    content: public Uri BaseUrl { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property BaseUrl As Uri
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.BaseUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.Reverse
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.Reverse
  id: Reverse
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: Reverse
  nameWithType: JsonLdTermDefinition.Reverse
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.Reverse
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Reverse
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nIndicates if this term represents a reverse property.\n"
  example: []
  syntax:
    content: public bool Reverse { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Reverse As Boolean
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.Reverse*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.ContainerMapping
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.ContainerMapping
  id: ContainerMapping
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: ContainerMapping
  nameWithType: JsonLdTermDefinition.ContainerMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.ContainerMapping
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ContainerMapping
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 74
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the container mapping for this term definition.\n"
  example: []
  syntax:
    content: public ISet<JsonLdContainer> ContainerMapping { get; }
    parameters: []
    return:
      type: System.Collections.Generic.ISet{VDS.RDF.JsonLd.Syntax.JsonLdContainer}
    content.vb: Public ReadOnly Property ContainerMapping As ISet(Of JsonLdContainer)
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.ContainerMapping*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.DirectionMapping
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.DirectionMapping
  id: DirectionMapping
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: DirectionMapping
  nameWithType: JsonLdTermDefinition.DirectionMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.DirectionMapping
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DirectionMapping
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 79
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the text direction mapping for this term definition.\n"
  example: []
  syntax:
    content: public LanguageDirection? DirectionMapping { get; set; }
    parameters: []
    return:
      type: System.Nullable{VDS.RDF.JsonLd.Syntax.LanguageDirection}
    content.vb: Public Property DirectionMapping As LanguageDirection?
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.DirectionMapping*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.TypeMapping
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.TypeMapping
  id: TypeMapping
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: TypeMapping
  nameWithType: JsonLdTermDefinition.TypeMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.TypeMapping
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TypeMapping
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 85
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the type mapping for this term definition.\n"
  remarks: May be null. MUST be null if LanguageMapping is not null.
  example: []
  syntax:
    content: public string TypeMapping { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TypeMapping As String
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.TypeMapping*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.IndexMapping
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.IndexMapping
  id: IndexMapping
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: IndexMapping
  nameWithType: JsonLdTermDefinition.IndexMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.IndexMapping
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IndexMapping
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 90
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the index mapping for this term definition.\n"
  example: []
  syntax:
    content: public string IndexMapping { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property IndexMapping As String
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.IndexMapping*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.LanguageMapping
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.LanguageMapping
  id: LanguageMapping
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: LanguageMapping
  nameWithType: JsonLdTermDefinition.LanguageMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.LanguageMapping
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LanguageMapping
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 97
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the language mapping for this term definition.\n"
  remarks: May be null. MUST be null if TypeMapping is not null.
  example: []
  syntax:
    content: public string LanguageMapping { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LanguageMapping As String
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.LanguageMapping*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.HasLanguageMapping
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.HasLanguageMapping
  id: HasLanguageMapping
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: HasLanguageMapping
  nameWithType: JsonLdTermDefinition.HasLanguageMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.HasLanguageMapping
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasLanguageMapping
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 105
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nBoolean flag indicating if this term definition specifies a language mapping.\n"
  example: []
  syntax:
    content: public bool HasLanguageMapping { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasLanguageMapping As Boolean
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.HasLanguageMapping*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.LocalContext
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.LocalContext
  id: LocalContext
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: LocalContext
  nameWithType: JsonLdTermDefinition.LocalContext
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.LocalContext
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LocalContext
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 110
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the context specified for this term definition.\n"
  example: []
  syntax:
    content: public JToken LocalContext { get; set; }
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JToken
    content.vb: Public Property LocalContext As JToken
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.LocalContext*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.Nest
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.Nest
  id: Nest
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: Nest
  nameWithType: JsonLdTermDefinition.Nest
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.Nest
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Nest
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 115
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the nest property for this term definition.\n"
  example: []
  syntax:
    content: public string Nest { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Nest As String
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.Nest*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.Clone
  commentId: M:VDS.RDF.JsonLd.JsonLdTermDefinition.Clone
  id: Clone
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: JsonLdTermDefinition.Clone()
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.Clone()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Clone
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 121
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nCreate a clone of this term definition.\n"
  example: []
  syntax:
    content: public JsonLdTermDefinition Clone()
    return:
      type: VDS.RDF.JsonLd.JsonLdTermDefinition
      description: ''
    content.vb: Public Function Clone As JsonLdTermDefinition
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.Clone*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.EquivalentTo(VDS.RDF.JsonLd.JsonLdTermDefinition)
  commentId: M:VDS.RDF.JsonLd.JsonLdTermDefinition.EquivalentTo(VDS.RDF.JsonLd.JsonLdTermDefinition)
  id: EquivalentTo(VDS.RDF.JsonLd.JsonLdTermDefinition)
  parent: VDS.RDF.JsonLd.JsonLdTermDefinition
  langs:
  - csharp
  - vb
  name: EquivalentTo(JsonLdTermDefinition)
  nameWithType: JsonLdTermDefinition.EquivalentTo(JsonLdTermDefinition)
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.EquivalentTo(VDS.RDF.JsonLd.JsonLdTermDefinition)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EquivalentTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/JsonLdTermDefinition.cs
    startLine: 147
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nDetermines whether this term definition is the same as another term definition in all respects other than its <xref href=\"VDS.RDF.JsonLd.JsonLdTermDefinition.Protected\" data-throw-if-not-resolved=\"false\"></xref> attribute value.\n"
  example: []
  syntax:
    content: public bool EquivalentTo(JsonLdTermDefinition other)
    parameters:
    - id: other
      type: VDS.RDF.JsonLd.JsonLdTermDefinition
      description: ''
    return:
      type: System.Boolean
      description: True if the term definitions are the same in all respects other than the value of <xref href="VDS.RDF.JsonLd.JsonLdTermDefinition.Protected" data-throw-if-not-resolved="false"></xref>, false otherwise.
    content.vb: Public Function EquivalentTo(other As JsonLdTermDefinition) As Boolean
  overload: VDS.RDF.JsonLd.JsonLdTermDefinition.EquivalentTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.JsonLd
  commentId: N:VDS.RDF.JsonLd
  name: VDS.RDF.JsonLd
  nameWithType: VDS.RDF.JsonLd
  fullName: VDS.RDF.JsonLd
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<JsonLdTermDefinition>()
  nameWithType: Extensions.AsEnumerable<JsonLdTermDefinition>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.JsonLd.JsonLdTermDefinition>()
  nameWithType.vb: Extensions.AsEnumerable(Of JsonLdTermDefinition)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.JsonLd.JsonLdTermDefinition)()
  name.vb: AsEnumerable(Of JsonLdTermDefinition)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<JsonLdTermDefinition>
    nameWithType: Extensions.AsEnumerable<JsonLdTermDefinition>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.JsonLd.JsonLdTermDefinition>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of JsonLdTermDefinition)
    nameWithType: Extensions.AsEnumerable(Of JsonLdTermDefinition)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.JsonLd.JsonLdTermDefinition)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.#ctor*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.#ctor
  name: JsonLdTermDefinition
  nameWithType: JsonLdTermDefinition.JsonLdTermDefinition
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.JsonLdTermDefinition
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.IriMapping*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.IriMapping
  name: IriMapping
  nameWithType: JsonLdTermDefinition.IriMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.IriMapping
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.Prefix*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.Prefix
  name: Prefix
  nameWithType: JsonLdTermDefinition.Prefix
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.Prefix
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.Protected*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.Protected
  name: Protected
  nameWithType: JsonLdTermDefinition.Protected
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.Protected
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.BaseUrl*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.BaseUrl
  name: BaseUrl
  nameWithType: JsonLdTermDefinition.BaseUrl
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.BaseUrl
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.Reverse*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.Reverse
  name: Reverse
  nameWithType: JsonLdTermDefinition.Reverse
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.Reverse
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.ContainerMapping*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.ContainerMapping
  name: ContainerMapping
  nameWithType: JsonLdTermDefinition.ContainerMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.ContainerMapping
- uid: System.Collections.Generic.ISet{VDS.RDF.JsonLd.Syntax.JsonLdContainer}
  commentId: T:System.Collections.Generic.ISet{VDS.RDF.JsonLd.Syntax.JsonLdContainer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ISet`1
  name: ISet<JsonLdContainer>
  nameWithType: ISet<JsonLdContainer>
  fullName: System.Collections.Generic.ISet<VDS.RDF.JsonLd.Syntax.JsonLdContainer>
  nameWithType.vb: ISet(Of JsonLdContainer)
  fullName.vb: System.Collections.Generic.ISet(Of VDS.RDF.JsonLd.Syntax.JsonLdContainer)
  name.vb: ISet(Of JsonLdContainer)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.JsonLd.Syntax.JsonLdContainer
    name: JsonLdContainer
    nameWithType: JsonLdContainer
    fullName: VDS.RDF.JsonLd.Syntax.JsonLdContainer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.JsonLd.Syntax.JsonLdContainer
    name: JsonLdContainer
    nameWithType: JsonLdContainer
    fullName: VDS.RDF.JsonLd.Syntax.JsonLdContainer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ISet`1
  commentId: T:System.Collections.Generic.ISet`1
  isExternal: true
  name: ISet<T>
  nameWithType: ISet<T>
  fullName: System.Collections.Generic.ISet<T>
  nameWithType.vb: ISet(Of T)
  fullName.vb: System.Collections.Generic.ISet(Of T)
  name.vb: ISet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ISet`1
    name: ISet
    nameWithType: ISet
    fullName: System.Collections.Generic.ISet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.DirectionMapping*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.DirectionMapping
  name: DirectionMapping
  nameWithType: JsonLdTermDefinition.DirectionMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.DirectionMapping
- uid: System.Nullable{VDS.RDF.JsonLd.Syntax.LanguageDirection}
  commentId: T:System.Nullable{VDS.RDF.JsonLd.Syntax.LanguageDirection}
  parent: System
  definition: System.Nullable`1
  name: Nullable<LanguageDirection>
  nameWithType: Nullable<LanguageDirection>
  fullName: System.Nullable<VDS.RDF.JsonLd.Syntax.LanguageDirection>
  nameWithType.vb: Nullable(Of LanguageDirection)
  fullName.vb: System.Nullable(Of VDS.RDF.JsonLd.Syntax.LanguageDirection)
  name.vb: Nullable(Of LanguageDirection)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.JsonLd.Syntax.LanguageDirection
    name: LanguageDirection
    nameWithType: LanguageDirection
    fullName: VDS.RDF.JsonLd.Syntax.LanguageDirection
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.JsonLd.Syntax.LanguageDirection
    name: LanguageDirection
    nameWithType: LanguageDirection
    fullName: VDS.RDF.JsonLd.Syntax.LanguageDirection
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.TypeMapping*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.TypeMapping
  name: TypeMapping
  nameWithType: JsonLdTermDefinition.TypeMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.TypeMapping
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.IndexMapping*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.IndexMapping
  name: IndexMapping
  nameWithType: JsonLdTermDefinition.IndexMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.IndexMapping
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.LanguageMapping*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.LanguageMapping
  name: LanguageMapping
  nameWithType: JsonLdTermDefinition.LanguageMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.LanguageMapping
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.HasLanguageMapping*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.HasLanguageMapping
  name: HasLanguageMapping
  nameWithType: JsonLdTermDefinition.HasLanguageMapping
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.HasLanguageMapping
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.LocalContext*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.LocalContext
  name: LocalContext
  nameWithType: JsonLdTermDefinition.LocalContext
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.LocalContext
- uid: Newtonsoft.Json.Linq.JToken
  commentId: T:Newtonsoft.Json.Linq.JToken
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JToken
  nameWithType: JToken
  fullName: Newtonsoft.Json.Linq.JToken
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.Nest*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.Nest
  name: Nest
  nameWithType: JsonLdTermDefinition.Nest
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.Nest
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.Clone*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.Clone
  name: Clone
  nameWithType: JsonLdTermDefinition.Clone
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.Clone
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition
  commentId: T:VDS.RDF.JsonLd.JsonLdTermDefinition
  parent: VDS.RDF.JsonLd
  name: JsonLdTermDefinition
  nameWithType: JsonLdTermDefinition
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.Protected
  commentId: P:VDS.RDF.JsonLd.JsonLdTermDefinition.Protected
  isExternal: true
- uid: VDS.RDF.JsonLd.JsonLdTermDefinition.EquivalentTo*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdTermDefinition.EquivalentTo
  name: EquivalentTo
  nameWithType: JsonLdTermDefinition.EquivalentTo
  fullName: VDS.RDF.JsonLd.JsonLdTermDefinition.EquivalentTo
