### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Events.BaseRdfAEvent
  commentId: T:VDS.RDF.Parsing.Events.BaseRdfAEvent
  id: BaseRdfAEvent
  parent: VDS.RDF.Parsing.Events
  children:
  - VDS.RDF.Parsing.Events.BaseRdfAEvent.#ctor(System.Int32,VDS.RDF.Parsing.PositionInfo,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - VDS.RDF.Parsing.Events.BaseRdfAEvent.Attributes
  - VDS.RDF.Parsing.Events.BaseRdfAEvent.HasAttribute(System.String)
  - VDS.RDF.Parsing.Events.BaseRdfAEvent.Item(System.String)
  langs:
  - csharp
  - vb
  name: BaseRdfAEvent
  nameWithType: BaseRdfAEvent
  fullName: VDS.RDF.Parsing.Events.BaseRdfAEvent
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/BaseEvent.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseRdfAEvent
    path: Libraries/dotNetRDF/Parsing/Events/BaseEvent.cs
    startLine: 127
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nAbstract Base Class for <xref href=\"VDS.RDF.Parsing.Events.IRdfAEvent\" data-throw-if-not-resolved=\"false\"></xref> implementations.\n"
  example: []
  syntax:
    content: 'public abstract class BaseRdfAEvent : BaseEvent, IRdfAEvent, IEvent'
    content.vb: >-
      Public MustInherit Class BaseRdfAEvent
          Inherits BaseEvent
          Implements IRdfAEvent, IEvent
  inheritance:
  - System.Object
  - VDS.RDF.Parsing.Events.BaseEvent
  implements:
  - VDS.RDF.Parsing.Events.IRdfAEvent
  - VDS.RDF.Parsing.Events.IEvent
  inheritedMembers:
  - VDS.RDF.Parsing.Events.BaseEvent.EventType
  - VDS.RDF.Parsing.Events.BaseEvent.Position
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.Events.BaseRdfAEvent.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.Parsing.Events.BaseRdfAEvent.#ctor(System.Int32,VDS.RDF.Parsing.PositionInfo,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  commentId: M:VDS.RDF.Parsing.Events.BaseRdfAEvent.#ctor(System.Int32,VDS.RDF.Parsing.PositionInfo,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: '#ctor(System.Int32,VDS.RDF.Parsing.PositionInfo,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})'
  parent: VDS.RDF.Parsing.Events.BaseRdfAEvent
  langs:
  - csharp
  - vb
  name: BaseRdfAEvent(Int32, PositionInfo, IEnumerable<KeyValuePair<String, String>>)
  nameWithType: BaseRdfAEvent.BaseRdfAEvent(Int32, PositionInfo, IEnumerable<KeyValuePair<String, String>>)
  fullName: VDS.RDF.Parsing.Events.BaseRdfAEvent.BaseRdfAEvent(System.Int32, VDS.RDF.Parsing.PositionInfo, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/BaseEvent.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/Events/BaseEvent.cs
    startLine: 138
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nCreates a new RDFa Event.\n"
  example: []
  syntax:
    content: public BaseRdfAEvent(int eventType, PositionInfo pos, IEnumerable<KeyValuePair<string, string>> attributes)
    parameters:
    - id: eventType
      type: System.Int32
      description: Event Type.
    - id: pos
      type: VDS.RDF.Parsing.PositionInfo
      description: Position Info.
    - id: attributes
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: Attributes.
    content.vb: Public Sub New(eventType As Integer, pos As PositionInfo, attributes As IEnumerable(Of KeyValuePair(Of String, String)))
  overload: VDS.RDF.Parsing.Events.BaseRdfAEvent.#ctor*
  nameWithType.vb: BaseRdfAEvent.BaseRdfAEvent(Int32, PositionInfo, IEnumerable(Of KeyValuePair(Of String, String)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Parsing.Events.BaseRdfAEvent.BaseRdfAEvent(System.Int32, VDS.RDF.Parsing.PositionInfo, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String)))
  name.vb: BaseRdfAEvent(Int32, PositionInfo, IEnumerable(Of KeyValuePair(Of String, String)))
- uid: VDS.RDF.Parsing.Events.BaseRdfAEvent.Attributes
  commentId: P:VDS.RDF.Parsing.Events.BaseRdfAEvent.Attributes
  id: Attributes
  parent: VDS.RDF.Parsing.Events.BaseRdfAEvent
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: BaseRdfAEvent.Attributes
  fullName: VDS.RDF.Parsing.Events.BaseRdfAEvent.Attributes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/BaseEvent.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Attributes
    path: Libraries/dotNetRDF/Parsing/Events/BaseEvent.cs
    startLine: 151
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets the attributes of the event i.e. the attributes of the source element.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, string>> Attributes { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: Public ReadOnly Property Attributes As IEnumerable(Of KeyValuePair(Of String, String))
  overload: VDS.RDF.Parsing.Events.BaseRdfAEvent.Attributes*
  implements:
  - VDS.RDF.Parsing.Events.IRdfAEvent.Attributes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Events.BaseRdfAEvent.HasAttribute(System.String)
  commentId: M:VDS.RDF.Parsing.Events.BaseRdfAEvent.HasAttribute(System.String)
  id: HasAttribute(System.String)
  parent: VDS.RDF.Parsing.Events.BaseRdfAEvent
  langs:
  - csharp
  - vb
  name: HasAttribute(String)
  nameWithType: BaseRdfAEvent.HasAttribute(String)
  fullName: VDS.RDF.Parsing.Events.BaseRdfAEvent.HasAttribute(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/BaseEvent.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasAttribute
    path: Libraries/dotNetRDF/Parsing/Events/BaseEvent.cs
    startLine: 164
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets whether the Event has a given attribute.\n"
  example: []
  syntax:
    content: public bool HasAttribute(string name)
    parameters:
    - id: name
      type: System.String
      description: Attribute Name.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasAttribute(name As String) As Boolean
  overload: VDS.RDF.Parsing.Events.BaseRdfAEvent.HasAttribute*
  implements:
  - VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.BaseRdfAEvent.Item(System.String)
  commentId: P:VDS.RDF.Parsing.Events.BaseRdfAEvent.Item(System.String)
  id: Item(System.String)
  parent: VDS.RDF.Parsing.Events.BaseRdfAEvent
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: BaseRdfAEvent.Item[String]
  fullName: VDS.RDF.Parsing.Events.BaseRdfAEvent.Item[System.String]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/BaseEvent.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: Libraries/dotNetRDF/Parsing/Events/BaseEvent.cs
    startLine: 174
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets the value of a specific attribute.\n"
  example: []
  syntax:
    content: public string this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: Attribute Name.
    return:
      type: System.String
      description: ''
    content.vb: Public ReadOnly Property Item(name As String) As String
  overload: VDS.RDF.Parsing.Events.BaseRdfAEvent.Item*
  implements:
  - VDS.RDF.Parsing.Events.IRdfAEvent.Item(System.String)
  nameWithType.vb: BaseRdfAEvent.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VDS.RDF.Parsing.Events.BaseRdfAEvent.Item(System.String)
  name.vb: Item(String)
references:
- uid: VDS.RDF.Parsing.Events.IRdfAEvent
  commentId: T:VDS.RDF.Parsing.Events.IRdfAEvent
  parent: VDS.RDF.Parsing.Events
  name: IRdfAEvent
  nameWithType: IRdfAEvent
  fullName: VDS.RDF.Parsing.Events.IRdfAEvent
- uid: VDS.RDF.Parsing.Events
  commentId: N:VDS.RDF.Parsing.Events
  name: VDS.RDF.Parsing.Events
  nameWithType: VDS.RDF.Parsing.Events
  fullName: VDS.RDF.Parsing.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.Events.BaseEvent
  commentId: T:VDS.RDF.Parsing.Events.BaseEvent
  parent: VDS.RDF.Parsing.Events
  name: BaseEvent
  nameWithType: BaseEvent
  fullName: VDS.RDF.Parsing.Events.BaseEvent
- uid: VDS.RDF.Parsing.Events.IEvent
  commentId: T:VDS.RDF.Parsing.Events.IEvent
  parent: VDS.RDF.Parsing.Events
  name: IEvent
  nameWithType: IEvent
  fullName: VDS.RDF.Parsing.Events.IEvent
- uid: VDS.RDF.Parsing.Events.BaseEvent.EventType
  commentId: P:VDS.RDF.Parsing.Events.BaseEvent.EventType
  parent: VDS.RDF.Parsing.Events.BaseEvent
  name: EventType
  nameWithType: BaseEvent.EventType
  fullName: VDS.RDF.Parsing.Events.BaseEvent.EventType
- uid: VDS.RDF.Parsing.Events.BaseEvent.Position
  commentId: P:VDS.RDF.Parsing.Events.BaseEvent.Position
  parent: VDS.RDF.Parsing.Events.BaseEvent
  name: Position
  nameWithType: BaseEvent.Position
  fullName: VDS.RDF.Parsing.Events.BaseEvent.Position
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.BaseRdfAEvent.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseRdfAEvent>()
  nameWithType: Extensions.AsEnumerable<BaseRdfAEvent>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.BaseRdfAEvent>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseRdfAEvent)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.BaseRdfAEvent)()
  name.vb: AsEnumerable(Of BaseRdfAEvent)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseRdfAEvent>
    nameWithType: Extensions.AsEnumerable<BaseRdfAEvent>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.BaseRdfAEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseRdfAEvent)
    nameWithType: Extensions.AsEnumerable(Of BaseRdfAEvent)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.BaseRdfAEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Events.BaseRdfAEvent.#ctor*
  commentId: Overload:VDS.RDF.Parsing.Events.BaseRdfAEvent.#ctor
  name: BaseRdfAEvent
  nameWithType: BaseRdfAEvent.BaseRdfAEvent
  fullName: VDS.RDF.Parsing.Events.BaseRdfAEvent.BaseRdfAEvent
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Parsing.PositionInfo
  commentId: T:VDS.RDF.Parsing.PositionInfo
  parent: VDS.RDF.Parsing
  name: PositionInfo
  nameWithType: PositionInfo
  fullName: VDS.RDF.Parsing.PositionInfo
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Parsing.Events.BaseRdfAEvent.Attributes*
  commentId: Overload:VDS.RDF.Parsing.Events.BaseRdfAEvent.Attributes
  name: Attributes
  nameWithType: BaseRdfAEvent.Attributes
  fullName: VDS.RDF.Parsing.Events.BaseRdfAEvent.Attributes
- uid: VDS.RDF.Parsing.Events.IRdfAEvent.Attributes
  commentId: P:VDS.RDF.Parsing.Events.IRdfAEvent.Attributes
  parent: VDS.RDF.Parsing.Events.IRdfAEvent
  name: Attributes
  nameWithType: IRdfAEvent.Attributes
  fullName: VDS.RDF.Parsing.Events.IRdfAEvent.Attributes
- uid: VDS.RDF.Parsing.Events.BaseRdfAEvent.HasAttribute*
  commentId: Overload:VDS.RDF.Parsing.Events.BaseRdfAEvent.HasAttribute
  name: HasAttribute
  nameWithType: BaseRdfAEvent.HasAttribute
  fullName: VDS.RDF.Parsing.Events.BaseRdfAEvent.HasAttribute
- uid: VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute(System.String)
  commentId: M:VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute(System.String)
  parent: VDS.RDF.Parsing.Events.IRdfAEvent
  isExternal: true
  name: HasAttribute(String)
  nameWithType: IRdfAEvent.HasAttribute(String)
  fullName: VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute(System.String)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute(System.String)
    name: HasAttribute
    nameWithType: IRdfAEvent.HasAttribute
    fullName: VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute(System.String)
    name: HasAttribute
    nameWithType: IRdfAEvent.HasAttribute
    fullName: VDS.RDF.Parsing.Events.IRdfAEvent.HasAttribute
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Parsing.Events.BaseRdfAEvent.Item*
  commentId: Overload:VDS.RDF.Parsing.Events.BaseRdfAEvent.Item
  name: Item
  nameWithType: BaseRdfAEvent.Item
  fullName: VDS.RDF.Parsing.Events.BaseRdfAEvent.Item
- uid: VDS.RDF.Parsing.Events.IRdfAEvent.Item(System.String)
  commentId: P:VDS.RDF.Parsing.Events.IRdfAEvent.Item(System.String)
  parent: VDS.RDF.Parsing.Events.IRdfAEvent
  isExternal: true
  name: Item[String]
  nameWithType: IRdfAEvent.Item[String]
  fullName: VDS.RDF.Parsing.Events.IRdfAEvent.Item[System.String]
  nameWithType.vb: IRdfAEvent.Item(String)
  fullName.vb: VDS.RDF.Parsing.Events.IRdfAEvent.Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IRdfAEvent.Item(System.String)
    name: Item
    nameWithType: IRdfAEvent.Item
    fullName: VDS.RDF.Parsing.Events.IRdfAEvent.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IRdfAEvent.Item(System.String)
    name: Item
    nameWithType: IRdfAEvent.Item
    fullName: VDS.RDF.Parsing.Events.IRdfAEvent.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
