### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Optimisation.NoReorderComparer
  commentId: T:VDS.RDF.Query.Optimisation.NoReorderComparer
  id: NoReorderComparer
  parent: VDS.RDF.Query.Optimisation
  children:
  - VDS.RDF.Query.Optimisation.NoReorderComparer.Compare(VDS.RDF.Query.Patterns.ITriplePattern,VDS.RDF.Query.Patterns.ITriplePattern)
  langs:
  - csharp
  - vb
  name: NoReorderComparer
  nameWithType: NoReorderComparer
  fullName: VDS.RDF.Query.Optimisation.NoReorderComparer
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/QueryOptimisers.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NoReorderComparer
    path: Libraries/dotNetRDF/Query/Optimisation/QueryOptimisers.cs
    startLine: 80
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nA Comparer which ranks all Triple Patterns as equal.\n"
  example: []
  syntax:
    content: 'public class NoReorderComparer : IComparer<ITriplePattern>'
    content.vb: >-
      Public Class NoReorderComparer
          Implements IComparer(Of ITriplePattern)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Optimisation.NoReorderComparer.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Optimisation.NoReorderComparer.Compare(VDS.RDF.Query.Patterns.ITriplePattern,VDS.RDF.Query.Patterns.ITriplePattern)
  commentId: M:VDS.RDF.Query.Optimisation.NoReorderComparer.Compare(VDS.RDF.Query.Patterns.ITriplePattern,VDS.RDF.Query.Patterns.ITriplePattern)
  id: Compare(VDS.RDF.Query.Patterns.ITriplePattern,VDS.RDF.Query.Patterns.ITriplePattern)
  parent: VDS.RDF.Query.Optimisation.NoReorderComparer
  langs:
  - csharp
  - vb
  name: Compare(ITriplePattern, ITriplePattern)
  nameWithType: NoReorderComparer.Compare(ITriplePattern, ITriplePattern)
  fullName: VDS.RDF.Query.Optimisation.NoReorderComparer.Compare(VDS.RDF.Query.Patterns.ITriplePattern, VDS.RDF.Query.Patterns.ITriplePattern)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Optimisation/QueryOptimisers.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Compare
    path: Libraries/dotNetRDF/Query/Optimisation/QueryOptimisers.cs
    startLine: 89
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Optimisation
  summary: "\nCompares two Triple Patterns are always returns that they are ranking equal.\n"
  example: []
  syntax:
    content: public int Compare(ITriplePattern x, ITriplePattern y)
    parameters:
    - id: x
      type: VDS.RDF.Query.Patterns.ITriplePattern
      description: First Triple Pattern.
    - id: y
      type: VDS.RDF.Query.Patterns.ITriplePattern
      description: Second Triple Pattern.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function Compare(x As ITriplePattern, y As ITriplePattern) As Integer
  overload: VDS.RDF.Query.Optimisation.NoReorderComparer.Compare*
  implements:
  - System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}.Compare(VDS.RDF.Query.Patterns.ITriplePattern,VDS.RDF.Query.Patterns.ITriplePattern)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Optimisation
  commentId: N:VDS.RDF.Query.Optimisation
  name: VDS.RDF.Query.Optimisation
  nameWithType: VDS.RDF.Query.Optimisation
  fullName: VDS.RDF.Query.Optimisation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}
  commentId: T:System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<ITriplePattern>
  nameWithType: IComparer<ITriplePattern>
  fullName: System.Collections.Generic.IComparer<VDS.RDF.Query.Patterns.ITriplePattern>
  nameWithType.vb: IComparer(Of ITriplePattern)
  fullName.vb: System.Collections.Generic.IComparer(Of VDS.RDF.Query.Patterns.ITriplePattern)
  name.vb: IComparer(Of ITriplePattern)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Optimisation.NoReorderComparer.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<NoReorderComparer>()
  nameWithType: Extensions.AsEnumerable<NoReorderComparer>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Optimisation.NoReorderComparer>()
  nameWithType.vb: Extensions.AsEnumerable(Of NoReorderComparer)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Optimisation.NoReorderComparer)()
  name.vb: AsEnumerable(Of NoReorderComparer)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<NoReorderComparer>
    nameWithType: Extensions.AsEnumerable<NoReorderComparer>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Optimisation.NoReorderComparer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of NoReorderComparer)
    nameWithType: Extensions.AsEnumerable(Of NoReorderComparer)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Optimisation.NoReorderComparer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IComparer`1
  commentId: T:System.Collections.Generic.IComparer`1
  isExternal: true
  name: IComparer<T>
  nameWithType: IComparer<T>
  fullName: System.Collections.Generic.IComparer<T>
  nameWithType.vb: IComparer(Of T)
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  name.vb: IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    nameWithType: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Optimisation.NoReorderComparer.Compare*
  commentId: Overload:VDS.RDF.Query.Optimisation.NoReorderComparer.Compare
  name: Compare
  nameWithType: NoReorderComparer.Compare
  fullName: VDS.RDF.Query.Optimisation.NoReorderComparer.Compare
- uid: System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}.Compare(VDS.RDF.Query.Patterns.ITriplePattern,VDS.RDF.Query.Patterns.ITriplePattern)
  commentId: M:System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}.Compare(VDS.RDF.Query.Patterns.ITriplePattern,VDS.RDF.Query.Patterns.ITriplePattern)
  parent: System.Collections.Generic.IComparer{VDS.RDF.Query.Patterns.ITriplePattern}
  definition: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  name: Compare(ITriplePattern, ITriplePattern)
  nameWithType: IComparer<ITriplePattern>.Compare(ITriplePattern, ITriplePattern)
  fullName: System.Collections.Generic.IComparer<VDS.RDF.Query.Patterns.ITriplePattern>.Compare(VDS.RDF.Query.Patterns.ITriplePattern, VDS.RDF.Query.Patterns.ITriplePattern)
  nameWithType.vb: IComparer(Of ITriplePattern).Compare(ITriplePattern, ITriplePattern)
  fullName.vb: System.Collections.Generic.IComparer(Of VDS.RDF.Query.Patterns.ITriplePattern).Compare(VDS.RDF.Query.Patterns.ITriplePattern, VDS.RDF.Query.Patterns.ITriplePattern)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<ITriplePattern>.Compare
    fullName: System.Collections.Generic.IComparer<VDS.RDF.Query.Patterns.ITriplePattern>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of ITriplePattern).Compare
    fullName: System.Collections.Generic.IComparer(Of VDS.RDF.Query.Patterns.ITriplePattern).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.ITriplePattern
  commentId: T:VDS.RDF.Query.Patterns.ITriplePattern
  parent: VDS.RDF.Query.Patterns
  name: ITriplePattern
  nameWithType: ITriplePattern
  fullName: VDS.RDF.Query.Patterns.ITriplePattern
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
  commentId: M:System.Collections.Generic.IComparer`1.Compare(`0,`0)
  isExternal: true
  name: Compare(T, T)
  nameWithType: IComparer<T>.Compare(T, T)
  fullName: System.Collections.Generic.IComparer<T>.Compare(T, T)
  nameWithType.vb: IComparer(Of T).Compare(T, T)
  fullName.vb: System.Collections.Generic.IComparer(Of T).Compare(T, T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer<T>.Compare
    fullName: System.Collections.Generic.IComparer<T>.Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1.Compare(`0,`0)
    name: Compare
    nameWithType: IComparer(Of T).Compare
    fullName: System.Collections.Generic.IComparer(Of T).Compare
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
shouldSkipMarkup: true
