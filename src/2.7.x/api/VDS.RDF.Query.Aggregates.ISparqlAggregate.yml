### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate
  commentId: T:VDS.RDF.Query.Aggregates.ISparqlAggregate
  id: ISparqlAggregate
  parent: VDS.RDF.Query.Aggregates
  children:
  - VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
  - VDS.RDF.Query.Aggregates.ISparqlAggregate.Arguments
  - VDS.RDF.Query.Aggregates.ISparqlAggregate.Expression
  - VDS.RDF.Query.Aggregates.ISparqlAggregate.Functor
  - VDS.RDF.Query.Aggregates.ISparqlAggregate.Type
  langs:
  - csharp
  - vb
  name: ISparqlAggregate
  nameWithType: ISparqlAggregate
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ISparqlAggregate
    path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates
  summary: "\nInterface for SPARQL Aggregates which can be used to calculate aggregates over Results.\n"
  example: []
  syntax:
    content: public interface ISparqlAggregate
    content.vb: Public Interface ISparqlAggregate
  extensionMethods:
  - VDS.RDF.Query.Aggregates.ISparqlAggregate.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  id: Apply(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Aggregates.ISparqlAggregate
  langs:
  - csharp
  - vb
  name: Apply(SparqlEvaluationContext)
  nameWithType: ISparqlAggregate.Apply(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
    startLine: 42
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates
  summary: "\nApplies the Aggregate to the Result Binder and returns a single Node as a Result.\n"
  example: []
  syntax:
    content: IValuedNode Apply(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    return:
      type: VDS.RDF.Nodes.IValuedNode
    content.vb: Function Apply(context As SparqlEvaluationContext) As IValuedNode
  overload: VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply*
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
  commentId: M:VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
  id: Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.IEnumerable{System.Int32})
  parent: VDS.RDF.Query.Aggregates.ISparqlAggregate
  langs:
  - csharp
  - vb
  name: Apply(SparqlEvaluationContext, IEnumerable<Int32>)
  nameWithType: ISparqlAggregate.Apply(SparqlEvaluationContext, IEnumerable<Int32>)
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.IEnumerable<System.Int32>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates
  summary: "\nApplies the Aggregate to the Result Binder and returns a single Node as a Result.\n"
  example: []
  syntax:
    content: IValuedNode Apply(SparqlEvaluationContext context, IEnumerable<int> bindingIDs)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    - id: bindingIDs
      type: System.Collections.Generic.IEnumerable{System.Int32}
      description: Enumerable of Binding IDs which the aggregate is applied over.
    return:
      type: VDS.RDF.Nodes.IValuedNode
    content.vb: Function Apply(context As SparqlEvaluationContext, bindingIDs As IEnumerable(Of Integer)) As IValuedNode
  overload: VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply*
  nameWithType.vb: ISparqlAggregate.Apply(SparqlEvaluationContext, IEnumerable(Of Int32))
  fullName.vb: VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.IEnumerable(Of System.Int32))
  name.vb: Apply(SparqlEvaluationContext, IEnumerable(Of Int32))
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate.Expression
  commentId: P:VDS.RDF.Query.Aggregates.ISparqlAggregate.Expression
  id: Expression
  parent: VDS.RDF.Query.Aggregates.ISparqlAggregate
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: ISparqlAggregate.Expression
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate.Expression
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Expression
    path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates
  summary: "\nGets the Expression that the Aggregate is applied to.\n"
  example: []
  syntax:
    content: ISparqlExpression Expression { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Expressions.ISparqlExpression
    content.vb: ReadOnly Property Expression As ISparqlExpression
  overload: VDS.RDF.Query.Aggregates.ISparqlAggregate.Expression*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate.Type
  commentId: P:VDS.RDF.Query.Aggregates.ISparqlAggregate.Type
  id: Type
  parent: VDS.RDF.Query.Aggregates.ISparqlAggregate
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: ISparqlAggregate.Type
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate.Type
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Type
    path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates
  summary: "\nGets the Type of the Aggregate.\n"
  example: []
  syntax:
    content: SparqlExpressionType Type { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Expressions.SparqlExpressionType
    content.vb: ReadOnly Property Type As SparqlExpressionType
  overload: VDS.RDF.Query.Aggregates.ISparqlAggregate.Type*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate.Functor
  commentId: P:VDS.RDF.Query.Aggregates.ISparqlAggregate.Functor
  id: Functor
  parent: VDS.RDF.Query.Aggregates.ISparqlAggregate
  langs:
  - csharp
  - vb
  name: Functor
  nameWithType: ISparqlAggregate.Functor
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate.Functor
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Functor
    path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates
  summary: "\nGets the URI/Keyword of the Aggregate.\n"
  example: []
  syntax:
    content: string Functor { get; }
    parameters: []
    return:
      type: System.String
    content.vb: ReadOnly Property Functor As String
  overload: VDS.RDF.Query.Aggregates.ISparqlAggregate.Functor*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate.Arguments
  commentId: P:VDS.RDF.Query.Aggregates.ISparqlAggregate.Arguments
  id: Arguments
  parent: VDS.RDF.Query.Aggregates.ISparqlAggregate
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: ISparqlAggregate.Arguments
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate.Arguments
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Arguments
    path: Libraries/dotNetRDF/Query/Aggregates/ISPARQLAggregate.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Aggregates
  summary: "\nGets the Arguments of the Aggregate.\n"
  example: []
  syntax:
    content: IEnumerable<ISparqlExpression> Arguments { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Expressions.ISparqlExpression}
    content.vb: ReadOnly Property Arguments As IEnumerable(Of ISparqlExpression)
  overload: VDS.RDF.Query.Aggregates.ISparqlAggregate.Arguments*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VDS.RDF.Query.Aggregates
  commentId: N:VDS.RDF.Query.Aggregates
  name: VDS.RDF.Query.Aggregates
  nameWithType: VDS.RDF.Query.Aggregates
  fullName: VDS.RDF.Query.Aggregates
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ISparqlAggregate>()
  nameWithType: Extensions.AsEnumerable<ISparqlAggregate>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Aggregates.ISparqlAggregate>()
  nameWithType.vb: Extensions.AsEnumerable(Of ISparqlAggregate)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Aggregates.ISparqlAggregate)()
  name.vb: AsEnumerable(Of ISparqlAggregate)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ISparqlAggregate>
    nameWithType: Extensions.AsEnumerable<ISparqlAggregate>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Aggregates.ISparqlAggregate>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ISparqlAggregate)
    nameWithType: Extensions.AsEnumerable(Of ISparqlAggregate)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Aggregates.ISparqlAggregate)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply*
  commentId: Overload:VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply
  name: Apply
  nameWithType: ISparqlAggregate.Apply
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate.Apply
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.Nodes.IValuedNode
  commentId: T:VDS.RDF.Nodes.IValuedNode
  parent: VDS.RDF.Nodes
  name: IValuedNode
  nameWithType: IValuedNode
  fullName: VDS.RDF.Nodes.IValuedNode
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  commentId: T:System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  nameWithType: IEnumerable<Int32>
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  nameWithType.vb: IEnumerable(Of Int32)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  name.vb: IEnumerable(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate.Expression*
  commentId: Overload:VDS.RDF.Query.Aggregates.ISparqlAggregate.Expression
  name: Expression
  nameWithType: ISparqlAggregate.Expression
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate.Expression
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate.Type*
  commentId: Overload:VDS.RDF.Query.Aggregates.ISparqlAggregate.Type
  name: Type
  nameWithType: ISparqlAggregate.Type
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate.Type
- uid: VDS.RDF.Query.Expressions.SparqlExpressionType
  commentId: T:VDS.RDF.Query.Expressions.SparqlExpressionType
  parent: VDS.RDF.Query.Expressions
  name: SparqlExpressionType
  nameWithType: SparqlExpressionType
  fullName: VDS.RDF.Query.Expressions.SparqlExpressionType
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate.Functor*
  commentId: Overload:VDS.RDF.Query.Aggregates.ISparqlAggregate.Functor
  name: Functor
  nameWithType: ISparqlAggregate.Functor
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate.Functor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Aggregates.ISparqlAggregate.Arguments*
  commentId: Overload:VDS.RDF.Query.Aggregates.ISparqlAggregate.Arguments
  name: Arguments
  nameWithType: ISparqlAggregate.Arguments
  fullName: VDS.RDF.Query.Aggregates.ISparqlAggregate.Arguments
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Expressions.ISparqlExpression}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.Expressions.ISparqlExpression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISparqlExpression>
  nameWithType: IEnumerable<ISparqlExpression>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.Expressions.ISparqlExpression>
  nameWithType.vb: IEnumerable(Of ISparqlExpression)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: IEnumerable(Of ISparqlExpression)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
