### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Patterns.BindingTuple
  commentId: T:VDS.RDF.Query.Patterns.BindingTuple
  id: BindingTuple
  parent: VDS.RDF.Query.Patterns
  children:
  - VDS.RDF.Query.Patterns.BindingTuple.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{VDS.RDF.Query.Patterns.PatternItem})
  - VDS.RDF.Query.Patterns.BindingTuple.IsBound(System.String)
  - VDS.RDF.Query.Patterns.BindingTuple.IsComplete
  - VDS.RDF.Query.Patterns.BindingTuple.IsEmpty
  - VDS.RDF.Query.Patterns.BindingTuple.Item(System.String)
  - VDS.RDF.Query.Patterns.BindingTuple.ToString
  - VDS.RDF.Query.Patterns.BindingTuple.Values
  langs:
  - csharp
  - vb
  name: BindingTuple
  nameWithType: BindingTuple
  fullName: VDS.RDF.Query.Patterns.BindingTuple
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BindingTuple
    path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
    startLine: 150
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nRepresents a Tuple in a BINDINGS clause.\n"
  example: []
  syntax:
    content: public class BindingTuple
    content.vb: Public Class BindingTuple
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Patterns.BindingTuple.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Patterns.BindingTuple.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{VDS.RDF.Query.Patterns.PatternItem})
  commentId: M:VDS.RDF.Query.Patterns.BindingTuple.#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{VDS.RDF.Query.Patterns.PatternItem})
  id: '#ctor(System.Collections.Generic.List{System.String},System.Collections.Generic.List{VDS.RDF.Query.Patterns.PatternItem})'
  parent: VDS.RDF.Query.Patterns.BindingTuple
  langs:
  - csharp
  - vb
  name: BindingTuple(List<String>, List<PatternItem>)
  nameWithType: BindingTuple.BindingTuple(List<String>, List<PatternItem>)
  fullName: VDS.RDF.Query.Patterns.BindingTuple.BindingTuple(System.Collections.Generic.List<System.String>, System.Collections.Generic.List<VDS.RDF.Query.Patterns.PatternItem>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
    startLine: 159
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nCreates a new Binding Tuple.\n"
  example: []
  syntax:
    content: public BindingTuple(List<string> variables, List<PatternItem> values)
    parameters:
    - id: variables
      type: System.Collections.Generic.List{System.String}
      description: Variables.
    - id: values
      type: System.Collections.Generic.List{VDS.RDF.Query.Patterns.PatternItem}
      description: Values.
    content.vb: Public Sub New(variables As List(Of String), values As List(Of PatternItem))
  overload: VDS.RDF.Query.Patterns.BindingTuple.#ctor*
  nameWithType.vb: BindingTuple.BindingTuple(List(Of String), List(Of PatternItem))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Patterns.BindingTuple.BindingTuple(System.Collections.Generic.List(Of System.String), System.Collections.Generic.List(Of VDS.RDF.Query.Patterns.PatternItem))
  name.vb: BindingTuple(List(Of String), List(Of PatternItem))
- uid: VDS.RDF.Query.Patterns.BindingTuple.Values
  commentId: P:VDS.RDF.Query.Patterns.BindingTuple.Values
  id: Values
  parent: VDS.RDF.Query.Patterns.BindingTuple
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: BindingTuple.Values
  fullName: VDS.RDF.Query.Patterns.BindingTuple.Values
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Values
    path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
    startLine: 170
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the enumeration of Variable-Value pairs.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, PatternItem>> Values { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,VDS.RDF.Query.Patterns.PatternItem}}
    content.vb: Public ReadOnly Property Values As IEnumerable(Of KeyValuePair(Of String, PatternItem))
  overload: VDS.RDF.Query.Patterns.BindingTuple.Values*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.BindingTuple.Item(System.String)
  commentId: P:VDS.RDF.Query.Patterns.BindingTuple.Item(System.String)
  id: Item(System.String)
  parent: VDS.RDF.Query.Patterns.BindingTuple
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: BindingTuple.Item[String]
  fullName: VDS.RDF.Query.Patterns.BindingTuple.Item[System.String]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
    startLine: 183
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the Value for a Variable.\n"
  example: []
  syntax:
    content: public INode this[string var] { get; }
    parameters:
    - id: var
      type: System.String
      description: Variable.
    return:
      type: VDS.RDF.INode
      description: ''
    content.vb: Public ReadOnly Property Item(var As String) As INode
  overload: VDS.RDF.Query.Patterns.BindingTuple.Item*
  nameWithType.vb: BindingTuple.Item(String)
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VDS.RDF.Query.Patterns.BindingTuple.Item(System.String)
  name.vb: Item(String)
- uid: VDS.RDF.Query.Patterns.BindingTuple.IsEmpty
  commentId: P:VDS.RDF.Query.Patterns.BindingTuple.IsEmpty
  id: IsEmpty
  parent: VDS.RDF.Query.Patterns.BindingTuple
  langs:
  - csharp
  - vb
  name: IsEmpty
  nameWithType: BindingTuple.IsEmpty
  fullName: VDS.RDF.Query.Patterns.BindingTuple.IsEmpty
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsEmpty
    path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
    startLine: 203
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether this is an empty tuple.\n"
  example: []
  syntax:
    content: public bool IsEmpty { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsEmpty As Boolean
  overload: VDS.RDF.Query.Patterns.BindingTuple.IsEmpty*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.BindingTuple.IsComplete
  commentId: P:VDS.RDF.Query.Patterns.BindingTuple.IsComplete
  id: IsComplete
  parent: VDS.RDF.Query.Patterns.BindingTuple
  langs:
  - csharp
  - vb
  name: IsComplete
  nameWithType: BindingTuple.IsComplete
  fullName: VDS.RDF.Query.Patterns.BindingTuple.IsComplete
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsComplete
    path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
    startLine: 214
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether the Tuple is complete i.e. has no undefined entries.\n"
  example: []
  syntax:
    content: public bool IsComplete { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsComplete As Boolean
  overload: VDS.RDF.Query.Patterns.BindingTuple.IsComplete*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Patterns.BindingTuple.IsBound(System.String)
  commentId: M:VDS.RDF.Query.Patterns.BindingTuple.IsBound(System.String)
  id: IsBound(System.String)
  parent: VDS.RDF.Query.Patterns.BindingTuple
  langs:
  - csharp
  - vb
  name: IsBound(String)
  nameWithType: BindingTuple.IsBound(String)
  fullName: VDS.RDF.Query.Patterns.BindingTuple.IsBound(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsBound
    path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
    startLine: 227
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets whether the given variable is bound for this tuple i.e. is not UNDEF.\n"
  example: []
  syntax:
    content: public bool IsBound(string var)
    parameters:
    - id: var
      type: System.String
      description: Variable.
    return:
      type: System.Boolean
      description: True if the variable exists in the tuple and is bound, false otherwise.
    content.vb: Public Function IsBound(var As String) As Boolean
  overload: VDS.RDF.Query.Patterns.BindingTuple.IsBound*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Patterns.BindingTuple.ToString
  commentId: M:VDS.RDF.Query.Patterns.BindingTuple.ToString
  id: ToString
  parent: VDS.RDF.Query.Patterns.BindingTuple
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BindingTuple.ToString()
  fullName: VDS.RDF.Query.Patterns.BindingTuple.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF/Query/Patterns/BindingsPattern.cs
    startLine: 236
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Patterns
  summary: "\nGets the String representation of the Tuple.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VDS.RDF.Query.Patterns.BindingTuple.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.BindingTuple.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BindingTuple>()
  nameWithType: Extensions.AsEnumerable<BindingTuple>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.BindingTuple>()
  nameWithType.vb: Extensions.AsEnumerable(Of BindingTuple)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.BindingTuple)()
  name.vb: AsEnumerable(Of BindingTuple)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BindingTuple>
    nameWithType: Extensions.AsEnumerable<BindingTuple>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Patterns.BindingTuple>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BindingTuple)
    nameWithType: Extensions.AsEnumerable(Of BindingTuple)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Patterns.BindingTuple)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Patterns.BindingTuple.#ctor*
  commentId: Overload:VDS.RDF.Query.Patterns.BindingTuple.#ctor
  name: BindingTuple
  nameWithType: BindingTuple.BindingTuple
  fullName: VDS.RDF.Query.Patterns.BindingTuple.BindingTuple
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{VDS.RDF.Query.Patterns.PatternItem}
  commentId: T:System.Collections.Generic.List{VDS.RDF.Query.Patterns.PatternItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PatternItem>
  nameWithType: List<PatternItem>
  fullName: System.Collections.Generic.List<VDS.RDF.Query.Patterns.PatternItem>
  nameWithType.vb: List(Of PatternItem)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.Query.Patterns.PatternItem)
  name.vb: List(Of PatternItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Patterns.PatternItem
    name: PatternItem
    nameWithType: PatternItem
    fullName: VDS.RDF.Query.Patterns.PatternItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Patterns.PatternItem
    name: PatternItem
    nameWithType: PatternItem
    fullName: VDS.RDF.Query.Patterns.PatternItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Patterns.BindingTuple.Values*
  commentId: Overload:VDS.RDF.Query.Patterns.BindingTuple.Values
  name: Values
  nameWithType: BindingTuple.Values
  fullName: VDS.RDF.Query.Patterns.BindingTuple.Values
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,VDS.RDF.Query.Patterns.PatternItem}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,VDS.RDF.Query.Patterns.PatternItem}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, PatternItem>>
  nameWithType: IEnumerable<KeyValuePair<String, PatternItem>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, VDS.RDF.Query.Patterns.PatternItem>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, PatternItem))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, VDS.RDF.Query.Patterns.PatternItem))
  name.vb: IEnumerable(Of KeyValuePair(Of String, PatternItem))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Patterns.PatternItem
    name: PatternItem
    nameWithType: PatternItem
    fullName: VDS.RDF.Query.Patterns.PatternItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Patterns.PatternItem
    name: PatternItem
    nameWithType: PatternItem
    fullName: VDS.RDF.Query.Patterns.PatternItem
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.BindingTuple.Item*
  commentId: Overload:VDS.RDF.Query.Patterns.BindingTuple.Item
  name: Item
  nameWithType: BindingTuple.Item
  fullName: VDS.RDF.Query.Patterns.BindingTuple.Item
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Query.Patterns.BindingTuple.IsEmpty*
  commentId: Overload:VDS.RDF.Query.Patterns.BindingTuple.IsEmpty
  name: IsEmpty
  nameWithType: BindingTuple.IsEmpty
  fullName: VDS.RDF.Query.Patterns.BindingTuple.IsEmpty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Patterns.BindingTuple.IsComplete*
  commentId: Overload:VDS.RDF.Query.Patterns.BindingTuple.IsComplete
  name: IsComplete
  nameWithType: BindingTuple.IsComplete
  fullName: VDS.RDF.Query.Patterns.BindingTuple.IsComplete
- uid: VDS.RDF.Query.Patterns.BindingTuple.IsBound*
  commentId: Overload:VDS.RDF.Query.Patterns.BindingTuple.IsBound
  name: IsBound
  nameWithType: BindingTuple.IsBound
  fullName: VDS.RDF.Query.Patterns.BindingTuple.IsBound
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.BindingTuple.ToString*
  commentId: Overload:VDS.RDF.Query.Patterns.BindingTuple.ToString
  name: ToString
  nameWithType: BindingTuple.ToString
  fullName: VDS.RDF.Query.Patterns.BindingTuple.ToString
shouldSkipMarkup: true
