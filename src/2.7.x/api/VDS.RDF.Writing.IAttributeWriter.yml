### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Writing.IAttributeWriter
  commentId: T:VDS.RDF.Writing.IAttributeWriter
  id: IAttributeWriter
  parent: VDS.RDF.Writing
  children:
  - VDS.RDF.Writing.IAttributeWriter.UseAttributes
  langs:
  - csharp
  - vb
  name: IAttributeWriter
  nameWithType: IAttributeWriter
  fullName: VDS.RDF.Writing.IAttributeWriter
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Core/IRDFWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IAttributeWriter
    path: Libraries/dotNetRDF/Core/IRDFWriter.cs
    startLine: 138
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nInterface for Writers that can use attributes (e.g. XML or HTML based writers) which allows you to control whether the writer will choose to use attributes to encode data which could otherwise be expressed as elements.\n"
  example: []
  syntax:
    content: public interface IAttributeWriter
    content.vb: Public Interface IAttributeWriter
  extensionMethods:
  - VDS.RDF.Writing.IAttributeWriter.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Writing.IAttributeWriter.UseAttributes
  commentId: P:VDS.RDF.Writing.IAttributeWriter.UseAttributes
  id: UseAttributes
  parent: VDS.RDF.Writing.IAttributeWriter
  langs:
  - csharp
  - vb
  name: UseAttributes
  nameWithType: IAttributeWriter.UseAttributes
  fullName: VDS.RDF.Writing.IAttributeWriter.UseAttributes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/IRDFWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UseAttributes
    path: Libraries/dotNetRDF/Core/IRDFWriter.cs
    startLine: 143
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGets/Sets whether literal objects can be compressed as attributes.\n"
  example: []
  syntax:
    content: bool UseAttributes { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Property UseAttributes As Boolean
  overload: VDS.RDF.Writing.IAttributeWriter.UseAttributes*
  modifiers.csharp:
  - get
  - set
references:
- uid: VDS.RDF.Writing
  commentId: N:VDS.RDF.Writing
  name: VDS.RDF.Writing
  nameWithType: VDS.RDF.Writing
  fullName: VDS.RDF.Writing
- uid: VDS.RDF.Writing.IAttributeWriter.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IAttributeWriter>()
  nameWithType: Extensions.AsEnumerable<IAttributeWriter>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.IAttributeWriter>()
  nameWithType.vb: Extensions.AsEnumerable(Of IAttributeWriter)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.IAttributeWriter)()
  name.vb: AsEnumerable(Of IAttributeWriter)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IAttributeWriter>
    nameWithType: Extensions.AsEnumerable<IAttributeWriter>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.IAttributeWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IAttributeWriter)
    nameWithType: Extensions.AsEnumerable(Of IAttributeWriter)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.IAttributeWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Writing.IAttributeWriter.UseAttributes*
  commentId: Overload:VDS.RDF.Writing.IAttributeWriter.UseAttributes
  name: UseAttributes
  nameWithType: IAttributeWriter.UseAttributes
  fullName: VDS.RDF.Writing.IAttributeWriter.UseAttributes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
shouldSkipMarkup: true
