### YamlMime:ManagedReference
items:
- uid: VDS.RDF.TripleEventArgs
  commentId: T:VDS.RDF.TripleEventArgs
  id: TripleEventArgs
  parent: VDS.RDF
  children:
  - VDS.RDF.TripleEventArgs.#ctor(VDS.RDF.Triple,VDS.RDF.IGraph)
  - VDS.RDF.TripleEventArgs.#ctor(VDS.RDF.Triple,VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.TripleEventArgs.Graph
  - VDS.RDF.TripleEventArgs.GraphUri
  - VDS.RDF.TripleEventArgs.Triple
  - VDS.RDF.TripleEventArgs.WasAsserted
  - VDS.RDF.TripleEventArgs.WasRetracted
  langs:
  - csharp
  - vb
  name: TripleEventArgs
  nameWithType: TripleEventArgs
  fullName: VDS.RDF.TripleEventArgs
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Events.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TripleEventArgs
    path: ../../dotNetRDF/Libraries/dotNetRDF/Events.cs
    startLine: 101
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent Arguments for Events regarding the assertion and retraction of Triples.\n"
  example: []
  syntax:
    content: 'public class TripleEventArgs : EventArgs'
    content.vb: >-
      Public Class TripleEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.TripleEventArgs.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.TripleEventArgs.#ctor(VDS.RDF.Triple,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.TripleEventArgs.#ctor(VDS.RDF.Triple,VDS.RDF.IGraph)
  id: '#ctor(VDS.RDF.Triple,VDS.RDF.IGraph)'
  parent: VDS.RDF.TripleEventArgs
  langs:
  - csharp
  - vb
  name: TripleEventArgs(Triple, IGraph)
  nameWithType: TripleEventArgs.TripleEventArgs(Triple, IGraph)
  fullName: VDS.RDF.TripleEventArgs.TripleEventArgs(VDS.RDF.Triple, VDS.RDF.IGraph)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Events.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Events.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new set of Triple Event Arguments for the given Triple.\n"
  example: []
  syntax:
    content: public TripleEventArgs(Triple t, IGraph g)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    - id: g
      type: VDS.RDF.IGraph
      description: Graph the Triple Event occurred in.
    content.vb: Public Sub New(t As Triple, g As IGraph)
  overload: VDS.RDF.TripleEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleEventArgs.#ctor(VDS.RDF.Triple,VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.TripleEventArgs.#ctor(VDS.RDF.Triple,VDS.RDF.IGraph,System.Boolean)
  id: '#ctor(VDS.RDF.Triple,VDS.RDF.IGraph,System.Boolean)'
  parent: VDS.RDF.TripleEventArgs
  langs:
  - csharp
  - vb
  name: TripleEventArgs(Triple, IGraph, Boolean)
  nameWithType: TripleEventArgs.TripleEventArgs(Triple, IGraph, Boolean)
  fullName: VDS.RDF.TripleEventArgs.TripleEventArgs(VDS.RDF.Triple, VDS.RDF.IGraph, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Events.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Events.cs
    startLine: 125
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new set of Triple Event Arguments for the given Triple.\n"
  example: []
  syntax:
    content: public TripleEventArgs(Triple t, IGraph g, bool asserted)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    - id: g
      type: VDS.RDF.IGraph
      description: Graph the Triple Event occurred in.
    - id: asserted
      type: System.Boolean
      description: Was the Triple Asserted (if not then it was Retracted).
    content.vb: Public Sub New(t As Triple, g As IGraph, asserted As Boolean)
  overload: VDS.RDF.TripleEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleEventArgs.Triple
  commentId: P:VDS.RDF.TripleEventArgs.Triple
  id: Triple
  parent: VDS.RDF.TripleEventArgs
  langs:
  - csharp
  - vb
  name: Triple
  nameWithType: TripleEventArgs.Triple
  fullName: VDS.RDF.TripleEventArgs.Triple
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Events.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Triple
    path: ../../dotNetRDF/Libraries/dotNetRDF/Events.cs
    startLine: 134
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Triple.\n"
  example: []
  syntax:
    content: public Triple Triple { get; }
    parameters: []
    return:
      type: VDS.RDF.Triple
    content.vb: Public ReadOnly Property Triple As Triple
  overload: VDS.RDF.TripleEventArgs.Triple*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.TripleEventArgs.Graph
  commentId: P:VDS.RDF.TripleEventArgs.Graph
  id: Graph
  parent: VDS.RDF.TripleEventArgs
  langs:
  - csharp
  - vb
  name: Graph
  nameWithType: TripleEventArgs.Graph
  fullName: VDS.RDF.TripleEventArgs.Graph
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Events.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Graph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Events.cs
    startLine: 145
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Graph the Triple belongs to (may be null).\n"
  example: []
  syntax:
    content: public IGraph Graph { get; }
    parameters: []
    return:
      type: VDS.RDF.IGraph
    content.vb: Public ReadOnly Property Graph As IGraph
  overload: VDS.RDF.TripleEventArgs.Graph*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.TripleEventArgs.GraphUri
  commentId: P:VDS.RDF.TripleEventArgs.GraphUri
  id: GraphUri
  parent: VDS.RDF.TripleEventArgs
  langs:
  - csharp
  - vb
  name: GraphUri
  nameWithType: TripleEventArgs.GraphUri
  fullName: VDS.RDF.TripleEventArgs.GraphUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Events.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GraphUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Events.cs
    startLine: 160
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the URI of the Graph the Triple belongs to (may be null).\n"
  example: []
  syntax:
    content: public Uri GraphUri { get; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public ReadOnly Property GraphUri As Uri
  overload: VDS.RDF.TripleEventArgs.GraphUri*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.TripleEventArgs.WasAsserted
  commentId: P:VDS.RDF.TripleEventArgs.WasAsserted
  id: WasAsserted
  parent: VDS.RDF.TripleEventArgs
  langs:
  - csharp
  - vb
  name: WasAsserted
  nameWithType: TripleEventArgs.WasAsserted
  fullName: VDS.RDF.TripleEventArgs.WasAsserted
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Events.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WasAsserted
    path: ../../dotNetRDF/Libraries/dotNetRDF/Events.cs
    startLine: 171
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether the Triple was asserted.\n"
  example: []
  syntax:
    content: public bool WasAsserted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property WasAsserted As Boolean
  overload: VDS.RDF.TripleEventArgs.WasAsserted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.TripleEventArgs.WasRetracted
  commentId: P:VDS.RDF.TripleEventArgs.WasRetracted
  id: WasRetracted
  parent: VDS.RDF.TripleEventArgs
  langs:
  - csharp
  - vb
  name: WasRetracted
  nameWithType: TripleEventArgs.WasRetracted
  fullName: VDS.RDF.TripleEventArgs.WasRetracted
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Events.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WasRetracted
    path: ../../dotNetRDF/Libraries/dotNetRDF/Events.cs
    startLine: 182
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets whether the Triple was retracted.\n"
  example: []
  syntax:
    content: public bool WasRetracted { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property WasRetracted As Boolean
  overload: VDS.RDF.TripleEventArgs.WasRetracted*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleEventArgs.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TripleEventArgs>()
  nameWithType: Extensions.AsEnumerable<TripleEventArgs>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.TripleEventArgs>()
  nameWithType.vb: Extensions.AsEnumerable(Of TripleEventArgs)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.TripleEventArgs)()
  name.vb: AsEnumerable(Of TripleEventArgs)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TripleEventArgs>
    nameWithType: Extensions.AsEnumerable<TripleEventArgs>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.TripleEventArgs>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TripleEventArgs)
    nameWithType: Extensions.AsEnumerable(Of TripleEventArgs)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.TripleEventArgs)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.TripleEventArgs.#ctor*
  commentId: Overload:VDS.RDF.TripleEventArgs.#ctor
  name: TripleEventArgs
  nameWithType: TripleEventArgs.TripleEventArgs
  fullName: VDS.RDF.TripleEventArgs.TripleEventArgs
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.TripleEventArgs.Triple*
  commentId: Overload:VDS.RDF.TripleEventArgs.Triple
  name: Triple
  nameWithType: TripleEventArgs.Triple
  fullName: VDS.RDF.TripleEventArgs.Triple
- uid: VDS.RDF.TripleEventArgs.Graph*
  commentId: Overload:VDS.RDF.TripleEventArgs.Graph
  name: Graph
  nameWithType: TripleEventArgs.Graph
  fullName: VDS.RDF.TripleEventArgs.Graph
- uid: VDS.RDF.TripleEventArgs.GraphUri*
  commentId: Overload:VDS.RDF.TripleEventArgs.GraphUri
  name: GraphUri
  nameWithType: TripleEventArgs.GraphUri
  fullName: VDS.RDF.TripleEventArgs.GraphUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.TripleEventArgs.WasAsserted*
  commentId: Overload:VDS.RDF.TripleEventArgs.WasAsserted
  name: WasAsserted
  nameWithType: TripleEventArgs.WasAsserted
  fullName: VDS.RDF.TripleEventArgs.WasAsserted
- uid: VDS.RDF.TripleEventArgs.WasRetracted*
  commentId: Overload:VDS.RDF.TripleEventArgs.WasRetracted
  name: WasRetracted
  nameWithType: TripleEventArgs.WasRetracted
  fullName: VDS.RDF.TripleEventArgs.WasRetracted
