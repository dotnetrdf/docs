### YamlMime:ManagedReference
items:
- uid: VDS.RDF.JsonLd.Processors.NodeMapGenerator
  commentId: T:VDS.RDF.JsonLd.Processors.NodeMapGenerator
  id: NodeMapGenerator
  parent: VDS.RDF.JsonLd.Processors
  children:
  - VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateMergedNodeMap(Newtonsoft.Json.Linq.JObject)
  - VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateNodeMap(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.IBlankNodeGenerator)
  langs:
  - csharp
  - vb
  name: NodeMapGenerator
  nameWithType: NodeMapGenerator
  fullName: VDS.RDF.JsonLd.Processors.NodeMapGenerator
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/Processors/NodeMapGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NodeMapGenerator
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/Processors/NodeMapGenerator.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd.Processors
  summary: "\nAn implementation of the JSON-LD node map generation algorithm.\n"
  example: []
  syntax:
    content: 'public class NodeMapGenerator : INodeMapGenerator'
    content.vb: >-
      Public Class NodeMapGenerator
          Implements INodeMapGenerator
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.JsonLd.INodeMapGenerator
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.JsonLd.Processors.NodeMapGenerator.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateNodeMap(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.IBlankNodeGenerator)
  commentId: M:VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateNodeMap(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.IBlankNodeGenerator)
  id: GenerateNodeMap(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.IBlankNodeGenerator)
  parent: VDS.RDF.JsonLd.Processors.NodeMapGenerator
  langs:
  - csharp
  - vb
  name: GenerateNodeMap(JToken, IBlankNodeGenerator)
  nameWithType: NodeMapGenerator.GenerateNodeMap(JToken, IBlankNodeGenerator)
  fullName: VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateNodeMap(Newtonsoft.Json.Linq.JToken, VDS.RDF.JsonLd.IBlankNodeGenerator)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/Processors/NodeMapGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GenerateNodeMap
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/Processors/NodeMapGenerator.cs
    startLine: 45
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd.Processors
  summary: "\nApplies the Node Map Generation algorithm to the specified input.\n"
  example: []
  syntax:
    content: public JObject GenerateNodeMap(JToken element, IBlankNodeGenerator identifierGenerator = null)
    parameters:
    - id: element
      type: Newtonsoft.Json.Linq.JToken
      description: The element to be processed.
    - id: identifierGenerator
      type: VDS.RDF.JsonLd.IBlankNodeGenerator
      description: The identifier generator instance to use when creating new blank node identifiers. Defaults to a new instance of <xref href="VDS.RDF.JsonLd.Processors.BlankNodeGenerator" data-throw-if-not-resolved="false"></xref>.
    return:
      type: Newtonsoft.Json.Linq.JObject
      description: The generated node map dictionary as a JObject instance.
    content.vb: Public Function GenerateNodeMap(element As JToken, identifierGenerator As IBlankNodeGenerator = Nothing) As JObject
  overload: VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateNodeMap*
  implements:
  - VDS.RDF.JsonLd.INodeMapGenerator.GenerateNodeMap(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.IBlankNodeGenerator)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateMergedNodeMap(Newtonsoft.Json.Linq.JObject)
  commentId: M:VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateMergedNodeMap(Newtonsoft.Json.Linq.JObject)
  id: GenerateMergedNodeMap(Newtonsoft.Json.Linq.JObject)
  parent: VDS.RDF.JsonLd.Processors.NodeMapGenerator
  langs:
  - csharp
  - vb
  name: GenerateMergedNodeMap(JObject)
  nameWithType: NodeMapGenerator.GenerateMergedNodeMap(JObject)
  fullName: VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateMergedNodeMap(Newtonsoft.Json.Linq.JObject)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/Processors/NodeMapGenerator.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GenerateMergedNodeMap
    path: ../../dotNetRDF/Libraries/dotNetRDF/JsonLd/Processors/NodeMapGenerator.cs
    startLine: 312
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd.Processors
  summary: "\nCreates a new node map object by merging the graph-level node maps contained in the input graph map object.\n"
  example: []
  syntax:
    content: public JObject GenerateMergedNodeMap(JObject graphMap)
    parameters:
    - id: graphMap
      type: Newtonsoft.Json.Linq.JObject
      description: The input graph map to be merged.
    return:
      type: Newtonsoft.Json.Linq.JObject
      description: The merged node map as a new object (the original node map is not modified).
    content.vb: Public Function GenerateMergedNodeMap(graphMap As JObject) As JObject
  overload: VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateMergedNodeMap*
  implements:
  - VDS.RDF.JsonLd.INodeMapGenerator.GenerateMergedNodeMap(Newtonsoft.Json.Linq.JObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.JsonLd.Processors
  commentId: N:VDS.RDF.JsonLd.Processors
  name: VDS.RDF.JsonLd.Processors
  nameWithType: VDS.RDF.JsonLd.Processors
  fullName: VDS.RDF.JsonLd.Processors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.JsonLd.INodeMapGenerator
  commentId: T:VDS.RDF.JsonLd.INodeMapGenerator
  parent: VDS.RDF.JsonLd
  name: INodeMapGenerator
  nameWithType: INodeMapGenerator
  fullName: VDS.RDF.JsonLd.INodeMapGenerator
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.JsonLd.Processors.NodeMapGenerator.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<NodeMapGenerator>()
  nameWithType: Extensions.AsEnumerable<NodeMapGenerator>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.JsonLd.Processors.NodeMapGenerator>()
  nameWithType.vb: Extensions.AsEnumerable(Of NodeMapGenerator)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.JsonLd.Processors.NodeMapGenerator)()
  name.vb: AsEnumerable(Of NodeMapGenerator)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<NodeMapGenerator>
    nameWithType: Extensions.AsEnumerable<NodeMapGenerator>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.JsonLd.Processors.NodeMapGenerator>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of NodeMapGenerator)
    nameWithType: Extensions.AsEnumerable(Of NodeMapGenerator)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.JsonLd.Processors.NodeMapGenerator)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.JsonLd
  commentId: N:VDS.RDF.JsonLd
  name: VDS.RDF.JsonLd
  nameWithType: VDS.RDF.JsonLd
  fullName: VDS.RDF.JsonLd
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.JsonLd.Processors.BlankNodeGenerator
  commentId: T:VDS.RDF.JsonLd.Processors.BlankNodeGenerator
  name: BlankNodeGenerator
  nameWithType: BlankNodeGenerator
  fullName: VDS.RDF.JsonLd.Processors.BlankNodeGenerator
- uid: VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateNodeMap*
  commentId: Overload:VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateNodeMap
  name: GenerateNodeMap
  nameWithType: NodeMapGenerator.GenerateNodeMap
  fullName: VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateNodeMap
- uid: VDS.RDF.JsonLd.INodeMapGenerator.GenerateNodeMap(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.IBlankNodeGenerator)
  commentId: M:VDS.RDF.JsonLd.INodeMapGenerator.GenerateNodeMap(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.IBlankNodeGenerator)
  parent: VDS.RDF.JsonLd.INodeMapGenerator
  isExternal: true
  name: GenerateNodeMap(JToken, IBlankNodeGenerator)
  nameWithType: INodeMapGenerator.GenerateNodeMap(JToken, IBlankNodeGenerator)
  fullName: VDS.RDF.JsonLd.INodeMapGenerator.GenerateNodeMap(Newtonsoft.Json.Linq.JToken, VDS.RDF.JsonLd.IBlankNodeGenerator)
  spec.csharp:
  - uid: VDS.RDF.JsonLd.INodeMapGenerator.GenerateNodeMap(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.IBlankNodeGenerator)
    name: GenerateNodeMap
    nameWithType: INodeMapGenerator.GenerateNodeMap
    fullName: VDS.RDF.JsonLd.INodeMapGenerator.GenerateNodeMap
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.JsonLd.IBlankNodeGenerator
    name: IBlankNodeGenerator
    nameWithType: IBlankNodeGenerator
    fullName: VDS.RDF.JsonLd.IBlankNodeGenerator
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.JsonLd.INodeMapGenerator.GenerateNodeMap(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.IBlankNodeGenerator)
    name: GenerateNodeMap
    nameWithType: INodeMapGenerator.GenerateNodeMap
    fullName: VDS.RDF.JsonLd.INodeMapGenerator.GenerateNodeMap
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JToken
    name: JToken
    nameWithType: JToken
    fullName: Newtonsoft.Json.Linq.JToken
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.JsonLd.IBlankNodeGenerator
    name: IBlankNodeGenerator
    nameWithType: IBlankNodeGenerator
    fullName: VDS.RDF.JsonLd.IBlankNodeGenerator
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq.JToken
  commentId: T:Newtonsoft.Json.Linq.JToken
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JToken
  nameWithType: JToken
  fullName: Newtonsoft.Json.Linq.JToken
- uid: VDS.RDF.JsonLd.IBlankNodeGenerator
  commentId: T:VDS.RDF.JsonLd.IBlankNodeGenerator
  parent: VDS.RDF.JsonLd
  name: IBlankNodeGenerator
  nameWithType: IBlankNodeGenerator
  fullName: VDS.RDF.JsonLd.IBlankNodeGenerator
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateMergedNodeMap*
  commentId: Overload:VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateMergedNodeMap
  name: GenerateMergedNodeMap
  nameWithType: NodeMapGenerator.GenerateMergedNodeMap
  fullName: VDS.RDF.JsonLd.Processors.NodeMapGenerator.GenerateMergedNodeMap
- uid: VDS.RDF.JsonLd.INodeMapGenerator.GenerateMergedNodeMap(Newtonsoft.Json.Linq.JObject)
  commentId: M:VDS.RDF.JsonLd.INodeMapGenerator.GenerateMergedNodeMap(Newtonsoft.Json.Linq.JObject)
  parent: VDS.RDF.JsonLd.INodeMapGenerator
  isExternal: true
  name: GenerateMergedNodeMap(JObject)
  nameWithType: INodeMapGenerator.GenerateMergedNodeMap(JObject)
  fullName: VDS.RDF.JsonLd.INodeMapGenerator.GenerateMergedNodeMap(Newtonsoft.Json.Linq.JObject)
  spec.csharp:
  - uid: VDS.RDF.JsonLd.INodeMapGenerator.GenerateMergedNodeMap(Newtonsoft.Json.Linq.JObject)
    name: GenerateMergedNodeMap
    nameWithType: INodeMapGenerator.GenerateMergedNodeMap
    fullName: VDS.RDF.JsonLd.INodeMapGenerator.GenerateMergedNodeMap
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.JsonLd.INodeMapGenerator.GenerateMergedNodeMap(Newtonsoft.Json.Linq.JObject)
    name: GenerateMergedNodeMap
    nameWithType: INodeMapGenerator.GenerateMergedNodeMap
    fullName: VDS.RDF.JsonLd.INodeMapGenerator.GenerateMergedNodeMap
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
