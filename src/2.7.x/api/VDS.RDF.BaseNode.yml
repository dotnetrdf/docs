### YamlMime:ManagedReference
items:
- uid: VDS.RDF.BaseNode
  commentId: T:VDS.RDF.BaseNode
  id: BaseNode
  parent: VDS.RDF
  children:
  - VDS.RDF.BaseNode.#ctor(VDS.RDF.IGraph,VDS.RDF.NodeType)
  - VDS.RDF.BaseNode._graph
  - VDS.RDF.BaseNode._graphUri
  - VDS.RDF.BaseNode._hashcode
  - VDS.RDF.BaseNode._nodetype
  - VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
  - VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  - VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
  - VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
  - VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
  - VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
  - VDS.RDF.BaseNode.Equals(System.Object)
  - VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
  - VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
  - VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
  - VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
  - VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
  - VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
  - VDS.RDF.BaseNode.GetHashCode
  - VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.BaseNode.GetSchema
  - VDS.RDF.BaseNode.Graph
  - VDS.RDF.BaseNode.GraphUri
  - VDS.RDF.BaseNode.NodeType
  - VDS.RDF.BaseNode.op_Equality(VDS.RDF.BaseNode,VDS.RDF.BaseNode)
  - VDS.RDF.BaseNode.op_Inequality(VDS.RDF.BaseNode,VDS.RDF.BaseNode)
  - VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
  - VDS.RDF.BaseNode.ToString
  - VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  - VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  - VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: BaseNode
  nameWithType: BaseNode
  fullName: VDS.RDF.BaseNode
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseNode
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAbstract Class for Nodes, implements the two basic properties of the INode Interface.\n"
  example: []
  syntax:
    content: 'public abstract class BaseNode : INode, IComparable<INode>, IComparable<IBlankNode>, IComparable<IGraphLiteralNode>, IComparable<ILiteralNode>, IComparable<IUriNode>, IComparable<IVariableNode>, IEquatable<INode>, IEquatable<IBlankNode>, IEquatable<IGraphLiteralNode>, IEquatable<ILiteralNode>, IEquatable<IUriNode>, IEquatable<IVariableNode>, ISerializable, IXmlSerializable'
    content.vb: >-
      Public MustInherit Class BaseNode
          Implements INode, IComparable(Of INode), IComparable(Of IBlankNode), IComparable(Of IGraphLiteralNode), IComparable(Of ILiteralNode), IComparable(Of IUriNode), IComparable(Of IVariableNode), IEquatable(Of INode), IEquatable(Of IBlankNode), IEquatable(Of IGraphLiteralNode), IEquatable(Of ILiteralNode), IEquatable(Of IUriNode), IEquatable(Of IVariableNode), ISerializable, IXmlSerializable
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.BaseBlankNode
  - VDS.RDF.BaseGraphLiteralNode
  - VDS.RDF.BaseLiteralNode
  - VDS.RDF.BaseUriNode
  - VDS.RDF.BaseVariableNode
  implements:
  - VDS.RDF.INode
  - System.IComparable{VDS.RDF.INode}
  - System.IComparable{VDS.RDF.IBlankNode}
  - System.IComparable{VDS.RDF.IGraphLiteralNode}
  - System.IComparable{VDS.RDF.ILiteralNode}
  - System.IComparable{VDS.RDF.IUriNode}
  - System.IComparable{VDS.RDF.IVariableNode}
  - System.IEquatable{VDS.RDF.INode}
  - System.IEquatable{VDS.RDF.IBlankNode}
  - System.IEquatable{VDS.RDF.IGraphLiteralNode}
  - System.IEquatable{VDS.RDF.ILiteralNode}
  - System.IEquatable{VDS.RDF.IUriNode}
  - System.IEquatable{VDS.RDF.IVariableNode}
  - System.Runtime.Serialization.ISerializable
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.BaseNode.VDS.RDF.Extensions.AsEnumerable``1
  - VDS.RDF.INode.VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  - VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  - VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.INode.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  - VDS.RDF.INode.VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.BaseNode._graph
  commentId: F:VDS.RDF.BaseNode._graph
  id: _graph
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: _graph
  nameWithType: BaseNode._graph
  fullName: VDS.RDF.BaseNode._graph
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _graph
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 43
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReference to the Graph that the Node belongs to.\n"
  example: []
  syntax:
    content: protected IGraph _graph
    return:
      type: VDS.RDF.IGraph
    content.vb: Protected _graph As IGraph
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseNode._graphUri
  commentId: F:VDS.RDF.BaseNode._graphUri
  id: _graphUri
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: _graphUri
  nameWithType: BaseNode._graphUri
  fullName: VDS.RDF.BaseNode._graphUri
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _graphUri
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nUri of the Graph that the Node belongs to.\n"
  example: []
  syntax:
    content: protected Uri _graphUri
    return:
      type: System.Uri
    content.vb: Protected _graphUri As Uri
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseNode._nodetype
  commentId: F:VDS.RDF.BaseNode._nodetype
  id: _nodetype
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: _nodetype
  nameWithType: BaseNode._nodetype
  fullName: VDS.RDF.BaseNode._nodetype
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _nodetype
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNode Type for the Node.\n"
  example: []
  syntax:
    content: protected NodeType _nodetype
    return:
      type: VDS.RDF.NodeType
    content.vb: Protected _nodetype As NodeType
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseNode._hashcode
  commentId: F:VDS.RDF.BaseNode._hashcode
  id: _hashcode
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: _hashcode
  nameWithType: BaseNode._hashcode
  fullName: VDS.RDF.BaseNode._hashcode
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _hashcode
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nStores the computed Hash Code for this Node.\n"
  example: []
  syntax:
    content: protected int _hashcode
    return:
      type: System.Int32
    content.vb: Protected _hashcode As Integer
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseNode.#ctor(VDS.RDF.IGraph,VDS.RDF.NodeType)
  commentId: M:VDS.RDF.BaseNode.#ctor(VDS.RDF.IGraph,VDS.RDF.NodeType)
  id: '#ctor(VDS.RDF.IGraph,VDS.RDF.NodeType)'
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: BaseNode(IGraph, NodeType)
  nameWithType: BaseNode.BaseNode(IGraph, NodeType)
  fullName: VDS.RDF.BaseNode.BaseNode(VDS.RDF.IGraph, VDS.RDF.NodeType)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nBase Constructor which instantiates the Graph reference, Graph Uri and Node Type of the Node.\n"
  example: []
  syntax:
    content: public BaseNode(IGraph g, NodeType type)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this Node is in.
    - id: type
      type: VDS.RDF.NodeType
      description: Node Type.
    content.vb: Public Sub New(g As IGraph, type As NodeType)
  overload: VDS.RDF.BaseNode.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseNode.NodeType
  commentId: P:VDS.RDF.BaseNode.NodeType
  id: NodeType
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: NodeType
  nameWithType: BaseNode.NodeType
  fullName: VDS.RDF.BaseNode.NodeType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NodeType
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 72
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes have a Type.\n"
  example: []
  syntax:
    content: public NodeType NodeType { get; }
    parameters: []
    return:
      type: VDS.RDF.NodeType
    content.vb: Public ReadOnly Property NodeType As NodeType
  overload: VDS.RDF.BaseNode.NodeType*
  implements:
  - VDS.RDF.INode.NodeType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.BaseNode.Graph
  commentId: P:VDS.RDF.BaseNode.Graph
  id: Graph
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: Graph
  nameWithType: BaseNode.Graph
  fullName: VDS.RDF.BaseNode.Graph
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Graph
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 83
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes belong to a Graph.\n"
  example: []
  syntax:
    content: public IGraph Graph { get; }
    parameters: []
    return:
      type: VDS.RDF.IGraph
    content.vb: Public ReadOnly Property Graph As IGraph
  overload: VDS.RDF.BaseNode.Graph*
  implements:
  - VDS.RDF.INode.Graph
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.BaseNode.GraphUri
  commentId: P:VDS.RDF.BaseNode.GraphUri
  id: GraphUri
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: GraphUri
  nameWithType: BaseNode.GraphUri
  fullName: VDS.RDF.BaseNode.GraphUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GraphUri
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 94
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets/Sets the Graph Uri of the Node.\n"
  example: []
  syntax:
    content: public Uri GraphUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property GraphUri As Uri
  overload: VDS.RDF.BaseNode.GraphUri*
  implements:
  - VDS.RDF.INode.GraphUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseNode.Equals(System.Object)
  commentId: M:VDS.RDF.BaseNode.Equals(System.Object)
  id: Equals(System.Object)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BaseNode.Equals(Object)
  fullName: VDS.RDF.BaseNode.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 111
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement an Equals method.\n"
  example: []
  syntax:
    content: public abstract override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object to compare against.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public MustOverride Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: VDS.RDF.BaseNode.Equals*
  modifiers.csharp:
  - public
  - abstract
  - override
  modifiers.vb:
  - Public
  - MustOverride
  - Overrides
- uid: VDS.RDF.BaseNode.ToString
  commentId: M:VDS.RDF.BaseNode.ToString
  id: ToString
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BaseNode.ToString()
  fullName: VDS.RDF.BaseNode.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 125
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement a ToString method.\n"
  remarks: "\n<p>\nEssential for the implementation of GetHashCode to work correctly, Nodes should generate a String representation that is &apos;unique&apos; as far as that is possible.\n</p>\n<p>\nAny two Nodes which match via the Equals method (based on strict RDF Specification Equality) should produce the same String representation since Hash Codes are generated by calling GetHashCode on this String.\n</p>\n"
  example: []
  syntax:
    content: public abstract override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public MustOverride Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VDS.RDF.BaseNode.ToString*
  implements:
  - VDS.RDF.INode.ToString
  modifiers.csharp:
  - public
  - abstract
  - override
  modifiers.vb:
  - Public
  - MustOverride
  - Overrides
- uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  commentId: M:VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  id: ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: ToString(INodeFormatter)
  nameWithType: BaseNode.ToString(INodeFormatter)
  fullName: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 132
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the String representation of the Node formatted with the given Node formatter.\n"
  example: []
  syntax:
    content: public virtual string ToString(INodeFormatter formatter)
    parameters:
    - id: formatter
      type: VDS.RDF.Writing.Formatting.INodeFormatter
      description: Formatter.
    return:
      type: System.String
      description: ''
    content.vb: Public Overridable Function ToString(formatter As INodeFormatter) As String
  overload: VDS.RDF.BaseNode.ToString*
  implements:
  - VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  commentId: M:VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  id: ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: ToString(INodeFormatter, TripleSegment)
  nameWithType: BaseNode.ToString(INodeFormatter, TripleSegment)
  fullName: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter, VDS.RDF.Writing.TripleSegment)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 143
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the String representation of the Node formatted with the given Node formatter.\n"
  example: []
  syntax:
    content: public virtual string ToString(INodeFormatter formatter, TripleSegment segment)
    parameters:
    - id: formatter
      type: VDS.RDF.Writing.Formatting.INodeFormatter
      description: Formatter.
    - id: segment
      type: VDS.RDF.Writing.TripleSegment
      description: Triple Segment.
    return:
      type: System.String
      description: ''
    content.vb: Public Overridable Function ToString(formatter As INodeFormatter, segment As TripleSegment) As String
  overload: VDS.RDF.BaseNode.ToString*
  implements:
  - VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseNode.GetHashCode
  commentId: M:VDS.RDF.BaseNode.GetHashCode
  id: GetHashCode
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BaseNode.GetHashCode()
  fullName: VDS.RDF.BaseNode.GetHashCode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetHashCode
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 160
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets a Hash Code for a Node.\n"
  remarks: "\n<p>\nImplemented by getting the Hash Code of the result of ToString for a Node prefixed with its Node Type, this is pre-computed for efficiency when a Node is created since Nodes are immutable.  See remarks on ToString for more detail.\n</p>\n<p>\nSince Hash Codes are based on a String representation there is no guarantee of uniqueness though the same Node will always give the same Hash Code (on a given Platform - see the MSDN Documentation for <xref href=\"System.String.GetHashCode\" data-throw-if-not-resolved=\"false\"></xref> for further details).\n</p>\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: VDS.RDF.BaseNode.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseNode.op_Equality(VDS.RDF.BaseNode,VDS.RDF.BaseNode)
  commentId: M:VDS.RDF.BaseNode.op_Equality(VDS.RDF.BaseNode,VDS.RDF.BaseNode)
  id: op_Equality(VDS.RDF.BaseNode,VDS.RDF.BaseNode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: Equality(BaseNode, BaseNode)
  nameWithType: BaseNode.Equality(BaseNode, BaseNode)
  fullName: VDS.RDF.BaseNode.Equality(VDS.RDF.BaseNode, VDS.RDF.BaseNode)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Equality
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 172
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nThe Equality operator is defined for Nodes.\n"
  remarks: Uses the Equals method to evaluate the result.
  example: []
  syntax:
    content: public static bool operator ==(BaseNode a, BaseNode b)
    parameters:
    - id: a
      type: VDS.RDF.BaseNode
      description: First Node.
    - id: b
      type: VDS.RDF.BaseNode
      description: Second Node.
    return:
      type: System.Boolean
      description: Whether the two Nodes are equal.
    content.vb: Public Shared Operator =(a As BaseNode, b As BaseNode) As Boolean
  overload: VDS.RDF.BaseNode.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.BaseNode.op_Inequality(VDS.RDF.BaseNode,VDS.RDF.BaseNode)
  commentId: M:VDS.RDF.BaseNode.op_Inequality(VDS.RDF.BaseNode,VDS.RDF.BaseNode)
  id: op_Inequality(VDS.RDF.BaseNode,VDS.RDF.BaseNode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: Inequality(BaseNode, BaseNode)
  nameWithType: BaseNode.Inequality(BaseNode, BaseNode)
  fullName: VDS.RDF.BaseNode.Inequality(VDS.RDF.BaseNode, VDS.RDF.BaseNode)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Inequality
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 192
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nThe Non-Equality operator is defined for Nodes.\n"
  remarks: Uses the Equals method to evaluate the result.
  example: []
  syntax:
    content: public static bool operator !=(BaseNode a, BaseNode b)
    parameters:
    - id: a
      type: VDS.RDF.BaseNode
      description: First Node.
    - id: b
      type: VDS.RDF.BaseNode
      description: Second Node.
    return:
      type: System.Boolean
      description: Whether the two Nodes are non-equal.
    content.vb: Public Shared Operator <>(a As BaseNode, b As BaseNode) As Boolean
  overload: VDS.RDF.BaseNode.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
  id: CompareTo(VDS.RDF.INode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: CompareTo(INode)
  nameWithType: BaseNode.CompareTo(INode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 213
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement a CompareTo method to allow them to be Sorted.\n"
  remarks: "\nImplementations should use the SPARQL Term Sort Order for ordering nodes (as opposed to value sort order).  Standard implementations of Node type specific comparisons can be found in <xref href=\"VDS.RDF.ComparisonHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract int CompareTo(INode other)
    parameters:
    - id: other
      type: VDS.RDF.INode
      description: Node to compare self to.
    return:
      type: System.Int32
      description: ''
    content.vb: Public MustOverride Function CompareTo(other As INode) As Integer
  overload: VDS.RDF.BaseNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.INode}.CompareTo(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
  id: CompareTo(VDS.RDF.IBlankNode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: CompareTo(IBlankNode)
  nameWithType: BaseNode.CompareTo(IBlankNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 223
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement a CompareTo method to allow them to be Sorted.\n"
  remarks: "\nImplementations should use the SPARQL Term Sort Order for ordering nodes (as opposed to value sort order).  Standard implementations of Node type specific comparisons can be found in <xref href=\"VDS.RDF.ComparisonHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract int CompareTo(IBlankNode other)
    parameters:
    - id: other
      type: VDS.RDF.IBlankNode
      description: Node to compare self to.
    return:
      type: System.Int32
      description: ''
    content.vb: Public MustOverride Function CompareTo(other As IBlankNode) As Integer
  overload: VDS.RDF.BaseNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IBlankNode}.CompareTo(VDS.RDF.IBlankNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  id: CompareTo(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: CompareTo(IGraphLiteralNode)
  nameWithType: BaseNode.CompareTo(IGraphLiteralNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 233
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement a CompareTo method to allow them to be Sorted.\n"
  remarks: "\nImplementations should use the SPARQL Term Sort Order for ordering nodes (as opposed to value sort order).  Standard implementations of Node type specific comparisons can be found in <xref href=\"VDS.RDF.ComparisonHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract int CompareTo(IGraphLiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.IGraphLiteralNode
      description: Node to compare self to.
    return:
      type: System.Int32
      description: ''
    content.vb: Public MustOverride Function CompareTo(other As IGraphLiteralNode) As Integer
  overload: VDS.RDF.BaseNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IGraphLiteralNode}.CompareTo(VDS.RDF.IGraphLiteralNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
  id: CompareTo(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: CompareTo(ILiteralNode)
  nameWithType: BaseNode.CompareTo(ILiteralNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 243
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement a CompareTo method to allow them to be Sorted.\n"
  remarks: "\nImplementations should use the SPARQL Term Sort Order for ordering nodes (as opposed to value sort order).  Standard implementations of Node type specific comparisons can be found in <xref href=\"VDS.RDF.ComparisonHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract int CompareTo(ILiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.ILiteralNode
      description: Node to compare self to.
    return:
      type: System.Int32
      description: ''
    content.vb: Public MustOverride Function CompareTo(other As ILiteralNode) As Integer
  overload: VDS.RDF.BaseNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.ILiteralNode}.CompareTo(VDS.RDF.ILiteralNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
  id: CompareTo(VDS.RDF.IUriNode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: CompareTo(IUriNode)
  nameWithType: BaseNode.CompareTo(IUriNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 253
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement a CompareTo method to allow them to be Sorted.\n"
  remarks: "\nImplementations should use the SPARQL Term Sort Order for ordering nodes (as opposed to value sort order).  Standard implementations of Node type specific comparisons can be found in <xref href=\"VDS.RDF.ComparisonHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract int CompareTo(IUriNode other)
    parameters:
    - id: other
      type: VDS.RDF.IUriNode
      description: Node to compare self to.
    return:
      type: System.Int32
      description: ''
    content.vb: Public MustOverride Function CompareTo(other As IUriNode) As Integer
  overload: VDS.RDF.BaseNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IUriNode}.CompareTo(VDS.RDF.IUriNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
  id: CompareTo(VDS.RDF.IVariableNode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: CompareTo(IVariableNode)
  nameWithType: BaseNode.CompareTo(IVariableNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 263
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement a CompareTo method to allow them to be Sorted.\n"
  remarks: "\nImplementations should use the SPARQL Term Sort Order for ordering nodes (as opposed to value sort order).  Standard implementations of Node type specific comparisons can be found in <xref href=\"VDS.RDF.ComparisonHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract int CompareTo(IVariableNode other)
    parameters:
    - id: other
      type: VDS.RDF.IVariableNode
      description: Node to compare self to.
    return:
      type: System.Int32
      description: ''
    content.vb: Public MustOverride Function CompareTo(other As IVariableNode) As Integer
  overload: VDS.RDF.BaseNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IVariableNode}.CompareTo(VDS.RDF.IVariableNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
  id: Equals(VDS.RDF.INode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: Equals(INode)
  nameWithType: BaseNode.Equals(INode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 273
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement an Equals method so we can do type specific equality.\n"
  remarks: "\nNodes implementations are also required to implement an override of the non-generic Equals method.  Standard implementations of some equality comparisons can be found in <xref href=\"VDS.RDF.EqualityHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract bool Equals(INode other)
    parameters:
    - id: other
      type: VDS.RDF.INode
      description: Node to check for equality.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public MustOverride Function Equals(other As INode) As Boolean
  overload: VDS.RDF.BaseNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.INode}.Equals(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
  id: Equals(VDS.RDF.IBlankNode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: Equals(IBlankNode)
  nameWithType: BaseNode.Equals(IBlankNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 283
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement an Equals method so we can do type specific equality.\n"
  remarks: "\nNodes implementations are also required to implement an override of the non-generic Equals method.  Standard implementations of some equality comparisons can be found in <xref href=\"VDS.RDF.EqualityHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract bool Equals(IBlankNode other)
    parameters:
    - id: other
      type: VDS.RDF.IBlankNode
      description: Node to check for equality.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public MustOverride Function Equals(other As IBlankNode) As Boolean
  overload: VDS.RDF.BaseNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IBlankNode}.Equals(VDS.RDF.IBlankNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
  id: Equals(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: Equals(IGraphLiteralNode)
  nameWithType: BaseNode.Equals(IGraphLiteralNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 293
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement an Equals method so we can do type specific equality.\n"
  remarks: "\nNodes implementations are also required to implement an override of the non-generic Equals method.  Standard implementations of some equality comparisons can be found in <xref href=\"VDS.RDF.EqualityHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract bool Equals(IGraphLiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.IGraphLiteralNode
      description: Node to check for equality.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public MustOverride Function Equals(other As IGraphLiteralNode) As Boolean
  overload: VDS.RDF.BaseNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IGraphLiteralNode}.Equals(VDS.RDF.IGraphLiteralNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
  id: Equals(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: Equals(ILiteralNode)
  nameWithType: BaseNode.Equals(ILiteralNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 303
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement an Equals method so we can do type specific equality.\n"
  remarks: "\nNodes implementations are also required to implement an override of the non-generic Equals method.  Standard implementations of some equality comparisons can be found in <xref href=\"VDS.RDF.EqualityHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract bool Equals(ILiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.ILiteralNode
      description: Node to check for equality.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public MustOverride Function Equals(other As ILiteralNode) As Boolean
  overload: VDS.RDF.BaseNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.ILiteralNode}.Equals(VDS.RDF.ILiteralNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
  id: Equals(VDS.RDF.IUriNode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: Equals(IUriNode)
  nameWithType: BaseNode.Equals(IUriNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 313
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement an Equals method so we can do type specific equality.\n"
  remarks: "\nNodes implementations are also required to implement an override of the non-generic Equals method.  Standard implementations of some equality comparisons can be found in <xref href=\"VDS.RDF.EqualityHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract bool Equals(IUriNode other)
    parameters:
    - id: other
      type: VDS.RDF.IUriNode
      description: Node to check for equality.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public MustOverride Function Equals(other As IUriNode) As Boolean
  overload: VDS.RDF.BaseNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IUriNode}.Equals(VDS.RDF.IUriNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
  id: Equals(VDS.RDF.IVariableNode)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: Equals(IVariableNode)
  nameWithType: BaseNode.Equals(IVariableNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 323
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNodes must implement an Equals method so we can do type specific equality.\n"
  remarks: "\nNodes implementations are also required to implement an override of the non-generic Equals method.  Standard implementations of some equality comparisons can be found in <xref href=\"VDS.RDF.EqualityHelper\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public abstract bool Equals(IVariableNode other)
    parameters:
    - id: other
      type: VDS.RDF.IVariableNode
      description: Node to check for equality.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public MustOverride Function Equals(other As IVariableNode) As Boolean
  overload: VDS.RDF.BaseNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IVariableNode}.Equals(VDS.RDF.IVariableNode)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: BaseNode.GetObjectData(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetObjectData
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 332
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the information for serialization.\n"
  example: []
  syntax:
    content: public virtual void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Public Overridable Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overload: VDS.RDF.BaseNode.GetObjectData*
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseNode.GetSchema
  commentId: M:VDS.RDF.BaseNode.GetSchema
  id: GetSchema
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: GetSchema()
  nameWithType: BaseNode.GetSchema()
  fullName: VDS.RDF.BaseNode.GetSchema()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetSchema
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 341
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the schema for XML serialization.\n"
  example: []
  syntax:
    content: public XmlSchema GetSchema()
    return:
      type: System.Xml.Schema.XmlSchema
      description: ''
    content.vb: Public Function GetSchema As XmlSchema
  overload: VDS.RDF.BaseNode.GetSchema*
  implements:
  - System.Xml.Serialization.IXmlSerializable.GetSchema
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: BaseNode.ReadXml(XmlReader)
  fullName: VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ReadXml
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 350
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReads the data for XML deserialization.\n"
  example: []
  syntax:
    content: public virtual void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: XML Reader.
    content.vb: Public Overridable Sub ReadXml(reader As XmlReader)
  overload: VDS.RDF.BaseNode.ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.BaseNode
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: BaseNode.WriteXml(XmlWriter)
  fullName: VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/BaseNode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WriteXml
    path: Libraries/dotNetRDF/Core/BaseNode.cs
    startLine: 359
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nWrites the data for XML serialization.\n"
  example: []
  syntax:
    content: public virtual void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: XML Writer.
    content.vb: Public Overridable Sub WriteXml(writer As XmlWriter)
  overload: VDS.RDF.BaseNode.WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: System.IComparable{VDS.RDF.INode}
  commentId: T:System.IComparable{VDS.RDF.INode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<INode>
  nameWithType: IComparable<INode>
  fullName: System.IComparable<VDS.RDF.INode>
  nameWithType.vb: IComparable(Of INode)
  fullName.vb: System.IComparable(Of VDS.RDF.INode)
  name.vb: IComparable(Of INode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IBlankNode}
  commentId: T:System.IComparable{VDS.RDF.IBlankNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IBlankNode>
  nameWithType: IComparable<IBlankNode>
  fullName: System.IComparable<VDS.RDF.IBlankNode>
  nameWithType.vb: IComparable(Of IBlankNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IBlankNode)
  name.vb: IComparable(Of IBlankNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IGraphLiteralNode}
  commentId: T:System.IComparable{VDS.RDF.IGraphLiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IGraphLiteralNode>
  nameWithType: IComparable<IGraphLiteralNode>
  fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>
  nameWithType.vb: IComparable(Of IGraphLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IGraphLiteralNode)
  name.vb: IComparable(Of IGraphLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.ILiteralNode}
  commentId: T:System.IComparable{VDS.RDF.ILiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ILiteralNode>
  nameWithType: IComparable<ILiteralNode>
  fullName: System.IComparable<VDS.RDF.ILiteralNode>
  nameWithType.vb: IComparable(Of ILiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.ILiteralNode)
  name.vb: IComparable(Of ILiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IUriNode}
  commentId: T:System.IComparable{VDS.RDF.IUriNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IUriNode>
  nameWithType: IComparable<IUriNode>
  fullName: System.IComparable<VDS.RDF.IUriNode>
  nameWithType.vb: IComparable(Of IUriNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IUriNode)
  name.vb: IComparable(Of IUriNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IVariableNode}
  commentId: T:System.IComparable{VDS.RDF.IVariableNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IVariableNode>
  nameWithType: IComparable<IVariableNode>
  fullName: System.IComparable<VDS.RDF.IVariableNode>
  nameWithType.vb: IComparable(Of IVariableNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IVariableNode)
  name.vb: IComparable(Of IVariableNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.INode}
  commentId: T:System.IEquatable{VDS.RDF.INode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<INode>
  nameWithType: IEquatable<INode>
  fullName: System.IEquatable<VDS.RDF.INode>
  nameWithType.vb: IEquatable(Of INode)
  fullName.vb: System.IEquatable(Of VDS.RDF.INode)
  name.vb: IEquatable(Of INode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IBlankNode}
  commentId: T:System.IEquatable{VDS.RDF.IBlankNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IBlankNode>
  nameWithType: IEquatable<IBlankNode>
  fullName: System.IEquatable<VDS.RDF.IBlankNode>
  nameWithType.vb: IEquatable(Of IBlankNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IBlankNode)
  name.vb: IEquatable(Of IBlankNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IGraphLiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.IGraphLiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IGraphLiteralNode>
  nameWithType: IEquatable<IGraphLiteralNode>
  fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>
  nameWithType.vb: IEquatable(Of IGraphLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IGraphLiteralNode)
  name.vb: IEquatable(Of IGraphLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.ILiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.ILiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ILiteralNode>
  nameWithType: IEquatable<ILiteralNode>
  fullName: System.IEquatable<VDS.RDF.ILiteralNode>
  nameWithType.vb: IEquatable(Of ILiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.ILiteralNode)
  name.vb: IEquatable(Of ILiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IUriNode}
  commentId: T:System.IEquatable{VDS.RDF.IUriNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IUriNode>
  nameWithType: IEquatable<IUriNode>
  fullName: System.IEquatable<VDS.RDF.IUriNode>
  nameWithType.vb: IEquatable(Of IUriNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IUriNode)
  name.vb: IEquatable(Of IUriNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IVariableNode}
  commentId: T:System.IEquatable{VDS.RDF.IVariableNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IVariableNode>
  nameWithType: IEquatable<IVariableNode>
  fullName: System.IEquatable<VDS.RDF.IVariableNode>
  nameWithType.vb: IEquatable(Of IVariableNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IVariableNode)
  name.vb: IEquatable(Of IVariableNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseNode>()
  nameWithType: Extensions.AsEnumerable<BaseNode>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.BaseNode>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseNode)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.BaseNode)()
  name.vb: AsEnumerable(Of BaseNode)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseNode>
    nameWithType: Extensions.AsEnumerable<BaseNode>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.BaseNode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseNode)
    nameWithType: Extensions.AsEnumerable(Of BaseNode)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.BaseNode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  name: IsListRoot(IGraph)
  nameWithType: Extensions.IsListRoot(IGraph)
  fullName: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  name: CopyNode(IGraph)
  nameWithType: Extensions.CopyNode(IGraph)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  name: CopyNode(IGraph, Boolean)
  nameWithType: Extensions.CopyNode(IGraph, Boolean)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  parent: VDS.RDF.Dynamic.DynamicExtensions
  definition: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  name: AsDynamic(Uri)
  nameWithType: DynamicExtensions.AsDynamic(Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  parent: VDS.RDF.Nodes.ValuedNodeExtensions
  definition: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  name: AsValuedNode()
  nameWithType: ValuedNodeExtensions.AsValuedNode()
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode()
  spec.csharp:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  name: IsListRoot(INode, IGraph)
  nameWithType: Extensions.IsListRoot(INode, IGraph)
  fullName: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode, VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  name: CopyNode(INode, IGraph)
  nameWithType: Extensions.CopyNode(INode, IGraph)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode, VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  isExternal: true
  name: CopyNode(INode, IGraph, Boolean)
  nameWithType: Extensions.CopyNode(INode, IGraph, Boolean)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode, VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  isExternal: true
  name: AsDynamic(INode, Uri)
  nameWithType: DynamicExtensions.AsDynamic(INode, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions
  commentId: T:VDS.RDF.Dynamic.DynamicExtensions
  parent: VDS.RDF.Dynamic
  name: DynamicExtensions
  nameWithType: DynamicExtensions
  fullName: VDS.RDF.Dynamic.DynamicExtensions
- uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  name: AsValuedNode(INode)
  nameWithType: ValuedNodeExtensions.AsValuedNode(INode)
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Nodes.ValuedNodeExtensions
  commentId: T:VDS.RDF.Nodes.ValuedNodeExtensions
  parent: VDS.RDF.Nodes
  name: ValuedNodeExtensions
  nameWithType: ValuedNodeExtensions
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions
- uid: VDS.RDF.Dynamic
  commentId: N:VDS.RDF.Dynamic
  name: VDS.RDF.Dynamic
  nameWithType: VDS.RDF.Dynamic
  fullName: VDS.RDF.Dynamic
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.NodeType
  commentId: T:VDS.RDF.NodeType
  parent: VDS.RDF
  name: NodeType
  nameWithType: NodeType
  fullName: VDS.RDF.NodeType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.BaseNode.#ctor*
  commentId: Overload:VDS.RDF.BaseNode.#ctor
  name: BaseNode
  nameWithType: BaseNode.BaseNode
  fullName: VDS.RDF.BaseNode.BaseNode
- uid: VDS.RDF.BaseNode.NodeType*
  commentId: Overload:VDS.RDF.BaseNode.NodeType
  name: NodeType
  nameWithType: BaseNode.NodeType
  fullName: VDS.RDF.BaseNode.NodeType
- uid: VDS.RDF.INode.NodeType
  commentId: P:VDS.RDF.INode.NodeType
  parent: VDS.RDF.INode
  name: NodeType
  nameWithType: INode.NodeType
  fullName: VDS.RDF.INode.NodeType
- uid: VDS.RDF.BaseNode.Graph*
  commentId: Overload:VDS.RDF.BaseNode.Graph
  name: Graph
  nameWithType: BaseNode.Graph
  fullName: VDS.RDF.BaseNode.Graph
- uid: VDS.RDF.INode.Graph
  commentId: P:VDS.RDF.INode.Graph
  parent: VDS.RDF.INode
  name: Graph
  nameWithType: INode.Graph
  fullName: VDS.RDF.INode.Graph
- uid: VDS.RDF.BaseNode.GraphUri*
  commentId: Overload:VDS.RDF.BaseNode.GraphUri
  name: GraphUri
  nameWithType: BaseNode.GraphUri
  fullName: VDS.RDF.BaseNode.GraphUri
- uid: VDS.RDF.INode.GraphUri
  commentId: P:VDS.RDF.INode.GraphUri
  parent: VDS.RDF.INode
  name: GraphUri
  nameWithType: INode.GraphUri
  fullName: VDS.RDF.INode.GraphUri
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.Equals*
  commentId: Overload:VDS.RDF.BaseNode.Equals
  name: Equals
  nameWithType: BaseNode.Equals
  fullName: VDS.RDF.BaseNode.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.ToString*
  commentId: Overload:VDS.RDF.BaseNode.ToString
  name: ToString
  nameWithType: BaseNode.ToString
  fullName: VDS.RDF.BaseNode.ToString
- uid: VDS.RDF.INode.ToString
  commentId: M:VDS.RDF.INode.ToString
  parent: VDS.RDF.INode
  name: ToString()
  nameWithType: INode.ToString()
  fullName: VDS.RDF.INode.ToString()
  spec.csharp:
  - uid: VDS.RDF.INode.ToString
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INode.ToString
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  commentId: M:VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  parent: VDS.RDF.INode
  name: ToString(INodeFormatter)
  nameWithType: INode.ToString(INodeFormatter)
  fullName: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  spec.csharp:
  - uid: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Writing.Formatting.INodeFormatter
  commentId: T:VDS.RDF.Writing.Formatting.INodeFormatter
  parent: VDS.RDF.Writing.Formatting
  name: INodeFormatter
  nameWithType: INodeFormatter
  fullName: VDS.RDF.Writing.Formatting.INodeFormatter
- uid: VDS.RDF.Writing.Formatting
  commentId: N:VDS.RDF.Writing.Formatting
  name: VDS.RDF.Writing.Formatting
  nameWithType: VDS.RDF.Writing.Formatting
  fullName: VDS.RDF.Writing.Formatting
- uid: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  commentId: M:VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  parent: VDS.RDF.INode
  name: ToString(INodeFormatter, TripleSegment)
  nameWithType: INode.ToString(INodeFormatter, TripleSegment)
  fullName: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter, VDS.RDF.Writing.TripleSegment)
  spec.csharp:
  - uid: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Writing.TripleSegment
    name: TripleSegment
    nameWithType: TripleSegment
    fullName: VDS.RDF.Writing.TripleSegment
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Writing.TripleSegment
    name: TripleSegment
    nameWithType: TripleSegment
    fullName: VDS.RDF.Writing.TripleSegment
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Writing.TripleSegment
  commentId: T:VDS.RDF.Writing.TripleSegment
  parent: VDS.RDF.Writing
  name: TripleSegment
  nameWithType: TripleSegment
  fullName: VDS.RDF.Writing.TripleSegment
- uid: VDS.RDF.Writing
  commentId: N:VDS.RDF.Writing
  name: VDS.RDF.Writing
  nameWithType: VDS.RDF.Writing
  fullName: VDS.RDF.Writing
- uid: System.String.GetHashCode
  commentId: M:System.String.GetHashCode
  isExternal: true
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.GetHashCode*
  commentId: Overload:VDS.RDF.BaseNode.GetHashCode
  name: GetHashCode
  nameWithType: BaseNode.GetHashCode
  fullName: VDS.RDF.BaseNode.GetHashCode
- uid: VDS.RDF.BaseNode.op_Equality*
  commentId: Overload:VDS.RDF.BaseNode.op_Equality
  name: Equality
  nameWithType: BaseNode.Equality
  fullName: VDS.RDF.BaseNode.Equality
- uid: VDS.RDF.BaseNode
  commentId: T:VDS.RDF.BaseNode
  parent: VDS.RDF
  name: BaseNode
  nameWithType: BaseNode
  fullName: VDS.RDF.BaseNode
- uid: VDS.RDF.BaseNode.op_Inequality*
  commentId: Overload:VDS.RDF.BaseNode.op_Inequality
  name: Inequality
  nameWithType: BaseNode.Inequality
  fullName: VDS.RDF.BaseNode.Inequality
- uid: VDS.RDF.ComparisonHelper
  commentId: T:VDS.RDF.ComparisonHelper
  name: ComparisonHelper
  nameWithType: ComparisonHelper
  fullName: VDS.RDF.ComparisonHelper
- uid: VDS.RDF.BaseNode.CompareTo*
  commentId: Overload:VDS.RDF.BaseNode.CompareTo
  name: CompareTo
  nameWithType: BaseNode.CompareTo
  fullName: VDS.RDF.BaseNode.CompareTo
- uid: System.IComparable{VDS.RDF.INode}.CompareTo(VDS.RDF.INode)
  commentId: M:System.IComparable{VDS.RDF.INode}.CompareTo(VDS.RDF.INode)
  parent: System.IComparable{VDS.RDF.INode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(INode)
  nameWithType: IComparable<INode>.CompareTo(INode)
  fullName: System.IComparable<VDS.RDF.INode>.CompareTo(VDS.RDF.INode)
  nameWithType.vb: IComparable(Of INode).CompareTo(INode)
  fullName.vb: System.IComparable(Of VDS.RDF.INode).CompareTo(VDS.RDF.INode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<INode>.CompareTo
    fullName: System.IComparable<VDS.RDF.INode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of INode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.INode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IBlankNode}.CompareTo(VDS.RDF.IBlankNode)
  commentId: M:System.IComparable{VDS.RDF.IBlankNode}.CompareTo(VDS.RDF.IBlankNode)
  parent: System.IComparable{VDS.RDF.IBlankNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IBlankNode)
  nameWithType: IComparable<IBlankNode>.CompareTo(IBlankNode)
  fullName: System.IComparable<VDS.RDF.IBlankNode>.CompareTo(VDS.RDF.IBlankNode)
  nameWithType.vb: IComparable(Of IBlankNode).CompareTo(IBlankNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IBlankNode).CompareTo(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IBlankNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IBlankNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IBlankNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IBlankNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IBlankNode
  commentId: T:VDS.RDF.IBlankNode
  parent: VDS.RDF
  name: IBlankNode
  nameWithType: IBlankNode
  fullName: VDS.RDF.IBlankNode
- uid: System.IComparable{VDS.RDF.IGraphLiteralNode}.CompareTo(VDS.RDF.IGraphLiteralNode)
  commentId: M:System.IComparable{VDS.RDF.IGraphLiteralNode}.CompareTo(VDS.RDF.IGraphLiteralNode)
  parent: System.IComparable{VDS.RDF.IGraphLiteralNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IGraphLiteralNode)
  nameWithType: IComparable<IGraphLiteralNode>.CompareTo(IGraphLiteralNode)
  fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>.CompareTo(VDS.RDF.IGraphLiteralNode)
  nameWithType.vb: IComparable(Of IGraphLiteralNode).CompareTo(IGraphLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IGraphLiteralNode).CompareTo(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IGraphLiteralNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IGraphLiteralNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IGraphLiteralNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraphLiteralNode
  commentId: T:VDS.RDF.IGraphLiteralNode
  parent: VDS.RDF
  name: IGraphLiteralNode
  nameWithType: IGraphLiteralNode
  fullName: VDS.RDF.IGraphLiteralNode
- uid: System.IComparable{VDS.RDF.ILiteralNode}.CompareTo(VDS.RDF.ILiteralNode)
  commentId: M:System.IComparable{VDS.RDF.ILiteralNode}.CompareTo(VDS.RDF.ILiteralNode)
  parent: System.IComparable{VDS.RDF.ILiteralNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(ILiteralNode)
  nameWithType: IComparable<ILiteralNode>.CompareTo(ILiteralNode)
  fullName: System.IComparable<VDS.RDF.ILiteralNode>.CompareTo(VDS.RDF.ILiteralNode)
  nameWithType.vb: IComparable(Of ILiteralNode).CompareTo(ILiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.ILiteralNode).CompareTo(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<ILiteralNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.ILiteralNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of ILiteralNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.ILiteralNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: System.IComparable{VDS.RDF.IUriNode}.CompareTo(VDS.RDF.IUriNode)
  commentId: M:System.IComparable{VDS.RDF.IUriNode}.CompareTo(VDS.RDF.IUriNode)
  parent: System.IComparable{VDS.RDF.IUriNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IUriNode)
  nameWithType: IComparable<IUriNode>.CompareTo(IUriNode)
  fullName: System.IComparable<VDS.RDF.IUriNode>.CompareTo(VDS.RDF.IUriNode)
  nameWithType.vb: IComparable(Of IUriNode).CompareTo(IUriNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IUriNode).CompareTo(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IUriNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IUriNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IUriNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IUriNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IUriNode
  commentId: T:VDS.RDF.IUriNode
  parent: VDS.RDF
  name: IUriNode
  nameWithType: IUriNode
  fullName: VDS.RDF.IUriNode
- uid: System.IComparable{VDS.RDF.IVariableNode}.CompareTo(VDS.RDF.IVariableNode)
  commentId: M:System.IComparable{VDS.RDF.IVariableNode}.CompareTo(VDS.RDF.IVariableNode)
  parent: System.IComparable{VDS.RDF.IVariableNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IVariableNode)
  nameWithType: IComparable<IVariableNode>.CompareTo(IVariableNode)
  fullName: System.IComparable<VDS.RDF.IVariableNode>.CompareTo(VDS.RDF.IVariableNode)
  nameWithType.vb: IComparable(Of IVariableNode).CompareTo(IVariableNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IVariableNode).CompareTo(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IVariableNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IVariableNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IVariableNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IVariableNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IVariableNode
  commentId: T:VDS.RDF.IVariableNode
  parent: VDS.RDF
  name: IVariableNode
  nameWithType: IVariableNode
  fullName: VDS.RDF.IVariableNode
- uid: VDS.RDF.EqualityHelper
  commentId: T:VDS.RDF.EqualityHelper
  name: EqualityHelper
  nameWithType: EqualityHelper
  fullName: VDS.RDF.EqualityHelper
- uid: System.IEquatable{VDS.RDF.INode}.Equals(VDS.RDF.INode)
  commentId: M:System.IEquatable{VDS.RDF.INode}.Equals(VDS.RDF.INode)
  parent: System.IEquatable{VDS.RDF.INode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(INode)
  nameWithType: IEquatable<INode>.Equals(INode)
  fullName: System.IEquatable<VDS.RDF.INode>.Equals(VDS.RDF.INode)
  nameWithType.vb: IEquatable(Of INode).Equals(INode)
  fullName.vb: System.IEquatable(Of VDS.RDF.INode).Equals(VDS.RDF.INode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<INode>.Equals
    fullName: System.IEquatable<VDS.RDF.INode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of INode).Equals
    fullName: System.IEquatable(Of VDS.RDF.INode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IBlankNode}.Equals(VDS.RDF.IBlankNode)
  commentId: M:System.IEquatable{VDS.RDF.IBlankNode}.Equals(VDS.RDF.IBlankNode)
  parent: System.IEquatable{VDS.RDF.IBlankNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IBlankNode)
  nameWithType: IEquatable<IBlankNode>.Equals(IBlankNode)
  fullName: System.IEquatable<VDS.RDF.IBlankNode>.Equals(VDS.RDF.IBlankNode)
  nameWithType.vb: IEquatable(Of IBlankNode).Equals(IBlankNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IBlankNode).Equals(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IBlankNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IBlankNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IBlankNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IBlankNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IGraphLiteralNode}.Equals(VDS.RDF.IGraphLiteralNode)
  commentId: M:System.IEquatable{VDS.RDF.IGraphLiteralNode}.Equals(VDS.RDF.IGraphLiteralNode)
  parent: System.IEquatable{VDS.RDF.IGraphLiteralNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IGraphLiteralNode)
  nameWithType: IEquatable<IGraphLiteralNode>.Equals(IGraphLiteralNode)
  fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>.Equals(VDS.RDF.IGraphLiteralNode)
  nameWithType.vb: IEquatable(Of IGraphLiteralNode).Equals(IGraphLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IGraphLiteralNode).Equals(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IGraphLiteralNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IGraphLiteralNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IGraphLiteralNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.ILiteralNode}.Equals(VDS.RDF.ILiteralNode)
  commentId: M:System.IEquatable{VDS.RDF.ILiteralNode}.Equals(VDS.RDF.ILiteralNode)
  parent: System.IEquatable{VDS.RDF.ILiteralNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ILiteralNode)
  nameWithType: IEquatable<ILiteralNode>.Equals(ILiteralNode)
  fullName: System.IEquatable<VDS.RDF.ILiteralNode>.Equals(VDS.RDF.ILiteralNode)
  nameWithType.vb: IEquatable(Of ILiteralNode).Equals(ILiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.ILiteralNode).Equals(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ILiteralNode>.Equals
    fullName: System.IEquatable<VDS.RDF.ILiteralNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ILiteralNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.ILiteralNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IUriNode}.Equals(VDS.RDF.IUriNode)
  commentId: M:System.IEquatable{VDS.RDF.IUriNode}.Equals(VDS.RDF.IUriNode)
  parent: System.IEquatable{VDS.RDF.IUriNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IUriNode)
  nameWithType: IEquatable<IUriNode>.Equals(IUriNode)
  fullName: System.IEquatable<VDS.RDF.IUriNode>.Equals(VDS.RDF.IUriNode)
  nameWithType.vb: IEquatable(Of IUriNode).Equals(IUriNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IUriNode).Equals(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IUriNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IUriNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IUriNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IUriNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IVariableNode}.Equals(VDS.RDF.IVariableNode)
  commentId: M:System.IEquatable{VDS.RDF.IVariableNode}.Equals(VDS.RDF.IVariableNode)
  parent: System.IEquatable{VDS.RDF.IVariableNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IVariableNode)
  nameWithType: IEquatable<IVariableNode>.Equals(IVariableNode)
  fullName: System.IEquatable<VDS.RDF.IVariableNode>.Equals(VDS.RDF.IVariableNode)
  nameWithType.vb: IEquatable(Of IVariableNode).Equals(IVariableNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IVariableNode).Equals(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IVariableNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IVariableNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IVariableNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IVariableNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.GetObjectData*
  commentId: Overload:VDS.RDF.BaseNode.GetObjectData
  name: GetObjectData
  nameWithType: BaseNode.GetObjectData
  fullName: VDS.RDF.BaseNode.GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: VDS.RDF.BaseNode.GetSchema*
  commentId: Overload:VDS.RDF.BaseNode.GetSchema
  name: GetSchema
  nameWithType: BaseNode.GetSchema
  fullName: VDS.RDF.BaseNode.GetSchema
- uid: System.Xml.Serialization.IXmlSerializable.GetSchema
  commentId: M:System.Xml.Serialization.IXmlSerializable.GetSchema
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: GetSchema()
  nameWithType: IXmlSerializable.GetSchema()
  fullName: System.Xml.Serialization.IXmlSerializable.GetSchema()
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.GetSchema
    name: GetSchema
    nameWithType: IXmlSerializable.GetSchema
    fullName: System.Xml.Serialization.IXmlSerializable.GetSchema
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.Schema.XmlSchema
  commentId: T:System.Xml.Schema.XmlSchema
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchema
  nameWithType: XmlSchema
  fullName: System.Xml.Schema.XmlSchema
- uid: System.Xml.Schema
  commentId: N:System.Xml.Schema
  isExternal: true
  name: System.Xml.Schema
  nameWithType: System.Xml.Schema
  fullName: System.Xml.Schema
- uid: VDS.RDF.BaseNode.ReadXml*
  commentId: Overload:VDS.RDF.BaseNode.ReadXml
  name: ReadXml
  nameWithType: BaseNode.ReadXml
  fullName: VDS.RDF.BaseNode.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: VDS.RDF.BaseNode.WriteXml*
  commentId: Overload:VDS.RDF.BaseNode.WriteXml
  name: WriteXml
  nameWithType: BaseNode.WriteXml
  fullName: VDS.RDF.BaseNode.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
shouldSkipMarkup: true
