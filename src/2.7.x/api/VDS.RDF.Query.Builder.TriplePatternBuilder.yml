### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder
  commentId: T:VDS.RDF.Query.Builder.TriplePatternBuilder
  id: TriplePatternBuilder
  parent: VDS.RDF.Query.Builder
  children:
  - VDS.RDF.Query.Builder.TriplePatternBuilder.#ctor(VDS.RDF.INamespaceMapper)
  - VDS.RDF.Query.Builder.TriplePatternBuilder.AddPattern(VDS.RDF.Query.Patterns.TriplePattern)
  - VDS.RDF.Query.Builder.TriplePatternBuilder.PatternItemFactory
  - VDS.RDF.Query.Builder.TriplePatternBuilder.Patterns
  - VDS.RDF.Query.Builder.TriplePatternBuilder.Prefixes
  - VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(System.String)
  - VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(System.Uri)
  - VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(VDS.RDF.INode)
  - VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
  - VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
  - VDS.RDF.Query.Builder.TriplePatternBuilder.Subject``1(System.String)
  langs:
  - csharp
  - vb
  name: TriplePatternBuilder
  nameWithType: TriplePatternBuilder
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TriplePatternBuilder
    path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nProvides methods for building triple patterns.\n"
  example: []
  syntax:
    content: 'public class TriplePatternBuilder : ITriplePatternBuilderInternal, ITriplePatternBuilder'
    content.vb: >-
      Public Class TriplePatternBuilder
          Implements ITriplePatternBuilderInternal, ITriplePatternBuilder
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Query.Builder.ITriplePatternBuilderInternal
  - VDS.RDF.Query.Builder.ITriplePatternBuilder
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Builder.TriplePatternBuilder.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.Patterns
  commentId: P:VDS.RDF.Query.Builder.TriplePatternBuilder.Patterns
  id: Patterns
  parent: VDS.RDF.Query.Builder.TriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Patterns
  nameWithType: TriplePatternBuilder.Patterns
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.Patterns
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Patterns
    path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
    startLine: 44
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nGets the triple patterns.\n"
  example: []
  syntax:
    content: public ITriplePattern[] Patterns { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Patterns.ITriplePattern[]
    content.vb: Public ReadOnly Property Patterns As ITriplePattern()
  overload: VDS.RDF.Query.Builder.TriplePatternBuilder.Patterns*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.PatternItemFactory
  commentId: P:VDS.RDF.Query.Builder.TriplePatternBuilder.PatternItemFactory
  id: PatternItemFactory
  parent: VDS.RDF.Query.Builder.TriplePatternBuilder
  langs:
  - csharp
  - vb
  name: PatternItemFactory
  nameWithType: TriplePatternBuilder.PatternItemFactory
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.PatternItemFactory
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PatternItemFactory
    path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nGets the pattern item factory.\n"
  example: []
  syntax:
    content: public IPatternItemFactory PatternItemFactory { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Builder.IPatternItemFactory
    content.vb: Public ReadOnly Property PatternItemFactory As IPatternItemFactory
  overload: VDS.RDF.Query.Builder.TriplePatternBuilder.PatternItemFactory*
  implements:
  - VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.PatternItemFactory
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.Prefixes
  commentId: P:VDS.RDF.Query.Builder.TriplePatternBuilder.Prefixes
  id: Prefixes
  parent: VDS.RDF.Query.Builder.TriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Prefixes
  nameWithType: TriplePatternBuilder.Prefixes
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.Prefixes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Prefixes
    path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
    startLine: 52
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nGets the prefix manager, which allows adding prefixes to the query or graph pattern.\n"
  example: []
  syntax:
    content: public INamespaceMapper Prefixes { get; }
    parameters: []
    return:
      type: VDS.RDF.INamespaceMapper
    content.vb: Public ReadOnly Property Prefixes As INamespaceMapper
  overload: VDS.RDF.Query.Builder.TriplePatternBuilder.Prefixes*
  implements:
  - VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.Prefixes
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.#ctor(VDS.RDF.INamespaceMapper)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternBuilder.#ctor(VDS.RDF.INamespaceMapper)
  id: '#ctor(VDS.RDF.INamespaceMapper)'
  parent: VDS.RDF.Query.Builder.TriplePatternBuilder
  langs:
  - csharp
  - vb
  name: TriplePatternBuilder(INamespaceMapper)
  nameWithType: TriplePatternBuilder.TriplePatternBuilder(INamespaceMapper)
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.TriplePatternBuilder(VDS.RDF.INamespaceMapper)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
    startLine: 58
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\n\n"
  example: []
  syntax:
    content: public TriplePatternBuilder(INamespaceMapper prefixes)
    parameters:
    - id: prefixes
      type: VDS.RDF.INamespaceMapper
      description: ''
    content.vb: Public Sub New(prefixes As INamespaceMapper)
  overload: VDS.RDF.Query.Builder.TriplePatternBuilder.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
  id: Subject(VDS.RDF.Query.SparqlVariable)
  parent: VDS.RDF.Query.Builder.TriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Subject(SparqlVariable)
  nameWithType: TriplePatternBuilder.Subject(SparqlVariable)
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
    startLine: 65
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a variable as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TriplePatternPredicatePart Subject(SparqlVariable subjectVariable)
    parameters:
    - id: subjectVariable
      type: VDS.RDF.Query.SparqlVariable
    return:
      type: VDS.RDF.Query.Builder.TriplePatternPredicatePart
    content.vb: Public Function Subject(subjectVariable As SparqlVariable) As TriplePatternPredicatePart
  overload: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject*
  implements:
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(System.String)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(System.String)
  id: Subject(System.String)
  parent: VDS.RDF.Query.Builder.TriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Subject(String)
  nameWithType: TriplePatternBuilder.Subject(String)
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
    startLine: 71
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a variable as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TriplePatternPredicatePart Subject(string subjectVariableName)
    parameters:
    - id: subjectVariableName
      type: System.String
    return:
      type: VDS.RDF.Query.Builder.TriplePatternPredicatePart
    content.vb: Public Function Subject(subjectVariableName As String) As TriplePatternPredicatePart
  overload: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject*
  implements:
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject``1(System.String)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternBuilder.Subject``1(System.String)
  id: Subject``1(System.String)
  parent: VDS.RDF.Query.Builder.TriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Subject<TNode>(String)
  nameWithType: TriplePatternBuilder.Subject<TNode>(String)
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject<TNode>(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
    startLine: 77
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nDepending on the generic parameter type, sets a literal, a QName or a blank node as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: A relevant prefix/base URI must be added to <xref href="VDS.RDF.Query.Builder.IQueryBuilder.Prefixes" data-throw-if-not-resolved="false"></xref> to accept a QName.
  example: []
  syntax:
    content: >-
      public TriplePatternPredicatePart Subject<TNode>(string subject)
          where TNode : INode
    parameters:
    - id: subject
      type: System.String
      description: Either a variable name, a literal, a QName or a blank node identifier.
    typeParameters:
    - id: TNode
    return:
      type: VDS.RDF.Query.Builder.TriplePatternPredicatePart
    content.vb: Public Function Subject(Of TNode As INode)(subject As String) As TriplePatternPredicatePart
  overload: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject*
  implements:
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject``1(System.String)
  nameWithType.vb: TriplePatternBuilder.Subject(Of TNode)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(Of TNode)(System.String)
  name.vb: Subject(Of TNode)(String)
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(VDS.RDF.INode)
  id: Subject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Builder.TriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Subject(INode)
  nameWithType: TriplePatternBuilder.Subject(INode)
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
    startLine: 83
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nDepending on the <code data-dev-comment-type=\"paramref\" class=\"paramref\">subjectNode</code>&apos;s type, sets a literal, a QName or a blank node as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  remarks: A relevant prefix/base URI must be added to <xref href="VDS.RDF.Query.Builder.IQueryBuilder.Prefixes" data-throw-if-not-resolved="false"></xref> to accept a QName.
  example: []
  syntax:
    content: public TriplePatternPredicatePart Subject(INode subjectNode)
    parameters:
    - id: subjectNode
      type: VDS.RDF.INode
    return:
      type: VDS.RDF.Query.Builder.TriplePatternPredicatePart
    content.vb: Public Function Subject(subjectNode As INode) As TriplePatternPredicatePart
  overload: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject*
  implements:
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(System.Uri)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(System.Uri)
  id: Subject(System.Uri)
  parent: VDS.RDF.Query.Builder.TriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Subject(Uri)
  nameWithType: TriplePatternBuilder.Subject(Uri)
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
    startLine: 89
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a <xref href=\"System.Uri\" data-throw-if-not-resolved=\"false\"></xref> as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TriplePatternPredicatePart Subject(Uri subject)
    parameters:
    - id: subject
      type: System.Uri
    return:
      type: VDS.RDF.Query.Builder.TriplePatternPredicatePart
    content.vb: Public Function Subject(subject As Uri) As TriplePatternPredicatePart
  overload: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject*
  implements:
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
  id: Subject(VDS.RDF.Query.Patterns.PatternItem)
  parent: VDS.RDF.Query.Builder.TriplePatternBuilder
  langs:
  - csharp
  - vb
  name: Subject(PatternItem)
  nameWithType: TriplePatternBuilder.Subject(PatternItem)
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Subject
    path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
    startLine: 95
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nSets a <xref href=\"VDS.RDF.Query.Patterns.PatternItem\" data-throw-if-not-resolved=\"false\"></xref> as <xref href=\"VDS.RDF.Query.Patterns.IMatchTriplePattern.Subject\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public TriplePatternPredicatePart Subject(PatternItem subject)
    parameters:
    - id: subject
      type: VDS.RDF.Query.Patterns.PatternItem
    return:
      type: VDS.RDF.Query.Builder.TriplePatternPredicatePart
    content.vb: Public Function Subject(subject As PatternItem) As TriplePatternPredicatePart
  overload: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject*
  implements:
  - VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.AddPattern(VDS.RDF.Query.Patterns.TriplePattern)
  commentId: M:VDS.RDF.Query.Builder.TriplePatternBuilder.AddPattern(VDS.RDF.Query.Patterns.TriplePattern)
  id: AddPattern(VDS.RDF.Query.Patterns.TriplePattern)
  parent: VDS.RDF.Query.Builder.TriplePatternBuilder
  langs:
  - csharp
  - vb
  name: AddPattern(TriplePattern)
  nameWithType: TriplePatternBuilder.AddPattern(TriplePattern)
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.AddPattern(VDS.RDF.Query.Patterns.TriplePattern)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddPattern
    path: Libraries/dotNetRDF/Query/Builder/TriplePatternBuilder.cs
    startLine: 101
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder
  summary: "\nAdd TriplePattern to the builder.\n"
  example: []
  syntax:
    content: public void AddPattern(TriplePattern triplePattern)
    parameters:
    - id: triplePattern
      type: VDS.RDF.Query.Patterns.TriplePattern
      description: ''
    content.vb: Public Sub AddPattern(triplePattern As TriplePattern)
  overload: VDS.RDF.Query.Builder.TriplePatternBuilder.AddPattern*
  implements:
  - VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.AddPattern(VDS.RDF.Query.Patterns.TriplePattern)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Builder
  commentId: N:VDS.RDF.Query.Builder
  name: VDS.RDF.Query.Builder
  nameWithType: VDS.RDF.Query.Builder
  fullName: VDS.RDF.Query.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal
  commentId: T:VDS.RDF.Query.Builder.ITriplePatternBuilderInternal
  parent: VDS.RDF.Query.Builder
  name: ITriplePatternBuilderInternal
  nameWithType: ITriplePatternBuilderInternal
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder
  commentId: T:VDS.RDF.Query.Builder.ITriplePatternBuilder
  parent: VDS.RDF.Query.Builder
  name: ITriplePatternBuilder
  nameWithType: ITriplePatternBuilder
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TriplePatternBuilder>()
  nameWithType: Extensions.AsEnumerable<TriplePatternBuilder>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.TriplePatternBuilder>()
  nameWithType.vb: Extensions.AsEnumerable(Of TriplePatternBuilder)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.TriplePatternBuilder)()
  name.vb: AsEnumerable(Of TriplePatternBuilder)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TriplePatternBuilder>
    nameWithType: Extensions.AsEnumerable<TriplePatternBuilder>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.TriplePatternBuilder>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TriplePatternBuilder)
    nameWithType: Extensions.AsEnumerable(Of TriplePatternBuilder)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.TriplePatternBuilder)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.Patterns*
  commentId: Overload:VDS.RDF.Query.Builder.TriplePatternBuilder.Patterns
  name: Patterns
  nameWithType: TriplePatternBuilder.Patterns
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.Patterns
- uid: VDS.RDF.Query.Patterns.ITriplePattern[]
  isExternal: true
  name: ITriplePattern[]
  nameWithType: ITriplePattern[]
  fullName: VDS.RDF.Query.Patterns.ITriplePattern[]
  nameWithType.vb: ITriplePattern()
  fullName.vb: VDS.RDF.Query.Patterns.ITriplePattern()
  name.vb: ITriplePattern()
  spec.csharp:
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: VDS.RDF.Query.Patterns.ITriplePattern
    name: ITriplePattern
    nameWithType: ITriplePattern
    fullName: VDS.RDF.Query.Patterns.ITriplePattern
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.PatternItemFactory*
  commentId: Overload:VDS.RDF.Query.Builder.TriplePatternBuilder.PatternItemFactory
  name: PatternItemFactory
  nameWithType: TriplePatternBuilder.PatternItemFactory
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.PatternItemFactory
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.PatternItemFactory
  commentId: P:VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.PatternItemFactory
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal
  name: PatternItemFactory
  nameWithType: ITriplePatternBuilderInternal.PatternItemFactory
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.PatternItemFactory
- uid: VDS.RDF.Query.Builder.IPatternItemFactory
  commentId: T:VDS.RDF.Query.Builder.IPatternItemFactory
  parent: VDS.RDF.Query.Builder
  name: IPatternItemFactory
  nameWithType: IPatternItemFactory
  fullName: VDS.RDF.Query.Builder.IPatternItemFactory
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.Prefixes*
  commentId: Overload:VDS.RDF.Query.Builder.TriplePatternBuilder.Prefixes
  name: Prefixes
  nameWithType: TriplePatternBuilder.Prefixes
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.Prefixes
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.Prefixes
  commentId: P:VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.Prefixes
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal
  name: Prefixes
  nameWithType: ITriplePatternBuilderInternal.Prefixes
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.Prefixes
- uid: VDS.RDF.INamespaceMapper
  commentId: T:VDS.RDF.INamespaceMapper
  parent: VDS.RDF
  name: INamespaceMapper
  nameWithType: INamespaceMapper
  fullName: VDS.RDF.INamespaceMapper
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.#ctor*
  commentId: Overload:VDS.RDF.Query.Builder.TriplePatternBuilder.#ctor
  name: TriplePatternBuilder
  nameWithType: TriplePatternBuilder.TriplePatternBuilder
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.TriplePatternBuilder
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject*
  commentId: Overload:VDS.RDF.Query.Builder.TriplePatternBuilder.Subject
  name: Subject
  nameWithType: TriplePatternBuilder.Subject
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.Subject
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilder
  name: Subject(SparqlVariable)
  nameWithType: ITriplePatternBuilder.Subject(SparqlVariable)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
    name: Subject
    nameWithType: ITriplePatternBuilder.Subject
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlVariable
    name: SparqlVariable
    nameWithType: SparqlVariable
    fullName: VDS.RDF.Query.SparqlVariable
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.SparqlVariable)
    name: Subject
    nameWithType: ITriplePatternBuilder.Subject
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlVariable
    name: SparqlVariable
    nameWithType: SparqlVariable
    fullName: VDS.RDF.Query.SparqlVariable
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlVariable
  commentId: T:VDS.RDF.Query.SparqlVariable
  parent: VDS.RDF.Query
  name: SparqlVariable
  nameWithType: SparqlVariable
  fullName: VDS.RDF.Query.SparqlVariable
- uid: VDS.RDF.Query.Builder.TriplePatternPredicatePart
  commentId: T:VDS.RDF.Query.Builder.TriplePatternPredicatePart
  parent: VDS.RDF.Query.Builder
  name: TriplePatternPredicatePart
  nameWithType: TriplePatternPredicatePart
  fullName: VDS.RDF.Query.Builder.TriplePatternPredicatePart
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.String)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.String)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilder
  isExternal: true
  name: Subject(String)
  nameWithType: ITriplePatternBuilder.Subject(String)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.String)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.String)
    name: Subject
    nameWithType: ITriplePatternBuilder.Subject
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.String)
    name: Subject
    nameWithType: ITriplePatternBuilder.Subject
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject``1(System.String)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject``1(System.String)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilder
  isExternal: true
  name: Subject<TNode>(String)
  nameWithType: ITriplePatternBuilder.Subject<TNode>(String)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject<TNode>(System.String)
  nameWithType.vb: ITriplePatternBuilder.Subject(Of TNode)(String)
  fullName.vb: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(Of TNode)(System.String)
  name.vb: Subject(Of TNode)(String)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject``1(System.String)
    name: Subject<TNode>
    nameWithType: ITriplePatternBuilder.Subject<TNode>
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject<TNode>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject``1(System.String)
    name: Subject(Of TNode)
    nameWithType: ITriplePatternBuilder.Subject(Of TNode)
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(Of TNode)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilder
  name: Subject(INode)
  nameWithType: ITriplePatternBuilder.Subject(INode)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.INode)
    name: Subject
    nameWithType: ITriplePatternBuilder.Subject
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.INode)
    name: Subject
    nameWithType: ITriplePatternBuilder.Subject
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.Uri)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.Uri)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilder
  isExternal: true
  name: Subject(Uri)
  nameWithType: ITriplePatternBuilder.Subject(Uri)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.Uri)
    name: Subject
    nameWithType: ITriplePatternBuilder.Subject
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(System.Uri)
    name: Subject
    nameWithType: ITriplePatternBuilder.Subject
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilder
  name: Subject(PatternItem)
  nameWithType: ITriplePatternBuilder.Subject(PatternItem)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
    name: Subject
    nameWithType: ITriplePatternBuilder.Subject
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.PatternItem
    name: PatternItem
    nameWithType: PatternItem
    fullName: VDS.RDF.Query.Patterns.PatternItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject(VDS.RDF.Query.Patterns.PatternItem)
    name: Subject
    nameWithType: ITriplePatternBuilder.Subject
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilder.Subject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.PatternItem
    name: PatternItem
    nameWithType: PatternItem
    fullName: VDS.RDF.Query.Patterns.PatternItem
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.PatternItem
  commentId: T:VDS.RDF.Query.Patterns.PatternItem
  parent: VDS.RDF.Query.Patterns
  name: PatternItem
  nameWithType: PatternItem
  fullName: VDS.RDF.Query.Patterns.PatternItem
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: VDS.RDF.Query.Builder.TriplePatternBuilder.AddPattern*
  commentId: Overload:VDS.RDF.Query.Builder.TriplePatternBuilder.AddPattern
  name: AddPattern
  nameWithType: TriplePatternBuilder.AddPattern
  fullName: VDS.RDF.Query.Builder.TriplePatternBuilder.AddPattern
- uid: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.AddPattern(VDS.RDF.Query.Patterns.TriplePattern)
  commentId: M:VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.AddPattern(VDS.RDF.Query.Patterns.TriplePattern)
  parent: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal
  name: AddPattern(TriplePattern)
  nameWithType: ITriplePatternBuilderInternal.AddPattern(TriplePattern)
  fullName: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.AddPattern(VDS.RDF.Query.Patterns.TriplePattern)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.AddPattern(VDS.RDF.Query.Patterns.TriplePattern)
    name: AddPattern
    nameWithType: ITriplePatternBuilderInternal.AddPattern
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.AddPattern
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.TriplePattern
    name: TriplePattern
    nameWithType: TriplePattern
    fullName: VDS.RDF.Query.Patterns.TriplePattern
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.AddPattern(VDS.RDF.Query.Patterns.TriplePattern)
    name: AddPattern
    nameWithType: ITriplePatternBuilderInternal.AddPattern
    fullName: VDS.RDF.Query.Builder.ITriplePatternBuilderInternal.AddPattern
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Patterns.TriplePattern
    name: TriplePattern
    nameWithType: TriplePattern
    fullName: VDS.RDF.Query.Patterns.TriplePattern
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.TriplePattern
  commentId: T:VDS.RDF.Query.Patterns.TriplePattern
  parent: VDS.RDF.Query.Patterns
  name: TriplePattern
  nameWithType: TriplePattern
  fullName: VDS.RDF.Query.Patterns.TriplePattern
shouldSkipMarkup: true
