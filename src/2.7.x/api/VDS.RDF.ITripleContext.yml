### YamlMime:ManagedReference
items:
- uid: VDS.RDF.ITripleContext
  commentId: T:VDS.RDF.ITripleContext
  id: ITripleContext
  parent: VDS.RDF
  children:
  - VDS.RDF.ITripleContext.HasProperty(System.String)
  - VDS.RDF.ITripleContext.Item(System.String)
  langs:
  - csharp
  - vb
  name: ITripleContext
  nameWithType: ITripleContext
  fullName: VDS.RDF.ITripleContext
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Core/ITripleContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ITripleContext
    path: Libraries/dotNetRDF/Core/ITripleContext.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAn Interface for classes which provide Context Information for Triples thus allowing you to create Quads with arbitrary extra information attached to Triples via your Context Objects.\n"
  remarks: "\nA Triple Context is simply a name-value pair collection of arbitrary data that can be attached to a Triple.  Internal representation of this is left to the implementor.\n"
  example: []
  syntax:
    content: public interface ITripleContext
    content.vb: Public Interface ITripleContext
  extensionMethods:
  - VDS.RDF.ITripleContext.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.ITripleContext.HasProperty(System.String)
  commentId: M:VDS.RDF.ITripleContext.HasProperty(System.String)
  id: HasProperty(System.String)
  parent: VDS.RDF.ITripleContext
  langs:
  - csharp
  - vb
  name: HasProperty(String)
  nameWithType: ITripleContext.HasProperty(String)
  fullName: VDS.RDF.ITripleContext.HasProperty(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/ITripleContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasProperty
    path: Libraries/dotNetRDF/Core/ITripleContext.cs
    startLine: 42
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nA Method which will indicate whether the Context contains some arbitrary property.\n"
  example: []
  syntax:
    content: bool HasProperty(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Boolean
    content.vb: Function HasProperty(name As String) As Boolean
  overload: VDS.RDF.ITripleContext.HasProperty*
- uid: VDS.RDF.ITripleContext.Item(System.String)
  commentId: P:VDS.RDF.ITripleContext.Item(System.String)
  id: Item(System.String)
  parent: VDS.RDF.ITripleContext
  langs:
  - csharp
  - vb
  name: Item[String]
  nameWithType: ITripleContext.Item[String]
  fullName: VDS.RDF.ITripleContext.Item[System.String]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/ITripleContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: Libraries/dotNetRDF/Core/ITripleContext.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nA Property which exposes the arbitrary properties of the Context as an Key Based Index.\n"
  example: []
  syntax:
    content: object this[string name] { get; set; }
    parameters:
    - id: name
      type: System.String
      description: Name of the Property.
    return:
      type: System.Object
      description: ''
    content.vb: Property Item(name As String) As Object
  overload: VDS.RDF.ITripleContext.Item*
  nameWithType.vb: ITripleContext.Item(String)
  modifiers.csharp:
  - get
  - set
  fullName.vb: VDS.RDF.ITripleContext.Item(System.String)
  name.vb: Item(String)
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.ITripleContext.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ITripleContext>()
  nameWithType: Extensions.AsEnumerable<ITripleContext>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.ITripleContext>()
  nameWithType.vb: Extensions.AsEnumerable(Of ITripleContext)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.ITripleContext)()
  name.vb: AsEnumerable(Of ITripleContext)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ITripleContext>
    nameWithType: Extensions.AsEnumerable<ITripleContext>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.ITripleContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ITripleContext)
    nameWithType: Extensions.AsEnumerable(Of ITripleContext)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.ITripleContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.ITripleContext.HasProperty*
  commentId: Overload:VDS.RDF.ITripleContext.HasProperty
  name: HasProperty
  nameWithType: ITripleContext.HasProperty
  fullName: VDS.RDF.ITripleContext.HasProperty
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.ITripleContext.Item*
  commentId: Overload:VDS.RDF.ITripleContext.Item
  name: Item
  nameWithType: ITripleContext.Item
  fullName: VDS.RDF.ITripleContext.Item
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
shouldSkipMarkup: true
