### YamlMime:ManagedReference
items:
- uid: VDS.RDF.GraphExtensions
  commentId: T:VDS.RDF.GraphExtensions
  id: GraphExtensions
  parent: VDS.RDF
  children:
  - VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  - VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  - VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  - VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  - VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  - VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  - VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  - VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  - VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  - VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  - VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  - VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  - VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  - VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  - VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  - VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  langs:
  - csharp
  - vb
  name: GraphExtensions
  nameWithType: GraphExtensions
  fullName: VDS.RDF.GraphExtensions
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GraphExtensions
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1023
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nProvides useful Extension Methods for working with Graphs.\n"
  example: []
  syntax:
    content: public static class GraphExtensions
    content.vb: Public Module GraphExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,System.String)
  id: ExecuteQuery(VDS.RDF.IGraph,System.String)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: ExecuteQuery(IGraph, String)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteQuery
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1043
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes a SPARQL Query on a Graph.\n"
  example: []
  syntax:
    content: public static object ExecuteQuery(this IGraph g, string sparqlQuery)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to query.
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query.
    return:
      type: System.Object
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteQuery(g As IGraph, sparqlQuery As String) As Object
  overload: VDS.RDF.GraphExtensions.ExecuteQuery*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  id: ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, String)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, String)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteQuery
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1060
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes a SPARQL Query on a Graph handling the results using the handlers provided.\n"
  example: []
  syntax:
    content: public static void ExecuteQuery(this IGraph g, IRdfHandler rdfHandler, ISparqlResultsHandler resultsHandler, string sparqlQuery)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to query.
    - id: rdfHandler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: resultsHandler
      type: VDS.RDF.ISparqlResultsHandler
      description: SPARQL Results Handler.
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ExecuteQuery(g As IGraph, rdfHandler As IRdfHandler, resultsHandler As ISparqlResultsHandler, sparqlQuery As String)
  overload: VDS.RDF.GraphExtensions.ExecuteQuery*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  id: ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlParameterizedString)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: ExecuteQuery(IGraph, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.Query.SparqlParameterizedString)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteQuery
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1075
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes a SPARQL Query on a Graph.\n"
  example: []
  syntax:
    content: public static object ExecuteQuery(this IGraph g, SparqlParameterizedString sparqlQuery)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to query.
    - id: sparqlQuery
      type: VDS.RDF.Query.SparqlParameterizedString
      description: SPARQL Query.
    return:
      type: System.Object
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteQuery(g As IGraph, sparqlQuery As SparqlParameterizedString) As Object
  overload: VDS.RDF.GraphExtensions.ExecuteQuery*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  id: ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlParameterizedString)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlParameterizedString)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlParameterizedString)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteQuery
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1087
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes a SPARQL Query on a Graph handling the results using the handlers provided.\n"
  example: []
  syntax:
    content: public static void ExecuteQuery(this IGraph g, IRdfHandler rdfHandler, ISparqlResultsHandler resultsHandler, SparqlParameterizedString sparqlQuery)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to query.
    - id: rdfHandler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: resultsHandler
      type: VDS.RDF.ISparqlResultsHandler
      description: SPARQL Results Handler.
    - id: sparqlQuery
      type: VDS.RDF.Query.SparqlParameterizedString
      description: SPARQL Query.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ExecuteQuery(g As IGraph, rdfHandler As IRdfHandler, resultsHandler As ISparqlResultsHandler, sparqlQuery As SparqlParameterizedString)
  overload: VDS.RDF.GraphExtensions.ExecuteQuery*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  id: ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.Query.SparqlQuery)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: ExecuteQuery(IGraph, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.Query.SparqlQuery)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteQuery
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1098
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes a SPARQL Query on a Graph.\n"
  example: []
  syntax:
    content: public static object ExecuteQuery(this IGraph g, SparqlQuery query)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to query.
    - id: query
      type: VDS.RDF.Query.SparqlQuery
      description: SPARQL Query.
    return:
      type: System.Object
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ExecuteQuery(g As IGraph, query As SparqlQuery) As Object
  overload: VDS.RDF.GraphExtensions.ExecuteQuery*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  id: ExecuteQuery(VDS.RDF.IGraph,VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  nameWithType: GraphExtensions.ExecuteQuery(IGraph, IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery(VDS.RDF.IGraph, VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlQuery)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteQuery
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes a SPARQL Query on a Graph handling the results using the handlers provided.\n"
  example: []
  syntax:
    content: public static void ExecuteQuery(this IGraph g, IRdfHandler rdfHandler, ISparqlResultsHandler resultsHandler, SparqlQuery query)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to query.
    - id: rdfHandler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: resultsHandler
      type: VDS.RDF.ISparqlResultsHandler
      description: SPARQL Results Handler.
    - id: query
      type: VDS.RDF.Query.SparqlQuery
      description: SPARQL Query.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ExecuteQuery(g As IGraph, rdfHandler As IRdfHandler, resultsHandler As ISparqlResultsHandler, query As SparqlQuery)
  overload: VDS.RDF.GraphExtensions.ExecuteQuery*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  id: LoadFromFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: LoadFromFile(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromFile(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromFile
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1136
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads RDF data from a file into a Graph.\n"
  remarks: "\n<p>\nThis is just a shortcut to using the static <strong>Load()</strong> methods from the <xref href=\"VDS.RDF.Parsing.FileLoader\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n</p>\n<p>\n<strong>Note:</strong> FileLoader will assign the Graph a file URI as it&apos;s Base URI unless the Graph already has a Base URI or is non-empty prior to attempting parsing.  Note that any Base URI specified in the RDF contained in the file will override this initial Base URI.  In some cases this may lead to invalid RDF being accepted and generating strange relative URIs, if you encounter this either set a Base URI prior to calling this method or create an instance of the relevant parser and invoke it directly.\n</p>\n<p>\nIf a File URI is assigned it will always be an absolute URI for the file.\n</p>\n"
  example: []
  syntax:
    content: public static void LoadFromFile(this IGraph g, string file, IRdfReader parser)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: file
      type: System.String
      description: File to load from.
    - id: parser
      type: VDS.RDF.IRdfReader
      description: Parser to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromFile(g As IGraph, file As String, parser As IRdfReader)
  overload: VDS.RDF.GraphExtensions.LoadFromFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph,System.String)
  id: LoadFromFile(VDS.RDF.IGraph,System.String)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: LoadFromFile(IGraph, String)
  nameWithType: GraphExtensions.LoadFromFile(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromFile(VDS.RDF.IGraph, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromFile
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1157
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads RDF data from a file into a Graph.\n"
  remarks: "\n<p>\nThis is just a shortcut to using the static <strong>Load()</strong> methods from the <xref href=\"VDS.RDF.Parsing.FileLoader\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n</p>\n<p>\n<strong>Note:</strong> FileLoader will assign the Graph a file URI as it&apos;s Base URI unless the Graph already has a Base URI or is non-empty prior to attempting parsing.  Note that any Base URI specified in the RDF contained in the file will override this initial Base URI.  In some cases this may lead to invalid RDF being accepted and generating strange relative URIs, if you encounter this either set a Base URI prior to calling this method or create an instance of the relevant parser and invoke it directly.\n</p>\n<p>\nIf a File URI is assigned it will always be an absolute URI for the file.\n</p>\n"
  example: []
  syntax:
    content: public static void LoadFromFile(this IGraph g, string file)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: file
      type: System.String
      description: File to load from.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromFile(g As IGraph, file As String)
  overload: VDS.RDF.GraphExtensions.LoadFromFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  id: LoadFromUri(VDS.RDF.IGraph,System.Uri,VDS.RDF.IRdfReader)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: LoadFromUri(IGraph, Uri, IRdfReader)
  nameWithType: GraphExtensions.LoadFromUri(IGraph, Uri, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph, System.Uri, VDS.RDF.IRdfReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromUri
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1176
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads RDF data from a URI into a Graph.\n"
  remarks: "\n<p>\nThis is just a shortcut to using the static <strong>Load()</strong> methods from the <xref href=\"VDS.RDF.Parsing.UriLoader\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n</p>\n<p>\n<strong>Note:</strong> UriLoader will assign the Graph the source URI as it&apos;s Base URI unless the Graph already has a Base URI or is non-empty prior to attempting parsing.  Note that any Base URI specified in the RDF contained in the file will override this initial Base URI.  In some cases this may lead to invalid RDF being accepted and generating strange relative URIs, if you encounter this either set a Base URI prior to calling this method or create an instance of the relevant parser and invoke it directly.\n</p>\n"
  example: []
  syntax:
    content: public static void LoadFromUri(this IGraph g, Uri u, IRdfReader parser)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: u
      type: System.Uri
      description: URI to load from.
    - id: parser
      type: VDS.RDF.IRdfReader
      description: Parser to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromUri(g As IGraph, u As Uri, parser As IRdfReader)
  overload: VDS.RDF.GraphExtensions.LoadFromUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph,System.Uri)
  id: LoadFromUri(VDS.RDF.IGraph,System.Uri)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: LoadFromUri(IGraph, Uri)
  nameWithType: GraphExtensions.LoadFromUri(IGraph, Uri)
  fullName: VDS.RDF.GraphExtensions.LoadFromUri(VDS.RDF.IGraph, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromUri
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1194
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads RDF data from a URI into a Graph.\n"
  remarks: "\n<p>\nThis is just a shortcut to using the static <strong>Load()</strong> methods from the <xref href=\"VDS.RDF.Parsing.UriLoader\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n</p>\n<p>\n<strong>Note:</strong> UriLoader will assign the Graph the source URI as it&apos;s Base URI unless the Graph already has a Base URI or is non-empty prior to attempting parsing.  Note that any Base URI specified in the RDF contained in the file will override this initial Base URI.  In some cases this may lead to invalid RDF being accepted and generating strange relative URIs, if you encounter this either set a Base URI prior to calling this method or create an instance of the relevant parser and invoke it directly.\n</p>\n"
  example: []
  syntax:
    content: public static void LoadFromUri(this IGraph g, Uri u)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: u
      type: System.Uri
      description: URI to load from.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromUri(g As IGraph, u As Uri)
  overload: VDS.RDF.GraphExtensions.LoadFromUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  id: LoadFromString(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: LoadFromString(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromString(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromString
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1210
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads RDF data from a String into a Graph.\n"
  remarks: "\nThis is just a shortcut to using the static <strong>Parse()</strong> methods from the <xref href=\"VDS.RDF.Parsing.StringParser\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n"
  example: []
  syntax:
    content: public static void LoadFromString(this IGraph g, string data, IRdfReader parser)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: data
      type: System.String
      description: Data to load.
    - id: parser
      type: VDS.RDF.IRdfReader
      description: Parser to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromString(g As IGraph, data As String, parser As IRdfReader)
  overload: VDS.RDF.GraphExtensions.LoadFromString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph,System.String)
  id: LoadFromString(VDS.RDF.IGraph,System.String)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: LoadFromString(IGraph, String)
  nameWithType: GraphExtensions.LoadFromString(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromString(VDS.RDF.IGraph, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromString
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1223
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads RDF data from a String into a Graph.\n"
  remarks: "\nThis is just a shortcut to using the static <strong>Parse()</strong> methods from the <xref href=\"VDS.RDF.Parsing.StringParser\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n"
  example: []
  syntax:
    content: public static void LoadFromString(this IGraph g, string data)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: data
      type: System.String
      description: Data to load.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromString(g As IGraph, data As String)
  overload: VDS.RDF.GraphExtensions.LoadFromString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  id: LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: LoadFromEmbeddedResource(IGraph, String)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromEmbeddedResource
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1236
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads RDF data from an Embedded Resource into a Graph.\n"
  remarks: "\nThis is just a shortcut to using the static <strong>Load()</strong> methods from the <xref href=\"VDS.RDF.Parsing.EmbeddedResourceLoader\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n"
  example: []
  syntax:
    content: public static void LoadFromEmbeddedResource(this IGraph g, string resource)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: resource
      type: System.String
      description: Assembly qualified name of the resource to load from.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromEmbeddedResource(g As IGraph, resource As String)
  overload: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  commentId: M:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  id: LoadFromEmbeddedResource(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfReader)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: LoadFromEmbeddedResource(IGraph, String, IRdfReader)
  nameWithType: GraphExtensions.LoadFromEmbeddedResource(IGraph, String, IRdfReader)
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LoadFromEmbeddedResource
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1250
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nLoads RDF data from an Embedded Resource into a Graph.\n"
  remarks: "\nThis is just a shortcut to using the static <strong>Load()</strong> methods from the <xref href=\"VDS.RDF.Parsing.EmbeddedResourceLoader\" data-throw-if-not-resolved=\"false\"></xref> class located in the <xref href=\"VDS.RDF.Parsing\" data-throw-if-not-resolved=\"false\"></xref> namespace.\n"
  example: []
  syntax:
    content: public static void LoadFromEmbeddedResource(this IGraph g, string resource, IRdfReader parser)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to load into.
    - id: resource
      type: System.String
      description: Assembly qualified name of the resource to load from.
    - id: parser
      type: VDS.RDF.IRdfReader
      description: Parser to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadFromEmbeddedResource(g As IGraph, resource As String, parser As IRdfReader)
  overload: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  id: SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IRdfWriter)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: SaveToFile(IGraph, String, IRdfWriter)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String, VDS.RDF.IRdfWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SaveToFile
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1261
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSaves a Graph to a File.\n"
  example: []
  syntax:
    content: public static void SaveToFile(this IGraph g, string file, IRdfWriter writer)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to save.
    - id: file
      type: System.String
      description: File to save to.
    - id: writer
      type: VDS.RDF.IRdfWriter
      description: Writer to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SaveToFile(g As IGraph, file As String, writer As IRdfWriter)
  overload: VDS.RDF.GraphExtensions.SaveToFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  id: SaveToFile(VDS.RDF.IGraph,System.String,VDS.RDF.IStoreWriter)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: SaveToFile(IGraph, String, IStoreWriter)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String, VDS.RDF.IStoreWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SaveToFile
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1279
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSaves a Graph to a File.\n"
  example: []
  syntax:
    content: public static void SaveToFile(this IGraph g, string file, IStoreWriter writer)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to save.
    - id: file
      type: System.String
      description: File to save to.
    - id: writer
      type: VDS.RDF.IStoreWriter
      description: Writer to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SaveToFile(g As IGraph, file As String, writer As IStoreWriter)
  overload: VDS.RDF.GraphExtensions.SaveToFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  commentId: M:VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph,System.String)
  id: SaveToFile(VDS.RDF.IGraph,System.String)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: SaveToFile(IGraph, String)
  nameWithType: GraphExtensions.SaveToFile(IGraph, String)
  fullName: VDS.RDF.GraphExtensions.SaveToFile(VDS.RDF.IGraph, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SaveToFile
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1297
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSaves a Graph to a File.\n"
  example: []
  syntax:
    content: public static void SaveToFile(this IGraph g, string file)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to save.
    - id: file
      type: System.String
      description: File to save to.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SaveToFile(g As IGraph, file As String)
  overload: VDS.RDF.GraphExtensions.SaveToFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  id: SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IRdfWriter)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: SaveToStream(IGraph, TextWriter, IRdfWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, TextWriter, IRdfWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.IO.TextWriter, VDS.RDF.IRdfWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SaveToStream
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1309
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSaves a Graph to a stream.\n"
  example: []
  syntax:
    content: public static void SaveToStream(this IGraph g, TextWriter streamWriter, IRdfWriter writer)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to save.
    - id: streamWriter
      type: System.IO.TextWriter
      description: Stream to save to.
    - id: writer
      type: VDS.RDF.IRdfWriter
      description: Writer to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SaveToStream(g As IGraph, streamWriter As TextWriter, writer As IRdfWriter)
  overload: VDS.RDF.GraphExtensions.SaveToStream*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  id: SaveToStream(VDS.RDF.IGraph,System.IO.TextWriter,VDS.RDF.IStoreWriter)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: SaveToStream(IGraph, TextWriter, IStoreWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, TextWriter, IStoreWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.IO.TextWriter, VDS.RDF.IStoreWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SaveToStream
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1324
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSaves a Graph to a stream.\n"
  example: []
  syntax:
    content: public static void SaveToStream(this IGraph g, TextWriter streamWriter, IStoreWriter writer)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to save.
    - id: streamWriter
      type: System.IO.TextWriter
      description: Stream to save to.
    - id: writer
      type: VDS.RDF.IStoreWriter
      description: Writer to use.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SaveToStream(g As IGraph, streamWriter As TextWriter, writer As IStoreWriter)
  overload: VDS.RDF.GraphExtensions.SaveToStream*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  commentId: M:VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  id: SaveToStream(VDS.RDF.IGraph,System.String,System.IO.TextWriter)
  isExtensionMethod: true
  parent: VDS.RDF.GraphExtensions
  langs:
  - csharp
  - vb
  name: SaveToStream(IGraph, String, TextWriter)
  nameWithType: GraphExtensions.SaveToStream(IGraph, String, TextWriter)
  fullName: VDS.RDF.GraphExtensions.SaveToStream(VDS.RDF.IGraph, System.String, System.IO.TextWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/Extensions.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SaveToStream
    path: Libraries/dotNetRDF/Core/Extensions.cs
    startLine: 1340
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSave a graph to a stream, determining the type of writer to use by the output file name.\n"
  example: []
  syntax:
    content: public static void SaveToStream(this IGraph g, string filename, TextWriter streamWriter)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: The graph to write.
    - id: filename
      type: System.String
      description: The output file name to use to determine the output format to write.
    - id: streamWriter
      type: System.IO.TextWriter
      description: The stream to write to.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub SaveToStream(g As IGraph, filename As String, streamWriter As TextWriter)
  overload: VDS.RDF.GraphExtensions.SaveToStream*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.GraphExtensions.ExecuteQuery*
  commentId: Overload:VDS.RDF.GraphExtensions.ExecuteQuery
  name: ExecuteQuery
  nameWithType: GraphExtensions.ExecuteQuery
  fullName: VDS.RDF.GraphExtensions.ExecuteQuery
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.IRdfHandler
  commentId: T:VDS.RDF.IRdfHandler
  parent: VDS.RDF
  name: IRdfHandler
  nameWithType: IRdfHandler
  fullName: VDS.RDF.IRdfHandler
- uid: VDS.RDF.ISparqlResultsHandler
  commentId: T:VDS.RDF.ISparqlResultsHandler
  parent: VDS.RDF
  name: ISparqlResultsHandler
  nameWithType: ISparqlResultsHandler
  fullName: VDS.RDF.ISparqlResultsHandler
- uid: VDS.RDF.Query.SparqlParameterizedString
  commentId: T:VDS.RDF.Query.SparqlParameterizedString
  parent: VDS.RDF.Query
  name: SparqlParameterizedString
  nameWithType: SparqlParameterizedString
  fullName: VDS.RDF.Query.SparqlParameterizedString
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.SparqlQuery
  commentId: T:VDS.RDF.Query.SparqlQuery
  parent: VDS.RDF.Query
  name: SparqlQuery
  nameWithType: SparqlQuery
  fullName: VDS.RDF.Query.SparqlQuery
- uid: VDS.RDF.Parsing.FileLoader
  commentId: T:VDS.RDF.Parsing.FileLoader
  name: FileLoader
  nameWithType: FileLoader
  fullName: VDS.RDF.Parsing.FileLoader
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: VDS.RDF.GraphExtensions.LoadFromFile*
  commentId: Overload:VDS.RDF.GraphExtensions.LoadFromFile
  name: LoadFromFile
  nameWithType: GraphExtensions.LoadFromFile
  fullName: VDS.RDF.GraphExtensions.LoadFromFile
- uid: VDS.RDF.IRdfReader
  commentId: T:VDS.RDF.IRdfReader
  parent: VDS.RDF
  name: IRdfReader
  nameWithType: IRdfReader
  fullName: VDS.RDF.IRdfReader
- uid: VDS.RDF.Parsing.UriLoader
  commentId: T:VDS.RDF.Parsing.UriLoader
  name: UriLoader
  nameWithType: UriLoader
  fullName: VDS.RDF.Parsing.UriLoader
- uid: VDS.RDF.GraphExtensions.LoadFromUri*
  commentId: Overload:VDS.RDF.GraphExtensions.LoadFromUri
  name: LoadFromUri
  nameWithType: GraphExtensions.LoadFromUri
  fullName: VDS.RDF.GraphExtensions.LoadFromUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Parsing.StringParser
  commentId: T:VDS.RDF.Parsing.StringParser
  name: StringParser
  nameWithType: StringParser
  fullName: VDS.RDF.Parsing.StringParser
- uid: VDS.RDF.GraphExtensions.LoadFromString*
  commentId: Overload:VDS.RDF.GraphExtensions.LoadFromString
  name: LoadFromString
  nameWithType: GraphExtensions.LoadFromString
  fullName: VDS.RDF.GraphExtensions.LoadFromString
- uid: VDS.RDF.Parsing.EmbeddedResourceLoader
  commentId: T:VDS.RDF.Parsing.EmbeddedResourceLoader
  name: EmbeddedResourceLoader
  nameWithType: EmbeddedResourceLoader
  fullName: VDS.RDF.Parsing.EmbeddedResourceLoader
- uid: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource*
  commentId: Overload:VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
  name: LoadFromEmbeddedResource
  nameWithType: GraphExtensions.LoadFromEmbeddedResource
  fullName: VDS.RDF.GraphExtensions.LoadFromEmbeddedResource
- uid: VDS.RDF.GraphExtensions.SaveToFile*
  commentId: Overload:VDS.RDF.GraphExtensions.SaveToFile
  name: SaveToFile
  nameWithType: GraphExtensions.SaveToFile
  fullName: VDS.RDF.GraphExtensions.SaveToFile
- uid: VDS.RDF.IRdfWriter
  commentId: T:VDS.RDF.IRdfWriter
  parent: VDS.RDF
  name: IRdfWriter
  nameWithType: IRdfWriter
  fullName: VDS.RDF.IRdfWriter
- uid: VDS.RDF.IStoreWriter
  commentId: T:VDS.RDF.IStoreWriter
  parent: VDS.RDF
  name: IStoreWriter
  nameWithType: IStoreWriter
  fullName: VDS.RDF.IStoreWriter
- uid: VDS.RDF.GraphExtensions.SaveToStream*
  commentId: Overload:VDS.RDF.GraphExtensions.SaveToStream
  name: SaveToStream
  nameWithType: GraphExtensions.SaveToStream
  fullName: VDS.RDF.GraphExtensions.SaveToStream
- uid: System.IO.TextWriter
  commentId: T:System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
shouldSkipMarkup: true
