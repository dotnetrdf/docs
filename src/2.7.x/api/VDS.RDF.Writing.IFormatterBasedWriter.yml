### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Writing.IFormatterBasedWriter
  commentId: T:VDS.RDF.Writing.IFormatterBasedWriter
  id: IFormatterBasedWriter
  parent: VDS.RDF.Writing
  children:
  - VDS.RDF.Writing.IFormatterBasedWriter.TripleFormatterType
  langs:
  - csharp
  - vb
  name: IFormatterBasedWriter
  nameWithType: IFormatterBasedWriter
  fullName: VDS.RDF.Writing.IFormatterBasedWriter
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Core/IRDFWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IFormatterBasedWriter
    path: Libraries/dotNetRDF/Core/IRDFWriter.cs
    startLine: 261
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nInterface for writers which use formatters from the Formatting namespace.\n"
  example: []
  syntax:
    content: public interface IFormatterBasedWriter
    content.vb: Public Interface IFormatterBasedWriter
  extensionMethods:
  - VDS.RDF.Writing.IFormatterBasedWriter.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Writing.IFormatterBasedWriter.TripleFormatterType
  commentId: P:VDS.RDF.Writing.IFormatterBasedWriter.TripleFormatterType
  id: TripleFormatterType
  parent: VDS.RDF.Writing.IFormatterBasedWriter
  langs:
  - csharp
  - vb
  name: TripleFormatterType
  nameWithType: IFormatterBasedWriter.TripleFormatterType
  fullName: VDS.RDF.Writing.IFormatterBasedWriter.TripleFormatterType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/IRDFWriter.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TripleFormatterType
    path: Libraries/dotNetRDF/Core/IRDFWriter.cs
    startLine: 269
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGets the Type for the Triple Formatter this writer uses.\n"
  remarks: "\nThis should be the type descriptor for a type that implements <xref href=\"VDS.RDF.Writing.Formatting.ITripleFormatter\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: Type TripleFormatterType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: ReadOnly Property TripleFormatterType As Type
  overload: VDS.RDF.Writing.IFormatterBasedWriter.TripleFormatterType*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VDS.RDF.Writing
  commentId: N:VDS.RDF.Writing
  name: VDS.RDF.Writing
  nameWithType: VDS.RDF.Writing
  fullName: VDS.RDF.Writing
- uid: VDS.RDF.Writing.IFormatterBasedWriter.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IFormatterBasedWriter>()
  nameWithType: Extensions.AsEnumerable<IFormatterBasedWriter>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.IFormatterBasedWriter>()
  nameWithType.vb: Extensions.AsEnumerable(Of IFormatterBasedWriter)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.IFormatterBasedWriter)()
  name.vb: AsEnumerable(Of IFormatterBasedWriter)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IFormatterBasedWriter>
    nameWithType: Extensions.AsEnumerable<IFormatterBasedWriter>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.IFormatterBasedWriter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IFormatterBasedWriter)
    nameWithType: Extensions.AsEnumerable(Of IFormatterBasedWriter)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.IFormatterBasedWriter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Writing.Formatting.ITripleFormatter
  commentId: T:VDS.RDF.Writing.Formatting.ITripleFormatter
  parent: VDS.RDF.Writing.Formatting
  name: ITripleFormatter
  nameWithType: ITripleFormatter
  fullName: VDS.RDF.Writing.Formatting.ITripleFormatter
- uid: VDS.RDF.Writing.IFormatterBasedWriter.TripleFormatterType*
  commentId: Overload:VDS.RDF.Writing.IFormatterBasedWriter.TripleFormatterType
  name: TripleFormatterType
  nameWithType: IFormatterBasedWriter.TripleFormatterType
  fullName: VDS.RDF.Writing.IFormatterBasedWriter.TripleFormatterType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: VDS.RDF.Writing.Formatting
  commentId: N:VDS.RDF.Writing.Formatting
  name: VDS.RDF.Writing.Formatting
  nameWithType: VDS.RDF.Writing.Formatting
  fullName: VDS.RDF.Writing.Formatting
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
shouldSkipMarkup: true
