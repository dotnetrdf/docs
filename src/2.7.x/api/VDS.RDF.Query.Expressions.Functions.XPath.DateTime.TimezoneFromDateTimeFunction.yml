### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  commentId: T:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  id: TimezoneFromDateTimeFunction
  parent: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  children:
  - VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction._expr
  - VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Arguments
  - VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.CanParallelise
  - VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.EffectiveBooleanValue(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  - VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  - VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Functor
  - VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.ToString
  - VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  - VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Type
  - VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Variables
  langs:
  - csharp
  - vb
  name: TimezoneFromDateTimeFunction
  nameWithType: TimezoneFromDateTimeFunction
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TimezoneFromDateTimeFunction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  summary: "\nRepresents the XPath timezone-from-dateTime() function.\n"
  example: []
  syntax:
    content: 'public class TimezoneFromDateTimeFunction : ISparqlExpression'
    content.vb: >-
      Public Class TimezoneFromDateTimeFunction
          Implements ISparqlExpression
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Query.Expressions.Functions.Sparql.DateTime.TimezoneFunction
  implements:
  - VDS.RDF.Query.Expressions.ISparqlExpression
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction._expr
  commentId: F:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction._expr
  id: _expr
  parent: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  langs:
  - csharp
  - vb
  name: _expr
  nameWithType: TimezoneFromDateTimeFunction._expr
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction._expr
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _expr
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
    startLine: 43
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  summary: "\nExpression that the Function applies to.\n"
  example: []
  syntax:
    content: protected ISparqlExpression _expr
    return:
      type: VDS.RDF.Query.Expressions.ISparqlExpression
    content.vb: Protected _expr As ISparqlExpression
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  id: '#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)'
  parent: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  langs:
  - csharp
  - vb
  name: TimezoneFromDateTimeFunction(ISparqlExpression)
  nameWithType: TimezoneFromDateTimeFunction.TimezoneFromDateTimeFunction(ISparqlExpression)
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.TimezoneFromDateTimeFunction(VDS.RDF.Query.Expressions.ISparqlExpression)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  summary: "\nCreates a new XPath Timezone from Date Time function.\n"
  example: []
  syntax:
    content: public TimezoneFromDateTimeFunction(ISparqlExpression expr)
    parameters:
    - id: expr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: Expression.
    content.vb: Public Sub New(expr As ISparqlExpression)
  overload: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  id: Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  parent: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  langs:
  - csharp
  - vb
  name: Evaluate(SparqlEvaluationContext, Int32)
  nameWithType: TimezoneFromDateTimeFunction.Evaluate(SparqlEvaluationContext, Int32)
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Evaluate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  summary: "\nCalculates the value of the function in the given Evaluation Context for the given Binding ID.\n"
  example: []
  syntax:
    content: public virtual IValuedNode Evaluate(SparqlEvaluationContext context, int bindingID)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    - id: bindingID
      type: System.Int32
      description: Binding ID.
    return:
      type: VDS.RDF.Nodes.IValuedNode
      description: ''
    content.vb: Public Overridable Function Evaluate(context As SparqlEvaluationContext, bindingID As Integer) As IValuedNode
  overload: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Evaluate*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlExpression.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.EffectiveBooleanValue(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.EffectiveBooleanValue(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  id: EffectiveBooleanValue(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  parent: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  langs:
  - csharp
  - vb
  name: EffectiveBooleanValue(SparqlEvaluationContext, Int32)
  nameWithType: TimezoneFromDateTimeFunction.EffectiveBooleanValue(SparqlEvaluationContext, Int32)
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.EffectiveBooleanValue(VDS.RDF.Query.SparqlEvaluationContext, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EffectiveBooleanValue
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
    startLine: 102
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  summary: "\nCalculates the effective boolean value of the function in the given Evaluation Context for the given Binding ID.\n"
  example: []
  syntax:
    content: public bool EffectiveBooleanValue(SparqlEvaluationContext context, int bindingID)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    - id: bindingID
      type: System.Int32
      description: Binding ID.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function EffectiveBooleanValue(context As SparqlEvaluationContext, bindingID As Integer) As Boolean
  overload: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.EffectiveBooleanValue*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Variables
  commentId: P:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Variables
  id: Variables
  parent: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: TimezoneFromDateTimeFunction.Variables
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Variables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
    startLine: 110
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  summary: "\nGets the Variables used in the function.\n"
  example: []
  syntax:
    content: public IEnumerable<string> Variables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property Variables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Variables*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlExpression.Variables
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.ToString
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.ToString
  id: ToString
  parent: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TimezoneFromDateTimeFunction.ToString()
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
    startLine: 122
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  summary: "\nGets the String representation of the function.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Type
  commentId: P:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Type
  id: Type
  parent: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: TimezoneFromDateTimeFunction.Type
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Type
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Type
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
    startLine: 130
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  summary: "\nGets the Type of the Expression.\n"
  example: []
  syntax:
    content: public SparqlExpressionType Type { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Expressions.SparqlExpressionType
    content.vb: Public ReadOnly Property Type As SparqlExpressionType
  overload: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Type*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlExpression.Type
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Functor
  commentId: P:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Functor
  id: Functor
  parent: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  langs:
  - csharp
  - vb
  name: Functor
  nameWithType: TimezoneFromDateTimeFunction.Functor
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Functor
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Functor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
    startLine: 141
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  summary: "\nGets the Functor of the Expression.\n"
  example: []
  syntax:
    content: public virtual string Functor { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property Functor As String
  overload: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Functor*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlExpression.Functor
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Arguments
  commentId: P:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Arguments
  id: Arguments
  parent: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  langs:
  - csharp
  - vb
  name: Arguments
  nameWithType: TimezoneFromDateTimeFunction.Arguments
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Arguments
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Arguments
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
    startLine: 152
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  summary: "\nGets the Arguments of the Expression.\n"
  example: []
  syntax:
    content: public IEnumerable<ISparqlExpression> Arguments { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Expressions.ISparqlExpression}
    content.vb: Public ReadOnly Property Arguments As IEnumerable(Of ISparqlExpression)
  overload: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Arguments*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlExpression.Arguments
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.CanParallelise
  commentId: P:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.CanParallelise
  id: CanParallelise
  parent: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  langs:
  - csharp
  - vb
  name: CanParallelise
  nameWithType: TimezoneFromDateTimeFunction.CanParallelise
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.CanParallelise
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CanParallelise
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
    startLine: 163
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  summary: "\nGets whether an expression can safely be evaluated in parallel.\n"
  example: []
  syntax:
    content: public virtual bool CanParallelise { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property CanParallelise As Boolean
  overload: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.CanParallelise*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlExpression.CanParallelise
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  commentId: M:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  id: Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  parent: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction
  langs:
  - csharp
  - vb
  name: Transform(IExpressionTransformer)
  nameWithType: TimezoneFromDateTimeFunction.Transform(IExpressionTransformer)
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Transform
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Expressions/Functions/XPath/DateTime/TimezoneFromDateTimeFunction.cs
    startLine: 176
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  summary: "\nTransforms the Expression using the given Transformer.\n"
  example: []
  syntax:
    content: public virtual ISparqlExpression Transform(IExpressionTransformer transformer)
    parameters:
    - id: transformer
      type: VDS.RDF.Query.Expressions.IExpressionTransformer
      description: Expression Transformer.
    return:
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: ''
    content.vb: Public Overridable Function Transform(transformer As IExpressionTransformer) As ISparqlExpression
  overload: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Transform*
  implements:
  - VDS.RDF.Query.Expressions.ISparqlExpression.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  commentId: N:VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  name: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  nameWithType: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TimezoneFromDateTimeFunction>()
  nameWithType: Extensions.AsEnumerable<TimezoneFromDateTimeFunction>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction>()
  nameWithType.vb: Extensions.AsEnumerable(Of TimezoneFromDateTimeFunction)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction)()
  name.vb: AsEnumerable(Of TimezoneFromDateTimeFunction)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TimezoneFromDateTimeFunction>
    nameWithType: Extensions.AsEnumerable<TimezoneFromDateTimeFunction>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TimezoneFromDateTimeFunction)
    nameWithType: Extensions.AsEnumerable(Of TimezoneFromDateTimeFunction)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.#ctor*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.#ctor
  name: TimezoneFromDateTimeFunction
  nameWithType: TimezoneFromDateTimeFunction.TimezoneFromDateTimeFunction
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.TimezoneFromDateTimeFunction
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Evaluate*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Evaluate
  name: Evaluate
  nameWithType: TimezoneFromDateTimeFunction.Evaluate
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Evaluate
- uid: VDS.RDF.Query.Expressions.ISparqlExpression.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  commentId: M:VDS.RDF.Query.Expressions.ISparqlExpression.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  parent: VDS.RDF.Query.Expressions.ISparqlExpression
  isExternal: true
  name: Evaluate(SparqlEvaluationContext, Int32)
  nameWithType: ISparqlExpression.Evaluate(SparqlEvaluationContext, Int32)
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression.Evaluate(VDS.RDF.Query.SparqlEvaluationContext, System.Int32)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
    name: Evaluate
    nameWithType: ISparqlExpression.Evaluate
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
    name: Evaluate
    nameWithType: ISparqlExpression.Evaluate
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Nodes.IValuedNode
  commentId: T:VDS.RDF.Nodes.IValuedNode
  parent: VDS.RDF.Nodes
  name: IValuedNode
  nameWithType: IValuedNode
  fullName: VDS.RDF.Nodes.IValuedNode
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.EffectiveBooleanValue*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.EffectiveBooleanValue
  name: EffectiveBooleanValue
  nameWithType: TimezoneFromDateTimeFunction.EffectiveBooleanValue
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.EffectiveBooleanValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Variables*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Variables
  name: Variables
  nameWithType: TimezoneFromDateTimeFunction.Variables
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Variables
- uid: VDS.RDF.Query.Expressions.ISparqlExpression.Variables
  commentId: P:VDS.RDF.Query.Expressions.ISparqlExpression.Variables
  parent: VDS.RDF.Query.Expressions.ISparqlExpression
  name: Variables
  nameWithType: ISparqlExpression.Variables
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression.Variables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.ToString*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.ToString
  name: ToString
  nameWithType: TimezoneFromDateTimeFunction.ToString
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Type*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Type
  name: Type
  nameWithType: TimezoneFromDateTimeFunction.Type
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Type
- uid: VDS.RDF.Query.Expressions.ISparqlExpression.Type
  commentId: P:VDS.RDF.Query.Expressions.ISparqlExpression.Type
  parent: VDS.RDF.Query.Expressions.ISparqlExpression
  name: Type
  nameWithType: ISparqlExpression.Type
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression.Type
- uid: VDS.RDF.Query.Expressions.SparqlExpressionType
  commentId: T:VDS.RDF.Query.Expressions.SparqlExpressionType
  parent: VDS.RDF.Query.Expressions
  name: SparqlExpressionType
  nameWithType: SparqlExpressionType
  fullName: VDS.RDF.Query.Expressions.SparqlExpressionType
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Functor*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Functor
  name: Functor
  nameWithType: TimezoneFromDateTimeFunction.Functor
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Functor
- uid: VDS.RDF.Query.Expressions.ISparqlExpression.Functor
  commentId: P:VDS.RDF.Query.Expressions.ISparqlExpression.Functor
  parent: VDS.RDF.Query.Expressions.ISparqlExpression
  name: Functor
  nameWithType: ISparqlExpression.Functor
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression.Functor
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Arguments*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Arguments
  name: Arguments
  nameWithType: TimezoneFromDateTimeFunction.Arguments
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Arguments
- uid: VDS.RDF.Query.Expressions.ISparqlExpression.Arguments
  commentId: P:VDS.RDF.Query.Expressions.ISparqlExpression.Arguments
  parent: VDS.RDF.Query.Expressions.ISparqlExpression
  name: Arguments
  nameWithType: ISparqlExpression.Arguments
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression.Arguments
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Query.Expressions.ISparqlExpression}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Query.Expressions.ISparqlExpression}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ISparqlExpression>
  nameWithType: IEnumerable<ISparqlExpression>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Query.Expressions.ISparqlExpression>
  nameWithType.vb: IEnumerable(Of ISparqlExpression)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: IEnumerable(Of ISparqlExpression)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.CanParallelise*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.CanParallelise
  name: CanParallelise
  nameWithType: TimezoneFromDateTimeFunction.CanParallelise
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.CanParallelise
- uid: VDS.RDF.Query.Expressions.ISparqlExpression.CanParallelise
  commentId: P:VDS.RDF.Query.Expressions.ISparqlExpression.CanParallelise
  parent: VDS.RDF.Query.Expressions.ISparqlExpression
  name: CanParallelise
  nameWithType: ISparqlExpression.CanParallelise
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression.CanParallelise
- uid: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Transform*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Transform
  name: Transform
  nameWithType: TimezoneFromDateTimeFunction.Transform
  fullName: VDS.RDF.Query.Expressions.Functions.XPath.DateTime.TimezoneFromDateTimeFunction.Transform
- uid: VDS.RDF.Query.Expressions.ISparqlExpression.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  commentId: M:VDS.RDF.Query.Expressions.ISparqlExpression.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  parent: VDS.RDF.Query.Expressions.ISparqlExpression
  name: Transform(IExpressionTransformer)
  nameWithType: ISparqlExpression.Transform(IExpressionTransformer)
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
    name: Transform
    nameWithType: ISparqlExpression.Transform
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.IExpressionTransformer
    name: IExpressionTransformer
    nameWithType: IExpressionTransformer
    fullName: VDS.RDF.Query.Expressions.IExpressionTransformer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
    name: Transform
    nameWithType: ISparqlExpression.Transform
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.IExpressionTransformer
    name: IExpressionTransformer
    nameWithType: IExpressionTransformer
    fullName: VDS.RDF.Query.Expressions.IExpressionTransformer
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.IExpressionTransformer
  commentId: T:VDS.RDF.Query.Expressions.IExpressionTransformer
  parent: VDS.RDF.Query.Expressions
  name: IExpressionTransformer
  nameWithType: IExpressionTransformer
  fullName: VDS.RDF.Query.Expressions.IExpressionTransformer
