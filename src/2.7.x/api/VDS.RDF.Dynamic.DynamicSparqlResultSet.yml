### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Dynamic.DynamicSparqlResultSet
  commentId: T:VDS.RDF.Dynamic.DynamicSparqlResultSet
  id: DynamicSparqlResultSet
  parent: VDS.RDF.Dynamic
  children:
  - VDS.RDF.Dynamic.DynamicSparqlResultSet.#ctor(VDS.RDF.Query.SparqlResultSet)
  - VDS.RDF.Dynamic.DynamicSparqlResultSet.GetEnumerator
  - VDS.RDF.Dynamic.DynamicSparqlResultSet.System#Collections#IEnumerable#GetEnumerator
  - VDS.RDF.Dynamic.DynamicSparqlResultSet.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  langs:
  - csharp
  - vb
  name: DynamicSparqlResultSet
  nameWithType: DynamicSparqlResultSet
  fullName: VDS.RDF.Dynamic.DynamicSparqlResultSet
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicSparqlResultSet.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DynamicSparqlResultSet
    path: ../../dotNetRDF/Libraries/dotNetRDF/Dynamic/DynamicSparqlResultSet.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nProvides dynamic functionality for <xref href=\"VDS.RDF.Query.SparqlResultSet\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: 'public class DynamicSparqlResultSet : IEnumerable<DynamicSparqlResult>, IEnumerable, IDynamicMetaObjectProvider'
    content.vb: >-
      Public Class DynamicSparqlResultSet
          Implements IEnumerable(Of DynamicSparqlResult), IEnumerable, IDynamicMetaObjectProvider
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult}
  - System.Collections.IEnumerable
  - System.Dynamic.IDynamicMetaObjectProvider
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Dynamic.DynamicSparqlResultSet.VDS.RDF.Extensions.AsEnumerable``1
  - System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult}.VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult})
  - System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult}.VDS.RDF.Extensions.ChunkBy``1(System.Int32)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Dynamic.DynamicSparqlResultSet.#ctor(VDS.RDF.Query.SparqlResultSet)
  commentId: M:VDS.RDF.Dynamic.DynamicSparqlResultSet.#ctor(VDS.RDF.Query.SparqlResultSet)
  id: '#ctor(VDS.RDF.Query.SparqlResultSet)'
  parent: VDS.RDF.Dynamic.DynamicSparqlResultSet
  langs:
  - csharp
  - vb
  name: DynamicSparqlResultSet(SparqlResultSet)
  nameWithType: DynamicSparqlResultSet.DynamicSparqlResultSet(SparqlResultSet)
  fullName: VDS.RDF.Dynamic.DynamicSparqlResultSet.DynamicSparqlResultSet(VDS.RDF.Query.SparqlResultSet)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicSparqlResultSet.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Dynamic/DynamicSparqlResultSet.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nInitializes a new instance of the <xref href=\"VDS.RDF.Dynamic.DynamicSparqlResultSet\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DynamicSparqlResultSet(SparqlResultSet original)
    parameters:
    - id: original
      type: VDS.RDF.Query.SparqlResultSet
      description: The SPARQL result set to wrap.
    content.vb: Public Sub New(original As SparqlResultSet)
  overload: VDS.RDF.Dynamic.DynamicSparqlResultSet.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicSparqlResultSet.GetEnumerator
  commentId: M:VDS.RDF.Dynamic.DynamicSparqlResultSet.GetEnumerator
  id: GetEnumerator
  parent: VDS.RDF.Dynamic.DynamicSparqlResultSet
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: DynamicSparqlResultSet.GetEnumerator()
  fullName: VDS.RDF.Dynamic.DynamicSparqlResultSet.GetEnumerator()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicSparqlResultSet.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetEnumerator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Dynamic/DynamicSparqlResultSet.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nReturns an enumerator that iterates through dynamic results in the set.\n"
  example: []
  syntax:
    content: public IEnumerator<DynamicSparqlResult> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{VDS.RDF.Dynamic.DynamicSparqlResult}
      description: An enumerator that can be used to iterate through dynamic results in the set.
    content.vb: Public Function GetEnumerator As IEnumerator(Of DynamicSparqlResult)
  overload: VDS.RDF.Dynamic.DynamicSparqlResultSet.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Dynamic.DynamicSparqlResultSet.System#Collections#IEnumerable#GetEnumerator
  commentId: M:VDS.RDF.Dynamic.DynamicSparqlResultSet.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicSparqlResultSet
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: DynamicSparqlResultSet.IEnumerable.GetEnumerator()
  fullName: VDS.RDF.Dynamic.DynamicSparqlResultSet.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicSparqlResultSet.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Dynamic/DynamicSparqlResultSet.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: VDS.RDF.Dynamic.DynamicSparqlResultSet.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: DynamicSparqlResultSet.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: VDS.RDF.Dynamic.DynamicSparqlResultSet.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:VDS.RDF.Dynamic.DynamicSparqlResultSet.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  id: System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicSparqlResultSet
  langs:
  - csharp
  - vb
  name: IDynamicMetaObjectProvider.GetMetaObject(Expression)
  nameWithType: DynamicSparqlResultSet.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  fullName: VDS.RDF.Dynamic.DynamicSparqlResultSet.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicSparqlResultSet.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    path: ../../dotNetRDF/Libraries/dotNetRDF/Dynamic/DynamicSparqlResultSet.cs
    startLine: 75
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: DynamicMetaObject IDynamicMetaObjectProvider.GetMetaObject(Expression parameter)
    parameters:
    - id: parameter
      type: System.Linq.Expressions.Expression
    return:
      type: System.Dynamic.DynamicMetaObject
    content.vb: Function System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(parameter As Expression) As DynamicMetaObject Implements IDynamicMetaObjectProvider.GetMetaObject
  overload: VDS.RDF.Dynamic.DynamicSparqlResultSet.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject*
  implements:
  - System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  nameWithType.vb: DynamicSparqlResultSet.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  name.vb: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
references:
- uid: VDS.RDF.Query.SparqlResultSet
  commentId: T:VDS.RDF.Query.SparqlResultSet
  parent: VDS.RDF.Query
  name: SparqlResultSet
  nameWithType: SparqlResultSet
  fullName: VDS.RDF.Query.SparqlResultSet
- uid: VDS.RDF.Dynamic
  commentId: N:VDS.RDF.Dynamic
  name: VDS.RDF.Dynamic
  nameWithType: VDS.RDF.Dynamic
  fullName: VDS.RDF.Dynamic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<DynamicSparqlResult>
  nameWithType: IEnumerable<DynamicSparqlResult>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Dynamic.DynamicSparqlResult>
  nameWithType.vb: IEnumerable(Of DynamicSparqlResult)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Dynamic.DynamicSparqlResult)
  name.vb: IEnumerable(Of DynamicSparqlResult)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Dynamic.DynamicSparqlResult
    name: DynamicSparqlResult
    nameWithType: DynamicSparqlResult
    fullName: VDS.RDF.Dynamic.DynamicSparqlResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Dynamic.DynamicSparqlResult
    name: DynamicSparqlResult
    nameWithType: DynamicSparqlResult
    fullName: VDS.RDF.Dynamic.DynamicSparqlResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Dynamic.IDynamicMetaObjectProvider
  commentId: T:System.Dynamic.IDynamicMetaObjectProvider
  parent: System.Dynamic
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicSparqlResultSet.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<DynamicSparqlResultSet>()
  nameWithType: Extensions.AsEnumerable<DynamicSparqlResultSet>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Dynamic.DynamicSparqlResultSet>()
  nameWithType.vb: Extensions.AsEnumerable(Of DynamicSparqlResultSet)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Dynamic.DynamicSparqlResultSet)()
  name.vb: AsEnumerable(Of DynamicSparqlResultSet)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<DynamicSparqlResultSet>
    nameWithType: Extensions.AsEnumerable<DynamicSparqlResultSet>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Dynamic.DynamicSparqlResultSet>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of DynamicSparqlResultSet)
    nameWithType: Extensions.AsEnumerable(Of DynamicSparqlResultSet)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Dynamic.DynamicSparqlResultSet)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult}.VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult})
  commentId: M:VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  name: IsDisjoint<DynamicSparqlResult>(IEnumerable<DynamicSparqlResult>)
  nameWithType: Extensions.IsDisjoint<DynamicSparqlResult>(IEnumerable<DynamicSparqlResult>)
  fullName: VDS.RDF.Extensions.IsDisjoint<VDS.RDF.Dynamic.DynamicSparqlResult>(System.Collections.Generic.IEnumerable<VDS.RDF.Dynamic.DynamicSparqlResult>)
  nameWithType.vb: Extensions.IsDisjoint(Of DynamicSparqlResult)(IEnumerable(Of DynamicSparqlResult))
  fullName.vb: VDS.RDF.Extensions.IsDisjoint(Of VDS.RDF.Dynamic.DynamicSparqlResult)(System.Collections.Generic.IEnumerable(Of VDS.RDF.Dynamic.DynamicSparqlResult))
  name.vb: IsDisjoint(Of DynamicSparqlResult)(IEnumerable(Of DynamicSparqlResult))
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0})
    name: IsDisjoint<DynamicSparqlResult>
    nameWithType: Extensions.IsDisjoint<DynamicSparqlResult>
    fullName: VDS.RDF.Extensions.IsDisjoint<VDS.RDF.Dynamic.DynamicSparqlResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Dynamic.DynamicSparqlResult
    name: DynamicSparqlResult
    nameWithType: DynamicSparqlResult
    fullName: VDS.RDF.Dynamic.DynamicSparqlResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0})
    name: IsDisjoint(Of DynamicSparqlResult)
    nameWithType: Extensions.IsDisjoint(Of DynamicSparqlResult)
    fullName: VDS.RDF.Extensions.IsDisjoint(Of VDS.RDF.Dynamic.DynamicSparqlResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Dynamic.DynamicSparqlResult
    name: DynamicSparqlResult
    nameWithType: DynamicSparqlResult
    fullName: VDS.RDF.Dynamic.DynamicSparqlResult
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult}.VDS.RDF.Extensions.ChunkBy``1(System.Int32)
  commentId: M:VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  name: ChunkBy<DynamicSparqlResult>(Int32)
  nameWithType: Extensions.ChunkBy<DynamicSparqlResult>(Int32)
  fullName: VDS.RDF.Extensions.ChunkBy<VDS.RDF.Dynamic.DynamicSparqlResult>(System.Int32)
  nameWithType.vb: Extensions.ChunkBy(Of DynamicSparqlResult)(Int32)
  fullName.vb: VDS.RDF.Extensions.ChunkBy(Of VDS.RDF.Dynamic.DynamicSparqlResult)(System.Int32)
  name.vb: ChunkBy(Of DynamicSparqlResult)(Int32)
  spec.csharp:
  - uid: VDS.RDF.Extensions.ChunkBy``1(System.Int32)
    name: ChunkBy<DynamicSparqlResult>
    nameWithType: Extensions.ChunkBy<DynamicSparqlResult>
    fullName: VDS.RDF.Extensions.ChunkBy<VDS.RDF.Dynamic.DynamicSparqlResult>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.ChunkBy``1(System.Int32)
    name: ChunkBy(Of DynamicSparqlResult)
    nameWithType: Extensions.ChunkBy(Of DynamicSparqlResult)
    fullName: VDS.RDF.Extensions.ChunkBy(Of VDS.RDF.Dynamic.DynamicSparqlResult)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: true
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  commentId: M:VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: IsDisjoint<T>(IEnumerable<T>, IEnumerable<T>)
  nameWithType: Extensions.IsDisjoint<T>(IEnumerable<T>, IEnumerable<T>)
  fullName: VDS.RDF.Extensions.IsDisjoint<T>(System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: Extensions.IsDisjoint(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  fullName.vb: VDS.RDF.Extensions.IsDisjoint(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsDisjoint(Of T)(IEnumerable(Of T), IEnumerable(Of T))
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: IsDisjoint<T>
    nameWithType: Extensions.IsDisjoint<T>
    fullName: VDS.RDF.Extensions.IsDisjoint<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsDisjoint``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
    name: IsDisjoint(Of T)
    nameWithType: Extensions.IsDisjoint(Of T)
    fullName: VDS.RDF.Extensions.IsDisjoint(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  commentId: M:VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  isExternal: true
  name: ChunkBy<T>(IEnumerable<T>, Int32)
  nameWithType: Extensions.ChunkBy<T>(IEnumerable<T>, Int32)
  fullName: VDS.RDF.Extensions.ChunkBy<T>(System.Collections.Generic.IEnumerable<T>, System.Int32)
  nameWithType.vb: Extensions.ChunkBy(Of T)(IEnumerable(Of T), Int32)
  fullName.vb: VDS.RDF.Extensions.ChunkBy(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Int32)
  name.vb: ChunkBy(Of T)(IEnumerable(Of T), Int32)
  spec.csharp:
  - uid: VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ChunkBy<T>
    nameWithType: Extensions.ChunkBy<T>
    fullName: VDS.RDF.Extensions.ChunkBy<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.ChunkBy``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
    name: ChunkBy(Of T)
    nameWithType: Extensions.ChunkBy(Of T)
    fullName: VDS.RDF.Extensions.ChunkBy(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Dynamic.DynamicSparqlResultSet
  commentId: T:VDS.RDF.Dynamic.DynamicSparqlResultSet
  name: DynamicSparqlResultSet
  nameWithType: DynamicSparqlResultSet
  fullName: VDS.RDF.Dynamic.DynamicSparqlResultSet
- uid: VDS.RDF.Dynamic.DynamicSparqlResultSet.#ctor*
  commentId: Overload:VDS.RDF.Dynamic.DynamicSparqlResultSet.#ctor
  name: DynamicSparqlResultSet
  nameWithType: DynamicSparqlResultSet.DynamicSparqlResultSet
  fullName: VDS.RDF.Dynamic.DynamicSparqlResultSet.DynamicSparqlResultSet
- uid: VDS.RDF.Dynamic.DynamicSparqlResultSet.GetEnumerator*
  commentId: Overload:VDS.RDF.Dynamic.DynamicSparqlResultSet.GetEnumerator
  name: GetEnumerator
  nameWithType: DynamicSparqlResultSet.GetEnumerator
  fullName: VDS.RDF.Dynamic.DynamicSparqlResultSet.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{VDS.RDF.Dynamic.DynamicSparqlResult}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<DynamicSparqlResult>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Dynamic.DynamicSparqlResult>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of DynamicSparqlResult).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Dynamic.DynamicSparqlResult).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<DynamicSparqlResult>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Dynamic.DynamicSparqlResult>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of DynamicSparqlResult).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of VDS.RDF.Dynamic.DynamicSparqlResult).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{VDS.RDF.Dynamic.DynamicSparqlResult}
  commentId: T:System.Collections.Generic.IEnumerator{VDS.RDF.Dynamic.DynamicSparqlResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<DynamicSparqlResult>
  nameWithType: IEnumerator<DynamicSparqlResult>
  fullName: System.Collections.Generic.IEnumerator<VDS.RDF.Dynamic.DynamicSparqlResult>
  nameWithType.vb: IEnumerator(Of DynamicSparqlResult)
  fullName.vb: System.Collections.Generic.IEnumerator(Of VDS.RDF.Dynamic.DynamicSparqlResult)
  name.vb: IEnumerator(Of DynamicSparqlResult)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Dynamic.DynamicSparqlResult
    name: DynamicSparqlResult
    nameWithType: DynamicSparqlResult
    fullName: VDS.RDF.Dynamic.DynamicSparqlResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Dynamic.DynamicSparqlResult
    name: DynamicSparqlResult
    nameWithType: DynamicSparqlResult
    fullName: VDS.RDF.Dynamic.DynamicSparqlResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicSparqlResultSet.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:VDS.RDF.Dynamic.DynamicSparqlResultSet.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: DynamicSparqlResultSet.IEnumerable.GetEnumerator
  fullName: VDS.RDF.Dynamic.DynamicSparqlResultSet.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: DynamicSparqlResultSet.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: VDS.RDF.Dynamic.DynamicSparqlResultSet.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject*
  commentId: Overload:VDS.RDF.Dynamic.DynamicSparqlResultSet.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject
  name: IDynamicMetaObjectProvider.GetMetaObject
  nameWithType: DynamicSparqlResultSet.IDynamicMetaObjectProvider.GetMetaObject
  fullName: VDS.RDF.Dynamic.DynamicSparqlResultSet.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  nameWithType.vb: DynamicSparqlResultSet.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  name.vb: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
- uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  parent: System.Dynamic.IDynamicMetaObjectProvider
  isExternal: true
  name: GetMetaObject(Expression)
  nameWithType: IDynamicMetaObjectProvider.GetMetaObject(Expression)
  fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: IDynamicMetaObjectProvider.GetMetaObject
    fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
    name: GetMetaObject
    nameWithType: IDynamicMetaObjectProvider.GetMetaObject
    fullName: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression
  commentId: T:System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression
  nameWithType: Expression
  fullName: System.Linq.Expressions.Expression
- uid: System.Dynamic.DynamicMetaObject
  commentId: T:System.Dynamic.DynamicMetaObject
  parent: System.Dynamic
  isExternal: true
  name: DynamicMetaObject
  nameWithType: DynamicMetaObject
  fullName: System.Dynamic.DynamicMetaObject
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
