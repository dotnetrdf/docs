### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Writing.JsonLdWriterOptions
  commentId: T:VDS.RDF.Writing.JsonLdWriterOptions
  id: JsonLdWriterOptions
  parent: VDS.RDF.Writing
  children:
  - VDS.RDF.Writing.JsonLdWriterOptions.JsonFormatting
  - VDS.RDF.Writing.JsonLdWriterOptions.Ordered
  - VDS.RDF.Writing.JsonLdWriterOptions.ProcessingMode
  - VDS.RDF.Writing.JsonLdWriterOptions.RdfDirection
  - VDS.RDF.Writing.JsonLdWriterOptions.UseNativeTypes
  - VDS.RDF.Writing.JsonLdWriterOptions.UseRdfType
  langs:
  - csharp
  - vb
  name: JsonLdWriterOptions
  nameWithType: JsonLdWriterOptions
  fullName: VDS.RDF.Writing.JsonLdWriterOptions
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: JsonLdWriterOptions
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nClass representing the options that can be passed to the <xref href=\"VDS.RDF.Writing.JsonLdWriter\" data-throw-if-not-resolved=\"false\"></xref> via its constructor.\n"
  example: []
  syntax:
    content: public class JsonLdWriterOptions
    content.vb: Public Class JsonLdWriterOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Writing.JsonLdWriterOptions.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Writing.JsonLdWriterOptions.Ordered
  commentId: P:VDS.RDF.Writing.JsonLdWriterOptions.Ordered
  id: Ordered
  parent: VDS.RDF.Writing.JsonLdWriterOptions
  langs:
  - csharp
  - vb
  name: Ordered
  nameWithType: JsonLdWriterOptions.Ordered
  fullName: VDS.RDF.Writing.JsonLdWriterOptions.Ordered
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Ordered
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nOrder dictionary keys lexicographically in the JSON output\n"
  example: []
  syntax:
    content: public bool Ordered { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Ordered As Boolean
  overload: VDS.RDF.Writing.JsonLdWriterOptions.Ordered*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.JsonLdWriterOptions.RdfDirection
  commentId: P:VDS.RDF.Writing.JsonLdWriterOptions.RdfDirection
  id: RdfDirection
  parent: VDS.RDF.Writing.JsonLdWriterOptions
  langs:
  - csharp
  - vb
  name: RdfDirection
  nameWithType: JsonLdWriterOptions.RdfDirection
  fullName: VDS.RDF.Writing.JsonLdWriterOptions.RdfDirection
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RdfDirection
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
    startLine: 48
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGet or set the text direction mode to use.\n"
  remarks: >
    The default value of null indicates that there is no text direction information in the RDF.

    A value of <xref href="VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode.I18NDatatype" data-throw-if-not-resolved="false"></xref> indicates that both language and text direction are encoded in the literal datatype IRI.

    A value of <xref href="VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode.CompoundLiteral" data-throw-if-not-resolved="false"></xref> indicates that literals with text direction are represented as a blank node with an rdf:direction property.
  example: []
  syntax:
    content: public JsonLdRdfDirectionMode? RdfDirection { get; set; }
    parameters: []
    return:
      type: System.Nullable{VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode}
    content.vb: Public Property RdfDirection As JsonLdRdfDirectionMode?
  overload: VDS.RDF.Writing.JsonLdWriterOptions.RdfDirection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.JsonLdWriterOptions.UseNativeTypes
  commentId: P:VDS.RDF.Writing.JsonLdWriterOptions.UseNativeTypes
  id: UseNativeTypes
  parent: VDS.RDF.Writing.JsonLdWriterOptions
  langs:
  - csharp
  - vb
  name: UseNativeTypes
  nameWithType: JsonLdWriterOptions.UseNativeTypes
  fullName: VDS.RDF.Writing.JsonLdWriterOptions.UseNativeTypes
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UseNativeTypes
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nIf the this flag is set to true, RDF literals with a datatype IRI that equals xsd:integer or xsd:double are converted \nto a JSON numbers and RDF literals with a datatype IRI that equals xsd:boolean are converted to true or false based \non their lexical form.\n"
  example: []
  syntax:
    content: public bool UseNativeTypes { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseNativeTypes As Boolean
  overload: VDS.RDF.Writing.JsonLdWriterOptions.UseNativeTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.JsonLdWriterOptions.UseRdfType
  commentId: P:VDS.RDF.Writing.JsonLdWriterOptions.UseRdfType
  id: UseRdfType
  parent: VDS.RDF.Writing.JsonLdWriterOptions
  langs:
  - csharp
  - vb
  name: UseRdfType
  nameWithType: JsonLdWriterOptions.UseRdfType
  fullName: VDS.RDF.Writing.JsonLdWriterOptions.UseRdfType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UseRdfType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nUnless this flag is set to true, rdf:type predicates will be serialized as @type as long as the \nassociated object is either an IRI or blank node identifier.\n"
  example: []
  syntax:
    content: public bool UseRdfType { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseRdfType As Boolean
  overload: VDS.RDF.Writing.JsonLdWriterOptions.UseRdfType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.JsonLdWriterOptions.ProcessingMode
  commentId: P:VDS.RDF.Writing.JsonLdWriterOptions.ProcessingMode
  id: ProcessingMode
  parent: VDS.RDF.Writing.JsonLdWriterOptions
  langs:
  - csharp
  - vb
  name: ProcessingMode
  nameWithType: JsonLdWriterOptions.ProcessingMode
  fullName: VDS.RDF.Writing.JsonLdWriterOptions.ProcessingMode
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ProcessingMode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  syntax:
    content: public JsonLdProcessingMode ProcessingMode { get; set; }
    parameters: []
    return:
      type: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode
    content.vb: Public Property ProcessingMode As JsonLdProcessingMode
  overload: VDS.RDF.Writing.JsonLdWriterOptions.ProcessingMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Writing.JsonLdWriterOptions.JsonFormatting
  commentId: P:VDS.RDF.Writing.JsonLdWriterOptions.JsonFormatting
  id: JsonFormatting
  parent: VDS.RDF.Writing.JsonLdWriterOptions
  langs:
  - csharp
  - vb
  name: JsonFormatting
  nameWithType: JsonLdWriterOptions.JsonFormatting
  fullName: VDS.RDF.Writing.JsonLdWriterOptions.JsonFormatting
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: JsonFormatting
    path: ../../dotNetRDF/Libraries/dotNetRDF/Writing/JsonLdWriterOptions.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Writing
  summary: "\nGet or set the formatting to apply to the JSON generated by the writer.\n"
  remarks: Defaults to <xref href="Newtonsoft.Json.Formatting.Indented" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public Formatting JsonFormatting { get; set; }
    parameters: []
    return:
      type: Newtonsoft.Json.Formatting
    content.vb: Public Property JsonFormatting As Formatting
  overload: VDS.RDF.Writing.JsonLdWriterOptions.JsonFormatting*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Writing.JsonLdWriter
  commentId: T:VDS.RDF.Writing.JsonLdWriter
  name: JsonLdWriter
  nameWithType: JsonLdWriter
  fullName: VDS.RDF.Writing.JsonLdWriter
- uid: VDS.RDF.Writing
  commentId: N:VDS.RDF.Writing
  name: VDS.RDF.Writing
  nameWithType: VDS.RDF.Writing
  fullName: VDS.RDF.Writing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Writing.JsonLdWriterOptions.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<JsonLdWriterOptions>()
  nameWithType: Extensions.AsEnumerable<JsonLdWriterOptions>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.JsonLdWriterOptions>()
  nameWithType.vb: Extensions.AsEnumerable(Of JsonLdWriterOptions)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.JsonLdWriterOptions)()
  name.vb: AsEnumerable(Of JsonLdWriterOptions)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<JsonLdWriterOptions>
    nameWithType: Extensions.AsEnumerable<JsonLdWriterOptions>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Writing.JsonLdWriterOptions>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of JsonLdWriterOptions)
    nameWithType: Extensions.AsEnumerable(Of JsonLdWriterOptions)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Writing.JsonLdWriterOptions)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Writing.JsonLdWriterOptions.Ordered*
  commentId: Overload:VDS.RDF.Writing.JsonLdWriterOptions.Ordered
  name: Ordered
  nameWithType: JsonLdWriterOptions.Ordered
  fullName: VDS.RDF.Writing.JsonLdWriterOptions.Ordered
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode.I18NDatatype
  commentId: F:VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode.I18NDatatype
  isExternal: true
- uid: VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode.CompoundLiteral
  commentId: F:VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode.CompoundLiteral
  isExternal: true
- uid: VDS.RDF.Writing.JsonLdWriterOptions.RdfDirection*
  commentId: Overload:VDS.RDF.Writing.JsonLdWriterOptions.RdfDirection
  name: RdfDirection
  nameWithType: JsonLdWriterOptions.RdfDirection
  fullName: VDS.RDF.Writing.JsonLdWriterOptions.RdfDirection
- uid: System.Nullable{VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode}
  commentId: T:System.Nullable{VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<JsonLdRdfDirectionMode>
  nameWithType: Nullable<JsonLdRdfDirectionMode>
  fullName: System.Nullable<VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode>
  nameWithType.vb: Nullable(Of JsonLdRdfDirectionMode)
  fullName.vb: System.Nullable(Of VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode)
  name.vb: Nullable(Of JsonLdRdfDirectionMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode
    name: JsonLdRdfDirectionMode
    nameWithType: JsonLdRdfDirectionMode
    fullName: VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode
    name: JsonLdRdfDirectionMode
    nameWithType: JsonLdRdfDirectionMode
    fullName: VDS.RDF.JsonLd.Syntax.JsonLdRdfDirectionMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Writing.JsonLdWriterOptions.UseNativeTypes*
  commentId: Overload:VDS.RDF.Writing.JsonLdWriterOptions.UseNativeTypes
  name: UseNativeTypes
  nameWithType: JsonLdWriterOptions.UseNativeTypes
  fullName: VDS.RDF.Writing.JsonLdWriterOptions.UseNativeTypes
- uid: VDS.RDF.Writing.JsonLdWriterOptions.UseRdfType*
  commentId: Overload:VDS.RDF.Writing.JsonLdWriterOptions.UseRdfType
  name: UseRdfType
  nameWithType: JsonLdWriterOptions.UseRdfType
  fullName: VDS.RDF.Writing.JsonLdWriterOptions.UseRdfType
- uid: VDS.RDF.Writing.JsonLdWriterOptions.ProcessingMode*
  commentId: Overload:VDS.RDF.Writing.JsonLdWriterOptions.ProcessingMode
  name: ProcessingMode
  nameWithType: JsonLdWriterOptions.ProcessingMode
  fullName: VDS.RDF.Writing.JsonLdWriterOptions.ProcessingMode
- uid: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode
  commentId: T:VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode
  parent: VDS.RDF.JsonLd.Syntax
  name: JsonLdProcessingMode
  nameWithType: JsonLdProcessingMode
  fullName: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode
- uid: VDS.RDF.JsonLd.Syntax
  commentId: N:VDS.RDF.JsonLd.Syntax
  name: VDS.RDF.JsonLd.Syntax
  nameWithType: VDS.RDF.JsonLd.Syntax
  fullName: VDS.RDF.JsonLd.Syntax
- uid: Newtonsoft.Json.Formatting.Indented
  commentId: F:Newtonsoft.Json.Formatting.Indented
  isExternal: true
- uid: VDS.RDF.Writing.JsonLdWriterOptions.JsonFormatting*
  commentId: Overload:VDS.RDF.Writing.JsonLdWriterOptions.JsonFormatting
  name: JsonFormatting
  nameWithType: JsonLdWriterOptions.JsonFormatting
  fullName: VDS.RDF.Writing.JsonLdWriterOptions.JsonFormatting
- uid: Newtonsoft.Json.Formatting
  commentId: T:Newtonsoft.Json.Formatting
  parent: Newtonsoft.Json
  isExternal: true
  name: Formatting
  nameWithType: Formatting
  fullName: Newtonsoft.Json.Formatting
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
