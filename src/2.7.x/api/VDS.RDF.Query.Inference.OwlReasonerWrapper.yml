### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Inference.OwlReasonerWrapper
  commentId: T:VDS.RDF.Query.Inference.OwlReasonerWrapper
  id: OwlReasonerWrapper
  parent: VDS.RDF.Query.Inference
  children:
  - VDS.RDF.Query.Inference.OwlReasonerWrapper.#ctor(VDS.RDF.Query.Inference.IOwlReasoner)
  - VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply(VDS.RDF.IGraph)
  - VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  langs:
  - csharp
  - vb
  name: OwlReasonerWrapper
  nameWithType: OwlReasonerWrapper
  fullName: VDS.RDF.Query.Inference.OwlReasonerWrapper
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/OwlReasonerWrapper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OwlReasonerWrapper
    path: Libraries/dotNetRDF/Query/Inference/OwlReasonerWrapper.cs
    startLine: 82
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nWrapper around an <xref href=\"VDS.RDF.Query.Inference.IOwlReasoner\" data-throw-if-not-resolved=\"false\"></xref> to make it appear like a forward-chaining reasoner.\n"
  remarks: "\nEffectively equivalent to <xref href=\"VDS.RDF.Query.Inference.StaticOwlReasonerWrapper\" data-throw-if-not-resolved=\"false\"></xref> except that every Graph reasoning is applied to is added to the reasoners knowledge base (unless the reasoner uses a fixed knowledge base).\n"
  example: []
  syntax:
    content: 'public class OwlReasonerWrapper : StaticOwlReasonerWrapper, IInferenceEngine'
    content.vb: >-
      Public Class OwlReasonerWrapper
          Inherits StaticOwlReasonerWrapper
          Implements IInferenceEngine
  inheritance:
  - System.Object
  - VDS.RDF.Query.Inference.StaticOwlReasonerWrapper
  implements:
  - VDS.RDF.Query.Inference.IInferenceEngine
  inheritedMembers:
  - VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Initialise(VDS.RDF.IGraph)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Inference.OwlReasonerWrapper.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Inference.OwlReasonerWrapper.#ctor(VDS.RDF.Query.Inference.IOwlReasoner)
  commentId: M:VDS.RDF.Query.Inference.OwlReasonerWrapper.#ctor(VDS.RDF.Query.Inference.IOwlReasoner)
  id: '#ctor(VDS.RDF.Query.Inference.IOwlReasoner)'
  parent: VDS.RDF.Query.Inference.OwlReasonerWrapper
  langs:
  - csharp
  - vb
  name: OwlReasonerWrapper(IOwlReasoner)
  nameWithType: OwlReasonerWrapper.OwlReasonerWrapper(IOwlReasoner)
  fullName: VDS.RDF.Query.Inference.OwlReasonerWrapper.OwlReasonerWrapper(VDS.RDF.Query.Inference.IOwlReasoner)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/OwlReasonerWrapper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Inference/OwlReasonerWrapper.cs
    startLine: 88
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nCreates a new OWL Reasoner Wrapper around the given OWL Reasoner.\n"
  example: []
  syntax:
    content: public OwlReasonerWrapper(IOwlReasoner reasoner)
    parameters:
    - id: reasoner
      type: VDS.RDF.Query.Inference.IOwlReasoner
      description: OWL Reasoner.
    content.vb: Public Sub New(reasoner As IOwlReasoner)
  overload: VDS.RDF.Query.Inference.OwlReasonerWrapper.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply(VDS.RDF.IGraph)
  id: Apply(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Inference.OwlReasonerWrapper
  langs:
  - csharp
  - vb
  name: Apply(IGraph)
  nameWithType: OwlReasonerWrapper.Apply(IGraph)
  fullName: VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/OwlReasonerWrapper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: Libraries/dotNetRDF/Query/Inference/OwlReasonerWrapper.cs
    startLine: 95
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nApplies the reasoner to the given Graph outputting inferences into the same Graph.\n"
  example: []
  syntax:
    content: public override void Apply(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    content.vb: Public Overrides Sub Apply(g As IGraph)
  overridden: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply(VDS.RDF.IGraph)
  overload: VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  id: Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Inference.OwlReasonerWrapper
  langs:
  - csharp
  - vb
  name: Apply(IGraph, IGraph)
  nameWithType: OwlReasonerWrapper.Apply(IGraph, IGraph)
  fullName: VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply(VDS.RDF.IGraph, VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/OwlReasonerWrapper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: Libraries/dotNetRDF/Query/Inference/OwlReasonerWrapper.cs
    startLine: 105
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nApplies the reasoner to the given input Graph outputting inferences into the output Graph.\n"
  example: []
  syntax:
    content: public override void Apply(IGraph input, IGraph output)
    parameters:
    - id: input
      type: VDS.RDF.IGraph
      description: Input Graph.
    - id: output
      type: VDS.RDF.IGraph
      description: Output Graph.
    content.vb: Public Overrides Sub Apply(input As IGraph, output As IGraph)
  overridden: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  overload: VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query.Inference.IOwlReasoner
  commentId: T:VDS.RDF.Query.Inference.IOwlReasoner
  parent: VDS.RDF.Query.Inference
  name: IOwlReasoner
  nameWithType: IOwlReasoner
  fullName: VDS.RDF.Query.Inference.IOwlReasoner
- uid: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper
  commentId: T:VDS.RDF.Query.Inference.StaticOwlReasonerWrapper
  parent: VDS.RDF.Query.Inference
  name: StaticOwlReasonerWrapper
  nameWithType: StaticOwlReasonerWrapper
  fullName: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper
- uid: VDS.RDF.Query.Inference
  commentId: N:VDS.RDF.Query.Inference
  name: VDS.RDF.Query.Inference
  nameWithType: VDS.RDF.Query.Inference
  fullName: VDS.RDF.Query.Inference
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Inference.IInferenceEngine
  commentId: T:VDS.RDF.Query.Inference.IInferenceEngine
  parent: VDS.RDF.Query.Inference
  name: IInferenceEngine
  nameWithType: IInferenceEngine
  fullName: VDS.RDF.Query.Inference.IInferenceEngine
- uid: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Initialise(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Initialise(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper
  name: Initialise(IGraph)
  nameWithType: StaticOwlReasonerWrapper.Initialise(IGraph)
  fullName: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Initialise(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Initialise(VDS.RDF.IGraph)
    name: Initialise
    nameWithType: StaticOwlReasonerWrapper.Initialise
    fullName: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Initialise(VDS.RDF.IGraph)
    name: Initialise
    nameWithType: StaticOwlReasonerWrapper.Initialise
    fullName: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Initialise
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.OwlReasonerWrapper.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<OwlReasonerWrapper>()
  nameWithType: Extensions.AsEnumerable<OwlReasonerWrapper>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.OwlReasonerWrapper>()
  nameWithType.vb: Extensions.AsEnumerable(Of OwlReasonerWrapper)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.OwlReasonerWrapper)()
  name.vb: AsEnumerable(Of OwlReasonerWrapper)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<OwlReasonerWrapper>
    nameWithType: Extensions.AsEnumerable<OwlReasonerWrapper>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.OwlReasonerWrapper>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of OwlReasonerWrapper)
    nameWithType: Extensions.AsEnumerable(Of OwlReasonerWrapper)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.OwlReasonerWrapper)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Inference.OwlReasonerWrapper.#ctor*
  commentId: Overload:VDS.RDF.Query.Inference.OwlReasonerWrapper.#ctor
  name: OwlReasonerWrapper
  nameWithType: OwlReasonerWrapper.OwlReasonerWrapper
  fullName: VDS.RDF.Query.Inference.OwlReasonerWrapper.OwlReasonerWrapper
- uid: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper
  name: Apply(IGraph)
  nameWithType: StaticOwlReasonerWrapper.Apply(IGraph)
  fullName: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply(VDS.RDF.IGraph)
    name: Apply
    nameWithType: StaticOwlReasonerWrapper.Apply
    fullName: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply(VDS.RDF.IGraph)
    name: Apply
    nameWithType: StaticOwlReasonerWrapper.Apply
    fullName: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply*
  commentId: Overload:VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply
  name: Apply
  nameWithType: OwlReasonerWrapper.Apply
  fullName: VDS.RDF.Query.Inference.OwlReasonerWrapper.Apply
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper
  name: Apply(IGraph, IGraph)
  nameWithType: StaticOwlReasonerWrapper.Apply(IGraph, IGraph)
  fullName: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply(VDS.RDF.IGraph, VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
    name: Apply
    nameWithType: StaticOwlReasonerWrapper.Apply
    fullName: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply(VDS.RDF.IGraph,VDS.RDF.IGraph)
    name: Apply
    nameWithType: StaticOwlReasonerWrapper.Apply
    fullName: VDS.RDF.Query.Inference.StaticOwlReasonerWrapper.Apply
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
