### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Contexts.IEventParserContext`1
  commentId: T:VDS.RDF.Parsing.Contexts.IEventParserContext`1
  id: IEventParserContext`1
  parent: VDS.RDF.Parsing.Contexts
  children:
  - VDS.RDF.Parsing.Contexts.IEventParserContext`1.Events
  langs:
  - csharp
  - vb
  name: IEventParserContext<T>
  nameWithType: IEventParserContext<T>
  fullName: VDS.RDF.Parsing.Contexts.IEventParserContext<T>
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/IEventParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IEventParserContext
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/IEventParserContext.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nInterface for Event Parser contexts.\n"
  example: []
  syntax:
    content: >-
      public interface IEventParserContext<T>
          where T : IEvent
    typeParameters:
    - id: T
      description: Event Type.
    content.vb: Public Interface IEventParserContext(Of T As IEvent)
  extensionMethods:
  - VDS.RDF.Parsing.Contexts.IEventParserContext`1.VDS.RDF.Extensions.AsEnumerable``1
  nameWithType.vb: IEventParserContext(Of T)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: VDS.RDF.Parsing.Contexts.IEventParserContext(Of T)
  name.vb: IEventParserContext(Of T)
- uid: VDS.RDF.Parsing.Contexts.IEventParserContext`1.Events
  commentId: P:VDS.RDF.Parsing.Contexts.IEventParserContext`1.Events
  id: Events
  parent: VDS.RDF.Parsing.Contexts.IEventParserContext`1
  langs:
  - csharp
  - vb
  name: Events
  nameWithType: IEventParserContext<T>.Events
  fullName: VDS.RDF.Parsing.Contexts.IEventParserContext<T>.Events
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/IEventParserContext.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Events
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Contexts/IEventParserContext.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nQueue of Events.\n"
  example: []
  syntax:
    content: IEventQueue<T> Events { get; }
    parameters: []
    return:
      type: VDS.RDF.Parsing.Events.IEventQueue{{T}}
    content.vb: ReadOnly Property Events As IEventQueue(Of T)
  overload: VDS.RDF.Parsing.Contexts.IEventParserContext`1.Events*
  nameWithType.vb: IEventParserContext(Of T).Events
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: VDS.RDF.Parsing.Contexts.IEventParserContext(Of T).Events
references:
- uid: VDS.RDF.Parsing.Contexts
  commentId: N:VDS.RDF.Parsing.Contexts
  name: VDS.RDF.Parsing.Contexts
  nameWithType: VDS.RDF.Parsing.Contexts
  fullName: VDS.RDF.Parsing.Contexts
- uid: VDS.RDF.Parsing.Contexts.IEventParserContext`1.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IEventParserContext<T>>()
  nameWithType: Extensions.AsEnumerable<IEventParserContext<T>>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.IEventParserContext<T>>()
  nameWithType.vb: Extensions.AsEnumerable(Of IEventParserContext(Of T))()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.IEventParserContext(Of T))()
  name.vb: AsEnumerable(Of IEventParserContext(Of T))()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IEventParserContext<T>>
    nameWithType: Extensions.AsEnumerable<IEventParserContext<T>>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.IEventParserContext<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IEventParserContext(Of T))
    nameWithType: Extensions.AsEnumerable(Of IEventParserContext(Of T))
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.IEventParserContext(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Contexts.IEventParserContext`1.Events*
  commentId: Overload:VDS.RDF.Parsing.Contexts.IEventParserContext`1.Events
  name: Events
  nameWithType: IEventParserContext<T>.Events
  fullName: VDS.RDF.Parsing.Contexts.IEventParserContext<T>.Events
  nameWithType.vb: IEventParserContext(Of T).Events
  fullName.vb: VDS.RDF.Parsing.Contexts.IEventParserContext(Of T).Events
- uid: VDS.RDF.Parsing.Events.IEventQueue{{T}}
  commentId: T:VDS.RDF.Parsing.Events.IEventQueue{`0}
  parent: VDS.RDF.Parsing.Events
  definition: VDS.RDF.Parsing.Events.IEventQueue`1
  name: IEventQueue<T>
  nameWithType: IEventQueue<T>
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>
  nameWithType.vb: IEventQueue(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T)
  name.vb: IEventQueue(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.IEventQueue`1
  commentId: T:VDS.RDF.Parsing.Events.IEventQueue`1
  name: IEventQueue<T>
  nameWithType: IEventQueue<T>
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>
  nameWithType.vb: IEventQueue(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T)
  name.vb: IEventQueue(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events
  commentId: N:VDS.RDF.Parsing.Events
  name: VDS.RDF.Parsing.Events
  nameWithType: VDS.RDF.Parsing.Events
  fullName: VDS.RDF.Parsing.Events
