### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Inference.Pellet.Services.QueryService
  commentId: T:VDS.RDF.Query.Inference.Pellet.Services.QueryService
  id: QueryService
  parent: VDS.RDF.Query.Inference.Pellet.Services
  children:
  - VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(System.String)
  - VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(System.String,VDS.RDF.GraphCallback,VDS.RDF.SparqlResultsCallback,System.Object)
  - VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  - VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String,VDS.RDF.QueryCallback,System.Object)
  langs:
  - csharp
  - vb
  name: QueryService
  nameWithType: QueryService
  fullName: VDS.RDF.Query.Inference.Pellet.Services.QueryService
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/QueryService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryService
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/QueryService.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nRepresents the SPARQL Query Service provided by a Pellet Server knowledge base.\n"
  example: []
  syntax:
    content: 'public class QueryService : PelletService'
    content.vb: >-
      Public Class QueryService
          Inherits PelletService
  inheritance:
  - System.Object
  - VDS.RDF.Query.Inference.Pellet.PelletService
  inheritedMembers:
  - VDS.RDF.Query.Inference.Pellet.PelletService.Name
  - VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
  - VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Inference.Pellet.Services.QueryService.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(System.String)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(System.String)
  id: Query(System.String)
  parent: VDS.RDF.Query.Inference.Pellet.Services.QueryService
  langs:
  - csharp
  - vb
  name: Query(String)
  nameWithType: QueryService.Query(String)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/QueryService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Query
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/QueryService.cs
    startLine: 58
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nMakes a SPARQL Query against the Knowledge Base.\n"
  example: []
  syntax:
    content: public object Query(string sparqlQuery)
    parameters:
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query.
    return:
      type: System.Object
      description: ''
    content.vb: Public Function Query(sparqlQuery As String) As Object
  overload: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  id: Query(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  parent: VDS.RDF.Query.Inference.Pellet.Services.QueryService
  langs:
  - csharp
  - vb
  name: Query(IRdfHandler, ISparqlResultsHandler, String)
  nameWithType: QueryService.Query(IRdfHandler, ISparqlResultsHandler, String)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/QueryService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Query
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/QueryService.cs
    startLine: 91
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nProcesses a SPARQL Query against the Knowledge Base passing the results to the RDF or Results handler as appropriate.\n"
  example: []
  syntax:
    content: public void Query(IRdfHandler rdfHandler, ISparqlResultsHandler resultsHandler, string sparqlQuery)
    parameters:
    - id: rdfHandler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: resultsHandler
      type: VDS.RDF.ISparqlResultsHandler
      description: Results Handler.
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query.
    content.vb: Public Sub Query(rdfHandler As IRdfHandler, resultsHandler As ISparqlResultsHandler, sparqlQuery As String)
  overload: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(System.String,VDS.RDF.GraphCallback,VDS.RDF.SparqlResultsCallback,System.Object)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(System.String,VDS.RDF.GraphCallback,VDS.RDF.SparqlResultsCallback,System.Object)
  id: Query(System.String,VDS.RDF.GraphCallback,VDS.RDF.SparqlResultsCallback,System.Object)
  parent: VDS.RDF.Query.Inference.Pellet.Services.QueryService
  langs:
  - csharp
  - vb
  name: Query(String, GraphCallback, SparqlResultsCallback, Object)
  nameWithType: QueryService.Query(String, GraphCallback, SparqlResultsCallback, Object)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(System.String, VDS.RDF.GraphCallback, VDS.RDF.SparqlResultsCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/QueryService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Query
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/QueryService.cs
    startLine: 121
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nMakes a SPARQL Query against the Knowledge Base.\n"
  remarks: "\nIf the operation succeeds the callback will be invoked normally, if there is an error the callback will be invoked with a instance of <xref href=\"VDS.RDF.AsyncError\" data-throw-if-not-resolved=\"false\"></xref> passed as the state which provides access to the error message and the original state passed in.\n"
  example: []
  syntax:
    content: public void Query(string sparqlQuery, GraphCallback graphCallback, SparqlResultsCallback resultsCallback, object state)
    parameters:
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query.
    - id: graphCallback
      type: VDS.RDF.GraphCallback
      description: Callback to invoke for queries that return a Graph.
    - id: resultsCallback
      type: VDS.RDF.SparqlResultsCallback
      description: Callback to invoke for queries that return a Result Set.
    - id: state
      type: System.Object
      description: State to pass to whichever callback function is invoked.
    content.vb: Public Sub Query(sparqlQuery As String, graphCallback As GraphCallback, resultsCallback As SparqlResultsCallback, state As Object)
  overload: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String,VDS.RDF.QueryCallback,System.Object)
  commentId: M:VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String,VDS.RDF.QueryCallback,System.Object)
  id: Query(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String,VDS.RDF.QueryCallback,System.Object)
  parent: VDS.RDF.Query.Inference.Pellet.Services.QueryService
  langs:
  - csharp
  - vb
  name: Query(IRdfHandler, ISparqlResultsHandler, String, QueryCallback, Object)
  nameWithType: QueryService.Query(IRdfHandler, ISparqlResultsHandler, String, QueryCallback, Object)
  fullName: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String, VDS.RDF.QueryCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/QueryService.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Query
    path: Libraries/dotNetRDF/Query/Inference/Pellet/Services/QueryService.cs
    startLine: 158
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet.Services
  summary: "\nProcesses a SPARQL Query against the Knowledge Base passing the results to the RDF or Results handler as appropriate.\n"
  remarks: "\nIf the operation succeeds the callback will be invoked normally, if there is an error the callback will be invoked with a instance of <xref href=\"VDS.RDF.AsyncError\" data-throw-if-not-resolved=\"false\"></xref> passed as the state which provides access to the error message and the original state passed in.\n"
  example: []
  syntax:
    content: public void Query(IRdfHandler rdfHandler, ISparqlResultsHandler resultsHandler, string sparqlQuery, QueryCallback callback, object state)
    parameters:
    - id: rdfHandler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: resultsHandler
      type: VDS.RDF.ISparqlResultsHandler
      description: Results Handler.
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query.
    - id: callback
      type: VDS.RDF.QueryCallback
      description: Callback to invoke once handling of results has completed.
    - id: state
      type: System.Object
      description: State to pass to the callback.
    content.vb: Public Sub Query(rdfHandler As IRdfHandler, resultsHandler As ISparqlResultsHandler, sparqlQuery As String, callback As QueryCallback, state As Object)
  overload: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Query.Inference.Pellet.Services
  commentId: N:VDS.RDF.Query.Inference.Pellet.Services
  name: VDS.RDF.Query.Inference.Pellet.Services
  nameWithType: VDS.RDF.Query.Inference.Pellet.Services
  fullName: VDS.RDF.Query.Inference.Pellet.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Inference.Pellet.PelletService
  commentId: T:VDS.RDF.Query.Inference.Pellet.PelletService
  parent: VDS.RDF.Query.Inference.Pellet
  name: PelletService
  nameWithType: PelletService
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService
- uid: VDS.RDF.Query.Inference.Pellet.PelletService.Name
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletService.Name
  parent: VDS.RDF.Query.Inference.Pellet.PelletService
  name: Name
  nameWithType: PelletService.Name
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService.Name
- uid: VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
  parent: VDS.RDF.Query.Inference.Pellet.PelletService
  name: Endpoint
  nameWithType: PelletService.Endpoint
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService.Endpoint
- uid: VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
  commentId: P:VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
  parent: VDS.RDF.Query.Inference.Pellet.PelletService
  name: MimeTypes
  nameWithType: PelletService.MimeTypes
  fullName: VDS.RDF.Query.Inference.Pellet.PelletService.MimeTypes
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.Pellet.Services.QueryService.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<QueryService>()
  nameWithType: Extensions.AsEnumerable<QueryService>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.Pellet.Services.QueryService>()
  nameWithType.vb: Extensions.AsEnumerable(Of QueryService)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.Pellet.Services.QueryService)()
  name.vb: AsEnumerable(Of QueryService)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<QueryService>
    nameWithType: Extensions.AsEnumerable<QueryService>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.Pellet.Services.QueryService>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of QueryService)
    nameWithType: Extensions.AsEnumerable(Of QueryService)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.Pellet.Services.QueryService)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Inference.Pellet
  commentId: N:VDS.RDF.Query.Inference.Pellet
  name: VDS.RDF.Query.Inference.Pellet
  nameWithType: VDS.RDF.Query.Inference.Pellet
  fullName: VDS.RDF.Query.Inference.Pellet
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query*
  commentId: Overload:VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query
  name: Query
  nameWithType: QueryService.Query
  fullName: VDS.RDF.Query.Inference.Pellet.Services.QueryService.Query
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.IRdfHandler
  commentId: T:VDS.RDF.IRdfHandler
  parent: VDS.RDF
  name: IRdfHandler
  nameWithType: IRdfHandler
  fullName: VDS.RDF.IRdfHandler
- uid: VDS.RDF.ISparqlResultsHandler
  commentId: T:VDS.RDF.ISparqlResultsHandler
  parent: VDS.RDF
  name: ISparqlResultsHandler
  nameWithType: ISparqlResultsHandler
  fullName: VDS.RDF.ISparqlResultsHandler
- uid: VDS.RDF.AsyncError
  commentId: T:VDS.RDF.AsyncError
  name: AsyncError
  nameWithType: AsyncError
  fullName: VDS.RDF.AsyncError
- uid: VDS.RDF.GraphCallback
  commentId: T:VDS.RDF.GraphCallback
  parent: VDS.RDF
  name: GraphCallback
  nameWithType: GraphCallback
  fullName: VDS.RDF.GraphCallback
- uid: VDS.RDF.SparqlResultsCallback
  commentId: T:VDS.RDF.SparqlResultsCallback
  parent: VDS.RDF
  name: SparqlResultsCallback
  nameWithType: SparqlResultsCallback
  fullName: VDS.RDF.SparqlResultsCallback
- uid: VDS.RDF.QueryCallback
  commentId: T:VDS.RDF.QueryCallback
  parent: VDS.RDF
  name: QueryCallback
  nameWithType: QueryCallback
  fullName: VDS.RDF.QueryCallback
shouldSkipMarkup: true
