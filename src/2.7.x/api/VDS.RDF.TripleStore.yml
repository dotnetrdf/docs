### YamlMime:ManagedReference
items:
- uid: VDS.RDF.TripleStore
  commentId: T:VDS.RDF.TripleStore
  id: TripleStore
  parent: VDS.RDF
  children:
  - VDS.RDF.TripleStore.#ctor
  - VDS.RDF.TripleStore.#ctor(VDS.RDF.BaseGraphCollection)
  - VDS.RDF.TripleStore._inferenceGraphUri
  - VDS.RDF.TripleStore._reasoners
  - VDS.RDF.TripleStore._storeInferencesExternally
  - VDS.RDF.TripleStore.AddInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  - VDS.RDF.TripleStore.ApplyInference(VDS.RDF.IGraph)
  - VDS.RDF.TripleStore.ClearInferenceEngines
  - VDS.RDF.TripleStore.Contains(VDS.RDF.Triple)
  - VDS.RDF.TripleStore.Dispose
  - VDS.RDF.TripleStore.ExecuteQuery(System.String)
  - VDS.RDF.TripleStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  - VDS.RDF.TripleStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.TripleStore.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  - VDS.RDF.TripleStore.ExecuteUpdate(System.String)
  - VDS.RDF.TripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommand)
  - VDS.RDF.TripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommandSet)
  - VDS.RDF.TripleStore.GetTriples(System.Collections.Generic.List{System.Uri},System.Uri)
  - VDS.RDF.TripleStore.GetTriples(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  - VDS.RDF.TripleStore.GetTriples(System.Uri)
  - VDS.RDF.TripleStore.GetTriples(VDS.RDF.INode)
  - VDS.RDF.TripleStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},System.Uri)
  - VDS.RDF.TripleStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  - VDS.RDF.TripleStore.GetTriplesWithObject(System.Uri)
  - VDS.RDF.TripleStore.GetTriplesWithObject(VDS.RDF.INode)
  - VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},System.Uri)
  - VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  - VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Uri)
  - VDS.RDF.TripleStore.GetTriplesWithPredicate(VDS.RDF.INode)
  - VDS.RDF.TripleStore.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.TripleStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},System.Uri)
  - VDS.RDF.TripleStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  - VDS.RDF.TripleStore.GetTriplesWithSubject(System.Uri)
  - VDS.RDF.TripleStore.GetTriplesWithSubject(VDS.RDF.INode)
  - VDS.RDF.TripleStore.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.TripleStore.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.TripleStore.OnGraphAdded(System.Object,VDS.RDF.GraphEventArgs)
  - VDS.RDF.TripleStore.RemoveInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  langs:
  - csharp
  - vb
  name: TripleStore
  nameWithType: TripleStore
  fullName: VDS.RDF.TripleStore
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TripleStore
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 40
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nClass for representing Triple Stores which are collections of RDF Graphs.\n"
  example: []
  syntax:
    content: 'public class TripleStore : BaseTripleStore, IInMemoryQueryableStore, IInferencingTripleStore, IUpdateableTripleStore, ITripleStore, IDisposable'
    content.vb: >-
      Public Class TripleStore
          Inherits BaseTripleStore
          Implements IInMemoryQueryableStore, IInferencingTripleStore, IUpdateableTripleStore, ITripleStore, IDisposable
  inheritance:
  - System.Object
  - VDS.RDF.BaseTripleStore
  derivedClasses:
  - VDS.RDF.DiskDemandTripleStore
  - VDS.RDF.ThreadSafeTripleStore
  - VDS.RDF.WebDemandTripleStore
  implements:
  - VDS.RDF.IInMemoryQueryableStore
  - VDS.RDF.IInferencingTripleStore
  - VDS.RDF.IUpdateableTripleStore
  - VDS.RDF.ITripleStore
  - System.IDisposable
  inheritedMembers:
  - VDS.RDF.BaseTripleStore._graphs
  - VDS.RDF.BaseTripleStore.IsEmpty
  - VDS.RDF.BaseTripleStore.Graphs
  - VDS.RDF.BaseTripleStore.Triples
  - VDS.RDF.BaseTripleStore.Add(VDS.RDF.IGraph)
  - VDS.RDF.BaseTripleStore.Add(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.BaseTripleStore.AddFromUri(System.Uri)
  - VDS.RDF.BaseTripleStore.AddFromUri(System.Uri,System.Boolean)
  - VDS.RDF.BaseTripleStore.Remove(System.Uri)
  - VDS.RDF.BaseTripleStore.HasGraph(System.Uri)
  - VDS.RDF.BaseTripleStore.Item(System.Uri)
  - VDS.RDF.BaseTripleStore.GraphAdded
  - VDS.RDF.BaseTripleStore.GraphRemoved
  - VDS.RDF.BaseTripleStore.GraphChanged
  - VDS.RDF.BaseTripleStore.GraphCleared
  - VDS.RDF.BaseTripleStore.GraphMerged
  - VDS.RDF.BaseTripleStore.RaiseGraphAdded(VDS.RDF.IGraph)
  - VDS.RDF.BaseTripleStore.RaiseGraphAdded(VDS.RDF.GraphEventArgs)
  - VDS.RDF.BaseTripleStore.RaiseGraphRemoved(VDS.RDF.IGraph)
  - VDS.RDF.BaseTripleStore.RaiseGraphRemoved(VDS.RDF.GraphEventArgs)
  - VDS.RDF.BaseTripleStore.OnGraphRemoved(System.Object,VDS.RDF.GraphEventArgs)
  - VDS.RDF.BaseTripleStore.RaiseGraphChanged(VDS.RDF.GraphEventArgs)
  - VDS.RDF.BaseTripleStore.OnGraphChanged(System.Object,VDS.RDF.GraphEventArgs)
  - VDS.RDF.BaseTripleStore.RaiseGraphChanged(VDS.RDF.IGraph)
  - VDS.RDF.BaseTripleStore.RaiseGraphCleared(VDS.RDF.GraphEventArgs)
  - VDS.RDF.BaseTripleStore.OnGraphCleared(System.Object,VDS.RDF.GraphEventArgs)
  - VDS.RDF.BaseTripleStore.RaiseGraphMerged(VDS.RDF.GraphEventArgs)
  - VDS.RDF.BaseTripleStore.OnGraphMerged(System.Object,VDS.RDF.GraphEventArgs)
  - VDS.RDF.BaseTripleStore.AttachEventHandlers(VDS.RDF.IGraph)
  - VDS.RDF.BaseTripleStore.DetachEventHandlers(VDS.RDF.IGraph)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.TripleStore.VDS.RDF.Extensions.AsEnumerable``1
  - VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromFile(System.String,VDS.RDF.IStoreReader)
  - VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromFile(System.String)
  - VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromUri(System.Uri,VDS.RDF.IStoreReader)
  - VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromUri(System.Uri)
  - VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromString(System.String,VDS.RDF.IStoreReader)
  - VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromString(System.String)
  - VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IStoreReader)
  - VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(System.String)
  - VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
  - VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.SaveToFile(System.String)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.TripleStore._reasoners
  commentId: F:VDS.RDF.TripleStore._reasoners
  id: _reasoners
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: _reasoners
  nameWithType: TripleStore._reasoners
  fullName: VDS.RDF.TripleStore._reasoners
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _reasoners
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nList of Reasoners that are applied to Graphs as they are added to the Triple Store.\n"
  example: []
  syntax:
    content: protected List<IInferenceEngine> _reasoners
    return:
      type: System.Collections.Generic.List{VDS.RDF.Query.Inference.IInferenceEngine}
    content.vb: Protected _reasoners As List(Of IInferenceEngine)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.TripleStore._storeInferencesExternally
  commentId: F:VDS.RDF.TripleStore._storeInferencesExternally
  id: _storeInferencesExternally
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: _storeInferencesExternally
  nameWithType: TripleStore._storeInferencesExternally
  fullName: VDS.RDF.TripleStore._storeInferencesExternally
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _storeInferencesExternally
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nControls whether inferred information is stored in a special Graph or in the original Graph.\n"
  example: []
  syntax:
    content: protected bool _storeInferencesExternally
    return:
      type: System.Boolean
    content.vb: Protected _storeInferencesExternally As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.TripleStore._inferenceGraphUri
  commentId: F:VDS.RDF.TripleStore._inferenceGraphUri
  id: _inferenceGraphUri
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: _inferenceGraphUri
  nameWithType: TripleStore._inferenceGraphUri
  fullName: VDS.RDF.TripleStore._inferenceGraphUri
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _inferenceGraphUri
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGraph Uri for the special Graph used to store inferred information.\n"
  example: []
  syntax:
    content: protected Uri _inferenceGraphUri
    return:
      type: System.Uri
    content.vb: Protected _inferenceGraphUri As Uri
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.TripleStore.#ctor
  commentId: M:VDS.RDF.TripleStore.#ctor
  id: '#ctor'
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: TripleStore()
  nameWithType: TripleStore.TripleStore()
  fullName: VDS.RDF.TripleStore.TripleStore()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Triple Store using a new empty Graph collection.\n"
  example: []
  syntax:
    content: public TripleStore()
    content.vb: Public Sub New
  overload: VDS.RDF.TripleStore.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.#ctor(VDS.RDF.BaseGraphCollection)
  commentId: M:VDS.RDF.TripleStore.#ctor(VDS.RDF.BaseGraphCollection)
  id: '#ctor(VDS.RDF.BaseGraphCollection)'
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: TripleStore(BaseGraphCollection)
  nameWithType: TripleStore.TripleStore(BaseGraphCollection)
  fullName: VDS.RDF.TripleStore.TripleStore(VDS.RDF.BaseGraphCollection)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 68
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Triple Store using the given Graph collection which may be non-empty.\n"
  example: []
  syntax:
    content: public TripleStore(BaseGraphCollection graphCollection)
    parameters:
    - id: graphCollection
      type: VDS.RDF.BaseGraphCollection
      description: Graph Collection.
    content.vb: Public Sub New(graphCollection As BaseGraphCollection)
  overload: VDS.RDF.TripleStore.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.Contains(VDS.RDF.Triple)
  commentId: M:VDS.RDF.TripleStore.Contains(VDS.RDF.Triple)
  id: Contains(VDS.RDF.Triple)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: Contains(Triple)
  nameWithType: TripleStore.Contains(Triple)
  fullName: VDS.RDF.TripleStore.Contains(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Contains
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns whether the Store contains the given Triple within the Query Triples.\n"
  example: []
  syntax:
    content: public bool Contains(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple to search for.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Contains(t As Triple) As Boolean
  overload: VDS.RDF.TripleStore.Contains*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.Contains(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.GetTriples(System.Uri)
  commentId: M:VDS.RDF.TripleStore.GetTriples(System.Uri)
  id: GetTriples(System.Uri)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriples(Uri)
  nameWithType: TripleStore.GetTriples(Uri)
  fullName: VDS.RDF.TripleStore.GetTriples(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 90
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples which have a Uri Node with the given Uri from all the Query Triples.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriples(Uri uri)
    parameters:
    - id: uri
      type: System.Uri
      description: Uri.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriples(uri As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriples*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.GetTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.TripleStore.GetTriples(VDS.RDF.INode)
  id: GetTriples(VDS.RDF.INode)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriples(INode)
  nameWithType: TripleStore.GetTriples(INode)
  fullName: VDS.RDF.TripleStore.GetTriples(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples which contain the given Node from all Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriples(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriples(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriples*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriples(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.GetTriplesWithObject(System.Uri)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithObject(System.Uri)
  id: GetTriplesWithObject(System.Uri)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(Uri)
  nameWithType: TripleStore.GetTriplesWithObject(Uri)
  fullName: VDS.RDF.TripleStore.GetTriplesWithObject(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples where the Object is a Uri Node with the given Uri from all Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithObject(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: Uri.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithObject(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithObject*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithObject(VDS.RDF.INode)
  id: GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(INode)
  nameWithType: TripleStore.GetTriplesWithObject(INode)
  fullName: VDS.RDF.TripleStore.GetTriplesWithObject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 122
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples where the Object is a given Node from all Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithObject(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithObject(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithObject*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithPredicate(VDS.RDF.INode)
  id: GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(INode)
  nameWithType: TripleStore.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.TripleStore.GetTriplesWithPredicate(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 134
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples where the Predicate is a given Node from all Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicate(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicate(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Uri)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Uri)
  id: GetTriplesWithPredicate(System.Uri)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(Uri)
  nameWithType: TripleStore.GetTriplesWithPredicate(Uri)
  fullName: VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 146
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples where the Predicate is a Uri Node with the given Uri from all Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicate(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: Uri.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicate(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithSubject(VDS.RDF.INode)
  id: GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(INode)
  nameWithType: TripleStore.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.TripleStore.GetTriplesWithSubject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 156
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples where the Subject is a given Node from all Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubject(INode n)
    parameters:
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubject(n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithSubject*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.GetTriplesWithSubject(System.Uri)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithSubject(System.Uri)
  id: GetTriplesWithSubject(System.Uri)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(Uri)
  nameWithType: TripleStore.GetTriplesWithSubject(Uri)
  fullName: VDS.RDF.TripleStore.GetTriplesWithSubject(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 168
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples where the Subject is a Uri Node with the given Uri from all Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubject(Uri u)
    parameters:
    - id: u
      type: System.Uri
      description: Uri.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubject(u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithSubject*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: TripleStore.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.TripleStore.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectPredicate
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 179
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all the Triples with the given Subject-Predicate pair from all the Query Triples.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubjectPredicate(INode subj, INode pred)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubjectPredicate(subj As INode, pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithSubjectPredicate*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: TripleStore.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.TripleStore.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicateObject
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 192
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all the Triples with the given Predicate-Object pair from all the Query Triples.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicateObject(INode pred, INode obj)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicateObject(pred As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithPredicateObject*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: TripleStore.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.TripleStore.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectObject
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 205
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all the Triples with the given Subject-Object pair from all the Query Triples.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubjectObject(INode subj, INode obj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubjectObject(subj As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithSubjectObject*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.GetTriples(System.Collections.Generic.List{System.Uri},System.Uri)
  commentId: M:VDS.RDF.TripleStore.GetTriples(System.Collections.Generic.List{System.Uri},System.Uri)
  id: GetTriples(System.Collections.Generic.List{System.Uri},System.Uri)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriples(List<Uri>, Uri)
  nameWithType: TripleStore.GetTriples(List<Uri>, Uri)
  fullName: VDS.RDF.TripleStore.GetTriples(System.Collections.Generic.List<System.Uri>, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 222
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples which have a Uri Node with the given Uri from a Subset of Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriples(List<Uri> graphUris, Uri uri)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.List{System.Uri}
      description: List of the Graph URIs of Graphs you want to select over.
    - id: uri
      type: System.Uri
      description: Uri.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriples(graphUris As List(Of Uri), uri As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriples*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List{System.Uri},System.Uri)
  nameWithType.vb: TripleStore.GetTriples(List(Of Uri), Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.TripleStore.GetTriples(System.Collections.Generic.List(Of System.Uri), System.Uri)
  name.vb: GetTriples(List(Of Uri), Uri)
- uid: VDS.RDF.TripleStore.GetTriples(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  commentId: M:VDS.RDF.TripleStore.GetTriples(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  id: GetTriples(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriples(List<Uri>, INode)
  nameWithType: TripleStore.GetTriples(List<Uri>, INode)
  fullName: VDS.RDF.TripleStore.GetTriples(System.Collections.Generic.List<System.Uri>, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriples
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 233
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples which contain the given Node from a Subset of Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriples(List<Uri> graphUris, INode n)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.List{System.Uri}
      description: List of the Graph URIs of Graphs you want to select over.
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriples(graphUris As List(Of Uri), n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriples*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  nameWithType.vb: TripleStore.GetTriples(List(Of Uri), INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.TripleStore.GetTriples(System.Collections.Generic.List(Of System.Uri), VDS.RDF.INode)
  name.vb: GetTriples(List(Of Uri), INode)
- uid: VDS.RDF.TripleStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},System.Uri)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},System.Uri)
  id: GetTriplesWithObject(System.Collections.Generic.List{System.Uri},System.Uri)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(List<Uri>, Uri)
  nameWithType: TripleStore.GetTriplesWithObject(List<Uri>, Uri)
  fullName: VDS.RDF.TripleStore.GetTriplesWithObject(System.Collections.Generic.List<System.Uri>, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 249
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples where the Object is a Uri Node with the given Uri from a Subset of Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithObject(List<Uri> graphUris, Uri u)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.List{System.Uri}
      description: List of the Graph URIs of Graphs you want to select over.
    - id: u
      type: System.Uri
      description: Uri.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithObject(graphUris As List(Of Uri), u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithObject*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},System.Uri)
  nameWithType.vb: TripleStore.GetTriplesWithObject(List(Of Uri), Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.TripleStore.GetTriplesWithObject(System.Collections.Generic.List(Of System.Uri), System.Uri)
  name.vb: GetTriplesWithObject(List(Of Uri), Uri)
- uid: VDS.RDF.TripleStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  id: GetTriplesWithObject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(List<Uri>, INode)
  nameWithType: TripleStore.GetTriplesWithObject(List<Uri>, INode)
  fullName: VDS.RDF.TripleStore.GetTriplesWithObject(System.Collections.Generic.List<System.Uri>, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 260
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples where the Object is a given Node from a Subset of Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithObject(List<Uri> graphUris, INode n)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.List{System.Uri}
      description: List of the Graph URIs of Graphs you want to select over.
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithObject(graphUris As List(Of Uri), n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithObject*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  nameWithType.vb: TripleStore.GetTriplesWithObject(List(Of Uri), INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.TripleStore.GetTriplesWithObject(System.Collections.Generic.List(Of System.Uri), VDS.RDF.INode)
  name.vb: GetTriplesWithObject(List(Of Uri), INode)
- uid: VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  id: GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(List<Uri>, INode)
  nameWithType: TripleStore.GetTriplesWithPredicate(List<Uri>, INode)
  fullName: VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Collections.Generic.List<System.Uri>, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 276
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples where the Predicate is a given Node from a Subset of Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicate(List<Uri> graphUris, INode n)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.List{System.Uri}
      description: List of the Graph URIs of Graphs you want to select over.
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicate(graphUris As List(Of Uri), n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  nameWithType.vb: TripleStore.GetTriplesWithPredicate(List(Of Uri), INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Collections.Generic.List(Of System.Uri), VDS.RDF.INode)
  name.vb: GetTriplesWithPredicate(List(Of Uri), INode)
- uid: VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},System.Uri)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},System.Uri)
  id: GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},System.Uri)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(List<Uri>, Uri)
  nameWithType: TripleStore.GetTriplesWithPredicate(List<Uri>, Uri)
  fullName: VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Collections.Generic.List<System.Uri>, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 292
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples where the Predicate is a Uri Node with the given Uri from a Subset of Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicate(List<Uri> graphUris, Uri u)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.List{System.Uri}
      description: List of the Graph URIs of Graphs you want to select over.
    - id: u
      type: System.Uri
      description: Uri.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicate(graphUris As List(Of Uri), u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},System.Uri)
  nameWithType.vb: TripleStore.GetTriplesWithPredicate(List(Of Uri), Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.TripleStore.GetTriplesWithPredicate(System.Collections.Generic.List(Of System.Uri), System.Uri)
  name.vb: GetTriplesWithPredicate(List(Of Uri), Uri)
- uid: VDS.RDF.TripleStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  id: GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(List<Uri>, INode)
  nameWithType: TripleStore.GetTriplesWithSubject(List<Uri>, INode)
  fullName: VDS.RDF.TripleStore.GetTriplesWithSubject(System.Collections.Generic.List<System.Uri>, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 303
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples where the Subject is a given Node from a Subset of Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubject(List<Uri> graphUris, INode n)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.List{System.Uri}
      description: List of the Graph URIs of Graphs you want to select over.
    - id: n
      type: VDS.RDF.INode
      description: Node.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubject(graphUris As List(Of Uri), n As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithSubject*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  nameWithType.vb: TripleStore.GetTriplesWithSubject(List(Of Uri), INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.TripleStore.GetTriplesWithSubject(System.Collections.Generic.List(Of System.Uri), VDS.RDF.INode)
  name.vb: GetTriplesWithSubject(List(Of Uri), INode)
- uid: VDS.RDF.TripleStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},System.Uri)
  commentId: M:VDS.RDF.TripleStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},System.Uri)
  id: GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},System.Uri)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(List<Uri>, Uri)
  nameWithType: TripleStore.GetTriplesWithSubject(List<Uri>, Uri)
  fullName: VDS.RDF.TripleStore.GetTriplesWithSubject(System.Collections.Generic.List<System.Uri>, System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 319
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nSelects all Triples where the Subject is a Uri Node with the given Uri from a Subset of Graphs in the Triple Store.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubject(List<Uri> graphUris, Uri u)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.List{System.Uri}
      description: List of the Graph URIs of Graphs you want to select over.
    - id: u
      type: System.Uri
      description: Uri.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubject(graphUris As List(Of Uri), u As Uri) As IEnumerable(Of Triple)
  overload: VDS.RDF.TripleStore.GetTriplesWithSubject*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},System.Uri)
  nameWithType.vb: TripleStore.GetTriplesWithSubject(List(Of Uri), Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.TripleStore.GetTriplesWithSubject(System.Collections.Generic.List(Of System.Uri), System.Uri)
  name.vb: GetTriplesWithSubject(List(Of Uri), Uri)
- uid: VDS.RDF.TripleStore.ExecuteQuery(System.String)
  commentId: M:VDS.RDF.TripleStore.ExecuteQuery(System.String)
  id: ExecuteQuery(System.String)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: ExecuteQuery(String)
  nameWithType: TripleStore.ExecuteQuery(String)
  fullName: VDS.RDF.TripleStore.ExecuteQuery(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteQuery
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 341
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes a SPARQL Query on the Triple Store.\n"
  remarks: "\n<p>\nThis method of making queries often leads to no results because of misconceptions about what data is being queries.  dotNetRDF&apos;s SPARQL engine only queries the default unnamed graph of the triple store (the graph added with a null URI) by default unless your query uses FROM clauses to change the default graph or you use GRAPH clauses to access named graphs in the store.  Therefore a common mistake is to add a single graph to the store and then query the store which typically results in no results because usually the added graph is named and so is not queried.\n</p>\n<p>\nWe recommend using a <xref href=\"VDS.RDF.Query.ISparqlQueryProcessor\" data-throw-if-not-resolved=\"false\"></xref> instead for making queries over in-memory data since using our standard implementation (<xref href=\"VDS.RDF.Query.LeviathanQueryProcessor\" data-throw-if-not-resolved=\"false\"></xref>) affords you much more explicit control over which graphs are queried.\n</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method of making queries is often error prone due to misconceptions about what data is being queries and we recommend using an ISparqlQueryProcessor instead, see remarks for more discussion")]

      public virtual object ExecuteQuery(string query)
    parameters:
    - id: query
      type: System.String
      description: SPARQL Query as unparsed String.
    return:
      type: System.Object
      description: ''
    content.vb: >-
      <Obsolete("This method of making queries is often error prone due to misconceptions about what data is being queries and we recommend using an ISparqlQueryProcessor instead, see remarks for more discussion")>

      Public Overridable Function ExecuteQuery(query As String) As Object
  overload: VDS.RDF.TripleStore.ExecuteQuery*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(System.String)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method of making queries is often error prone due to misconceptions about what data is being queries and we recommend using an ISparqlQueryProcessor instead, see remarks for more discussion
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.TripleStore.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.TripleStore.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  id: ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: ExecuteQuery(SparqlQuery)
  nameWithType: TripleStore.ExecuteQuery(SparqlQuery)
  fullName: VDS.RDF.TripleStore.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteQuery
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 365
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes a SPARQL Query on the Triple Store.\n"
  remarks: "\n<p>\nThis method of making queries often leads to no results because of misconceptions about what data is being queries.  dotNetRDF&apos;s SPARQL engine only queries the default unnamed graph of the triple store (the graph added with a null URI) by default unless your query uses FROM clauses to change the default graph or you use GRAPH clauses to access named graphs in the store.  Therefore a common mistake is to add a single graph to the store and then query the store which typically results in no results because usually the added graph is named and so is not queried.\n</p>\n<p>\nWe recommend using a <xref href=\"VDS.RDF.Query.ISparqlQueryProcessor\" data-throw-if-not-resolved=\"false\"></xref> instead for making queries over in-memory data since using our standard implementation (<xref href=\"VDS.RDF.Query.LeviathanQueryProcessor\" data-throw-if-not-resolved=\"false\"></xref>) affords you much more explicit control over which graphs are queried.\n</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method of making queries is often error prone due to misconceptions about what data is being queries and we recommend using an ISparqlQueryProcessor instead, see remarks for more discussion")]

      public virtual object ExecuteQuery(SparqlQuery query)
    parameters:
    - id: query
      type: VDS.RDF.Query.SparqlQuery
      description: SPARQL Query as a <xref href="VDS.RDF.Query.SparqlQuery" data-throw-if-not-resolved="false"></xref> instance.
    return:
      type: System.Object
      description: ''
    content.vb: >-
      <Obsolete("This method of making queries is often error prone due to misconceptions about what data is being queries and we recommend using an ISparqlQueryProcessor instead, see remarks for more discussion")>

      Public Overridable Function ExecuteQuery(query As SparqlQuery) As Object
  overload: VDS.RDF.TripleStore.ExecuteQuery*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method of making queries is often error prone due to misconceptions about what data is being queries and we recommend using an ISparqlQueryProcessor instead, see remarks for more discussion
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.TripleStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.TripleStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  id: ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, String)
  nameWithType: TripleStore.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, String)
  fullName: VDS.RDF.TripleStore.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteQuery
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 386
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes a SPARQL Query on the Triple Store processing the results with an appropriate handler from those provided.\n"
  remarks: "\n<p>\nThis method of making queries often leads to no results because of misconceptions about what data is being queries.  dotNetRDF&apos;s SPARQL engine only queries the default unnamed graph of the triple store (the graph added with a null URI) by default unless your query uses FROM clauses to change the default graph or you use GRAPH clauses to access named graphs in the store.  Therefore a common mistake is to add a single graph to the store and then query the store which typically results in no results because usually the added graph is named and so is not queried.\n</p>\n<p>\nWe recommend using a <xref href=\"VDS.RDF.Query.ISparqlQueryProcessor\" data-throw-if-not-resolved=\"false\"></xref> instead for making queries over in-memory data since using our standard implementation (<xref href=\"VDS.RDF.Query.LeviathanQueryProcessor\" data-throw-if-not-resolved=\"false\"></xref>) affords you much more explicit control over which graphs are queried.\n</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method of making queries is often error prone due to misconceptions about what data is being queries and we recommend using an ISparqlQueryProcessor instead, see remarks for more discussion")]

      public virtual void ExecuteQuery(IRdfHandler rdfHandler, ISparqlResultsHandler resultsHandler, string query)
    parameters:
    - id: rdfHandler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: resultsHandler
      type: VDS.RDF.ISparqlResultsHandler
      description: Results Handler.
    - id: query
      type: System.String
      description: SPARQL Query as unparsed String.
    content.vb: >-
      <Obsolete("This method of making queries is often error prone due to misconceptions about what data is being queries and we recommend using an ISparqlQueryProcessor instead, see remarks for more discussion")>

      Public Overridable Sub ExecuteQuery(rdfHandler As IRdfHandler, resultsHandler As ISparqlResultsHandler, query As String)
  overload: VDS.RDF.TripleStore.ExecuteQuery*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method of making queries is often error prone due to misconceptions about what data is being queries and we recommend using an ISparqlQueryProcessor instead, see remarks for more discussion
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.TripleStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.TripleStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  id: ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  nameWithType: TripleStore.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  fullName: VDS.RDF.TripleStore.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlQuery)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteQuery
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 411
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes a SPARQL Query on the Triple Store processing the results with an appropriate handler from those provided.\n"
  remarks: "\n<p>\nThis method of making queries often leads to no results because of misconceptions about what data is being queries.  dotNetRDF&apos;s SPARQL engine only queries the default unnamed graph of the triple store (the graph added with a null URI) by default unless your query uses FROM clauses to change the default graph or you use GRAPH clauses to access named graphs in the store.  Therefore a common mistake is to add a single graph to the store and then query the store which typically results in no results because usually the added graph is named and so is not queried.\n</p>\n<p>\nWe recommend using a <xref href=\"VDS.RDF.Query.ISparqlQueryProcessor\" data-throw-if-not-resolved=\"false\"></xref> instead for making queries over in-memory data since using our standard implementation (<xref href=\"VDS.RDF.Query.LeviathanQueryProcessor\" data-throw-if-not-resolved=\"false\"></xref>) affords you much more explicit control over which graphs are queried.\n</p>\n"
  example: []
  syntax:
    content: >-
      [Obsolete("This method of making queries is often error prone due to misconceptions about what data is being queries and we recommend using an ISparqlQueryProcessor instead, see remarks for more discussion")]

      public virtual void ExecuteQuery(IRdfHandler rdfHandler, ISparqlResultsHandler resultsHandler, SparqlQuery query)
    parameters:
    - id: rdfHandler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: resultsHandler
      type: VDS.RDF.ISparqlResultsHandler
      description: Results Handler.
    - id: query
      type: VDS.RDF.Query.SparqlQuery
      description: SPARQL Query as unparsed String.
    content.vb: >-
      <Obsolete("This method of making queries is often error prone due to misconceptions about what data is being queries and we recommend using an ISparqlQueryProcessor instead, see remarks for more discussion")>

      Public Overridable Sub ExecuteQuery(rdfHandler As IRdfHandler, resultsHandler As ISparqlResultsHandler, query As SparqlQuery)
  overload: VDS.RDF.TripleStore.ExecuteQuery*
  implements:
  - VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: This method of making queries is often error prone due to misconceptions about what data is being queries and we recommend using an ISparqlQueryProcessor instead, see remarks for more discussion
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.TripleStore.ApplyInference(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.TripleStore.ApplyInference(VDS.RDF.IGraph)
  id: ApplyInference(VDS.RDF.IGraph)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: ApplyInference(IGraph)
  nameWithType: TripleStore.ApplyInference(IGraph)
  fullName: VDS.RDF.TripleStore.ApplyInference(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ApplyInference
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 428
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nApplies Inference to the given Graph.\n"
  example: []
  syntax:
    content: public void ApplyInference(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to apply inference to.
    content.vb: Public Sub ApplyInference(g As IGraph)
  overload: VDS.RDF.TripleStore.ApplyInference*
  implements:
  - VDS.RDF.IInferencingTripleStore.ApplyInference(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.AddInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  commentId: M:VDS.RDF.TripleStore.AddInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  id: AddInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: AddInferenceEngine(IInferenceEngine)
  nameWithType: TripleStore.AddInferenceEngine(IInferenceEngine)
  fullName: VDS.RDF.TripleStore.AddInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddInferenceEngine
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 463
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAdds an Inference Engine to the Triple Store.\n"
  example: []
  syntax:
    content: public void AddInferenceEngine(IInferenceEngine reasoner)
    parameters:
    - id: reasoner
      type: VDS.RDF.Query.Inference.IInferenceEngine
      description: Reasoner to add.
    content.vb: Public Sub AddInferenceEngine(reasoner As IInferenceEngine)
  overload: VDS.RDF.TripleStore.AddInferenceEngine*
  implements:
  - VDS.RDF.IInferencingTripleStore.AddInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.RemoveInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  commentId: M:VDS.RDF.TripleStore.RemoveInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  id: RemoveInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: RemoveInferenceEngine(IInferenceEngine)
  nameWithType: TripleStore.RemoveInferenceEngine(IInferenceEngine)
  fullName: VDS.RDF.TripleStore.RemoveInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RemoveInferenceEngine
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 486
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nRemoves an Inference Engine from the Triple Store.\n"
  example: []
  syntax:
    content: public void RemoveInferenceEngine(IInferenceEngine reasoner)
    parameters:
    - id: reasoner
      type: VDS.RDF.Query.Inference.IInferenceEngine
      description: Reasoner to remove.
    content.vb: Public Sub RemoveInferenceEngine(reasoner As IInferenceEngine)
  overload: VDS.RDF.TripleStore.RemoveInferenceEngine*
  implements:
  - VDS.RDF.IInferencingTripleStore.RemoveInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.ClearInferenceEngines
  commentId: M:VDS.RDF.TripleStore.ClearInferenceEngines
  id: ClearInferenceEngines
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: ClearInferenceEngines()
  nameWithType: TripleStore.ClearInferenceEngines()
  fullName: VDS.RDF.TripleStore.ClearInferenceEngines()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ClearInferenceEngines
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 494
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nClears all Inference Engines from the Triple Store.\n"
  example: []
  syntax:
    content: public void ClearInferenceEngines()
    content.vb: Public Sub ClearInferenceEngines
  overload: VDS.RDF.TripleStore.ClearInferenceEngines*
  implements:
  - VDS.RDF.IInferencingTripleStore.ClearInferenceEngines
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.Dispose
  commentId: M:VDS.RDF.TripleStore.Dispose
  id: Dispose
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: TripleStore.Dispose()
  fullName: VDS.RDF.TripleStore.Dispose()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dispose
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 506
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDisposes of a Triple Store.\n"
  example: []
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overridden: VDS.RDF.BaseTripleStore.Dispose
  overload: VDS.RDF.TripleStore.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.TripleStore.ExecuteUpdate(System.String)
  commentId: M:VDS.RDF.TripleStore.ExecuteUpdate(System.String)
  id: ExecuteUpdate(System.String)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: ExecuteUpdate(String)
  nameWithType: TripleStore.ExecuteUpdate(String)
  fullName: VDS.RDF.TripleStore.ExecuteUpdate(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteUpdate
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 522
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes an Update against the Triple Store.\n"
  remarks: "\nAs per the SPARQL 1.1 Update specification the command string may be a sequence of commands.\n"
  example: []
  syntax:
    content: public void ExecuteUpdate(string update)
    parameters:
    - id: update
      type: System.String
      description: SPARQL Update Command(s).
    content.vb: Public Sub ExecuteUpdate(update As String)
  overload: VDS.RDF.TripleStore.ExecuteUpdate*
  implements:
  - VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommand)
  commentId: M:VDS.RDF.TripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommand)
  id: ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommand)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: ExecuteUpdate(SparqlUpdateCommand)
  nameWithType: TripleStore.ExecuteUpdate(SparqlUpdateCommand)
  fullName: VDS.RDF.TripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommand)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteUpdate
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 533
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes a single Update Command against the Triple Store.\n"
  example: []
  syntax:
    content: public void ExecuteUpdate(SparqlUpdateCommand update)
    parameters:
    - id: update
      type: VDS.RDF.Update.SparqlUpdateCommand
      description: SPARQL Update Command.
    content.vb: Public Sub ExecuteUpdate(update As SparqlUpdateCommand)
  overload: VDS.RDF.TripleStore.ExecuteUpdate*
  implements:
  - VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommand)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommandSet)
  commentId: M:VDS.RDF.TripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommandSet)
  id: ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommandSet)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: ExecuteUpdate(SparqlUpdateCommandSet)
  nameWithType: TripleStore.ExecuteUpdate(SparqlUpdateCommandSet)
  fullName: VDS.RDF.TripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommandSet)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteUpdate
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 543
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nExecutes a set of Update Commands against the Triple Store.\n"
  example: []
  syntax:
    content: public void ExecuteUpdate(SparqlUpdateCommandSet updates)
    parameters:
    - id: updates
      type: VDS.RDF.Update.SparqlUpdateCommandSet
      description: SPARQL Update Command Set.
    content.vb: Public Sub ExecuteUpdate(updates As SparqlUpdateCommandSet)
  overload: VDS.RDF.TripleStore.ExecuteUpdate*
  implements:
  - VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommandSet)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.TripleStore.OnGraphAdded(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.TripleStore.OnGraphAdded(System.Object,VDS.RDF.GraphEventArgs)
  id: OnGraphAdded(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.TripleStore
  langs:
  - csharp
  - vb
  name: OnGraphAdded(Object, GraphEventArgs)
  nameWithType: TripleStore.OnGraphAdded(Object, GraphEventArgs)
  fullName: VDS.RDF.TripleStore.OnGraphAdded(System.Object, VDS.RDF.GraphEventArgs)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/TripleStore.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OnGraphAdded
    path: Libraries/dotNetRDF/Core/TripleStore.cs
    startLine: 560
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nEvent Handler for the <xref href=\"VDS.RDF.BaseGraphCollection.GraphAdded\" data-throw-if-not-resolved=\"false\"></xref> event of the underlying Graph Collection which calls the normal event processing of the parent class <xref href=\"VDS.RDF.BaseTripleStore\" data-throw-if-not-resolved=\"false\"></xref> and then applies Inference to the newly added Graph.\n"
  example: []
  syntax:
    content: protected override void OnGraphAdded(object sender, GraphEventArgs args)
    parameters:
    - id: sender
      type: System.Object
      description: Sender.
    - id: args
      type: VDS.RDF.GraphEventArgs
      description: Graph Event Arguments.
    content.vb: Protected Overrides Sub OnGraphAdded(sender As Object, args As GraphEventArgs)
  overridden: VDS.RDF.BaseTripleStore.OnGraphAdded(System.Object,VDS.RDF.GraphEventArgs)
  overload: VDS.RDF.TripleStore.OnGraphAdded*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.BaseTripleStore
  commentId: T:VDS.RDF.BaseTripleStore
  parent: VDS.RDF
  name: BaseTripleStore
  nameWithType: BaseTripleStore
  fullName: VDS.RDF.BaseTripleStore
- uid: VDS.RDF.IInMemoryQueryableStore
  commentId: T:VDS.RDF.IInMemoryQueryableStore
  parent: VDS.RDF
  name: IInMemoryQueryableStore
  nameWithType: IInMemoryQueryableStore
  fullName: VDS.RDF.IInMemoryQueryableStore
- uid: VDS.RDF.IInferencingTripleStore
  commentId: T:VDS.RDF.IInferencingTripleStore
  parent: VDS.RDF
  name: IInferencingTripleStore
  nameWithType: IInferencingTripleStore
  fullName: VDS.RDF.IInferencingTripleStore
- uid: VDS.RDF.IUpdateableTripleStore
  commentId: T:VDS.RDF.IUpdateableTripleStore
  parent: VDS.RDF
  name: IUpdateableTripleStore
  nameWithType: IUpdateableTripleStore
  fullName: VDS.RDF.IUpdateableTripleStore
- uid: VDS.RDF.ITripleStore
  commentId: T:VDS.RDF.ITripleStore
  parent: VDS.RDF
  name: ITripleStore
  nameWithType: ITripleStore
  fullName: VDS.RDF.ITripleStore
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: VDS.RDF.BaseTripleStore._graphs
  commentId: F:VDS.RDF.BaseTripleStore._graphs
  parent: VDS.RDF.BaseTripleStore
  name: _graphs
  nameWithType: BaseTripleStore._graphs
  fullName: VDS.RDF.BaseTripleStore._graphs
- uid: VDS.RDF.BaseTripleStore.IsEmpty
  commentId: P:VDS.RDF.BaseTripleStore.IsEmpty
  parent: VDS.RDF.BaseTripleStore
  name: IsEmpty
  nameWithType: BaseTripleStore.IsEmpty
  fullName: VDS.RDF.BaseTripleStore.IsEmpty
- uid: VDS.RDF.BaseTripleStore.Graphs
  commentId: P:VDS.RDF.BaseTripleStore.Graphs
  parent: VDS.RDF.BaseTripleStore
  name: Graphs
  nameWithType: BaseTripleStore.Graphs
  fullName: VDS.RDF.BaseTripleStore.Graphs
- uid: VDS.RDF.BaseTripleStore.Triples
  commentId: P:VDS.RDF.BaseTripleStore.Triples
  parent: VDS.RDF.BaseTripleStore
  name: Triples
  nameWithType: BaseTripleStore.Triples
  fullName: VDS.RDF.BaseTripleStore.Triples
- uid: VDS.RDF.BaseTripleStore.Add(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseTripleStore.Add(VDS.RDF.IGraph)
  parent: VDS.RDF.BaseTripleStore
  name: Add(IGraph)
  nameWithType: BaseTripleStore.Add(IGraph)
  fullName: VDS.RDF.BaseTripleStore.Add(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.Add(VDS.RDF.IGraph)
    name: Add
    nameWithType: BaseTripleStore.Add
    fullName: VDS.RDF.BaseTripleStore.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.Add(VDS.RDF.IGraph)
    name: Add
    nameWithType: BaseTripleStore.Add
    fullName: VDS.RDF.BaseTripleStore.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.Add(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.BaseTripleStore.Add(VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.BaseTripleStore
  isExternal: true
  name: Add(IGraph, Boolean)
  nameWithType: BaseTripleStore.Add(IGraph, Boolean)
  fullName: VDS.RDF.BaseTripleStore.Add(VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.Add(VDS.RDF.IGraph,System.Boolean)
    name: Add
    nameWithType: BaseTripleStore.Add
    fullName: VDS.RDF.BaseTripleStore.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.Add(VDS.RDF.IGraph,System.Boolean)
    name: Add
    nameWithType: BaseTripleStore.Add
    fullName: VDS.RDF.BaseTripleStore.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.AddFromUri(System.Uri)
  commentId: M:VDS.RDF.BaseTripleStore.AddFromUri(System.Uri)
  parent: VDS.RDF.BaseTripleStore
  isExternal: true
  name: AddFromUri(Uri)
  nameWithType: BaseTripleStore.AddFromUri(Uri)
  fullName: VDS.RDF.BaseTripleStore.AddFromUri(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.AddFromUri(System.Uri)
    name: AddFromUri
    nameWithType: BaseTripleStore.AddFromUri
    fullName: VDS.RDF.BaseTripleStore.AddFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.AddFromUri(System.Uri)
    name: AddFromUri
    nameWithType: BaseTripleStore.AddFromUri
    fullName: VDS.RDF.BaseTripleStore.AddFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.AddFromUri(System.Uri,System.Boolean)
  commentId: M:VDS.RDF.BaseTripleStore.AddFromUri(System.Uri,System.Boolean)
  parent: VDS.RDF.BaseTripleStore
  isExternal: true
  name: AddFromUri(Uri, Boolean)
  nameWithType: BaseTripleStore.AddFromUri(Uri, Boolean)
  fullName: VDS.RDF.BaseTripleStore.AddFromUri(System.Uri, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.AddFromUri(System.Uri,System.Boolean)
    name: AddFromUri
    nameWithType: BaseTripleStore.AddFromUri
    fullName: VDS.RDF.BaseTripleStore.AddFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.AddFromUri(System.Uri,System.Boolean)
    name: AddFromUri
    nameWithType: BaseTripleStore.AddFromUri
    fullName: VDS.RDF.BaseTripleStore.AddFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.Remove(System.Uri)
  commentId: M:VDS.RDF.BaseTripleStore.Remove(System.Uri)
  parent: VDS.RDF.BaseTripleStore
  isExternal: true
  name: Remove(Uri)
  nameWithType: BaseTripleStore.Remove(Uri)
  fullName: VDS.RDF.BaseTripleStore.Remove(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.Remove(System.Uri)
    name: Remove
    nameWithType: BaseTripleStore.Remove
    fullName: VDS.RDF.BaseTripleStore.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.Remove(System.Uri)
    name: Remove
    nameWithType: BaseTripleStore.Remove
    fullName: VDS.RDF.BaseTripleStore.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.HasGraph(System.Uri)
  commentId: M:VDS.RDF.BaseTripleStore.HasGraph(System.Uri)
  parent: VDS.RDF.BaseTripleStore
  isExternal: true
  name: HasGraph(Uri)
  nameWithType: BaseTripleStore.HasGraph(Uri)
  fullName: VDS.RDF.BaseTripleStore.HasGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.HasGraph(System.Uri)
    name: HasGraph
    nameWithType: BaseTripleStore.HasGraph
    fullName: VDS.RDF.BaseTripleStore.HasGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.HasGraph(System.Uri)
    name: HasGraph
    nameWithType: BaseTripleStore.HasGraph
    fullName: VDS.RDF.BaseTripleStore.HasGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.Item(System.Uri)
  commentId: P:VDS.RDF.BaseTripleStore.Item(System.Uri)
  parent: VDS.RDF.BaseTripleStore
  isExternal: true
  name: Item[Uri]
  nameWithType: BaseTripleStore.Item[Uri]
  fullName: VDS.RDF.BaseTripleStore.Item[System.Uri]
  nameWithType.vb: BaseTripleStore.Item(Uri)
  fullName.vb: VDS.RDF.BaseTripleStore.Item(System.Uri)
  name.vb: Item(Uri)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.Item(System.Uri)
    name: Item
    nameWithType: BaseTripleStore.Item
    fullName: VDS.RDF.BaseTripleStore.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.Item(System.Uri)
    name: Item
    nameWithType: BaseTripleStore.Item
    fullName: VDS.RDF.BaseTripleStore.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.GraphAdded
  commentId: E:VDS.RDF.BaseTripleStore.GraphAdded
  parent: VDS.RDF.BaseTripleStore
  name: GraphAdded
  nameWithType: BaseTripleStore.GraphAdded
  fullName: VDS.RDF.BaseTripleStore.GraphAdded
- uid: VDS.RDF.BaseTripleStore.GraphRemoved
  commentId: E:VDS.RDF.BaseTripleStore.GraphRemoved
  parent: VDS.RDF.BaseTripleStore
  name: GraphRemoved
  nameWithType: BaseTripleStore.GraphRemoved
  fullName: VDS.RDF.BaseTripleStore.GraphRemoved
- uid: VDS.RDF.BaseTripleStore.GraphChanged
  commentId: E:VDS.RDF.BaseTripleStore.GraphChanged
  parent: VDS.RDF.BaseTripleStore
  name: GraphChanged
  nameWithType: BaseTripleStore.GraphChanged
  fullName: VDS.RDF.BaseTripleStore.GraphChanged
- uid: VDS.RDF.BaseTripleStore.GraphCleared
  commentId: E:VDS.RDF.BaseTripleStore.GraphCleared
  parent: VDS.RDF.BaseTripleStore
  name: GraphCleared
  nameWithType: BaseTripleStore.GraphCleared
  fullName: VDS.RDF.BaseTripleStore.GraphCleared
- uid: VDS.RDF.BaseTripleStore.GraphMerged
  commentId: E:VDS.RDF.BaseTripleStore.GraphMerged
  parent: VDS.RDF.BaseTripleStore
  name: GraphMerged
  nameWithType: BaseTripleStore.GraphMerged
  fullName: VDS.RDF.BaseTripleStore.GraphMerged
- uid: VDS.RDF.BaseTripleStore.RaiseGraphAdded(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseTripleStore.RaiseGraphAdded(VDS.RDF.IGraph)
  parent: VDS.RDF.BaseTripleStore
  name: RaiseGraphAdded(IGraph)
  nameWithType: BaseTripleStore.RaiseGraphAdded(IGraph)
  fullName: VDS.RDF.BaseTripleStore.RaiseGraphAdded(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphAdded(VDS.RDF.IGraph)
    name: RaiseGraphAdded
    nameWithType: BaseTripleStore.RaiseGraphAdded
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphAdded
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphAdded(VDS.RDF.IGraph)
    name: RaiseGraphAdded
    nameWithType: BaseTripleStore.RaiseGraphAdded
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphAdded
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.RaiseGraphAdded(VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.BaseTripleStore.RaiseGraphAdded(VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.BaseTripleStore
  name: RaiseGraphAdded(GraphEventArgs)
  nameWithType: BaseTripleStore.RaiseGraphAdded(GraphEventArgs)
  fullName: VDS.RDF.BaseTripleStore.RaiseGraphAdded(VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphAdded(VDS.RDF.GraphEventArgs)
    name: RaiseGraphAdded
    nameWithType: BaseTripleStore.RaiseGraphAdded
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphAdded
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphAdded(VDS.RDF.GraphEventArgs)
    name: RaiseGraphAdded
    nameWithType: BaseTripleStore.RaiseGraphAdded
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphAdded
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.RaiseGraphRemoved(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseTripleStore.RaiseGraphRemoved(VDS.RDF.IGraph)
  parent: VDS.RDF.BaseTripleStore
  name: RaiseGraphRemoved(IGraph)
  nameWithType: BaseTripleStore.RaiseGraphRemoved(IGraph)
  fullName: VDS.RDF.BaseTripleStore.RaiseGraphRemoved(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphRemoved(VDS.RDF.IGraph)
    name: RaiseGraphRemoved
    nameWithType: BaseTripleStore.RaiseGraphRemoved
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphRemoved(VDS.RDF.IGraph)
    name: RaiseGraphRemoved
    nameWithType: BaseTripleStore.RaiseGraphRemoved
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.RaiseGraphRemoved(VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.BaseTripleStore.RaiseGraphRemoved(VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.BaseTripleStore
  name: RaiseGraphRemoved(GraphEventArgs)
  nameWithType: BaseTripleStore.RaiseGraphRemoved(GraphEventArgs)
  fullName: VDS.RDF.BaseTripleStore.RaiseGraphRemoved(VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphRemoved(VDS.RDF.GraphEventArgs)
    name: RaiseGraphRemoved
    nameWithType: BaseTripleStore.RaiseGraphRemoved
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphRemoved(VDS.RDF.GraphEventArgs)
    name: RaiseGraphRemoved
    nameWithType: BaseTripleStore.RaiseGraphRemoved
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.OnGraphRemoved(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.BaseTripleStore.OnGraphRemoved(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.BaseTripleStore
  isExternal: true
  name: OnGraphRemoved(Object, GraphEventArgs)
  nameWithType: BaseTripleStore.OnGraphRemoved(Object, GraphEventArgs)
  fullName: VDS.RDF.BaseTripleStore.OnGraphRemoved(System.Object, VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.OnGraphRemoved(System.Object,VDS.RDF.GraphEventArgs)
    name: OnGraphRemoved
    nameWithType: BaseTripleStore.OnGraphRemoved
    fullName: VDS.RDF.BaseTripleStore.OnGraphRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.OnGraphRemoved(System.Object,VDS.RDF.GraphEventArgs)
    name: OnGraphRemoved
    nameWithType: BaseTripleStore.OnGraphRemoved
    fullName: VDS.RDF.BaseTripleStore.OnGraphRemoved
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.RaiseGraphChanged(VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.BaseTripleStore.RaiseGraphChanged(VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.BaseTripleStore
  name: RaiseGraphChanged(GraphEventArgs)
  nameWithType: BaseTripleStore.RaiseGraphChanged(GraphEventArgs)
  fullName: VDS.RDF.BaseTripleStore.RaiseGraphChanged(VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphChanged(VDS.RDF.GraphEventArgs)
    name: RaiseGraphChanged
    nameWithType: BaseTripleStore.RaiseGraphChanged
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphChanged(VDS.RDF.GraphEventArgs)
    name: RaiseGraphChanged
    nameWithType: BaseTripleStore.RaiseGraphChanged
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.OnGraphChanged(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.BaseTripleStore.OnGraphChanged(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.BaseTripleStore
  isExternal: true
  name: OnGraphChanged(Object, GraphEventArgs)
  nameWithType: BaseTripleStore.OnGraphChanged(Object, GraphEventArgs)
  fullName: VDS.RDF.BaseTripleStore.OnGraphChanged(System.Object, VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.OnGraphChanged(System.Object,VDS.RDF.GraphEventArgs)
    name: OnGraphChanged
    nameWithType: BaseTripleStore.OnGraphChanged
    fullName: VDS.RDF.BaseTripleStore.OnGraphChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.OnGraphChanged(System.Object,VDS.RDF.GraphEventArgs)
    name: OnGraphChanged
    nameWithType: BaseTripleStore.OnGraphChanged
    fullName: VDS.RDF.BaseTripleStore.OnGraphChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.RaiseGraphChanged(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseTripleStore.RaiseGraphChanged(VDS.RDF.IGraph)
  parent: VDS.RDF.BaseTripleStore
  name: RaiseGraphChanged(IGraph)
  nameWithType: BaseTripleStore.RaiseGraphChanged(IGraph)
  fullName: VDS.RDF.BaseTripleStore.RaiseGraphChanged(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphChanged(VDS.RDF.IGraph)
    name: RaiseGraphChanged
    nameWithType: BaseTripleStore.RaiseGraphChanged
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphChanged(VDS.RDF.IGraph)
    name: RaiseGraphChanged
    nameWithType: BaseTripleStore.RaiseGraphChanged
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphChanged
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.RaiseGraphCleared(VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.BaseTripleStore.RaiseGraphCleared(VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.BaseTripleStore
  name: RaiseGraphCleared(GraphEventArgs)
  nameWithType: BaseTripleStore.RaiseGraphCleared(GraphEventArgs)
  fullName: VDS.RDF.BaseTripleStore.RaiseGraphCleared(VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphCleared(VDS.RDF.GraphEventArgs)
    name: RaiseGraphCleared
    nameWithType: BaseTripleStore.RaiseGraphCleared
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphCleared
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphCleared(VDS.RDF.GraphEventArgs)
    name: RaiseGraphCleared
    nameWithType: BaseTripleStore.RaiseGraphCleared
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphCleared
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.OnGraphCleared(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.BaseTripleStore.OnGraphCleared(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.BaseTripleStore
  isExternal: true
  name: OnGraphCleared(Object, GraphEventArgs)
  nameWithType: BaseTripleStore.OnGraphCleared(Object, GraphEventArgs)
  fullName: VDS.RDF.BaseTripleStore.OnGraphCleared(System.Object, VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.OnGraphCleared(System.Object,VDS.RDF.GraphEventArgs)
    name: OnGraphCleared
    nameWithType: BaseTripleStore.OnGraphCleared
    fullName: VDS.RDF.BaseTripleStore.OnGraphCleared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.OnGraphCleared(System.Object,VDS.RDF.GraphEventArgs)
    name: OnGraphCleared
    nameWithType: BaseTripleStore.OnGraphCleared
    fullName: VDS.RDF.BaseTripleStore.OnGraphCleared
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.RaiseGraphMerged(VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.BaseTripleStore.RaiseGraphMerged(VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.BaseTripleStore
  name: RaiseGraphMerged(GraphEventArgs)
  nameWithType: BaseTripleStore.RaiseGraphMerged(GraphEventArgs)
  fullName: VDS.RDF.BaseTripleStore.RaiseGraphMerged(VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphMerged(VDS.RDF.GraphEventArgs)
    name: RaiseGraphMerged
    nameWithType: BaseTripleStore.RaiseGraphMerged
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphMerged
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.RaiseGraphMerged(VDS.RDF.GraphEventArgs)
    name: RaiseGraphMerged
    nameWithType: BaseTripleStore.RaiseGraphMerged
    fullName: VDS.RDF.BaseTripleStore.RaiseGraphMerged
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.OnGraphMerged(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.BaseTripleStore.OnGraphMerged(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.BaseTripleStore
  isExternal: true
  name: OnGraphMerged(Object, GraphEventArgs)
  nameWithType: BaseTripleStore.OnGraphMerged(Object, GraphEventArgs)
  fullName: VDS.RDF.BaseTripleStore.OnGraphMerged(System.Object, VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.OnGraphMerged(System.Object,VDS.RDF.GraphEventArgs)
    name: OnGraphMerged
    nameWithType: BaseTripleStore.OnGraphMerged
    fullName: VDS.RDF.BaseTripleStore.OnGraphMerged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.OnGraphMerged(System.Object,VDS.RDF.GraphEventArgs)
    name: OnGraphMerged
    nameWithType: BaseTripleStore.OnGraphMerged
    fullName: VDS.RDF.BaseTripleStore.OnGraphMerged
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.AttachEventHandlers(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseTripleStore.AttachEventHandlers(VDS.RDF.IGraph)
  parent: VDS.RDF.BaseTripleStore
  name: AttachEventHandlers(IGraph)
  nameWithType: BaseTripleStore.AttachEventHandlers(IGraph)
  fullName: VDS.RDF.BaseTripleStore.AttachEventHandlers(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.AttachEventHandlers(VDS.RDF.IGraph)
    name: AttachEventHandlers
    nameWithType: BaseTripleStore.AttachEventHandlers
    fullName: VDS.RDF.BaseTripleStore.AttachEventHandlers
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.AttachEventHandlers(VDS.RDF.IGraph)
    name: AttachEventHandlers
    nameWithType: BaseTripleStore.AttachEventHandlers
    fullName: VDS.RDF.BaseTripleStore.AttachEventHandlers
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.DetachEventHandlers(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseTripleStore.DetachEventHandlers(VDS.RDF.IGraph)
  parent: VDS.RDF.BaseTripleStore
  name: DetachEventHandlers(IGraph)
  nameWithType: BaseTripleStore.DetachEventHandlers(IGraph)
  fullName: VDS.RDF.BaseTripleStore.DetachEventHandlers(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.DetachEventHandlers(VDS.RDF.IGraph)
    name: DetachEventHandlers
    nameWithType: BaseTripleStore.DetachEventHandlers
    fullName: VDS.RDF.BaseTripleStore.DetachEventHandlers
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.DetachEventHandlers(VDS.RDF.IGraph)
    name: DetachEventHandlers
    nameWithType: BaseTripleStore.DetachEventHandlers
    fullName: VDS.RDF.BaseTripleStore.DetachEventHandlers
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStore.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TripleStore>()
  nameWithType: Extensions.AsEnumerable<TripleStore>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.TripleStore>()
  nameWithType.vb: Extensions.AsEnumerable(Of TripleStore)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.TripleStore)()
  name.vb: AsEnumerable(Of TripleStore)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TripleStore>
    nameWithType: Extensions.AsEnumerable<TripleStore>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.TripleStore>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TripleStore)
    nameWithType: Extensions.AsEnumerable(Of TripleStore)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.TripleStore)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromFile(System.String,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  parent: VDS.RDF.TripleStoreExtensions
  definition: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  name: LoadFromFile(String, IStoreReader)
  nameWithType: TripleStoreExtensions.LoadFromFile(String, IStoreReader)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile(System.String, VDS.RDF.IStoreReader)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromFile(System.String,VDS.RDF.IStoreReader)
    name: LoadFromFile
    nameWithType: TripleStoreExtensions.LoadFromFile
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromFile(System.String,VDS.RDF.IStoreReader)
    name: LoadFromFile
    nameWithType: TripleStoreExtensions.LoadFromFile
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromFile(System.String)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String)
  parent: VDS.RDF.TripleStoreExtensions
  definition: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String)
  name: LoadFromFile(String)
  nameWithType: TripleStoreExtensions.LoadFromFile(String)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile(System.String)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromFile(System.String)
    name: LoadFromFile
    nameWithType: TripleStoreExtensions.LoadFromFile
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromFile(System.String)
    name: LoadFromFile
    nameWithType: TripleStoreExtensions.LoadFromFile
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromUri(System.Uri,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri,VDS.RDF.IStoreReader)
  parent: VDS.RDF.TripleStoreExtensions
  definition: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri,VDS.RDF.IStoreReader)
  name: LoadFromUri(Uri, IStoreReader)
  nameWithType: TripleStoreExtensions.LoadFromUri(Uri, IStoreReader)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri(System.Uri, VDS.RDF.IStoreReader)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromUri(System.Uri,VDS.RDF.IStoreReader)
    name: LoadFromUri
    nameWithType: TripleStoreExtensions.LoadFromUri
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromUri(System.Uri,VDS.RDF.IStoreReader)
    name: LoadFromUri
    nameWithType: TripleStoreExtensions.LoadFromUri
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromUri(System.Uri)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri)
  parent: VDS.RDF.TripleStoreExtensions
  definition: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri)
  name: LoadFromUri(Uri)
  nameWithType: TripleStoreExtensions.LoadFromUri(Uri)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromUri(System.Uri)
    name: LoadFromUri
    nameWithType: TripleStoreExtensions.LoadFromUri
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromUri(System.Uri)
    name: LoadFromUri
    nameWithType: TripleStoreExtensions.LoadFromUri
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromString(System.String,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  parent: VDS.RDF.TripleStoreExtensions
  definition: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  name: LoadFromString(String, IStoreReader)
  nameWithType: TripleStoreExtensions.LoadFromString(String, IStoreReader)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromString(System.String, VDS.RDF.IStoreReader)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromString(System.String,VDS.RDF.IStoreReader)
    name: LoadFromString
    nameWithType: TripleStoreExtensions.LoadFromString
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromString(System.String,VDS.RDF.IStoreReader)
    name: LoadFromString
    nameWithType: TripleStoreExtensions.LoadFromString
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromString(System.String)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String)
  parent: VDS.RDF.TripleStoreExtensions
  definition: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String)
  name: LoadFromString(String)
  nameWithType: TripleStoreExtensions.LoadFromString(String)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromString(System.String)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromString(System.String)
    name: LoadFromString
    nameWithType: TripleStoreExtensions.LoadFromString
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromString(System.String)
    name: LoadFromString
    nameWithType: TripleStoreExtensions.LoadFromString
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  parent: VDS.RDF.TripleStoreExtensions
  definition: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  name: LoadFromEmbeddedResource(String, IStoreReader)
  nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource(String, IStoreReader)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(System.String, VDS.RDF.IStoreReader)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IStoreReader)
    name: LoadFromEmbeddedResource
    nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(System.String,VDS.RDF.IStoreReader)
    name: LoadFromEmbeddedResource
    nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(System.String)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String)
  parent: VDS.RDF.TripleStoreExtensions
  definition: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String)
  name: LoadFromEmbeddedResource(String)
  nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource(String)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(System.String)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(System.String)
    name: LoadFromEmbeddedResource
    nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(System.String)
    name: LoadFromEmbeddedResource
    nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreWriter)
  parent: VDS.RDF.TripleStoreExtensions
  definition: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreWriter)
  name: SaveToFile(String, IStoreWriter)
  nameWithType: TripleStoreExtensions.SaveToFile(String, IStoreWriter)
  fullName: VDS.RDF.TripleStoreExtensions.SaveToFile(System.String, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: TripleStoreExtensions.SaveToFile
    fullName: VDS.RDF.TripleStoreExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.SaveToFile(System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: TripleStoreExtensions.SaveToFile
    fullName: VDS.RDF.TripleStoreExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ITripleStore.VDS.RDF.TripleStoreExtensions.SaveToFile(System.String)
  commentId: M:VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String)
  parent: VDS.RDF.TripleStoreExtensions
  definition: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String)
  name: SaveToFile(String)
  nameWithType: TripleStoreExtensions.SaveToFile(String)
  fullName: VDS.RDF.TripleStoreExtensions.SaveToFile(System.String)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.SaveToFile(System.String)
    name: SaveToFile
    nameWithType: TripleStoreExtensions.SaveToFile
    fullName: VDS.RDF.TripleStoreExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.SaveToFile(System.String)
    name: SaveToFile
    nameWithType: TripleStoreExtensions.SaveToFile
    fullName: VDS.RDF.TripleStoreExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  isExternal: true
  name: LoadFromFile(ITripleStore, String, IStoreReader)
  nameWithType: TripleStoreExtensions.LoadFromFile(ITripleStore, String, IStoreReader)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore, System.String, VDS.RDF.IStoreReader)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
    name: LoadFromFile
    nameWithType: TripleStoreExtensions.LoadFromFile
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
    name: LoadFromFile
    nameWithType: TripleStoreExtensions.LoadFromFile
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStoreExtensions
  commentId: T:VDS.RDF.TripleStoreExtensions
  parent: VDS.RDF
  name: TripleStoreExtensions
  nameWithType: TripleStoreExtensions
  fullName: VDS.RDF.TripleStoreExtensions
- uid: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String)
  isExternal: true
  name: LoadFromFile(ITripleStore, String)
  nameWithType: TripleStoreExtensions.LoadFromFile(ITripleStore, String)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore, System.String)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String)
    name: LoadFromFile
    nameWithType: TripleStoreExtensions.LoadFromFile
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromFile(VDS.RDF.ITripleStore,System.String)
    name: LoadFromFile
    nameWithType: TripleStoreExtensions.LoadFromFile
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri,VDS.RDF.IStoreReader)
  isExternal: true
  name: LoadFromUri(ITripleStore, Uri, IStoreReader)
  nameWithType: TripleStoreExtensions.LoadFromUri(ITripleStore, Uri, IStoreReader)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore, System.Uri, VDS.RDF.IStoreReader)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri,VDS.RDF.IStoreReader)
    name: LoadFromUri
    nameWithType: TripleStoreExtensions.LoadFromUri
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri,VDS.RDF.IStoreReader)
    name: LoadFromUri
    nameWithType: TripleStoreExtensions.LoadFromUri
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri)
  isExternal: true
  name: LoadFromUri(ITripleStore, Uri)
  nameWithType: TripleStoreExtensions.LoadFromUri(ITripleStore, Uri)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri)
    name: LoadFromUri
    nameWithType: TripleStoreExtensions.LoadFromUri
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromUri(VDS.RDF.ITripleStore,System.Uri)
    name: LoadFromUri
    nameWithType: TripleStoreExtensions.LoadFromUri
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromUri
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  isExternal: true
  name: LoadFromString(ITripleStore, String, IStoreReader)
  nameWithType: TripleStoreExtensions.LoadFromString(ITripleStore, String, IStoreReader)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore, System.String, VDS.RDF.IStoreReader)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
    name: LoadFromString
    nameWithType: TripleStoreExtensions.LoadFromString
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
    name: LoadFromString
    nameWithType: TripleStoreExtensions.LoadFromString
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String)
  isExternal: true
  name: LoadFromString(ITripleStore, String)
  nameWithType: TripleStoreExtensions.LoadFromString(ITripleStore, String)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore, System.String)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String)
    name: LoadFromString
    nameWithType: TripleStoreExtensions.LoadFromString
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromString(VDS.RDF.ITripleStore,System.String)
    name: LoadFromString
    nameWithType: TripleStoreExtensions.LoadFromString
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
  isExternal: true
  name: LoadFromEmbeddedResource(ITripleStore, String, IStoreReader)
  nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource(ITripleStore, String, IStoreReader)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore, System.String, VDS.RDF.IStoreReader)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
    name: LoadFromEmbeddedResource
    nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreReader)
    name: LoadFromEmbeddedResource
    nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreReader
    name: IStoreReader
    nameWithType: IStoreReader
    fullName: VDS.RDF.IStoreReader
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String)
  commentId: M:VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String)
  isExternal: true
  name: LoadFromEmbeddedResource(ITripleStore, String)
  nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource(ITripleStore, String)
  fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore, System.String)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String)
    name: LoadFromEmbeddedResource
    nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource(VDS.RDF.ITripleStore,System.String)
    name: LoadFromEmbeddedResource
    nameWithType: TripleStoreExtensions.LoadFromEmbeddedResource
    fullName: VDS.RDF.TripleStoreExtensions.LoadFromEmbeddedResource
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreWriter)
  commentId: M:VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreWriter)
  isExternal: true
  name: SaveToFile(ITripleStore, String, IStoreWriter)
  nameWithType: TripleStoreExtensions.SaveToFile(ITripleStore, String, IStoreWriter)
  fullName: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore, System.String, VDS.RDF.IStoreWriter)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: TripleStoreExtensions.SaveToFile
    fullName: VDS.RDF.TripleStoreExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String,VDS.RDF.IStoreWriter)
    name: SaveToFile
    nameWithType: TripleStoreExtensions.SaveToFile
    fullName: VDS.RDF.TripleStoreExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IStoreWriter
    name: IStoreWriter
    nameWithType: IStoreWriter
    fullName: VDS.RDF.IStoreWriter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String)
  commentId: M:VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String)
  isExternal: true
  name: SaveToFile(ITripleStore, String)
  nameWithType: TripleStoreExtensions.SaveToFile(ITripleStore, String)
  fullName: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore, System.String)
  spec.csharp:
  - uid: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String)
    name: SaveToFile
    nameWithType: TripleStoreExtensions.SaveToFile
    fullName: VDS.RDF.TripleStoreExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.TripleStoreExtensions.SaveToFile(VDS.RDF.ITripleStore,System.String)
    name: SaveToFile
    nameWithType: TripleStoreExtensions.SaveToFile
    fullName: VDS.RDF.TripleStoreExtensions.SaveToFile
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ITripleStore
    name: ITripleStore
    nameWithType: ITripleStore
    fullName: VDS.RDF.ITripleStore
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{VDS.RDF.Query.Inference.IInferenceEngine}
  commentId: T:System.Collections.Generic.List{VDS.RDF.Query.Inference.IInferenceEngine}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<IInferenceEngine>
  nameWithType: List<IInferenceEngine>
  fullName: System.Collections.Generic.List<VDS.RDF.Query.Inference.IInferenceEngine>
  nameWithType.vb: List(Of IInferenceEngine)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.Query.Inference.IInferenceEngine)
  name.vb: List(Of IInferenceEngine)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Inference.IInferenceEngine
    name: IInferenceEngine
    nameWithType: IInferenceEngine
    fullName: VDS.RDF.Query.Inference.IInferenceEngine
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Inference.IInferenceEngine
    name: IInferenceEngine
    nameWithType: IInferenceEngine
    fullName: VDS.RDF.Query.Inference.IInferenceEngine
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.TripleStore.#ctor*
  commentId: Overload:VDS.RDF.TripleStore.#ctor
  name: TripleStore
  nameWithType: TripleStore.TripleStore
  fullName: VDS.RDF.TripleStore.TripleStore
- uid: VDS.RDF.BaseGraphCollection
  commentId: T:VDS.RDF.BaseGraphCollection
  parent: VDS.RDF
  name: BaseGraphCollection
  nameWithType: BaseGraphCollection
  fullName: VDS.RDF.BaseGraphCollection
- uid: VDS.RDF.TripleStore.Contains*
  commentId: Overload:VDS.RDF.TripleStore.Contains
  name: Contains
  nameWithType: TripleStore.Contains
  fullName: VDS.RDF.TripleStore.Contains
- uid: VDS.RDF.IInMemoryQueryableStore.Contains(VDS.RDF.Triple)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.Contains(VDS.RDF.Triple)
  parent: VDS.RDF.IInMemoryQueryableStore
  name: Contains(Triple)
  nameWithType: IInMemoryQueryableStore.Contains(Triple)
  fullName: VDS.RDF.IInMemoryQueryableStore.Contains(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.Contains(VDS.RDF.Triple)
    name: Contains
    nameWithType: IInMemoryQueryableStore.Contains
    fullName: VDS.RDF.IInMemoryQueryableStore.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.Contains(VDS.RDF.Triple)
    name: Contains
    nameWithType: IInMemoryQueryableStore.Contains
    fullName: VDS.RDF.IInMemoryQueryableStore.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: VDS.RDF.TripleStore.GetTriples*
  commentId: Overload:VDS.RDF.TripleStore.GetTriples
  name: GetTriples
  nameWithType: TripleStore.GetTriples
  fullName: VDS.RDF.TripleStore.GetTriples
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Uri)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Uri)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: GetTriples(Uri)
  nameWithType: IInMemoryQueryableStore.GetTriples(Uri)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Uri)
    name: GetTriples
    nameWithType: IInMemoryQueryableStore.GetTriples
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Uri)
    name: GetTriples
    nameWithType: IInMemoryQueryableStore.GetTriples
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Triple>
  nameWithType: IEnumerable<Triple>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Triple>
  nameWithType.vb: IEnumerable(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple)
  name.vb: IEnumerable(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriples(VDS.RDF.INode)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriples(VDS.RDF.INode)
  parent: VDS.RDF.IInMemoryQueryableStore
  name: GetTriples(INode)
  nameWithType: IInMemoryQueryableStore.GetTriples(INode)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriples(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriples(VDS.RDF.INode)
    name: GetTriples
    nameWithType: IInMemoryQueryableStore.GetTriples
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriples(VDS.RDF.INode)
    name: GetTriples
    nameWithType: IInMemoryQueryableStore.GetTriples
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.TripleStore.GetTriplesWithObject*
  commentId: Overload:VDS.RDF.TripleStore.GetTriplesWithObject
  name: GetTriplesWithObject
  nameWithType: TripleStore.GetTriplesWithObject
  fullName: VDS.RDF.TripleStore.GetTriplesWithObject
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Uri)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Uri)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: GetTriplesWithObject(Uri)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithObject(Uri)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Uri)
    name: GetTriplesWithObject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithObject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Uri)
    name: GetTriplesWithObject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithObject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.IInMemoryQueryableStore
  name: GetTriplesWithObject(INode)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithObject(INode)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithObject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithObject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStore.GetTriplesWithPredicate*
  commentId: Overload:VDS.RDF.TripleStore.GetTriplesWithPredicate
  name: GetTriplesWithPredicate
  nameWithType: TripleStore.GetTriplesWithPredicate
  fullName: VDS.RDF.TripleStore.GetTriplesWithPredicate
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.IInMemoryQueryableStore
  name: GetTriplesWithPredicate(INode)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicate
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicate
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Uri)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Uri)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: GetTriplesWithPredicate(Uri)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicate(Uri)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicate
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicate
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStore.GetTriplesWithSubject*
  commentId: Overload:VDS.RDF.TripleStore.GetTriplesWithSubject
  name: GetTriplesWithSubject
  nameWithType: TripleStore.GetTriplesWithSubject
  fullName: VDS.RDF.TripleStore.GetTriplesWithSubject
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.IInMemoryQueryableStore
  name: GetTriplesWithSubject(INode)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithSubject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithSubject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Uri)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Uri)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: GetTriplesWithSubject(Uri)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithSubject(Uri)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Uri)
    name: GetTriplesWithSubject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithSubject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Uri)
    name: GetTriplesWithSubject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithSubject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStore.GetTriplesWithSubjectPredicate*
  commentId: Overload:VDS.RDF.TripleStore.GetTriplesWithSubjectPredicate
  name: GetTriplesWithSubjectPredicate
  nameWithType: TripleStore.GetTriplesWithSubjectPredicate
  fullName: VDS.RDF.TripleStore.GetTriplesWithSubjectPredicate
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IInMemoryQueryableStore
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: IInMemoryQueryableStore.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: IInMemoryQueryableStore.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStore.GetTriplesWithPredicateObject*
  commentId: Overload:VDS.RDF.TripleStore.GetTriplesWithPredicateObject
  name: GetTriplesWithPredicateObject
  nameWithType: TripleStore.GetTriplesWithPredicateObject
  fullName: VDS.RDF.TripleStore.GetTriplesWithPredicateObject
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IInMemoryQueryableStore
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicateObject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicateObject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStore.GetTriplesWithSubjectObject*
  commentId: Overload:VDS.RDF.TripleStore.GetTriplesWithSubjectObject
  name: GetTriplesWithSubjectObject
  nameWithType: TripleStore.GetTriplesWithSubjectObject
  fullName: VDS.RDF.TripleStore.GetTriplesWithSubjectObject
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.IInMemoryQueryableStore
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithSubjectObject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithSubjectObject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List{System.Uri},System.Uri)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List{System.Uri},System.Uri)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: GetTriples(List<Uri>, Uri)
  nameWithType: IInMemoryQueryableStore.GetTriples(List<Uri>, Uri)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List<System.Uri>, System.Uri)
  nameWithType.vb: IInMemoryQueryableStore.GetTriples(List(Of Uri), Uri)
  fullName.vb: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List(Of System.Uri), System.Uri)
  name.vb: GetTriples(List(Of Uri), Uri)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List{System.Uri},System.Uri)
    name: GetTriples
    nameWithType: IInMemoryQueryableStore.GetTriples
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List{System.Uri},System.Uri)
    name: GetTriples
    nameWithType: IInMemoryQueryableStore.GetTriples
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.Uri}
  commentId: T:System.Collections.Generic.List{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Uri>
  nameWithType: List<Uri>
  fullName: System.Collections.Generic.List<System.Uri>
  nameWithType.vb: List(Of Uri)
  fullName.vb: System.Collections.Generic.List(Of System.Uri)
  name.vb: List(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: GetTriples(List<Uri>, INode)
  nameWithType: IInMemoryQueryableStore.GetTriples(List<Uri>, INode)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List<System.Uri>, VDS.RDF.INode)
  nameWithType.vb: IInMemoryQueryableStore.GetTriples(List(Of Uri), INode)
  fullName.vb: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List(Of System.Uri), VDS.RDF.INode)
  name.vb: GetTriples(List(Of Uri), INode)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
    name: GetTriples
    nameWithType: IInMemoryQueryableStore.GetTriples
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriples(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
    name: GetTriples
    nameWithType: IInMemoryQueryableStore.GetTriples
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriples
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},System.Uri)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},System.Uri)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: GetTriplesWithObject(List<Uri>, Uri)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithObject(List<Uri>, Uri)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List<System.Uri>, System.Uri)
  nameWithType.vb: IInMemoryQueryableStore.GetTriplesWithObject(List(Of Uri), Uri)
  fullName.vb: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List(Of System.Uri), System.Uri)
  name.vb: GetTriplesWithObject(List(Of Uri), Uri)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},System.Uri)
    name: GetTriplesWithObject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithObject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},System.Uri)
    name: GetTriplesWithObject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithObject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: GetTriplesWithObject(List<Uri>, INode)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithObject(List<Uri>, INode)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List<System.Uri>, VDS.RDF.INode)
  nameWithType.vb: IInMemoryQueryableStore.GetTriplesWithObject(List(Of Uri), INode)
  fullName.vb: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List(Of System.Uri), VDS.RDF.INode)
  name.vb: GetTriplesWithObject(List(Of Uri), INode)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithObject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithObject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: GetTriplesWithPredicate(List<Uri>, INode)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicate(List<Uri>, INode)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List<System.Uri>, VDS.RDF.INode)
  nameWithType.vb: IInMemoryQueryableStore.GetTriplesWithPredicate(List(Of Uri), INode)
  fullName.vb: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List(Of System.Uri), VDS.RDF.INode)
  name.vb: GetTriplesWithPredicate(List(Of Uri), INode)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicate
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicate
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},System.Uri)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},System.Uri)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: GetTriplesWithPredicate(List<Uri>, Uri)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicate(List<Uri>, Uri)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List<System.Uri>, System.Uri)
  nameWithType.vb: IInMemoryQueryableStore.GetTriplesWithPredicate(List(Of Uri), Uri)
  fullName.vb: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List(Of System.Uri), System.Uri)
  name.vb: GetTriplesWithPredicate(List(Of Uri), Uri)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicate
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate(System.Collections.Generic.List{System.Uri},System.Uri)
    name: GetTriplesWithPredicate
    nameWithType: IInMemoryQueryableStore.GetTriplesWithPredicate
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: GetTriplesWithSubject(List<Uri>, INode)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithSubject(List<Uri>, INode)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List<System.Uri>, VDS.RDF.INode)
  nameWithType.vb: IInMemoryQueryableStore.GetTriplesWithSubject(List(Of Uri), INode)
  fullName.vb: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List(Of System.Uri), VDS.RDF.INode)
  name.vb: GetTriplesWithSubject(List(Of Uri), INode)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithSubject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithSubject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},System.Uri)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},System.Uri)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: GetTriplesWithSubject(List<Uri>, Uri)
  nameWithType: IInMemoryQueryableStore.GetTriplesWithSubject(List<Uri>, Uri)
  fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List<System.Uri>, System.Uri)
  nameWithType.vb: IInMemoryQueryableStore.GetTriplesWithSubject(List(Of Uri), Uri)
  fullName.vb: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List(Of System.Uri), System.Uri)
  name.vb: GetTriplesWithSubject(List(Of Uri), Uri)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},System.Uri)
    name: GetTriplesWithSubject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithSubject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject(System.Collections.Generic.List{System.Uri},System.Uri)
    name: GetTriplesWithSubject
    nameWithType: IInMemoryQueryableStore.GetTriplesWithSubject
    fullName: VDS.RDF.IInMemoryQueryableStore.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.ISparqlQueryProcessor
  commentId: T:VDS.RDF.Query.ISparqlQueryProcessor
  parent: VDS.RDF.Query
  name: ISparqlQueryProcessor
  nameWithType: ISparqlQueryProcessor
  fullName: VDS.RDF.Query.ISparqlQueryProcessor
- uid: VDS.RDF.Query.LeviathanQueryProcessor
  commentId: T:VDS.RDF.Query.LeviathanQueryProcessor
  parent: VDS.RDF.Query
  name: LeviathanQueryProcessor
  nameWithType: LeviathanQueryProcessor
  fullName: VDS.RDF.Query.LeviathanQueryProcessor
- uid: VDS.RDF.TripleStore.ExecuteQuery*
  commentId: Overload:VDS.RDF.TripleStore.ExecuteQuery
  name: ExecuteQuery
  nameWithType: TripleStore.ExecuteQuery
  fullName: VDS.RDF.TripleStore.ExecuteQuery
- uid: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(System.String)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(System.String)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: ExecuteQuery(String)
  nameWithType: IInMemoryQueryableStore.ExecuteQuery(String)
  fullName: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(System.String)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(System.String)
    name: ExecuteQuery
    nameWithType: IInMemoryQueryableStore.ExecuteQuery
    fullName: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(System.String)
    name: ExecuteQuery
    nameWithType: IInMemoryQueryableStore.ExecuteQuery
    fullName: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.SparqlQuery
  commentId: T:VDS.RDF.Query.SparqlQuery
  parent: VDS.RDF.Query
  name: SparqlQuery
  nameWithType: SparqlQuery
  fullName: VDS.RDF.Query.SparqlQuery
- uid: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  parent: VDS.RDF.IInMemoryQueryableStore
  name: ExecuteQuery(SparqlQuery)
  nameWithType: IInMemoryQueryableStore.ExecuteQuery(SparqlQuery)
  fullName: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: IInMemoryQueryableStore.ExecuteQuery
    fullName: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: IInMemoryQueryableStore.ExecuteQuery
    fullName: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
  parent: VDS.RDF.IInMemoryQueryableStore
  isExternal: true
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, String)
  nameWithType: IInMemoryQueryableStore.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, String)
  fullName: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, System.String)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: IInMemoryQueryableStore.ExecuteQuery
    fullName: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,System.String)
    name: ExecuteQuery
    nameWithType: IInMemoryQueryableStore.ExecuteQuery
    fullName: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IRdfHandler
  commentId: T:VDS.RDF.IRdfHandler
  parent: VDS.RDF
  name: IRdfHandler
  nameWithType: IRdfHandler
  fullName: VDS.RDF.IRdfHandler
- uid: VDS.RDF.ISparqlResultsHandler
  commentId: T:VDS.RDF.ISparqlResultsHandler
  parent: VDS.RDF
  name: ISparqlResultsHandler
  nameWithType: ISparqlResultsHandler
  fullName: VDS.RDF.ISparqlResultsHandler
- uid: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  commentId: M:VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
  parent: VDS.RDF.IInMemoryQueryableStore
  name: ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  nameWithType: IInMemoryQueryableStore.ExecuteQuery(IRdfHandler, ISparqlResultsHandler, SparqlQuery)
  fullName: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.IRdfHandler, VDS.RDF.ISparqlResultsHandler, VDS.RDF.Query.SparqlQuery)
  spec.csharp:
  - uid: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: IInMemoryQueryableStore.ExecuteQuery
    fullName: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery(VDS.RDF.IRdfHandler,VDS.RDF.ISparqlResultsHandler,VDS.RDF.Query.SparqlQuery)
    name: ExecuteQuery
    nameWithType: IInMemoryQueryableStore.ExecuteQuery
    fullName: VDS.RDF.IInMemoryQueryableStore.ExecuteQuery
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IRdfHandler
    name: IRdfHandler
    nameWithType: IRdfHandler
    fullName: VDS.RDF.IRdfHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.ISparqlResultsHandler
    name: ISparqlResultsHandler
    nameWithType: ISparqlResultsHandler
    fullName: VDS.RDF.ISparqlResultsHandler
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlQuery
    name: SparqlQuery
    nameWithType: SparqlQuery
    fullName: VDS.RDF.Query.SparqlQuery
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStore.ApplyInference*
  commentId: Overload:VDS.RDF.TripleStore.ApplyInference
  name: ApplyInference
  nameWithType: TripleStore.ApplyInference
  fullName: VDS.RDF.TripleStore.ApplyInference
- uid: VDS.RDF.IInferencingTripleStore.ApplyInference(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.IInferencingTripleStore.ApplyInference(VDS.RDF.IGraph)
  parent: VDS.RDF.IInferencingTripleStore
  name: ApplyInference(IGraph)
  nameWithType: IInferencingTripleStore.ApplyInference(IGraph)
  fullName: VDS.RDF.IInferencingTripleStore.ApplyInference(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.IInferencingTripleStore.ApplyInference(VDS.RDF.IGraph)
    name: ApplyInference
    nameWithType: IInferencingTripleStore.ApplyInference
    fullName: VDS.RDF.IInferencingTripleStore.ApplyInference
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInferencingTripleStore.ApplyInference(VDS.RDF.IGraph)
    name: ApplyInference
    nameWithType: IInferencingTripleStore.ApplyInference
    fullName: VDS.RDF.IInferencingTripleStore.ApplyInference
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.TripleStore.AddInferenceEngine*
  commentId: Overload:VDS.RDF.TripleStore.AddInferenceEngine
  name: AddInferenceEngine
  nameWithType: TripleStore.AddInferenceEngine
  fullName: VDS.RDF.TripleStore.AddInferenceEngine
- uid: VDS.RDF.IInferencingTripleStore.AddInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  commentId: M:VDS.RDF.IInferencingTripleStore.AddInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  parent: VDS.RDF.IInferencingTripleStore
  name: AddInferenceEngine(IInferenceEngine)
  nameWithType: IInferencingTripleStore.AddInferenceEngine(IInferenceEngine)
  fullName: VDS.RDF.IInferencingTripleStore.AddInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  spec.csharp:
  - uid: VDS.RDF.IInferencingTripleStore.AddInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
    name: AddInferenceEngine
    nameWithType: IInferencingTripleStore.AddInferenceEngine
    fullName: VDS.RDF.IInferencingTripleStore.AddInferenceEngine
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Inference.IInferenceEngine
    name: IInferenceEngine
    nameWithType: IInferenceEngine
    fullName: VDS.RDF.Query.Inference.IInferenceEngine
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInferencingTripleStore.AddInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
    name: AddInferenceEngine
    nameWithType: IInferencingTripleStore.AddInferenceEngine
    fullName: VDS.RDF.IInferencingTripleStore.AddInferenceEngine
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Inference.IInferenceEngine
    name: IInferenceEngine
    nameWithType: IInferenceEngine
    fullName: VDS.RDF.Query.Inference.IInferenceEngine
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.IInferenceEngine
  commentId: T:VDS.RDF.Query.Inference.IInferenceEngine
  parent: VDS.RDF.Query.Inference
  name: IInferenceEngine
  nameWithType: IInferenceEngine
  fullName: VDS.RDF.Query.Inference.IInferenceEngine
- uid: VDS.RDF.Query.Inference
  commentId: N:VDS.RDF.Query.Inference
  name: VDS.RDF.Query.Inference
  nameWithType: VDS.RDF.Query.Inference
  fullName: VDS.RDF.Query.Inference
- uid: VDS.RDF.TripleStore.RemoveInferenceEngine*
  commentId: Overload:VDS.RDF.TripleStore.RemoveInferenceEngine
  name: RemoveInferenceEngine
  nameWithType: TripleStore.RemoveInferenceEngine
  fullName: VDS.RDF.TripleStore.RemoveInferenceEngine
- uid: VDS.RDF.IInferencingTripleStore.RemoveInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  commentId: M:VDS.RDF.IInferencingTripleStore.RemoveInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  parent: VDS.RDF.IInferencingTripleStore
  name: RemoveInferenceEngine(IInferenceEngine)
  nameWithType: IInferencingTripleStore.RemoveInferenceEngine(IInferenceEngine)
  fullName: VDS.RDF.IInferencingTripleStore.RemoveInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
  spec.csharp:
  - uid: VDS.RDF.IInferencingTripleStore.RemoveInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
    name: RemoveInferenceEngine
    nameWithType: IInferencingTripleStore.RemoveInferenceEngine
    fullName: VDS.RDF.IInferencingTripleStore.RemoveInferenceEngine
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Inference.IInferenceEngine
    name: IInferenceEngine
    nameWithType: IInferenceEngine
    fullName: VDS.RDF.Query.Inference.IInferenceEngine
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInferencingTripleStore.RemoveInferenceEngine(VDS.RDF.Query.Inference.IInferenceEngine)
    name: RemoveInferenceEngine
    nameWithType: IInferencingTripleStore.RemoveInferenceEngine
    fullName: VDS.RDF.IInferencingTripleStore.RemoveInferenceEngine
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Inference.IInferenceEngine
    name: IInferenceEngine
    nameWithType: IInferenceEngine
    fullName: VDS.RDF.Query.Inference.IInferenceEngine
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStore.ClearInferenceEngines*
  commentId: Overload:VDS.RDF.TripleStore.ClearInferenceEngines
  name: ClearInferenceEngines
  nameWithType: TripleStore.ClearInferenceEngines
  fullName: VDS.RDF.TripleStore.ClearInferenceEngines
- uid: VDS.RDF.IInferencingTripleStore.ClearInferenceEngines
  commentId: M:VDS.RDF.IInferencingTripleStore.ClearInferenceEngines
  parent: VDS.RDF.IInferencingTripleStore
  name: ClearInferenceEngines()
  nameWithType: IInferencingTripleStore.ClearInferenceEngines()
  fullName: VDS.RDF.IInferencingTripleStore.ClearInferenceEngines()
  spec.csharp:
  - uid: VDS.RDF.IInferencingTripleStore.ClearInferenceEngines
    name: ClearInferenceEngines
    nameWithType: IInferencingTripleStore.ClearInferenceEngines
    fullName: VDS.RDF.IInferencingTripleStore.ClearInferenceEngines
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IInferencingTripleStore.ClearInferenceEngines
    name: ClearInferenceEngines
    nameWithType: IInferencingTripleStore.ClearInferenceEngines
    fullName: VDS.RDF.IInferencingTripleStore.ClearInferenceEngines
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseTripleStore.Dispose
  commentId: M:VDS.RDF.BaseTripleStore.Dispose
  parent: VDS.RDF.BaseTripleStore
  name: Dispose()
  nameWithType: BaseTripleStore.Dispose()
  fullName: VDS.RDF.BaseTripleStore.Dispose()
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.Dispose
    name: Dispose
    nameWithType: BaseTripleStore.Dispose
    fullName: VDS.RDF.BaseTripleStore.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.Dispose
    name: Dispose
    nameWithType: BaseTripleStore.Dispose
    fullName: VDS.RDF.BaseTripleStore.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStore.Dispose*
  commentId: Overload:VDS.RDF.TripleStore.Dispose
  name: Dispose
  nameWithType: TripleStore.Dispose
  fullName: VDS.RDF.TripleStore.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStore.ExecuteUpdate*
  commentId: Overload:VDS.RDF.TripleStore.ExecuteUpdate
  name: ExecuteUpdate
  nameWithType: TripleStore.ExecuteUpdate
  fullName: VDS.RDF.TripleStore.ExecuteUpdate
- uid: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(System.String)
  commentId: M:VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(System.String)
  parent: VDS.RDF.IUpdateableTripleStore
  isExternal: true
  name: ExecuteUpdate(String)
  nameWithType: IUpdateableTripleStore.ExecuteUpdate(String)
  fullName: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(System.String)
  spec.csharp:
  - uid: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(System.String)
    name: ExecuteUpdate
    nameWithType: IUpdateableTripleStore.ExecuteUpdate
    fullName: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(System.String)
    name: ExecuteUpdate
    nameWithType: IUpdateableTripleStore.ExecuteUpdate
    fullName: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommand)
  commentId: M:VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommand)
  parent: VDS.RDF.IUpdateableTripleStore
  name: ExecuteUpdate(SparqlUpdateCommand)
  nameWithType: IUpdateableTripleStore.ExecuteUpdate(SparqlUpdateCommand)
  fullName: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommand)
  spec.csharp:
  - uid: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommand)
    name: ExecuteUpdate
    nameWithType: IUpdateableTripleStore.ExecuteUpdate
    fullName: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Update.SparqlUpdateCommand
    name: SparqlUpdateCommand
    nameWithType: SparqlUpdateCommand
    fullName: VDS.RDF.Update.SparqlUpdateCommand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommand)
    name: ExecuteUpdate
    nameWithType: IUpdateableTripleStore.ExecuteUpdate
    fullName: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Update.SparqlUpdateCommand
    name: SparqlUpdateCommand
    nameWithType: SparqlUpdateCommand
    fullName: VDS.RDF.Update.SparqlUpdateCommand
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Update.SparqlUpdateCommand
  commentId: T:VDS.RDF.Update.SparqlUpdateCommand
  parent: VDS.RDF.Update
  name: SparqlUpdateCommand
  nameWithType: SparqlUpdateCommand
  fullName: VDS.RDF.Update.SparqlUpdateCommand
- uid: VDS.RDF.Update
  commentId: N:VDS.RDF.Update
  name: VDS.RDF.Update
  nameWithType: VDS.RDF.Update
  fullName: VDS.RDF.Update
- uid: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommandSet)
  commentId: M:VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommandSet)
  parent: VDS.RDF.IUpdateableTripleStore
  name: ExecuteUpdate(SparqlUpdateCommandSet)
  nameWithType: IUpdateableTripleStore.ExecuteUpdate(SparqlUpdateCommandSet)
  fullName: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommandSet)
  spec.csharp:
  - uid: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommandSet)
    name: ExecuteUpdate
    nameWithType: IUpdateableTripleStore.ExecuteUpdate
    fullName: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Update.SparqlUpdateCommandSet
    name: SparqlUpdateCommandSet
    nameWithType: SparqlUpdateCommandSet
    fullName: VDS.RDF.Update.SparqlUpdateCommandSet
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate(VDS.RDF.Update.SparqlUpdateCommandSet)
    name: ExecuteUpdate
    nameWithType: IUpdateableTripleStore.ExecuteUpdate
    fullName: VDS.RDF.IUpdateableTripleStore.ExecuteUpdate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Update.SparqlUpdateCommandSet
    name: SparqlUpdateCommandSet
    nameWithType: SparqlUpdateCommandSet
    fullName: VDS.RDF.Update.SparqlUpdateCommandSet
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Update.SparqlUpdateCommandSet
  commentId: T:VDS.RDF.Update.SparqlUpdateCommandSet
  parent: VDS.RDF.Update
  name: SparqlUpdateCommandSet
  nameWithType: SparqlUpdateCommandSet
  fullName: VDS.RDF.Update.SparqlUpdateCommandSet
- uid: VDS.RDF.BaseGraphCollection.GraphAdded
  commentId: E:VDS.RDF.BaseGraphCollection.GraphAdded
  parent: VDS.RDF.BaseGraphCollection
  name: GraphAdded
  nameWithType: BaseGraphCollection.GraphAdded
  fullName: VDS.RDF.BaseGraphCollection.GraphAdded
- uid: VDS.RDF.BaseTripleStore.OnGraphAdded(System.Object,VDS.RDF.GraphEventArgs)
  commentId: M:VDS.RDF.BaseTripleStore.OnGraphAdded(System.Object,VDS.RDF.GraphEventArgs)
  parent: VDS.RDF.BaseTripleStore
  isExternal: true
  name: OnGraphAdded(Object, GraphEventArgs)
  nameWithType: BaseTripleStore.OnGraphAdded(Object, GraphEventArgs)
  fullName: VDS.RDF.BaseTripleStore.OnGraphAdded(System.Object, VDS.RDF.GraphEventArgs)
  spec.csharp:
  - uid: VDS.RDF.BaseTripleStore.OnGraphAdded(System.Object,VDS.RDF.GraphEventArgs)
    name: OnGraphAdded
    nameWithType: BaseTripleStore.OnGraphAdded
    fullName: VDS.RDF.BaseTripleStore.OnGraphAdded
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseTripleStore.OnGraphAdded(System.Object,VDS.RDF.GraphEventArgs)
    name: OnGraphAdded
    nameWithType: BaseTripleStore.OnGraphAdded
    fullName: VDS.RDF.BaseTripleStore.OnGraphAdded
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.GraphEventArgs
    name: GraphEventArgs
    nameWithType: GraphEventArgs
    fullName: VDS.RDF.GraphEventArgs
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.TripleStore.OnGraphAdded*
  commentId: Overload:VDS.RDF.TripleStore.OnGraphAdded
  name: OnGraphAdded
  nameWithType: TripleStore.OnGraphAdded
  fullName: VDS.RDF.TripleStore.OnGraphAdded
- uid: VDS.RDF.GraphEventArgs
  commentId: T:VDS.RDF.GraphEventArgs
  parent: VDS.RDF
  name: GraphEventArgs
  nameWithType: GraphEventArgs
  fullName: VDS.RDF.GraphEventArgs
shouldSkipMarkup: true
