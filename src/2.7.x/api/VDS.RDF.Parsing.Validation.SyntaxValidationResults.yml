### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  commentId: T:VDS.RDF.Parsing.Validation.SyntaxValidationResults
  id: SyntaxValidationResults
  parent: VDS.RDF.Parsing.Validation
  children:
  - VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String)
  - VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String,System.Exception)
  - VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String,System.Object)
  - VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String},System.Exception)
  - VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.String,System.Exception)
  - VDS.RDF.Parsing.Validation.SyntaxValidationResults.Error
  - VDS.RDF.Parsing.Validation.SyntaxValidationResults.IsValid
  - VDS.RDF.Parsing.Validation.SyntaxValidationResults.Message
  - VDS.RDF.Parsing.Validation.SyntaxValidationResults.Result
  - VDS.RDF.Parsing.Validation.SyntaxValidationResults.Warnings
  langs:
  - csharp
  - vb
  name: SyntaxValidationResults
  nameWithType: SyntaxValidationResults
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SyntaxValidationResults
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nRepresents Syntax Validation Results.\n"
  example: []
  syntax:
    content: 'public class SyntaxValidationResults : ISyntaxValidationResults'
    content.vb: >-
      Public Class SyntaxValidationResults
          Implements ISyntaxValidationResults
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Parsing.Validation.ISyntaxValidationResults
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.Validation.SyntaxValidationResults.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String)
  commentId: M:VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String)
  id: '#ctor(System.Boolean,System.String)'
  parent: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  langs:
  - csharp
  - vb
  name: SyntaxValidationResults(Boolean, String)
  nameWithType: SyntaxValidationResults.SyntaxValidationResults(Boolean, String)
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.SyntaxValidationResults(System.Boolean, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nCreates new Syntax Validation Results.\n"
  example: []
  syntax:
    content: public SyntaxValidationResults(bool valid, string message)
    parameters:
    - id: valid
      type: System.Boolean
      description: Whether the Syntax was valid.
    - id: message
      type: System.String
      description: Validation Message.
    content.vb: Public Sub New(valid As Boolean, message As String)
  overload: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String,System.Object)
  commentId: M:VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String,System.Object)
  id: '#ctor(System.Boolean,System.String,System.Object)'
  parent: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  langs:
  - csharp
  - vb
  name: SyntaxValidationResults(Boolean, String, Object)
  nameWithType: SyntaxValidationResults.SyntaxValidationResults(Boolean, String, Object)
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.SyntaxValidationResults(System.Boolean, System.String, System.Object)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nCreates new Syntax Validation Results.\n"
  example: []
  syntax:
    content: public SyntaxValidationResults(bool valid, string message, object result)
    parameters:
    - id: valid
      type: System.Boolean
      description: Whether the Syntax was valid.
    - id: message
      type: System.String
      description: Validation Message.
    - id: result
      type: System.Object
      description: Results Object.
    content.vb: Public Sub New(valid As Boolean, message As String, result As Object)
  overload: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Boolean,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String})'
  parent: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  langs:
  - csharp
  - vb
  name: SyntaxValidationResults(Boolean, String, Object, IEnumerable<String>)
  nameWithType: SyntaxValidationResults.SyntaxValidationResults(Boolean, String, Object, IEnumerable<String>)
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.SyntaxValidationResults(System.Boolean, System.String, System.Object, System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
    startLine: 72
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nCreates new Syntax Validation Results.\n"
  example: []
  syntax:
    content: public SyntaxValidationResults(bool valid, string message, object result, IEnumerable<string> warnings)
    parameters:
    - id: valid
      type: System.Boolean
      description: Whether the Syntax was valid.
    - id: message
      type: System.String
      description: Validation Message.
    - id: result
      type: System.Object
      description: Results Object.
    - id: warnings
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Enumeration of Warnings.
    content.vb: Public Sub New(valid As Boolean, message As String, result As Object, warnings As IEnumerable(Of String))
  overload: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor*
  nameWithType.vb: SyntaxValidationResults.SyntaxValidationResults(Boolean, String, Object, IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Parsing.Validation.SyntaxValidationResults.SyntaxValidationResults(System.Boolean, System.String, System.Object, System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: SyntaxValidationResults(Boolean, String, Object, IEnumerable(Of String))
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String},System.Exception)
  commentId: M:VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String},System.Exception)
  id: '#ctor(System.Boolean,System.String,System.Object,System.Collections.Generic.IEnumerable{System.String},System.Exception)'
  parent: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  langs:
  - csharp
  - vb
  name: SyntaxValidationResults(Boolean, String, Object, IEnumerable<String>, Exception)
  nameWithType: SyntaxValidationResults.SyntaxValidationResults(Boolean, String, Object, IEnumerable<String>, Exception)
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.SyntaxValidationResults(System.Boolean, System.String, System.Object, System.Collections.Generic.IEnumerable<System.String>, System.Exception)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
    startLine: 86
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nCreates new Syntax Validation Results.\n"
  example: []
  syntax:
    content: public SyntaxValidationResults(bool valid, string message, object result, IEnumerable<string> warnings, Exception error)
    parameters:
    - id: valid
      type: System.Boolean
      description: Whether the Syntax was valid.
    - id: message
      type: System.String
      description: Validation Message.
    - id: result
      type: System.Object
      description: Results Object.
    - id: warnings
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Enumeration of Warnings.
    - id: error
      type: System.Exception
      description: Error that occurred.
    content.vb: Public Sub New(valid As Boolean, message As String, result As Object, warnings As IEnumerable(Of String), error As Exception)
  overload: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor*
  nameWithType.vb: SyntaxValidationResults.SyntaxValidationResults(Boolean, String, Object, IEnumerable(Of String), Exception)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Parsing.Validation.SyntaxValidationResults.SyntaxValidationResults(System.Boolean, System.String, System.Object, System.Collections.Generic.IEnumerable(Of System.String), System.Exception)
  name.vb: SyntaxValidationResults(Boolean, String, Object, IEnumerable(Of String), Exception)
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String,System.Exception)
  commentId: M:VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.Boolean,System.String,System.Exception)
  id: '#ctor(System.Boolean,System.String,System.Exception)'
  parent: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  langs:
  - csharp
  - vb
  name: SyntaxValidationResults(Boolean, String, Exception)
  nameWithType: SyntaxValidationResults.SyntaxValidationResults(Boolean, String, Exception)
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.SyntaxValidationResults(System.Boolean, System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
    startLine: 98
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nCreates new Syntax Validation Results.\n"
  example: []
  syntax:
    content: public SyntaxValidationResults(bool valid, string message, Exception error)
    parameters:
    - id: valid
      type: System.Boolean
      description: Whether the Syntax was valid.
    - id: message
      type: System.String
      description: Validation Message.
    - id: error
      type: System.Exception
      description: Error that occurred.
    content.vb: Public Sub New(valid As Boolean, message As String, error As Exception)
  overload: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.String,System.Exception)
  commentId: M:VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  langs:
  - csharp
  - vb
  name: SyntaxValidationResults(String, Exception)
  nameWithType: SyntaxValidationResults.SyntaxValidationResults(String, Exception)
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.SyntaxValidationResults(System.String, System.Exception)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
    startLine: 109
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nCreates new Syntax Validation Results.\n"
  example: []
  syntax:
    content: public SyntaxValidationResults(string message, Exception error)
    parameters:
    - id: message
      type: System.String
      description: Validation Message.
    - id: error
      type: System.Exception
      description: Error that occurred.
    content.vb: Public Sub New(message As String, error As Exception)
  overload: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.IsValid
  commentId: P:VDS.RDF.Parsing.Validation.SyntaxValidationResults.IsValid
  id: IsValid
  parent: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  langs:
  - csharp
  - vb
  name: IsValid
  nameWithType: SyntaxValidationResults.IsValid
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.IsValid
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsValid
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
    startLine: 115
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nWhether the Syntax was valid.\n"
  example: []
  syntax:
    content: public bool IsValid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsValid As Boolean
  overload: VDS.RDF.Parsing.Validation.SyntaxValidationResults.IsValid*
  implements:
  - VDS.RDF.Parsing.Validation.ISyntaxValidationResults.IsValid
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Message
  commentId: P:VDS.RDF.Parsing.Validation.SyntaxValidationResults.Message
  id: Message
  parent: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: SyntaxValidationResults.Message
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Message
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Message
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
    startLine: 126
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nGets the Validation Message.\n"
  example: []
  syntax:
    content: public string Message { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Message As String
  overload: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Message*
  implements:
  - VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Message
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Warnings
  commentId: P:VDS.RDF.Parsing.Validation.SyntaxValidationResults.Warnings
  id: Warnings
  parent: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  langs:
  - csharp
  - vb
  name: Warnings
  nameWithType: SyntaxValidationResults.Warnings
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Warnings
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Warnings
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
    startLine: 137
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nGets the Warnings that were produced.\n"
  example: []
  syntax:
    content: public IEnumerable<string> Warnings { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public ReadOnly Property Warnings As IEnumerable(Of String)
  overload: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Warnings*
  implements:
  - VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Warnings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Error
  commentId: P:VDS.RDF.Parsing.Validation.SyntaxValidationResults.Error
  id: Error
  parent: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  langs:
  - csharp
  - vb
  name: Error
  nameWithType: SyntaxValidationResults.Error
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Error
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Error
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
    startLine: 148
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nGets the Error that occurred.\n"
  example: []
  syntax:
    content: public Exception Error { get; }
    parameters: []
    return:
      type: System.Exception
    content.vb: Public ReadOnly Property Error As Exception
  overload: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Error*
  implements:
  - VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Error
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Result
  commentId: P:VDS.RDF.Parsing.Validation.SyntaxValidationResults.Result
  id: Result
  parent: VDS.RDF.Parsing.Validation.SyntaxValidationResults
  langs:
  - csharp
  - vb
  name: Result
  nameWithType: SyntaxValidationResults.Result
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Result
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Result
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Validation/SyntaxValidationResults.cs
    startLine: 159
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Validation
  summary: "\nGets the Result Object that was produced.\n"
  example: []
  syntax:
    content: public object Result { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Result As Object
  overload: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Result*
  implements:
  - VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Result
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VDS.RDF.Parsing.Validation
  commentId: N:VDS.RDF.Parsing.Validation
  name: VDS.RDF.Parsing.Validation
  nameWithType: VDS.RDF.Parsing.Validation
  fullName: VDS.RDF.Parsing.Validation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.Validation.ISyntaxValidationResults
  commentId: T:VDS.RDF.Parsing.Validation.ISyntaxValidationResults
  parent: VDS.RDF.Parsing.Validation
  name: ISyntaxValidationResults
  nameWithType: ISyntaxValidationResults
  fullName: VDS.RDF.Parsing.Validation.ISyntaxValidationResults
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SyntaxValidationResults>()
  nameWithType: Extensions.AsEnumerable<SyntaxValidationResults>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Validation.SyntaxValidationResults>()
  nameWithType.vb: Extensions.AsEnumerable(Of SyntaxValidationResults)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Validation.SyntaxValidationResults)()
  name.vb: AsEnumerable(Of SyntaxValidationResults)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SyntaxValidationResults>
    nameWithType: Extensions.AsEnumerable<SyntaxValidationResults>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Validation.SyntaxValidationResults>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SyntaxValidationResults)
    nameWithType: Extensions.AsEnumerable(Of SyntaxValidationResults)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Validation.SyntaxValidationResults)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor*
  commentId: Overload:VDS.RDF.Parsing.Validation.SyntaxValidationResults.#ctor
  name: SyntaxValidationResults
  nameWithType: SyntaxValidationResults.SyntaxValidationResults
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.SyntaxValidationResults
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.IsValid*
  commentId: Overload:VDS.RDF.Parsing.Validation.SyntaxValidationResults.IsValid
  name: IsValid
  nameWithType: SyntaxValidationResults.IsValid
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.IsValid
- uid: VDS.RDF.Parsing.Validation.ISyntaxValidationResults.IsValid
  commentId: P:VDS.RDF.Parsing.Validation.ISyntaxValidationResults.IsValid
  parent: VDS.RDF.Parsing.Validation.ISyntaxValidationResults
  name: IsValid
  nameWithType: ISyntaxValidationResults.IsValid
  fullName: VDS.RDF.Parsing.Validation.ISyntaxValidationResults.IsValid
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Message*
  commentId: Overload:VDS.RDF.Parsing.Validation.SyntaxValidationResults.Message
  name: Message
  nameWithType: SyntaxValidationResults.Message
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Message
- uid: VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Message
  commentId: P:VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Message
  parent: VDS.RDF.Parsing.Validation.ISyntaxValidationResults
  name: Message
  nameWithType: ISyntaxValidationResults.Message
  fullName: VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Message
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Warnings*
  commentId: Overload:VDS.RDF.Parsing.Validation.SyntaxValidationResults.Warnings
  name: Warnings
  nameWithType: SyntaxValidationResults.Warnings
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Warnings
- uid: VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Warnings
  commentId: P:VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Warnings
  parent: VDS.RDF.Parsing.Validation.ISyntaxValidationResults
  name: Warnings
  nameWithType: ISyntaxValidationResults.Warnings
  fullName: VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Warnings
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Error*
  commentId: Overload:VDS.RDF.Parsing.Validation.SyntaxValidationResults.Error
  name: Error
  nameWithType: SyntaxValidationResults.Error
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Error
- uid: VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Error
  commentId: P:VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Error
  parent: VDS.RDF.Parsing.Validation.ISyntaxValidationResults
  name: Error
  nameWithType: ISyntaxValidationResults.Error
  fullName: VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Error
- uid: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Result*
  commentId: Overload:VDS.RDF.Parsing.Validation.SyntaxValidationResults.Result
  name: Result
  nameWithType: SyntaxValidationResults.Result
  fullName: VDS.RDF.Parsing.Validation.SyntaxValidationResults.Result
- uid: VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Result
  commentId: P:VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Result
  parent: VDS.RDF.Parsing.Validation.ISyntaxValidationResults
  name: Result
  nameWithType: ISyntaxValidationResults.Result
  fullName: VDS.RDF.Parsing.Validation.ISyntaxValidationResults.Result
