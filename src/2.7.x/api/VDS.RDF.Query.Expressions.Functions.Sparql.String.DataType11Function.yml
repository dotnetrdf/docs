### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function
  commentId: T:VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function
  id: DataType11Function
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String
  children:
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  langs:
  - csharp
  - vb
  name: DataType11Function
  nameWithType: DataType11Function
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/DataTypeFunction.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DataType11Function
    path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/DataTypeFunction.cs
    startLine: 133
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.Sparql.String
  summary: "\nClass representing the SPARQL Datatype() function in SPARQL 1.1.\n"
  remarks: "\nThis is required because the changes to the function in SPARQL 1.1 are not backwards compatible with SPARQL 1.0.\n"
  example: []
  syntax:
    content: 'public class DataType11Function : DataTypeFunction, ISparqlExpression'
    content.vb: >-
      Public Class DataType11Function
          Inherits DataTypeFunction
          Implements ISparqlExpression
  inheritance:
  - System.Object
  - VDS.RDF.Query.Expressions.BaseUnaryExpression
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction
  implements:
  - VDS.RDF.Query.Expressions.ISparqlExpression
  inheritedMembers:
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.ToString
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Type
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Functor
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  - VDS.RDF.Query.Expressions.BaseUnaryExpression._expr
  - VDS.RDF.Query.Expressions.BaseUnaryExpression.Variables
  - VDS.RDF.Query.Expressions.BaseUnaryExpression.Arguments
  - VDS.RDF.Query.Expressions.BaseUnaryExpression.CanParallelise
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  id: '#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)'
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function
  langs:
  - csharp
  - vb
  name: DataType11Function(ISparqlExpression)
  nameWithType: DataType11Function.DataType11Function(ISparqlExpression)
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.DataType11Function(VDS.RDF.Query.Expressions.ISparqlExpression)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/DataTypeFunction.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/DataTypeFunction.cs
    startLine: 140
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.Sparql.String
  summary: "\nCreates a new DataType function.\n"
  example: []
  syntax:
    content: public DataType11Function(ISparqlExpression expr)
    parameters:
    - id: expr
      type: VDS.RDF.Query.Expressions.ISparqlExpression
      description: Expression.
    content.vb: Public Sub New(expr As ISparqlExpression)
  overload: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  commentId: M:VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  id: Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function
  langs:
  - csharp
  - vb
  name: Evaluate(SparqlEvaluationContext, Int32)
  nameWithType: DataType11Function.Evaluate(SparqlEvaluationContext, Int32)
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.Evaluate(VDS.RDF.Query.SparqlEvaluationContext, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/DataTypeFunction.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Evaluate
    path: Libraries/dotNetRDF/Query/Expressions/Functions/Sparql/String/DataTypeFunction.cs
    startLine: 149
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Expressions.Functions.Sparql.String
  summary: "\nReturns the value of the Expression as evaluated for a given Binding as a Literal Node.\n"
  example: []
  syntax:
    content: public override IValuedNode Evaluate(SparqlEvaluationContext context, int bindingID)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    - id: bindingID
      type: System.Int32
      description: Binding ID.
    return:
      type: VDS.RDF.Nodes.IValuedNode
      description: ''
    content.vb: Public Overrides Function Evaluate(context As SparqlEvaluationContext, bindingID As Integer) As IValuedNode
  overridden: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  overload: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.Evaluate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String
  commentId: N:VDS.RDF.Query.Expressions.Functions.Sparql.String
  name: VDS.RDF.Query.Expressions.Functions.Sparql.String
  nameWithType: VDS.RDF.Query.Expressions.Functions.Sparql.String
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Expressions.BaseUnaryExpression
  commentId: T:VDS.RDF.Query.Expressions.BaseUnaryExpression
  parent: VDS.RDF.Query.Expressions
  name: BaseUnaryExpression
  nameWithType: BaseUnaryExpression
  fullName: VDS.RDF.Query.Expressions.BaseUnaryExpression
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction
  commentId: T:VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String
  name: DataTypeFunction
  nameWithType: DataTypeFunction
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.ToString
  commentId: M:VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.ToString
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction
  name: ToString()
  nameWithType: DataTypeFunction.ToString()
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.ToString()
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.ToString
    name: ToString
    nameWithType: DataTypeFunction.ToString
    fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.ToString
    name: ToString
    nameWithType: DataTypeFunction.ToString
    fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Type
  commentId: P:VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Type
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction
  name: Type
  nameWithType: DataTypeFunction.Type
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Type
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Functor
  commentId: P:VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Functor
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction
  name: Functor
  nameWithType: DataTypeFunction.Functor
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Functor
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  commentId: M:VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction
  name: Transform(IExpressionTransformer)
  nameWithType: DataTypeFunction.Transform(IExpressionTransformer)
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
    name: Transform
    nameWithType: DataTypeFunction.Transform
    fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.IExpressionTransformer
    name: IExpressionTransformer
    nameWithType: IExpressionTransformer
    fullName: VDS.RDF.Query.Expressions.IExpressionTransformer
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Transform(VDS.RDF.Query.Expressions.IExpressionTransformer)
    name: Transform
    nameWithType: DataTypeFunction.Transform
    fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.IExpressionTransformer
    name: IExpressionTransformer
    nameWithType: IExpressionTransformer
    fullName: VDS.RDF.Query.Expressions.IExpressionTransformer
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.BaseUnaryExpression._expr
  commentId: F:VDS.RDF.Query.Expressions.BaseUnaryExpression._expr
  parent: VDS.RDF.Query.Expressions.BaseUnaryExpression
  name: _expr
  nameWithType: BaseUnaryExpression._expr
  fullName: VDS.RDF.Query.Expressions.BaseUnaryExpression._expr
- uid: VDS.RDF.Query.Expressions.BaseUnaryExpression.Variables
  commentId: P:VDS.RDF.Query.Expressions.BaseUnaryExpression.Variables
  parent: VDS.RDF.Query.Expressions.BaseUnaryExpression
  name: Variables
  nameWithType: BaseUnaryExpression.Variables
  fullName: VDS.RDF.Query.Expressions.BaseUnaryExpression.Variables
- uid: VDS.RDF.Query.Expressions.BaseUnaryExpression.Arguments
  commentId: P:VDS.RDF.Query.Expressions.BaseUnaryExpression.Arguments
  parent: VDS.RDF.Query.Expressions.BaseUnaryExpression
  name: Arguments
  nameWithType: BaseUnaryExpression.Arguments
  fullName: VDS.RDF.Query.Expressions.BaseUnaryExpression.Arguments
- uid: VDS.RDF.Query.Expressions.BaseUnaryExpression.CanParallelise
  commentId: P:VDS.RDF.Query.Expressions.BaseUnaryExpression.CanParallelise
  parent: VDS.RDF.Query.Expressions.BaseUnaryExpression
  name: CanParallelise
  nameWithType: BaseUnaryExpression.CanParallelise
  fullName: VDS.RDF.Query.Expressions.BaseUnaryExpression.CanParallelise
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<DataType11Function>()
  nameWithType: Extensions.AsEnumerable<DataType11Function>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function>()
  nameWithType.vb: Extensions.AsEnumerable(Of DataType11Function)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function)()
  name.vb: AsEnumerable(Of DataType11Function)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<DataType11Function>
    nameWithType: Extensions.AsEnumerable<DataType11Function>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of DataType11Function)
    nameWithType: Extensions.AsEnumerable(Of DataType11Function)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.#ctor*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.#ctor
  name: DataType11Function
  nameWithType: DataType11Function.DataType11Function
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.DataType11Function
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  commentId: M:VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
  parent: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction
  isExternal: true
  name: Evaluate(SparqlEvaluationContext, Int32)
  nameWithType: DataTypeFunction.Evaluate(SparqlEvaluationContext, Int32)
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext, System.Int32)
  spec.csharp:
  - uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
    name: Evaluate
    nameWithType: DataTypeFunction.Evaluate
    fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Evaluate(VDS.RDF.Query.SparqlEvaluationContext,System.Int32)
    name: Evaluate
    nameWithType: DataTypeFunction.Evaluate
    fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataTypeFunction.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.Evaluate*
  commentId: Overload:VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.Evaluate
  name: Evaluate
  nameWithType: DataType11Function.Evaluate
  fullName: VDS.RDF.Query.Expressions.Functions.Sparql.String.DataType11Function.Evaluate
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Nodes.IValuedNode
  commentId: T:VDS.RDF.Nodes.IValuedNode
  parent: VDS.RDF.Nodes
  name: IValuedNode
  nameWithType: IValuedNode
  fullName: VDS.RDF.Nodes.IValuedNode
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
shouldSkipMarkup: true
