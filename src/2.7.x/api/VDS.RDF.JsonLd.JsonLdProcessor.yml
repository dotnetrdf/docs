### YamlMime:ManagedReference
items:
- uid: VDS.RDF.JsonLd.JsonLdProcessor
  commentId: T:VDS.RDF.JsonLd.JsonLdProcessor
  id: JsonLdProcessor
  parent: VDS.RDF.JsonLd
  children:
  - VDS.RDF.JsonLd.JsonLdProcessor.BaseIri
  - VDS.RDF.JsonLd.JsonLdProcessor.Compact(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
  - VDS.RDF.JsonLd.JsonLdProcessor.Compact(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  - VDS.RDF.JsonLd.JsonLdProcessor.Expand(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  - VDS.RDF.JsonLd.JsonLdProcessor.Expand(System.Uri,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  - VDS.RDF.JsonLd.JsonLdProcessor.Flatten(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
  - VDS.RDF.JsonLd.JsonLdProcessor.Flatten(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  - VDS.RDF.JsonLd.JsonLdProcessor.Frame(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  - VDS.RDF.JsonLd.JsonLdProcessor.ProcessingMode
  - VDS.RDF.JsonLd.JsonLdProcessor.Warnings
  langs:
  - csharp
  - vb
  name: JsonLdProcessor
  nameWithType: JsonLdProcessor
  fullName: VDS.RDF.JsonLd.JsonLdProcessor
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: JsonLdProcessor
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nImplements the core JSON-LD processing. \n"
  example: []
  syntax:
    content: public class JsonLdProcessor
    content.vb: Public Class JsonLdProcessor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.JsonLd.JsonLdProcessor.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.JsonLd.JsonLdProcessor.BaseIri
  commentId: P:VDS.RDF.JsonLd.JsonLdProcessor.BaseIri
  id: BaseIri
  parent: VDS.RDF.JsonLd.JsonLdProcessor
  langs:
  - csharp
  - vb
  name: BaseIri
  nameWithType: JsonLdProcessor.BaseIri
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.BaseIri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseIri
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the base IRI for processing.\n"
  remarks: This value should be set to the IRI of the document being processed if available.
  example: []
  syntax:
    content: public Uri BaseIri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property BaseIri As Uri
  overload: VDS.RDF.JsonLd.JsonLdProcessor.BaseIri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessor.ProcessingMode
  commentId: P:VDS.RDF.JsonLd.JsonLdProcessor.ProcessingMode
  id: ProcessingMode
  parent: VDS.RDF.JsonLd.JsonLdProcessor
  langs:
  - csharp
  - vb
  name: ProcessingMode
  nameWithType: JsonLdProcessor.ProcessingMode
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.ProcessingMode
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ProcessingMode
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet or set the current processing mode.\n"
  example: []
  syntax:
    content: public JsonLdProcessingMode? ProcessingMode { get; set; }
    parameters: []
    return:
      type: System.Nullable{VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode}
    content.vb: Public Property ProcessingMode As JsonLdProcessingMode?
  overload: VDS.RDF.JsonLd.JsonLdProcessor.ProcessingMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Warnings
  commentId: P:VDS.RDF.JsonLd.JsonLdProcessor.Warnings
  id: Warnings
  parent: VDS.RDF.JsonLd.JsonLdProcessor
  langs:
  - csharp
  - vb
  name: Warnings
  nameWithType: JsonLdProcessor.Warnings
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Warnings
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Warnings
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nGet the warnings generated by the processor.\n"
  remarks: May be an empty list.
  example: []
  syntax:
    content: public List<JsonLdProcessorWarning> Warnings { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{VDS.RDF.JsonLd.JsonLdProcessorWarning}
    content.vb: Public ReadOnly Property Warnings As List(Of JsonLdProcessorWarning)
  overload: VDS.RDF.JsonLd.JsonLdProcessor.Warnings*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Compact(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  commentId: M:VDS.RDF.JsonLd.JsonLdProcessor.Compact(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  id: Compact(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  parent: VDS.RDF.JsonLd.JsonLdProcessor
  langs:
  - csharp
  - vb
  name: Compact(JToken, JToken, JsonLdProcessorOptions)
  nameWithType: JsonLdProcessor.Compact(JToken, JToken, JsonLdProcessorOptions)
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Compact(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, VDS.RDF.JsonLd.JsonLdProcessorOptions)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Compact
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
    startLine: 81
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nRun the Compaction algorithm.\n"
  example: []
  syntax:
    content: public static JObject Compact(JToken input, JToken context, JsonLdProcessorOptions options)
    parameters:
    - id: input
      type: Newtonsoft.Json.Linq.JToken
      description: The JSON-LD data to be compacted. Expected to be a JObject or JArray of JObject or a JString whose value is the IRI reference to a JSON-LD document to be retrieved.
    - id: context
      type: Newtonsoft.Json.Linq.JToken
      description: The context to use for the compaction process. May be a JObject, JArray of JObject, JString or JArray of JString. String values are treated as IRI references to context documents to be retrieved.
    - id: options
      type: VDS.RDF.JsonLd.JsonLdProcessorOptions
      description: Additional processor options.
    return:
      type: Newtonsoft.Json.Linq.JObject
      description: ''
    content.vb: Public Shared Function Compact(input As JToken, context As JToken, options As JsonLdProcessorOptions) As JObject
  overload: VDS.RDF.JsonLd.JsonLdProcessor.Compact*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Compact(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
  commentId: M:VDS.RDF.JsonLd.JsonLdProcessor.Compact(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
  id: Compact(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
  parent: VDS.RDF.JsonLd.JsonLdProcessor
  langs:
  - csharp
  - vb
  name: Compact(JToken, JToken)
  nameWithType: JsonLdProcessor.Compact(JToken, JToken)
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Compact(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Compact
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
    startLine: 93
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nRun the Compaction algorithm.\n"
  example: []
  syntax:
    content: public JObject Compact(JToken input, JToken context)
    parameters:
    - id: input
      type: Newtonsoft.Json.Linq.JToken
      description: The JSON-LD data to be compacted. Expected to be a JObject or JArray of JObject or a JString whose value is the IRI reference to a JSON-LD document to be retrieved.
    - id: context
      type: Newtonsoft.Json.Linq.JToken
      description: The context to use for the compaction process. May be a JObject, JArray of JObject, JString or JArray of JString. String values are treated as IRI references to context documents to be retrieved.
    return:
      type: Newtonsoft.Json.Linq.JObject
      description: ''
    content.vb: Public Function Compact(input As JToken, context As JToken) As JObject
  overload: VDS.RDF.JsonLd.JsonLdProcessor.Compact*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Expand(System.Uri,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  commentId: M:VDS.RDF.JsonLd.JsonLdProcessor.Expand(System.Uri,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  id: Expand(System.Uri,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  parent: VDS.RDF.JsonLd.JsonLdProcessor
  langs:
  - csharp
  - vb
  name: Expand(Uri, JsonLdProcessorOptions)
  nameWithType: JsonLdProcessor.Expand(Uri, JsonLdProcessorOptions)
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Expand(System.Uri, VDS.RDF.JsonLd.JsonLdProcessorOptions)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Expand
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
    startLine: 158
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nApply the JSON-LD context expansion algorithm to the context found at the specified URL.\n"
  example: []
  syntax:
    content: public static JArray Expand(Uri contextUrl, JsonLdProcessorOptions options = null)
    parameters:
    - id: contextUrl
      type: System.Uri
      description: The URL to load the source context from.
    - id: options
      type: VDS.RDF.JsonLd.JsonLdProcessorOptions
      description: Options to apply during the expansion processing.
    return:
      type: Newtonsoft.Json.Linq.JArray
      description: The expanded JSON-LD context.
    content.vb: Public Shared Function Expand(contextUrl As Uri, options As JsonLdProcessorOptions = Nothing) As JArray
  overload: VDS.RDF.JsonLd.JsonLdProcessor.Expand*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Expand(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  commentId: M:VDS.RDF.JsonLd.JsonLdProcessor.Expand(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  id: Expand(Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  parent: VDS.RDF.JsonLd.JsonLdProcessor
  langs:
  - csharp
  - vb
  name: Expand(JToken, JsonLdProcessorOptions)
  nameWithType: JsonLdProcessor.Expand(JToken, JsonLdProcessorOptions)
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Expand(Newtonsoft.Json.Linq.JToken, VDS.RDF.JsonLd.JsonLdProcessorOptions)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Expand
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
    startLine: 171
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nApply the JSON-LD expansion algorithm to a context JSON object.\n"
  example: []
  syntax:
    content: public static JArray Expand(JToken input, JsonLdProcessorOptions options = null)
    parameters:
    - id: input
      type: Newtonsoft.Json.Linq.JToken
      description: The context JSON object to be expanded.
    - id: options
      type: VDS.RDF.JsonLd.JsonLdProcessorOptions
      description: Options to apply during the expansion processing.
    return:
      type: Newtonsoft.Json.Linq.JArray
      description: The expanded JSON-LD context.
    content.vb: Public Shared Function Expand(input As JToken, options As JsonLdProcessorOptions = Nothing) As JArray
  overload: VDS.RDF.JsonLd.JsonLdProcessor.Expand*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Frame(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  commentId: M:VDS.RDF.JsonLd.JsonLdProcessor.Frame(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  id: Frame(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  parent: VDS.RDF.JsonLd.JsonLdProcessor
  langs:
  - csharp
  - vb
  name: Frame(JToken, JToken, JsonLdProcessorOptions)
  nameWithType: JsonLdProcessor.Frame(JToken, JToken, JsonLdProcessorOptions)
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Frame(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, VDS.RDF.JsonLd.JsonLdProcessorOptions)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Frame
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
    startLine: 252
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nApplies the framing algorithm to the specified input.\n"
  example: []
  syntax:
    content: public static JObject Frame(JToken input, JToken frame, JsonLdProcessorOptions options)
    parameters:
    - id: input
      type: Newtonsoft.Json.Linq.JToken
      description: The input to be framed.
    - id: frame
      type: Newtonsoft.Json.Linq.JToken
      description: The framing specification document.
    - id: options
      type: VDS.RDF.JsonLd.JsonLdProcessorOptions
      description: Processor options.
    return:
      type: Newtonsoft.Json.Linq.JObject
      description: ''
    content.vb: Public Shared Function Frame(input As JToken, frame As JToken, options As JsonLdProcessorOptions) As JObject
  overload: VDS.RDF.JsonLd.JsonLdProcessor.Frame*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Flatten(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  commentId: M:VDS.RDF.JsonLd.JsonLdProcessor.Flatten(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  id: Flatten(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken,VDS.RDF.JsonLd.JsonLdProcessorOptions)
  parent: VDS.RDF.JsonLd.JsonLdProcessor
  langs:
  - csharp
  - vb
  name: Flatten(JToken, JToken, JsonLdProcessorOptions)
  nameWithType: JsonLdProcessor.Flatten(JToken, JToken, JsonLdProcessorOptions)
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Flatten(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken, VDS.RDF.JsonLd.JsonLdProcessorOptions)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Flatten
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
    startLine: 432
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nFlattens the given input and compacts it using the passed context according to the steps in the JSON-LD Flattening algorithm.\n"
  example: []
  syntax:
    content: public static JToken Flatten(JToken input, JToken context, JsonLdProcessorOptions options)
    parameters:
    - id: input
      type: Newtonsoft.Json.Linq.JToken
      description: ''
    - id: context
      type: Newtonsoft.Json.Linq.JToken
      description: ''
    - id: options
      type: VDS.RDF.JsonLd.JsonLdProcessorOptions
      description: ''
    return:
      type: Newtonsoft.Json.Linq.JToken
      description: ''
    content.vb: Public Shared Function Flatten(input As JToken, context As JToken, options As JsonLdProcessorOptions) As JToken
  overload: VDS.RDF.JsonLd.JsonLdProcessor.Flatten*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Flatten(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
  commentId: M:VDS.RDF.JsonLd.JsonLdProcessor.Flatten(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
  id: Flatten(Newtonsoft.Json.Linq.JToken,Newtonsoft.Json.Linq.JToken)
  parent: VDS.RDF.JsonLd.JsonLdProcessor
  langs:
  - csharp
  - vb
  name: Flatten(JToken, JToken)
  nameWithType: JsonLdProcessor.Flatten(JToken, JToken)
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Flatten(Newtonsoft.Json.Linq.JToken, Newtonsoft.Json.Linq.JToken)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Flatten
    path: Libraries/dotNetRDF/JsonLd/JsonLdProcessor.cs
    startLine: 452
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.JsonLd
  summary: "\nFlattens the given input and compacts it using the passed context according to the steps in the JSON-LD Flattening algorithm.\n"
  example: []
  syntax:
    content: public JToken Flatten(JToken input, JToken context)
    parameters:
    - id: input
      type: Newtonsoft.Json.Linq.JToken
      description: ''
    - id: context
      type: Newtonsoft.Json.Linq.JToken
      description: ''
    return:
      type: Newtonsoft.Json.Linq.JToken
      description: ''
    content.vb: Public Function Flatten(input As JToken, context As JToken) As JToken
  overload: VDS.RDF.JsonLd.JsonLdProcessor.Flatten*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.JsonLd
  commentId: N:VDS.RDF.JsonLd
  name: VDS.RDF.JsonLd
  nameWithType: VDS.RDF.JsonLd
  fullName: VDS.RDF.JsonLd
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.JsonLd.JsonLdProcessor.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<JsonLdProcessor>()
  nameWithType: Extensions.AsEnumerable<JsonLdProcessor>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.JsonLd.JsonLdProcessor>()
  nameWithType.vb: Extensions.AsEnumerable(Of JsonLdProcessor)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.JsonLd.JsonLdProcessor)()
  name.vb: AsEnumerable(Of JsonLdProcessor)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<JsonLdProcessor>
    nameWithType: Extensions.AsEnumerable<JsonLdProcessor>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.JsonLd.JsonLdProcessor>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of JsonLdProcessor)
    nameWithType: Extensions.AsEnumerable(Of JsonLdProcessor)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.JsonLd.JsonLdProcessor)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.JsonLd.JsonLdProcessor.BaseIri*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdProcessor.BaseIri
  name: BaseIri
  nameWithType: JsonLdProcessor.BaseIri
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.BaseIri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.JsonLd.JsonLdProcessor.ProcessingMode*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdProcessor.ProcessingMode
  name: ProcessingMode
  nameWithType: JsonLdProcessor.ProcessingMode
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.ProcessingMode
- uid: System.Nullable{VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode}
  commentId: T:System.Nullable{VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode}
  parent: System
  definition: System.Nullable`1
  name: Nullable<JsonLdProcessingMode>
  nameWithType: Nullable<JsonLdProcessingMode>
  fullName: System.Nullable<VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode>
  nameWithType.vb: Nullable(Of JsonLdProcessingMode)
  fullName.vb: System.Nullable(Of VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode)
  name.vb: Nullable(Of JsonLdProcessingMode)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode
    name: JsonLdProcessingMode
    nameWithType: JsonLdProcessingMode
    fullName: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode
    name: JsonLdProcessingMode
    nameWithType: JsonLdProcessingMode
    fullName: VDS.RDF.JsonLd.Syntax.JsonLdProcessingMode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Warnings*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdProcessor.Warnings
  name: Warnings
  nameWithType: JsonLdProcessor.Warnings
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Warnings
- uid: System.Collections.Generic.List{VDS.RDF.JsonLd.JsonLdProcessorWarning}
  commentId: T:System.Collections.Generic.List{VDS.RDF.JsonLd.JsonLdProcessorWarning}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<JsonLdProcessorWarning>
  nameWithType: List<JsonLdProcessorWarning>
  fullName: System.Collections.Generic.List<VDS.RDF.JsonLd.JsonLdProcessorWarning>
  nameWithType.vb: List(Of JsonLdProcessorWarning)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.JsonLd.JsonLdProcessorWarning)
  name.vb: List(Of JsonLdProcessorWarning)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.JsonLd.JsonLdProcessorWarning
    name: JsonLdProcessorWarning
    nameWithType: JsonLdProcessorWarning
    fullName: VDS.RDF.JsonLd.JsonLdProcessorWarning
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.JsonLd.JsonLdProcessorWarning
    name: JsonLdProcessorWarning
    nameWithType: JsonLdProcessorWarning
    fullName: VDS.RDF.JsonLd.JsonLdProcessorWarning
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Compact*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdProcessor.Compact
  name: Compact
  nameWithType: JsonLdProcessor.Compact
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Compact
- uid: Newtonsoft.Json.Linq.JToken
  commentId: T:Newtonsoft.Json.Linq.JToken
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JToken
  nameWithType: JToken
  fullName: Newtonsoft.Json.Linq.JToken
- uid: VDS.RDF.JsonLd.JsonLdProcessorOptions
  commentId: T:VDS.RDF.JsonLd.JsonLdProcessorOptions
  parent: VDS.RDF.JsonLd
  name: JsonLdProcessorOptions
  nameWithType: JsonLdProcessorOptions
  fullName: VDS.RDF.JsonLd.JsonLdProcessorOptions
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Expand*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdProcessor.Expand
  name: Expand
  nameWithType: JsonLdProcessor.Expand
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Expand
- uid: Newtonsoft.Json.Linq.JArray
  commentId: T:Newtonsoft.Json.Linq.JArray
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JArray
  nameWithType: JArray
  fullName: Newtonsoft.Json.Linq.JArray
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Frame*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdProcessor.Frame
  name: Frame
  nameWithType: JsonLdProcessor.Frame
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Frame
- uid: VDS.RDF.JsonLd.JsonLdProcessor.Flatten*
  commentId: Overload:VDS.RDF.JsonLd.JsonLdProcessor.Flatten
  name: Flatten
  nameWithType: JsonLdProcessor.Flatten
  fullName: VDS.RDF.JsonLd.JsonLdProcessor.Flatten
shouldSkipMarkup: true
