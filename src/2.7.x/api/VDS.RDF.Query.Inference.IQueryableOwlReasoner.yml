### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Inference.IQueryableOwlReasoner
  commentId: T:VDS.RDF.Query.Inference.IQueryableOwlReasoner
  id: IQueryableOwlReasoner
  parent: VDS.RDF.Query.Inference
  children:
  - VDS.RDF.Query.Inference.IQueryableOwlReasoner.ExecuteQuery(System.String)
  langs:
  - csharp
  - vb
  name: IQueryableOwlReasoner
  nameWithType: IQueryableOwlReasoner
  fullName: VDS.RDF.Query.Inference.IQueryableOwlReasoner
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/IOwlReasoner.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IQueryableOwlReasoner
    path: Libraries/dotNetRDF/Query/Inference/IOwlReasoner.cs
    startLine: 129
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nInterface for OWL Reasoners which have access to their own SPARQL implementations.\n"
  example: []
  syntax:
    content: 'public interface IQueryableOwlReasoner : IOwlReasoner'
    content.vb: >-
      Public Interface IQueryableOwlReasoner
          Inherits IOwlReasoner
  inheritedMembers:
  - VDS.RDF.Query.Inference.IOwlReasoner.Add(VDS.RDF.IGraph)
  - VDS.RDF.Query.Inference.IOwlReasoner.Extract(VDS.RDF.IGraph,VDS.RDF.INode)
  - VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.String)
  - VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.Collections.Generic.IEnumerable{System.String})
  - VDS.RDF.Query.Inference.IOwlReasoner.Classify
  - VDS.RDF.Query.Inference.IOwlReasoner.Realize
  - VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent
  - VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent(VDS.RDF.IGraph)
  - VDS.RDF.Query.Inference.IOwlReasoner.Unsatisfiable
  extensionMethods:
  - VDS.RDF.Query.Inference.IQueryableOwlReasoner.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Inference.IQueryableOwlReasoner.ExecuteQuery(System.String)
  commentId: M:VDS.RDF.Query.Inference.IQueryableOwlReasoner.ExecuteQuery(System.String)
  id: ExecuteQuery(System.String)
  parent: VDS.RDF.Query.Inference.IQueryableOwlReasoner
  langs:
  - csharp
  - vb
  name: ExecuteQuery(String)
  nameWithType: IQueryableOwlReasoner.ExecuteQuery(String)
  fullName: VDS.RDF.Query.Inference.IQueryableOwlReasoner.ExecuteQuery(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/IOwlReasoner.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ExecuteQuery
    path: Libraries/dotNetRDF/Query/Inference/IOwlReasoner.cs
    startLine: 137
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nExecutes a SPARQL Query using the reasoners SPARQL implementation.\n"
  example: []
  syntax:
    content: object ExecuteQuery(string sparqlQuery)
    parameters:
    - id: sparqlQuery
      type: System.String
      description: SPARQL Query.
    return:
      type: System.Object
      description: ''
    content.vb: Function ExecuteQuery(sparqlQuery As String) As Object
  overload: VDS.RDF.Query.Inference.IQueryableOwlReasoner.ExecuteQuery*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: May be thrown if the Reasoner does not support such an operation.
references:
- uid: VDS.RDF.Query.Inference
  commentId: N:VDS.RDF.Query.Inference
  name: VDS.RDF.Query.Inference
  nameWithType: VDS.RDF.Query.Inference
  fullName: VDS.RDF.Query.Inference
- uid: VDS.RDF.Query.Inference.IOwlReasoner.Add(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Inference.IOwlReasoner.Add(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Inference.IOwlReasoner
  name: Add(IGraph)
  nameWithType: IOwlReasoner.Add(IGraph)
  fullName: VDS.RDF.Query.Inference.IOwlReasoner.Add(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.Add(VDS.RDF.IGraph)
    name: Add
    nameWithType: IOwlReasoner.Add
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.Add(VDS.RDF.IGraph)
    name: Add
    nameWithType: IOwlReasoner.Add
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.IOwlReasoner.Extract(VDS.RDF.IGraph,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Inference.IOwlReasoner.Extract(VDS.RDF.IGraph,VDS.RDF.INode)
  parent: VDS.RDF.Query.Inference.IOwlReasoner
  name: Extract(IGraph, INode)
  nameWithType: IOwlReasoner.Extract(IGraph, INode)
  fullName: VDS.RDF.Query.Inference.IOwlReasoner.Extract(VDS.RDF.IGraph, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.Extract(VDS.RDF.IGraph,VDS.RDF.INode)
    name: Extract
    nameWithType: IOwlReasoner.Extract
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.Extract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.Extract(VDS.RDF.IGraph,VDS.RDF.INode)
    name: Extract
    nameWithType: IOwlReasoner.Extract
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.Extract
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.String)
  commentId: M:VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.String)
  parent: VDS.RDF.Query.Inference.IOwlReasoner
  isExternal: true
  name: Extract(String)
  nameWithType: IOwlReasoner.Extract(String)
  fullName: VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.String)
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.String)
    name: Extract
    nameWithType: IOwlReasoner.Extract
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.Extract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.String)
    name: Extract
    nameWithType: IOwlReasoner.Extract
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.Extract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.Collections.Generic.IEnumerable{System.String})
  parent: VDS.RDF.Query.Inference.IOwlReasoner
  isExternal: true
  name: Extract(IEnumerable<String>)
  nameWithType: IOwlReasoner.Extract(IEnumerable<String>)
  fullName: VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.Collections.Generic.IEnumerable<System.String>)
  nameWithType.vb: IOwlReasoner.Extract(IEnumerable(Of String))
  fullName.vb: VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: Extract(IEnumerable(Of String))
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.Collections.Generic.IEnumerable{System.String})
    name: Extract
    nameWithType: IOwlReasoner.Extract
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.Extract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.Extract(System.Collections.Generic.IEnumerable{System.String})
    name: Extract
    nameWithType: IOwlReasoner.Extract
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.Extract
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.IOwlReasoner.Classify
  commentId: M:VDS.RDF.Query.Inference.IOwlReasoner.Classify
  parent: VDS.RDF.Query.Inference.IOwlReasoner
  name: Classify()
  nameWithType: IOwlReasoner.Classify()
  fullName: VDS.RDF.Query.Inference.IOwlReasoner.Classify()
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.Classify
    name: Classify
    nameWithType: IOwlReasoner.Classify
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.Classify
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.Classify
    name: Classify
    nameWithType: IOwlReasoner.Classify
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.Classify
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.IOwlReasoner.Realize
  commentId: M:VDS.RDF.Query.Inference.IOwlReasoner.Realize
  parent: VDS.RDF.Query.Inference.IOwlReasoner
  name: Realize()
  nameWithType: IOwlReasoner.Realize()
  fullName: VDS.RDF.Query.Inference.IOwlReasoner.Realize()
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.Realize
    name: Realize
    nameWithType: IOwlReasoner.Realize
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.Realize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.Realize
    name: Realize
    nameWithType: IOwlReasoner.Realize
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.Realize
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent
  commentId: M:VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent
  parent: VDS.RDF.Query.Inference.IOwlReasoner
  name: IsConsistent()
  nameWithType: IOwlReasoner.IsConsistent()
  fullName: VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent()
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent
    name: IsConsistent
    nameWithType: IOwlReasoner.IsConsistent
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent
    name: IsConsistent
    nameWithType: IOwlReasoner.IsConsistent
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Inference.IOwlReasoner
  name: IsConsistent(IGraph)
  nameWithType: IOwlReasoner.IsConsistent(IGraph)
  fullName: VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent(VDS.RDF.IGraph)
    name: IsConsistent
    nameWithType: IOwlReasoner.IsConsistent
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent(VDS.RDF.IGraph)
    name: IsConsistent
    nameWithType: IOwlReasoner.IsConsistent
    fullName: VDS.RDF.Query.Inference.IOwlReasoner.IsConsistent
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.IOwlReasoner.Unsatisfiable
  commentId: P:VDS.RDF.Query.Inference.IOwlReasoner.Unsatisfiable
  parent: VDS.RDF.Query.Inference.IOwlReasoner
  name: Unsatisfiable
  nameWithType: IOwlReasoner.Unsatisfiable
  fullName: VDS.RDF.Query.Inference.IOwlReasoner.Unsatisfiable
- uid: VDS.RDF.Query.Inference.IQueryableOwlReasoner.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IQueryableOwlReasoner>()
  nameWithType: Extensions.AsEnumerable<IQueryableOwlReasoner>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.IQueryableOwlReasoner>()
  nameWithType.vb: Extensions.AsEnumerable(Of IQueryableOwlReasoner)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.IQueryableOwlReasoner)()
  name.vb: AsEnumerable(Of IQueryableOwlReasoner)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IQueryableOwlReasoner>
    nameWithType: Extensions.AsEnumerable<IQueryableOwlReasoner>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Inference.IQueryableOwlReasoner>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IQueryableOwlReasoner)
    nameWithType: Extensions.AsEnumerable(Of IQueryableOwlReasoner)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Inference.IQueryableOwlReasoner)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Inference.IOwlReasoner
  commentId: T:VDS.RDF.Query.Inference.IOwlReasoner
  parent: VDS.RDF.Query.Inference
  name: IOwlReasoner
  nameWithType: IOwlReasoner
  fullName: VDS.RDF.Query.Inference.IOwlReasoner
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: VDS.RDF.Query.Inference.IQueryableOwlReasoner.ExecuteQuery*
  commentId: Overload:VDS.RDF.Query.Inference.IQueryableOwlReasoner.ExecuteQuery
  name: ExecuteQuery
  nameWithType: IQueryableOwlReasoner.ExecuteQuery
  fullName: VDS.RDF.Query.Inference.IQueryableOwlReasoner.ExecuteQuery
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
shouldSkipMarkup: true
