### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Algebra.FullTextQuery
  commentId: T:VDS.RDF.Query.Algebra.FullTextQuery
  id: FullTextQuery
  parent: VDS.RDF.Query.Algebra
  children:
  - VDS.RDF.Query.Algebra.FullTextQuery.#ctor(VDS.RDF.Query.FullText.Search.IFullTextSearchProvider,VDS.RDF.Query.Algebra.ISparqlAlgebra)
  - VDS.RDF.Query.Algebra.FullTextQuery.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Algebra.FullTextQuery.FixedVariables
  - VDS.RDF.Query.Algebra.FullTextQuery.FloatingVariables
  - VDS.RDF.Query.Algebra.FullTextQuery.InnerAlgebra
  - VDS.RDF.Query.Algebra.FullTextQuery.ToGraphPattern
  - VDS.RDF.Query.Algebra.FullTextQuery.ToQuery
  - VDS.RDF.Query.Algebra.FullTextQuery.ToString
  - VDS.RDF.Query.Algebra.FullTextQuery.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  - VDS.RDF.Query.Algebra.FullTextQuery.Variables
  langs:
  - csharp
  - vb
  name: FullTextQuery
  nameWithType: FullTextQuery
  fullName: VDS.RDF.Query.Algebra.FullTextQuery
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FullTextQuery
    path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
    startLine: 39
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.Algebra
  summary: "\nAlgebra Operator which provides full text query capabilities for a query.\n"
  remarks: "\nThe evaluation of this operator simply registers the search provider with the Evaluation Context such that any <xref href=\"VDS.RDF.Query.PropertyFunctions.FullTextMatchPropertyFunction\" data-throw-if-not-resolved=\"false\"></xref> instances are honoured.\n"
  example: []
  syntax:
    content: 'public class FullTextQuery : object, IUnaryOperator, ISparqlAlgebra'
    content.vb: >-
      Public Class FullTextQuery
          Inherits Object
          Implements IUnaryOperator, ISparqlAlgebra
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Query.Algebra.IUnaryOperator
  - VDS.RDF.Query.Algebra.ISparqlAlgebra
  extensionMethods:
  - VDS.RDF.Query.Algebra.FullTextQuery.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Algebra.FullTextQuery.#ctor(VDS.RDF.Query.FullText.Search.IFullTextSearchProvider,VDS.RDF.Query.Algebra.ISparqlAlgebra)
  commentId: M:VDS.RDF.Query.Algebra.FullTextQuery.#ctor(VDS.RDF.Query.FullText.Search.IFullTextSearchProvider,VDS.RDF.Query.Algebra.ISparqlAlgebra)
  id: '#ctor(VDS.RDF.Query.FullText.Search.IFullTextSearchProvider,VDS.RDF.Query.Algebra.ISparqlAlgebra)'
  parent: VDS.RDF.Query.Algebra.FullTextQuery
  langs:
  - csharp
  - vb
  name: FullTextQuery(IFullTextSearchProvider, ISparqlAlgebra)
  nameWithType: FullTextQuery.FullTextQuery(IFullTextSearchProvider, ISparqlAlgebra)
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.FullTextQuery(VDS.RDF.Query.FullText.Search.IFullTextSearchProvider, VDS.RDF.Query.Algebra.ISparqlAlgebra)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
    startLine: 49
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.Algebra
  summary: "\nCreates a new Full Text Query algebra.\n"
  example: []
  syntax:
    content: public FullTextQuery(IFullTextSearchProvider searchProvider, ISparqlAlgebra algebra)
    parameters:
    - id: searchProvider
      type: VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
      description: Search Provider.
    - id: algebra
      type: VDS.RDF.Query.Algebra.ISparqlAlgebra
      description: Inner Algebra.
    content.vb: Public Sub New(searchProvider As IFullTextSearchProvider, algebra As ISparqlAlgebra)
  overload: VDS.RDF.Query.Algebra.FullTextQuery.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Algebra.FullTextQuery.InnerAlgebra
  commentId: P:VDS.RDF.Query.Algebra.FullTextQuery.InnerAlgebra
  id: InnerAlgebra
  parent: VDS.RDF.Query.Algebra.FullTextQuery
  langs:
  - csharp
  - vb
  name: InnerAlgebra
  nameWithType: FullTextQuery.InnerAlgebra
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.InnerAlgebra
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: InnerAlgebra
    path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
    startLine: 58
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the Inner Algebra.\n"
  example: []
  syntax:
    content: public ISparqlAlgebra InnerAlgebra { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Algebra.ISparqlAlgebra
    content.vb: Public ReadOnly Property InnerAlgebra As ISparqlAlgebra
  overload: VDS.RDF.Query.Algebra.FullTextQuery.InnerAlgebra*
  implements:
  - VDS.RDF.Query.Algebra.IUnaryOperator.InnerAlgebra
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Algebra.FullTextQuery.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  commentId: M:VDS.RDF.Query.Algebra.FullTextQuery.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  id: Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  parent: VDS.RDF.Query.Algebra.FullTextQuery
  langs:
  - csharp
  - vb
  name: Transform(IAlgebraOptimiser)
  nameWithType: FullTextQuery.Transform(IAlgebraOptimiser)
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Transform
    path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
    startLine: 69
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.Algebra
  summary: "\nTransforms the algebra.\n"
  example: []
  syntax:
    content: public ISparqlAlgebra Transform(IAlgebraOptimiser optimiser)
    parameters:
    - id: optimiser
      type: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
      description: Optimiser.
    return:
      type: VDS.RDF.Query.Algebra.ISparqlAlgebra
      description: ''
    content.vb: Public Function Transform(optimiser As IAlgebraOptimiser) As ISparqlAlgebra
  overload: VDS.RDF.Query.Algebra.FullTextQuery.Transform*
  implements:
  - VDS.RDF.Query.Algebra.IUnaryOperator.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Algebra.FullTextQuery.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Algebra.FullTextQuery.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  id: Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Algebra.FullTextQuery
  langs:
  - csharp
  - vb
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: FullTextQuery.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Evaluate
    path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
    startLine: 79
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.Algebra
  summary: "\nEvaluates the algebra.\n"
  example: []
  syntax:
    content: public BaseMultiset Evaluate(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    return:
      type: VDS.RDF.Query.Algebra.BaseMultiset
      description: ''
    content.vb: Public Function Evaluate(context As SparqlEvaluationContext) As BaseMultiset
  overload: VDS.RDF.Query.Algebra.FullTextQuery.Evaluate*
  implements:
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Algebra.FullTextQuery.Variables
  commentId: P:VDS.RDF.Query.Algebra.FullTextQuery.Variables
  id: Variables
  parent: VDS.RDF.Query.Algebra.FullTextQuery
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: FullTextQuery.Variables
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.Variables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variables
    path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
    startLine: 88
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the variables used in the algebra.\n"
  example: []
  syntax:
    content: public IEnumerable<string> Variables { get; }
    parameters: []
    return:
      type: IEnumerable{System.String}
    content.vb: Public ReadOnly Property Variables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Algebra.FullTextQuery.Variables*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Algebra.FullTextQuery.FloatingVariables
  commentId: P:VDS.RDF.Query.Algebra.FullTextQuery.FloatingVariables
  id: FloatingVariables
  parent: VDS.RDF.Query.Algebra.FullTextQuery
  langs:
  - csharp
  - vb
  name: FloatingVariables
  nameWithType: FullTextQuery.FloatingVariables
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.FloatingVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FloatingVariables
    path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
    startLine: 99
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the enumeration of floating variables in the algebra i.e. variables that are not guaranteed to have a bound value.\n"
  example: []
  syntax:
    content: public IEnumerable<String> FloatingVariables { get; }
    parameters: []
    return:
      type: IEnumerable{String}
    content.vb: Public ReadOnly Property FloatingVariables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Algebra.FullTextQuery.FloatingVariables*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Algebra.FullTextQuery.FixedVariables
  commentId: P:VDS.RDF.Query.Algebra.FullTextQuery.FixedVariables
  id: FixedVariables
  parent: VDS.RDF.Query.Algebra.FullTextQuery
  langs:
  - csharp
  - vb
  name: FixedVariables
  nameWithType: FullTextQuery.FixedVariables
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.FixedVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: FixedVariables
    path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
    startLine: 104
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the enumeration of fixed variables in the algebra i.e. variables that are guaranteed to have a bound value.\n"
  example: []
  syntax:
    content: public IEnumerable<String> FixedVariables { get; }
    parameters: []
    return:
      type: IEnumerable{String}
    content.vb: Public ReadOnly Property FixedVariables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Algebra.FullTextQuery.FixedVariables*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Algebra.FullTextQuery.ToQuery
  commentId: M:VDS.RDF.Query.Algebra.FullTextQuery.ToQuery
  id: ToQuery
  parent: VDS.RDF.Query.Algebra.FullTextQuery
  langs:
  - csharp
  - vb
  name: ToQuery()
  nameWithType: FullTextQuery.ToQuery()
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.ToQuery()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToQuery
    path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
    startLine: 110
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.Algebra
  summary: "\nConverts the algebra into a query.\n"
  example: []
  syntax:
    content: public SparqlQuery ToQuery()
    return:
      type: VDS.RDF.Query.SparqlQuery
      description: ''
    content.vb: Public Function ToQuery As SparqlQuery
  overload: VDS.RDF.Query.Algebra.FullTextQuery.ToQuery*
  implements:
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Algebra.FullTextQuery.ToGraphPattern
  commentId: M:VDS.RDF.Query.Algebra.FullTextQuery.ToGraphPattern
  id: ToGraphPattern
  parent: VDS.RDF.Query.Algebra.FullTextQuery
  langs:
  - csharp
  - vb
  name: ToGraphPattern()
  nameWithType: FullTextQuery.ToGraphPattern()
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.ToGraphPattern()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToGraphPattern
    path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
    startLine: 119
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.Algebra
  summary: "\nConverts the algebra into a Graph Pattern.\n"
  example: []
  syntax:
    content: public GraphPattern ToGraphPattern()
    return:
      type: VDS.RDF.Query.Patterns.GraphPattern
      description: ''
    content.vb: Public Function ToGraphPattern As GraphPattern
  overload: VDS.RDF.Query.Algebra.FullTextQuery.ToGraphPattern*
  implements:
  - VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Algebra.FullTextQuery.ToString
  commentId: M:VDS.RDF.Query.Algebra.FullTextQuery.ToString
  id: ToString
  parent: VDS.RDF.Query.Algebra.FullTextQuery
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FullTextQuery.ToString()
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF.Query.FullText/Algebra/FullTextQuery.cs
    startLine: 128
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.Algebra
  summary: "\nGets the string representaiton of the algebra.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overload: VDS.RDF.Query.Algebra.FullTextQuery.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Query.PropertyFunctions.FullTextMatchPropertyFunction
  commentId: T:VDS.RDF.Query.PropertyFunctions.FullTextMatchPropertyFunction
  name: FullTextMatchPropertyFunction
  nameWithType: FullTextMatchPropertyFunction
  fullName: VDS.RDF.Query.PropertyFunctions.FullTextMatchPropertyFunction
- uid: VDS.RDF.Query.Algebra
  commentId: N:VDS.RDF.Query.Algebra
  name: VDS.RDF.Query.Algebra
  nameWithType: VDS.RDF.Query.Algebra
  fullName: VDS.RDF.Query.Algebra
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Algebra.IUnaryOperator
  commentId: T:VDS.RDF.Query.Algebra.IUnaryOperator
  parent: VDS.RDF.Query.Algebra
  name: IUnaryOperator
  nameWithType: IUnaryOperator
  fullName: VDS.RDF.Query.Algebra.IUnaryOperator
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra
  commentId: T:VDS.RDF.Query.Algebra.ISparqlAlgebra
  parent: VDS.RDF.Query.Algebra
  name: ISparqlAlgebra
  nameWithType: ISparqlAlgebra
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra
- uid: VDS.RDF.Query.Algebra.FullTextQuery.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<FullTextQuery>()
  nameWithType: Extensions.AsEnumerable<FullTextQuery>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.FullTextQuery>()
  nameWithType.vb: Extensions.AsEnumerable(Of FullTextQuery)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.FullTextQuery)()
  name.vb: AsEnumerable(Of FullTextQuery)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<FullTextQuery>
    nameWithType: Extensions.AsEnumerable<FullTextQuery>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Algebra.FullTextQuery>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of FullTextQuery)
    nameWithType: Extensions.AsEnumerable(Of FullTextQuery)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Algebra.FullTextQuery)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Algebra.FullTextQuery.#ctor*
  commentId: Overload:VDS.RDF.Query.Algebra.FullTextQuery.#ctor
  name: FullTextQuery
  nameWithType: FullTextQuery.FullTextQuery
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.FullTextQuery
- uid: VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
  commentId: T:VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
  parent: VDS.RDF.Query.FullText.Search
  name: IFullTextSearchProvider
  nameWithType: IFullTextSearchProvider
  fullName: VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
- uid: VDS.RDF.Query.FullText.Search
  commentId: N:VDS.RDF.Query.FullText.Search
  name: VDS.RDF.Query.FullText.Search
  nameWithType: VDS.RDF.Query.FullText.Search
  fullName: VDS.RDF.Query.FullText.Search
- uid: VDS.RDF.Query.Algebra.FullTextQuery.InnerAlgebra*
  commentId: Overload:VDS.RDF.Query.Algebra.FullTextQuery.InnerAlgebra
  name: InnerAlgebra
  nameWithType: FullTextQuery.InnerAlgebra
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.InnerAlgebra
- uid: VDS.RDF.Query.Algebra.IUnaryOperator.InnerAlgebra
  commentId: P:VDS.RDF.Query.Algebra.IUnaryOperator.InnerAlgebra
  parent: VDS.RDF.Query.Algebra.IUnaryOperator
  name: InnerAlgebra
  nameWithType: IUnaryOperator.InnerAlgebra
  fullName: VDS.RDF.Query.Algebra.IUnaryOperator.InnerAlgebra
- uid: VDS.RDF.Query.Algebra.FullTextQuery.Transform*
  commentId: Overload:VDS.RDF.Query.Algebra.FullTextQuery.Transform
  name: Transform
  nameWithType: FullTextQuery.Transform
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.Transform
- uid: VDS.RDF.Query.Algebra.IUnaryOperator.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  commentId: M:VDS.RDF.Query.Algebra.IUnaryOperator.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  parent: VDS.RDF.Query.Algebra.IUnaryOperator
  name: Transform(IAlgebraOptimiser)
  nameWithType: IUnaryOperator.Transform(IAlgebraOptimiser)
  fullName: VDS.RDF.Query.Algebra.IUnaryOperator.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.IUnaryOperator.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
    name: Transform
    nameWithType: IUnaryOperator.Transform
    fullName: VDS.RDF.Query.Algebra.IUnaryOperator.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
    name: IAlgebraOptimiser
    nameWithType: IAlgebraOptimiser
    fullName: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.IUnaryOperator.Transform(VDS.RDF.Query.Optimisation.IAlgebraOptimiser)
    name: Transform
    nameWithType: IUnaryOperator.Transform
    fullName: VDS.RDF.Query.Algebra.IUnaryOperator.Transform
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
    name: IAlgebraOptimiser
    nameWithType: IAlgebraOptimiser
    fullName: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.IAlgebraOptimiser
  parent: VDS.RDF.Query.Optimisation
  name: IAlgebraOptimiser
  nameWithType: IAlgebraOptimiser
  fullName: VDS.RDF.Query.Optimisation.IAlgebraOptimiser
- uid: VDS.RDF.Query.Optimisation
  commentId: N:VDS.RDF.Query.Optimisation
  name: VDS.RDF.Query.Optimisation
  nameWithType: VDS.RDF.Query.Optimisation
  fullName: VDS.RDF.Query.Optimisation
- uid: VDS.RDF.Query.Algebra.FullTextQuery.Evaluate*
  commentId: Overload:VDS.RDF.Query.Algebra.FullTextQuery.Evaluate
  name: Evaluate
  nameWithType: FullTextQuery.Evaluate
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.Evaluate
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ISparqlAlgebra.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ISparqlAlgebra.Evaluate
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
    name: Evaluate
    nameWithType: ISparqlAlgebra.Evaluate
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.Query.Algebra.BaseMultiset
  commentId: T:VDS.RDF.Query.Algebra.BaseMultiset
  parent: VDS.RDF.Query.Algebra
  name: BaseMultiset
  nameWithType: BaseMultiset
  fullName: VDS.RDF.Query.Algebra.BaseMultiset
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Algebra.FullTextQuery.Variables*
  commentId: Overload:VDS.RDF.Query.Algebra.FullTextQuery.Variables
  name: Variables
  nameWithType: FullTextQuery.Variables
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.Variables
- uid: IEnumerable{System.String}
  commentId: '!:IEnumerable{System.String}'
  definition: IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.FullTextQuery.FloatingVariables*
  commentId: Overload:VDS.RDF.Query.Algebra.FullTextQuery.FloatingVariables
  name: FloatingVariables
  nameWithType: FullTextQuery.FloatingVariables
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.FloatingVariables
- uid: IEnumerable{String}
  commentId: '!:IEnumerable{String}'
  definition: IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: IEnumerable<String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: String
    name: String
    nameWithType: String
    fullName: String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: String
    name: String
    nameWithType: String
    fullName: String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Algebra.FullTextQuery.FixedVariables*
  commentId: Overload:VDS.RDF.Query.Algebra.FullTextQuery.FixedVariables
  name: FixedVariables
  nameWithType: FullTextQuery.FixedVariables
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.FixedVariables
- uid: VDS.RDF.Query.Algebra.FullTextQuery.ToQuery*
  commentId: Overload:VDS.RDF.Query.Algebra.FullTextQuery.ToQuery
  name: ToQuery
  nameWithType: FullTextQuery.ToQuery
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.ToQuery
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: ToQuery()
  nameWithType: ISparqlAlgebra.ToQuery()
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
    name: ToQuery
    nameWithType: ISparqlAlgebra.ToQuery
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
    name: ToQuery
    nameWithType: ISparqlAlgebra.ToQuery
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToQuery
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.SparqlQuery
  commentId: T:VDS.RDF.Query.SparqlQuery
  parent: VDS.RDF.Query
  name: SparqlQuery
  nameWithType: SparqlQuery
  fullName: VDS.RDF.Query.SparqlQuery
- uid: VDS.RDF.Query.Algebra.FullTextQuery.ToGraphPattern*
  commentId: Overload:VDS.RDF.Query.Algebra.FullTextQuery.ToGraphPattern
  name: ToGraphPattern
  nameWithType: FullTextQuery.ToGraphPattern
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.ToGraphPattern
- uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  commentId: M:VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  parent: VDS.RDF.Query.Algebra.ISparqlAlgebra
  name: ToGraphPattern()
  nameWithType: ISparqlAlgebra.ToGraphPattern()
  fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern()
  spec.csharp:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
    name: ToGraphPattern
    nameWithType: ISparqlAlgebra.ToGraphPattern
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
    name: ToGraphPattern
    nameWithType: ISparqlAlgebra.ToGraphPattern
    fullName: VDS.RDF.Query.Algebra.ISparqlAlgebra.ToGraphPattern
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Patterns.GraphPattern
  commentId: T:VDS.RDF.Query.Patterns.GraphPattern
  parent: VDS.RDF.Query.Patterns
  name: GraphPattern
  nameWithType: GraphPattern
  fullName: VDS.RDF.Query.Patterns.GraphPattern
- uid: VDS.RDF.Query.Patterns
  commentId: N:VDS.RDF.Query.Patterns
  name: VDS.RDF.Query.Patterns
  nameWithType: VDS.RDF.Query.Patterns
  fullName: VDS.RDF.Query.Patterns
- uid: VDS.RDF.Query.Algebra.FullTextQuery.ToString*
  commentId: Overload:VDS.RDF.Query.Algebra.FullTextQuery.ToString
  name: ToString
  nameWithType: FullTextQuery.ToString
  fullName: VDS.RDF.Query.Algebra.FullTextQuery.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
shouldSkipMarkup: true
