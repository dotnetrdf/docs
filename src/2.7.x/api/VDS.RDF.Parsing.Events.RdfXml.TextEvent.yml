### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Events.RdfXml.TextEvent
  commentId: T:VDS.RDF.Parsing.Events.RdfXml.TextEvent
  id: TextEvent
  parent: VDS.RDF.Parsing.Events.RdfXml
  children:
  - VDS.RDF.Parsing.Events.RdfXml.TextEvent.#ctor(System.String,System.String)
  - VDS.RDF.Parsing.Events.RdfXml.TextEvent.#ctor(System.String,System.String,VDS.RDF.Parsing.PositionInfo)
  - VDS.RDF.Parsing.Events.RdfXml.TextEvent.ToString
  - VDS.RDF.Parsing.Events.RdfXml.TextEvent.Value
  langs:
  - csharp
  - vb
  name: TextEvent
  nameWithType: TextEvent
  fullName: VDS.RDF.Parsing.Events.RdfXml.TextEvent
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TextEvent
    path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 753
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nEvent for representing plain text content (XML Text Nodes).\n"
  example: []
  syntax:
    content: 'public class TextEvent : BaseRdfXmlEvent, IRdfXmlEvent, IEvent'
    content.vb: >-
      Public Class TextEvent
          Inherits BaseRdfXmlEvent
          Implements IRdfXmlEvent, IEvent
  inheritance:
  - System.Object
  - VDS.RDF.Parsing.Events.BaseEvent
  - VDS.RDF.Parsing.Events.BaseRdfXmlEvent
  implements:
  - VDS.RDF.Parsing.Events.IRdfXmlEvent
  - VDS.RDF.Parsing.Events.IEvent
  inheritedMembers:
  - VDS.RDF.Parsing.Events.BaseRdfXmlEvent.SourceXml
  - VDS.RDF.Parsing.Events.BaseEvent.EventType
  - VDS.RDF.Parsing.Events.BaseEvent.Position
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Parsing.Events.RdfXml.TextEvent.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.Events.RdfXml.TextEvent.#ctor(System.String,System.String,VDS.RDF.Parsing.PositionInfo)
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.TextEvent.#ctor(System.String,System.String,VDS.RDF.Parsing.PositionInfo)
  id: '#ctor(System.String,System.String,VDS.RDF.Parsing.PositionInfo)'
  parent: VDS.RDF.Parsing.Events.RdfXml.TextEvent
  langs:
  - csharp
  - vb
  name: TextEvent(String, String, PositionInfo)
  nameWithType: TextEvent.TextEvent(String, String, PositionInfo)
  fullName: VDS.RDF.Parsing.Events.RdfXml.TextEvent.TextEvent(System.String, System.String, VDS.RDF.Parsing.PositionInfo)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 763
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nCreates a new Text Node.\n"
  example: []
  syntax:
    content: public TextEvent(string value, string sourceXml, PositionInfo pos)
    parameters:
    - id: value
      type: System.String
      description: Textual Content of the XML Text Node.
    - id: sourceXml
      type: System.String
      description: Source XML of the Node.
    - id: pos
      type: VDS.RDF.Parsing.PositionInfo
      description: Position Info.
    content.vb: Public Sub New(value As String, sourceXml As String, pos As PositionInfo)
  overload: VDS.RDF.Parsing.Events.RdfXml.TextEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.TextEvent.#ctor(System.String,System.String)
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.TextEvent.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: VDS.RDF.Parsing.Events.RdfXml.TextEvent
  langs:
  - csharp
  - vb
  name: TextEvent(String, String)
  nameWithType: TextEvent.TextEvent(String, String)
  fullName: VDS.RDF.Parsing.Events.RdfXml.TextEvent.TextEvent(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 774
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nCreates a new Text Node.\n"
  example: []
  syntax:
    content: public TextEvent(string value, string sourceXml)
    parameters:
    - id: value
      type: System.String
      description: Textual Content of the XML Text Node.
    - id: sourceXml
      type: System.String
      description: Source XML of the Node.
    content.vb: Public Sub New(value As String, sourceXml As String)
  overload: VDS.RDF.Parsing.Events.RdfXml.TextEvent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Events.RdfXml.TextEvent.Value
  commentId: P:VDS.RDF.Parsing.Events.RdfXml.TextEvent.Value
  id: Value
  parent: VDS.RDF.Parsing.Events.RdfXml.TextEvent
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: TextEvent.Value
  fullName: VDS.RDF.Parsing.Events.RdfXml.TextEvent.Value
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Value
    path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 780
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets the Textual Content of the Event.\n"
  example: []
  syntax:
    content: public string Value { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Value As String
  overload: VDS.RDF.Parsing.Events.RdfXml.TextEvent.Value*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Events.RdfXml.TextEvent.ToString
  commentId: M:VDS.RDF.Parsing.Events.RdfXml.TextEvent.ToString
  id: ToString
  parent: VDS.RDF.Parsing.Events.RdfXml.TextEvent
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TextEvent.ToString()
  fullName: VDS.RDF.Parsing.Events.RdfXml.TextEvent.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: Libraries/dotNetRDF/Parsing/Events/RdfXml/XMLEvents.cs
    startLine: 792
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events.RdfXml
  summary: "\nGets the String representation of the Event.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: VDS.RDF.Parsing.Events.RdfXml.TextEvent.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Parsing.Events.RdfXml
  commentId: N:VDS.RDF.Parsing.Events.RdfXml
  name: VDS.RDF.Parsing.Events.RdfXml
  nameWithType: VDS.RDF.Parsing.Events.RdfXml
  fullName: VDS.RDF.Parsing.Events.RdfXml
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.Events.BaseEvent
  commentId: T:VDS.RDF.Parsing.Events.BaseEvent
  parent: VDS.RDF.Parsing.Events
  name: BaseEvent
  nameWithType: BaseEvent
  fullName: VDS.RDF.Parsing.Events.BaseEvent
- uid: VDS.RDF.Parsing.Events.BaseRdfXmlEvent
  commentId: T:VDS.RDF.Parsing.Events.BaseRdfXmlEvent
  parent: VDS.RDF.Parsing.Events
  name: BaseRdfXmlEvent
  nameWithType: BaseRdfXmlEvent
  fullName: VDS.RDF.Parsing.Events.BaseRdfXmlEvent
- uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
  commentId: T:VDS.RDF.Parsing.Events.IRdfXmlEvent
  parent: VDS.RDF.Parsing.Events
  name: IRdfXmlEvent
  nameWithType: IRdfXmlEvent
  fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
- uid: VDS.RDF.Parsing.Events.IEvent
  commentId: T:VDS.RDF.Parsing.Events.IEvent
  parent: VDS.RDF.Parsing.Events
  name: IEvent
  nameWithType: IEvent
  fullName: VDS.RDF.Parsing.Events.IEvent
- uid: VDS.RDF.Parsing.Events.BaseRdfXmlEvent.SourceXml
  commentId: P:VDS.RDF.Parsing.Events.BaseRdfXmlEvent.SourceXml
  parent: VDS.RDF.Parsing.Events.BaseRdfXmlEvent
  name: SourceXml
  nameWithType: BaseRdfXmlEvent.SourceXml
  fullName: VDS.RDF.Parsing.Events.BaseRdfXmlEvent.SourceXml
- uid: VDS.RDF.Parsing.Events.BaseEvent.EventType
  commentId: P:VDS.RDF.Parsing.Events.BaseEvent.EventType
  parent: VDS.RDF.Parsing.Events.BaseEvent
  name: EventType
  nameWithType: BaseEvent.EventType
  fullName: VDS.RDF.Parsing.Events.BaseEvent.EventType
- uid: VDS.RDF.Parsing.Events.BaseEvent.Position
  commentId: P:VDS.RDF.Parsing.Events.BaseEvent.Position
  parent: VDS.RDF.Parsing.Events.BaseEvent
  name: Position
  nameWithType: BaseEvent.Position
  fullName: VDS.RDF.Parsing.Events.BaseEvent.Position
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.RdfXml.TextEvent.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<TextEvent>()
  nameWithType: Extensions.AsEnumerable<TextEvent>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.RdfXml.TextEvent>()
  nameWithType.vb: Extensions.AsEnumerable(Of TextEvent)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.RdfXml.TextEvent)()
  name.vb: AsEnumerable(Of TextEvent)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<TextEvent>
    nameWithType: Extensions.AsEnumerable<TextEvent>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.RdfXml.TextEvent>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of TextEvent)
    nameWithType: Extensions.AsEnumerable(Of TextEvent)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.RdfXml.TextEvent)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.Events
  commentId: N:VDS.RDF.Parsing.Events
  name: VDS.RDF.Parsing.Events
  nameWithType: VDS.RDF.Parsing.Events
  fullName: VDS.RDF.Parsing.Events
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Events.RdfXml.TextEvent.#ctor*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.TextEvent.#ctor
  name: TextEvent
  nameWithType: TextEvent.TextEvent
  fullName: VDS.RDF.Parsing.Events.RdfXml.TextEvent.TextEvent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Parsing.PositionInfo
  commentId: T:VDS.RDF.Parsing.PositionInfo
  parent: VDS.RDF.Parsing
  name: PositionInfo
  nameWithType: PositionInfo
  fullName: VDS.RDF.Parsing.PositionInfo
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: VDS.RDF.Parsing.Events.RdfXml.TextEvent.Value*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.TextEvent.Value
  name: Value
  nameWithType: TextEvent.Value
  fullName: VDS.RDF.Parsing.Events.RdfXml.TextEvent.Value
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.RdfXml.TextEvent.ToString*
  commentId: Overload:VDS.RDF.Parsing.Events.RdfXml.TextEvent.ToString
  name: ToString
  nameWithType: TextEvent.ToString
  fullName: VDS.RDF.Parsing.Events.RdfXml.TextEvent.ToString
shouldSkipMarkup: true
