### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper
  commentId: T:VDS.RDF.Parsing.RdfXmlSpecsHelper
  id: RdfXmlSpecsHelper
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAbsoluteURI(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAmbigiousAttributeName(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm(System.Uri,System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INestedNamespaceMapper)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INestedNamespaceMapper)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsLiElement(VDS.RDF.Parsing.Events.RdfXml.ElementEvent,VDS.RDF.INamespaceMapper)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri(System.Uri,System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm(System.Uri,System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsParseTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INestedNamespaceMapper)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI(System.Uri,System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElement(VDS.RDF.Parsing.Events.RdfXml.ElementEvent,VDS.RDF.INamespaceMapper)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElementURI(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfID(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace(System.Uri)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfUriReference(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm(System.Uri,System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidBaseUri(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidQName(System.String)
  - VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidUriRefEncoding(System.String)
  langs:
  - csharp
  - vb
  name: RdfXmlSpecsHelper
  nameWithType: RdfXmlSpecsHelper
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RdfXmlSpecsHelper
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nStatic Helper class for providing Constants and Helper functions for use by RDF/XML parsers.\n"
  example: []
  syntax:
    content: public static class RdfXmlSpecsHelper
    content.vb: Public Module RdfXmlSpecsHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAbsoluteURI(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAbsoluteURI(System.String)
  id: IsAbsoluteURI(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsAbsoluteURI(String)
  nameWithType: RdfXmlSpecsHelper.IsAbsoluteURI(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAbsoluteURI(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAbsoluteURI
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a Uri Reference is an absolute Uri.\n"
  remarks: Implemented by seeing if the Uri Reference starts with a Uri scheme specifier.
  example: []
  syntax:
    content: public static bool IsAbsoluteURI(string uriref)
    parameters:
    - id: uriref
      type: System.String
      description: Uri Reference to Test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsAbsoluteURI(uriref As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAbsoluteURI*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm(System.String)
  id: IsCoreSyntaxTerm(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsCoreSyntaxTerm(String)
  nameWithType: RdfXmlSpecsHelper.IsCoreSyntaxTerm(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsCoreSyntaxTerm
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 96
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given QName is a Core Syntax Term.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use IsCoreSyntaxTerm(Uri, string) instead")]

      public static bool IsCoreSyntaxTerm(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName to Test.
    return:
      type: System.Boolean
      description: True if the QName is a Core Syntax Term.
    content.vb: >-
      <Obsolete("Use IsCoreSyntaxTerm(Uri, string) instead")>

      Public Shared Function IsCoreSyntaxTerm(qname As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IsCoreSyntaxTerm(Uri, string) instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm(System.Uri,System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm(System.Uri,System.String)
  id: IsCoreSyntaxTerm(System.Uri,System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsCoreSyntaxTerm(Uri, String)
  nameWithType: RdfXmlSpecsHelper.IsCoreSyntaxTerm(Uri, String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsCoreSyntaxTerm
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 109
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given expanded name is a Core Syntax Term.\n"
  example: []
  syntax:
    content: public static bool IsCoreSyntaxTerm(Uri nsUri, string localName)
    parameters:
    - id: nsUri
      type: System.Uri
      description: The namespace URI of the expanded name.
    - id: localName
      type: System.String
      description: The local name part of the expanded name.
    return:
      type: System.Boolean
      description: True if the expanded name is a Core Syntax Term.
    content.vb: Public Shared Function IsCoreSyntaxTerm(nsUri As Uri, localName As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm(System.String)
  id: IsSyntaxTerm(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsSyntaxTerm(String)
  nameWithType: RdfXmlSpecsHelper.IsSyntaxTerm(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSyntaxTerm
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 119
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given QName is a Syntax Term.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use IsSyntaxTerm(Uri, string) instead")]

      public static bool IsSyntaxTerm(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName to Test.
    return:
      type: System.Boolean
      description: True if the QName is a Syntax Term.
    content.vb: >-
      <Obsolete("Use IsSyntaxTerm(Uri, string) instead")>

      Public Shared Function IsSyntaxTerm(qname As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IsSyntaxTerm(Uri, string) instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm(System.Uri,System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm(System.Uri,System.String)
  id: IsSyntaxTerm(System.Uri,System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsSyntaxTerm(Uri, String)
  nameWithType: RdfXmlSpecsHelper.IsSyntaxTerm(Uri, String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsSyntaxTerm
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 132
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given expanded name is a Syntax Term.\n"
  example: []
  syntax:
    content: public static bool IsSyntaxTerm(Uri nsUri, string localName)
    parameters:
    - id: nsUri
      type: System.Uri
      description: The namespace URI of the expanded name.
    - id: localName
      type: System.String
      description: The local name part of the expanded name.
    return:
      type: System.Boolean
      description: True if the expanded name is a Syntax Term.
    content.vb: Public Shared Function IsSyntaxTerm(nsUri As Uri, localName As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm(System.String)
  id: IsOldTerm(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsOldTerm(String)
  nameWithType: RdfXmlSpecsHelper.IsOldTerm(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsOldTerm
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 142
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given QName is a Old Syntax Term.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use IsOldTerm(Uri, string) instead")]

      public static bool IsOldTerm(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName to Test.
    return:
      type: System.Boolean
      description: True if the QName is a Old Syntax Term.
    content.vb: >-
      <Obsolete("Use IsOldTerm(Uri, string) instead")>

      Public Shared Function IsOldTerm(qname As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IsOldTerm(Uri, string) instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm(System.Uri,System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm(System.Uri,System.String)
  id: IsOldTerm(System.Uri,System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsOldTerm(Uri, String)
  nameWithType: RdfXmlSpecsHelper.IsOldTerm(Uri, String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsOldTerm
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 155
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given expanded name is a Old Syntax Term.\n"
  example: []
  syntax:
    content: public static bool IsOldTerm(Uri nsUri, string localName)
    parameters:
    - id: nsUri
      type: System.Uri
      description: The namespace URI of the expanded name.
    - id: localName
      type: System.String
      description: The local name part of the expanded name.
    return:
      type: System.Boolean
      description: True if the expanded name is a Old Syntax Term.
    content.vb: Public Shared Function IsOldTerm(nsUri As Uri, localName As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri(System.String)
  id: IsNodeElementUri(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsNodeElementUri(String)
  nameWithType: RdfXmlSpecsHelper.IsNodeElementUri(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsNodeElementUri
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 166
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given QName is valid as a Node Element Uri.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use IsNodeElementUri(Uri, localName) instead")]

      public static bool IsNodeElementUri(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName to Test.
    return:
      type: System.Boolean
      description: True if the QName is valid.
    content.vb: >-
      <Obsolete("Use IsNodeElementUri(Uri, localName) instead")>

      Public Shared Function IsNodeElementUri(qname As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IsNodeElementUri(Uri, localName) instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri(System.Uri,System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri(System.Uri,System.String)
  id: IsNodeElementUri(System.Uri,System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsNodeElementUri(Uri, String)
  nameWithType: RdfXmlSpecsHelper.IsNodeElementUri(Uri, String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsNodeElementUri
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 187
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given expanded name is valid as a Node Element Uri.\n"
  example: []
  syntax:
    content: public static bool IsNodeElementUri(Uri nsUri, string localName)
    parameters:
    - id: nsUri
      type: System.Uri
      description: The namespace URI of the expanded name.
    - id: localName
      type: System.String
      description: The local name part of the expanded name.
    return:
      type: System.Boolean
      description: True if the expanded name is valid.
    content.vb: Public Shared Function IsNodeElementUri(nsUri As Uri, localName As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElementURI(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElementURI(System.String)
  id: IsPropertyElementURI(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPropertyElementURI(String)
  nameWithType: RdfXmlSpecsHelper.IsPropertyElementURI(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElementURI(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPropertyElementURI
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 208
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given QName is valid as a Property Element Uri.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use IsPropertyElement(ElementEvent, INamespaceMapper) instead")]

      public static bool IsPropertyElementURI(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName to Test.
    return:
      type: System.Boolean
      description: True if the QName is valid.
    content.vb: >-
      <Obsolete("Use IsPropertyElement(ElementEvent, INamespaceMapper) instead")>

      Public Shared Function IsPropertyElementURI(qname As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElementURI*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IsPropertyElement(ElementEvent, INamespaceMapper) instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElement(VDS.RDF.Parsing.Events.RdfXml.ElementEvent,VDS.RDF.INamespaceMapper)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElement(VDS.RDF.Parsing.Events.RdfXml.ElementEvent,VDS.RDF.INamespaceMapper)
  id: IsPropertyElement(VDS.RDF.Parsing.Events.RdfXml.ElementEvent,VDS.RDF.INamespaceMapper)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPropertyElement(ElementEvent, INamespaceMapper)
  nameWithType: RdfXmlSpecsHelper.IsPropertyElement(ElementEvent, INamespaceMapper)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElement(VDS.RDF.Parsing.Events.RdfXml.ElementEvent, VDS.RDF.INamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPropertyElement
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 229
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given element is a valid property element.\n"
  example: []
  syntax:
    content: public static bool IsPropertyElement(ElementEvent e, INamespaceMapper nsMapper)
    parameters:
    - id: e
      type: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
      description: The element to test.
    - id: nsMapper
      type: VDS.RDF.INamespaceMapper
      description: The namespace mappings to use when expanding element QName prefixes.
    return:
      type: System.Boolean
      description: True if the element is valid.
    content.vb: Public Shared Function IsPropertyElement(e As ElementEvent, nsMapper As INamespaceMapper) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElement*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsLiElement(VDS.RDF.Parsing.Events.RdfXml.ElementEvent,VDS.RDF.INamespaceMapper)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsLiElement(VDS.RDF.Parsing.Events.RdfXml.ElementEvent,VDS.RDF.INamespaceMapper)
  id: IsLiElement(VDS.RDF.Parsing.Events.RdfXml.ElementEvent,VDS.RDF.INamespaceMapper)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsLiElement(ElementEvent, INamespaceMapper)
  nameWithType: RdfXmlSpecsHelper.IsLiElement(ElementEvent, INamespaceMapper)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsLiElement(VDS.RDF.Parsing.Events.RdfXml.ElementEvent, VDS.RDF.INamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsLiElement
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 252
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a give element is an rdf:li element.\n"
  example: []
  syntax:
    content: public static bool IsLiElement(ElementEvent e, INamespaceMapper nsMapper)
    parameters:
    - id: e
      type: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
      description: The element to test.
    - id: nsMapper
      type: VDS.RDF.INamespaceMapper
      description: The namespace mappings to use when expanding element QName prefixes.
    return:
      type: System.Boolean
      description: True if the element is an rdf:li element, false otherwise.
    content.vb: Public Shared Function IsLiElement(e As ElementEvent, nsMapper As INamespaceMapper) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsLiElement*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI(System.String)
  id: IsPropertyAttributeURI(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPropertyAttributeURI(String)
  nameWithType: RdfXmlSpecsHelper.IsPropertyAttributeURI(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPropertyAttributeURI
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 264
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given QName is valid as a Property Attribute Uri.\n"
  example: []
  syntax:
    content: public static bool IsPropertyAttributeURI(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName to Test.
    return:
      type: System.Boolean
      description: True if the QName is valid.
    content.vb: Public Shared Function IsPropertyAttributeURI(qname As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI(System.Uri,System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI(System.Uri,System.String)
  id: IsPropertyAttributeURI(System.Uri,System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPropertyAttributeURI(Uri, String)
  nameWithType: RdfXmlSpecsHelper.IsPropertyAttributeURI(Uri, String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI(System.Uri, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPropertyAttributeURI
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 284
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given expanded name is valid as a Property Attribute Uri.\n"
  example: []
  syntax:
    content: public static bool IsPropertyAttributeURI(Uri nsUri, string localName)
    parameters:
    - id: nsUri
      type: System.Uri
      description: The namespace URI of the expanded name.
    - id: localName
      type: System.String
      description: The local name part of the expanded name.
    return:
      type: System.Boolean
      description: True if the expanded name is valid.
    content.vb: Public Shared Function IsPropertyAttributeURI(nsUri As Uri, localName As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAmbigiousAttributeName(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAmbigiousAttributeName(System.String)
  id: IsAmbigiousAttributeName(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsAmbigiousAttributeName(String)
  nameWithType: RdfXmlSpecsHelper.IsAmbigiousAttributeName(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAmbigiousAttributeName(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAmbigiousAttributeName
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 304
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given Local Name is potentially ambiguous.\n"
  remarks: This embodies Local Names which must have an rdf prefix.
  example: []
  syntax:
    content: public static bool IsAmbigiousAttributeName(string name)
    parameters:
    - id: name
      type: System.String
      description: Local Name to Test.
    return:
      type: System.Boolean
      description: True if the Local Name is ambiguous.
    content.vb: Public Shared Function IsAmbigiousAttributeName(name As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAmbigiousAttributeName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidUriRefEncoding(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidUriRefEncoding(System.String)
  id: IsValidUriRefEncoding(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsValidUriRefEncoding(String)
  nameWithType: RdfXmlSpecsHelper.IsValidUriRefEncoding(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidUriRefEncoding(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsValidUriRefEncoding
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 315
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given URIRef is encoded in Unicode Normal Form C.\n"
  example: []
  syntax:
    content: public static bool IsValidUriRefEncoding(string uriref)
    parameters:
    - id: uriref
      type: System.String
      description: URIRef to Test.
    return:
      type: System.Boolean
      description: True if the URIRef is encoded correctly.
    content.vb: Public Shared Function IsValidUriRefEncoding(uriref As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidUriRefEncoding*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidBaseUri(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidBaseUri(System.String)
  id: IsValidBaseUri(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsValidBaseUri(String)
  nameWithType: RdfXmlSpecsHelper.IsValidBaseUri(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidBaseUri(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsValidBaseUri
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 325
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given Base Uri can be used for relative Uri resolution.\n"
  example: []
  syntax:
    content: public static bool IsValidBaseUri(string baseUri)
    parameters:
    - id: baseUri
      type: System.String
      description: Base Uri to Test.
    return:
      type: System.Boolean
      description: True if the Base Uri can be used for relative Uri resolution.
    content.vb: Public Shared Function IsValidBaseUri(baseUri As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidBaseUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidQName(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidQName(System.String)
  id: IsValidQName(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsValidQName(String)
  nameWithType: RdfXmlSpecsHelper.IsValidQName(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidQName(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsValidQName
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 342
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nDetermines whether a QName is valid for use in RDF/XML.\n"
  example: []
  syntax:
    content: public static bool IsValidQName(string qname)
    parameters:
    - id: qname
      type: System.String
      description: QName.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsValidQName(qname As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidQName*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  id: IsIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIDAttribute(AttributeEvent)
  nameWithType: RdfXmlSpecsHelper.IsIDAttribute(AttributeEvent)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIDAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 374
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an rdf:ID attribute.\n"
  remarks: Does some validation on ID value but other validation occurs at other points in the Parsing.
  example: []
  syntax:
    content: >-
      [Obsolete("Use IsIDAttribute(AttributeEvent, INamespaceMapper) instead")]

      public static bool IsIDAttribute(AttributeEvent attr)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    return:
      type: System.Boolean
      description: True if is an rdf:ID attribute.
    content.vb: >-
      <Obsolete("Use IsIDAttribute(AttributeEvent, INamespaceMapper) instead")>

      Public Shared Function IsIDAttribute(attr As AttributeEvent) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IsIDAttribute(AttributeEvent, INamespaceMapper) instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INestedNamespaceMapper)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INestedNamespaceMapper)
  id: IsIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INestedNamespaceMapper)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsIDAttribute(AttributeEvent, INestedNamespaceMapper)
  nameWithType: RdfXmlSpecsHelper.IsIDAttribute(AttributeEvent, INestedNamespaceMapper)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent, VDS.RDF.INestedNamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsIDAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 405
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an rdf:ID attribute.\n"
  remarks: Does some validation on ID value but other validation occurs at other points in the Parsing.
  example: []
  syntax:
    content: public static bool IsIDAttribute(AttributeEvent attr, INestedNamespaceMapper nsMapper)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    - id: nsMapper
      type: VDS.RDF.INestedNamespaceMapper
      description: The namespace prefix mappings to use when expanding the namespace prefix of the attribute.
    return:
      type: System.Boolean
      description: True if is an rdf:ID attribute.
    content.vb: Public Shared Function IsIDAttribute(attr As AttributeEvent, nsMapper As INestedNamespaceMapper) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  id: IsTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsTypeAttribute(AttributeEvent, INamespaceMapper)
  nameWithType: RdfXmlSpecsHelper.IsTypeAttribute(AttributeEvent, INamespaceMapper)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent, VDS.RDF.INamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsTypeAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 436
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an rdf:type attribute.\n"
  example: []
  syntax:
    content: public static bool IsTypeAttribute(AttributeEvent attr, INamespaceMapper nsMapper)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: The attribute to check.
    - id: nsMapper
      type: VDS.RDF.INamespaceMapper
      description: The namespace prefix mappings to use to expand QNames.
    return:
      type: System.Boolean
      description: True if the attribute is and rdf:type attribute, false otherwise.
    content.vb: Public Shared Function IsTypeAttribute(attr As AttributeEvent, nsMapper As INamespaceMapper) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsTypeAttribute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  id: IsNodeIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsNodeIDAttribute(AttributeEvent)
  nameWithType: RdfXmlSpecsHelper.IsNodeIDAttribute(AttributeEvent)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsNodeIDAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 449
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an rdf:nodeID attribute.\n"
  remarks: Does some validation on ID value but other validation occurs at other points in the Parsing.
  example: []
  syntax:
    content: >-
      [Obsolete("Use IsNodeIDAttribute(AttributeEvent, INamespaceMapper) instead")]

      public static bool IsNodeIDAttribute(AttributeEvent attr)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    return:
      type: System.Boolean
      description: True if is an rdf:nodeID attribute.
    content.vb: >-
      <Obsolete("Use IsNodeIDAttribute(AttributeEvent, INamespaceMapper) instead")>

      Public Shared Function IsNodeIDAttribute(attr As AttributeEvent) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IsNodeIDAttribute(AttributeEvent, INamespaceMapper) instead
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  id: IsNodeIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsNodeIDAttribute(AttributeEvent, INamespaceMapper)
  nameWithType: RdfXmlSpecsHelper.IsNodeIDAttribute(AttributeEvent, INamespaceMapper)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent, VDS.RDF.INamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsNodeIDAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 480
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an rdf:nodeID attribute.\n"
  remarks: Does some validation on ID value but other validation occurs at other points in the Parsing.
  example: []
  syntax:
    content: public static bool IsNodeIDAttribute(AttributeEvent attr, INamespaceMapper nsMapper)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    - id: nsMapper
      type: VDS.RDF.INamespaceMapper
      description: The namespace prefix mappings to use when expanding the namespace prefix of the attribute.
    return:
      type: System.Boolean
      description: True if is an rdf:nodeID attribute.
    content.vb: Public Shared Function IsNodeIDAttribute(attr As AttributeEvent, nsMapper As INamespaceMapper) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  id: IsAboutAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsAboutAttribute(AttributeEvent)
  nameWithType: RdfXmlSpecsHelper.IsAboutAttribute(AttributeEvent)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAboutAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 508
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an rdf:about attribute.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use IsAboutAttribute(AttributeEvent, INamespaceMapper)")]

      public static bool IsAboutAttribute(AttributeEvent attr)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    return:
      type: System.Boolean
      description: True if is an rdf:about attribute.
    content.vb: >-
      <Obsolete("Use IsAboutAttribute(AttributeEvent, INamespaceMapper)")>

      Public Shared Function IsAboutAttribute(attr As AttributeEvent) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IsAboutAttribute(AttributeEvent, INamespaceMapper)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  id: IsAboutAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsAboutAttribute(AttributeEvent, INamespaceMapper)
  nameWithType: RdfXmlSpecsHelper.IsAboutAttribute(AttributeEvent, INamespaceMapper)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent, VDS.RDF.INamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAboutAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 529
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an rdf:about attribute.\n"
  example: []
  syntax:
    content: public static bool IsAboutAttribute(AttributeEvent attr, INamespaceMapper nsMapper)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    - id: nsMapper
      type: VDS.RDF.INamespaceMapper
      description: The namespace prefix mappings to use when expanding the namespace prefix of the attribute.
    return:
      type: System.Boolean
      description: True if is an rdf:about attribute.
    content.vb: Public Shared Function IsAboutAttribute(attr As AttributeEvent, nsMapper As INamespaceMapper) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsParseTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INestedNamespaceMapper)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsParseTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INestedNamespaceMapper)
  id: IsParseTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INestedNamespaceMapper)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsParseTypeAttribute(AttributeEvent, INestedNamespaceMapper)
  nameWithType: RdfXmlSpecsHelper.IsParseTypeAttribute(AttributeEvent, INestedNamespaceMapper)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsParseTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent, VDS.RDF.INestedNamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsParseTypeAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 551
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an rdf:parseType attribute.\n"
  example: []
  syntax:
    content: public static bool IsParseTypeAttribute(AttributeEvent attr, INestedNamespaceMapper nsMapper)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    - id: nsMapper
      type: VDS.RDF.INestedNamespaceMapper
      description: The namespace prefix mappings to use when expanding the namespace prefix of the attribute.
    return:
      type: System.Boolean
      description: True if is an rdf:parseType attribute.
    content.vb: Public Shared Function IsParseTypeAttribute(attr As AttributeEvent, nsMapper As INestedNamespaceMapper) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsParseTypeAttribute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  id: IsPropertyAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPropertyAttribute(AttributeEvent)
  nameWithType: RdfXmlSpecsHelper.IsPropertyAttribute(AttributeEvent)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPropertyAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 563
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an property attribute.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use IsPropertyAttribute(AttributeEvent, INamespaceMapper)")]

      public static bool IsPropertyAttribute(AttributeEvent attr)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    return:
      type: System.Boolean
      description: True if is an property attribute.
    content.vb: >-
      <Obsolete("Use IsPropertyAttribute(AttributeEvent, INamespaceMapper)")>

      Public Shared Function IsPropertyAttribute(attr As AttributeEvent) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IsPropertyAttribute(AttributeEvent, INamespaceMapper)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  id: IsPropertyAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsPropertyAttribute(AttributeEvent, INamespaceMapper)
  nameWithType: RdfXmlSpecsHelper.IsPropertyAttribute(AttributeEvent, INamespaceMapper)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent, VDS.RDF.INamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsPropertyAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 577
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an property attribute.\n"
  example: []
  syntax:
    content: public static bool IsPropertyAttribute(AttributeEvent attr, INamespaceMapper nsMapper)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    - id: nsMapper
      type: VDS.RDF.INamespaceMapper
      description: The namespace prefix mappings to use when expanding the namespace prefix of the attribute.
    return:
      type: System.Boolean
      description: True if is an property attribute.
    content.vb: Public Shared Function IsPropertyAttribute(attr As AttributeEvent, nsMapper As INamespaceMapper) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  id: IsResourceAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsResourceAttribute(AttributeEvent)
  nameWithType: RdfXmlSpecsHelper.IsResourceAttribute(AttributeEvent)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsResourceAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 590
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an rdf:resource attribute.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use IsResourceAttribute(AttributeEvent, INamespaceMapper)")]

      public static bool IsResourceAttribute(AttributeEvent attr)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    return:
      type: System.Boolean
      description: True if is an rdf:resource attribute.
    content.vb: >-
      <Obsolete("Use IsResourceAttribute(AttributeEvent, INamespaceMapper)")>

      Public Shared Function IsResourceAttribute(attr As AttributeEvent) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IsResourceAttribute(AttributeEvent, INamespaceMapper)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  id: IsResourceAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INamespaceMapper)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsResourceAttribute(AttributeEvent, INamespaceMapper)
  nameWithType: RdfXmlSpecsHelper.IsResourceAttribute(AttributeEvent, INamespaceMapper)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent, VDS.RDF.INamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsResourceAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 611
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an rdf:resource attribute.\n"
  example: []
  syntax:
    content: public static bool IsResourceAttribute(AttributeEvent attr, INamespaceMapper nsMapper)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    - id: nsMapper
      type: VDS.RDF.INamespaceMapper
      description: The namespace prefix mappings to use when expanding the namespace prefix of the attribute.
    return:
      type: System.Boolean
      description: True if is an rdf:resource attribute.
    content.vb: Public Shared Function IsResourceAttribute(attr As AttributeEvent, nsMapper As INamespaceMapper) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  id: IsDataTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsDataTypeAttribute(AttributeEvent)
  nameWithType: RdfXmlSpecsHelper.IsDataTypeAttribute(AttributeEvent)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsDataTypeAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 632
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an rdf:datatype attribute.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Use IsDataTypeAttribute(AttributeEvent, INestedNamespaceMapper) instead.")]

      public static bool IsDataTypeAttribute(AttributeEvent attr)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    return:
      type: System.Boolean
      description: True if is an rdf:datatype attribute.
    content.vb: >-
      <Obsolete("Use IsDataTypeAttribute(AttributeEvent, INestedNamespaceMapper) instead.")>

      Public Shared Function IsDataTypeAttribute(attr As AttributeEvent) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use IsDataTypeAttribute(AttributeEvent, INestedNamespaceMapper) instead.
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INestedNamespaceMapper)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INestedNamespaceMapper)
  id: IsDataTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent,VDS.RDF.INestedNamespaceMapper)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsDataTypeAttribute(AttributeEvent, INestedNamespaceMapper)
  nameWithType: RdfXmlSpecsHelper.IsDataTypeAttribute(AttributeEvent, INestedNamespaceMapper)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute(VDS.RDF.Parsing.Events.RdfXml.AttributeEvent, VDS.RDF.INestedNamespaceMapper)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsDataTypeAttribute
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 653
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether an attribute is an rdf:datatype attribute.\n"
  example: []
  syntax:
    content: public static bool IsDataTypeAttribute(AttributeEvent attr, INestedNamespaceMapper namespaceMapper)
    parameters:
    - id: attr
      type: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
      description: Attribute to Test.
    - id: namespaceMapper
      type: VDS.RDF.INestedNamespaceMapper
      description: The namespace prefix mappings to use when expanding the namespace prefix of the attribute.
    return:
      type: System.Boolean
      description: True if is an rdf:datatype attribute.
    content.vb: Public Shared Function IsDataTypeAttribute(attr As AttributeEvent, namespaceMapper As INestedNamespaceMapper) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfID(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfID(System.String)
  id: IsRdfID(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsRdfID(String)
  nameWithType: RdfXmlSpecsHelper.IsRdfID(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfID(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsRdfID
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 672
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nValidates that an ID is a valid NCName.\n"
  example: []
  syntax:
    content: public static bool IsRdfID(string value)
    parameters:
    - id: value
      type: System.String
      description: ID Value to Test.
    return:
      type: System.Boolean
      description: True if the ID is valid.
    content.vb: Public Shared Function IsRdfID(value As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfID*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfUriReference(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfUriReference(System.String)
  id: IsRdfUriReference(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsRdfUriReference(String)
  nameWithType: RdfXmlSpecsHelper.IsRdfUriReference(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfUriReference(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsRdfUriReference
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 687
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nValidates that a URIReference is valid.\n"
  remarks: "\nCurrently partially implemented, some invalid Uri References may be considered valid.\n"
  example: []
  syntax:
    content: public static bool IsRdfUriReference(string value)
    parameters:
    - id: value
      type: System.String
      description: URIReference to Test.
    return:
      type: System.Boolean
      description: True.
    content.vb: Public Shared Function IsRdfUriReference(value As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfUriReference*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace(System.Uri)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace(System.Uri)
  id: IsRdfNamespace(System.Uri)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsRdfNamespace(Uri)
  nameWithType: RdfXmlSpecsHelper.IsRdfNamespace(Uri)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsRdfNamespace
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 707
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nValidates that a URI matches the RDF/XML namespace URI.\n"
  example: []
  syntax:
    content: public static bool IsRdfNamespace(Uri nsUri)
    parameters:
    - id: nsUri
      type: System.Uri
      description: The namespace URI to be validated.
    return:
      type: System.Boolean
      description: True if the URI matches the RDF/XML namespace URI.
    content.vb: Public Shared Function IsRdfNamespace(nsUri As Uri) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace(System.String)
  commentId: M:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace(System.String)
  id: IsRdfNamespace(System.String)
  parent: VDS.RDF.Parsing.RdfXmlSpecsHelper
  langs:
  - csharp
  - vb
  name: IsRdfNamespace(String)
  nameWithType: RdfXmlSpecsHelper.IsRdfNamespace(String)
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsRdfNamespace
    path: Libraries/dotNetRDF/Parsing/RdfXmlSpecsHelper.cs
    startLine: 717
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nValidates that a URI matches the RDF/XML namespace URI.\n"
  example: []
  syntax:
    content: public static bool IsRdfNamespace(string nsUri)
    parameters:
    - id: nsUri
      type: System.String
      description: The namespace URI to be validated.
    return:
      type: System.Boolean
      description: True if the URI matches the RDF/XML namespace URI.
    content.vb: Public Shared Function IsRdfNamespace(nsUri As String) As Boolean
  overload: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAbsoluteURI*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAbsoluteURI
  name: IsAbsoluteURI
  nameWithType: RdfXmlSpecsHelper.IsAbsoluteURI
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAbsoluteURI
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm
  name: IsCoreSyntaxTerm
  nameWithType: RdfXmlSpecsHelper.IsCoreSyntaxTerm
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsCoreSyntaxTerm
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm
  name: IsSyntaxTerm
  nameWithType: RdfXmlSpecsHelper.IsSyntaxTerm
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsSyntaxTerm
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm
  name: IsOldTerm
  nameWithType: RdfXmlSpecsHelper.IsOldTerm
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsOldTerm
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri
  name: IsNodeElementUri
  nameWithType: RdfXmlSpecsHelper.IsNodeElementUri
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeElementUri
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElementURI*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElementURI
  name: IsPropertyElementURI
  nameWithType: RdfXmlSpecsHelper.IsPropertyElementURI
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElementURI
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElement*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElement
  name: IsPropertyElement
  nameWithType: RdfXmlSpecsHelper.IsPropertyElement
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyElement
- uid: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  commentId: T:VDS.RDF.Parsing.Events.RdfXml.ElementEvent
  parent: VDS.RDF.Parsing.Events.RdfXml
  name: ElementEvent
  nameWithType: ElementEvent
  fullName: VDS.RDF.Parsing.Events.RdfXml.ElementEvent
- uid: VDS.RDF.INamespaceMapper
  commentId: T:VDS.RDF.INamespaceMapper
  parent: VDS.RDF
  name: INamespaceMapper
  nameWithType: INamespaceMapper
  fullName: VDS.RDF.INamespaceMapper
- uid: VDS.RDF.Parsing.Events.RdfXml
  commentId: N:VDS.RDF.Parsing.Events.RdfXml
  name: VDS.RDF.Parsing.Events.RdfXml
  nameWithType: VDS.RDF.Parsing.Events.RdfXml
  fullName: VDS.RDF.Parsing.Events.RdfXml
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsLiElement*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsLiElement
  name: IsLiElement
  nameWithType: RdfXmlSpecsHelper.IsLiElement
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsLiElement
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI
  name: IsPropertyAttributeURI
  nameWithType: RdfXmlSpecsHelper.IsPropertyAttributeURI
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttributeURI
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAmbigiousAttributeName*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAmbigiousAttributeName
  name: IsAmbigiousAttributeName
  nameWithType: RdfXmlSpecsHelper.IsAmbigiousAttributeName
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAmbigiousAttributeName
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidUriRefEncoding*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidUriRefEncoding
  name: IsValidUriRefEncoding
  nameWithType: RdfXmlSpecsHelper.IsValidUriRefEncoding
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidUriRefEncoding
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidBaseUri*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidBaseUri
  name: IsValidBaseUri
  nameWithType: RdfXmlSpecsHelper.IsValidBaseUri
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidBaseUri
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidQName*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidQName
  name: IsValidQName
  nameWithType: RdfXmlSpecsHelper.IsValidQName
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsValidQName
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute
  name: IsIDAttribute
  nameWithType: RdfXmlSpecsHelper.IsIDAttribute
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsIDAttribute
- uid: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
  commentId: T:VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
  parent: VDS.RDF.Parsing.Events.RdfXml
  name: AttributeEvent
  nameWithType: AttributeEvent
  fullName: VDS.RDF.Parsing.Events.RdfXml.AttributeEvent
- uid: VDS.RDF.INestedNamespaceMapper
  commentId: T:VDS.RDF.INestedNamespaceMapper
  parent: VDS.RDF
  name: INestedNamespaceMapper
  nameWithType: INestedNamespaceMapper
  fullName: VDS.RDF.INestedNamespaceMapper
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsTypeAttribute*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsTypeAttribute
  name: IsTypeAttribute
  nameWithType: RdfXmlSpecsHelper.IsTypeAttribute
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsTypeAttribute
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute
  name: IsNodeIDAttribute
  nameWithType: RdfXmlSpecsHelper.IsNodeIDAttribute
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsNodeIDAttribute
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute
  name: IsAboutAttribute
  nameWithType: RdfXmlSpecsHelper.IsAboutAttribute
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsAboutAttribute
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsParseTypeAttribute*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsParseTypeAttribute
  name: IsParseTypeAttribute
  nameWithType: RdfXmlSpecsHelper.IsParseTypeAttribute
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsParseTypeAttribute
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute
  name: IsPropertyAttribute
  nameWithType: RdfXmlSpecsHelper.IsPropertyAttribute
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsPropertyAttribute
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute
  name: IsResourceAttribute
  nameWithType: RdfXmlSpecsHelper.IsResourceAttribute
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsResourceAttribute
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute
  name: IsDataTypeAttribute
  nameWithType: RdfXmlSpecsHelper.IsDataTypeAttribute
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsDataTypeAttribute
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfID*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfID
  name: IsRdfID
  nameWithType: RdfXmlSpecsHelper.IsRdfID
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfID
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfUriReference*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfUriReference
  name: IsRdfUriReference
  nameWithType: RdfXmlSpecsHelper.IsRdfUriReference
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfUriReference
- uid: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace*
  commentId: Overload:VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace
  name: IsRdfNamespace
  nameWithType: RdfXmlSpecsHelper.IsRdfNamespace
  fullName: VDS.RDF.Parsing.RdfXmlSpecsHelper.IsRdfNamespace
shouldSkipMarkup: true
