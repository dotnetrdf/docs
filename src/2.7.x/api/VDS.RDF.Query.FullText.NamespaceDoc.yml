### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.FullText.NamespaceDoc
  commentId: T:VDS.RDF.Query.FullText.NamespaceDoc
  id: NamespaceDoc
  parent: VDS.RDF.Query.FullText
  children: []
  langs:
  - csharp
  - vb
  name: NamespaceDoc
  nameWithType: NamespaceDoc
  fullName: VDS.RDF.Query.FullText.NamespaceDoc
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/NamespaceDoc.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NamespaceDoc
    path: Libraries/dotNetRDF.Query.FullText/NamespaceDoc.cs
    startLine: 61
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText
  summary: "\n<p>\nThis namespace provides Full Text Query capabilities that can be used with our Leviathan SPARQL Engine.  Currently only Lucene.Net based indexing is supported though the library is fully extensible so you can create your own indexing providers as desired.\n</p>\n<h3>Usage</h3>\n<p>\nTo use these features you simply need to add a <xref href=\"VDS.RDF.Query.Optimisation.FullTextOptimiser\" data-throw-if-not-resolved=\"false\"></xref> as an optimiser on your SPARQL Queries, this takes a <xref href=\"VDS.RDF.Query.FullText.Search.IFullTextSearchProvider\" data-throw-if-not-resolved=\"false\"></xref> instance which performs the actual full text querying.  Once this is done you then simply need to use the relevant property in your SPARQL queries e.g.\n</p>\n<pre>\nPREFIX pf: &lt;http://jena.hpl.hp.com/ARQ/property#>\nSELECT * WHERE { ?s pf:textMatch &quot;text&quot; }\n</pre>\n<p>\nThose who are familiar will note that this is the same syntax as used by <a href=\"http://jena.sourceforge.net/ARQ/lucene-arq.html\">LARQ</a> and all the syntactic variations from LARQ such as retrieving scores, applying thresholds and limits are also supported by our full text query.\n</p>\n<p>\nSearch Text can be a simple textual search term or it may be any valid query as supported by the underlying full text query provider:\n</p>\n<ul>\n<li>Lucene.Net - See the <a href=\"http://lucene.apache.org/java/2_9_2/queryparsersyntax.html\">Lucene 2.9.2 Query Syntax</a> documentation</li>\n</ul>\n<h4>Important</h4>\n<p>\nThe <strong>FullText</strong> namespace is provided by the plugin library. <strong>dotNetRDF.Query.FullText.dll</strong>\n</p>\n"
  example: []
  syntax:
    content: 'public class NamespaceDoc : object'
    content.vb: >-
      Public Class NamespaceDoc
          Inherits Object
  inheritance:
  - System.Object
  extensionMethods:
  - VDS.RDF.Query.FullText.NamespaceDoc.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
references:
- uid: VDS.RDF.Query.Optimisation.FullTextOptimiser
  commentId: T:VDS.RDF.Query.Optimisation.FullTextOptimiser
  name: FullTextOptimiser
  nameWithType: FullTextOptimiser
  fullName: VDS.RDF.Query.Optimisation.FullTextOptimiser
- uid: VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
  commentId: T:VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
  parent: VDS.RDF.Query.FullText.Search
  name: IFullTextSearchProvider
  nameWithType: IFullTextSearchProvider
  fullName: VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
- uid: VDS.RDF.Query.FullText
  commentId: N:VDS.RDF.Query.FullText
  name: VDS.RDF.Query.FullText
  nameWithType: VDS.RDF.Query.FullText
  fullName: VDS.RDF.Query.FullText
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.FullText.NamespaceDoc.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<NamespaceDoc>()
  nameWithType: Extensions.AsEnumerable<NamespaceDoc>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.FullText.NamespaceDoc>()
  nameWithType.vb: Extensions.AsEnumerable(Of NamespaceDoc)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.FullText.NamespaceDoc)()
  name.vb: AsEnumerable(Of NamespaceDoc)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<NamespaceDoc>
    nameWithType: Extensions.AsEnumerable<NamespaceDoc>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.FullText.NamespaceDoc>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of NamespaceDoc)
    nameWithType: Extensions.AsEnumerable(Of NamespaceDoc)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.FullText.NamespaceDoc)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search
  commentId: N:VDS.RDF.Query.FullText.Search
  name: VDS.RDF.Query.FullText.Search
  nameWithType: VDS.RDF.Query.FullText.Search
  fullName: VDS.RDF.Query.FullText.Search
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
shouldSkipMarkup: true
