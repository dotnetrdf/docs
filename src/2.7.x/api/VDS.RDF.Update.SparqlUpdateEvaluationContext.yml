### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext
  commentId: T:VDS.RDF.Update.SparqlUpdateEvaluationContext
  id: SparqlUpdateEvaluationContext
  parent: VDS.RDF.Update
  children:
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor(VDS.RDF.Query.Datasets.ISparqlDataset)
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor(VDS.RDF.Query.Datasets.ISparqlDataset,VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext})
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor(VDS.RDF.Update.SparqlUpdateCommandSet,VDS.RDF.Query.Datasets.ISparqlDataset)
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor(VDS.RDF.Update.SparqlUpdateCommandSet,VDS.RDF.Query.Datasets.ISparqlDataset,VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext})
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.CheckTimeout
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.Commands
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.Data
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.EndExecution
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.QueryProcessor
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.RemainingTimeout
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.StartExecution
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTime
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeout
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeTicks
  langs:
  - csharp
  - vb
  name: SparqlUpdateEvaluationContext
  nameWithType: SparqlUpdateEvaluationContext
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlUpdateEvaluationContext
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nEvaluation Context for SPARQL Updates evaluated by the libraries Leviathan SPARQL Engine.\n"
  example: []
  syntax:
    content: public class SparqlUpdateEvaluationContext
    content.vb: Public Class SparqlUpdateEvaluationContext
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Update.SparqlUpdateEvaluationContext.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor(VDS.RDF.Update.SparqlUpdateCommandSet,VDS.RDF.Query.Datasets.ISparqlDataset,VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext})
  commentId: M:VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor(VDS.RDF.Update.SparqlUpdateCommandSet,VDS.RDF.Query.Datasets.ISparqlDataset,VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext})
  id: '#ctor(VDS.RDF.Update.SparqlUpdateCommandSet,VDS.RDF.Query.Datasets.ISparqlDataset,VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext})'
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: SparqlUpdateEvaluationContext(SparqlUpdateCommandSet, ISparqlDataset, ISparqlQueryAlgebraProcessor<BaseMultiset, SparqlEvaluationContext>)
  nameWithType: SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext(SparqlUpdateCommandSet, ISparqlDataset, ISparqlQueryAlgebraProcessor<BaseMultiset, SparqlEvaluationContext>)
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext(VDS.RDF.Update.SparqlUpdateCommandSet, VDS.RDF.Query.Datasets.ISparqlDataset, VDS.RDF.Query.ISparqlQueryAlgebraProcessor<VDS.RDF.Query.Algebra.BaseMultiset, VDS.RDF.Query.SparqlEvaluationContext>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nCreates a new SPARQL Update Evaluation Context.\n"
  example: []
  syntax:
    content: public SparqlUpdateEvaluationContext(SparqlUpdateCommandSet commands, ISparqlDataset data, ISparqlQueryAlgebraProcessor<BaseMultiset, SparqlEvaluationContext> processor)
    parameters:
    - id: commands
      type: VDS.RDF.Update.SparqlUpdateCommandSet
      description: Command Set.
    - id: data
      type: VDS.RDF.Query.Datasets.ISparqlDataset
      description: SPARQL Dataset.
    - id: processor
      type: VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext}
      description: Query Processor for WHERE clauses.
    content.vb: Public Sub New(commands As SparqlUpdateCommandSet, data As ISparqlDataset, processor As ISparqlQueryAlgebraProcessor(Of BaseMultiset, SparqlEvaluationContext))
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor*
  nameWithType.vb: SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext(SparqlUpdateCommandSet, ISparqlDataset, ISparqlQueryAlgebraProcessor(Of BaseMultiset, SparqlEvaluationContext))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Update.SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext(VDS.RDF.Update.SparqlUpdateCommandSet, VDS.RDF.Query.Datasets.ISparqlDataset, VDS.RDF.Query.ISparqlQueryAlgebraProcessor(Of VDS.RDF.Query.Algebra.BaseMultiset, VDS.RDF.Query.SparqlEvaluationContext))
  name.vb: SparqlUpdateEvaluationContext(SparqlUpdateCommandSet, ISparqlDataset, ISparqlQueryAlgebraProcessor(Of BaseMultiset, SparqlEvaluationContext))
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor(VDS.RDF.Update.SparqlUpdateCommandSet,VDS.RDF.Query.Datasets.ISparqlDataset)
  commentId: M:VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor(VDS.RDF.Update.SparqlUpdateCommandSet,VDS.RDF.Query.Datasets.ISparqlDataset)
  id: '#ctor(VDS.RDF.Update.SparqlUpdateCommandSet,VDS.RDF.Query.Datasets.ISparqlDataset)'
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: SparqlUpdateEvaluationContext(SparqlUpdateCommandSet, ISparqlDataset)
  nameWithType: SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext(SparqlUpdateCommandSet, ISparqlDataset)
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext(VDS.RDF.Update.SparqlUpdateCommandSet, VDS.RDF.Query.Datasets.ISparqlDataset)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nCreates a new SPARQL Update Evaluation Context.\n"
  example: []
  syntax:
    content: public SparqlUpdateEvaluationContext(SparqlUpdateCommandSet commands, ISparqlDataset data)
    parameters:
    - id: commands
      type: VDS.RDF.Update.SparqlUpdateCommandSet
      description: Command Set.
    - id: data
      type: VDS.RDF.Query.Datasets.ISparqlDataset
      description: SPARQL Dataset.
    content.vb: Public Sub New(commands As SparqlUpdateCommandSet, data As ISparqlDataset)
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor(VDS.RDF.Query.Datasets.ISparqlDataset,VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext})
  commentId: M:VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor(VDS.RDF.Query.Datasets.ISparqlDataset,VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext})
  id: '#ctor(VDS.RDF.Query.Datasets.ISparqlDataset,VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext})'
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: SparqlUpdateEvaluationContext(ISparqlDataset, ISparqlQueryAlgebraProcessor<BaseMultiset, SparqlEvaluationContext>)
  nameWithType: SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext(ISparqlDataset, ISparqlQueryAlgebraProcessor<BaseMultiset, SparqlEvaluationContext>)
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext(VDS.RDF.Query.Datasets.ISparqlDataset, VDS.RDF.Query.ISparqlQueryAlgebraProcessor<VDS.RDF.Query.Algebra.BaseMultiset, VDS.RDF.Query.SparqlEvaluationContext>)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 72
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nCreates a new SPARQL Update Evaluation Context.\n"
  example: []
  syntax:
    content: public SparqlUpdateEvaluationContext(ISparqlDataset data, ISparqlQueryAlgebraProcessor<BaseMultiset, SparqlEvaluationContext> processor)
    parameters:
    - id: data
      type: VDS.RDF.Query.Datasets.ISparqlDataset
      description: SPARQL Dataset.
    - id: processor
      type: VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext}
      description: Query Processor for WHERE clauses.
    content.vb: Public Sub New(data As ISparqlDataset, processor As ISparqlQueryAlgebraProcessor(Of BaseMultiset, SparqlEvaluationContext))
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor*
  nameWithType.vb: SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext(ISparqlDataset, ISparqlQueryAlgebraProcessor(Of BaseMultiset, SparqlEvaluationContext))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Update.SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext(VDS.RDF.Query.Datasets.ISparqlDataset, VDS.RDF.Query.ISparqlQueryAlgebraProcessor(Of VDS.RDF.Query.Algebra.BaseMultiset, VDS.RDF.Query.SparqlEvaluationContext))
  name.vb: SparqlUpdateEvaluationContext(ISparqlDataset, ISparqlQueryAlgebraProcessor(Of BaseMultiset, SparqlEvaluationContext))
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor(VDS.RDF.Query.Datasets.ISparqlDataset)
  commentId: M:VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor(VDS.RDF.Query.Datasets.ISparqlDataset)
  id: '#ctor(VDS.RDF.Query.Datasets.ISparqlDataset)'
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: SparqlUpdateEvaluationContext(ISparqlDataset)
  nameWithType: SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext(ISparqlDataset)
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext(VDS.RDF.Query.Datasets.ISparqlDataset)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 82
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nCreates a new SPARQL Update Evaluation Context.\n"
  example: []
  syntax:
    content: public SparqlUpdateEvaluationContext(ISparqlDataset data)
    parameters:
    - id: data
      type: VDS.RDF.Query.Datasets.ISparqlDataset
      description: SPARQL Dataset.
    content.vb: Public Sub New(data As ISparqlDataset)
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.Commands
  commentId: P:VDS.RDF.Update.SparqlUpdateEvaluationContext.Commands
  id: Commands
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: Commands
  nameWithType: SparqlUpdateEvaluationContext.Commands
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.Commands
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Commands
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 90
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nGets the Command Set (if any) that this context pertains to.\n"
  example: []
  syntax:
    content: public SparqlUpdateCommandSet Commands { get; }
    parameters: []
    return:
      type: VDS.RDF.Update.SparqlUpdateCommandSet
    content.vb: Public ReadOnly Property Commands As SparqlUpdateCommandSet
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.Commands*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.Data
  commentId: P:VDS.RDF.Update.SparqlUpdateEvaluationContext.Data
  id: Data
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: SparqlUpdateEvaluationContext.Data
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.Data
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Data
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 101
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nDataset upon which the Updates are applied.\n"
  example: []
  syntax:
    content: public ISparqlDataset Data { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Datasets.ISparqlDataset
    content.vb: Public ReadOnly Property Data As ISparqlDataset
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.Data*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.QueryProcessor
  commentId: P:VDS.RDF.Update.SparqlUpdateEvaluationContext.QueryProcessor
  id: QueryProcessor
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: QueryProcessor
  nameWithType: SparqlUpdateEvaluationContext.QueryProcessor
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.QueryProcessor
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: QueryProcessor
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nGets the Query Processor used to process the WHERE clauses of DELETE or INSERT commands.\n"
  example: []
  syntax:
    content: public ISparqlQueryAlgebraProcessor<BaseMultiset, SparqlEvaluationContext> QueryProcessor { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext}
    content.vb: Public ReadOnly Property QueryProcessor As ISparqlQueryAlgebraProcessor(Of BaseMultiset, SparqlEvaluationContext)
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.QueryProcessor*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTime
  commentId: P:VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTime
  id: UpdateTime
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: UpdateTime
  nameWithType: SparqlUpdateEvaluationContext.UpdateTime
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTime
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UpdateTime
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 121
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nRetrieves the Time in milliseconds the update took to evaluate.\n"
  example: []
  syntax:
    content: public long UpdateTime { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property UpdateTime As Long
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeTicks
  commentId: P:VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeTicks
  id: UpdateTimeTicks
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: UpdateTimeTicks
  nameWithType: SparqlUpdateEvaluationContext.UpdateTimeTicks
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeTicks
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UpdateTimeTicks
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 132
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nRetrieves the Time in ticks the updates took to evaluate.\n"
  example: []
  syntax:
    content: public long UpdateTimeTicks { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property UpdateTimeTicks As Long
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeTicks*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.RemainingTimeout
  commentId: P:VDS.RDF.Update.SparqlUpdateEvaluationContext.RemainingTimeout
  id: RemainingTimeout
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: RemainingTimeout
  nameWithType: SparqlUpdateEvaluationContext.RemainingTimeout
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.RemainingTimeout
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RemainingTimeout
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 176
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nGets the Remaining Timeout i.e. the Timeout taking into account time already elapsed.\n"
  remarks: "\nIf there is no timeout then this is always zero, if there is a timeout this is always >= 1 since any operation that wants to respect the timeout must have a non-zero timeout to actually timeout properly.\n"
  example: []
  syntax:
    content: public long RemainingTimeout { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property RemainingTimeout As Long
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.RemainingTimeout*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeout
  commentId: P:VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeout
  id: UpdateTimeout
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: UpdateTimeout
  nameWithType: SparqlUpdateEvaluationContext.UpdateTimeout
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeout
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UpdateTimeout
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 207
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nGets the Update Timeout used for the Command Set.\n"
  remarks: "\n<p>\nThis is taken either from the <xref href=\"VDS.RDF.Update.SparqlUpdateCommandSet.Timeout\" data-throw-if-not-resolved=\"false\"></xref> property of the <xref href=\"VDS.RDF.Update.SparqlUpdateCommandSet\" data-throw-if-not-resolved=\"false\"></xref> to which this evaluation context pertains or from the global option <xref href=\"VDS.RDF.Options.UpdateExecutionTimeout\" data-throw-if-not-resolved=\"false\"></xref>.  To set the Timeout to be used set whichever of those is appropriate prior to evaluating the updates.  If there is a Command Set present then it&apos;s timeout takes precedence unless it is set to zero (no timeout) in which case the global timeout setting is applied.  You cannot set the Update Timeout to be higher than the global timeout unless the global timeout is set to zero (i.e. no global timeout).\n</p>\n"
  example: []
  syntax:
    content: public long UpdateTimeout { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public ReadOnly Property UpdateTimeout As Long
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeout*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.CheckTimeout
  commentId: M:VDS.RDF.Update.SparqlUpdateEvaluationContext.CheckTimeout
  id: CheckTimeout
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: CheckTimeout()
  nameWithType: SparqlUpdateEvaluationContext.CheckTimeout()
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.CheckTimeout()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CheckTimeout
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 219
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nChecks whether Execution should Time out.\n"
  example: []
  syntax:
    content: public void CheckTimeout()
    content.vb: Public Sub CheckTimeout
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.CheckTimeout*
  exceptions:
  - type: VDS.RDF.Update.SparqlUpdateTimeoutException
    commentId: T:VDS.RDF.Update.SparqlUpdateTimeoutException
    description: Thrown if the Update has exceeded the Execution Timeout.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.StartExecution
  commentId: M:VDS.RDF.Update.SparqlUpdateEvaluationContext.StartExecution
  id: StartExecution
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: StartExecution()
  nameWithType: SparqlUpdateEvaluationContext.StartExecution()
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.StartExecution()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: StartExecution
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 234
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nStarts the Execution Timer.\n"
  example: []
  syntax:
    content: public void StartExecution()
    content.vb: Public Sub StartExecution
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.StartExecution*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.EndExecution
  commentId: M:VDS.RDF.Update.SparqlUpdateEvaluationContext.EndExecution
  id: EndExecution
  parent: VDS.RDF.Update.SparqlUpdateEvaluationContext
  langs:
  - csharp
  - vb
  name: EndExecution()
  nameWithType: SparqlUpdateEvaluationContext.EndExecution()
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.EndExecution()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EndExecution
    path: Libraries/dotNetRDF/Update/SparqlUpdateEvaluationContext.cs
    startLine: 243
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Update
  summary: "\nEnds the Execution Timer.\n"
  example: []
  syntax:
    content: public void EndExecution()
    content.vb: Public Sub
  overload: VDS.RDF.Update.SparqlUpdateEvaluationContext.EndExecution*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Update
  commentId: N:VDS.RDF.Update
  name: VDS.RDF.Update
  nameWithType: VDS.RDF.Update
  fullName: VDS.RDF.Update
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlUpdateEvaluationContext>()
  nameWithType: Extensions.AsEnumerable<SparqlUpdateEvaluationContext>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Update.SparqlUpdateEvaluationContext>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlUpdateEvaluationContext)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Update.SparqlUpdateEvaluationContext)()
  name.vb: AsEnumerable(Of SparqlUpdateEvaluationContext)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlUpdateEvaluationContext>
    nameWithType: Extensions.AsEnumerable<SparqlUpdateEvaluationContext>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Update.SparqlUpdateEvaluationContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlUpdateEvaluationContext)
    nameWithType: Extensions.AsEnumerable(Of SparqlUpdateEvaluationContext)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Update.SparqlUpdateEvaluationContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor*
  commentId: Overload:VDS.RDF.Update.SparqlUpdateEvaluationContext.#ctor
  name: SparqlUpdateEvaluationContext
  nameWithType: SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.SparqlUpdateEvaluationContext
- uid: VDS.RDF.Update.SparqlUpdateCommandSet
  commentId: T:VDS.RDF.Update.SparqlUpdateCommandSet
  parent: VDS.RDF.Update
  name: SparqlUpdateCommandSet
  nameWithType: SparqlUpdateCommandSet
  fullName: VDS.RDF.Update.SparqlUpdateCommandSet
- uid: VDS.RDF.Query.Datasets.ISparqlDataset
  commentId: T:VDS.RDF.Query.Datasets.ISparqlDataset
  parent: VDS.RDF.Query.Datasets
  name: ISparqlDataset
  nameWithType: ISparqlDataset
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset
- uid: VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext}
  commentId: T:VDS.RDF.Query.ISparqlQueryAlgebraProcessor{VDS.RDF.Query.Algebra.BaseMultiset,VDS.RDF.Query.SparqlEvaluationContext}
  parent: VDS.RDF.Query
  definition: VDS.RDF.Query.ISparqlQueryAlgebraProcessor`2
  name: ISparqlQueryAlgebraProcessor<BaseMultiset, SparqlEvaluationContext>
  nameWithType: ISparqlQueryAlgebraProcessor<BaseMultiset, SparqlEvaluationContext>
  fullName: VDS.RDF.Query.ISparqlQueryAlgebraProcessor<VDS.RDF.Query.Algebra.BaseMultiset, VDS.RDF.Query.SparqlEvaluationContext>
  nameWithType.vb: ISparqlQueryAlgebraProcessor(Of BaseMultiset, SparqlEvaluationContext)
  fullName.vb: VDS.RDF.Query.ISparqlQueryAlgebraProcessor(Of VDS.RDF.Query.Algebra.BaseMultiset, VDS.RDF.Query.SparqlEvaluationContext)
  name.vb: ISparqlQueryAlgebraProcessor(Of BaseMultiset, SparqlEvaluationContext)
  spec.csharp:
  - uid: VDS.RDF.Query.ISparqlQueryAlgebraProcessor`2
    name: ISparqlQueryAlgebraProcessor
    nameWithType: ISparqlQueryAlgebraProcessor
    fullName: VDS.RDF.Query.ISparqlQueryAlgebraProcessor
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Algebra.BaseMultiset
    name: BaseMultiset
    nameWithType: BaseMultiset
    fullName: VDS.RDF.Query.Algebra.BaseMultiset
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Query.ISparqlQueryAlgebraProcessor`2
    name: ISparqlQueryAlgebraProcessor
    nameWithType: ISparqlQueryAlgebraProcessor
    fullName: VDS.RDF.Query.ISparqlQueryAlgebraProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Algebra.BaseMultiset
    name: BaseMultiset
    nameWithType: BaseMultiset
    fullName: VDS.RDF.Query.Algebra.BaseMultiset
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.SparqlEvaluationContext
    name: SparqlEvaluationContext
    nameWithType: SparqlEvaluationContext
    fullName: VDS.RDF.Query.SparqlEvaluationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets
  commentId: N:VDS.RDF.Query.Datasets
  name: VDS.RDF.Query.Datasets
  nameWithType: VDS.RDF.Query.Datasets
  fullName: VDS.RDF.Query.Datasets
- uid: VDS.RDF.Query.ISparqlQueryAlgebraProcessor`2
  commentId: T:VDS.RDF.Query.ISparqlQueryAlgebraProcessor`2
  name: ISparqlQueryAlgebraProcessor<TResult, TContext>
  nameWithType: ISparqlQueryAlgebraProcessor<TResult, TContext>
  fullName: VDS.RDF.Query.ISparqlQueryAlgebraProcessor<TResult, TContext>
  nameWithType.vb: ISparqlQueryAlgebraProcessor(Of TResult, TContext)
  fullName.vb: VDS.RDF.Query.ISparqlQueryAlgebraProcessor(Of TResult, TContext)
  name.vb: ISparqlQueryAlgebraProcessor(Of TResult, TContext)
  spec.csharp:
  - uid: VDS.RDF.Query.ISparqlQueryAlgebraProcessor`2
    name: ISparqlQueryAlgebraProcessor
    nameWithType: ISparqlQueryAlgebraProcessor
    fullName: VDS.RDF.Query.ISparqlQueryAlgebraProcessor
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Query.ISparqlQueryAlgebraProcessor`2
    name: ISparqlQueryAlgebraProcessor
    nameWithType: ISparqlQueryAlgebraProcessor
    fullName: VDS.RDF.Query.ISparqlQueryAlgebraProcessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.Commands*
  commentId: Overload:VDS.RDF.Update.SparqlUpdateEvaluationContext.Commands
  name: Commands
  nameWithType: SparqlUpdateEvaluationContext.Commands
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.Commands
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.Data*
  commentId: Overload:VDS.RDF.Update.SparqlUpdateEvaluationContext.Data
  name: Data
  nameWithType: SparqlUpdateEvaluationContext.Data
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.Data
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.QueryProcessor*
  commentId: Overload:VDS.RDF.Update.SparqlUpdateEvaluationContext.QueryProcessor
  name: QueryProcessor
  nameWithType: SparqlUpdateEvaluationContext.QueryProcessor
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.QueryProcessor
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTime*
  commentId: Overload:VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTime
  name: UpdateTime
  nameWithType: SparqlUpdateEvaluationContext.UpdateTime
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTime
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeTicks*
  commentId: Overload:VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeTicks
  name: UpdateTimeTicks
  nameWithType: SparqlUpdateEvaluationContext.UpdateTimeTicks
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeTicks
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.RemainingTimeout*
  commentId: Overload:VDS.RDF.Update.SparqlUpdateEvaluationContext.RemainingTimeout
  name: RemainingTimeout
  nameWithType: SparqlUpdateEvaluationContext.RemainingTimeout
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.RemainingTimeout
- uid: VDS.RDF.Update.SparqlUpdateCommandSet.Timeout
  commentId: P:VDS.RDF.Update.SparqlUpdateCommandSet.Timeout
  isExternal: true
- uid: VDS.RDF.Options.UpdateExecutionTimeout
  commentId: P:VDS.RDF.Options.UpdateExecutionTimeout
  isExternal: true
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeout*
  commentId: Overload:VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeout
  name: UpdateTimeout
  nameWithType: SparqlUpdateEvaluationContext.UpdateTimeout
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.UpdateTimeout
- uid: VDS.RDF.Update.SparqlUpdateTimeoutException
  commentId: T:VDS.RDF.Update.SparqlUpdateTimeoutException
  name: SparqlUpdateTimeoutException
  nameWithType: SparqlUpdateTimeoutException
  fullName: VDS.RDF.Update.SparqlUpdateTimeoutException
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.CheckTimeout*
  commentId: Overload:VDS.RDF.Update.SparqlUpdateEvaluationContext.CheckTimeout
  name: CheckTimeout
  nameWithType: SparqlUpdateEvaluationContext.CheckTimeout
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.CheckTimeout
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.StartExecution*
  commentId: Overload:VDS.RDF.Update.SparqlUpdateEvaluationContext.StartExecution
  name: StartExecution
  nameWithType: SparqlUpdateEvaluationContext.StartExecution
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.StartExecution
- uid: VDS.RDF.Update.SparqlUpdateEvaluationContext.EndExecution*
  commentId: Overload:VDS.RDF.Update.SparqlUpdateEvaluationContext.EndExecution
  name: EndExecution
  nameWithType: SparqlUpdateEvaluationContext.EndExecution
  fullName: VDS.RDF.Update.SparqlUpdateEvaluationContext.EndExecution
shouldSkipMarkup: true
