### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.NumericExpression
  id: NumericExpression
  parent: VDS.RDF.Query.Builder.Expressions
  children:
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  langs:
  - csharp
  - vb
  name: NumericExpression
  nameWithType: NumericExpression
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NumericExpression
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 184
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  summary: "\nRepresents a numeric expression of undefined type.\n"
  example: []
  syntax:
    content: 'public class NumericExpression : LiteralExpression'
    content.vb: >-
      Public Class NumericExpression
          Inherits LiteralExpression
  inheritance:
  - System.Object
  - VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression
  - VDS.RDF.Query.Builder.Expressions.RdfTermExpression
  - VDS.RDF.Query.Builder.Expressions.LiteralExpression
  inheritedMembers:
  - VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  - VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}.Expression
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Builder.Expressions.NumericExpression.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)
  id: '#ctor(VDS.RDF.Query.Expressions.ISparqlExpression)'
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: NumericExpression(ISparqlExpression)
  nameWithType: NumericExpression.NumericExpression(ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.NumericExpression(VDS.RDF.Query.Expressions.ISparqlExpression)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 189
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  summary: "\nWraps the <code data-dev-comment-type=\"paramref\" class=\"paramref\">expression</code> as a numeric expression.\n"
  example: []
  syntax:
    content: public NumericExpression(ISparqlExpression expression)
    parameters:
    - id: expression
      type: VDS.RDF.Query.Expressions.ISparqlExpression
    content.vb: Public Sub New(expression As ISparqlExpression)
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(NumericExpression, NumericExpression)
  nameWithType: NumericExpression.Multiply(NumericExpression, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 200
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(NumericExpression left, NumericExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As NumericExpression, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(VariableExpression, NumericExpression)
  nameWithType: NumericExpression.Multiply(VariableExpression, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 205
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(VariableExpression left, NumericExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As VariableExpression, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(NumericExpression, VariableExpression)
  nameWithType: NumericExpression.Multiply(NumericExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 210
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(NumericExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As NumericExpression, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(NumericExpression, Int32)
  nameWithType: NumericExpression.Multiply(NumericExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 215
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(NumericExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As NumericExpression, right As Integer) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(NumericExpression, Int64)
  nameWithType: NumericExpression.Multiply(NumericExpression, Int64)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Int64)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 220
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(NumericExpression left, long right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Int64
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As NumericExpression, right As Long) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(NumericExpression, Decimal)
  nameWithType: NumericExpression.Multiply(NumericExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 225
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(NumericExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As NumericExpression, right As Decimal) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(NumericExpression, Byte)
  nameWithType: NumericExpression.Multiply(NumericExpression, Byte)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Byte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 230
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(NumericExpression left, byte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Byte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As NumericExpression, right As Byte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(NumericExpression, SByte)
  nameWithType: NumericExpression.Multiply(NumericExpression, SByte)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.SByte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 235
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(NumericExpression left, sbyte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.SByte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As NumericExpression, right As SByte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(NumericExpression, Int16)
  nameWithType: NumericExpression.Multiply(NumericExpression, Int16)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Int16)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 240
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(NumericExpression left, short right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Int16
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As NumericExpression, right As Short) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(NumericExpression, Single)
  nameWithType: NumericExpression.Multiply(NumericExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 245
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(NumericExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As NumericExpression, right As Single) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  id: op_Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(NumericExpression, Double)
  nameWithType: NumericExpression.Multiply(NumericExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 250
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(NumericExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As NumericExpression, right As Double) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Multiply(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(Int32, NumericExpression)
  nameWithType: NumericExpression.Multiply(Int32, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(System.Int32, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 255
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(int left, NumericExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Integer, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Multiply(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(Decimal, NumericExpression)
  nameWithType: NumericExpression.Multiply(Decimal, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(System.Decimal, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 260
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(decimal left, NumericExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Decimal, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Multiply(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(Int64, NumericExpression)
  nameWithType: NumericExpression.Multiply(Int64, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(System.Int64, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 265
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(long left, NumericExpression right)
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Long, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Multiply(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(Byte, NumericExpression)
  nameWithType: NumericExpression.Multiply(Byte, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(System.Byte, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 270
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(byte left, NumericExpression right)
    parameters:
    - id: left
      type: System.Byte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Byte, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Multiply(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(SByte, NumericExpression)
  nameWithType: NumericExpression.Multiply(SByte, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(System.SByte, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 275
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(sbyte left, NumericExpression right)
    parameters:
    - id: left
      type: System.SByte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As SByte, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Multiply(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(Int16, NumericExpression)
  nameWithType: NumericExpression.Multiply(Int16, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(System.Int16, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 280
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(short left, NumericExpression right)
    parameters:
    - id: left
      type: System.Int16
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Short, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Multiply(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(Single, NumericExpression)
  nameWithType: NumericExpression.Multiply(Single, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(System.Single, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 285
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(float left, NumericExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Single, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Multiply(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Multiply(Double, NumericExpression)
  nameWithType: NumericExpression.Multiply(Double, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply(System.Double, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Multiply
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 290
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator *(double left, NumericExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator *(left As Double, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(NumericExpression, NumericExpression)
  nameWithType: NumericExpression.Division(NumericExpression, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(VDS.RDF.Query.Builder.Expressions.NumericExpression, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 300
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(NumericExpression left, NumericExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As NumericExpression, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(NumericExpression, VariableExpression)
  nameWithType: NumericExpression.Division(NumericExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(VDS.RDF.Query.Builder.Expressions.NumericExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 305
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(NumericExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As NumericExpression, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(VariableExpression, NumericExpression)
  nameWithType: NumericExpression.Division(VariableExpression, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 310
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(VariableExpression left, NumericExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As VariableExpression, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(NumericExpression, Int32)
  nameWithType: NumericExpression.Division(NumericExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 315
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(NumericExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As NumericExpression, right As Integer) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(NumericExpression, Int64)
  nameWithType: NumericExpression.Division(NumericExpression, Int64)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Int64)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 320
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(NumericExpression left, long right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Int64
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As NumericExpression, right As Long) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(NumericExpression, Decimal)
  nameWithType: NumericExpression.Division(NumericExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 325
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(NumericExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As NumericExpression, right As Decimal) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(NumericExpression, Byte)
  nameWithType: NumericExpression.Division(NumericExpression, Byte)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Byte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 330
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(NumericExpression left, byte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Byte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As NumericExpression, right As Byte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(NumericExpression, SByte)
  nameWithType: NumericExpression.Division(NumericExpression, SByte)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.SByte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 335
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(NumericExpression left, sbyte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.SByte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As NumericExpression, right As SByte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(NumericExpression, Int16)
  nameWithType: NumericExpression.Division(NumericExpression, Int16)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Int16)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 340
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(NumericExpression left, short right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Int16
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As NumericExpression, right As Short) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(NumericExpression, Single)
  nameWithType: NumericExpression.Division(NumericExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 345
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(NumericExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As NumericExpression, right As Single) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  id: op_Division(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(NumericExpression, Double)
  nameWithType: NumericExpression.Division(NumericExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 350
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(NumericExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As NumericExpression, right As Double) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Division(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(Int32, NumericExpression)
  nameWithType: NumericExpression.Division(Int32, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(System.Int32, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 355
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(int left, NumericExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Integer, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Division(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(Decimal, NumericExpression)
  nameWithType: NumericExpression.Division(Decimal, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(System.Decimal, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 360
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(decimal left, NumericExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Decimal, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Division(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(Int64, NumericExpression)
  nameWithType: NumericExpression.Division(Int64, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(System.Int64, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 365
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(long left, NumericExpression right)
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Long, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Division(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(Byte, NumericExpression)
  nameWithType: NumericExpression.Division(Byte, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(System.Byte, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 370
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(byte left, NumericExpression right)
    parameters:
    - id: left
      type: System.Byte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Byte, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Division(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(SByte, NumericExpression)
  nameWithType: NumericExpression.Division(SByte, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(System.SByte, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 375
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(sbyte left, NumericExpression right)
    parameters:
    - id: left
      type: System.SByte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As SByte, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Division(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(Int16, NumericExpression)
  nameWithType: NumericExpression.Division(Int16, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(System.Int16, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 380
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(short left, NumericExpression right)
    parameters:
    - id: left
      type: System.Int16
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Short, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Division(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(Single, NumericExpression)
  nameWithType: NumericExpression.Division(Single, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(System.Single, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 385
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(float left, NumericExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Single, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Division(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Division(Double, NumericExpression)
  nameWithType: NumericExpression.Division(Double, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division(System.Double, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Division
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 390
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator /(double left, NumericExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator /(left As Double, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(NumericExpression, NumericExpression)
  nameWithType: NumericExpression.Addition(NumericExpression, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 400
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(NumericExpression left, NumericExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As NumericExpression, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(VariableExpression, NumericExpression)
  nameWithType: NumericExpression.Addition(VariableExpression, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 405
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(VariableExpression left, NumericExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As VariableExpression, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(NumericExpression, VariableExpression)
  nameWithType: NumericExpression.Addition(NumericExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 410
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(NumericExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As NumericExpression, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(NumericExpression, Int32)
  nameWithType: NumericExpression.Addition(NumericExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 415
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(NumericExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As NumericExpression, right As Integer) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(NumericExpression, Int64)
  nameWithType: NumericExpression.Addition(NumericExpression, Int64)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Int64)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 420
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(NumericExpression left, long right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Int64
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As NumericExpression, right As Long) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(NumericExpression, Decimal)
  nameWithType: NumericExpression.Addition(NumericExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 425
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(NumericExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As NumericExpression, right As Decimal) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(NumericExpression, Byte)
  nameWithType: NumericExpression.Addition(NumericExpression, Byte)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Byte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 430
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(NumericExpression left, byte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Byte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As NumericExpression, right As Byte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(NumericExpression, SByte)
  nameWithType: NumericExpression.Addition(NumericExpression, SByte)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.SByte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 435
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(NumericExpression left, sbyte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.SByte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As NumericExpression, right As SByte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(NumericExpression, Int16)
  nameWithType: NumericExpression.Addition(NumericExpression, Int16)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Int16)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 440
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(NumericExpression left, short right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Int16
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As NumericExpression, right As Short) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(NumericExpression, Single)
  nameWithType: NumericExpression.Addition(NumericExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 445
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(NumericExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As NumericExpression, right As Single) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  id: op_Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(NumericExpression, Double)
  nameWithType: NumericExpression.Addition(NumericExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 450
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(NumericExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As NumericExpression, right As Double) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Addition(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(Int32, NumericExpression)
  nameWithType: NumericExpression.Addition(Int32, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(System.Int32, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 455
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(int left, NumericExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Integer, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Addition(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(Decimal, NumericExpression)
  nameWithType: NumericExpression.Addition(Decimal, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(System.Decimal, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 460
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(decimal left, NumericExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Decimal, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Addition(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(Int64, NumericExpression)
  nameWithType: NumericExpression.Addition(Int64, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(System.Int64, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 465
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(long left, NumericExpression right)
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Long, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Addition(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(Byte, NumericExpression)
  nameWithType: NumericExpression.Addition(Byte, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(System.Byte, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 470
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(byte left, NumericExpression right)
    parameters:
    - id: left
      type: System.Byte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Byte, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Addition(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(SByte, NumericExpression)
  nameWithType: NumericExpression.Addition(SByte, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(System.SByte, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 475
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(sbyte left, NumericExpression right)
    parameters:
    - id: left
      type: System.SByte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As SByte, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Addition(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(Int16, NumericExpression)
  nameWithType: NumericExpression.Addition(Int16, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(System.Int16, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 480
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(short left, NumericExpression right)
    parameters:
    - id: left
      type: System.Int16
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Short, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Addition(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(Single, NumericExpression)
  nameWithType: NumericExpression.Addition(Single, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(System.Single, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 485
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(float left, NumericExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Single, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Addition(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Addition(Double, NumericExpression)
  nameWithType: NumericExpression.Addition(Double, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition(System.Double, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Addition
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 490
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator +(double left, NumericExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator +(left As Double, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(NumericExpression, NumericExpression)
  nameWithType: NumericExpression.Subtraction(NumericExpression, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 500
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(NumericExpression left, NumericExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As NumericExpression, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(VariableExpression, NumericExpression)
  nameWithType: NumericExpression.Subtraction(VariableExpression, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.VariableExpression, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 505
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(VariableExpression left, NumericExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As VariableExpression, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.VariableExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(NumericExpression, VariableExpression)
  nameWithType: NumericExpression.Subtraction(NumericExpression, VariableExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression, VDS.RDF.Query.Builder.Expressions.VariableExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 510
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(NumericExpression left, VariableExpression right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.VariableExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As NumericExpression, right As VariableExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int32)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(NumericExpression, Int32)
  nameWithType: NumericExpression.Subtraction(NumericExpression, Int32)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Int32)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 515
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(NumericExpression left, int right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Int32
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As NumericExpression, right As Integer) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int64)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(NumericExpression, Int64)
  nameWithType: NumericExpression.Subtraction(NumericExpression, Int64)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Int64)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 520
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(NumericExpression left, long right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Int64
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As NumericExpression, right As Long) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Decimal)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(NumericExpression, Decimal)
  nameWithType: NumericExpression.Subtraction(NumericExpression, Decimal)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Decimal)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 525
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(NumericExpression left, decimal right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Decimal
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As NumericExpression, right As Decimal) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Byte)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(NumericExpression, Byte)
  nameWithType: NumericExpression.Subtraction(NumericExpression, Byte)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Byte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 530
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(NumericExpression left, byte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Byte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As NumericExpression, right As Byte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.SByte)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(NumericExpression, SByte)
  nameWithType: NumericExpression.Subtraction(NumericExpression, SByte)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.SByte)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 535
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(NumericExpression left, sbyte right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.SByte
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As NumericExpression, right As SByte) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Int16)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(NumericExpression, Int16)
  nameWithType: NumericExpression.Subtraction(NumericExpression, Int16)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Int16)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 540
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(NumericExpression left, short right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Int16
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As NumericExpression, right As Short) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Single)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(NumericExpression, Single)
  nameWithType: NumericExpression.Subtraction(NumericExpression, Single)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Single)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 545
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(NumericExpression left, float right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Single
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As NumericExpression, right As Single) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  id: op_Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression,System.Double)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(NumericExpression, Double)
  nameWithType: NumericExpression.Subtraction(NumericExpression, Double)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(VDS.RDF.Query.Builder.Expressions.NumericExpression, System.Double)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 550
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(NumericExpression left, double right)
    parameters:
    - id: left
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: right
      type: System.Double
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As NumericExpression, right As Double) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Subtraction(System.Int32,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Int32, NumericExpression)
  nameWithType: NumericExpression.Subtraction(Int32, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(System.Int32, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 555
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(int left, NumericExpression right)
    parameters:
    - id: left
      type: System.Int32
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Integer, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Subtraction(System.Decimal,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Decimal, NumericExpression)
  nameWithType: NumericExpression.Subtraction(Decimal, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(System.Decimal, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 560
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(decimal left, NumericExpression right)
    parameters:
    - id: left
      type: System.Decimal
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Decimal, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Subtraction(System.Int64,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Int64, NumericExpression)
  nameWithType: NumericExpression.Subtraction(Int64, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(System.Int64, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 565
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(long left, NumericExpression right)
    parameters:
    - id: left
      type: System.Int64
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Long, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Subtraction(System.Byte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Byte, NumericExpression)
  nameWithType: NumericExpression.Subtraction(Byte, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(System.Byte, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 570
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(byte left, NumericExpression right)
    parameters:
    - id: left
      type: System.Byte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Byte, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Subtraction(System.SByte,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(SByte, NumericExpression)
  nameWithType: NumericExpression.Subtraction(SByte, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(System.SByte, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 575
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(sbyte left, NumericExpression right)
    parameters:
    - id: left
      type: System.SByte
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As SByte, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Subtraction(System.Int16,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Int16, NumericExpression)
  nameWithType: NumericExpression.Subtraction(Int16, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(System.Int16, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 580
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(short left, NumericExpression right)
    parameters:
    - id: left
      type: System.Int16
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Short, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Subtraction(System.Single,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Single, NumericExpression)
  nameWithType: NumericExpression.Subtraction(Single, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(System.Single, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 585
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(float left, NumericExpression right)
    parameters:
    - id: left
      type: System.Single
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Single, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_Subtraction(System.Double,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: Subtraction(Double, NumericExpression)
  nameWithType: NumericExpression.Subtraction(Double, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction(System.Double, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_Subtraction
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 590
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static NumericExpression operator -(double left, NumericExpression right)
    parameters:
    - id: left
      type: System.Double
    - id: right
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    content.vb: Public Shared Operator -(left As Double, right As NumericExpression) As NumericExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_GreaterThan(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_GreaterThan(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: GreaterThan(NumericExpression, NumericExpression)
  nameWithType: NumericExpression.GreaterThan(NumericExpression, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.GreaterThan(VDS.RDF.Query.Builder.Expressions.NumericExpression, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 595
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator>(NumericExpression leftExpression, NumericExpression rightExpression)
    parameters:
    - id: leftExpression
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: rightExpression
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator>(leftExpression As NumericExpression, rightExpression As NumericExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_GreaterThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_LessThan(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_LessThan(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: LessThan(NumericExpression, NumericExpression)
  nameWithType: NumericExpression.LessThan(NumericExpression, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.LessThan(VDS.RDF.Query.Builder.Expressions.NumericExpression, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 600
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <(NumericExpression leftExpression, NumericExpression rightExpression)
    parameters:
    - id: leftExpression
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: rightExpression
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <(leftExpression As NumericExpression, rightExpression As NumericExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_LessThan*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: GreaterThanOrEqual(NumericExpression, NumericExpression)
  nameWithType: NumericExpression.GreaterThanOrEqual(NumericExpression, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.GreaterThanOrEqual(VDS.RDF.Query.Builder.Expressions.NumericExpression, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_GreaterThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 605
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator >=(NumericExpression leftExpression, NumericExpression rightExpression)
    parameters:
    - id: leftExpression
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: rightExpression
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator >=(leftExpression As NumericExpression, rightExpression As NumericExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_GreaterThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  id: op_LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.NumericExpression,VDS.RDF.Query.Builder.Expressions.NumericExpression)
  parent: VDS.RDF.Query.Builder.Expressions.NumericExpression
  langs:
  - csharp
  - vb
  name: LessThanOrEqual(NumericExpression, NumericExpression)
  nameWithType: NumericExpression.LessThanOrEqual(NumericExpression, NumericExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.LessThanOrEqual(VDS.RDF.Query.Builder.Expressions.NumericExpression, VDS.RDF.Query.Builder.Expressions.NumericExpression)
  type: Operator
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: op_LessThanOrEqual
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Builder/Expressions/NumericExpression.cs
    startLine: 610
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Builder.Expressions
  syntax:
    content: public static BooleanExpression operator <=(NumericExpression leftExpression, NumericExpression rightExpression)
    parameters:
    - id: leftExpression
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    - id: rightExpression
      type: VDS.RDF.Query.Builder.Expressions.NumericExpression
    return:
      type: VDS.RDF.Query.Builder.Expressions.BooleanExpression
    content.vb: Public Shared Operator <=(leftExpression As NumericExpression, rightExpression As NumericExpression) As BooleanExpression
  overload: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_LessThanOrEqual*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.Query.Builder.Expressions
  commentId: N:VDS.RDF.Query.Builder.Expressions
  name: VDS.RDF.Query.Builder.Expressions
  nameWithType: VDS.RDF.Query.Builder.Expressions
  fullName: VDS.RDF.Query.Builder.Expressions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}
  commentId: T:VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}
  parent: VDS.RDF.Query.Builder.Expressions
  definition: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
  name: PrimaryExpression<ISparqlExpression>
  nameWithType: PrimaryExpression<ISparqlExpression>
  fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression<VDS.RDF.Query.Expressions.ISparqlExpression>
  nameWithType.vb: PrimaryExpression(Of ISparqlExpression)
  fullName.vb: VDS.RDF.Query.Builder.Expressions.PrimaryExpression(Of VDS.RDF.Query.Expressions.ISparqlExpression)
  name.vb: PrimaryExpression(Of ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
    name: PrimaryExpression
    nameWithType: PrimaryExpression
    fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
    name: PrimaryExpression
    nameWithType: PrimaryExpression
    fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.SparqlExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: SparqlExpression
  nameWithType: SparqlExpression
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression
- uid: VDS.RDF.Query.Builder.Expressions.RdfTermExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.RdfTermExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: RdfTermExpression
  nameWithType: RdfTermExpression
  fullName: VDS.RDF.Query.Builder.Expressions.RdfTermExpression
- uid: VDS.RDF.Query.Builder.Expressions.LiteralExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.LiteralExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: LiteralExpression
  nameWithType: LiteralExpression
  fullName: VDS.RDF.Query.Builder.Expressions.LiteralExpression
- uid: VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
  commentId: M:VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
  parent: VDS.RDF.Query.Builder.Expressions.LiteralExpression
  name: ToSimpleLiteral()
  nameWithType: LiteralExpression.ToSimpleLiteral()
  fullName: VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral()
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
    name: ToSimpleLiteral
    nameWithType: LiteralExpression.ToSimpleLiteral
    fullName: VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
    name: ToSimpleLiteral
    nameWithType: LiteralExpression.ToSimpleLiteral
    fullName: VDS.RDF.Query.Builder.Expressions.LiteralExpression.ToSimpleLiteral
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: In(SparqlExpression[])
  nameWithType: SparqlExpression.In(SparqlExpression[])
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
  nameWithType.vb: SparqlExpression.In(SparqlExpression())
  fullName.vb: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression())
  name.vb: In(SparqlExpression())
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
    name: In
    nameWithType: SparqlExpression.In
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression
    name: SparqlExpression
    nameWithType: SparqlExpression
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In(VDS.RDF.Query.Builder.Expressions.SparqlExpression[])
    name: In
    nameWithType: SparqlExpression.In
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.In
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression
    name: SparqlExpression
    nameWithType: SparqlExpression
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: Gt(ISparqlExpression, ISparqlExpression)
  nameWithType: SparqlExpression.Gt(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Gt
    nameWithType: SparqlExpression.Gt
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Gt
    nameWithType: SparqlExpression.Gt
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Gt
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: Lt(ISparqlExpression, ISparqlExpression)
  nameWithType: SparqlExpression.Lt(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Lt
    nameWithType: SparqlExpression.Lt
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Lt
    nameWithType: SparqlExpression.Lt
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Lt
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: Ge(ISparqlExpression, ISparqlExpression)
  nameWithType: SparqlExpression.Ge(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Ge
    nameWithType: SparqlExpression.Ge
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Ge
    nameWithType: SparqlExpression.Ge
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Ge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  commentId: M:VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
  parent: VDS.RDF.Query.Builder.Expressions.SparqlExpression
  name: Le(ISparqlExpression, ISparqlExpression)
  nameWithType: SparqlExpression.Le(ISparqlExpression, ISparqlExpression)
  fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression, VDS.RDF.Query.Expressions.ISparqlExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Le
    nameWithType: SparqlExpression.Le
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le(VDS.RDF.Query.Expressions.ISparqlExpression,VDS.RDF.Query.Expressions.ISparqlExpression)
    name: Le
    nameWithType: SparqlExpression.Le
    fullName: VDS.RDF.Query.Builder.Expressions.SparqlExpression.Le
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Query.Expressions.ISparqlExpression
    name: ISparqlExpression
    nameWithType: ISparqlExpression
    fullName: VDS.RDF.Query.Expressions.ISparqlExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}.Expression
  commentId: P:VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}.Expression
  parent: VDS.RDF.Query.Builder.Expressions.PrimaryExpression{VDS.RDF.Query.Expressions.ISparqlExpression}
  definition: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1.Expression
  name: Expression
  nameWithType: PrimaryExpression<ISparqlExpression>.Expression
  fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression<VDS.RDF.Query.Expressions.ISparqlExpression>.Expression
  nameWithType.vb: PrimaryExpression(Of ISparqlExpression).Expression
  fullName.vb: VDS.RDF.Query.Builder.Expressions.PrimaryExpression(Of VDS.RDF.Query.Expressions.ISparqlExpression).Expression
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<NumericExpression>()
  nameWithType: Extensions.AsEnumerable<NumericExpression>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.Expressions.NumericExpression>()
  nameWithType.vb: Extensions.AsEnumerable(Of NumericExpression)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.Expressions.NumericExpression)()
  name.vb: AsEnumerable(Of NumericExpression)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<NumericExpression>
    nameWithType: Extensions.AsEnumerable<NumericExpression>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Builder.Expressions.NumericExpression>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of NumericExpression)
    nameWithType: Extensions.AsEnumerable(Of NumericExpression)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Builder.Expressions.NumericExpression)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
  commentId: T:VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
  name: PrimaryExpression<TExpression>
  nameWithType: PrimaryExpression<TExpression>
  fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression<TExpression>
  nameWithType.vb: PrimaryExpression(Of TExpression)
  fullName.vb: VDS.RDF.Query.Builder.Expressions.PrimaryExpression(Of TExpression)
  name.vb: PrimaryExpression(Of TExpression)
  spec.csharp:
  - uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
    name: PrimaryExpression
    nameWithType: PrimaryExpression
    fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression
  - name: <
    nameWithType: <
    fullName: <
  - name: TExpression
    nameWithType: TExpression
    fullName: TExpression
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1
    name: PrimaryExpression
    nameWithType: PrimaryExpression
    fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TExpression
    nameWithType: TExpression
    fullName: TExpression
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1.Expression
  commentId: P:VDS.RDF.Query.Builder.Expressions.PrimaryExpression`1.Expression
  name: Expression
  nameWithType: PrimaryExpression<TExpression>.Expression
  fullName: VDS.RDF.Query.Builder.Expressions.PrimaryExpression<TExpression>.Expression
  nameWithType.vb: PrimaryExpression(Of TExpression).Expression
  fullName.vb: VDS.RDF.Query.Builder.Expressions.PrimaryExpression(Of TExpression).Expression
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.#ctor*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.NumericExpression.#ctor
  name: NumericExpression
  nameWithType: NumericExpression.NumericExpression
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.NumericExpression
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Multiply
  name: Multiply
  nameWithType: NumericExpression.Multiply
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Multiply
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.NumericExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: NumericExpression
  nameWithType: NumericExpression
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression
- uid: VDS.RDF.Query.Builder.Expressions.VariableExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.VariableExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: VariableExpression
  nameWithType: VariableExpression
  fullName: VDS.RDF.Query.Builder.Expressions.VariableExpression
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Byte
  commentId: T:System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.SByte
  commentId: T:System.SByte
  parent: System
  isExternal: true
  name: SByte
  nameWithType: SByte
  fullName: System.SByte
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Division
  name: Division
  nameWithType: NumericExpression.Division
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Division
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Addition
  name: Addition
  nameWithType: NumericExpression.Addition
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Addition
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_Subtraction
  name: Subtraction
  nameWithType: NumericExpression.Subtraction
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.Subtraction
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_GreaterThan*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_GreaterThan
  name: GreaterThan
  nameWithType: NumericExpression.GreaterThan
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.GreaterThan
- uid: VDS.RDF.Query.Builder.Expressions.BooleanExpression
  commentId: T:VDS.RDF.Query.Builder.Expressions.BooleanExpression
  parent: VDS.RDF.Query.Builder.Expressions
  name: BooleanExpression
  nameWithType: BooleanExpression
  fullName: VDS.RDF.Query.Builder.Expressions.BooleanExpression
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_LessThan*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_LessThan
  name: LessThan
  nameWithType: NumericExpression.LessThan
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.LessThan
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_GreaterThanOrEqual*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_GreaterThanOrEqual
  name: GreaterThanOrEqual
  nameWithType: NumericExpression.GreaterThanOrEqual
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.GreaterThanOrEqual
- uid: VDS.RDF.Query.Builder.Expressions.NumericExpression.op_LessThanOrEqual*
  commentId: Overload:VDS.RDF.Query.Builder.Expressions.NumericExpression.op_LessThanOrEqual
  name: LessThanOrEqual
  nameWithType: NumericExpression.LessThanOrEqual
  fullName: VDS.RDF.Query.Builder.Expressions.NumericExpression.LessThanOrEqual
