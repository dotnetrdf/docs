### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.ParserHelper
  commentId: T:VDS.RDF.Parsing.ParserHelper
  id: ParserHelper
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.ParserHelper.Error(System.String,System.String,VDS.RDF.Parsing.Events.IRdfXmlEvent)
  - VDS.RDF.Parsing.ParserHelper.Error(System.String,VDS.RDF.Parsing.Events.IRdfXmlEvent)
  - VDS.RDF.Parsing.ParserHelper.Error(System.String,VDS.RDF.Parsing.Tokens.IToken)
  - VDS.RDF.Parsing.ParserHelper.Stop
  - VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.IToken)
  - VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext,VDS.RDF.Parsing.Tokens.IToken)
  - VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext,VDS.RDF.Parsing.Tokens.IToken,System.Boolean)
  - VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext,VDS.RDF.Parsing.Tokens.IToken,System.Boolean,System.Func{System.String,System.String})
  - VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IStoreParserContext,VDS.RDF.Parsing.Tokens.IToken)
  langs:
  - csharp
  - vb
  name: ParserHelper
  nameWithType: ParserHelper
  fullName: VDS.RDF.Parsing.ParserHelper
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/ParserHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ParserHelper
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/ParserHelper.cs
    startLine: 37
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nStatic Helper class containing useful methods for Parsers.\n"
  example: []
  syntax:
    content: public static class ParserHelper
    content.vb: Public Module ParserHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext,VDS.RDF.Parsing.Tokens.IToken)
  commentId: M:VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext,VDS.RDF.Parsing.Tokens.IToken)
  id: TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext,VDS.RDF.Parsing.Tokens.IToken)
  parent: VDS.RDF.Parsing.ParserHelper
  langs:
  - csharp
  - vb
  name: TryResolveUri(IParserContext, IToken)
  nameWithType: ParserHelper.TryResolveUri(IParserContext, IToken)
  fullName: VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext, VDS.RDF.Parsing.Tokens.IToken)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/ParserHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryResolveUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/ParserHelper.cs
    startLine: 45
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAttempts to resolve a QName or URI Token into a URI Node and produces appropriate error messages if this fails.\n"
  example: []
  syntax:
    content: public static INode TryResolveUri(IParserContext context, IToken t)
    parameters:
    - id: context
      type: VDS.RDF.Parsing.Contexts.IParserContext
      description: Parser Context.
    - id: t
      type: VDS.RDF.Parsing.Tokens.IToken
      description: Token to resolve.
    return:
      type: VDS.RDF.INode
      description: ''
    content.vb: Public Shared Function TryResolveUri(context As IParserContext, t As IToken) As INode
  overload: VDS.RDF.Parsing.ParserHelper.TryResolveUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext,VDS.RDF.Parsing.Tokens.IToken,System.Boolean)
  commentId: M:VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext,VDS.RDF.Parsing.Tokens.IToken,System.Boolean)
  id: TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext,VDS.RDF.Parsing.Tokens.IToken,System.Boolean)
  parent: VDS.RDF.Parsing.ParserHelper
  langs:
  - csharp
  - vb
  name: TryResolveUri(IParserContext, IToken, Boolean)
  nameWithType: ParserHelper.TryResolveUri(IParserContext, IToken, Boolean)
  fullName: VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext, VDS.RDF.Parsing.Tokens.IToken, System.Boolean)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/ParserHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryResolveUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/ParserHelper.cs
    startLine: 57
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAttempts to resolve a QName or URI Token into a URI Node and produces appropriate error messages if this fails.\n"
  example: []
  syntax:
    content: public static INode TryResolveUri(IParserContext context, IToken t, bool allowDefaultPrefixFallback)
    parameters:
    - id: context
      type: VDS.RDF.Parsing.Contexts.IParserContext
      description: Parser Context.
    - id: t
      type: VDS.RDF.Parsing.Tokens.IToken
      description: Token to resolve.
    - id: allowDefaultPrefixFallback
      type: System.Boolean
      description: Whether when the default prefix is used but not defined it can fallback to the Base URI.
    return:
      type: VDS.RDF.INode
      description: ''
    content.vb: Public Shared Function TryResolveUri(context As IParserContext, t As IToken, allowDefaultPrefixFallback As Boolean) As INode
  overload: VDS.RDF.Parsing.ParserHelper.TryResolveUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext,VDS.RDF.Parsing.Tokens.IToken,System.Boolean,System.Func{System.String,System.String})
  commentId: M:VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext,VDS.RDF.Parsing.Tokens.IToken,System.Boolean,System.Func{System.String,System.String})
  id: TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext,VDS.RDF.Parsing.Tokens.IToken,System.Boolean,System.Func{System.String,System.String})
  parent: VDS.RDF.Parsing.ParserHelper
  langs:
  - csharp
  - vb
  name: TryResolveUri(IParserContext, IToken, Boolean, Func<String, String>)
  nameWithType: ParserHelper.TryResolveUri(IParserContext, IToken, Boolean, Func<String, String>)
  fullName: VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext, VDS.RDF.Parsing.Tokens.IToken, System.Boolean, System.Func<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/ParserHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryResolveUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/ParserHelper.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAttempts to resolve a QName or URI Token into a URI Node and produces appropriate error messages if this fails.\n"
  example: []
  syntax:
    content: public static INode TryResolveUri(IParserContext context, IToken t, bool allowDefaultPrefixFallback, Func<string, string> qnameUnescape)
    parameters:
    - id: context
      type: VDS.RDF.Parsing.Contexts.IParserContext
      description: Parser Context.
    - id: t
      type: VDS.RDF.Parsing.Tokens.IToken
      description: Token to resolve.
    - id: allowDefaultPrefixFallback
      type: System.Boolean
      description: Whether when the default prefix is used but not defined it can fallback to the Base URI.
    - id: qnameUnescape
      type: System.Func{System.String,System.String}
      description: QName unescaping function.
    return:
      type: VDS.RDF.INode
      description: ''
    content.vb: Public Shared Function TryResolveUri(context As IParserContext, t As IToken, allowDefaultPrefixFallback As Boolean, qnameUnescape As Func(Of String, String)) As INode
  overload: VDS.RDF.Parsing.ParserHelper.TryResolveUri*
  nameWithType.vb: ParserHelper.TryResolveUri(IParserContext, IToken, Boolean, Func(Of String, String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IParserContext, VDS.RDF.Parsing.Tokens.IToken, System.Boolean, System.Func(Of System.String, System.String))
  name.vb: TryResolveUri(IParserContext, IToken, Boolean, Func(Of String, String))
- uid: VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IStoreParserContext,VDS.RDF.Parsing.Tokens.IToken)
  commentId: M:VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IStoreParserContext,VDS.RDF.Parsing.Tokens.IToken)
  id: TryResolveUri(VDS.RDF.Parsing.Contexts.IStoreParserContext,VDS.RDF.Parsing.Tokens.IToken)
  parent: VDS.RDF.Parsing.ParserHelper
  langs:
  - csharp
  - vb
  name: TryResolveUri(IStoreParserContext, IToken)
  nameWithType: ParserHelper.TryResolveUri(IStoreParserContext, IToken)
  fullName: VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.Parsing.Contexts.IStoreParserContext, VDS.RDF.Parsing.Tokens.IToken)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/ParserHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryResolveUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/ParserHelper.cs
    startLine: 114
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAttempts to resolve a QName or URI Token into a URI Node and produces appropriate error messages if this fails.\n"
  example: []
  syntax:
    content: public static INode TryResolveUri(IStoreParserContext context, IToken t)
    parameters:
    - id: context
      type: VDS.RDF.Parsing.Contexts.IStoreParserContext
      description: Parser Context.
    - id: t
      type: VDS.RDF.Parsing.Tokens.IToken
      description: Token to resolve.
    return:
      type: VDS.RDF.INode
      description: ''
    content.vb: Public Shared Function TryResolveUri(context As IStoreParserContext, t As IToken) As INode
  overload: VDS.RDF.Parsing.ParserHelper.TryResolveUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.IToken)
  commentId: M:VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.IToken)
  id: TryResolveUri(VDS.RDF.IGraph,VDS.RDF.Parsing.Tokens.IToken)
  parent: VDS.RDF.Parsing.ParserHelper
  langs:
  - csharp
  - vb
  name: TryResolveUri(IGraph, IToken)
  nameWithType: ParserHelper.TryResolveUri(IGraph, IToken)
  fullName: VDS.RDF.Parsing.ParserHelper.TryResolveUri(VDS.RDF.IGraph, VDS.RDF.Parsing.Tokens.IToken)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/ParserHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TryResolveUri
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/ParserHelper.cs
    startLine: 271
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAttempts to resolve a QName or URI Token into a URI Node and produces appropriate error messages if this fails.\n"
  example: []
  syntax:
    content: public static INode TryResolveUri(IGraph g, IToken t)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    - id: t
      type: VDS.RDF.Parsing.Tokens.IToken
      description: Token to resolve.
    return:
      type: VDS.RDF.INode
      description: ''
    content.vb: Public Shared Function TryResolveUri(g As IGraph, t As IToken) As INode
  overload: VDS.RDF.Parsing.ParserHelper.TryResolveUri*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParserHelper.Error(System.String,VDS.RDF.Parsing.Tokens.IToken)
  commentId: M:VDS.RDF.Parsing.ParserHelper.Error(System.String,VDS.RDF.Parsing.Tokens.IToken)
  id: Error(System.String,VDS.RDF.Parsing.Tokens.IToken)
  parent: VDS.RDF.Parsing.ParserHelper
  langs:
  - csharp
  - vb
  name: Error(String, IToken)
  nameWithType: ParserHelper.Error(String, IToken)
  fullName: VDS.RDF.Parsing.ParserHelper.Error(System.String, VDS.RDF.Parsing.Tokens.IToken)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/ParserHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Error
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/ParserHelper.cs
    startLine: 315
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nHelper method for raising informative standardised Parser Errors.\n"
  example: []
  syntax:
    content: public static RdfParseException Error(string msg, IToken t)
    parameters:
    - id: msg
      type: System.String
      description: The Error Message.
    - id: t
      type: VDS.RDF.Parsing.Tokens.IToken
      description: The Token that is the cause of the Error.
    return:
      type: VDS.RDF.Parsing.RdfParseException
      description: ''
    content.vb: Public Shared Function Error(msg As String, t As IToken) As RdfParseException
  overload: VDS.RDF.Parsing.ParserHelper.Error*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParserHelper.Error(System.String,VDS.RDF.Parsing.Events.IRdfXmlEvent)
  commentId: M:VDS.RDF.Parsing.ParserHelper.Error(System.String,VDS.RDF.Parsing.Events.IRdfXmlEvent)
  id: Error(System.String,VDS.RDF.Parsing.Events.IRdfXmlEvent)
  parent: VDS.RDF.Parsing.ParserHelper
  langs:
  - csharp
  - vb
  name: Error(String, IRdfXmlEvent)
  nameWithType: ParserHelper.Error(String, IRdfXmlEvent)
  fullName: VDS.RDF.Parsing.ParserHelper.Error(System.String, VDS.RDF.Parsing.Events.IRdfXmlEvent)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/ParserHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Error
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/ParserHelper.cs
    startLine: 340
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nHelper function which generates standardised Error Messages.\n"
  example: []
  syntax:
    content: public static RdfParseException Error(string message, IRdfXmlEvent evt)
    parameters:
    - id: message
      type: System.String
      description: Error Message.
    - id: evt
      type: VDS.RDF.Parsing.Events.IRdfXmlEvent
      description: Event causing the Error.
    return:
      type: VDS.RDF.Parsing.RdfParseException
      description: ''
    content.vb: Public Shared Function Error(message As String, evt As IRdfXmlEvent) As RdfParseException
  overload: VDS.RDF.Parsing.ParserHelper.Error*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParserHelper.Error(System.String,System.String,VDS.RDF.Parsing.Events.IRdfXmlEvent)
  commentId: M:VDS.RDF.Parsing.ParserHelper.Error(System.String,System.String,VDS.RDF.Parsing.Events.IRdfXmlEvent)
  id: Error(System.String,System.String,VDS.RDF.Parsing.Events.IRdfXmlEvent)
  parent: VDS.RDF.Parsing.ParserHelper
  langs:
  - csharp
  - vb
  name: Error(String, String, IRdfXmlEvent)
  nameWithType: ParserHelper.Error(String, String, IRdfXmlEvent)
  fullName: VDS.RDF.Parsing.ParserHelper.Error(System.String, System.String, VDS.RDF.Parsing.Events.IRdfXmlEvent)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/ParserHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Error
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/ParserHelper.cs
    startLine: 352
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nHelper function which generates standardised Error Messages.\n"
  example: []
  syntax:
    content: public static RdfParseException Error(string message, string production, IRdfXmlEvent evt)
    parameters:
    - id: message
      type: System.String
      description: Error Message.
    - id: production
      type: System.String
      description: The Production where the Error occurred.
    - id: evt
      type: VDS.RDF.Parsing.Events.IRdfXmlEvent
      description: Event causing the Error.
    return:
      type: VDS.RDF.Parsing.RdfParseException
      description: ''
    content.vb: Public Shared Function Error(message As String, production As String, evt As IRdfXmlEvent) As RdfParseException
  overload: VDS.RDF.Parsing.ParserHelper.Error*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.ParserHelper.Stop
  commentId: M:VDS.RDF.Parsing.ParserHelper.Stop
  id: Stop
  parent: VDS.RDF.Parsing.ParserHelper
  langs:
  - csharp
  - vb
  name: Stop()
  nameWithType: ParserHelper.Stop()
  fullName: VDS.RDF.Parsing.ParserHelper.Stop()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/ParserHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Stop
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/ParserHelper.cs
    startLine: 386
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nThrows a <xref href=\"VDS.RDF.Parsing.RdfParsingTerminatedException\" data-throw-if-not-resolved=\"false\"></xref> which is used to tell the parser that it should stop parsing.\n"
  example: []
  syntax:
    content: public static void Stop()
    content.vb: Public Shared Sub Stop
  overload: VDS.RDF.Parsing.ParserHelper.Stop*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.ParserHelper.TryResolveUri*
  commentId: Overload:VDS.RDF.Parsing.ParserHelper.TryResolveUri
  name: TryResolveUri
  nameWithType: ParserHelper.TryResolveUri
  fullName: VDS.RDF.Parsing.ParserHelper.TryResolveUri
- uid: VDS.RDF.Parsing.Contexts.IParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.IParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: IParserContext
  nameWithType: IParserContext
  fullName: VDS.RDF.Parsing.Contexts.IParserContext
- uid: VDS.RDF.Parsing.Tokens.IToken
  commentId: T:VDS.RDF.Parsing.Tokens.IToken
  parent: VDS.RDF.Parsing.Tokens
  name: IToken
  nameWithType: IToken
  fullName: VDS.RDF.Parsing.Tokens.IToken
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Parsing.Contexts
  commentId: N:VDS.RDF.Parsing.Contexts
  name: VDS.RDF.Parsing.Contexts
  nameWithType: VDS.RDF.Parsing.Contexts
  fullName: VDS.RDF.Parsing.Contexts
- uid: VDS.RDF.Parsing.Tokens
  commentId: N:VDS.RDF.Parsing.Tokens
  name: VDS.RDF.Parsing.Tokens
  nameWithType: VDS.RDF.Parsing.Tokens
  fullName: VDS.RDF.Parsing.Tokens
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Func{System.String,System.String}
  commentId: T:System.Func{System.String,System.String}
  parent: System
  definition: System.Func`2
  name: Func<String, String>
  nameWithType: Func<String, String>
  fullName: System.Func<System.String, System.String>
  nameWithType.vb: Func(Of String, String)
  fullName.vb: System.Func(Of System.String, System.String)
  name.vb: Func(Of String, String)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Contexts.IStoreParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.IStoreParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: IStoreParserContext
  nameWithType: IStoreParserContext
  fullName: VDS.RDF.Parsing.Contexts.IStoreParserContext
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.Parsing.ParserHelper.Error*
  commentId: Overload:VDS.RDF.Parsing.ParserHelper.Error
  name: Error
  nameWithType: ParserHelper.Error
  fullName: VDS.RDF.Parsing.ParserHelper.Error
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Parsing.RdfParseException
  commentId: T:VDS.RDF.Parsing.RdfParseException
  parent: VDS.RDF.Parsing
  name: RdfParseException
  nameWithType: RdfParseException
  fullName: VDS.RDF.Parsing.RdfParseException
- uid: VDS.RDF.Parsing.Events.IRdfXmlEvent
  commentId: T:VDS.RDF.Parsing.Events.IRdfXmlEvent
  parent: VDS.RDF.Parsing.Events
  name: IRdfXmlEvent
  nameWithType: IRdfXmlEvent
  fullName: VDS.RDF.Parsing.Events.IRdfXmlEvent
- uid: VDS.RDF.Parsing.Events
  commentId: N:VDS.RDF.Parsing.Events
  name: VDS.RDF.Parsing.Events
  nameWithType: VDS.RDF.Parsing.Events
  fullName: VDS.RDF.Parsing.Events
- uid: VDS.RDF.Parsing.RdfParsingTerminatedException
  commentId: T:VDS.RDF.Parsing.RdfParsingTerminatedException
  name: RdfParsingTerminatedException
  nameWithType: RdfParsingTerminatedException
  fullName: VDS.RDF.Parsing.RdfParsingTerminatedException
- uid: VDS.RDF.Parsing.ParserHelper.Stop*
  commentId: Overload:VDS.RDF.Parsing.ParserHelper.Stop
  name: Stop
  nameWithType: ParserHelper.Stop
  fullName: VDS.RDF.Parsing.ParserHelper.Stop
