### YamlMime:ManagedReference
items:
- uid: VDS.RDF.BaseGraphLiteralNode
  commentId: T:VDS.RDF.BaseGraphLiteralNode
  id: BaseGraphLiteralNode
  parent: VDS.RDF
  children:
  - VDS.RDF.BaseGraphLiteralNode.#ctor
  - VDS.RDF.BaseGraphLiteralNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.BaseGraphLiteralNode.#ctor(VDS.RDF.IGraph)
  - VDS.RDF.BaseGraphLiteralNode.#ctor(VDS.RDF.IGraph,VDS.RDF.IGraph)
  - VDS.RDF.BaseGraphLiteralNode.AsBoolean
  - VDS.RDF.BaseGraphLiteralNode.AsDateTime
  - VDS.RDF.BaseGraphLiteralNode.AsDateTimeOffset
  - VDS.RDF.BaseGraphLiteralNode.AsDecimal
  - VDS.RDF.BaseGraphLiteralNode.AsDouble
  - VDS.RDF.BaseGraphLiteralNode.AsFloat
  - VDS.RDF.BaseGraphLiteralNode.AsInteger
  - VDS.RDF.BaseGraphLiteralNode.AsString
  - VDS.RDF.BaseGraphLiteralNode.AsTimeSpan
  - VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.BaseGraphLiteralNode)
  - VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IBlankNode)
  - VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  - VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
  - VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.INode)
  - VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IUriNode)
  - VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IVariableNode)
  - VDS.RDF.BaseGraphLiteralNode.EffectiveType
  - VDS.RDF.BaseGraphLiteralNode.Equals(System.Object)
  - VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.BaseGraphLiteralNode)
  - VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IBlankNode)
  - VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
  - VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.ILiteralNode)
  - VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.INode)
  - VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IUriNode)
  - VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IVariableNode)
  - VDS.RDF.BaseGraphLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - VDS.RDF.BaseGraphLiteralNode.NumericType
  - VDS.RDF.BaseGraphLiteralNode.ReadXml(System.Xml.XmlReader)
  - VDS.RDF.BaseGraphLiteralNode.SubGraph
  - VDS.RDF.BaseGraphLiteralNode.ToString
  - VDS.RDF.BaseGraphLiteralNode.WriteXml(System.Xml.XmlWriter)
  langs:
  - csharp
  - vb
  name: BaseGraphLiteralNode
  nameWithType: BaseGraphLiteralNode
  fullName: VDS.RDF.BaseGraphLiteralNode
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseGraphLiteralNode
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 42
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nAbstract Base Class for Graph Literal Nodes.\n"
  example: []
  syntax:
    content: >-
      [Serializable]

      public abstract class BaseGraphLiteralNode : BaseNode, IGraphLiteralNode, IEquatable<BaseGraphLiteralNode>, IComparable<BaseGraphLiteralNode>, IValuedNode, INode, IComparable<INode>, IComparable<IBlankNode>, IComparable<IGraphLiteralNode>, IComparable<ILiteralNode>, IComparable<IUriNode>, IComparable<IVariableNode>, IEquatable<INode>, IEquatable<IBlankNode>, IEquatable<IGraphLiteralNode>, IEquatable<ILiteralNode>, IEquatable<IUriNode>, IEquatable<IVariableNode>, ISerializable, IXmlSerializable
    content.vb: >-
      <Serializable>

      Public MustInherit Class BaseGraphLiteralNode
          Inherits BaseNode
          Implements IGraphLiteralNode, IEquatable(Of BaseGraphLiteralNode), IComparable(Of BaseGraphLiteralNode), IValuedNode, INode, IComparable(Of INode), IComparable(Of IBlankNode), IComparable(Of IGraphLiteralNode), IComparable(Of ILiteralNode), IComparable(Of IUriNode), IComparable(Of IVariableNode), IEquatable(Of INode), IEquatable(Of IBlankNode), IEquatable(Of IGraphLiteralNode), IEquatable(Of ILiteralNode), IEquatable(Of IUriNode), IEquatable(Of IVariableNode), ISerializable, IXmlSerializable
  inheritance:
  - System.Object
  - VDS.RDF.BaseNode
  derivedClasses:
  - VDS.RDF.GraphLiteralNode
  implements:
  - VDS.RDF.IGraphLiteralNode
  - System.IEquatable{VDS.RDF.BaseGraphLiteralNode}
  - System.IComparable{VDS.RDF.BaseGraphLiteralNode}
  - VDS.RDF.Nodes.IValuedNode
  - VDS.RDF.INode
  - System.IComparable{VDS.RDF.INode}
  - System.IComparable{VDS.RDF.IBlankNode}
  - System.IComparable{VDS.RDF.IGraphLiteralNode}
  - System.IComparable{VDS.RDF.ILiteralNode}
  - System.IComparable{VDS.RDF.IUriNode}
  - System.IComparable{VDS.RDF.IVariableNode}
  - System.IEquatable{VDS.RDF.INode}
  - System.IEquatable{VDS.RDF.IBlankNode}
  - System.IEquatable{VDS.RDF.IGraphLiteralNode}
  - System.IEquatable{VDS.RDF.ILiteralNode}
  - System.IEquatable{VDS.RDF.IUriNode}
  - System.IEquatable{VDS.RDF.IVariableNode}
  - System.Runtime.Serialization.ISerializable
  - System.Xml.Serialization.IXmlSerializable
  inheritedMembers:
  - VDS.RDF.BaseNode._graph
  - VDS.RDF.BaseNode._graphUri
  - VDS.RDF.BaseNode._nodetype
  - VDS.RDF.BaseNode._hashcode
  - VDS.RDF.BaseNode.NodeType
  - VDS.RDF.BaseNode.Graph
  - VDS.RDF.BaseNode.GraphUri
  - VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  - VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  - VDS.RDF.BaseNode.GetHashCode
  - VDS.RDF.BaseNode.GetSchema
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.BaseGraphLiteralNode.VDS.RDF.Extensions.AsEnumerable``1
  - VDS.RDF.INode.VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  - VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  - VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.INode.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  - VDS.RDF.INode.VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - VDS.RDF.Nodes.IValuedNode.VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.BaseGraphLiteralNode.#ctor(VDS.RDF.IGraph,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.#ctor(VDS.RDF.IGraph,VDS.RDF.IGraph)
  id: '#ctor(VDS.RDF.IGraph,VDS.RDF.IGraph)'
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: BaseGraphLiteralNode(IGraph, IGraph)
  nameWithType: BaseGraphLiteralNode.BaseGraphLiteralNode(IGraph, IGraph)
  fullName: VDS.RDF.BaseGraphLiteralNode.BaseGraphLiteralNode(VDS.RDF.IGraph, VDS.RDF.IGraph)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Graph Literal Node in the given Graph which represents the given Subgraph.\n"
  example: []
  syntax:
    content: protected BaseGraphLiteralNode(IGraph g, IGraph subgraph)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this node is in.
    - id: subgraph
      type: VDS.RDF.IGraph
      description: Sub Graph this node represents.
    content.vb: Protected Sub New(g As IGraph, subgraph As IGraph)
  overload: VDS.RDF.BaseGraphLiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraphLiteralNode.#ctor(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.#ctor(VDS.RDF.IGraph)
  id: '#ctor(VDS.RDF.IGraph)'
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: BaseGraphLiteralNode(IGraph)
  nameWithType: BaseGraphLiteralNode.BaseGraphLiteralNode(IGraph)
  fullName: VDS.RDF.BaseGraphLiteralNode.BaseGraphLiteralNode(VDS.RDF.IGraph)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 67
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nCreates a new Graph Literal Node whose value is an empty Subgraph.\n"
  example: []
  syntax:
    content: protected BaseGraphLiteralNode(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph this node is in.
    content.vb: Protected Sub New(g As IGraph)
  overload: VDS.RDF.BaseGraphLiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraphLiteralNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: BaseGraphLiteralNode(SerializationInfo, StreamingContext)
  nameWithType: BaseGraphLiteralNode.BaseGraphLiteralNode(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.BaseGraphLiteralNode.BaseGraphLiteralNode(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 82
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDeserializer Constructor.\n"
  example: []
  syntax:
    content: protected BaseGraphLiteralNode(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Protected Sub New(info As SerializationInfo, context As StreamingContext)
  overload: VDS.RDF.BaseGraphLiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraphLiteralNode.#ctor
  commentId: M:VDS.RDF.BaseGraphLiteralNode.#ctor
  id: '#ctor'
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: BaseGraphLiteralNode()
  nameWithType: BaseGraphLiteralNode.BaseGraphLiteralNode()
  fullName: VDS.RDF.BaseGraphLiteralNode.BaseGraphLiteralNode()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 94
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDeserialization Only constructor.\n"
  example: []
  syntax:
    content: protected BaseGraphLiteralNode()
    content.vb: Protected Sub New
  overload: VDS.RDF.BaseGraphLiteralNode.#ctor*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.BaseGraphLiteralNode.SubGraph
  commentId: P:VDS.RDF.BaseGraphLiteralNode.SubGraph
  id: SubGraph
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: SubGraph
  nameWithType: BaseGraphLiteralNode.SubGraph
  fullName: VDS.RDF.BaseGraphLiteralNode.SubGraph
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SubGraph
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Subgraph that this Node represents.\n"
  example: []
  syntax:
    content: public IGraph SubGraph { get; }
    parameters: []
    return:
      type: VDS.RDF.IGraph
    content.vb: Public ReadOnly Property SubGraph As IGraph
  overload: VDS.RDF.BaseGraphLiteralNode.SubGraph*
  implements:
  - VDS.RDF.IGraphLiteralNode.SubGraph
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.BaseGraphLiteralNode.Equals(System.Object)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.Equals(System.Object)
  id: Equals(System.Object)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BaseGraphLiteralNode.Equals(Object)
  fullName: VDS.RDF.BaseGraphLiteralNode.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 113
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nImplementation of the Equals method for Graph Literal Nodes.  Graph Literals are considered Equal if their respective Subgraphs are equal.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object to compare the Node with.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(System.Object)
  overload: VDS.RDF.BaseGraphLiteralNode.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.INode)
  id: Equals(VDS.RDF.INode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(INode)
  nameWithType: BaseGraphLiteralNode.Equals(INode)
  fullName: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 135
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nImplementation of the Equals method for Graph Literal Nodes.  Graph Literals are considered Equal if their respective Subgraphs are equal.\n"
  example: []
  syntax:
    content: public override bool Equals(INode other)
    parameters:
    - id: other
      type: VDS.RDF.INode
      description: Object to compare the Node with.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(other As INode) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
  overload: VDS.RDF.BaseGraphLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.INode}.Equals(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IBlankNode)
  id: Equals(VDS.RDF.IBlankNode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(IBlankNode)
  nameWithType: BaseGraphLiteralNode.Equals(IBlankNode)
  fullName: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IBlankNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 157
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a Blank Node (should always be false).\n"
  example: []
  syntax:
    content: public override bool Equals(IBlankNode other)
    parameters:
    - id: other
      type: VDS.RDF.IBlankNode
      description: Blank Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(other As IBlankNode) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
  overload: VDS.RDF.BaseGraphLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IBlankNode}.Equals(VDS.RDF.IBlankNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
  id: Equals(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(IGraphLiteralNode)
  nameWithType: BaseGraphLiteralNode.Equals(IGraphLiteralNode)
  fullName: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IGraphLiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 168
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a Graph Literal Node.\n"
  example: []
  syntax:
    content: public override bool Equals(IGraphLiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.IGraphLiteralNode
      description: Graph Literal Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(other As IGraphLiteralNode) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
  overload: VDS.RDF.BaseGraphLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IGraphLiteralNode}.Equals(VDS.RDF.IGraphLiteralNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.ILiteralNode)
  id: Equals(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(ILiteralNode)
  nameWithType: BaseGraphLiteralNode.Equals(ILiteralNode)
  fullName: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 179
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a Literal Node (should always be false).\n"
  example: []
  syntax:
    content: public override bool Equals(ILiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.ILiteralNode
      description: Literal Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(other As ILiteralNode) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
  overload: VDS.RDF.BaseGraphLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.ILiteralNode}.Equals(VDS.RDF.ILiteralNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IUriNode)
  id: Equals(VDS.RDF.IUriNode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(IUriNode)
  nameWithType: BaseGraphLiteralNode.Equals(IUriNode)
  fullName: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IUriNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 190
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a URI Node (should always be false).\n"
  example: []
  syntax:
    content: public override bool Equals(IUriNode other)
    parameters:
    - id: other
      type: VDS.RDF.IUriNode
      description: URI Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(other As IUriNode) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
  overload: VDS.RDF.BaseGraphLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IUriNode}.Equals(VDS.RDF.IUriNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IVariableNode)
  id: Equals(VDS.RDF.IVariableNode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(IVariableNode)
  nameWithType: BaseGraphLiteralNode.Equals(IVariableNode)
  fullName: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.IVariableNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 201
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a Variable Node (should always be false).\n"
  example: []
  syntax:
    content: public override bool Equals(IVariableNode other)
    parameters:
    - id: other
      type: VDS.RDF.IVariableNode
      description: Variable Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(other As IVariableNode) As Boolean
  overridden: VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
  overload: VDS.RDF.BaseGraphLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.IVariableNode}.Equals(VDS.RDF.IVariableNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.BaseGraphLiteralNode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.BaseGraphLiteralNode)
  id: Equals(VDS.RDF.BaseGraphLiteralNode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: Equals(BaseGraphLiteralNode)
  nameWithType: BaseGraphLiteralNode.Equals(BaseGraphLiteralNode)
  fullName: VDS.RDF.BaseGraphLiteralNode.Equals(VDS.RDF.BaseGraphLiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 212
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nDetermines whether this Node is equal to a Graph Literal Node.\n"
  example: []
  syntax:
    content: public bool Equals(BaseGraphLiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.BaseGraphLiteralNode
      description: Graph Literal Node.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function Equals(other As BaseGraphLiteralNode) As Boolean
  overload: VDS.RDF.BaseGraphLiteralNode.Equals*
  implements:
  - System.IEquatable{VDS.RDF.BaseGraphLiteralNode}.Equals(VDS.RDF.BaseGraphLiteralNode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraphLiteralNode.ToString
  commentId: M:VDS.RDF.BaseGraphLiteralNode.ToString
  id: ToString
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: BaseGraphLiteralNode.ToString()
  fullName: VDS.RDF.BaseGraphLiteralNode.ToString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ToString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 221
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nImplementation of ToString for Graph Literals which produces a String representation of the Subgraph in N3 style syntax.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: VDS.RDF.BaseNode.ToString
  overload: VDS.RDF.BaseGraphLiteralNode.ToString*
  implements:
  - VDS.RDF.INode.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.INode)
  id: CompareTo(VDS.RDF.INode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(INode)
  nameWithType: BaseGraphLiteralNode.CompareTo(INode)
  fullName: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 246
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nImplementation of CompareTo for Graph Literals.\n"
  remarks: "\nGraph Literal Nodes are greater than Blank Nodes, Uri Nodes, Literal Nodes and Nulls.\n"
  example: []
  syntax:
    content: public override int CompareTo(INode other)
    parameters:
    - id: other
      type: VDS.RDF.INode
      description: Node to compare to.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function CompareTo(other As INode) As Integer
  overridden: VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
  overload: VDS.RDF.BaseGraphLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.INode}.CompareTo(VDS.RDF.INode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IBlankNode)
  id: CompareTo(VDS.RDF.IBlankNode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(IBlankNode)
  nameWithType: BaseGraphLiteralNode.CompareTo(IBlankNode)
  fullName: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IBlankNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 278
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns an Integer indicating the Ordering of this Node compared to another Node.\n"
  example: []
  syntax:
    content: public override int CompareTo(IBlankNode other)
    parameters:
    - id: other
      type: VDS.RDF.IBlankNode
      description: Node to test against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function CompareTo(other As IBlankNode) As Integer
  overridden: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
  overload: VDS.RDF.BaseGraphLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IBlankNode}.CompareTo(VDS.RDF.IBlankNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  id: CompareTo(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(IGraphLiteralNode)
  nameWithType: BaseGraphLiteralNode.CompareTo(IGraphLiteralNode)
  fullName: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 291
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns an Integer indicating the Ordering of this Node compared to another Node.\n"
  example: []
  syntax:
    content: public override int CompareTo(IGraphLiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.IGraphLiteralNode
      description: Node to test against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function CompareTo(other As IGraphLiteralNode) As Integer
  overridden: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  overload: VDS.RDF.BaseGraphLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IGraphLiteralNode}.CompareTo(VDS.RDF.IGraphLiteralNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
  id: CompareTo(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(ILiteralNode)
  nameWithType: BaseGraphLiteralNode.CompareTo(ILiteralNode)
  fullName: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.ILiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 301
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns an Integer indicating the Ordering of this Node compared to another Node.\n"
  example: []
  syntax:
    content: public override int CompareTo(ILiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.ILiteralNode
      description: Node to test against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function CompareTo(other As ILiteralNode) As Integer
  overridden: VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
  overload: VDS.RDF.BaseGraphLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.ILiteralNode}.CompareTo(VDS.RDF.ILiteralNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IUriNode)
  id: CompareTo(VDS.RDF.IUriNode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(IUriNode)
  nameWithType: BaseGraphLiteralNode.CompareTo(IUriNode)
  fullName: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IUriNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 314
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns an Integer indicating the Ordering of this Node compared to another Node.\n"
  example: []
  syntax:
    content: public override int CompareTo(IUriNode other)
    parameters:
    - id: other
      type: VDS.RDF.IUriNode
      description: Node to test against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function CompareTo(other As IUriNode) As Integer
  overridden: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
  overload: VDS.RDF.BaseGraphLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IUriNode}.CompareTo(VDS.RDF.IUriNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IVariableNode)
  id: CompareTo(VDS.RDF.IVariableNode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(IVariableNode)
  nameWithType: BaseGraphLiteralNode.CompareTo(IVariableNode)
  fullName: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.IVariableNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 327
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns an Integer indicating the Ordering of this Node compared to another Node.\n"
  example: []
  syntax:
    content: public override int CompareTo(IVariableNode other)
    parameters:
    - id: other
      type: VDS.RDF.IVariableNode
      description: Node to test against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function CompareTo(other As IVariableNode) As Integer
  overridden: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
  overload: VDS.RDF.BaseGraphLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.IVariableNode}.CompareTo(VDS.RDF.IVariableNode)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.BaseGraphLiteralNode)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.BaseGraphLiteralNode)
  id: CompareTo(VDS.RDF.BaseGraphLiteralNode)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: CompareTo(BaseGraphLiteralNode)
  nameWithType: BaseGraphLiteralNode.CompareTo(BaseGraphLiteralNode)
  fullName: VDS.RDF.BaseGraphLiteralNode.CompareTo(VDS.RDF.BaseGraphLiteralNode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CompareTo
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 340
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReturns an Integer indicating the Ordering of this Node compared to another Node.\n"
  example: []
  syntax:
    content: public int CompareTo(BaseGraphLiteralNode other)
    parameters:
    - id: other
      type: VDS.RDF.BaseGraphLiteralNode
      description: Node to test against.
    return:
      type: System.Int32
      description: ''
    content.vb: Public Function CompareTo(other As BaseGraphLiteralNode) As Integer
  overload: VDS.RDF.BaseGraphLiteralNode.CompareTo*
  implements:
  - System.IComparable{VDS.RDF.BaseGraphLiteralNode}.CompareTo(VDS.RDF.BaseGraphLiteralNode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraphLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: BaseGraphLiteralNode.GetObjectData(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.BaseGraphLiteralNode.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetObjectData
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 353
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the Serialization Information.\n"
  example: []
  syntax:
    content: public override sealed void GetObjectData(SerializationInfo info, StreamingContext context)
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Serialization Information.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Streaming Context.
    content.vb: Public NotOverridable Overrides Sub GetObjectData(info As SerializationInfo, context As StreamingContext)
  overridden: VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  overload: VDS.RDF.BaseGraphLiteralNode.GetObjectData*
  implements:
  - System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: VDS.RDF.BaseGraphLiteralNode.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.ReadXml(System.Xml.XmlReader)
  id: ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: ReadXml(XmlReader)
  nameWithType: BaseGraphLiteralNode.ReadXml(XmlReader)
  fullName: VDS.RDF.BaseGraphLiteralNode.ReadXml(System.Xml.XmlReader)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ReadXml
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 362
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nReads the data for XML deserialization.\n"
  example: []
  syntax:
    content: public override sealed void ReadXml(XmlReader reader)
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: XML Reader.
    content.vb: Public NotOverridable Overrides Sub ReadXml(reader As XmlReader)
  overridden: VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
  overload: VDS.RDF.BaseGraphLiteralNode.ReadXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: VDS.RDF.BaseGraphLiteralNode.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.BaseGraphLiteralNode.WriteXml(System.Xml.XmlWriter)
  id: WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: WriteXml(XmlWriter)
  nameWithType: BaseGraphLiteralNode.WriteXml(XmlWriter)
  fullName: VDS.RDF.BaseGraphLiteralNode.WriteXml(System.Xml.XmlWriter)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: WriteXml
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 374
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nWrites the data for XML serialization.\n"
  example: []
  syntax:
    content: public override sealed void WriteXml(XmlWriter writer)
    parameters:
    - id: writer
      type: System.Xml.XmlWriter
      description: XML Writer.
    content.vb: Public NotOverridable Overrides Sub WriteXml(writer As XmlWriter)
  overridden: VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
  overload: VDS.RDF.BaseGraphLiteralNode.WriteXml*
  implements:
  - System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  modifiers.csharp:
  - public
  - override
  - sealed
  modifiers.vb:
  - Public
  - Overrides
  - NotOverridable
- uid: VDS.RDF.BaseGraphLiteralNode.AsString
  commentId: M:VDS.RDF.BaseGraphLiteralNode.AsString
  id: AsString
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: AsString()
  nameWithType: BaseGraphLiteralNode.AsString()
  fullName: VDS.RDF.BaseGraphLiteralNode.AsString()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsString
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 388
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nThrows an error as Graph Literals cannot be cast to a string.\n"
  example: []
  syntax:
    content: public string AsString()
    return:
      type: System.String
      description: ''
    content.vb: Public Function AsString As String
  overload: VDS.RDF.BaseGraphLiteralNode.AsString*
  implements:
  - VDS.RDF.Nodes.IValuedNode.AsString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraphLiteralNode.AsInteger
  commentId: M:VDS.RDF.BaseGraphLiteralNode.AsInteger
  id: AsInteger
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: AsInteger()
  nameWithType: BaseGraphLiteralNode.AsInteger()
  fullName: VDS.RDF.BaseGraphLiteralNode.AsInteger()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsInteger
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 397
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nThrows an error as Graph Literals cannot be cast to an integer.\n"
  example: []
  syntax:
    content: public long AsInteger()
    return:
      type: System.Int64
      description: ''
    content.vb: Public Function AsInteger As Long
  overload: VDS.RDF.BaseGraphLiteralNode.AsInteger*
  implements:
  - VDS.RDF.Nodes.IValuedNode.AsInteger
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraphLiteralNode.AsDecimal
  commentId: M:VDS.RDF.BaseGraphLiteralNode.AsDecimal
  id: AsDecimal
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: AsDecimal()
  nameWithType: BaseGraphLiteralNode.AsDecimal()
  fullName: VDS.RDF.BaseGraphLiteralNode.AsDecimal()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsDecimal
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 406
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nThrows an error as Graph Literals cannot be cast to a decimal.\n"
  example: []
  syntax:
    content: public decimal AsDecimal()
    return:
      type: System.Decimal
      description: ''
    content.vb: Public Function AsDecimal As Decimal
  overload: VDS.RDF.BaseGraphLiteralNode.AsDecimal*
  implements:
  - VDS.RDF.Nodes.IValuedNode.AsDecimal
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraphLiteralNode.AsFloat
  commentId: M:VDS.RDF.BaseGraphLiteralNode.AsFloat
  id: AsFloat
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: AsFloat()
  nameWithType: BaseGraphLiteralNode.AsFloat()
  fullName: VDS.RDF.BaseGraphLiteralNode.AsFloat()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsFloat
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 415
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nThrows an error as Graph Literals cannot be cast to a float.\n"
  example: []
  syntax:
    content: public float AsFloat()
    return:
      type: System.Single
      description: ''
    content.vb: Public Function AsFloat As Single
  overload: VDS.RDF.BaseGraphLiteralNode.AsFloat*
  implements:
  - VDS.RDF.Nodes.IValuedNode.AsFloat
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraphLiteralNode.AsDouble
  commentId: M:VDS.RDF.BaseGraphLiteralNode.AsDouble
  id: AsDouble
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: AsDouble()
  nameWithType: BaseGraphLiteralNode.AsDouble()
  fullName: VDS.RDF.BaseGraphLiteralNode.AsDouble()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsDouble
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 424
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nThrows an error as Graph Literals cannot be cast to a double.\n"
  example: []
  syntax:
    content: public double AsDouble()
    return:
      type: System.Double
      description: ''
    content.vb: Public Function AsDouble As Double
  overload: VDS.RDF.BaseGraphLiteralNode.AsDouble*
  implements:
  - VDS.RDF.Nodes.IValuedNode.AsDouble
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraphLiteralNode.AsBoolean
  commentId: M:VDS.RDF.BaseGraphLiteralNode.AsBoolean
  id: AsBoolean
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: AsBoolean()
  nameWithType: BaseGraphLiteralNode.AsBoolean()
  fullName: VDS.RDF.BaseGraphLiteralNode.AsBoolean()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsBoolean
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 433
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nThrows an error as Graph Literals cannot be cast to a boolean.\n"
  example: []
  syntax:
    content: public bool AsBoolean()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function AsBoolean As Boolean
  overload: VDS.RDF.BaseGraphLiteralNode.AsBoolean*
  implements:
  - VDS.RDF.Nodes.IValuedNode.AsBoolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraphLiteralNode.AsDateTime
  commentId: M:VDS.RDF.BaseGraphLiteralNode.AsDateTime
  id: AsDateTime
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: AsDateTime()
  nameWithType: BaseGraphLiteralNode.AsDateTime()
  fullName: VDS.RDF.BaseGraphLiteralNode.AsDateTime()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsDateTime
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 442
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nThrows an error as Graph Literals cannot be cast to a date time.\n"
  example: []
  syntax:
    content: public DateTime AsDateTime()
    return:
      type: System.DateTime
      description: ''
    content.vb: Public Function AsDateTime As Date
  overload: VDS.RDF.BaseGraphLiteralNode.AsDateTime*
  implements:
  - VDS.RDF.Nodes.IValuedNode.AsDateTime
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraphLiteralNode.AsDateTimeOffset
  commentId: M:VDS.RDF.BaseGraphLiteralNode.AsDateTimeOffset
  id: AsDateTimeOffset
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: AsDateTimeOffset()
  nameWithType: BaseGraphLiteralNode.AsDateTimeOffset()
  fullName: VDS.RDF.BaseGraphLiteralNode.AsDateTimeOffset()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsDateTimeOffset
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 451
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nThrows an error as Graph Literals cannot be cast to a date time.\n"
  example: []
  syntax:
    content: public DateTimeOffset AsDateTimeOffset()
    return:
      type: System.DateTimeOffset
      description: ''
    content.vb: Public Function AsDateTimeOffset As DateTimeOffset
  overload: VDS.RDF.BaseGraphLiteralNode.AsDateTimeOffset*
  implements:
  - VDS.RDF.Nodes.IValuedNode.AsDateTimeOffset
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraphLiteralNode.AsTimeSpan
  commentId: M:VDS.RDF.BaseGraphLiteralNode.AsTimeSpan
  id: AsTimeSpan
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: AsTimeSpan()
  nameWithType: BaseGraphLiteralNode.AsTimeSpan()
  fullName: VDS.RDF.BaseGraphLiteralNode.AsTimeSpan()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AsTimeSpan
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 460
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nThrows an error as Graph Literals cannot be cast to a time span.\n"
  example: []
  syntax:
    content: public TimeSpan AsTimeSpan()
    return:
      type: System.TimeSpan
      description: ''
    content.vb: Public Function AsTimeSpan As TimeSpan
  overload: VDS.RDF.BaseGraphLiteralNode.AsTimeSpan*
  implements:
  - VDS.RDF.Nodes.IValuedNode.AsTimeSpan
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.BaseGraphLiteralNode.EffectiveType
  commentId: P:VDS.RDF.BaseGraphLiteralNode.EffectiveType
  id: EffectiveType
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: EffectiveType
  nameWithType: BaseGraphLiteralNode.EffectiveType
  fullName: VDS.RDF.BaseGraphLiteralNode.EffectiveType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EffectiveType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 468
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the URI of the datatype this valued node represents as a String.\n"
  example: []
  syntax:
    content: public string EffectiveType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EffectiveType As String
  overload: VDS.RDF.BaseGraphLiteralNode.EffectiveType*
  implements:
  - VDS.RDF.Nodes.IValuedNode.EffectiveType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.BaseGraphLiteralNode.NumericType
  commentId: P:VDS.RDF.BaseGraphLiteralNode.NumericType
  id: NumericType
  parent: VDS.RDF.BaseGraphLiteralNode
  langs:
  - csharp
  - vb
  name: NumericType
  nameWithType: BaseGraphLiteralNode.NumericType
  fullName: VDS.RDF.BaseGraphLiteralNode.NumericType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Core/GraphLiteralNode.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NumericType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Core/GraphLiteralNode.cs
    startLine: 479
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nGets the numeric type of the node.\n"
  example: []
  syntax:
    content: public SparqlNumericType NumericType { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Expressions.SparqlNumericType
    content.vb: Public ReadOnly Property NumericType As SparqlNumericType
  overload: VDS.RDF.BaseGraphLiteralNode.NumericType*
  implements:
  - VDS.RDF.Nodes.IValuedNode.NumericType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.BaseNode
  commentId: T:VDS.RDF.BaseNode
  parent: VDS.RDF
  name: BaseNode
  nameWithType: BaseNode
  fullName: VDS.RDF.BaseNode
- uid: VDS.RDF.IGraphLiteralNode
  commentId: T:VDS.RDF.IGraphLiteralNode
  parent: VDS.RDF
  name: IGraphLiteralNode
  nameWithType: IGraphLiteralNode
  fullName: VDS.RDF.IGraphLiteralNode
- uid: System.IEquatable{VDS.RDF.BaseGraphLiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.BaseGraphLiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<BaseGraphLiteralNode>
  nameWithType: IEquatable<BaseGraphLiteralNode>
  fullName: System.IEquatable<VDS.RDF.BaseGraphLiteralNode>
  nameWithType.vb: IEquatable(Of BaseGraphLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.BaseGraphLiteralNode)
  name.vb: IEquatable(Of BaseGraphLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.BaseGraphLiteralNode
    name: BaseGraphLiteralNode
    nameWithType: BaseGraphLiteralNode
    fullName: VDS.RDF.BaseGraphLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.BaseGraphLiteralNode
    name: BaseGraphLiteralNode
    nameWithType: BaseGraphLiteralNode
    fullName: VDS.RDF.BaseGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.BaseGraphLiteralNode}
  commentId: T:System.IComparable{VDS.RDF.BaseGraphLiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<BaseGraphLiteralNode>
  nameWithType: IComparable<BaseGraphLiteralNode>
  fullName: System.IComparable<VDS.RDF.BaseGraphLiteralNode>
  nameWithType.vb: IComparable(Of BaseGraphLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.BaseGraphLiteralNode)
  name.vb: IComparable(Of BaseGraphLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.BaseGraphLiteralNode
    name: BaseGraphLiteralNode
    nameWithType: BaseGraphLiteralNode
    fullName: VDS.RDF.BaseGraphLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.BaseGraphLiteralNode
    name: BaseGraphLiteralNode
    nameWithType: BaseGraphLiteralNode
    fullName: VDS.RDF.BaseGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Nodes.IValuedNode
  commentId: T:VDS.RDF.Nodes.IValuedNode
  parent: VDS.RDF.Nodes
  name: IValuedNode
  nameWithType: IValuedNode
  fullName: VDS.RDF.Nodes.IValuedNode
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: System.IComparable{VDS.RDF.INode}
  commentId: T:System.IComparable{VDS.RDF.INode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<INode>
  nameWithType: IComparable<INode>
  fullName: System.IComparable<VDS.RDF.INode>
  nameWithType.vb: IComparable(Of INode)
  fullName.vb: System.IComparable(Of VDS.RDF.INode)
  name.vb: IComparable(Of INode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IBlankNode}
  commentId: T:System.IComparable{VDS.RDF.IBlankNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IBlankNode>
  nameWithType: IComparable<IBlankNode>
  fullName: System.IComparable<VDS.RDF.IBlankNode>
  nameWithType.vb: IComparable(Of IBlankNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IBlankNode)
  name.vb: IComparable(Of IBlankNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IGraphLiteralNode}
  commentId: T:System.IComparable{VDS.RDF.IGraphLiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IGraphLiteralNode>
  nameWithType: IComparable<IGraphLiteralNode>
  fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>
  nameWithType.vb: IComparable(Of IGraphLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IGraphLiteralNode)
  name.vb: IComparable(Of IGraphLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.ILiteralNode}
  commentId: T:System.IComparable{VDS.RDF.ILiteralNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<ILiteralNode>
  nameWithType: IComparable<ILiteralNode>
  fullName: System.IComparable<VDS.RDF.ILiteralNode>
  nameWithType.vb: IComparable(Of ILiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.ILiteralNode)
  name.vb: IComparable(Of ILiteralNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IUriNode}
  commentId: T:System.IComparable{VDS.RDF.IUriNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IUriNode>
  nameWithType: IComparable<IUriNode>
  fullName: System.IComparable<VDS.RDF.IUriNode>
  nameWithType.vb: IComparable(Of IUriNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IUriNode)
  name.vb: IComparable(Of IUriNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IVariableNode}
  commentId: T:System.IComparable{VDS.RDF.IVariableNode}
  parent: System
  definition: System.IComparable`1
  name: IComparable<IVariableNode>
  nameWithType: IComparable<IVariableNode>
  fullName: System.IComparable<VDS.RDF.IVariableNode>
  nameWithType.vb: IComparable(Of IVariableNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IVariableNode)
  name.vb: IComparable(Of IVariableNode)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.INode}
  commentId: T:System.IEquatable{VDS.RDF.INode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<INode>
  nameWithType: IEquatable<INode>
  fullName: System.IEquatable<VDS.RDF.INode>
  nameWithType.vb: IEquatable(Of INode)
  fullName.vb: System.IEquatable(Of VDS.RDF.INode)
  name.vb: IEquatable(Of INode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IBlankNode}
  commentId: T:System.IEquatable{VDS.RDF.IBlankNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IBlankNode>
  nameWithType: IEquatable<IBlankNode>
  fullName: System.IEquatable<VDS.RDF.IBlankNode>
  nameWithType.vb: IEquatable(Of IBlankNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IBlankNode)
  name.vb: IEquatable(Of IBlankNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IGraphLiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.IGraphLiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IGraphLiteralNode>
  nameWithType: IEquatable<IGraphLiteralNode>
  fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>
  nameWithType.vb: IEquatable(Of IGraphLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IGraphLiteralNode)
  name.vb: IEquatable(Of IGraphLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.ILiteralNode}
  commentId: T:System.IEquatable{VDS.RDF.ILiteralNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<ILiteralNode>
  nameWithType: IEquatable<ILiteralNode>
  fullName: System.IEquatable<VDS.RDF.ILiteralNode>
  nameWithType.vb: IEquatable(Of ILiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.ILiteralNode)
  name.vb: IEquatable(Of ILiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IUriNode}
  commentId: T:System.IEquatable{VDS.RDF.IUriNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IUriNode>
  nameWithType: IEquatable<IUriNode>
  fullName: System.IEquatable<VDS.RDF.IUriNode>
  nameWithType.vb: IEquatable(Of IUriNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IUriNode)
  name.vb: IEquatable(Of IUriNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IVariableNode}
  commentId: T:System.IEquatable{VDS.RDF.IVariableNode}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<IVariableNode>
  nameWithType: IEquatable<IVariableNode>
  fullName: System.IEquatable<VDS.RDF.IVariableNode>
  nameWithType.vb: IEquatable(Of IVariableNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IVariableNode)
  name.vb: IEquatable(Of IVariableNode)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Xml.Serialization.IXmlSerializable
  commentId: T:System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: VDS.RDF.BaseNode._graph
  commentId: F:VDS.RDF.BaseNode._graph
  parent: VDS.RDF.BaseNode
  name: _graph
  nameWithType: BaseNode._graph
  fullName: VDS.RDF.BaseNode._graph
- uid: VDS.RDF.BaseNode._graphUri
  commentId: F:VDS.RDF.BaseNode._graphUri
  parent: VDS.RDF.BaseNode
  name: _graphUri
  nameWithType: BaseNode._graphUri
  fullName: VDS.RDF.BaseNode._graphUri
- uid: VDS.RDF.BaseNode._nodetype
  commentId: F:VDS.RDF.BaseNode._nodetype
  parent: VDS.RDF.BaseNode
  name: _nodetype
  nameWithType: BaseNode._nodetype
  fullName: VDS.RDF.BaseNode._nodetype
- uid: VDS.RDF.BaseNode._hashcode
  commentId: F:VDS.RDF.BaseNode._hashcode
  parent: VDS.RDF.BaseNode
  name: _hashcode
  nameWithType: BaseNode._hashcode
  fullName: VDS.RDF.BaseNode._hashcode
- uid: VDS.RDF.BaseNode.NodeType
  commentId: P:VDS.RDF.BaseNode.NodeType
  parent: VDS.RDF.BaseNode
  name: NodeType
  nameWithType: BaseNode.NodeType
  fullName: VDS.RDF.BaseNode.NodeType
- uid: VDS.RDF.BaseNode.Graph
  commentId: P:VDS.RDF.BaseNode.Graph
  parent: VDS.RDF.BaseNode
  name: Graph
  nameWithType: BaseNode.Graph
  fullName: VDS.RDF.BaseNode.Graph
- uid: VDS.RDF.BaseNode.GraphUri
  commentId: P:VDS.RDF.BaseNode.GraphUri
  parent: VDS.RDF.BaseNode
  name: GraphUri
  nameWithType: BaseNode.GraphUri
  fullName: VDS.RDF.BaseNode.GraphUri
- uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  commentId: M:VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  parent: VDS.RDF.BaseNode
  name: ToString(INodeFormatter)
  nameWithType: BaseNode.ToString(INodeFormatter)
  fullName: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter)
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  commentId: M:VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
  parent: VDS.RDF.BaseNode
  name: ToString(INodeFormatter, TripleSegment)
  nameWithType: BaseNode.ToString(INodeFormatter, TripleSegment)
  fullName: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter, VDS.RDF.Writing.TripleSegment)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Writing.TripleSegment
    name: TripleSegment
    nameWithType: TripleSegment
    fullName: VDS.RDF.Writing.TripleSegment
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.ToString(VDS.RDF.Writing.Formatting.INodeFormatter,VDS.RDF.Writing.TripleSegment)
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Writing.Formatting.INodeFormatter
    name: INodeFormatter
    nameWithType: INodeFormatter
    fullName: VDS.RDF.Writing.Formatting.INodeFormatter
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Writing.TripleSegment
    name: TripleSegment
    nameWithType: TripleSegment
    fullName: VDS.RDF.Writing.TripleSegment
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.GetHashCode
  commentId: M:VDS.RDF.BaseNode.GetHashCode
  parent: VDS.RDF.BaseNode
  name: GetHashCode()
  nameWithType: BaseNode.GetHashCode()
  fullName: VDS.RDF.BaseNode.GetHashCode()
  spec.csharp:
  - uid: VDS.RDF.BaseNode.GetHashCode
    name: GetHashCode
    nameWithType: BaseNode.GetHashCode
    fullName: VDS.RDF.BaseNode.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.GetHashCode
    name: GetHashCode
    nameWithType: BaseNode.GetHashCode
    fullName: VDS.RDF.BaseNode.GetHashCode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.GetSchema
  commentId: M:VDS.RDF.BaseNode.GetSchema
  parent: VDS.RDF.BaseNode
  name: GetSchema()
  nameWithType: BaseNode.GetSchema()
  fullName: VDS.RDF.BaseNode.GetSchema()
  spec.csharp:
  - uid: VDS.RDF.BaseNode.GetSchema
    name: GetSchema
    nameWithType: BaseNode.GetSchema
    fullName: VDS.RDF.BaseNode.GetSchema
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.GetSchema
    name: GetSchema
    nameWithType: BaseNode.GetSchema
    fullName: VDS.RDF.BaseNode.GetSchema
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraphLiteralNode.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseGraphLiteralNode>()
  nameWithType: Extensions.AsEnumerable<BaseGraphLiteralNode>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.BaseGraphLiteralNode>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseGraphLiteralNode)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.BaseGraphLiteralNode)()
  name.vb: AsEnumerable(Of BaseGraphLiteralNode)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseGraphLiteralNode>
    nameWithType: Extensions.AsEnumerable<BaseGraphLiteralNode>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.BaseGraphLiteralNode>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseGraphLiteralNode)
    nameWithType: Extensions.AsEnumerable(Of BaseGraphLiteralNode)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.BaseGraphLiteralNode)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  name: IsListRoot(IGraph)
  nameWithType: Extensions.IsListRoot(IGraph)
  fullName: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  name: CopyNode(IGraph)
  nameWithType: Extensions.CopyNode(IGraph)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  name: CopyNode(IGraph, Boolean)
  nameWithType: Extensions.CopyNode(IGraph, Boolean)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  parent: VDS.RDF.Dynamic.DynamicExtensions
  definition: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  name: AsDynamic(Uri)
  nameWithType: DynamicExtensions.AsDynamic(Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode.VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  parent: VDS.RDF.Nodes.ValuedNodeExtensions
  definition: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  name: AsValuedNode()
  nameWithType: ValuedNodeExtensions.AsValuedNode()
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode()
  spec.csharp:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Nodes.IValuedNode.VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean(VDS.RDF.Nodes.IValuedNode)
  parent: VDS.RDF.Nodes.ValuedNodeExtensions
  definition: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean(VDS.RDF.Nodes.IValuedNode)
  name: AsSafeBoolean()
  nameWithType: ValuedNodeExtensions.AsSafeBoolean()
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean()
  spec.csharp:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean
    name: AsSafeBoolean
    nameWithType: ValuedNodeExtensions.AsSafeBoolean
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean
    name: AsSafeBoolean
    nameWithType: ValuedNodeExtensions.AsSafeBoolean
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: System.Xml.Serialization
  commentId: N:System.Xml.Serialization
  isExternal: true
  name: System.Xml.Serialization
  nameWithType: System.Xml.Serialization
  fullName: System.Xml.Serialization
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
  name: IsListRoot(INode, IGraph)
  nameWithType: Extensions.IsListRoot(INode, IGraph)
  fullName: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode, VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.IsListRoot(VDS.RDF.INode,VDS.RDF.IGraph)
    name: IsListRoot
    nameWithType: Extensions.IsListRoot
    fullName: VDS.RDF.Extensions.IsListRoot
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
  name: CopyNode(INode, IGraph)
  nameWithType: Extensions.CopyNode(INode, IGraph)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode, VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
  isExternal: true
  name: CopyNode(INode, IGraph, Boolean)
  nameWithType: Extensions.CopyNode(INode, IGraph, Boolean)
  fullName: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode, VDS.RDF.IGraph, System.Boolean)
  spec.csharp:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.CopyNode(VDS.RDF.INode,VDS.RDF.IGraph,System.Boolean)
    name: CopyNode
    nameWithType: Extensions.CopyNode
    fullName: VDS.RDF.Extensions.CopyNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  commentId: M:VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
  isExternal: true
  name: AsDynamic(INode, Uri)
  nameWithType: DynamicExtensions.AsDynamic(INode, Uri)
  fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode, System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic(VDS.RDF.INode,System.Uri)
    name: AsDynamic
    nameWithType: DynamicExtensions.AsDynamic
    fullName: VDS.RDF.Dynamic.DynamicExtensions.AsDynamic
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicExtensions
  commentId: T:VDS.RDF.Dynamic.DynamicExtensions
  parent: VDS.RDF.Dynamic
  name: DynamicExtensions
  nameWithType: DynamicExtensions
  fullName: VDS.RDF.Dynamic.DynamicExtensions
- uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  name: AsValuedNode(INode)
  nameWithType: ValuedNodeExtensions.AsValuedNode(INode)
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode(VDS.RDF.INode)
    name: AsValuedNode
    nameWithType: ValuedNodeExtensions.AsValuedNode
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsValuedNode
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Nodes.ValuedNodeExtensions
  commentId: T:VDS.RDF.Nodes.ValuedNodeExtensions
  parent: VDS.RDF.Nodes
  name: ValuedNodeExtensions
  nameWithType: ValuedNodeExtensions
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions
- uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean(VDS.RDF.Nodes.IValuedNode)
  commentId: M:VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean(VDS.RDF.Nodes.IValuedNode)
  name: AsSafeBoolean(IValuedNode)
  nameWithType: ValuedNodeExtensions.AsSafeBoolean(IValuedNode)
  fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean(VDS.RDF.Nodes.IValuedNode)
  spec.csharp:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean(VDS.RDF.Nodes.IValuedNode)
    name: AsSafeBoolean
    nameWithType: ValuedNodeExtensions.AsSafeBoolean
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Nodes.IValuedNode
    name: IValuedNode
    nameWithType: IValuedNode
    fullName: VDS.RDF.Nodes.IValuedNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean(VDS.RDF.Nodes.IValuedNode)
    name: AsSafeBoolean
    nameWithType: ValuedNodeExtensions.AsSafeBoolean
    fullName: VDS.RDF.Nodes.ValuedNodeExtensions.AsSafeBoolean
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Nodes.IValuedNode
    name: IValuedNode
    nameWithType: IValuedNode
    fullName: VDS.RDF.Nodes.IValuedNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic
  commentId: N:VDS.RDF.Dynamic
  name: VDS.RDF.Dynamic
  nameWithType: VDS.RDF.Dynamic
  fullName: VDS.RDF.Dynamic
- uid: VDS.RDF.BaseGraphLiteralNode.#ctor*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.#ctor
  name: BaseGraphLiteralNode
  nameWithType: BaseGraphLiteralNode.BaseGraphLiteralNode
  fullName: VDS.RDF.BaseGraphLiteralNode.BaseGraphLiteralNode
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: System.Runtime.Serialization.SerializationInfo
  commentId: T:System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: true
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  commentId: T:System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: VDS.RDF.BaseGraphLiteralNode.SubGraph*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.SubGraph
  name: SubGraph
  nameWithType: BaseGraphLiteralNode.SubGraph
  fullName: VDS.RDF.BaseGraphLiteralNode.SubGraph
- uid: VDS.RDF.IGraphLiteralNode.SubGraph
  commentId: P:VDS.RDF.IGraphLiteralNode.SubGraph
  parent: VDS.RDF.IGraphLiteralNode
  name: SubGraph
  nameWithType: IGraphLiteralNode.SubGraph
  fullName: VDS.RDF.IGraphLiteralNode.SubGraph
- uid: VDS.RDF.BaseNode.Equals(System.Object)
  commentId: M:VDS.RDF.BaseNode.Equals(System.Object)
  parent: VDS.RDF.BaseNode
  isExternal: true
  name: Equals(Object)
  nameWithType: BaseNode.Equals(Object)
  fullName: VDS.RDF.BaseNode.Equals(System.Object)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(System.Object)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(System.Object)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraphLiteralNode.Equals*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.Equals
  name: Equals
  nameWithType: BaseGraphLiteralNode.Equals
  fullName: VDS.RDF.BaseGraphLiteralNode.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
  parent: VDS.RDF.BaseNode
  name: Equals(INode)
  nameWithType: BaseNode.Equals(INode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.INode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.INode}.Equals(VDS.RDF.INode)
  commentId: M:System.IEquatable{VDS.RDF.INode}.Equals(VDS.RDF.INode)
  parent: System.IEquatable{VDS.RDF.INode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(INode)
  nameWithType: IEquatable<INode>.Equals(INode)
  fullName: System.IEquatable<VDS.RDF.INode>.Equals(VDS.RDF.INode)
  nameWithType.vb: IEquatable(Of INode).Equals(INode)
  fullName.vb: System.IEquatable(Of VDS.RDF.INode).Equals(VDS.RDF.INode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<INode>.Equals
    fullName: System.IEquatable<VDS.RDF.INode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of INode).Equals
    fullName: System.IEquatable(Of VDS.RDF.INode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
  parent: VDS.RDF.BaseNode
  name: Equals(IBlankNode)
  nameWithType: BaseNode.Equals(IBlankNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IBlankNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IBlankNode}.Equals(VDS.RDF.IBlankNode)
  commentId: M:System.IEquatable{VDS.RDF.IBlankNode}.Equals(VDS.RDF.IBlankNode)
  parent: System.IEquatable{VDS.RDF.IBlankNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IBlankNode)
  nameWithType: IEquatable<IBlankNode>.Equals(IBlankNode)
  fullName: System.IEquatable<VDS.RDF.IBlankNode>.Equals(VDS.RDF.IBlankNode)
  nameWithType.vb: IEquatable(Of IBlankNode).Equals(IBlankNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IBlankNode).Equals(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IBlankNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IBlankNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IBlankNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IBlankNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IBlankNode
  commentId: T:VDS.RDF.IBlankNode
  parent: VDS.RDF
  name: IBlankNode
  nameWithType: IBlankNode
  fullName: VDS.RDF.IBlankNode
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.BaseNode
  name: Equals(IGraphLiteralNode)
  nameWithType: BaseNode.Equals(IGraphLiteralNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IGraphLiteralNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IGraphLiteralNode}.Equals(VDS.RDF.IGraphLiteralNode)
  commentId: M:System.IEquatable{VDS.RDF.IGraphLiteralNode}.Equals(VDS.RDF.IGraphLiteralNode)
  parent: System.IEquatable{VDS.RDF.IGraphLiteralNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IGraphLiteralNode)
  nameWithType: IEquatable<IGraphLiteralNode>.Equals(IGraphLiteralNode)
  fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>.Equals(VDS.RDF.IGraphLiteralNode)
  nameWithType.vb: IEquatable(Of IGraphLiteralNode).Equals(IGraphLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IGraphLiteralNode).Equals(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IGraphLiteralNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IGraphLiteralNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IGraphLiteralNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IGraphLiteralNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.BaseNode
  name: Equals(ILiteralNode)
  nameWithType: BaseNode.Equals(ILiteralNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.ILiteralNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.ILiteralNode}.Equals(VDS.RDF.ILiteralNode)
  commentId: M:System.IEquatable{VDS.RDF.ILiteralNode}.Equals(VDS.RDF.ILiteralNode)
  parent: System.IEquatable{VDS.RDF.ILiteralNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(ILiteralNode)
  nameWithType: IEquatable<ILiteralNode>.Equals(ILiteralNode)
  fullName: System.IEquatable<VDS.RDF.ILiteralNode>.Equals(VDS.RDF.ILiteralNode)
  nameWithType.vb: IEquatable(Of ILiteralNode).Equals(ILiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.ILiteralNode).Equals(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<ILiteralNode>.Equals
    fullName: System.IEquatable<VDS.RDF.ILiteralNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of ILiteralNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.ILiteralNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.ILiteralNode
  commentId: T:VDS.RDF.ILiteralNode
  parent: VDS.RDF
  name: ILiteralNode
  nameWithType: ILiteralNode
  fullName: VDS.RDF.ILiteralNode
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
  parent: VDS.RDF.BaseNode
  name: Equals(IUriNode)
  nameWithType: BaseNode.Equals(IUriNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IUriNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IUriNode}.Equals(VDS.RDF.IUriNode)
  commentId: M:System.IEquatable{VDS.RDF.IUriNode}.Equals(VDS.RDF.IUriNode)
  parent: System.IEquatable{VDS.RDF.IUriNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IUriNode)
  nameWithType: IEquatable<IUriNode>.Equals(IUriNode)
  fullName: System.IEquatable<VDS.RDF.IUriNode>.Equals(VDS.RDF.IUriNode)
  nameWithType.vb: IEquatable(Of IUriNode).Equals(IUriNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IUriNode).Equals(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IUriNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IUriNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IUriNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IUriNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IUriNode
  commentId: T:VDS.RDF.IUriNode
  parent: VDS.RDF
  name: IUriNode
  nameWithType: IUriNode
  fullName: VDS.RDF.IUriNode
- uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
  parent: VDS.RDF.BaseNode
  name: Equals(IVariableNode)
  nameWithType: BaseNode.Equals(IVariableNode)
  fullName: VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.Equals(VDS.RDF.IVariableNode)
    name: Equals
    nameWithType: BaseNode.Equals
    fullName: VDS.RDF.BaseNode.Equals
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{VDS.RDF.IVariableNode}.Equals(VDS.RDF.IVariableNode)
  commentId: M:System.IEquatable{VDS.RDF.IVariableNode}.Equals(VDS.RDF.IVariableNode)
  parent: System.IEquatable{VDS.RDF.IVariableNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(IVariableNode)
  nameWithType: IEquatable<IVariableNode>.Equals(IVariableNode)
  fullName: System.IEquatable<VDS.RDF.IVariableNode>.Equals(VDS.RDF.IVariableNode)
  nameWithType.vb: IEquatable(Of IVariableNode).Equals(IVariableNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.IVariableNode).Equals(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<IVariableNode>.Equals
    fullName: System.IEquatable<VDS.RDF.IVariableNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of IVariableNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.IVariableNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.IVariableNode
  commentId: T:VDS.RDF.IVariableNode
  parent: VDS.RDF
  name: IVariableNode
  nameWithType: IVariableNode
  fullName: VDS.RDF.IVariableNode
- uid: System.IEquatable{VDS.RDF.BaseGraphLiteralNode}.Equals(VDS.RDF.BaseGraphLiteralNode)
  commentId: M:System.IEquatable{VDS.RDF.BaseGraphLiteralNode}.Equals(VDS.RDF.BaseGraphLiteralNode)
  parent: System.IEquatable{VDS.RDF.BaseGraphLiteralNode}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(BaseGraphLiteralNode)
  nameWithType: IEquatable<BaseGraphLiteralNode>.Equals(BaseGraphLiteralNode)
  fullName: System.IEquatable<VDS.RDF.BaseGraphLiteralNode>.Equals(VDS.RDF.BaseGraphLiteralNode)
  nameWithType.vb: IEquatable(Of BaseGraphLiteralNode).Equals(BaseGraphLiteralNode)
  fullName.vb: System.IEquatable(Of VDS.RDF.BaseGraphLiteralNode).Equals(VDS.RDF.BaseGraphLiteralNode)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<BaseGraphLiteralNode>.Equals
    fullName: System.IEquatable<VDS.RDF.BaseGraphLiteralNode>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.BaseGraphLiteralNode
    name: BaseGraphLiteralNode
    nameWithType: BaseGraphLiteralNode
    fullName: VDS.RDF.BaseGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of BaseGraphLiteralNode).Equals
    fullName: System.IEquatable(Of VDS.RDF.BaseGraphLiteralNode).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.BaseGraphLiteralNode
    name: BaseGraphLiteralNode
    nameWithType: BaseGraphLiteralNode
    fullName: VDS.RDF.BaseGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraphLiteralNode
  commentId: T:VDS.RDF.BaseGraphLiteralNode
  parent: VDS.RDF
  name: BaseGraphLiteralNode
  nameWithType: BaseGraphLiteralNode
  fullName: VDS.RDF.BaseGraphLiteralNode
- uid: VDS.RDF.BaseNode.ToString
  commentId: M:VDS.RDF.BaseNode.ToString
  parent: VDS.RDF.BaseNode
  name: ToString()
  nameWithType: BaseNode.ToString()
  fullName: VDS.RDF.BaseNode.ToString()
  spec.csharp:
  - uid: VDS.RDF.BaseNode.ToString
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.ToString
    name: ToString
    nameWithType: BaseNode.ToString
    fullName: VDS.RDF.BaseNode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraphLiteralNode.ToString*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.ToString
  name: ToString
  nameWithType: BaseGraphLiteralNode.ToString
  fullName: VDS.RDF.BaseGraphLiteralNode.ToString
- uid: VDS.RDF.INode.ToString
  commentId: M:VDS.RDF.INode.ToString
  parent: VDS.RDF.INode
  name: ToString()
  nameWithType: INode.ToString()
  fullName: VDS.RDF.INode.ToString()
  spec.csharp:
  - uid: VDS.RDF.INode.ToString
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.INode.ToString
    name: ToString
    nameWithType: INode.ToString
    fullName: VDS.RDF.INode.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
  parent: VDS.RDF.BaseNode
  name: CompareTo(INode)
  nameWithType: BaseNode.CompareTo(INode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.INode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraphLiteralNode.CompareTo*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.CompareTo
  name: CompareTo
  nameWithType: BaseGraphLiteralNode.CompareTo
  fullName: VDS.RDF.BaseGraphLiteralNode.CompareTo
- uid: System.IComparable{VDS.RDF.INode}.CompareTo(VDS.RDF.INode)
  commentId: M:System.IComparable{VDS.RDF.INode}.CompareTo(VDS.RDF.INode)
  parent: System.IComparable{VDS.RDF.INode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(INode)
  nameWithType: IComparable<INode>.CompareTo(INode)
  fullName: System.IComparable<VDS.RDF.INode>.CompareTo(VDS.RDF.INode)
  nameWithType.vb: IComparable(Of INode).CompareTo(INode)
  fullName.vb: System.IComparable(Of VDS.RDF.INode).CompareTo(VDS.RDF.INode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<INode>.CompareTo
    fullName: System.IComparable<VDS.RDF.INode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of INode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.INode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
  parent: VDS.RDF.BaseNode
  name: CompareTo(IBlankNode)
  nameWithType: BaseNode.CompareTo(IBlankNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IBlankNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IBlankNode}.CompareTo(VDS.RDF.IBlankNode)
  commentId: M:System.IComparable{VDS.RDF.IBlankNode}.CompareTo(VDS.RDF.IBlankNode)
  parent: System.IComparable{VDS.RDF.IBlankNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IBlankNode)
  nameWithType: IComparable<IBlankNode>.CompareTo(IBlankNode)
  fullName: System.IComparable<VDS.RDF.IBlankNode>.CompareTo(VDS.RDF.IBlankNode)
  nameWithType.vb: IComparable(Of IBlankNode).CompareTo(IBlankNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IBlankNode).CompareTo(VDS.RDF.IBlankNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IBlankNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IBlankNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IBlankNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IBlankNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IBlankNode
    name: IBlankNode
    nameWithType: IBlankNode
    fullName: VDS.RDF.IBlankNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  parent: VDS.RDF.BaseNode
  name: CompareTo(IGraphLiteralNode)
  nameWithType: BaseNode.CompareTo(IGraphLiteralNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IGraphLiteralNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IGraphLiteralNode}.CompareTo(VDS.RDF.IGraphLiteralNode)
  commentId: M:System.IComparable{VDS.RDF.IGraphLiteralNode}.CompareTo(VDS.RDF.IGraphLiteralNode)
  parent: System.IComparable{VDS.RDF.IGraphLiteralNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IGraphLiteralNode)
  nameWithType: IComparable<IGraphLiteralNode>.CompareTo(IGraphLiteralNode)
  fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>.CompareTo(VDS.RDF.IGraphLiteralNode)
  nameWithType.vb: IComparable(Of IGraphLiteralNode).CompareTo(IGraphLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IGraphLiteralNode).CompareTo(VDS.RDF.IGraphLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IGraphLiteralNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IGraphLiteralNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IGraphLiteralNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IGraphLiteralNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraphLiteralNode
    name: IGraphLiteralNode
    nameWithType: IGraphLiteralNode
    fullName: VDS.RDF.IGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
  parent: VDS.RDF.BaseNode
  name: CompareTo(ILiteralNode)
  nameWithType: BaseNode.CompareTo(ILiteralNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.ILiteralNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.ILiteralNode}.CompareTo(VDS.RDF.ILiteralNode)
  commentId: M:System.IComparable{VDS.RDF.ILiteralNode}.CompareTo(VDS.RDF.ILiteralNode)
  parent: System.IComparable{VDS.RDF.ILiteralNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(ILiteralNode)
  nameWithType: IComparable<ILiteralNode>.CompareTo(ILiteralNode)
  fullName: System.IComparable<VDS.RDF.ILiteralNode>.CompareTo(VDS.RDF.ILiteralNode)
  nameWithType.vb: IComparable(Of ILiteralNode).CompareTo(ILiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.ILiteralNode).CompareTo(VDS.RDF.ILiteralNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<ILiteralNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.ILiteralNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of ILiteralNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.ILiteralNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.ILiteralNode
    name: ILiteralNode
    nameWithType: ILiteralNode
    fullName: VDS.RDF.ILiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
  parent: VDS.RDF.BaseNode
  name: CompareTo(IUriNode)
  nameWithType: BaseNode.CompareTo(IUriNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IUriNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IUriNode}.CompareTo(VDS.RDF.IUriNode)
  commentId: M:System.IComparable{VDS.RDF.IUriNode}.CompareTo(VDS.RDF.IUriNode)
  parent: System.IComparable{VDS.RDF.IUriNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IUriNode)
  nameWithType: IComparable<IUriNode>.CompareTo(IUriNode)
  fullName: System.IComparable<VDS.RDF.IUriNode>.CompareTo(VDS.RDF.IUriNode)
  nameWithType.vb: IComparable(Of IUriNode).CompareTo(IUriNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IUriNode).CompareTo(VDS.RDF.IUriNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IUriNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IUriNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IUriNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IUriNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IUriNode
    name: IUriNode
    nameWithType: IUriNode
    fullName: VDS.RDF.IUriNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
  commentId: M:VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
  parent: VDS.RDF.BaseNode
  name: CompareTo(IVariableNode)
  nameWithType: BaseNode.CompareTo(IVariableNode)
  fullName: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.CompareTo(VDS.RDF.IVariableNode)
    name: CompareTo
    nameWithType: BaseNode.CompareTo
    fullName: VDS.RDF.BaseNode.CompareTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.IVariableNode}.CompareTo(VDS.RDF.IVariableNode)
  commentId: M:System.IComparable{VDS.RDF.IVariableNode}.CompareTo(VDS.RDF.IVariableNode)
  parent: System.IComparable{VDS.RDF.IVariableNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(IVariableNode)
  nameWithType: IComparable<IVariableNode>.CompareTo(IVariableNode)
  fullName: System.IComparable<VDS.RDF.IVariableNode>.CompareTo(VDS.RDF.IVariableNode)
  nameWithType.vb: IComparable(Of IVariableNode).CompareTo(IVariableNode)
  fullName.vb: System.IComparable(Of VDS.RDF.IVariableNode).CompareTo(VDS.RDF.IVariableNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<IVariableNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.IVariableNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of IVariableNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.IVariableNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IVariableNode
    name: IVariableNode
    nameWithType: IVariableNode
    fullName: VDS.RDF.IVariableNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IComparable{VDS.RDF.BaseGraphLiteralNode}.CompareTo(VDS.RDF.BaseGraphLiteralNode)
  commentId: M:System.IComparable{VDS.RDF.BaseGraphLiteralNode}.CompareTo(VDS.RDF.BaseGraphLiteralNode)
  parent: System.IComparable{VDS.RDF.BaseGraphLiteralNode}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(BaseGraphLiteralNode)
  nameWithType: IComparable<BaseGraphLiteralNode>.CompareTo(BaseGraphLiteralNode)
  fullName: System.IComparable<VDS.RDF.BaseGraphLiteralNode>.CompareTo(VDS.RDF.BaseGraphLiteralNode)
  nameWithType.vb: IComparable(Of BaseGraphLiteralNode).CompareTo(BaseGraphLiteralNode)
  fullName.vb: System.IComparable(Of VDS.RDF.BaseGraphLiteralNode).CompareTo(VDS.RDF.BaseGraphLiteralNode)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<BaseGraphLiteralNode>.CompareTo
    fullName: System.IComparable<VDS.RDF.BaseGraphLiteralNode>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.BaseGraphLiteralNode
    name: BaseGraphLiteralNode
    nameWithType: BaseGraphLiteralNode
    fullName: VDS.RDF.BaseGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of BaseGraphLiteralNode).CompareTo
    fullName: System.IComparable(Of VDS.RDF.BaseGraphLiteralNode).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.BaseGraphLiteralNode
    name: BaseGraphLiteralNode
    nameWithType: BaseGraphLiteralNode
    fullName: VDS.RDF.BaseGraphLiteralNode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: VDS.RDF.BaseNode
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: BaseNode.GetObjectData(SerializationInfo, StreamingContext)
  fullName: VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: BaseNode.GetObjectData
    fullName: VDS.RDF.BaseNode.GetObjectData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: BaseNode.GetObjectData
    fullName: VDS.RDF.BaseNode.GetObjectData
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraphLiteralNode.GetObjectData*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.GetObjectData
  name: GetObjectData
  nameWithType: BaseGraphLiteralNode.GetObjectData
  fullName: VDS.RDF.BaseGraphLiteralNode.GetObjectData
- uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ISerializable
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ISerializable.GetObjectData
    fullName: System.Runtime.Serialization.ISerializable.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
  commentId: M:VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
  parent: VDS.RDF.BaseNode
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: BaseNode.ReadXml(XmlReader)
  fullName: VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: BaseNode.ReadXml
    fullName: VDS.RDF.BaseNode.ReadXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: BaseNode.ReadXml
    fullName: VDS.RDF.BaseNode.ReadXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraphLiteralNode.ReadXml*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.ReadXml
  name: ReadXml
  nameWithType: BaseGraphLiteralNode.ReadXml
  fullName: VDS.RDF.BaseGraphLiteralNode.ReadXml
- uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  commentId: M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: ReadXml(XmlReader)
  nameWithType: IXmlSerializable.ReadXml(XmlReader)
  fullName: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)
    name: ReadXml
    nameWithType: IXmlSerializable.ReadXml
    fullName: System.Xml.Serialization.IXmlSerializable.ReadXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlReader
    name: XmlReader
    nameWithType: XmlReader
    fullName: System.Xml.XmlReader
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlReader
  commentId: T:System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml
  commentId: N:System.Xml
  isExternal: true
  name: System.Xml
  nameWithType: System.Xml
  fullName: System.Xml
- uid: VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
  commentId: M:VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
  parent: VDS.RDF.BaseNode
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: BaseNode.WriteXml(XmlWriter)
  fullName: VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: BaseNode.WriteXml
    fullName: VDS.RDF.BaseNode.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.BaseNode.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: BaseNode.WriteXml
    fullName: VDS.RDF.BaseNode.WriteXml
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraphLiteralNode.WriteXml*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.WriteXml
  name: WriteXml
  nameWithType: BaseGraphLiteralNode.WriteXml
  fullName: VDS.RDF.BaseGraphLiteralNode.WriteXml
- uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  commentId: M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  parent: System.Xml.Serialization.IXmlSerializable
  isExternal: true
  name: WriteXml(XmlWriter)
  nameWithType: IXmlSerializable.WriteXml(XmlWriter)
  fullName: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
  spec.csharp:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)
    name: WriteXml
    nameWithType: IXmlSerializable.WriteXml
    fullName: System.Xml.Serialization.IXmlSerializable.WriteXml
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Xml.XmlWriter
    name: XmlWriter
    nameWithType: XmlWriter
    fullName: System.Xml.XmlWriter
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Xml.XmlWriter
  commentId: T:System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: VDS.RDF.BaseGraphLiteralNode.AsString*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.AsString
  name: AsString
  nameWithType: BaseGraphLiteralNode.AsString
  fullName: VDS.RDF.BaseGraphLiteralNode.AsString
- uid: VDS.RDF.Nodes.IValuedNode.AsString
  commentId: M:VDS.RDF.Nodes.IValuedNode.AsString
  parent: VDS.RDF.Nodes.IValuedNode
  name: AsString()
  nameWithType: IValuedNode.AsString()
  fullName: VDS.RDF.Nodes.IValuedNode.AsString()
  spec.csharp:
  - uid: VDS.RDF.Nodes.IValuedNode.AsString
    name: AsString
    nameWithType: IValuedNode.AsString
    fullName: VDS.RDF.Nodes.IValuedNode.AsString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.IValuedNode.AsString
    name: AsString
    nameWithType: IValuedNode.AsString
    fullName: VDS.RDF.Nodes.IValuedNode.AsString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraphLiteralNode.AsInteger*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.AsInteger
  name: AsInteger
  nameWithType: BaseGraphLiteralNode.AsInteger
  fullName: VDS.RDF.BaseGraphLiteralNode.AsInteger
- uid: VDS.RDF.Nodes.IValuedNode.AsInteger
  commentId: M:VDS.RDF.Nodes.IValuedNode.AsInteger
  parent: VDS.RDF.Nodes.IValuedNode
  name: AsInteger()
  nameWithType: IValuedNode.AsInteger()
  fullName: VDS.RDF.Nodes.IValuedNode.AsInteger()
  spec.csharp:
  - uid: VDS.RDF.Nodes.IValuedNode.AsInteger
    name: AsInteger
    nameWithType: IValuedNode.AsInteger
    fullName: VDS.RDF.Nodes.IValuedNode.AsInteger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.IValuedNode.AsInteger
    name: AsInteger
    nameWithType: IValuedNode.AsInteger
    fullName: VDS.RDF.Nodes.IValuedNode.AsInteger
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: VDS.RDF.BaseGraphLiteralNode.AsDecimal*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.AsDecimal
  name: AsDecimal
  nameWithType: BaseGraphLiteralNode.AsDecimal
  fullName: VDS.RDF.BaseGraphLiteralNode.AsDecimal
- uid: VDS.RDF.Nodes.IValuedNode.AsDecimal
  commentId: M:VDS.RDF.Nodes.IValuedNode.AsDecimal
  parent: VDS.RDF.Nodes.IValuedNode
  name: AsDecimal()
  nameWithType: IValuedNode.AsDecimal()
  fullName: VDS.RDF.Nodes.IValuedNode.AsDecimal()
  spec.csharp:
  - uid: VDS.RDF.Nodes.IValuedNode.AsDecimal
    name: AsDecimal
    nameWithType: IValuedNode.AsDecimal
    fullName: VDS.RDF.Nodes.IValuedNode.AsDecimal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.IValuedNode.AsDecimal
    name: AsDecimal
    nameWithType: IValuedNode.AsDecimal
    fullName: VDS.RDF.Nodes.IValuedNode.AsDecimal
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: VDS.RDF.BaseGraphLiteralNode.AsFloat*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.AsFloat
  name: AsFloat
  nameWithType: BaseGraphLiteralNode.AsFloat
  fullName: VDS.RDF.BaseGraphLiteralNode.AsFloat
- uid: VDS.RDF.Nodes.IValuedNode.AsFloat
  commentId: M:VDS.RDF.Nodes.IValuedNode.AsFloat
  parent: VDS.RDF.Nodes.IValuedNode
  name: AsFloat()
  nameWithType: IValuedNode.AsFloat()
  fullName: VDS.RDF.Nodes.IValuedNode.AsFloat()
  spec.csharp:
  - uid: VDS.RDF.Nodes.IValuedNode.AsFloat
    name: AsFloat
    nameWithType: IValuedNode.AsFloat
    fullName: VDS.RDF.Nodes.IValuedNode.AsFloat
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.IValuedNode.AsFloat
    name: AsFloat
    nameWithType: IValuedNode.AsFloat
    fullName: VDS.RDF.Nodes.IValuedNode.AsFloat
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: VDS.RDF.BaseGraphLiteralNode.AsDouble*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.AsDouble
  name: AsDouble
  nameWithType: BaseGraphLiteralNode.AsDouble
  fullName: VDS.RDF.BaseGraphLiteralNode.AsDouble
- uid: VDS.RDF.Nodes.IValuedNode.AsDouble
  commentId: M:VDS.RDF.Nodes.IValuedNode.AsDouble
  parent: VDS.RDF.Nodes.IValuedNode
  name: AsDouble()
  nameWithType: IValuedNode.AsDouble()
  fullName: VDS.RDF.Nodes.IValuedNode.AsDouble()
  spec.csharp:
  - uid: VDS.RDF.Nodes.IValuedNode.AsDouble
    name: AsDouble
    nameWithType: IValuedNode.AsDouble
    fullName: VDS.RDF.Nodes.IValuedNode.AsDouble
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.IValuedNode.AsDouble
    name: AsDouble
    nameWithType: IValuedNode.AsDouble
    fullName: VDS.RDF.Nodes.IValuedNode.AsDouble
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: VDS.RDF.BaseGraphLiteralNode.AsBoolean*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.AsBoolean
  name: AsBoolean
  nameWithType: BaseGraphLiteralNode.AsBoolean
  fullName: VDS.RDF.BaseGraphLiteralNode.AsBoolean
- uid: VDS.RDF.Nodes.IValuedNode.AsBoolean
  commentId: M:VDS.RDF.Nodes.IValuedNode.AsBoolean
  parent: VDS.RDF.Nodes.IValuedNode
  name: AsBoolean()
  nameWithType: IValuedNode.AsBoolean()
  fullName: VDS.RDF.Nodes.IValuedNode.AsBoolean()
  spec.csharp:
  - uid: VDS.RDF.Nodes.IValuedNode.AsBoolean
    name: AsBoolean
    nameWithType: IValuedNode.AsBoolean
    fullName: VDS.RDF.Nodes.IValuedNode.AsBoolean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.IValuedNode.AsBoolean
    name: AsBoolean
    nameWithType: IValuedNode.AsBoolean
    fullName: VDS.RDF.Nodes.IValuedNode.AsBoolean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.BaseGraphLiteralNode.AsDateTime*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.AsDateTime
  name: AsDateTime
  nameWithType: BaseGraphLiteralNode.AsDateTime
  fullName: VDS.RDF.BaseGraphLiteralNode.AsDateTime
- uid: VDS.RDF.Nodes.IValuedNode.AsDateTime
  commentId: M:VDS.RDF.Nodes.IValuedNode.AsDateTime
  parent: VDS.RDF.Nodes.IValuedNode
  name: AsDateTime()
  nameWithType: IValuedNode.AsDateTime()
  fullName: VDS.RDF.Nodes.IValuedNode.AsDateTime()
  spec.csharp:
  - uid: VDS.RDF.Nodes.IValuedNode.AsDateTime
    name: AsDateTime
    nameWithType: IValuedNode.AsDateTime
    fullName: VDS.RDF.Nodes.IValuedNode.AsDateTime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.IValuedNode.AsDateTime
    name: AsDateTime
    nameWithType: IValuedNode.AsDateTime
    fullName: VDS.RDF.Nodes.IValuedNode.AsDateTime
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: VDS.RDF.BaseGraphLiteralNode.AsDateTimeOffset*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.AsDateTimeOffset
  name: AsDateTimeOffset
  nameWithType: BaseGraphLiteralNode.AsDateTimeOffset
  fullName: VDS.RDF.BaseGraphLiteralNode.AsDateTimeOffset
- uid: VDS.RDF.Nodes.IValuedNode.AsDateTimeOffset
  commentId: M:VDS.RDF.Nodes.IValuedNode.AsDateTimeOffset
  parent: VDS.RDF.Nodes.IValuedNode
  name: AsDateTimeOffset()
  nameWithType: IValuedNode.AsDateTimeOffset()
  fullName: VDS.RDF.Nodes.IValuedNode.AsDateTimeOffset()
  spec.csharp:
  - uid: VDS.RDF.Nodes.IValuedNode.AsDateTimeOffset
    name: AsDateTimeOffset
    nameWithType: IValuedNode.AsDateTimeOffset
    fullName: VDS.RDF.Nodes.IValuedNode.AsDateTimeOffset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.IValuedNode.AsDateTimeOffset
    name: AsDateTimeOffset
    nameWithType: IValuedNode.AsDateTimeOffset
    fullName: VDS.RDF.Nodes.IValuedNode.AsDateTimeOffset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DateTimeOffset
  commentId: T:System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: VDS.RDF.BaseGraphLiteralNode.AsTimeSpan*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.AsTimeSpan
  name: AsTimeSpan
  nameWithType: BaseGraphLiteralNode.AsTimeSpan
  fullName: VDS.RDF.BaseGraphLiteralNode.AsTimeSpan
- uid: VDS.RDF.Nodes.IValuedNode.AsTimeSpan
  commentId: M:VDS.RDF.Nodes.IValuedNode.AsTimeSpan
  parent: VDS.RDF.Nodes.IValuedNode
  name: AsTimeSpan()
  nameWithType: IValuedNode.AsTimeSpan()
  fullName: VDS.RDF.Nodes.IValuedNode.AsTimeSpan()
  spec.csharp:
  - uid: VDS.RDF.Nodes.IValuedNode.AsTimeSpan
    name: AsTimeSpan
    nameWithType: IValuedNode.AsTimeSpan
    fullName: VDS.RDF.Nodes.IValuedNode.AsTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Nodes.IValuedNode.AsTimeSpan
    name: AsTimeSpan
    nameWithType: IValuedNode.AsTimeSpan
    fullName: VDS.RDF.Nodes.IValuedNode.AsTimeSpan
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: VDS.RDF.BaseGraphLiteralNode.EffectiveType*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.EffectiveType
  name: EffectiveType
  nameWithType: BaseGraphLiteralNode.EffectiveType
  fullName: VDS.RDF.BaseGraphLiteralNode.EffectiveType
- uid: VDS.RDF.Nodes.IValuedNode.EffectiveType
  commentId: P:VDS.RDF.Nodes.IValuedNode.EffectiveType
  parent: VDS.RDF.Nodes.IValuedNode
  name: EffectiveType
  nameWithType: IValuedNode.EffectiveType
  fullName: VDS.RDF.Nodes.IValuedNode.EffectiveType
- uid: VDS.RDF.BaseGraphLiteralNode.NumericType*
  commentId: Overload:VDS.RDF.BaseGraphLiteralNode.NumericType
  name: NumericType
  nameWithType: BaseGraphLiteralNode.NumericType
  fullName: VDS.RDF.BaseGraphLiteralNode.NumericType
- uid: VDS.RDF.Nodes.IValuedNode.NumericType
  commentId: P:VDS.RDF.Nodes.IValuedNode.NumericType
  parent: VDS.RDF.Nodes.IValuedNode
  name: NumericType
  nameWithType: IValuedNode.NumericType
  fullName: VDS.RDF.Nodes.IValuedNode.NumericType
- uid: VDS.RDF.Query.Expressions.SparqlNumericType
  commentId: T:VDS.RDF.Query.Expressions.SparqlNumericType
  parent: VDS.RDF.Query.Expressions
  name: SparqlNumericType
  nameWithType: SparqlNumericType
  fullName: VDS.RDF.Query.Expressions.SparqlNumericType
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
