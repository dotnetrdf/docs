### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.BaseParserContext
  id: BaseParserContext
  parent: VDS.RDF.Parsing.Contexts
  children:
  - VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor(VDS.RDF.IGraph)
  - VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor(VDS.RDF.IGraph,System.Boolean)
  - VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor(VDS.RDF.IRdfHandler)
  - VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor(VDS.RDF.IRdfHandler,System.Boolean)
  - VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  - VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  - VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  - VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  - VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  - VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  langs:
  - csharp
  - vb
  name: BaseParserContext
  nameWithType: BaseParserContext
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseParserContext
    path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nBase Class for Parser Contexts.\n"
  example: []
  syntax:
    content: 'public abstract class BaseParserContext : IParserContext'
    content.vb: >-
      Public MustInherit Class BaseParserContext
          Implements IParserContext
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Parsing.Contexts.JsonParserContext
  - VDS.RDF.Parsing.Contexts.RdfAParserContext`1
  - VDS.RDF.Parsing.Contexts.RdfXmlParserContext
  - VDS.RDF.Parsing.Contexts.TokenisingParserContext
  implements:
  - VDS.RDF.Parsing.Contexts.IParserContext
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.Contexts.BaseParserContext.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  commentId: F:VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  id: _handler
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  langs:
  - csharp
  - vb
  name: _handler
  nameWithType: BaseParserContext._handler
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext._handler
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _handler
    path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
    startLine: 42
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nRDF Handler used to handle the generated RDF.\n"
  example: []
  syntax:
    content: protected IRdfHandler _handler
    return:
      type: VDS.RDF.IRdfHandler
    content.vb: Protected _handler As IRdfHandler
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  commentId: F:VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  id: _traceParsing
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  langs:
  - csharp
  - vb
  name: _traceParsing
  nameWithType: BaseParserContext._traceParsing
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext._traceParsing
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _traceParsing
    path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nIs Parsing Traced?.\n"
  example: []
  syntax:
    content: protected bool _traceParsing
    return:
      type: System.Boolean
    content.vb: Protected _traceParsing As Boolean
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor(VDS.RDF.IGraph)
  id: '#ctor(VDS.RDF.IGraph)'
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  langs:
  - csharp
  - vb
  name: BaseParserContext(IGraph)
  nameWithType: BaseParserContext.BaseParserContext(IGraph)
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseParserContext(VDS.RDF.IGraph)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Base Parser Context.\n"
  example: []
  syntax:
    content: public BaseParserContext(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to parse into.
    content.vb: Public Sub New(g As IGraph)
  overload: VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor(VDS.RDF.IGraph,System.Boolean)
  commentId: M:VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor(VDS.RDF.IGraph,System.Boolean)
  id: '#ctor(VDS.RDF.IGraph,System.Boolean)'
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  langs:
  - csharp
  - vb
  name: BaseParserContext(IGraph, Boolean)
  nameWithType: BaseParserContext.BaseParserContext(IGraph, Boolean)
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseParserContext(VDS.RDF.IGraph, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Base Parser Context.\n"
  example: []
  syntax:
    content: public BaseParserContext(IGraph g, bool traceParsing)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph to parse into.
    - id: traceParsing
      type: System.Boolean
      description: Whether to trace parsing.
    content.vb: Public Sub New(g As IGraph, traceParsing As Boolean)
  overload: VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor(VDS.RDF.IRdfHandler)
  commentId: M:VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor(VDS.RDF.IRdfHandler)
  id: '#ctor(VDS.RDF.IRdfHandler)'
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  langs:
  - csharp
  - vb
  name: BaseParserContext(IRdfHandler)
  nameWithType: BaseParserContext.BaseParserContext(IRdfHandler)
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseParserContext(VDS.RDF.IRdfHandler)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
    startLine: 70
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Base Parser Context.\n"
  example: []
  syntax:
    content: public BaseParserContext(IRdfHandler handler)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    content.vb: Public Sub New(handler As IRdfHandler)
  overload: VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor(VDS.RDF.IRdfHandler,System.Boolean)
  commentId: M:VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor(VDS.RDF.IRdfHandler,System.Boolean)
  id: '#ctor(VDS.RDF.IRdfHandler,System.Boolean)'
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  langs:
  - csharp
  - vb
  name: BaseParserContext(IRdfHandler, Boolean)
  nameWithType: BaseParserContext.BaseParserContext(IRdfHandler, Boolean)
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseParserContext(VDS.RDF.IRdfHandler, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
    startLine: 78
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nCreates a new Base Parser Context.\n"
  example: []
  syntax:
    content: public BaseParserContext(IRdfHandler handler, bool traceParsing)
    parameters:
    - id: handler
      type: VDS.RDF.IRdfHandler
      description: RDF Handler.
    - id: traceParsing
      type: System.Boolean
      description: Whether to trace parsing.
    content.vb: Public Sub New(handler As IRdfHandler, traceParsing As Boolean)
  overload: VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  id: Handler
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  langs:
  - csharp
  - vb
  name: Handler
  nameWithType: BaseParserContext.Handler
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Handler
    path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
    startLine: 90
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Handler used to handle the generated RDF.\n"
  example: []
  syntax:
    content: public IRdfHandler Handler { get; }
    parameters: []
    return:
      type: VDS.RDF.IRdfHandler
    content.vb: Public ReadOnly Property Handler As IRdfHandler
  overload: VDS.RDF.Parsing.Contexts.BaseParserContext.Handler*
  implements:
  - VDS.RDF.Parsing.Contexts.IParserContext.Handler
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  id: TraceParsing
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  langs:
  - csharp
  - vb
  name: TraceParsing
  nameWithType: BaseParserContext.TraceParsing
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: TraceParsing
    path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
    startLine: 101
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets/Sets whether to trace parsing.\n"
  example: []
  syntax:
    content: public bool TraceParsing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property TraceParsing As Boolean
  overload: VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing*
  implements:
  - VDS.RDF.Parsing.Contexts.IParserContext.TraceParsing
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  id: Namespaces
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  langs:
  - csharp
  - vb
  name: Namespaces
  nameWithType: BaseParserContext.Namespaces
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Namespaces
    path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
    startLine: 116
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Namespace Map for the parsing context.\n"
  example: []
  syntax:
    content: public INestedNamespaceMapper Namespaces { get; }
    parameters: []
    return:
      type: VDS.RDF.INestedNamespaceMapper
    content.vb: Public ReadOnly Property Namespaces As INestedNamespaceMapper
  overload: VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces*
  implements:
  - VDS.RDF.Parsing.Contexts.IParserContext.Namespaces
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  commentId: P:VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  id: BaseUri
  parent: VDS.RDF.Parsing.Contexts.BaseParserContext
  langs:
  - csharp
  - vb
  name: BaseUri
  nameWithType: BaseParserContext.BaseUri
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseUri
    path: Libraries/dotNetRDF/Parsing/Contexts/BaseParserContext.cs
    startLine: 127
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Contexts
  summary: "\nGets the Base URI for the parsing context.\n"
  example: []
  syntax:
    content: public Uri BaseUri { get; set; }
    parameters: []
    return:
      type: System.Uri
    content.vb: Public Property BaseUri As Uri
  overload: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri*
  implements:
  - VDS.RDF.Parsing.Contexts.IParserContext.BaseUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Parsing.Contexts
  commentId: N:VDS.RDF.Parsing.Contexts
  name: VDS.RDF.Parsing.Contexts
  nameWithType: VDS.RDF.Parsing.Contexts
  fullName: VDS.RDF.Parsing.Contexts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.Contexts.IParserContext
  commentId: T:VDS.RDF.Parsing.Contexts.IParserContext
  parent: VDS.RDF.Parsing.Contexts
  name: IParserContext
  nameWithType: IParserContext
  fullName: VDS.RDF.Parsing.Contexts.IParserContext
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseParserContext>()
  nameWithType: Extensions.AsEnumerable<BaseParserContext>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.BaseParserContext>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseParserContext)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.BaseParserContext)()
  name.vb: AsEnumerable(Of BaseParserContext)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseParserContext>
    nameWithType: Extensions.AsEnumerable<BaseParserContext>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Contexts.BaseParserContext>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseParserContext)
    nameWithType: Extensions.AsEnumerable(Of BaseParserContext)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Contexts.BaseParserContext)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.IRdfHandler
  commentId: T:VDS.RDF.IRdfHandler
  parent: VDS.RDF
  name: IRdfHandler
  nameWithType: IRdfHandler
  fullName: VDS.RDF.IRdfHandler
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor*
  commentId: Overload:VDS.RDF.Parsing.Contexts.BaseParserContext.#ctor
  name: BaseParserContext
  nameWithType: BaseParserContext.BaseParserContext
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseParserContext
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.Handler*
  commentId: Overload:VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
  name: Handler
  nameWithType: BaseParserContext.Handler
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.Handler
- uid: VDS.RDF.Parsing.Contexts.IParserContext.Handler
  commentId: P:VDS.RDF.Parsing.Contexts.IParserContext.Handler
  parent: VDS.RDF.Parsing.Contexts.IParserContext
  name: Handler
  nameWithType: IParserContext.Handler
  fullName: VDS.RDF.Parsing.Contexts.IParserContext.Handler
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing*
  commentId: Overload:VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
  name: TraceParsing
  nameWithType: BaseParserContext.TraceParsing
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.TraceParsing
- uid: VDS.RDF.Parsing.Contexts.IParserContext.TraceParsing
  commentId: P:VDS.RDF.Parsing.Contexts.IParserContext.TraceParsing
  parent: VDS.RDF.Parsing.Contexts.IParserContext
  name: TraceParsing
  nameWithType: IParserContext.TraceParsing
  fullName: VDS.RDF.Parsing.Contexts.IParserContext.TraceParsing
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces*
  commentId: Overload:VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
  name: Namespaces
  nameWithType: BaseParserContext.Namespaces
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.Namespaces
- uid: VDS.RDF.Parsing.Contexts.IParserContext.Namespaces
  commentId: P:VDS.RDF.Parsing.Contexts.IParserContext.Namespaces
  parent: VDS.RDF.Parsing.Contexts.IParserContext
  name: Namespaces
  nameWithType: IParserContext.Namespaces
  fullName: VDS.RDF.Parsing.Contexts.IParserContext.Namespaces
- uid: VDS.RDF.INestedNamespaceMapper
  commentId: T:VDS.RDF.INestedNamespaceMapper
  parent: VDS.RDF
  name: INestedNamespaceMapper
  nameWithType: INestedNamespaceMapper
  fullName: VDS.RDF.INestedNamespaceMapper
- uid: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri*
  commentId: Overload:VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
  name: BaseUri
  nameWithType: BaseParserContext.BaseUri
  fullName: VDS.RDF.Parsing.Contexts.BaseParserContext.BaseUri
- uid: VDS.RDF.Parsing.Contexts.IParserContext.BaseUri
  commentId: P:VDS.RDF.Parsing.Contexts.IParserContext.BaseUri
  parent: VDS.RDF.Parsing.Contexts.IParserContext
  name: BaseUri
  nameWithType: IParserContext.BaseUri
  fullName: VDS.RDF.Parsing.Contexts.IParserContext.BaseUri
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
shouldSkipMarkup: true
