### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Operators.ISparqlOperator
  commentId: T:VDS.RDF.Query.Operators.ISparqlOperator
  id: ISparqlOperator
  parent: VDS.RDF.Query.Operators
  children:
  - VDS.RDF.Query.Operators.ISparqlOperator.Apply(VDS.RDF.Nodes.IValuedNode[])
  - VDS.RDF.Query.Operators.ISparqlOperator.IsApplicable(VDS.RDF.Nodes.IValuedNode[])
  - VDS.RDF.Query.Operators.ISparqlOperator.Operator
  langs:
  - csharp
  - vb
  name: ISparqlOperator
  nameWithType: ISparqlOperator
  fullName: VDS.RDF.Query.Operators.ISparqlOperator
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/ISparqlOperator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ISparqlOperator
    path: Libraries/dotNetRDF/Query/Operators/ISparqlOperator.cs
    startLine: 33
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nInterface which represents an operator in SPARQL e.g. +.\n"
  example: []
  syntax:
    content: public interface ISparqlOperator
    content.vb: Public Interface ISparqlOperator
  extensionMethods:
  - VDS.RDF.Query.Operators.ISparqlOperator.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Operators.ISparqlOperator.Operator
  commentId: P:VDS.RDF.Query.Operators.ISparqlOperator.Operator
  id: Operator
  parent: VDS.RDF.Query.Operators.ISparqlOperator
  langs:
  - csharp
  - vb
  name: Operator
  nameWithType: ISparqlOperator.Operator
  fullName: VDS.RDF.Query.Operators.ISparqlOperator.Operator
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/ISparqlOperator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Operator
    path: Libraries/dotNetRDF/Query/Operators/ISparqlOperator.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nGets the Operator this is an implementation of.\n"
  example: []
  syntax:
    content: SparqlOperatorType Operator { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Operators.SparqlOperatorType
    content.vb: ReadOnly Property Operator As SparqlOperatorType
  overload: VDS.RDF.Query.Operators.ISparqlOperator.Operator*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Operators.ISparqlOperator.IsApplicable(VDS.RDF.Nodes.IValuedNode[])
  commentId: M:VDS.RDF.Query.Operators.ISparqlOperator.IsApplicable(VDS.RDF.Nodes.IValuedNode[])
  id: IsApplicable(VDS.RDF.Nodes.IValuedNode[])
  parent: VDS.RDF.Query.Operators.ISparqlOperator
  langs:
  - csharp
  - vb
  name: IsApplicable(IValuedNode[])
  nameWithType: ISparqlOperator.IsApplicable(IValuedNode[])
  fullName: VDS.RDF.Query.Operators.ISparqlOperator.IsApplicable(VDS.RDF.Nodes.IValuedNode[])
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/ISparqlOperator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsApplicable
    path: Libraries/dotNetRDF/Query/Operators/ISparqlOperator.cs
    startLine: 48
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nGets whether the operator can be applied to the given inputs.\n"
  example: []
  syntax:
    content: bool IsApplicable(params IValuedNode[] ns)
    parameters:
    - id: ns
      type: VDS.RDF.Nodes.IValuedNode[]
      description: Inputs.
    return:
      type: System.Boolean
      description: True if applicable to the given inputs.
    content.vb: Function IsApplicable(ParamArray ns As IValuedNode()) As Boolean
  overload: VDS.RDF.Query.Operators.ISparqlOperator.IsApplicable*
  nameWithType.vb: ISparqlOperator.IsApplicable(IValuedNode())
  fullName.vb: VDS.RDF.Query.Operators.ISparqlOperator.IsApplicable(VDS.RDF.Nodes.IValuedNode())
  name.vb: IsApplicable(IValuedNode())
- uid: VDS.RDF.Query.Operators.ISparqlOperator.Apply(VDS.RDF.Nodes.IValuedNode[])
  commentId: M:VDS.RDF.Query.Operators.ISparqlOperator.Apply(VDS.RDF.Nodes.IValuedNode[])
  id: Apply(VDS.RDF.Nodes.IValuedNode[])
  parent: VDS.RDF.Query.Operators.ISparqlOperator
  langs:
  - csharp
  - vb
  name: Apply(IValuedNode[])
  nameWithType: ISparqlOperator.Apply(IValuedNode[])
  fullName: VDS.RDF.Query.Operators.ISparqlOperator.Apply(VDS.RDF.Nodes.IValuedNode[])
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Operators/ISparqlOperator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: Libraries/dotNetRDF/Query/Operators/ISparqlOperator.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Operators
  summary: "\nApplies the operator to the given inputs.\n"
  example: []
  syntax:
    content: IValuedNode Apply(params IValuedNode[] ns)
    parameters:
    - id: ns
      type: VDS.RDF.Nodes.IValuedNode[]
      description: Inputs.
    return:
      type: VDS.RDF.Nodes.IValuedNode
      description: ''
    content.vb: Function Apply(ParamArray ns As IValuedNode()) As IValuedNode
  overload: VDS.RDF.Query.Operators.ISparqlOperator.Apply*
  exceptions:
  - type: VDS.RDF.Query.RdfQueryException
    commentId: T:VDS.RDF.Query.RdfQueryException
    description: Thrown if an error occurs in applying the operator.
  nameWithType.vb: ISparqlOperator.Apply(IValuedNode())
  fullName.vb: VDS.RDF.Query.Operators.ISparqlOperator.Apply(VDS.RDF.Nodes.IValuedNode())
  name.vb: Apply(IValuedNode())
references:
- uid: VDS.RDF.Query.Operators
  commentId: N:VDS.RDF.Query.Operators
  name: VDS.RDF.Query.Operators
  nameWithType: VDS.RDF.Query.Operators
  fullName: VDS.RDF.Query.Operators
- uid: VDS.RDF.Query.Operators.ISparqlOperator.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ISparqlOperator>()
  nameWithType: Extensions.AsEnumerable<ISparqlOperator>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Operators.ISparqlOperator>()
  nameWithType.vb: Extensions.AsEnumerable(Of ISparqlOperator)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Operators.ISparqlOperator)()
  name.vb: AsEnumerable(Of ISparqlOperator)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ISparqlOperator>
    nameWithType: Extensions.AsEnumerable<ISparqlOperator>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Operators.ISparqlOperator>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ISparqlOperator)
    nameWithType: Extensions.AsEnumerable(Of ISparqlOperator)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Operators.ISparqlOperator)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Operators.ISparqlOperator.Operator*
  commentId: Overload:VDS.RDF.Query.Operators.ISparqlOperator.Operator
  name: Operator
  nameWithType: ISparqlOperator.Operator
  fullName: VDS.RDF.Query.Operators.ISparqlOperator.Operator
- uid: VDS.RDF.Query.Operators.SparqlOperatorType
  commentId: T:VDS.RDF.Query.Operators.SparqlOperatorType
  parent: VDS.RDF.Query.Operators
  name: SparqlOperatorType
  nameWithType: SparqlOperatorType
  fullName: VDS.RDF.Query.Operators.SparqlOperatorType
- uid: VDS.RDF.Query.Operators.ISparqlOperator.IsApplicable*
  commentId: Overload:VDS.RDF.Query.Operators.ISparqlOperator.IsApplicable
  name: IsApplicable
  nameWithType: ISparqlOperator.IsApplicable
  fullName: VDS.RDF.Query.Operators.ISparqlOperator.IsApplicable
- uid: VDS.RDF.Nodes.IValuedNode[]
  isExternal: true
  name: IValuedNode[]
  nameWithType: IValuedNode[]
  fullName: VDS.RDF.Nodes.IValuedNode[]
  nameWithType.vb: IValuedNode()
  fullName.vb: VDS.RDF.Nodes.IValuedNode()
  name.vb: IValuedNode()
  spec.csharp:
  - uid: VDS.RDF.Nodes.IValuedNode
    name: IValuedNode
    nameWithType: IValuedNode
    fullName: VDS.RDF.Nodes.IValuedNode
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: VDS.RDF.Nodes.IValuedNode
    name: IValuedNode
    nameWithType: IValuedNode
    fullName: VDS.RDF.Nodes.IValuedNode
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.RdfQueryException
  commentId: T:VDS.RDF.Query.RdfQueryException
  parent: VDS.RDF.Query
  name: RdfQueryException
  nameWithType: RdfQueryException
  fullName: VDS.RDF.Query.RdfQueryException
- uid: VDS.RDF.Query.Operators.ISparqlOperator.Apply*
  commentId: Overload:VDS.RDF.Query.Operators.ISparqlOperator.Apply
  name: Apply
  nameWithType: ISparqlOperator.Apply
  fullName: VDS.RDF.Query.Operators.ISparqlOperator.Apply
- uid: VDS.RDF.Nodes.IValuedNode
  commentId: T:VDS.RDF.Nodes.IValuedNode
  parent: VDS.RDF.Nodes
  name: IValuedNode
  nameWithType: IValuedNode
  fullName: VDS.RDF.Nodes.IValuedNode
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Nodes
  commentId: N:VDS.RDF.Nodes
  name: VDS.RDF.Nodes
  nameWithType: VDS.RDF.Nodes
  fullName: VDS.RDF.Nodes
shouldSkipMarkup: true
