### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1
  commentId: T:VDS.RDF.Parsing.Events.BaseEventQueue`1
  id: BaseEventQueue`1
  parent: VDS.RDF.Parsing.Events
  children:
  - VDS.RDF.Parsing.Events.BaseEventQueue`1._eventgen
  - VDS.RDF.Parsing.Events.BaseEventQueue`1._lasteventtype
  - VDS.RDF.Parsing.Events.BaseEventQueue`1._tracing
  - VDS.RDF.Parsing.Events.BaseEventQueue`1.Clear
  - VDS.RDF.Parsing.Events.BaseEventQueue`1.Count
  - VDS.RDF.Parsing.Events.BaseEventQueue`1.Dequeue
  - VDS.RDF.Parsing.Events.BaseEventQueue`1.Enqueue(`0)
  - VDS.RDF.Parsing.Events.BaseEventQueue`1.EventGenerator
  - VDS.RDF.Parsing.Events.BaseEventQueue`1.LastEventType
  - VDS.RDF.Parsing.Events.BaseEventQueue`1.Peek
  - VDS.RDF.Parsing.Events.BaseEventQueue`1.Tracing
  langs:
  - csharp
  - vb
  name: BaseEventQueue<T>
  nameWithType: BaseEventQueue<T>
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseEventQueue
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
    startLine: 93
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nAbstract base implementation of an Event Queue.\n"
  example: []
  syntax:
    content: 'public abstract class BaseEventQueue<T> : IEventQueue<T> where T : IEvent'
    typeParameters:
    - id: T
    content.vb: >-
      Public MustInherit Class BaseEventQueue(Of T As IEvent)
          Implements IEventQueue(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Parsing.Events.EventQueue`1
  - VDS.RDF.Parsing.Events.SublistEventQueue`1
  implements:
  - VDS.RDF.Parsing.Events.IEventQueue{{T}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.Events.BaseEventQueue`1.VDS.RDF.Extensions.AsEnumerable``1
  nameWithType.vb: BaseEventQueue(Of T)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T)
  name.vb: BaseEventQueue(Of T)
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1._eventgen
  commentId: F:VDS.RDF.Parsing.Events.BaseEventQueue`1._eventgen
  id: _eventgen
  parent: VDS.RDF.Parsing.Events.BaseEventQueue`1
  langs:
  - csharp
  - vb
  name: _eventgen
  nameWithType: BaseEventQueue<T>._eventgen
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>._eventgen
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _eventgen
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
    startLine: 98
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGenerator used to fill the Event Queue.\n"
  example: []
  syntax:
    content: protected IEventGenerator<T> _eventgen
    return:
      type: VDS.RDF.Parsing.Events.IEventGenerator{{T}}
    content.vb: Protected _eventgen As IEventGenerator(Of T)
  nameWithType.vb: BaseEventQueue(Of T)._eventgen
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T)._eventgen
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1._tracing
  commentId: F:VDS.RDF.Parsing.Events.BaseEventQueue`1._tracing
  id: _tracing
  parent: VDS.RDF.Parsing.Events.BaseEventQueue`1
  langs:
  - csharp
  - vb
  name: _tracing
  nameWithType: BaseEventQueue<T>._tracing
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>._tracing
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _tracing
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
    startLine: 102
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nVariable indicating whether Generator Tracing is enabled.\n"
  example: []
  syntax:
    content: protected bool _tracing
    return:
      type: System.Boolean
    content.vb: Protected _tracing As Boolean
  nameWithType.vb: BaseEventQueue(Of T)._tracing
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T)._tracing
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1._lasteventtype
  commentId: F:VDS.RDF.Parsing.Events.BaseEventQueue`1._lasteventtype
  id: _lasteventtype
  parent: VDS.RDF.Parsing.Events.BaseEventQueue`1
  langs:
  - csharp
  - vb
  name: _lasteventtype
  nameWithType: BaseEventQueue<T>._lasteventtype
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>._lasteventtype
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: _lasteventtype
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
    startLine: 106
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nType of Last Event dequeued.\n"
  example: []
  syntax:
    content: protected int _lasteventtype
    return:
      type: System.Int32
    content.vb: Protected _lasteventtype As Integer
  nameWithType.vb: BaseEventQueue(Of T)._lasteventtype
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T)._lasteventtype
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Dequeue
  commentId: M:VDS.RDF.Parsing.Events.BaseEventQueue`1.Dequeue
  id: Dequeue
  parent: VDS.RDF.Parsing.Events.BaseEventQueue`1
  langs:
  - csharp
  - vb
  name: Dequeue()
  nameWithType: BaseEventQueue<T>.Dequeue()
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Dequeue()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dequeue
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
    startLine: 112
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nDequeues an Event from the Queue.\n"
  example: []
  syntax:
    content: public abstract T Dequeue()
    return:
      type: '{T}'
      description: ''
    content.vb: Public MustOverride Function Dequeue As T
  overload: VDS.RDF.Parsing.Events.BaseEventQueue`1.Dequeue*
  implements:
  - VDS.RDF.Parsing.Events.IEventQueue{{T}}.Dequeue
  nameWithType.vb: BaseEventQueue(Of T).Dequeue()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Dequeue()
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Enqueue(`0)
  commentId: M:VDS.RDF.Parsing.Events.BaseEventQueue`1.Enqueue(`0)
  id: Enqueue(`0)
  parent: VDS.RDF.Parsing.Events.BaseEventQueue`1
  langs:
  - csharp
  - vb
  name: Enqueue(T)
  nameWithType: BaseEventQueue<T>.Enqueue(T)
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Enqueue(T)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Enqueue
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
    startLine: 118
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nAdds an Event to the Queue.\n"
  example: []
  syntax:
    content: public abstract void Enqueue(T e)
    parameters:
    - id: e
      type: '{T}'
      description: Event.
    content.vb: Public MustOverride Sub Enqueue(e As T)
  overload: VDS.RDF.Parsing.Events.BaseEventQueue`1.Enqueue*
  implements:
  - VDS.RDF.Parsing.Events.IEventQueue{{T}}.Enqueue({T})
  nameWithType.vb: BaseEventQueue(Of T).Enqueue(T)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Enqueue(T)
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Peek
  commentId: M:VDS.RDF.Parsing.Events.BaseEventQueue`1.Peek
  id: Peek
  parent: VDS.RDF.Parsing.Events.BaseEventQueue`1
  langs:
  - csharp
  - vb
  name: Peek()
  nameWithType: BaseEventQueue<T>.Peek()
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Peek()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Peek
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
    startLine: 124
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets the next Event from the Queue without removing it from the queue.\n"
  example: []
  syntax:
    content: public abstract T Peek()
    return:
      type: '{T}'
      description: ''
    content.vb: Public MustOverride Function Peek As T
  overload: VDS.RDF.Parsing.Events.BaseEventQueue`1.Peek*
  implements:
  - VDS.RDF.Parsing.Events.IEventQueue{{T}}.Peek
  nameWithType.vb: BaseEventQueue(Of T).Peek()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Peek()
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.EventGenerator
  commentId: P:VDS.RDF.Parsing.Events.BaseEventQueue`1.EventGenerator
  id: EventGenerator
  parent: VDS.RDF.Parsing.Events.BaseEventQueue`1
  langs:
  - csharp
  - vb
  name: EventGenerator
  nameWithType: BaseEventQueue<T>.EventGenerator
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.EventGenerator
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EventGenerator
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
    startLine: 129
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets the Event Generator used by the Queue.\n"
  example: []
  syntax:
    content: public IEventGenerator<T> EventGenerator { get; }
    parameters: []
    return:
      type: VDS.RDF.Parsing.Events.IEventGenerator{{T}}
    content.vb: Public ReadOnly Property EventGenerator As IEventGenerator(Of T)
  overload: VDS.RDF.Parsing.Events.BaseEventQueue`1.EventGenerator*
  implements:
  - VDS.RDF.Parsing.Events.IEventQueue{{T}}.EventGenerator
  nameWithType.vb: BaseEventQueue(Of T).EventGenerator
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).EventGenerator
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Clear
  commentId: M:VDS.RDF.Parsing.Events.BaseEventQueue`1.Clear
  id: Clear
  parent: VDS.RDF.Parsing.Events.BaseEventQueue`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: BaseEventQueue<T>.Clear()
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Clear()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Clear
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
    startLine: 140
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nClears the Event Queue.\n"
  example: []
  syntax:
    content: public abstract void Clear()
    content.vb: Public MustOverride Sub Clear
  overload: VDS.RDF.Parsing.Events.BaseEventQueue`1.Clear*
  implements:
  - VDS.RDF.Parsing.Events.IEventQueue{{T}}.Clear
  nameWithType.vb: BaseEventQueue(Of T).Clear()
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Clear()
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Count
  commentId: P:VDS.RDF.Parsing.Events.BaseEventQueue`1.Count
  id: Count
  parent: VDS.RDF.Parsing.Events.BaseEventQueue`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: BaseEventQueue<T>.Count
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Count
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Count
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
    startLine: 145
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets the number of Events in the Queue.\n"
  example: []
  syntax:
    content: public abstract int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public MustOverride ReadOnly Property Count As Integer
  overload: VDS.RDF.Parsing.Events.BaseEventQueue`1.Count*
  implements:
  - VDS.RDF.Parsing.Events.IEventQueue{{T}}.Count
  nameWithType.vb: BaseEventQueue(Of T).Count
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Count
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Tracing
  commentId: P:VDS.RDF.Parsing.Events.BaseEventQueue`1.Tracing
  id: Tracing
  parent: VDS.RDF.Parsing.Events.BaseEventQueue`1
  langs:
  - csharp
  - vb
  name: Tracing
  nameWithType: BaseEventQueue<T>.Tracing
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Tracing
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Tracing
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
    startLine: 153
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets/Sets Tracing for the Event Queue.\n"
  example: []
  syntax:
    content: public bool Tracing { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Tracing As Boolean
  overload: VDS.RDF.Parsing.Events.BaseEventQueue`1.Tracing*
  implements:
  - VDS.RDF.Parsing.Events.IEventQueue{{T}}.Tracing
  nameWithType.vb: BaseEventQueue(Of T).Tracing
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Tracing
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.LastEventType
  commentId: P:VDS.RDF.Parsing.Events.BaseEventQueue`1.LastEventType
  id: LastEventType
  parent: VDS.RDF.Parsing.Events.BaseEventQueue`1
  langs:
  - csharp
  - vb
  name: LastEventType
  nameWithType: BaseEventQueue<T>.LastEventType
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.LastEventType
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LastEventType
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/Events/IEventQueue.cs
    startLine: 168
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets the Event Type of the last Event dequeued.\n"
  example: []
  syntax:
    content: public int LastEventType { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LastEventType As Integer
  overload: VDS.RDF.Parsing.Events.BaseEventQueue`1.LastEventType*
  implements:
  - VDS.RDF.Parsing.Events.IEventQueue{{T}}.LastEventType
  nameWithType.vb: BaseEventQueue(Of T).LastEventType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).LastEventType
references:
- uid: VDS.RDF.Parsing.Events
  commentId: N:VDS.RDF.Parsing.Events
  name: VDS.RDF.Parsing.Events
  nameWithType: VDS.RDF.Parsing.Events
  fullName: VDS.RDF.Parsing.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.Events.IEventQueue{{T}}
  commentId: T:VDS.RDF.Parsing.Events.IEventQueue{`0}
  parent: VDS.RDF.Parsing.Events
  definition: VDS.RDF.Parsing.Events.IEventQueue`1
  name: IEventQueue<T>
  nameWithType: IEventQueue<T>
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>
  nameWithType.vb: IEventQueue(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T)
  name.vb: IEventQueue(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseEventQueue<T>>()
  nameWithType: Extensions.AsEnumerable<BaseEventQueue<T>>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.BaseEventQueue<T>>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseEventQueue(Of T))()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.BaseEventQueue(Of T))()
  name.vb: AsEnumerable(Of BaseEventQueue(Of T))()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseEventQueue<T>>
    nameWithType: Extensions.AsEnumerable<BaseEventQueue<T>>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.BaseEventQueue<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseEventQueue(Of T))
    nameWithType: Extensions.AsEnumerable(Of BaseEventQueue(Of T))
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.BaseEventQueue(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Parsing.Events.IEventQueue`1
  commentId: T:VDS.RDF.Parsing.Events.IEventQueue`1
  name: IEventQueue<T>
  nameWithType: IEventQueue<T>
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>
  nameWithType.vb: IEventQueue(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T)
  name.vb: IEventQueue(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1
    name: IEventQueue
    nameWithType: IEventQueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Events.IEventGenerator{{T}}
  commentId: T:VDS.RDF.Parsing.Events.IEventGenerator{`0}
  parent: VDS.RDF.Parsing.Events
  definition: VDS.RDF.Parsing.Events.IEventGenerator`1
  name: IEventGenerator<T>
  nameWithType: IEventGenerator<T>
  fullName: VDS.RDF.Parsing.Events.IEventGenerator<T>
  nameWithType.vb: IEventGenerator(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.IEventGenerator(Of T)
  name.vb: IEventGenerator(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventGenerator`1
    name: IEventGenerator
    nameWithType: IEventGenerator
    fullName: VDS.RDF.Parsing.Events.IEventGenerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventGenerator`1
    name: IEventGenerator
    nameWithType: IEventGenerator
    fullName: VDS.RDF.Parsing.Events.IEventGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.IEventGenerator`1
  commentId: T:VDS.RDF.Parsing.Events.IEventGenerator`1
  name: IEventGenerator<T>
  nameWithType: IEventGenerator<T>
  fullName: VDS.RDF.Parsing.Events.IEventGenerator<T>
  nameWithType.vb: IEventGenerator(Of T)
  fullName.vb: VDS.RDF.Parsing.Events.IEventGenerator(Of T)
  name.vb: IEventGenerator(Of T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventGenerator`1
    name: IEventGenerator
    nameWithType: IEventGenerator
    fullName: VDS.RDF.Parsing.Events.IEventGenerator
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventGenerator`1
    name: IEventGenerator
    nameWithType: IEventGenerator
    fullName: VDS.RDF.Parsing.Events.IEventGenerator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Dequeue*
  commentId: Overload:VDS.RDF.Parsing.Events.BaseEventQueue`1.Dequeue
  name: Dequeue
  nameWithType: BaseEventQueue<T>.Dequeue
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Dequeue
  nameWithType.vb: BaseEventQueue(Of T).Dequeue
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Dequeue
- uid: VDS.RDF.Parsing.Events.IEventQueue{{T}}.Dequeue
  commentId: M:VDS.RDF.Parsing.Events.IEventQueue{`0}.Dequeue
  parent: VDS.RDF.Parsing.Events.IEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.IEventQueue`1.Dequeue
  name: Dequeue()
  nameWithType: IEventQueue<T>.Dequeue()
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Dequeue()
  nameWithType.vb: IEventQueue(Of T).Dequeue()
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).Dequeue()
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Dequeue
    name: Dequeue
    nameWithType: IEventQueue<T>.Dequeue
    fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Dequeue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Dequeue
    name: Dequeue
    nameWithType: IEventQueue(Of T).Dequeue
    fullName: VDS.RDF.Parsing.Events.IEventQueue(Of T).Dequeue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: VDS.RDF.Parsing.Events.IEventQueue`1.Dequeue
  commentId: M:VDS.RDF.Parsing.Events.IEventQueue`1.Dequeue
  name: Dequeue()
  nameWithType: IEventQueue<T>.Dequeue()
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Dequeue()
  nameWithType.vb: IEventQueue(Of T).Dequeue()
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).Dequeue()
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Dequeue
    name: Dequeue
    nameWithType: IEventQueue<T>.Dequeue
    fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Dequeue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Dequeue
    name: Dequeue
    nameWithType: IEventQueue(Of T).Dequeue
    fullName: VDS.RDF.Parsing.Events.IEventQueue(Of T).Dequeue
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Enqueue*
  commentId: Overload:VDS.RDF.Parsing.Events.BaseEventQueue`1.Enqueue
  name: Enqueue
  nameWithType: BaseEventQueue<T>.Enqueue
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Enqueue
  nameWithType.vb: BaseEventQueue(Of T).Enqueue
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Enqueue
- uid: VDS.RDF.Parsing.Events.IEventQueue{{T}}.Enqueue({T})
  commentId: M:VDS.RDF.Parsing.Events.IEventQueue{`0}.Enqueue(`0)
  parent: VDS.RDF.Parsing.Events.IEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.IEventQueue`1.Enqueue(`0)
  name: Enqueue(T)
  nameWithType: IEventQueue<T>.Enqueue(T)
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Enqueue(T)
  nameWithType.vb: IEventQueue(Of T).Enqueue(T)
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).Enqueue(T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Enqueue(`0)
    name: Enqueue
    nameWithType: IEventQueue<T>.Enqueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Enqueue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Enqueue(`0)
    name: Enqueue
    nameWithType: IEventQueue(Of T).Enqueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue(Of T).Enqueue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.IEventQueue`1.Enqueue(`0)
  commentId: M:VDS.RDF.Parsing.Events.IEventQueue`1.Enqueue(`0)
  name: Enqueue(T)
  nameWithType: IEventQueue<T>.Enqueue(T)
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Enqueue(T)
  nameWithType.vb: IEventQueue(Of T).Enqueue(T)
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).Enqueue(T)
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Enqueue(`0)
    name: Enqueue
    nameWithType: IEventQueue<T>.Enqueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Enqueue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Enqueue(`0)
    name: Enqueue
    nameWithType: IEventQueue(Of T).Enqueue
    fullName: VDS.RDF.Parsing.Events.IEventQueue(Of T).Enqueue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Peek*
  commentId: Overload:VDS.RDF.Parsing.Events.BaseEventQueue`1.Peek
  name: Peek
  nameWithType: BaseEventQueue<T>.Peek
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Peek
  nameWithType.vb: BaseEventQueue(Of T).Peek
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Peek
- uid: VDS.RDF.Parsing.Events.IEventQueue{{T}}.Peek
  commentId: M:VDS.RDF.Parsing.Events.IEventQueue{`0}.Peek
  parent: VDS.RDF.Parsing.Events.IEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.IEventQueue`1.Peek
  name: Peek()
  nameWithType: IEventQueue<T>.Peek()
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Peek()
  nameWithType.vb: IEventQueue(Of T).Peek()
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).Peek()
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Peek
    name: Peek
    nameWithType: IEventQueue<T>.Peek
    fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Peek
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Peek
    name: Peek
    nameWithType: IEventQueue(Of T).Peek
    fullName: VDS.RDF.Parsing.Events.IEventQueue(Of T).Peek
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.IEventQueue`1.Peek
  commentId: M:VDS.RDF.Parsing.Events.IEventQueue`1.Peek
  name: Peek()
  nameWithType: IEventQueue<T>.Peek()
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Peek()
  nameWithType.vb: IEventQueue(Of T).Peek()
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).Peek()
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Peek
    name: Peek
    nameWithType: IEventQueue<T>.Peek
    fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Peek
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Peek
    name: Peek
    nameWithType: IEventQueue(Of T).Peek
    fullName: VDS.RDF.Parsing.Events.IEventQueue(Of T).Peek
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.EventGenerator*
  commentId: Overload:VDS.RDF.Parsing.Events.BaseEventQueue`1.EventGenerator
  name: EventGenerator
  nameWithType: BaseEventQueue<T>.EventGenerator
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.EventGenerator
  nameWithType.vb: BaseEventQueue(Of T).EventGenerator
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).EventGenerator
- uid: VDS.RDF.Parsing.Events.IEventQueue{{T}}.EventGenerator
  commentId: P:VDS.RDF.Parsing.Events.IEventQueue{`0}.EventGenerator
  parent: VDS.RDF.Parsing.Events.IEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.IEventQueue`1.EventGenerator
  name: EventGenerator
  nameWithType: IEventQueue<T>.EventGenerator
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.EventGenerator
  nameWithType.vb: IEventQueue(Of T).EventGenerator
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).EventGenerator
- uid: VDS.RDF.Parsing.Events.IEventQueue`1.EventGenerator
  commentId: P:VDS.RDF.Parsing.Events.IEventQueue`1.EventGenerator
  name: EventGenerator
  nameWithType: IEventQueue<T>.EventGenerator
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.EventGenerator
  nameWithType.vb: IEventQueue(Of T).EventGenerator
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).EventGenerator
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Clear*
  commentId: Overload:VDS.RDF.Parsing.Events.BaseEventQueue`1.Clear
  name: Clear
  nameWithType: BaseEventQueue<T>.Clear
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Clear
  nameWithType.vb: BaseEventQueue(Of T).Clear
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Clear
- uid: VDS.RDF.Parsing.Events.IEventQueue{{T}}.Clear
  commentId: M:VDS.RDF.Parsing.Events.IEventQueue{`0}.Clear
  parent: VDS.RDF.Parsing.Events.IEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.IEventQueue`1.Clear
  name: Clear()
  nameWithType: IEventQueue<T>.Clear()
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Clear()
  nameWithType.vb: IEventQueue(Of T).Clear()
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).Clear()
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Clear
    name: Clear
    nameWithType: IEventQueue<T>.Clear
    fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Clear
    name: Clear
    nameWithType: IEventQueue(Of T).Clear
    fullName: VDS.RDF.Parsing.Events.IEventQueue(Of T).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.IEventQueue`1.Clear
  commentId: M:VDS.RDF.Parsing.Events.IEventQueue`1.Clear
  name: Clear()
  nameWithType: IEventQueue<T>.Clear()
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Clear()
  nameWithType.vb: IEventQueue(Of T).Clear()
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).Clear()
  spec.csharp:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Clear
    name: Clear
    nameWithType: IEventQueue<T>.Clear
    fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.Events.IEventQueue`1.Clear
    name: Clear
    nameWithType: IEventQueue(Of T).Clear
    fullName: VDS.RDF.Parsing.Events.IEventQueue(Of T).Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Count*
  commentId: Overload:VDS.RDF.Parsing.Events.BaseEventQueue`1.Count
  name: Count
  nameWithType: BaseEventQueue<T>.Count
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Count
  nameWithType.vb: BaseEventQueue(Of T).Count
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Count
- uid: VDS.RDF.Parsing.Events.IEventQueue{{T}}.Count
  commentId: P:VDS.RDF.Parsing.Events.IEventQueue{`0}.Count
  parent: VDS.RDF.Parsing.Events.IEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.IEventQueue`1.Count
  name: Count
  nameWithType: IEventQueue<T>.Count
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Count
  nameWithType.vb: IEventQueue(Of T).Count
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).Count
- uid: VDS.RDF.Parsing.Events.IEventQueue`1.Count
  commentId: P:VDS.RDF.Parsing.Events.IEventQueue`1.Count
  name: Count
  nameWithType: IEventQueue<T>.Count
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Count
  nameWithType.vb: IEventQueue(Of T).Count
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).Count
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.Tracing*
  commentId: Overload:VDS.RDF.Parsing.Events.BaseEventQueue`1.Tracing
  name: Tracing
  nameWithType: BaseEventQueue<T>.Tracing
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.Tracing
  nameWithType.vb: BaseEventQueue(Of T).Tracing
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).Tracing
- uid: VDS.RDF.Parsing.Events.IEventQueue{{T}}.Tracing
  commentId: P:VDS.RDF.Parsing.Events.IEventQueue{`0}.Tracing
  parent: VDS.RDF.Parsing.Events.IEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.IEventQueue`1.Tracing
  name: Tracing
  nameWithType: IEventQueue<T>.Tracing
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Tracing
  nameWithType.vb: IEventQueue(Of T).Tracing
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).Tracing
- uid: VDS.RDF.Parsing.Events.IEventQueue`1.Tracing
  commentId: P:VDS.RDF.Parsing.Events.IEventQueue`1.Tracing
  name: Tracing
  nameWithType: IEventQueue<T>.Tracing
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.Tracing
  nameWithType.vb: IEventQueue(Of T).Tracing
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).Tracing
- uid: VDS.RDF.Parsing.Events.BaseEventQueue`1.LastEventType*
  commentId: Overload:VDS.RDF.Parsing.Events.BaseEventQueue`1.LastEventType
  name: LastEventType
  nameWithType: BaseEventQueue<T>.LastEventType
  fullName: VDS.RDF.Parsing.Events.BaseEventQueue<T>.LastEventType
  nameWithType.vb: BaseEventQueue(Of T).LastEventType
  fullName.vb: VDS.RDF.Parsing.Events.BaseEventQueue(Of T).LastEventType
- uid: VDS.RDF.Parsing.Events.IEventQueue{{T}}.LastEventType
  commentId: P:VDS.RDF.Parsing.Events.IEventQueue{`0}.LastEventType
  parent: VDS.RDF.Parsing.Events.IEventQueue{{T}}
  definition: VDS.RDF.Parsing.Events.IEventQueue`1.LastEventType
  name: LastEventType
  nameWithType: IEventQueue<T>.LastEventType
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.LastEventType
  nameWithType.vb: IEventQueue(Of T).LastEventType
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).LastEventType
- uid: VDS.RDF.Parsing.Events.IEventQueue`1.LastEventType
  commentId: P:VDS.RDF.Parsing.Events.IEventQueue`1.LastEventType
  name: LastEventType
  nameWithType: IEventQueue<T>.LastEventType
  fullName: VDS.RDF.Parsing.Events.IEventQueue<T>.LastEventType
  nameWithType.vb: IEventQueue(Of T).LastEventType
  fullName.vb: VDS.RDF.Parsing.Events.IEventQueue(Of T).LastEventType
