### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper
  commentId: T:VDS.RDF.Query.Inference.Pellet.PelletHelper
  id: PelletHelper
  parent: VDS.RDF.Query.Inference.Pellet
  children:
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceClassify
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceCluster
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceConsistency
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplain
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainInconsistent
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainInstance
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainProperty
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainSubclass
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainUnsat
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceIntegrityConstraintValidation
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceKBDescription
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceNamespaces
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServicePredict
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceQuery
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceRealize
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceSearch
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceServerDescription
  - VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceSimilarity
  langs:
  - csharp
  - vb
  name: PelletHelper
  nameWithType: PelletHelper
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PelletHelper
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 33
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nHelper class provided constants and helper methods for use with Pellet Server.\n"
  example: []
  syntax:
    content: public static class PelletHelper
    content.vb: Public Module PelletHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceServerDescription
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceServerDescription
  id: ServiceServerDescription
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceServerDescription
  nameWithType: PelletHelper.ServiceServerDescription
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceServerDescription
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceServerDescription
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceServerDescription = "ps-discovery"
    return:
      type: System.String
    content.vb: Public Const ServiceServerDescription As String = "ps-discovery"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceKBDescription
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceKBDescription
  id: ServiceKBDescription
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceKBDescription
  nameWithType: PelletHelper.ServiceKBDescription
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceKBDescription
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceKBDescription
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceKBDescription = "kb-discovery"
    return:
      type: System.String
    content.vb: Public Const ServiceKBDescription As String = "kb-discovery"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceRealize
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceRealize
  id: ServiceRealize
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceRealize
  nameWithType: PelletHelper.ServiceRealize
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceRealize
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceRealize
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 40
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceRealize = "realize"
    return:
      type: System.String
    content.vb: Public Const ServiceRealize As String = "realize"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceNamespaces
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceNamespaces
  id: ServiceNamespaces
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceNamespaces
  nameWithType: PelletHelper.ServiceNamespaces
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceNamespaces
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceNamespaces
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceNamespaces = "ns-prefix"
    return:
      type: System.String
    content.vb: Public Const ServiceNamespaces As String = "ns-prefix"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceQuery
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceQuery
  id: ServiceQuery
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceQuery
  nameWithType: PelletHelper.ServiceQuery
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceQuery
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceQuery
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 42
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceQuery = "query"
    return:
      type: System.String
    content.vb: Public Const ServiceQuery As String = "query"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceConsistency
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceConsistency
  id: ServiceConsistency
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceConsistency
  nameWithType: PelletHelper.ServiceConsistency
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceConsistency
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceConsistency
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 43
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceConsistency = "consistency"
    return:
      type: System.String
    content.vb: Public Const ServiceConsistency As String = "consistency"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainUnsat
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainUnsat
  id: ServiceExplainUnsat
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceExplainUnsat
  nameWithType: PelletHelper.ServiceExplainUnsat
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainUnsat
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceExplainUnsat
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 44
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceExplainUnsat = "explain-unsat"
    return:
      type: System.String
    content.vb: Public Const ServiceExplainUnsat As String = "explain-unsat"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainInstance
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainInstance
  id: ServiceExplainInstance
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceExplainInstance
  nameWithType: PelletHelper.ServiceExplainInstance
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainInstance
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceExplainInstance
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 45
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceExplainInstance = "explain-instance"
    return:
      type: System.String
    content.vb: Public Const ServiceExplainInstance As String = "explain-instance"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceClassify
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceClassify
  id: ServiceClassify
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceClassify
  nameWithType: PelletHelper.ServiceClassify
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceClassify
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceClassify
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceClassify = "classify"
    return:
      type: System.String
    content.vb: Public Const ServiceClassify As String = "classify"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceSearch
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceSearch
  id: ServiceSearch
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceSearch
  nameWithType: PelletHelper.ServiceSearch
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceSearch
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceSearch
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceSearch = "search"
    return:
      type: System.String
    content.vb: Public Const ServiceSearch As String = "search"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainSubclass
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainSubclass
  id: ServiceExplainSubclass
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceExplainSubclass
  nameWithType: PelletHelper.ServiceExplainSubclass
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainSubclass
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceExplainSubclass
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 48
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceExplainSubclass = "explain-subclass"
    return:
      type: System.String
    content.vb: Public Const ServiceExplainSubclass As String = "explain-subclass"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainInconsistent
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainInconsistent
  id: ServiceExplainInconsistent
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceExplainInconsistent
  nameWithType: PelletHelper.ServiceExplainInconsistent
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainInconsistent
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceExplainInconsistent
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceExplainInconsistent = "explain-inconsistent"
    return:
      type: System.String
    content.vb: Public Const ServiceExplainInconsistent As String = "explain-inconsistent"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplain
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplain
  id: ServiceExplain
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceExplain
  nameWithType: PelletHelper.ServiceExplain
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplain
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceExplain
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceExplain = "explain"
    return:
      type: System.String
    content.vb: Public Const ServiceExplain As String = "explain"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainProperty
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainProperty
  id: ServiceExplainProperty
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceExplainProperty
  nameWithType: PelletHelper.ServiceExplainProperty
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceExplainProperty
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceExplainProperty
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceExplainProperty = "explain-property"
    return:
      type: System.String
    content.vb: Public Const ServiceExplainProperty As String = "explain-property"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceIntegrityConstraintValidation
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceIntegrityConstraintValidation
  id: ServiceIntegrityConstraintValidation
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceIntegrityConstraintValidation
  nameWithType: PelletHelper.ServiceIntegrityConstraintValidation
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceIntegrityConstraintValidation
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceIntegrityConstraintValidation
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 52
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceIntegrityConstraintValidation = "icv"
    return:
      type: System.String
    content.vb: Public Const ServiceIntegrityConstraintValidation As String = "icv"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServicePredict
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServicePredict
  id: ServicePredict
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServicePredict
  nameWithType: PelletHelper.ServicePredict
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServicePredict
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServicePredict
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 53
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServicePredict = "predict"
    return:
      type: System.String
    content.vb: Public Const ServicePredict As String = "predict"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceCluster
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceCluster
  id: ServiceCluster
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceCluster
  nameWithType: PelletHelper.ServiceCluster
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceCluster
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceCluster
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceCluster = "cluster"
    return:
      type: System.String
    content.vb: Public Const ServiceCluster As String = "cluster"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceSimilarity
  commentId: F:VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceSimilarity
  id: ServiceSimilarity
  parent: VDS.RDF.Query.Inference.Pellet.PelletHelper
  langs:
  - csharp
  - vb
  name: ServiceSimilarity
  nameWithType: PelletHelper.ServiceSimilarity
  fullName: VDS.RDF.Query.Inference.Pellet.PelletHelper.ServiceSimilarity
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ServiceSimilarity
    path: Libraries/dotNetRDF/Query/Inference/Pellet/PelletHelper.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference.Pellet
  summary: "\nConstants for Service Names for Services that may be provided by a Pellet Server.\n"
  example: []
  syntax:
    content: public const string ServiceSimilarity = "similarity"
    return:
      type: System.String
    content.vb: Public Const ServiceSimilarity As String = "similarity"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: VDS.RDF.Query.Inference.Pellet
  commentId: N:VDS.RDF.Query.Inference.Pellet
  name: VDS.RDF.Query.Inference.Pellet
  nameWithType: VDS.RDF.Query.Inference.Pellet
  fullName: VDS.RDF.Query.Inference.Pellet
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
shouldSkipMarkup: true
