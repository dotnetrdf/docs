### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.SparqlSpecialQueryType
  commentId: T:VDS.RDF.Query.SparqlSpecialQueryType
  id: SparqlSpecialQueryType
  parent: VDS.RDF.Query
  children:
  - VDS.RDF.Query.SparqlSpecialQueryType.AskAnyTriples
  - VDS.RDF.Query.SparqlSpecialQueryType.DistinctGraphs
  - VDS.RDF.Query.SparqlSpecialQueryType.NotApplicable
  - VDS.RDF.Query.SparqlSpecialQueryType.Unknown
  langs:
  - csharp
  - vb
  name: SparqlSpecialQueryType
  nameWithType: SparqlSpecialQueryType
  fullName: VDS.RDF.Query.SparqlSpecialQueryType
  type: Enum
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SparqlSpecialQueryType
    path: Libraries/dotNetRDF/Query/SPARQLQuery.cs
    startLine: 101
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nTypes of Special SPARQL Query which may be optimised in special ways by the libraries SPARQL Engines.\n"
  example: []
  syntax:
    content: public enum SparqlSpecialQueryType
    content.vb: Public Enum SparqlSpecialQueryType
  extensionMethods:
  - VDS.RDF.Query.SparqlSpecialQueryType.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: VDS.RDF.Query.SparqlSpecialQueryType.DistinctGraphs
  commentId: F:VDS.RDF.Query.SparqlSpecialQueryType.DistinctGraphs
  id: DistinctGraphs
  parent: VDS.RDF.Query.SparqlSpecialQueryType
  langs:
  - csharp
  - vb
  name: DistinctGraphs
  nameWithType: SparqlSpecialQueryType.DistinctGraphs
  fullName: VDS.RDF.Query.SparqlSpecialQueryType.DistinctGraphs
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DistinctGraphs
    path: Libraries/dotNetRDF/Query/SPARQLQuery.cs
    startLine: 106
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nThe Query is of the form SELECT DISTINCT ?g WHERE {GRAPH ?g {?s ?p ?o}}\n"
  example: []
  syntax:
    content: DistinctGraphs = 0
    return:
      type: VDS.RDF.Query.SparqlSpecialQueryType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecialQueryType.NotApplicable
  commentId: F:VDS.RDF.Query.SparqlSpecialQueryType.NotApplicable
  id: NotApplicable
  parent: VDS.RDF.Query.SparqlSpecialQueryType
  langs:
  - csharp
  - vb
  name: NotApplicable
  nameWithType: SparqlSpecialQueryType.NotApplicable
  fullName: VDS.RDF.Query.SparqlSpecialQueryType.NotApplicable
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NotApplicable
    path: Libraries/dotNetRDF/Query/SPARQLQuery.cs
    startLine: 110
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nThe Query has no applicable special optimisation\n"
  example: []
  syntax:
    content: NotApplicable = 1
    return:
      type: VDS.RDF.Query.SparqlSpecialQueryType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecialQueryType.Unknown
  commentId: F:VDS.RDF.Query.SparqlSpecialQueryType.Unknown
  id: Unknown
  parent: VDS.RDF.Query.SparqlSpecialQueryType
  langs:
  - csharp
  - vb
  name: Unknown
  nameWithType: SparqlSpecialQueryType.Unknown
  fullName: VDS.RDF.Query.SparqlSpecialQueryType.Unknown
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Unknown
    path: Libraries/dotNetRDF/Query/SPARQLQuery.cs
    startLine: 114
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nThe Query has not yet been tested to determine if special optimisations are applicable\n"
  example: []
  syntax:
    content: Unknown = 2
    return:
      type: VDS.RDF.Query.SparqlSpecialQueryType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.SparqlSpecialQueryType.AskAnyTriples
  commentId: F:VDS.RDF.Query.SparqlSpecialQueryType.AskAnyTriples
  id: AskAnyTriples
  parent: VDS.RDF.Query.SparqlSpecialQueryType
  langs:
  - csharp
  - vb
  name: AskAnyTriples
  nameWithType: SparqlSpecialQueryType.AskAnyTriples
  fullName: VDS.RDF.Query.SparqlSpecialQueryType.AskAnyTriples
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/SPARQLQuery.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AskAnyTriples
    path: Libraries/dotNetRDF/Query/SPARQLQuery.cs
    startLine: 118
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query
  summary: "\nThe Query is of the form ASK WHERE {?s ?p ?o}\n"
  example: []
  syntax:
    content: AskAnyTriples = 3
    return:
      type: VDS.RDF.Query.SparqlSpecialQueryType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.SparqlSpecialQueryType.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SparqlSpecialQueryType>()
  nameWithType: Extensions.AsEnumerable<SparqlSpecialQueryType>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlSpecialQueryType>()
  nameWithType.vb: Extensions.AsEnumerable(Of SparqlSpecialQueryType)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlSpecialQueryType)()
  name.vb: AsEnumerable(Of SparqlSpecialQueryType)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SparqlSpecialQueryType>
    nameWithType: Extensions.AsEnumerable<SparqlSpecialQueryType>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.SparqlSpecialQueryType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SparqlSpecialQueryType)
    nameWithType: Extensions.AsEnumerable(Of SparqlSpecialQueryType)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.SparqlSpecialQueryType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.SparqlSpecialQueryType
  commentId: T:VDS.RDF.Query.SparqlSpecialQueryType
  parent: VDS.RDF.Query
  name: SparqlSpecialQueryType
  nameWithType: SparqlSpecialQueryType
  fullName: VDS.RDF.Query.SparqlSpecialQueryType
shouldSkipMarkup: true
