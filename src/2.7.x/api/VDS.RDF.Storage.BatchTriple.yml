### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Storage.BatchTriple
  commentId: T:VDS.RDF.Storage.BatchTriple
  id: BatchTriple
  parent: VDS.RDF.Storage
  children:
  - VDS.RDF.Storage.BatchTriple.#ctor(VDS.RDF.Triple,System.String)
  - VDS.RDF.Storage.BatchTriple.Equals(System.Object)
  - VDS.RDF.Storage.BatchTriple.GetHashCode
  - VDS.RDF.Storage.BatchTriple.GraphID
  - VDS.RDF.Storage.BatchTriple.Triple
  langs:
  - csharp
  - vb
  name: BatchTriple
  nameWithType: BatchTriple
  fullName: VDS.RDF.Storage.BatchTriple
  type: Struct
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BatchTriple.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BatchTriple
    path: Libraries/dotNetRDF/Storage/BatchTriple.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nStructure for representing Triples that are waiting to be Batch written to the Database.\n"
  example: []
  syntax:
    content: public struct BatchTriple
    content.vb: Public Structure BatchTriple
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - VDS.RDF.Storage.BatchTriple.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: VDS.RDF.Storage.BatchTriple.#ctor(VDS.RDF.Triple,System.String)
  commentId: M:VDS.RDF.Storage.BatchTriple.#ctor(VDS.RDF.Triple,System.String)
  id: '#ctor(VDS.RDF.Triple,System.String)'
  parent: VDS.RDF.Storage.BatchTriple
  langs:
  - csharp
  - vb
  name: BatchTriple(Triple, String)
  nameWithType: BatchTriple.BatchTriple(Triple, String)
  fullName: VDS.RDF.Storage.BatchTriple.BatchTriple(VDS.RDF.Triple, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BatchTriple.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Storage/BatchTriple.cs
    startLine: 44
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nCreates a new Batch Triple.\n"
  example: []
  syntax:
    content: public BatchTriple(Triple t, string graphID)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    - id: graphID
      type: System.String
      description: Graph ID to store Triple for.
    content.vb: Public Sub New(t As Triple, graphID As String)
  overload: VDS.RDF.Storage.BatchTriple.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.BatchTriple.Triple
  commentId: P:VDS.RDF.Storage.BatchTriple.Triple
  id: Triple
  parent: VDS.RDF.Storage.BatchTriple
  langs:
  - csharp
  - vb
  name: Triple
  nameWithType: BatchTriple.Triple
  fullName: VDS.RDF.Storage.BatchTriple.Triple
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BatchTriple.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Triple
    path: Libraries/dotNetRDF/Storage/BatchTriple.cs
    startLine: 53
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nTriple.\n"
  example: []
  syntax:
    content: public readonly Triple Triple { get; }
    parameters: []
    return:
      type: VDS.RDF.Triple
    content.vb: Public ReadOnly Property Triple As Triple
  overload: VDS.RDF.Storage.BatchTriple.Triple*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Storage.BatchTriple.GraphID
  commentId: P:VDS.RDF.Storage.BatchTriple.GraphID
  id: GraphID
  parent: VDS.RDF.Storage.BatchTriple
  langs:
  - csharp
  - vb
  name: GraphID
  nameWithType: BatchTriple.GraphID
  fullName: VDS.RDF.Storage.BatchTriple.GraphID
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BatchTriple.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GraphID
    path: Libraries/dotNetRDF/Storage/BatchTriple.cs
    startLine: 64
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nGraph ID.\n"
  example: []
  syntax:
    content: public readonly string GraphID { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property GraphID As String
  overload: VDS.RDF.Storage.BatchTriple.GraphID*
  modifiers.csharp:
  - public
  - readonly
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Storage.BatchTriple.Equals(System.Object)
  commentId: M:VDS.RDF.Storage.BatchTriple.Equals(System.Object)
  id: Equals(System.Object)
  parent: VDS.RDF.Storage.BatchTriple
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: BatchTriple.Equals(Object)
  fullName: VDS.RDF.Storage.BatchTriple.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BatchTriple.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Equals
    path: Libraries/dotNetRDF/Storage/BatchTriple.cs
    startLine: 77
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nEquality for Batch Triples.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object to test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: VDS.RDF.Storage.BatchTriple.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.BatchTriple.GetHashCode
  commentId: M:VDS.RDF.Storage.BatchTriple.GetHashCode
  id: GetHashCode
  parent: VDS.RDF.Storage.BatchTriple
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: BatchTriple.GetHashCode()
  fullName: VDS.RDF.Storage.BatchTriple.GetHashCode()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/BatchTriple.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetHashCode
    path: Libraries/dotNetRDF/Storage/BatchTriple.cs
    startLine: 94
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage
  summary: "\nHash Code for Batch Triples.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: VDS.RDF.Storage.BatchTriple.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Storage
  commentId: N:VDS.RDF.Storage
  name: VDS.RDF.Storage
  nameWithType: VDS.RDF.Storage
  fullName: VDS.RDF.Storage
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BatchTriple.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BatchTriple>()
  nameWithType: Extensions.AsEnumerable<BatchTriple>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.BatchTriple>()
  nameWithType.vb: Extensions.AsEnumerable(Of BatchTriple)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.BatchTriple)()
  name.vb: AsEnumerable(Of BatchTriple)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BatchTriple>
    nameWithType: Extensions.AsEnumerable<BatchTriple>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.BatchTriple>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BatchTriple)
    nameWithType: Extensions.AsEnumerable(Of BatchTriple)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.BatchTriple)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Storage.BatchTriple.#ctor*
  commentId: Overload:VDS.RDF.Storage.BatchTriple.#ctor
  name: BatchTriple
  nameWithType: BatchTriple.BatchTriple
  fullName: VDS.RDF.Storage.BatchTriple.BatchTriple
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Storage.BatchTriple.Triple*
  commentId: Overload:VDS.RDF.Storage.BatchTriple.Triple
  name: Triple
  nameWithType: BatchTriple.Triple
  fullName: VDS.RDF.Storage.BatchTriple.Triple
- uid: VDS.RDF.Storage.BatchTriple.GraphID*
  commentId: Overload:VDS.RDF.Storage.BatchTriple.GraphID
  name: GraphID
  nameWithType: BatchTriple.GraphID
  fullName: VDS.RDF.Storage.BatchTriple.GraphID
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BatchTriple.Equals*
  commentId: Overload:VDS.RDF.Storage.BatchTriple.Equals
  name: Equals
  nameWithType: BatchTriple.Equals
  fullName: VDS.RDF.Storage.BatchTriple.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BatchTriple.GetHashCode*
  commentId: Overload:VDS.RDF.Storage.BatchTriple.GetHashCode
  name: GetHashCode
  nameWithType: BatchTriple.GetHashCode
  fullName: VDS.RDF.Storage.BatchTriple.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
shouldSkipMarkup: true
