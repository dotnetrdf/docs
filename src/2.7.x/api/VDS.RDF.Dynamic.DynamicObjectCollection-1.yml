### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1
  commentId: T:VDS.RDF.Dynamic.DynamicObjectCollection`1
  id: DynamicObjectCollection`1
  parent: VDS.RDF.Dynamic
  children:
  - VDS.RDF.Dynamic.DynamicObjectCollection`1.#ctor(VDS.RDF.Dynamic.DynamicNode,System.String)
  - VDS.RDF.Dynamic.DynamicObjectCollection`1.Add(`0)
  - VDS.RDF.Dynamic.DynamicObjectCollection`1.Contains(`0)
  - VDS.RDF.Dynamic.DynamicObjectCollection`1.CopyTo(`0[],System.Int32)
  - VDS.RDF.Dynamic.DynamicObjectCollection`1.Remove(`0)
  - VDS.RDF.Dynamic.DynamicObjectCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  langs:
  - csharp
  - vb
  name: DynamicObjectCollection<T>
  nameWithType: DynamicObjectCollection<T>
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DynamicObjectCollection
    path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nRepresents a strongly typed read/write dynamic collection of objects by subject and predicate.\n"
  example: []
  syntax:
    content: 'public class DynamicObjectCollection<T> : DynamicObjectCollection, ICollection<object>, IEnumerable<object>, IDynamicMetaObjectProvider, ICollection<T>, IEnumerable<T>, IEnumerable'
    typeParameters:
    - id: T
      description: The type of statement objects.
    content.vb: >-
      Public Class DynamicObjectCollection(Of T)
          Inherits DynamicObjectCollection
          Implements ICollection(Of Object), IEnumerable(Of Object), IDynamicMetaObjectProvider, ICollection(Of T), IEnumerable(Of T), IEnumerable
  inheritance:
  - System.Object
  - VDS.RDF.Dynamic.DynamicObjectCollection
  implements:
  - System.Collections.Generic.ICollection{System.Object}
  - System.Collections.Generic.IEnumerable{System.Object}
  - System.Dynamic.IDynamicMetaObjectProvider
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - VDS.RDF.Dynamic.DynamicObjectCollection.Count
  - VDS.RDF.Dynamic.DynamicObjectCollection.IsReadOnly
  - VDS.RDF.Dynamic.DynamicObjectCollection.Objects
  - VDS.RDF.Dynamic.DynamicObjectCollection.Add(System.Object)
  - VDS.RDF.Dynamic.DynamicObjectCollection.Clear
  - VDS.RDF.Dynamic.DynamicObjectCollection.Contains(System.Object)
  - VDS.RDF.Dynamic.DynamicObjectCollection.CopyTo(System.Object[],System.Int32)
  - VDS.RDF.Dynamic.DynamicObjectCollection.GetEnumerator
  - VDS.RDF.Dynamic.DynamicObjectCollection.Remove(System.Object)
  - VDS.RDF.Dynamic.DynamicObjectCollection.System#Collections#IEnumerable#GetEnumerator
  - VDS.RDF.Dynamic.DynamicObjectCollection.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Dynamic.DynamicObjectCollection`1.VDS.RDF.Extensions.AsEnumerable``1
  nameWithType.vb: DynamicObjectCollection(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T)
  name.vb: DynamicObjectCollection(Of T)
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.#ctor(VDS.RDF.Dynamic.DynamicNode,System.String)
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection`1.#ctor(VDS.RDF.Dynamic.DynamicNode,System.String)
  id: '#ctor(VDS.RDF.Dynamic.DynamicNode,System.String)'
  parent: VDS.RDF.Dynamic.DynamicObjectCollection`1
  langs:
  - csharp
  - vb
  name: DynamicObjectCollection(DynamicNode, String)
  nameWithType: DynamicObjectCollection<T>.DynamicObjectCollection(DynamicNode, String)
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>.DynamicObjectCollection(VDS.RDF.Dynamic.DynamicNode, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
    startLine: 42
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nInitializes a new instance of the <xref href=\"VDS.RDF.Dynamic.DynamicObjectCollection%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public DynamicObjectCollection(DynamicNode subject, string predicate)
    parameters:
    - id: subject
      type: VDS.RDF.Dynamic.DynamicNode
      description: The subject to use.
    - id: predicate
      type: System.String
      description: The predicate to use.
    content.vb: Public Sub New(subject As DynamicNode, predicate As String)
  overload: VDS.RDF.Dynamic.DynamicObjectCollection`1.#ctor*
  nameWithType.vb: DynamicObjectCollection(Of T).DynamicObjectCollection(DynamicNode, String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T).DynamicObjectCollection(VDS.RDF.Dynamic.DynamicNode, System.String)
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.Add(`0)
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection`1.Add(`0)
  id: Add(`0)
  parent: VDS.RDF.Dynamic.DynamicObjectCollection`1
  langs:
  - csharp
  - vb
  name: Add(T)
  nameWithType: DynamicObjectCollection<T>.Add(T)
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>.Add(T)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Add
    path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
    startLine: 53
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nAsserts statements equivalent to given subject and predicate and <code data-dev-comment-type=\"paramref\" class=\"paramref\">object</code>.\n"
  example: []
  syntax:
    content: public void Add(T object)
    parameters:
    - id: object
      type: '{T}'
      description: The object to assert.
    content.vb: Public Sub Add(object As T)
  overload: VDS.RDF.Dynamic.DynamicObjectCollection`1.Add*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Add({T})
  nameWithType.vb: DynamicObjectCollection(Of T).Add(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T).Add(T)
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.Contains(`0)
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection`1.Contains(`0)
  id: Contains(`0)
  parent: VDS.RDF.Dynamic.DynamicObjectCollection`1
  langs:
  - csharp
  - vb
  name: Contains(T)
  nameWithType: DynamicObjectCollection<T>.Contains(T)
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>.Contains(T)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Contains
    path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nChecks whether a statement exists equivalent to given subject and predicate and <code data-dev-comment-type=\"paramref\" class=\"paramref\">object</code>.\n"
  example: []
  syntax:
    content: public bool Contains(T object)
    parameters:
    - id: object
      type: '{T}'
      description: The object to assert.
    return:
      type: System.Boolean
      description: Whether a statement exists equivalent to given subject and predicate and <code data-dev-comment-type="paramref" class="paramref">object</code>.
    content.vb: Public Function Contains(object As T) As Boolean
  overload: VDS.RDF.Dynamic.DynamicObjectCollection`1.Contains*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  nameWithType.vb: DynamicObjectCollection(Of T).Contains(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T).Contains(T)
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.CopyTo(`0[],System.Int32)
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: VDS.RDF.Dynamic.DynamicObjectCollection`1
  langs:
  - csharp
  - vb
  name: CopyTo(T[], Int32)
  nameWithType: DynamicObjectCollection<T>.CopyTo(T[], Int32)
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>.CopyTo(T[], System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CopyTo
    path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
    startLine: 74
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nCopies objects of statements with given subject and predicate <code data-dev-comment-type=\"paramref\" class=\"paramref\">array</code> starting at <code data-dev-comment-type=\"paramref\" class=\"paramref\">index</code>.\n"
  remarks: Known literal nodes are converted to native primitives, URI and blank nodes are wrapped in <xref href="VDS.RDF.Dynamic.DynamicNode" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public void CopyTo(T[] array, int index)
    parameters:
    - id: array
      type: '{T}[]'
      description: The destination of subjects copied.
    - id: index
      type: System.Int32
      description: The index at which copying begins.
    content.vb: Public Sub CopyTo(array As T(), index As Integer)
  overload: VDS.RDF.Dynamic.DynamicObjectCollection`1.CopyTo*
  implements:
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  nameWithType.vb: DynamicObjectCollection(Of T).CopyTo(T(), Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.Remove(`0)
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection`1.Remove(`0)
  id: Remove(`0)
  parent: VDS.RDF.Dynamic.DynamicObjectCollection`1
  langs:
  - csharp
  - vb
  name: Remove(T)
  nameWithType: DynamicObjectCollection<T>.Remove(T)
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>.Remove(T)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Remove
    path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
    startLine: 84
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  summary: "\nRetracts statements equivalent to given subject and predicate and <code data-dev-comment-type=\"paramref\" class=\"paramref\">object</code>.\n"
  example: []
  syntax:
    content: public bool Remove(T object)
    parameters:
    - id: object
      type: '{T}'
      description: The object to retract.
    return:
      type: System.Boolean
      description: Whether any statements were retracted.
    content.vb: Public Function Remove(object As T) As Boolean
  overload: VDS.RDF.Dynamic.DynamicObjectCollection`1.Remove*
  implements:
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  nameWithType.vb: DynamicObjectCollection(Of T).Remove(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T).Remove(T)
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isEii: true
  parent: VDS.RDF.Dynamic.DynamicObjectCollection`1
  langs:
  - csharp
  - vb
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: DynamicObjectCollection<T>.IEnumerable<T>.GetEnumerator()
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    path: Libraries/dotNetRDF/Dynamic/DynamicObjectCollectionT.cs
    startLine: 90
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Dynamic
  example: []
  syntax:
    content: IEnumerator<T> IEnumerable<T>.GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
    content.vb: Function System.Collections.Generic.IEnumerable<T>.GetEnumerator As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator
  overload: VDS.RDF.Dynamic.DynamicObjectCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  nameWithType.vb: DynamicObjectCollection(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
references:
- uid: VDS.RDF.Dynamic
  commentId: N:VDS.RDF.Dynamic
  name: VDS.RDF.Dynamic
  nameWithType: VDS.RDF.Dynamic
  fullName: VDS.RDF.Dynamic
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Dynamic.DynamicObjectCollection
  commentId: T:VDS.RDF.Dynamic.DynamicObjectCollection
  parent: VDS.RDF.Dynamic
  name: DynamicObjectCollection
  nameWithType: DynamicObjectCollection
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection
- uid: System.Collections.Generic.ICollection{System.Object}
  commentId: T:System.Collections.Generic.ICollection{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Object>
  nameWithType: ICollection<Object>
  fullName: System.Collections.Generic.ICollection<System.Object>
  nameWithType.vb: ICollection(Of Object)
  fullName.vb: System.Collections.Generic.ICollection(Of System.Object)
  name.vb: ICollection(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Object}
  commentId: T:System.Collections.Generic.IEnumerable{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Object>
  nameWithType: IEnumerable<Object>
  fullName: System.Collections.Generic.IEnumerable<System.Object>
  nameWithType.vb: IEnumerable(Of Object)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Object)
  name.vb: IEnumerable(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Dynamic.IDynamicMetaObjectProvider
  commentId: T:System.Dynamic.IDynamicMetaObjectProvider
  parent: System.Dynamic
  isExternal: true
  name: IDynamicMetaObjectProvider
  nameWithType: IDynamicMetaObjectProvider
  fullName: System.Dynamic.IDynamicMetaObjectProvider
- uid: System.Collections.Generic.ICollection{{T}}
  commentId: T:System.Collections.Generic.ICollection{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: VDS.RDF.Dynamic.DynamicObjectCollection.Count
  commentId: P:VDS.RDF.Dynamic.DynamicObjectCollection.Count
  parent: VDS.RDF.Dynamic.DynamicObjectCollection
  name: Count
  nameWithType: DynamicObjectCollection.Count
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Count
- uid: VDS.RDF.Dynamic.DynamicObjectCollection.IsReadOnly
  commentId: P:VDS.RDF.Dynamic.DynamicObjectCollection.IsReadOnly
  parent: VDS.RDF.Dynamic.DynamicObjectCollection
  name: IsReadOnly
  nameWithType: DynamicObjectCollection.IsReadOnly
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection.IsReadOnly
- uid: VDS.RDF.Dynamic.DynamicObjectCollection.Objects
  commentId: P:VDS.RDF.Dynamic.DynamicObjectCollection.Objects
  parent: VDS.RDF.Dynamic.DynamicObjectCollection
  name: Objects
  nameWithType: DynamicObjectCollection.Objects
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Objects
- uid: VDS.RDF.Dynamic.DynamicObjectCollection.Add(System.Object)
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection.Add(System.Object)
  parent: VDS.RDF.Dynamic.DynamicObjectCollection
  isExternal: true
  name: Add(Object)
  nameWithType: DynamicObjectCollection.Add(Object)
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Add(System.Object)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.Add(System.Object)
    name: Add
    nameWithType: DynamicObjectCollection.Add
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.Add(System.Object)
    name: Add
    nameWithType: DynamicObjectCollection.Add
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicObjectCollection.Clear
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection.Clear
  parent: VDS.RDF.Dynamic.DynamicObjectCollection
  name: Clear()
  nameWithType: DynamicObjectCollection.Clear()
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Clear()
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.Clear
    name: Clear
    nameWithType: DynamicObjectCollection.Clear
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.Clear
    name: Clear
    nameWithType: DynamicObjectCollection.Clear
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicObjectCollection.Contains(System.Object)
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection.Contains(System.Object)
  parent: VDS.RDF.Dynamic.DynamicObjectCollection
  isExternal: true
  name: Contains(Object)
  nameWithType: DynamicObjectCollection.Contains(Object)
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Contains(System.Object)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.Contains(System.Object)
    name: Contains
    nameWithType: DynamicObjectCollection.Contains
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.Contains(System.Object)
    name: Contains
    nameWithType: DynamicObjectCollection.Contains
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Contains
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicObjectCollection.CopyTo(System.Object[],System.Int32)
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection.CopyTo(System.Object[],System.Int32)
  parent: VDS.RDF.Dynamic.DynamicObjectCollection
  isExternal: true
  name: CopyTo(Object[], Int32)
  nameWithType: DynamicObjectCollection.CopyTo(Object[], Int32)
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection.CopyTo(System.Object[], System.Int32)
  nameWithType.vb: DynamicObjectCollection.CopyTo(Object(), Int32)
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection.CopyTo(System.Object(), System.Int32)
  name.vb: CopyTo(Object(), Int32)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.CopyTo(System.Object[],System.Int32)
    name: CopyTo
    nameWithType: DynamicObjectCollection.CopyTo
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.CopyTo(System.Object[],System.Int32)
    name: CopyTo
    nameWithType: DynamicObjectCollection.CopyTo
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicObjectCollection.GetEnumerator
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection.GetEnumerator
  parent: VDS.RDF.Dynamic.DynamicObjectCollection
  name: GetEnumerator()
  nameWithType: DynamicObjectCollection.GetEnumerator()
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection.GetEnumerator()
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.GetEnumerator
    name: GetEnumerator
    nameWithType: DynamicObjectCollection.GetEnumerator
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.GetEnumerator
    name: GetEnumerator
    nameWithType: DynamicObjectCollection.GetEnumerator
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicObjectCollection.Remove(System.Object)
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection.Remove(System.Object)
  parent: VDS.RDF.Dynamic.DynamicObjectCollection
  isExternal: true
  name: Remove(Object)
  nameWithType: DynamicObjectCollection.Remove(Object)
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Remove(System.Object)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.Remove(System.Object)
    name: Remove
    nameWithType: DynamicObjectCollection.Remove
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.Remove(System.Object)
    name: Remove
    nameWithType: DynamicObjectCollection.Remove
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicObjectCollection.System#Collections#IEnumerable#GetEnumerator
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection.System#Collections#IEnumerable#GetEnumerator
  parent: VDS.RDF.Dynamic.DynamicObjectCollection
  name: IEnumerable.GetEnumerator()
  nameWithType: DynamicObjectCollection.IEnumerable.GetEnumerator()
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: DynamicObjectCollection.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: DynamicObjectCollection.IEnumerable.GetEnumerator
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: DynamicObjectCollection.System.Collections.IEnumerable.GetEnumerator
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.System.Collections.IEnumerable.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicObjectCollection.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  commentId: M:VDS.RDF.Dynamic.DynamicObjectCollection.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
  parent: VDS.RDF.Dynamic.DynamicObjectCollection
  isExternal: true
  name: IDynamicMetaObjectProvider.GetMetaObject(Expression)
  nameWithType: DynamicObjectCollection.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(System.Linq.Expressions.Expression)
  nameWithType.vb: DynamicObjectCollection.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  name.vb: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
    name: IDynamicMetaObjectProvider.GetMetaObject
    nameWithType: DynamicObjectCollection.IDynamicMetaObjectProvider.GetMetaObject
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)
    name: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    nameWithType: DynamicObjectCollection.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<DynamicObjectCollection<T>>()
  nameWithType: Extensions.AsEnumerable<DynamicObjectCollection<T>>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Dynamic.DynamicObjectCollection<T>>()
  nameWithType.vb: Extensions.AsEnumerable(Of DynamicObjectCollection(Of T))()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Dynamic.DynamicObjectCollection(Of T))()
  name.vb: AsEnumerable(Of DynamicObjectCollection(Of T))()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<DynamicObjectCollection<T>>
    nameWithType: Extensions.AsEnumerable<DynamicObjectCollection<T>>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Dynamic.DynamicObjectCollection<T>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of DynamicObjectCollection(Of T))
    nameWithType: Extensions.AsEnumerable(Of DynamicObjectCollection(Of T))
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Dynamic.DynamicObjectCollection(Of T))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Dynamic
  commentId: N:System.Dynamic
  isExternal: true
  name: System.Dynamic
  nameWithType: System.Dynamic
  fullName: System.Dynamic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1
  commentId: T:VDS.RDF.Dynamic.DynamicObjectCollection`1
  name: DynamicObjectCollection<T>
  nameWithType: DynamicObjectCollection<T>
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>
  nameWithType.vb: DynamicObjectCollection(Of T)
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T)
  name.vb: DynamicObjectCollection(Of T)
  spec.csharp:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection`1
    name: DynamicObjectCollection
    nameWithType: DynamicObjectCollection
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Dynamic.DynamicObjectCollection`1
    name: DynamicObjectCollection
    nameWithType: DynamicObjectCollection
    fullName: VDS.RDF.Dynamic.DynamicObjectCollection
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.#ctor*
  commentId: Overload:VDS.RDF.Dynamic.DynamicObjectCollection`1.#ctor
  name: DynamicObjectCollection
  nameWithType: DynamicObjectCollection<T>.DynamicObjectCollection
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>.DynamicObjectCollection
  nameWithType.vb: DynamicObjectCollection(Of T).DynamicObjectCollection
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T).DynamicObjectCollection
- uid: VDS.RDF.Dynamic.DynamicNode
  commentId: T:VDS.RDF.Dynamic.DynamicNode
  parent: VDS.RDF.Dynamic
  name: DynamicNode
  nameWithType: DynamicNode
  fullName: VDS.RDF.Dynamic.DynamicNode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.Add*
  commentId: Overload:VDS.RDF.Dynamic.DynamicObjectCollection`1.Add
  name: Add
  nameWithType: DynamicObjectCollection<T>.Add
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>.Add
  nameWithType.vb: DynamicObjectCollection(Of T).Add
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T).Add
- uid: System.Collections.Generic.ICollection{{T}}.Add({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Add(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Add(`0)
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.ICollection`1.Add(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Add(`0)
  isExternal: true
  name: Add(T)
  nameWithType: ICollection<T>.Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  nameWithType.vb: ICollection(Of T).Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection<T>.Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    nameWithType: ICollection(Of T).Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.Contains*
  commentId: Overload:VDS.RDF.Dynamic.DynamicObjectCollection`1.Contains
  name: Contains
  nameWithType: DynamicObjectCollection<T>.Contains
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>.Contains
  nameWithType.vb: DynamicObjectCollection(Of T).Contains
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T).Contains
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Contains(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains(`0)
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1.Contains(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: ICollection<T>.Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  nameWithType.vb: ICollection(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection<T>.Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    nameWithType: ICollection(Of T).Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.CopyTo*
  commentId: Overload:VDS.RDF.Dynamic.DynamicObjectCollection`1.CopyTo
  name: CopyTo
  nameWithType: DynamicObjectCollection<T>.CopyTo
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>.CopyTo
  nameWithType.vb: DynamicObjectCollection(Of T).CopyTo
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T).CopyTo
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection{`0}.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: ICollection<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: ICollection(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection<T>.CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: ICollection(Of T).CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.Remove*
  commentId: Overload:VDS.RDF.Dynamic.DynamicObjectCollection`1.Remove
  name: Remove
  nameWithType: DynamicObjectCollection<T>.Remove
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>.Remove
  nameWithType.vb: DynamicObjectCollection(Of T).Remove
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T).Remove
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  commentId: M:System.Collections.Generic.ICollection{`0}.Remove(`0)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove(`0)
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove(`0)
  commentId: M:System.Collections.Generic.ICollection`1.Remove(`0)
  isExternal: true
  name: Remove(T)
  nameWithType: ICollection<T>.Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  nameWithType.vb: ICollection(Of T).Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection<T>.Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    nameWithType: ICollection(Of T).Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Dynamic.DynamicObjectCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator*
  commentId: Overload:VDS.RDF.Dynamic.DynamicObjectCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<T>.GetEnumerator
  nameWithType: DynamicObjectCollection<T>.IEnumerable<T>.GetEnumerator
  fullName: VDS.RDF.Dynamic.DynamicObjectCollection<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
  nameWithType.vb: DynamicObjectCollection(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
  fullName.vb: VDS.RDF.Dynamic.DynamicObjectCollection(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{`0}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
