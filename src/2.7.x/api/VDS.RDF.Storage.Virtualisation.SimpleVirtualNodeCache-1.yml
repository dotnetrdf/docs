### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache`1
  commentId: T:VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache`1
  id: SimpleVirtualNodeCache`1
  parent: VDS.RDF.Storage.Virtualisation
  children:
  - VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache`1.#ctor
  langs:
  - csharp
  - vb
  name: SimpleVirtualNodeCache<TNodeID>
  nameWithType: SimpleVirtualNodeCache<TNodeID>
  fullName: VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache<TNodeID>
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNodeCache.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SimpleVirtualNodeCache
    path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNodeCache.cs
    startLine: 86
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nA Cache that maps from Virtual IDs to Materialised Values where the IDs map directly to dictionary keys.\n"
  example: []
  syntax:
    content: 'public class SimpleVirtualNodeCache<TNodeID> : VirtualNodeCache<TNodeID, TNodeID>'
    typeParameters:
    - id: TNodeID
      description: Node ID Type.
    content.vb: >-
      Public Class SimpleVirtualNodeCache(Of TNodeID)
          Inherits VirtualNodeCache(Of TNodeID, TNodeID)
  inheritance:
  - System.Object
  - VDS.RDF.Storage.Virtualisation.VirtualNodeCache{{TNodeID},{TNodeID}}
  inheritedMembers:
  - VDS.RDF.Storage.Virtualisation.VirtualNodeCache{{TNodeID},{TNodeID}}.Item({TNodeID})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache`1.VDS.RDF.Extensions.AsEnumerable``1
  nameWithType.vb: SimpleVirtualNodeCache(Of TNodeID)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache(Of TNodeID)
  name.vb: SimpleVirtualNodeCache(Of TNodeID)
- uid: VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache`1.#ctor
  commentId: M:VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache`1.#ctor
  id: '#ctor'
  parent: VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache`1
  langs:
  - csharp
  - vb
  name: SimpleVirtualNodeCache()
  nameWithType: SimpleVirtualNodeCache<TNodeID>.SimpleVirtualNodeCache()
  fullName: VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache<TNodeID>.SimpleVirtualNodeCache()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNodeCache.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Storage/Virtualisation/VirtualNodeCache.cs
    startLine: 92
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Virtualisation
  summary: "\nCreates a new Simple Virtual Node Cache.\n"
  example: []
  syntax:
    content: public SimpleVirtualNodeCache()
    content.vb: Public Sub New
  overload: VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache`1.#ctor*
  nameWithType.vb: SimpleVirtualNodeCache(Of TNodeID).SimpleVirtualNodeCache()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache(Of TNodeID).SimpleVirtualNodeCache()
references:
- uid: VDS.RDF.Storage.Virtualisation
  commentId: N:VDS.RDF.Storage.Virtualisation
  name: VDS.RDF.Storage.Virtualisation
  nameWithType: VDS.RDF.Storage.Virtualisation
  fullName: VDS.RDF.Storage.Virtualisation
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Storage.Virtualisation.VirtualNodeCache{{TNodeID},{TNodeID}}
  commentId: T:VDS.RDF.Storage.Virtualisation.VirtualNodeCache{`0,`0}
  parent: VDS.RDF.Storage.Virtualisation
  definition: VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2
  name: VirtualNodeCache<TNodeID, TNodeID>
  nameWithType: VirtualNodeCache<TNodeID, TNodeID>
  fullName: VDS.RDF.Storage.Virtualisation.VirtualNodeCache<TNodeID, TNodeID>
  nameWithType.vb: VirtualNodeCache(Of TNodeID, TNodeID)
  fullName.vb: VDS.RDF.Storage.Virtualisation.VirtualNodeCache(Of TNodeID, TNodeID)
  name.vb: VirtualNodeCache(Of TNodeID, TNodeID)
  spec.csharp:
  - uid: VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2
    name: VirtualNodeCache
    nameWithType: VirtualNodeCache
    fullName: VDS.RDF.Storage.Virtualisation.VirtualNodeCache
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2
    name: VirtualNodeCache
    nameWithType: VirtualNodeCache
    fullName: VDS.RDF.Storage.Virtualisation.VirtualNodeCache
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Virtualisation.VirtualNodeCache{{TNodeID},{TNodeID}}.Item({TNodeID})
  commentId: P:VDS.RDF.Storage.Virtualisation.VirtualNodeCache{`0,`0}.Item(`0)
  parent: VDS.RDF.Storage.Virtualisation.VirtualNodeCache{{TNodeID},{TNodeID}}
  definition: VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2.Item(`0)
  name: Item[TNodeID]
  nameWithType: VirtualNodeCache<TNodeID, TNodeID>.Item[TNodeID]
  fullName: VDS.RDF.Storage.Virtualisation.VirtualNodeCache<TNodeID, TNodeID>.Item[TNodeID]
  nameWithType.vb: VirtualNodeCache(Of TNodeID, TNodeID).Item(TNodeID)
  fullName.vb: VDS.RDF.Storage.Virtualisation.VirtualNodeCache(Of TNodeID, TNodeID).Item(TNodeID)
  name.vb: Item(TNodeID)
  spec.csharp:
  - uid: VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2.Item(`0)
    name: Item
    nameWithType: VirtualNodeCache<TNodeID, TNodeID>.Item
    fullName: VDS.RDF.Storage.Virtualisation.VirtualNodeCache<TNodeID, TNodeID>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2.Item(`0)
    name: Item
    nameWithType: VirtualNodeCache(Of TNodeID, TNodeID).Item
    fullName: VDS.RDF.Storage.Virtualisation.VirtualNodeCache(Of TNodeID, TNodeID).Item
  - name: (
    nameWithType: (
    fullName: (
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache`1.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<SimpleVirtualNodeCache<TNodeID>>()
  nameWithType: Extensions.AsEnumerable<SimpleVirtualNodeCache<TNodeID>>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache<TNodeID>>()
  nameWithType.vb: Extensions.AsEnumerable(Of SimpleVirtualNodeCache(Of TNodeID))()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache(Of TNodeID))()
  name.vb: AsEnumerable(Of SimpleVirtualNodeCache(Of TNodeID))()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<SimpleVirtualNodeCache<TNodeID>>
    nameWithType: Extensions.AsEnumerable<SimpleVirtualNodeCache<TNodeID>>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache<TNodeID>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of SimpleVirtualNodeCache(Of TNodeID))
    nameWithType: Extensions.AsEnumerable(Of SimpleVirtualNodeCache(Of TNodeID))
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache(Of TNodeID))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2
  commentId: T:VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2
  name: VirtualNodeCache<TNodeID, TKey>
  nameWithType: VirtualNodeCache<TNodeID, TKey>
  fullName: VDS.RDF.Storage.Virtualisation.VirtualNodeCache<TNodeID, TKey>
  nameWithType.vb: VirtualNodeCache(Of TNodeID, TKey)
  fullName.vb: VDS.RDF.Storage.Virtualisation.VirtualNodeCache(Of TNodeID, TKey)
  name.vb: VirtualNodeCache(Of TNodeID, TKey)
  spec.csharp:
  - uid: VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2
    name: VirtualNodeCache
    nameWithType: VirtualNodeCache
    fullName: VDS.RDF.Storage.Virtualisation.VirtualNodeCache
  - name: <
    nameWithType: <
    fullName: <
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2
    name: VirtualNodeCache
    nameWithType: VirtualNodeCache
    fullName: VDS.RDF.Storage.Virtualisation.VirtualNodeCache
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2.Item(`0)
  commentId: P:VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2.Item(`0)
  name: Item[TNodeID]
  nameWithType: VirtualNodeCache<TNodeID, TKey>.Item[TNodeID]
  fullName: VDS.RDF.Storage.Virtualisation.VirtualNodeCache<TNodeID, TKey>.Item[TNodeID]
  nameWithType.vb: VirtualNodeCache(Of TNodeID, TKey).Item(TNodeID)
  fullName.vb: VDS.RDF.Storage.Virtualisation.VirtualNodeCache(Of TNodeID, TKey).Item(TNodeID)
  name.vb: Item(TNodeID)
  spec.csharp:
  - uid: VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2.Item(`0)
    name: Item
    nameWithType: VirtualNodeCache<TNodeID, TKey>.Item
    fullName: VDS.RDF.Storage.Virtualisation.VirtualNodeCache<TNodeID, TKey>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: VDS.RDF.Storage.Virtualisation.VirtualNodeCache`2.Item(`0)
    name: Item
    nameWithType: VirtualNodeCache(Of TNodeID, TKey).Item
    fullName: VDS.RDF.Storage.Virtualisation.VirtualNodeCache(Of TNodeID, TKey).Item
  - name: (
    nameWithType: (
    fullName: (
  - name: TNodeID
    nameWithType: TNodeID
    fullName: TNodeID
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache`1.#ctor*
  commentId: Overload:VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache`1.#ctor
  name: SimpleVirtualNodeCache
  nameWithType: SimpleVirtualNodeCache<TNodeID>.SimpleVirtualNodeCache
  fullName: VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache<TNodeID>.SimpleVirtualNodeCache
  nameWithType.vb: SimpleVirtualNodeCache(Of TNodeID).SimpleVirtualNodeCache
  fullName.vb: VDS.RDF.Storage.Virtualisation.SimpleVirtualNodeCache(Of TNodeID).SimpleVirtualNodeCache
shouldSkipMarkup: true
