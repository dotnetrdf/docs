### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy
  commentId: T:VDS.RDF.Query.Grouping.ISparqlGroupBy
  id: ISparqlGroupBy
  parent: VDS.RDF.Query.Grouping
  children:
  - VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
  - VDS.RDF.Query.Grouping.ISparqlGroupBy.AssignVariable
  - VDS.RDF.Query.Grouping.ISparqlGroupBy.Child
  - VDS.RDF.Query.Grouping.ISparqlGroupBy.Expression
  - VDS.RDF.Query.Grouping.ISparqlGroupBy.ProjectableVariables
  - VDS.RDF.Query.Grouping.ISparqlGroupBy.Variables
  langs:
  - csharp
  - vb
  name: ISparqlGroupBy
  nameWithType: ISparqlGroupBy
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ISparqlGroupBy
    path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nInterface for Classes that represent SPARQL GROUP BY clauses.\n"
  example: []
  syntax:
    content: public interface ISparqlGroupBy
    content.vb: Public Interface ISparqlGroupBy
  extensionMethods:
  - VDS.RDF.Query.Grouping.ISparqlGroupBy.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  id: Apply(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Grouping.ISparqlGroupBy
  langs:
  - csharp
  - vb
  name: Apply(SparqlEvaluationContext)
  nameWithType: ISparqlGroupBy.Apply(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
    startLine: 42
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nApplies the Grouping to a Result Binder.\n"
  example: []
  syntax:
    content: List<BindingGroup> Apply(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    return:
      type: System.Collections.Generic.List{VDS.RDF.Query.BindingGroup}
      description: ''
    content.vb: Function Apply(context As SparqlEvaluationContext) As List(Of BindingGroup)
  overload: VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply*
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
  commentId: M:VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
  id: Apply(VDS.RDF.Query.SparqlEvaluationContext,System.Collections.Generic.List{VDS.RDF.Query.BindingGroup})
  parent: VDS.RDF.Query.Grouping.ISparqlGroupBy
  langs:
  - csharp
  - vb
  name: Apply(SparqlEvaluationContext, List<BindingGroup>)
  nameWithType: ISparqlGroupBy.Apply(SparqlEvaluationContext, List<BindingGroup>)
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.List<VDS.RDF.Query.BindingGroup>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Apply
    path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nApplies the Grouping to a Result Binder subdividing the Groups from the previous Group By clause into further Groups.\n"
  example: []
  syntax:
    content: List<BindingGroup> Apply(SparqlEvaluationContext context, List<BindingGroup> groups)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    - id: groups
      type: System.Collections.Generic.List{VDS.RDF.Query.BindingGroup}
      description: Groups.
    return:
      type: System.Collections.Generic.List{VDS.RDF.Query.BindingGroup}
      description: ''
    content.vb: Function Apply(context As SparqlEvaluationContext, groups As List(Of BindingGroup)) As List(Of BindingGroup)
  overload: VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply*
  nameWithType.vb: ISparqlGroupBy.Apply(SparqlEvaluationContext, List(Of BindingGroup))
  fullName.vb: VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply(VDS.RDF.Query.SparqlEvaluationContext, System.Collections.Generic.List(Of VDS.RDF.Query.BindingGroup))
  name.vb: Apply(SparqlEvaluationContext, List(Of BindingGroup))
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.Child
  commentId: P:VDS.RDF.Query.Grouping.ISparqlGroupBy.Child
  id: Child
  parent: VDS.RDF.Query.Grouping.ISparqlGroupBy
  langs:
  - csharp
  - vb
  name: Child
  nameWithType: ISparqlGroupBy.Child
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.Child
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Child
    path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nGets/Sets the child GROUP BY Clause.\n"
  example: []
  syntax:
    content: ISparqlGroupBy Child { get; set; }
    parameters: []
    return:
      type: VDS.RDF.Query.Grouping.ISparqlGroupBy
    content.vb: Property Child As ISparqlGroupBy
  overload: VDS.RDF.Query.Grouping.ISparqlGroupBy.Child*
  modifiers.csharp:
  - get
  - set
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.Variables
  commentId: P:VDS.RDF.Query.Grouping.ISparqlGroupBy.Variables
  id: Variables
  parent: VDS.RDF.Query.Grouping.ISparqlGroupBy
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: ISparqlGroupBy.Variables
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.Variables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variables
    path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
    startLine: 64
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nGets the Variables used in the GROUP BY.\n"
  example: []
  syntax:
    content: IEnumerable<string> Variables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: ReadOnly Property Variables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Grouping.ISparqlGroupBy.Variables*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.ProjectableVariables
  commentId: P:VDS.RDF.Query.Grouping.ISparqlGroupBy.ProjectableVariables
  id: ProjectableVariables
  parent: VDS.RDF.Query.Grouping.ISparqlGroupBy
  langs:
  - csharp
  - vb
  name: ProjectableVariables
  nameWithType: ISparqlGroupBy.ProjectableVariables
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.ProjectableVariables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ProjectableVariables
    path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
    startLine: 72
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nGets the Projectable Variables used in the GROUP BY i.e. Variables that are grouped upon and Assigned Variables.\n"
  example: []
  syntax:
    content: IEnumerable<string> ProjectableVariables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: ReadOnly Property ProjectableVariables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Grouping.ISparqlGroupBy.ProjectableVariables*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.Expression
  commentId: P:VDS.RDF.Query.Grouping.ISparqlGroupBy.Expression
  id: Expression
  parent: VDS.RDF.Query.Grouping.ISparqlGroupBy
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: ISparqlGroupBy.Expression
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.Expression
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Expression
    path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
    startLine: 80
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nGets the Expression used to GROUP BY.\n"
  example: []
  syntax:
    content: ISparqlExpression Expression { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Expressions.ISparqlExpression
    content.vb: ReadOnly Property Expression As ISparqlExpression
  overload: VDS.RDF.Query.Grouping.ISparqlGroupBy.Expression*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.AssignVariable
  commentId: P:VDS.RDF.Query.Grouping.ISparqlGroupBy.AssignVariable
  id: AssignVariable
  parent: VDS.RDF.Query.Grouping.ISparqlGroupBy
  langs:
  - csharp
  - vb
  name: AssignVariable
  nameWithType: ISparqlGroupBy.AssignVariable
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.AssignVariable
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AssignVariable
    path: Libraries/dotNetRDF/Query/Grouping/ISparqlGroupBy.cs
    startLine: 88
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Grouping
  summary: "\nGets/Sets the Variable the value of the GROUP BY expression should be bound to (may be null if not bound to anything).\n"
  example: []
  syntax:
    content: string AssignVariable { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Property AssignVariable As String
  overload: VDS.RDF.Query.Grouping.ISparqlGroupBy.AssignVariable*
  modifiers.csharp:
  - get
  - set
references:
- uid: VDS.RDF.Query.Grouping
  commentId: N:VDS.RDF.Query.Grouping
  name: VDS.RDF.Query.Grouping
  nameWithType: VDS.RDF.Query.Grouping
  fullName: VDS.RDF.Query.Grouping
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ISparqlGroupBy>()
  nameWithType: Extensions.AsEnumerable<ISparqlGroupBy>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Grouping.ISparqlGroupBy>()
  nameWithType.vb: Extensions.AsEnumerable(Of ISparqlGroupBy)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Grouping.ISparqlGroupBy)()
  name.vb: AsEnumerable(Of ISparqlGroupBy)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ISparqlGroupBy>
    nameWithType: Extensions.AsEnumerable<ISparqlGroupBy>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Grouping.ISparqlGroupBy>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ISparqlGroupBy)
    nameWithType: Extensions.AsEnumerable(Of ISparqlGroupBy)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Grouping.ISparqlGroupBy)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply*
  commentId: Overload:VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply
  name: Apply
  nameWithType: ISparqlGroupBy.Apply
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.Apply
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: System.Collections.Generic.List{VDS.RDF.Query.BindingGroup}
  commentId: T:System.Collections.Generic.List{VDS.RDF.Query.BindingGroup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<BindingGroup>
  nameWithType: List<BindingGroup>
  fullName: System.Collections.Generic.List<VDS.RDF.Query.BindingGroup>
  nameWithType.vb: List(Of BindingGroup)
  fullName.vb: System.Collections.Generic.List(Of VDS.RDF.Query.BindingGroup)
  name.vb: List(Of BindingGroup)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.BindingGroup
    name: BindingGroup
    nameWithType: BindingGroup
    fullName: VDS.RDF.Query.BindingGroup
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.BindingGroup
    name: BindingGroup
    nameWithType: BindingGroup
    fullName: VDS.RDF.Query.BindingGroup
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.Child*
  commentId: Overload:VDS.RDF.Query.Grouping.ISparqlGroupBy.Child
  name: Child
  nameWithType: ISparqlGroupBy.Child
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.Child
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy
  commentId: T:VDS.RDF.Query.Grouping.ISparqlGroupBy
  parent: VDS.RDF.Query.Grouping
  name: ISparqlGroupBy
  nameWithType: ISparqlGroupBy
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.Variables*
  commentId: Overload:VDS.RDF.Query.Grouping.ISparqlGroupBy.Variables
  name: Variables
  nameWithType: ISparqlGroupBy.Variables
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.Variables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.ProjectableVariables*
  commentId: Overload:VDS.RDF.Query.Grouping.ISparqlGroupBy.ProjectableVariables
  name: ProjectableVariables
  nameWithType: ISparqlGroupBy.ProjectableVariables
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.ProjectableVariables
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.Expression*
  commentId: Overload:VDS.RDF.Query.Grouping.ISparqlGroupBy.Expression
  name: Expression
  nameWithType: ISparqlGroupBy.Expression
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.Expression
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
- uid: VDS.RDF.Query.Grouping.ISparqlGroupBy.AssignVariable*
  commentId: Overload:VDS.RDF.Query.Grouping.ISparqlGroupBy.AssignVariable
  name: AssignVariable
  nameWithType: ISparqlGroupBy.AssignVariable
  fullName: VDS.RDF.Query.Grouping.ISparqlGroupBy.AssignVariable
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
shouldSkipMarkup: true
