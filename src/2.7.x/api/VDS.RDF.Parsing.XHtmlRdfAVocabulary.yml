### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary
  commentId: T:VDS.RDF.Parsing.XHtmlRdfAVocabulary
  id: XHtmlRdfAVocabulary
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddNamespace(System.String,System.String)
  - VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddTerm(System.String,System.String)
  - VDS.RDF.Parsing.XHtmlRdfAVocabulary.HasTerm(System.String)
  - VDS.RDF.Parsing.XHtmlRdfAVocabulary.Mappings
  - VDS.RDF.Parsing.XHtmlRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  - VDS.RDF.Parsing.XHtmlRdfAVocabulary.Namespaces
  - VDS.RDF.Parsing.XHtmlRdfAVocabulary.ResolveTerm(System.String)
  - VDS.RDF.Parsing.XHtmlRdfAVocabulary.VocabularyUri
  langs:
  - csharp
  - vb
  name: XHtmlRdfAVocabulary
  nameWithType: XHtmlRdfAVocabulary
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: XHtmlRdfAVocabulary
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nVocabulary for XHTML+RDFa (and HTML+RDFa).\n"
  example: []
  syntax:
    content: 'public class XHtmlRdfAVocabulary : IRdfAVocabulary'
    content.vb: >-
      Public Class XHtmlRdfAVocabulary
          Implements IRdfAVocabulary
  inheritance:
  - System.Object
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.XHtmlRdfAVocabulary.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.HasTerm(System.String)
  commentId: M:VDS.RDF.Parsing.XHtmlRdfAVocabulary.HasTerm(System.String)
  id: HasTerm(System.String)
  parent: VDS.RDF.Parsing.XHtmlRdfAVocabulary
  langs:
  - csharp
  - vb
  name: HasTerm(String)
  nameWithType: XHtmlRdfAVocabulary.HasTerm(String)
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.HasTerm(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasTerm
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 136
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets whether the Vocabulary contains a Term.\n"
  example: []
  syntax:
    content: public bool HasTerm(string term)
    parameters:
    - id: term
      type: System.String
      description: Term.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasTerm(term As String) As Boolean
  overload: VDS.RDF.Parsing.XHtmlRdfAVocabulary.HasTerm*
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.ResolveTerm(System.String)
  commentId: M:VDS.RDF.Parsing.XHtmlRdfAVocabulary.ResolveTerm(System.String)
  id: ResolveTerm(System.String)
  parent: VDS.RDF.Parsing.XHtmlRdfAVocabulary
  langs:
  - csharp
  - vb
  name: ResolveTerm(String)
  nameWithType: XHtmlRdfAVocabulary.ResolveTerm(String)
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.ResolveTerm(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResolveTerm
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 146
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nResolves a Term in the Vocabulary.\n"
  example: []
  syntax:
    content: public string ResolveTerm(string term)
    parameters:
    - id: term
      type: System.String
      description: Term.
    return:
      type: System.String
      description: ''
    content.vb: Public Function ResolveTerm(term As String) As String
  overload: VDS.RDF.Parsing.XHtmlRdfAVocabulary.ResolveTerm*
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddTerm(System.String,System.String)
  commentId: M:VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddTerm(System.String,System.String)
  id: AddTerm(System.String,System.String)
  parent: VDS.RDF.Parsing.XHtmlRdfAVocabulary
  langs:
  - csharp
  - vb
  name: AddTerm(String, String)
  nameWithType: XHtmlRdfAVocabulary.AddTerm(String, String)
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddTerm(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddTerm
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 157
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAdds a Term to the Vocabulary.\n"
  example: []
  syntax:
    content: public void AddTerm(string term, string uri)
    parameters:
    - id: term
      type: System.String
      description: Term.
    - id: uri
      type: System.String
      description: URI.
    content.vb: Public Sub AddTerm(term As String, uri As String)
  overload: VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddTerm*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Thrown since this vocabulary is fixed and cannot be changed.
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddNamespace(System.String,System.String)
  commentId: M:VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddNamespace(System.String,System.String)
  id: AddNamespace(System.String,System.String)
  parent: VDS.RDF.Parsing.XHtmlRdfAVocabulary
  langs:
  - csharp
  - vb
  name: AddNamespace(String, String)
  nameWithType: XHtmlRdfAVocabulary.AddNamespace(String, String)
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddNamespace(System.String, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddNamespace
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 168
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nAdds a Namespace to the Vocabulary.\n"
  example: []
  syntax:
    content: public void AddNamespace(string prefix, string nsUri)
    parameters:
    - id: prefix
      type: System.String
      description: Prefix.
    - id: nsUri
      type: System.String
      description: Namespace URI.
    content.vb: Public Sub AddNamespace(prefix As String, nsUri As String)
  overload: VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddNamespace*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Thrown since this vocabulary is fixed and cannot be changed.
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  commentId: M:VDS.RDF.Parsing.XHtmlRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  id: Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  parent: VDS.RDF.Parsing.XHtmlRdfAVocabulary
  langs:
  - csharp
  - vb
  name: Merge(IRdfAVocabulary)
  nameWithType: XHtmlRdfAVocabulary.Merge(IRdfAVocabulary)
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Merge
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 178
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nMerges another Vocabulary into this one.\n"
  example: []
  syntax:
    content: public void Merge(IRdfAVocabulary vocab)
    parameters:
    - id: vocab
      type: VDS.RDF.Parsing.IRdfAVocabulary
      description: Vocabulary.
    content.vb: Public Sub Merge(vocab As IRdfAVocabulary)
  overload: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Merge*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Thrown since this vocabulary is fixed and cannot be changed.
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Mappings
  commentId: P:VDS.RDF.Parsing.XHtmlRdfAVocabulary.Mappings
  id: Mappings
  parent: VDS.RDF.Parsing.XHtmlRdfAVocabulary
  langs:
  - csharp
  - vb
  name: Mappings
  nameWithType: XHtmlRdfAVocabulary.Mappings
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Mappings
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Mappings
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 186
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets the Term Mappings.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, string>> Mappings { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: Public ReadOnly Property Mappings As IEnumerable(Of KeyValuePair(Of String, String))
  overload: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Mappings*
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.Mappings
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Namespaces
  commentId: P:VDS.RDF.Parsing.XHtmlRdfAVocabulary.Namespaces
  id: Namespaces
  parent: VDS.RDF.Parsing.XHtmlRdfAVocabulary
  langs:
  - csharp
  - vb
  name: Namespaces
  nameWithType: XHtmlRdfAVocabulary.Namespaces
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Namespaces
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Namespaces
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 198
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets the Namespace Mappings.\n"
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<string, string>> Namespaces { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
    content.vb: Public ReadOnly Property Namespaces As IEnumerable(Of KeyValuePair(Of String, String))
  overload: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Namespaces*
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.VocabularyUri
  commentId: P:VDS.RDF.Parsing.XHtmlRdfAVocabulary.VocabularyUri
  id: VocabularyUri
  parent: VDS.RDF.Parsing.XHtmlRdfAVocabulary
  langs:
  - csharp
  - vb
  name: VocabularyUri
  nameWithType: XHtmlRdfAVocabulary.VocabularyUri
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.VocabularyUri
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: VocabularyUri
    path: Libraries/dotNetRDF/Parsing/IRdfAVocabulary.cs
    startLine: 210
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nGets/Sets the Vocabulary URI.\n"
  example: []
  syntax:
    content: public string VocabularyUri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VocabularyUri As String
  overload: VDS.RDF.Parsing.XHtmlRdfAVocabulary.VocabularyUri*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Set throws this since this vocabulary is fixed and cannot be changed.
  implements:
  - VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Parsing.IRdfAVocabulary
  commentId: T:VDS.RDF.Parsing.IRdfAVocabulary
  parent: VDS.RDF.Parsing
  name: IRdfAVocabulary
  nameWithType: IRdfAVocabulary
  fullName: VDS.RDF.Parsing.IRdfAVocabulary
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<XHtmlRdfAVocabulary>()
  nameWithType: Extensions.AsEnumerable<XHtmlRdfAVocabulary>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.XHtmlRdfAVocabulary>()
  nameWithType.vb: Extensions.AsEnumerable(Of XHtmlRdfAVocabulary)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.XHtmlRdfAVocabulary)()
  name.vb: AsEnumerable(Of XHtmlRdfAVocabulary)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<XHtmlRdfAVocabulary>
    nameWithType: Extensions.AsEnumerable<XHtmlRdfAVocabulary>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.XHtmlRdfAVocabulary>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of XHtmlRdfAVocabulary)
    nameWithType: Extensions.AsEnumerable(Of XHtmlRdfAVocabulary)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.XHtmlRdfAVocabulary)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.HasTerm*
  commentId: Overload:VDS.RDF.Parsing.XHtmlRdfAVocabulary.HasTerm
  name: HasTerm
  nameWithType: XHtmlRdfAVocabulary.HasTerm
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.HasTerm
- uid: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  isExternal: true
  name: HasTerm(String)
  nameWithType: IRdfAVocabulary.HasTerm(String)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
  spec.csharp:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
    name: HasTerm
    nameWithType: IRdfAVocabulary.HasTerm
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm(System.String)
    name: HasTerm
    nameWithType: IRdfAVocabulary.HasTerm
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.HasTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.ResolveTerm*
  commentId: Overload:VDS.RDF.Parsing.XHtmlRdfAVocabulary.ResolveTerm
  name: ResolveTerm
  nameWithType: XHtmlRdfAVocabulary.ResolveTerm
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.ResolveTerm
- uid: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  isExternal: true
  name: ResolveTerm(String)
  nameWithType: IRdfAVocabulary.ResolveTerm(String)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
  spec.csharp:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
    name: ResolveTerm
    nameWithType: IRdfAVocabulary.ResolveTerm
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm(System.String)
    name: ResolveTerm
    nameWithType: IRdfAVocabulary.ResolveTerm
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.ResolveTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddTerm*
  commentId: Overload:VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddTerm
  name: AddTerm
  nameWithType: XHtmlRdfAVocabulary.AddTerm
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddTerm
- uid: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  isExternal: true
  name: AddTerm(String, String)
  nameWithType: IRdfAVocabulary.AddTerm(String, String)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
    name: AddTerm
    nameWithType: IRdfAVocabulary.AddTerm
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm(System.String,System.String)
    name: AddTerm
    nameWithType: IRdfAVocabulary.AddTerm
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddTerm
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddNamespace*
  commentId: Overload:VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddNamespace
  name: AddNamespace
  nameWithType: XHtmlRdfAVocabulary.AddNamespace
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.AddNamespace
- uid: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  isExternal: true
  name: AddNamespace(String, String)
  nameWithType: IRdfAVocabulary.AddNamespace(String, String)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
    name: AddNamespace
    nameWithType: IRdfAVocabulary.AddNamespace
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace(System.String,System.String)
    name: AddNamespace
    nameWithType: IRdfAVocabulary.AddNamespace
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.AddNamespace
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Merge*
  commentId: Overload:VDS.RDF.Parsing.XHtmlRdfAVocabulary.Merge
  name: Merge
  nameWithType: XHtmlRdfAVocabulary.Merge
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Merge
- uid: VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  commentId: M:VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  name: Merge(IRdfAVocabulary)
  nameWithType: IRdfAVocabulary.Merge(IRdfAVocabulary)
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
  spec.csharp:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
    name: Merge
    nameWithType: IRdfAVocabulary.Merge
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Parsing.IRdfAVocabulary
    name: IRdfAVocabulary
    nameWithType: IRdfAVocabulary
    fullName: VDS.RDF.Parsing.IRdfAVocabulary
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Parsing.IRdfAVocabulary.Merge(VDS.RDF.Parsing.IRdfAVocabulary)
    name: Merge
    nameWithType: IRdfAVocabulary.Merge
    fullName: VDS.RDF.Parsing.IRdfAVocabulary.Merge
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Parsing.IRdfAVocabulary
    name: IRdfAVocabulary
    nameWithType: IRdfAVocabulary
    fullName: VDS.RDF.Parsing.IRdfAVocabulary
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Mappings*
  commentId: Overload:VDS.RDF.Parsing.XHtmlRdfAVocabulary.Mappings
  name: Mappings
  nameWithType: XHtmlRdfAVocabulary.Mappings
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Mappings
- uid: VDS.RDF.Parsing.IRdfAVocabulary.Mappings
  commentId: P:VDS.RDF.Parsing.IRdfAVocabulary.Mappings
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  name: Mappings
  nameWithType: IRdfAVocabulary.Mappings
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.Mappings
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<String, String>>
  nameWithType: IEnumerable<KeyValuePair<String, String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String, System.String>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of String, String))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of System.String, System.String))
  name.vb: IEnumerable(Of KeyValuePair(Of String, String))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Namespaces*
  commentId: Overload:VDS.RDF.Parsing.XHtmlRdfAVocabulary.Namespaces
  name: Namespaces
  nameWithType: XHtmlRdfAVocabulary.Namespaces
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.Namespaces
- uid: VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
  commentId: P:VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  name: Namespaces
  nameWithType: IRdfAVocabulary.Namespaces
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.Namespaces
- uid: VDS.RDF.Parsing.XHtmlRdfAVocabulary.VocabularyUri*
  commentId: Overload:VDS.RDF.Parsing.XHtmlRdfAVocabulary.VocabularyUri
  name: VocabularyUri
  nameWithType: XHtmlRdfAVocabulary.VocabularyUri
  fullName: VDS.RDF.Parsing.XHtmlRdfAVocabulary.VocabularyUri
- uid: VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
  commentId: P:VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
  parent: VDS.RDF.Parsing.IRdfAVocabulary
  name: VocabularyUri
  nameWithType: IRdfAVocabulary.VocabularyUri
  fullName: VDS.RDF.Parsing.IRdfAVocabulary.VocabularyUri
shouldSkipMarkup: true
