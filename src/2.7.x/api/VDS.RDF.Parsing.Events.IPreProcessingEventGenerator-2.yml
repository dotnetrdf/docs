### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2
  commentId: T:VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2
  id: IPreProcessingEventGenerator`2
  parent: VDS.RDF.Parsing.Events
  children:
  - VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents(`1)
  langs:
  - csharp
  - vb
  name: IPreProcessingEventGenerator<TEvent, TContext>
  nameWithType: IPreProcessingEventGenerator<TEvent, TContext>
  fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator<TEvent, TContext>
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventGenerator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IPreProcessingEventGenerator
    path: Libraries/dotNetRDF/Parsing/Events/IEventGenerator.cs
    startLine: 52
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nInterface for pre-processing event generators.\n"
  example: []
  syntax:
    content: 'public interface IPreProcessingEventGenerator<TEvent, TContext> : IEventGenerator<TEvent> where TEvent : IEvent where TContext : IEventParserContext<TEvent>'
    typeParameters:
    - id: TEvent
      description: Event Type.
    - id: TContext
      description: Event Parser Context Type.
    content.vb: >-
      Public Interface IPreProcessingEventGenerator(Of TEvent As IEvent, TContext As IEventParserContext(Of TEvent))
          Inherits IEventGenerator(Of TEvent)
  extensionMethods:
  - VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.VDS.RDF.Extensions.AsEnumerable``1
  nameWithType.vb: IPreProcessingEventGenerator(Of TEvent, TContext)
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
  fullName.vb: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator(Of TEvent, TContext)
  name.vb: IPreProcessingEventGenerator(Of TEvent, TContext)
- uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents(`1)
  commentId: M:VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents(`1)
  id: GetAllEvents(`1)
  parent: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2
  langs:
  - csharp
  - vb
  name: GetAllEvents(TContext)
  nameWithType: IPreProcessingEventGenerator<TEvent, TContext>.GetAllEvents(TContext)
  fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator<TEvent, TContext>.GetAllEvents(TContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/Events/IEventGenerator.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetAllEvents
    path: Libraries/dotNetRDF/Parsing/Events/IEventGenerator.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing.Events
  summary: "\nGets all available events.\n"
  example: []
  syntax:
    content: void GetAllEvents(TContext context)
    parameters:
    - id: context
      type: '{TContext}'
      description: Context.
    content.vb: Sub GetAllEvents(context As TContext)
  overload: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents*
  nameWithType.vb: IPreProcessingEventGenerator(Of TEvent, TContext).GetAllEvents(TContext)
  fullName.vb: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator(Of TEvent, TContext).GetAllEvents(TContext)
references:
- uid: VDS.RDF.Parsing.Events
  commentId: N:VDS.RDF.Parsing.Events
  name: VDS.RDF.Parsing.Events
  nameWithType: VDS.RDF.Parsing.Events
  fullName: VDS.RDF.Parsing.Events
- uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<IPreProcessingEventGenerator<TEvent, TContext>>()
  nameWithType: Extensions.AsEnumerable<IPreProcessingEventGenerator<TEvent, TContext>>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.IPreProcessingEventGenerator<TEvent, TContext>>()
  nameWithType.vb: Extensions.AsEnumerable(Of IPreProcessingEventGenerator(Of TEvent, TContext))()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.IPreProcessingEventGenerator(Of TEvent, TContext))()
  name.vb: AsEnumerable(Of IPreProcessingEventGenerator(Of TEvent, TContext))()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<IPreProcessingEventGenerator<TEvent, TContext>>
    nameWithType: Extensions.AsEnumerable<IPreProcessingEventGenerator<TEvent, TContext>>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.Events.IPreProcessingEventGenerator<TEvent, TContext>>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of IPreProcessingEventGenerator(Of TEvent, TContext))
    nameWithType: Extensions.AsEnumerable(Of IPreProcessingEventGenerator(Of TEvent, TContext))
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.Events.IPreProcessingEventGenerator(Of TEvent, TContext))
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents*
  commentId: Overload:VDS.RDF.Parsing.Events.IPreProcessingEventGenerator`2.GetAllEvents
  name: GetAllEvents
  nameWithType: IPreProcessingEventGenerator<TEvent, TContext>.GetAllEvents
  fullName: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator<TEvent, TContext>.GetAllEvents
  nameWithType.vb: IPreProcessingEventGenerator(Of TEvent, TContext).GetAllEvents
  fullName.vb: VDS.RDF.Parsing.Events.IPreProcessingEventGenerator(Of TEvent, TContext).GetAllEvents
- uid: '{TContext}'
  commentId: '!:TContext'
  definition: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
- uid: TContext
  name: TContext
  nameWithType: TContext
  fullName: TContext
shouldSkipMarkup: true
