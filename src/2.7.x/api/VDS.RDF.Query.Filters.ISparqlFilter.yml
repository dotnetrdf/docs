### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Filters.ISparqlFilter
  commentId: T:VDS.RDF.Query.Filters.ISparqlFilter
  id: ISparqlFilter
  parent: VDS.RDF.Query.Filters
  children:
  - VDS.RDF.Query.Filters.ISparqlFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  - VDS.RDF.Query.Filters.ISparqlFilter.Expression
  - VDS.RDF.Query.Filters.ISparqlFilter.Variables
  langs:
  - csharp
  - vb
  name: ISparqlFilter
  nameWithType: ISparqlFilter
  fullName: VDS.RDF.Query.Filters.ISparqlFilter
  type: Interface
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/ISparqlFilter.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ISparqlFilter
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Filters/ISparqlFilter.cs
    startLine: 35
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nInterface for Classes which implement SPARQL Filter Functions.\n"
  example: []
  syntax:
    content: public interface ISparqlFilter
    content.vb: Public Interface ISparqlFilter
  extensionMethods:
  - VDS.RDF.Query.Filters.ISparqlFilter.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: VDS.RDF.Query.Filters.ISparqlFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  commentId: M:VDS.RDF.Query.Filters.ISparqlFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  id: Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  parent: VDS.RDF.Query.Filters.ISparqlFilter
  langs:
  - csharp
  - vb
  name: Evaluate(SparqlEvaluationContext)
  nameWithType: ISparqlFilter.Evaluate(SparqlEvaluationContext)
  fullName: VDS.RDF.Query.Filters.ISparqlFilter.Evaluate(VDS.RDF.Query.SparqlEvaluationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/ISparqlFilter.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Evaluate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Filters/ISparqlFilter.cs
    startLine: 41
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nEvaluates a Filter in the given Evaluation Context.\n"
  example: []
  syntax:
    content: void Evaluate(SparqlEvaluationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Query.SparqlEvaluationContext
      description: Evaluation Context.
    content.vb: Sub Evaluate(context As SparqlEvaluationContext)
  overload: VDS.RDF.Query.Filters.ISparqlFilter.Evaluate*
- uid: VDS.RDF.Query.Filters.ISparqlFilter.Variables
  commentId: P:VDS.RDF.Query.Filters.ISparqlFilter.Variables
  id: Variables
  parent: VDS.RDF.Query.Filters.ISparqlFilter
  langs:
  - csharp
  - vb
  name: Variables
  nameWithType: ISparqlFilter.Variables
  fullName: VDS.RDF.Query.Filters.ISparqlFilter.Variables
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/ISparqlFilter.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variables
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Filters/ISparqlFilter.cs
    startLine: 46
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nGets the enumeration of Variables that are used in the Filter.\n"
  example: []
  syntax:
    content: IEnumerable<string> Variables { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: ReadOnly Property Variables As IEnumerable(Of String)
  overload: VDS.RDF.Query.Filters.ISparqlFilter.Variables*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
- uid: VDS.RDF.Query.Filters.ISparqlFilter.Expression
  commentId: P:VDS.RDF.Query.Filters.ISparqlFilter.Expression
  id: Expression
  parent: VDS.RDF.Query.Filters.ISparqlFilter
  langs:
  - csharp
  - vb
  name: Expression
  nameWithType: ISparqlFilter.Expression
  fullName: VDS.RDF.Query.Filters.ISparqlFilter.Expression
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Filters/ISparqlFilter.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Expression
    path: ../../dotNetRDF/Libraries/dotNetRDF/Query/Filters/ISparqlFilter.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Filters
  summary: "\nGets the Expression that this Filter uses.\n"
  example: []
  syntax:
    content: ISparqlExpression Expression { get; }
    parameters: []
    return:
      type: VDS.RDF.Query.Expressions.ISparqlExpression
    content.vb: ReadOnly Property Expression As ISparqlExpression
  overload: VDS.RDF.Query.Filters.ISparqlFilter.Expression*
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
references:
- uid: VDS.RDF.Query.Filters
  commentId: N:VDS.RDF.Query.Filters
  name: VDS.RDF.Query.Filters
  nameWithType: VDS.RDF.Query.Filters
  fullName: VDS.RDF.Query.Filters
- uid: VDS.RDF.Query.Filters.ISparqlFilter.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<ISparqlFilter>()
  nameWithType: Extensions.AsEnumerable<ISparqlFilter>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Filters.ISparqlFilter>()
  nameWithType.vb: Extensions.AsEnumerable(Of ISparqlFilter)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Filters.ISparqlFilter)()
  name.vb: AsEnumerable(Of ISparqlFilter)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<ISparqlFilter>
    nameWithType: Extensions.AsEnumerable<ISparqlFilter>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Filters.ISparqlFilter>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of ISparqlFilter)
    nameWithType: Extensions.AsEnumerable(Of ISparqlFilter)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Filters.ISparqlFilter)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Filters.ISparqlFilter.Evaluate*
  commentId: Overload:VDS.RDF.Query.Filters.ISparqlFilter.Evaluate
  name: Evaluate
  nameWithType: ISparqlFilter.Evaluate
  fullName: VDS.RDF.Query.Filters.ISparqlFilter.Evaluate
- uid: VDS.RDF.Query.SparqlEvaluationContext
  commentId: T:VDS.RDF.Query.SparqlEvaluationContext
  parent: VDS.RDF.Query
  name: SparqlEvaluationContext
  nameWithType: SparqlEvaluationContext
  fullName: VDS.RDF.Query.SparqlEvaluationContext
- uid: VDS.RDF.Query
  commentId: N:VDS.RDF.Query
  name: VDS.RDF.Query
  nameWithType: VDS.RDF.Query
  fullName: VDS.RDF.Query
- uid: VDS.RDF.Query.Filters.ISparqlFilter.Variables*
  commentId: Overload:VDS.RDF.Query.Filters.ISparqlFilter.Variables
  name: Variables
  nameWithType: ISparqlFilter.Variables
  fullName: VDS.RDF.Query.Filters.ISparqlFilter.Variables
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Filters.ISparqlFilter.Expression*
  commentId: Overload:VDS.RDF.Query.Filters.ISparqlFilter.Expression
  name: Expression
  nameWithType: ISparqlFilter.Expression
  fullName: VDS.RDF.Query.Filters.ISparqlFilter.Expression
- uid: VDS.RDF.Query.Expressions.ISparqlExpression
  commentId: T:VDS.RDF.Query.Expressions.ISparqlExpression
  parent: VDS.RDF.Query.Expressions
  name: ISparqlExpression
  nameWithType: ISparqlExpression
  fullName: VDS.RDF.Query.Expressions.ISparqlExpression
- uid: VDS.RDF.Query.Expressions
  commentId: N:VDS.RDF.Query.Expressions
  name: VDS.RDF.Query.Expressions
  nameWithType: VDS.RDF.Query.Expressions
  fullName: VDS.RDF.Query.Expressions
