### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Datasets.BaseDataset
  commentId: T:VDS.RDF.Query.Datasets.BaseDataset
  id: BaseDataset
  parent: VDS.RDF.Query.Datasets
  children:
  - VDS.RDF.Query.Datasets.BaseDataset.#ctor
  - VDS.RDF.Query.Datasets.BaseDataset.#ctor(System.Boolean)
  - VDS.RDF.Query.Datasets.BaseDataset.#ctor(System.Uri)
  - VDS.RDF.Query.Datasets.BaseDataset.ActiveGraphUris
  - VDS.RDF.Query.Datasets.BaseDataset.AddGraph(VDS.RDF.IGraph)
  - VDS.RDF.Query.Datasets.BaseDataset.ContainsTriple(VDS.RDF.Triple)
  - VDS.RDF.Query.Datasets.BaseDataset.ContainsTripleInternal(VDS.RDF.Triple)
  - VDS.RDF.Query.Datasets.BaseDataset.DefaultGraphUris
  - VDS.RDF.Query.Datasets.BaseDataset.Discard
  - VDS.RDF.Query.Datasets.BaseDataset.Flush
  - VDS.RDF.Query.Datasets.BaseDataset.GetAllTriples
  - VDS.RDF.Query.Datasets.BaseDataset.GetGraphInternal(System.Uri)
  - VDS.RDF.Query.Datasets.BaseDataset.GetModifiableGraph(System.Uri)
  - VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObject(VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObjectInternal(VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateInternal(VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObjectInternal(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubject(VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectInternal(VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObjectInternal(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicateInternal(VDS.RDF.INode,VDS.RDF.INode)
  - VDS.RDF.Query.Datasets.BaseDataset.Graphs
  - VDS.RDF.Query.Datasets.BaseDataset.GraphUris
  - VDS.RDF.Query.Datasets.BaseDataset.HasGraph(System.Uri)
  - VDS.RDF.Query.Datasets.BaseDataset.HasGraphInternal(System.Uri)
  - VDS.RDF.Query.Datasets.BaseDataset.HasTriples
  - VDS.RDF.Query.Datasets.BaseDataset.InternalDefaultGraph
  - VDS.RDF.Query.Datasets.BaseDataset.Item(System.Uri)
  - VDS.RDF.Query.Datasets.BaseDataset.RemoveGraph(System.Uri)
  - VDS.RDF.Query.Datasets.BaseDataset.RemoveGraphInternal(System.Uri)
  - VDS.RDF.Query.Datasets.BaseDataset.ResetActiveGraph
  - VDS.RDF.Query.Datasets.BaseDataset.ResetDefaultGraph
  - VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  - VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph(System.Uri)
  - VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  - VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph(System.Uri)
  - VDS.RDF.Query.Datasets.BaseDataset.Triples
  - VDS.RDF.Query.Datasets.BaseDataset.UsesUnionDefaultGraph
  langs:
  - csharp
  - vb
  name: BaseDataset
  nameWithType: BaseDataset
  fullName: VDS.RDF.Query.Datasets.BaseDataset
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseDataset
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 36
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nAbstract Base Class for Datasets which provides implementation of Active and Default Graph management.\n"
  example: []
  syntax:
    content: 'public abstract class BaseDataset : ISparqlDataset'
    content.vb: >-
      Public MustInherit Class BaseDataset
          Implements ISparqlDataset
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Query.Datasets.BaseImmutableDataset
  - VDS.RDF.Query.Datasets.BaseTransactionalDataset
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Query.Datasets.BaseDataset.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.Query.Datasets.BaseDataset.#ctor
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.#ctor
  id: '#ctor'
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: BaseDataset()
  nameWithType: BaseDataset.BaseDataset()
  fullName: VDS.RDF.Query.Datasets.BaseDataset.BaseDataset()
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nCreates a new Dataset.\n"
  example: []
  syntax:
    content: public BaseDataset()
    content.vb: Public Sub New
  overload: VDS.RDF.Query.Datasets.BaseDataset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.#ctor(System.Boolean)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: BaseDataset(Boolean)
  nameWithType: BaseDataset.BaseDataset(Boolean)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.BaseDataset(System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 80
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nCreates a new Dataset with the given Union Default Graph setting.\n"
  example: []
  syntax:
    content: public BaseDataset(bool unionDefaultGraph)
    parameters:
    - id: unionDefaultGraph
      type: System.Boolean
      description: Whether to use a Union Default Graph.
    content.vb: Public Sub New(unionDefaultGraph As Boolean)
  overload: VDS.RDF.Query.Datasets.BaseDataset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.#ctor(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.#ctor(System.Uri)
  id: '#ctor(System.Uri)'
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: BaseDataset(Uri)
  nameWithType: BaseDataset.BaseDataset(Uri)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.BaseDataset(System.Uri)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 90
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nCreates a new Dataset with a fixed Default Graph and without a Union Default Graph.\n"
  example: []
  syntax:
    content: public BaseDataset(Uri defaultGraphUri)
    parameters:
    - id: defaultGraphUri
      type: System.Uri
      description: ''
    content.vb: Public Sub New(defaultGraphUri As Uri)
  overload: VDS.RDF.Query.Datasets.BaseDataset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.InternalDefaultGraph
  commentId: P:VDS.RDF.Query.Datasets.BaseDataset.InternalDefaultGraph
  id: InternalDefaultGraph
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: InternalDefaultGraph
  nameWithType: BaseDataset.InternalDefaultGraph
  fullName: VDS.RDF.Query.Datasets.BaseDataset.InternalDefaultGraph
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: InternalDefaultGraph
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 134
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets a reference to the actual <xref href=\"VDS.RDF.IGraph\" data-throw-if-not-resolved=\"false\"></xref> that is currently treated as the default graph.\n"
  example: []
  syntax:
    content: protected IGraph InternalDefaultGraph { get; }
    parameters: []
    return:
      type: VDS.RDF.IGraph
    content.vb: Protected ReadOnly Property InternalDefaultGraph As IGraph
  overload: VDS.RDF.Query.Datasets.BaseDataset.InternalDefaultGraph*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph(System.Uri)
  id: SetDefaultGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: SetDefaultGraph(Uri)
  nameWithType: BaseDataset.SetDefaultGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetDefaultGraph
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 156
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nSets the Default Graph.\n"
  example: []
  syntax:
    content: public void SetDefaultGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    content.vb: Public Sub SetDefaultGraph(graphUri As Uri)
  overload: VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  id: SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: SetDefaultGraph(IEnumerable<Uri>)
  nameWithType: BaseDataset.SetDefaultGraph(IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable<System.Uri>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetDefaultGraph
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 174
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nSets the Default Graph.\n"
  example: []
  syntax:
    content: public void SetDefaultGraph(IEnumerable<Uri> graphUris)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: Graph URIs.
    content.vb: Public Sub SetDefaultGraph(graphUris As IEnumerable(Of Uri))
  overload: VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  nameWithType.vb: BaseDataset.SetDefaultGraph(IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SetDefaultGraph(IEnumerable(Of Uri))
- uid: VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph(System.Uri)
  id: SetActiveGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: SetActiveGraph(Uri)
  nameWithType: BaseDataset.SetActiveGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetActiveGraph
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 219
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nSets the Active Graph for the SPARQL query.\n"
  remarks: "\nHelper function used primarily in the execution of GRAPH Clauses.\n"
  example: []
  syntax:
    content: public void SetActiveGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Uri of the Active Graph.
    content.vb: Public Sub SetActiveGraph(graphUri As Uri)
  overload: VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  id: SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: SetActiveGraph(IEnumerable<Uri>)
  nameWithType: BaseDataset.SetActiveGraph(IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph(System.Collections.Generic.IEnumerable<System.Uri>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SetActiveGraph
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 247
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nSets the Active Graph for the SPARQL query.\n"
  remarks: Helper function used primarily in the execution of GRAPH Clauses.
  example: []
  syntax:
    content: public void SetActiveGraph(IEnumerable<Uri> graphUris)
    parameters:
    - id: graphUris
      type: System.Collections.Generic.IEnumerable{System.Uri}
      description: URIs of the Graphs which form the Active Graph.
    content.vb: Public Sub SetActiveGraph(graphUris As IEnumerable(Of Uri))
  overload: VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  nameWithType.vb: BaseDataset.SetActiveGraph(IEnumerable(Of Uri))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SetActiveGraph(IEnumerable(Of Uri))
- uid: VDS.RDF.Query.Datasets.BaseDataset.ResetActiveGraph
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.ResetActiveGraph
  id: ResetActiveGraph
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: ResetActiveGraph()
  nameWithType: BaseDataset.ResetActiveGraph()
  fullName: VDS.RDF.Query.Datasets.BaseDataset.ResetActiveGraph()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResetActiveGraph
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 278
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nSets the Active Graph for the SPARQL query to be the previous Active Graph.\n"
  example: []
  syntax:
    content: public void ResetActiveGraph()
    content.vb: Public Sub ResetActiveGraph
  overload: VDS.RDF.Query.Datasets.BaseDataset.ResetActiveGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.ResetDefaultGraph
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.ResetDefaultGraph
  id: ResetDefaultGraph
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: ResetDefaultGraph()
  nameWithType: BaseDataset.ResetDefaultGraph()
  fullName: VDS.RDF.Query.Datasets.BaseDataset.ResetDefaultGraph()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ResetDefaultGraph
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 294
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nSets the Default Graph for the SPARQL Query to be the previous Default Graph.\n"
  example: []
  syntax:
    content: public void ResetDefaultGraph()
    content.vb: Public Sub ResetDefaultGraph
  overload: VDS.RDF.Query.Datasets.BaseDataset.ResetDefaultGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.DefaultGraphUris
  commentId: P:VDS.RDF.Query.Datasets.BaseDataset.DefaultGraphUris
  id: DefaultGraphUris
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: DefaultGraphUris
  nameWithType: BaseDataset.DefaultGraphUris
  fullName: VDS.RDF.Query.Datasets.BaseDataset.DefaultGraphUris
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultGraphUris
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 310
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets the Default Graph URIs.\n"
  example: []
  syntax:
    content: public IEnumerable<Uri> DefaultGraphUris { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public ReadOnly Property DefaultGraphUris As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Datasets.BaseDataset.DefaultGraphUris*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.DefaultGraphUris
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.BaseDataset.ActiveGraphUris
  commentId: P:VDS.RDF.Query.Datasets.BaseDataset.ActiveGraphUris
  id: ActiveGraphUris
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: ActiveGraphUris
  nameWithType: BaseDataset.ActiveGraphUris
  fullName: VDS.RDF.Query.Datasets.BaseDataset.ActiveGraphUris
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ActiveGraphUris
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 328
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets the Active Graph URIs.\n"
  example: []
  syntax:
    content: public IEnumerable<Uri> ActiveGraphUris { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public ReadOnly Property ActiveGraphUris As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Datasets.BaseDataset.ActiveGraphUris*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.ActiveGraphUris
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.BaseDataset.UsesUnionDefaultGraph
  commentId: P:VDS.RDF.Query.Datasets.BaseDataset.UsesUnionDefaultGraph
  id: UsesUnionDefaultGraph
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: UsesUnionDefaultGraph
  nameWithType: BaseDataset.UsesUnionDefaultGraph
  fullName: VDS.RDF.Query.Datasets.BaseDataset.UsesUnionDefaultGraph
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UsesUnionDefaultGraph
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 346
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets whether the Default Graph is treated as being the union of all Graphs in the dataset when no Default Graph is otherwise set.\n"
  example: []
  syntax:
    content: public bool UsesUnionDefaultGraph { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UsesUnionDefaultGraph As Boolean
  overload: VDS.RDF.Query.Datasets.BaseDataset.UsesUnionDefaultGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.UsesUnionDefaultGraph
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.BaseDataset.AddGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.AddGraph(VDS.RDF.IGraph)
  id: AddGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: AddGraph(IGraph)
  nameWithType: BaseDataset.AddGraph(IGraph)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.AddGraph(VDS.RDF.IGraph)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AddGraph
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 362
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nAdds a Graph to the Dataset.\n"
  example: []
  syntax:
    content: public abstract bool AddGraph(IGraph g)
    parameters:
    - id: g
      type: VDS.RDF.IGraph
      description: Graph.
    return:
      type: System.Boolean
    content.vb: Public MustOverride Function AddGraph(g As IGraph) As Boolean
  overload: VDS.RDF.Query.Datasets.BaseDataset.AddGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.RemoveGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.RemoveGraph(System.Uri)
  id: RemoveGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: RemoveGraph(Uri)
  nameWithType: BaseDataset.RemoveGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.RemoveGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RemoveGraph
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 368
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nRemoves a Graph from the Dataset.\n"
  example: []
  syntax:
    content: public virtual bool RemoveGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: System.Boolean
    content.vb: Public Overridable Function RemoveGraph(graphUri As Uri) As Boolean
  overload: VDS.RDF.Query.Datasets.BaseDataset.RemoveGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.Datasets.BaseDataset.RemoveGraphInternal(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.RemoveGraphInternal(System.Uri)
  id: RemoveGraphInternal(System.Uri)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: RemoveGraphInternal(Uri)
  nameWithType: BaseDataset.RemoveGraphInternal(Uri)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.RemoveGraphInternal(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: RemoveGraphInternal
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 393
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nRemoves a Graph from the Dataset.\n"
  example: []
  syntax:
    content: protected abstract bool RemoveGraphInternal(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: System.Boolean
    content.vb: Protected MustOverride Function RemoveGraphInternal(graphUri As Uri) As Boolean
  overload: VDS.RDF.Query.Datasets.BaseDataset.RemoveGraphInternal*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.HasGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.HasGraph(System.Uri)
  id: HasGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: HasGraph(Uri)
  nameWithType: BaseDataset.HasGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.HasGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasGraph
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 400
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets whether a Graph with the given URI is the Dataset.\n"
  example: []
  syntax:
    content: public bool HasGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasGraph(graphUri As Uri) As Boolean
  overload: VDS.RDF.Query.Datasets.BaseDataset.HasGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.HasGraphInternal(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.HasGraphInternal(System.Uri)
  id: HasGraphInternal(System.Uri)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: HasGraphInternal(Uri)
  nameWithType: BaseDataset.HasGraphInternal(Uri)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.HasGraphInternal(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasGraphInternal
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 424
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nDetermines whether a given Graph exists in the Dataset.\n"
  example: []
  syntax:
    content: protected abstract bool HasGraphInternal(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected MustOverride Function HasGraphInternal(graphUri As Uri) As Boolean
  overload: VDS.RDF.Query.Datasets.BaseDataset.HasGraphInternal*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.Graphs
  commentId: P:VDS.RDF.Query.Datasets.BaseDataset.Graphs
  id: Graphs
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: Graphs
  nameWithType: BaseDataset.Graphs
  fullName: VDS.RDF.Query.Datasets.BaseDataset.Graphs
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Graphs
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 429
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Graphs in the Dataset.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<IGraph> Graphs { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.IGraph}
    content.vb: Public MustOverride ReadOnly Property Graphs As IEnumerable(Of IGraph)
  overload: VDS.RDF.Query.Datasets.BaseDataset.Graphs*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Graphs
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.BaseDataset.GraphUris
  commentId: P:VDS.RDF.Query.Datasets.BaseDataset.GraphUris
  id: GraphUris
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GraphUris
  nameWithType: BaseDataset.GraphUris
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GraphUris
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GraphUris
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 437
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the URIs of Graphs in the Dataset.\n"
  example: []
  syntax:
    content: public abstract IEnumerable<Uri> GraphUris { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Uri}
    content.vb: Public MustOverride ReadOnly Property GraphUris As IEnumerable(Of Uri)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GraphUris*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GraphUris
  modifiers.csharp:
  - public
  - abstract
  - get
  modifiers.vb:
  - Public
  - MustOverride
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.BaseDataset.Item(System.Uri)
  commentId: P:VDS.RDF.Query.Datasets.BaseDataset.Item(System.Uri)
  id: Item(System.Uri)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: Item[Uri]
  nameWithType: BaseDataset.Item[Uri]
  fullName: VDS.RDF.Query.Datasets.BaseDataset.Item[System.Uri]
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: this[]
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 452
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets the Graph with the given URI from the Dataset.\n"
  remarks: "\n<p>\nThis property need only return a read-only view of the Graph, code which wishes to modify Graphs should use the <xref href=\"VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)\" data-throw-if-not-resolved=\"false\"></xref> method to guarantee a Graph they can modify and will be persisted to the underlying storage.\n</p>\n"
  example: []
  syntax:
    content: public virtual IGraph this[Uri graphUri] { get; }
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: VDS.RDF.IGraph
      description: ''
    content.vb: Public Overridable ReadOnly Property Item(graphUri As Uri) As IGraph
  overload: VDS.RDF.Query.Datasets.BaseDataset.Item*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
  nameWithType.vb: BaseDataset.Item(Uri)
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
  fullName.vb: VDS.RDF.Query.Datasets.BaseDataset.Item(System.Uri)
  name.vb: Item(Uri)
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetGraphInternal(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetGraphInternal(System.Uri)
  id: GetGraphInternal(System.Uri)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetGraphInternal(Uri)
  nameWithType: BaseDataset.GetGraphInternal(Uri)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetGraphInternal(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetGraphInternal
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 479
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets the given Graph from the Dataset.\n"
  example: []
  syntax:
    content: protected abstract IGraph GetGraphInternal(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: VDS.RDF.IGraph
      description: ''
    content.vb: Protected MustOverride Function GetGraphInternal(graphUri As Uri) As IGraph
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetGraphInternal*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetModifiableGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetModifiableGraph(System.Uri)
  id: GetModifiableGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetModifiableGraph(Uri)
  nameWithType: BaseDataset.GetModifiableGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetModifiableGraph(System.Uri)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetModifiableGraph
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 491
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets the Graph with the given URI from the Dataset.\n"
  remarks: "\n<p>\nGraphs returned from this method must be modifiable and the Dataset must guarantee that when it is Flushed or Disposed of that any changes to the Graph are persisted.\n</p>\n"
  example: []
  syntax:
    content: public abstract IGraph GetModifiableGraph(Uri graphUri)
    parameters:
    - id: graphUri
      type: System.Uri
      description: Graph URI.
    return:
      type: VDS.RDF.IGraph
      description: ''
    content.vb: Public MustOverride Function GetModifiableGraph(graphUri As Uri) As IGraph
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetModifiableGraph*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.HasTriples
  commentId: P:VDS.RDF.Query.Datasets.BaseDataset.HasTriples
  id: HasTriples
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: HasTriples
  nameWithType: BaseDataset.HasTriples
  fullName: VDS.RDF.Query.Datasets.BaseDataset.HasTriples
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HasTriples
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 496
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets whether the Dataset has any Triples.\n"
  example: []
  syntax:
    content: public virtual bool HasTriples { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property HasTriples As Boolean
  overload: VDS.RDF.Query.Datasets.BaseDataset.HasTriples*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.HasTriples
  modifiers.csharp:
  - public
  - virtual
  - get
  modifiers.vb:
  - Public
  - Overridable
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.BaseDataset.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.ContainsTriple(VDS.RDF.Triple)
  id: ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: ContainsTriple(Triple)
  nameWithType: BaseDataset.ContainsTriple(Triple)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.ContainsTriple(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ContainsTriple
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 509
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets whether the Dataset contains a specific Triple.\n"
  example: []
  syntax:
    content: public bool ContainsTriple(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function ContainsTriple(t As Triple) As Boolean
  overload: VDS.RDF.Query.Datasets.BaseDataset.ContainsTriple*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.ContainsTripleInternal(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.ContainsTripleInternal(VDS.RDF.Triple)
  id: ContainsTripleInternal(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: ContainsTripleInternal(Triple)
  nameWithType: BaseDataset.ContainsTripleInternal(Triple)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.ContainsTripleInternal(VDS.RDF.Triple)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ContainsTripleInternal
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 533
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nDetermines whether the Dataset contains a specific Triple.\n"
  example: []
  syntax:
    content: protected abstract bool ContainsTripleInternal(Triple t)
    parameters:
    - id: t
      type: VDS.RDF.Triple
      description: Triple to search for.
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected MustOverride Function ContainsTripleInternal(t As Triple) As Boolean
  overload: VDS.RDF.Query.Datasets.BaseDataset.ContainsTripleInternal*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.Triples
  commentId: P:VDS.RDF.Query.Datasets.BaseDataset.Triples
  id: Triples
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: Triples
  nameWithType: BaseDataset.Triples
  fullName: VDS.RDF.Query.Datasets.BaseDataset.Triples
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Triples
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 538
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> Triples { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
    content.vb: Public ReadOnly Property Triples As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.Triples*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Triples
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetAllTriples
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetAllTriples
  id: GetAllTriples
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetAllTriples()
  nameWithType: BaseDataset.GetAllTriples()
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetAllTriples()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetAllTriples
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 567
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nAbstract method that concrete implementations must implement to return an enumerable of all the Triples in the Dataset.\n"
  example: []
  syntax:
    content: protected abstract IEnumerable<Triple> GetAllTriples()
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Protected MustOverride Function GetAllTriples As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetAllTriples*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubject(VDS.RDF.INode)
  id: GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubject(INode)
  nameWithType: BaseDataset.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubject
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 574
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset with the given Subject.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubject(INode subj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubject(subj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubject*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectInternal(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectInternal(VDS.RDF.INode)
  id: GetTriplesWithSubjectInternal(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectInternal(INode)
  nameWithType: BaseDataset.GetTriplesWithSubjectInternal(INode)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectInternal(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectInternal
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 598
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset with the given Subject.\n"
  example: []
  syntax:
    content: protected abstract IEnumerable<Triple> GetTriplesWithSubjectInternal(INode subj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Protected MustOverride Function GetTriplesWithSubjectInternal(subj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectInternal*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  id: GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicate(INode)
  nameWithType: BaseDataset.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicate
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 605
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset with the given Predicate.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicate(INode pred)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicate(pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicate*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateInternal(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateInternal(VDS.RDF.INode)
  id: GetTriplesWithPredicateInternal(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicateInternal(INode)
  nameWithType: BaseDataset.GetTriplesWithPredicateInternal(INode)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateInternal(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicateInternal
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 629
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset with the given Predicate.\n"
  example: []
  syntax:
    content: protected abstract IEnumerable<Triple> GetTriplesWithPredicateInternal(INode pred)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Protected MustOverride Function GetTriplesWithPredicateInternal(pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateInternal*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObject(VDS.RDF.INode)
  id: GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithObject(INode)
  nameWithType: BaseDataset.GetTriplesWithObject(INode)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObject(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObject
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 636
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset with the given Object.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithObject(INode obj)
    parameters:
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithObject(obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObject*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObjectInternal(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObjectInternal(VDS.RDF.INode)
  id: GetTriplesWithObjectInternal(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithObjectInternal(INode)
  nameWithType: BaseDataset.GetTriplesWithObjectInternal(INode)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObjectInternal(VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithObjectInternal
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 660
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset with the given Object.\n"
  example: []
  syntax:
    content: protected abstract IEnumerable<Triple> GetTriplesWithObjectInternal(INode obj)
    parameters:
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Protected MustOverride Function GetTriplesWithObjectInternal(obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObjectInternal*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: BaseDataset.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectPredicate
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 668
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset with the given Subject and Predicate.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubjectPredicate(INode subj, INode pred)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubjectPredicate(subj As INode, pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicate*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicateInternal(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicateInternal(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectPredicateInternal(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectPredicateInternal(INode, INode)
  nameWithType: BaseDataset.GetTriplesWithSubjectPredicateInternal(INode, INode)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicateInternal(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectPredicateInternal
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 693
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset with the given Subject and Predicate.\n"
  example: []
  syntax:
    content: protected abstract IEnumerable<Triple> GetTriplesWithSubjectPredicateInternal(INode subj, INode pred)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Protected MustOverride Function GetTriplesWithSubjectPredicateInternal(subj As INode, pred As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicateInternal*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: BaseDataset.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectObject
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 701
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset with the given Subject and Object.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithSubjectObject(INode subj, INode obj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithSubjectObject(subj As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObject*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObjectInternal(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObjectInternal(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithSubjectObjectInternal(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithSubjectObjectInternal(INode, INode)
  nameWithType: BaseDataset.GetTriplesWithSubjectObjectInternal(INode, INode)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObjectInternal(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithSubjectObjectInternal
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 726
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset with the given Subject and Object.\n"
  example: []
  syntax:
    content: protected abstract IEnumerable<Triple> GetTriplesWithSubjectObjectInternal(INode subj, INode obj)
    parameters:
    - id: subj
      type: VDS.RDF.INode
      description: Subject.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Protected MustOverride Function GetTriplesWithSubjectObjectInternal(subj As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObjectInternal*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: BaseDataset.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicateObject
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 734
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset with the given Predicate and Object.\n"
  example: []
  syntax:
    content: public IEnumerable<Triple> GetTriplesWithPredicateObject(INode pred, INode obj)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Public Function GetTriplesWithPredicateObject(pred As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObject*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObjectInternal(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObjectInternal(VDS.RDF.INode,VDS.RDF.INode)
  id: GetTriplesWithPredicateObjectInternal(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: GetTriplesWithPredicateObjectInternal(INode, INode)
  nameWithType: BaseDataset.GetTriplesWithPredicateObjectInternal(INode, INode)
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObjectInternal(VDS.RDF.INode, VDS.RDF.INode)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetTriplesWithPredicateObjectInternal
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 759
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nGets all the Triples in the Dataset with the given Predicate and Object.\n"
  example: []
  syntax:
    content: protected abstract IEnumerable<Triple> GetTriplesWithPredicateObjectInternal(INode pred, INode obj)
    parameters:
    - id: pred
      type: VDS.RDF.INode
      description: Predicate.
    - id: obj
      type: VDS.RDF.INode
      description: Object.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
      description: ''
    content.vb: Protected MustOverride Function GetTriplesWithPredicateObjectInternal(pred As INode, obj As INode) As IEnumerable(Of Triple)
  overload: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObjectInternal*
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.Flush
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.Flush
  id: Flush
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: Flush()
  nameWithType: BaseDataset.Flush()
  fullName: VDS.RDF.Query.Datasets.BaseDataset.Flush()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Flush
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 766
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nEnsures that any changes to the Dataset (if any) are flushed to the underlying Storage.\n"
  example: []
  syntax:
    content: public abstract void Flush()
    content.vb: Public MustOverride Sub Flush
  overload: VDS.RDF.Query.Datasets.BaseDataset.Flush*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
- uid: VDS.RDF.Query.Datasets.BaseDataset.Discard
  commentId: M:VDS.RDF.Query.Datasets.BaseDataset.Discard
  id: Discard
  parent: VDS.RDF.Query.Datasets.BaseDataset
  langs:
  - csharp
  - vb
  name: Discard()
  nameWithType: BaseDataset.Discard()
  fullName: VDS.RDF.Query.Datasets.BaseDataset.Discard()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Discard
    path: Libraries/dotNetRDF/Query/Datasets/BaseDataset.cs
    startLine: 771
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Datasets
  summary: "\nEnsures that any changes to the Dataset (if any) are discarded.\n"
  example: []
  syntax:
    content: public abstract void Discard()
    content.vb: Public MustOverride Sub Discard
  overload: VDS.RDF.Query.Datasets.BaseDataset.Discard*
  implements:
  - VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: VDS.RDF.Query.Datasets
  commentId: N:VDS.RDF.Query.Datasets
  name: VDS.RDF.Query.Datasets
  nameWithType: VDS.RDF.Query.Datasets
  fullName: VDS.RDF.Query.Datasets
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.Datasets.ISparqlDataset
  commentId: T:VDS.RDF.Query.Datasets.ISparqlDataset
  parent: VDS.RDF.Query.Datasets
  name: ISparqlDataset
  nameWithType: ISparqlDataset
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseDataset>()
  nameWithType: Extensions.AsEnumerable<BaseDataset>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Datasets.BaseDataset>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseDataset)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Datasets.BaseDataset)()
  name.vb: AsEnumerable(Of BaseDataset)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseDataset>
    nameWithType: Extensions.AsEnumerable<BaseDataset>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.Datasets.BaseDataset>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseDataset)
    nameWithType: Extensions.AsEnumerable(Of BaseDataset)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.Datasets.BaseDataset)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.Datasets.BaseDataset.#ctor*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.#ctor
  name: BaseDataset
  nameWithType: BaseDataset.BaseDataset
  fullName: VDS.RDF.Query.Datasets.BaseDataset.BaseDataset
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Uri
  commentId: T:System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: VDS.RDF.IGraph
  commentId: T:VDS.RDF.IGraph
  parent: VDS.RDF
  name: IGraph
  nameWithType: IGraph
  fullName: VDS.RDF.IGraph
- uid: VDS.RDF.Query.Datasets.BaseDataset.InternalDefaultGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.InternalDefaultGraph
  name: InternalDefaultGraph
  nameWithType: BaseDataset.InternalDefaultGraph
  fullName: VDS.RDF.Query.Datasets.BaseDataset.InternalDefaultGraph
- uid: VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph
  name: SetDefaultGraph
  nameWithType: BaseDataset.SetDefaultGraph
  fullName: VDS.RDF.Query.Datasets.BaseDataset.SetDefaultGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: SetDefaultGraph(Uri)
  nameWithType: ISparqlDataset.SetDefaultGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
    name: SetDefaultGraph
    nameWithType: ISparqlDataset.SetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Uri)
    name: SetDefaultGraph
    nameWithType: ISparqlDataset.SetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: SetDefaultGraph(IEnumerable<Uri>)
  nameWithType: ISparqlDataset.SetDefaultGraph(IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable<System.Uri>)
  nameWithType.vb: ISparqlDataset.SetDefaultGraph(IEnumerable(Of Uri))
  fullName.vb: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SetDefaultGraph(IEnumerable(Of Uri))
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
    name: SetDefaultGraph
    nameWithType: ISparqlDataset.SetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph(System.Collections.Generic.IEnumerable{System.Uri})
    name: SetDefaultGraph
    nameWithType: ISparqlDataset.SetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Uri}
  commentId: T:System.Collections.Generic.IEnumerable{System.Uri}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: System.Collections.Generic.IEnumerable<System.Uri>
  nameWithType.vb: IEnumerable(Of Uri)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Uri)
  name.vb: IEnumerable(Of Uri)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph
  name: SetActiveGraph
  nameWithType: BaseDataset.SetActiveGraph
  fullName: VDS.RDF.Query.Datasets.BaseDataset.SetActiveGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: SetActiveGraph(Uri)
  nameWithType: ISparqlDataset.SetActiveGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
    name: SetActiveGraph
    nameWithType: ISparqlDataset.SetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Uri)
    name: SetActiveGraph
    nameWithType: ISparqlDataset.SetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: SetActiveGraph(IEnumerable<Uri>)
  nameWithType: ISparqlDataset.SetActiveGraph(IEnumerable<Uri>)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable<System.Uri>)
  nameWithType.vb: ISparqlDataset.SetActiveGraph(IEnumerable(Of Uri))
  fullName.vb: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable(Of System.Uri))
  name.vb: SetActiveGraph(IEnumerable(Of Uri))
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
    name: SetActiveGraph
    nameWithType: ISparqlDataset.SetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph(System.Collections.Generic.IEnumerable{System.Uri})
    name: SetActiveGraph
    nameWithType: ISparqlDataset.SetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.SetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.ResetActiveGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.ResetActiveGraph
  name: ResetActiveGraph
  nameWithType: BaseDataset.ResetActiveGraph
  fullName: VDS.RDF.Query.Datasets.BaseDataset.ResetActiveGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: ResetActiveGraph()
  nameWithType: ISparqlDataset.ResetActiveGraph()
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph()
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
    name: ResetActiveGraph
    nameWithType: ISparqlDataset.ResetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
    name: ResetActiveGraph
    nameWithType: ISparqlDataset.ResetActiveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetActiveGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.ResetDefaultGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.ResetDefaultGraph
  name: ResetDefaultGraph
  nameWithType: BaseDataset.ResetDefaultGraph
  fullName: VDS.RDF.Query.Datasets.BaseDataset.ResetDefaultGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: ResetDefaultGraph()
  nameWithType: ISparqlDataset.ResetDefaultGraph()
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph()
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
    name: ResetDefaultGraph
    nameWithType: ISparqlDataset.ResetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
    name: ResetDefaultGraph
    nameWithType: ISparqlDataset.ResetDefaultGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ResetDefaultGraph
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.DefaultGraphUris*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.DefaultGraphUris
  name: DefaultGraphUris
  nameWithType: BaseDataset.DefaultGraphUris
  fullName: VDS.RDF.Query.Datasets.BaseDataset.DefaultGraphUris
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.DefaultGraphUris
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.DefaultGraphUris
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: DefaultGraphUris
  nameWithType: ISparqlDataset.DefaultGraphUris
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.DefaultGraphUris
- uid: VDS.RDF.Query.Datasets.BaseDataset.ActiveGraphUris*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.ActiveGraphUris
  name: ActiveGraphUris
  nameWithType: BaseDataset.ActiveGraphUris
  fullName: VDS.RDF.Query.Datasets.BaseDataset.ActiveGraphUris
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.ActiveGraphUris
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.ActiveGraphUris
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: ActiveGraphUris
  nameWithType: ISparqlDataset.ActiveGraphUris
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ActiveGraphUris
- uid: VDS.RDF.Query.Datasets.BaseDataset.UsesUnionDefaultGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.UsesUnionDefaultGraph
  name: UsesUnionDefaultGraph
  nameWithType: BaseDataset.UsesUnionDefaultGraph
  fullName: VDS.RDF.Query.Datasets.BaseDataset.UsesUnionDefaultGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.UsesUnionDefaultGraph
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.UsesUnionDefaultGraph
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: UsesUnionDefaultGraph
  nameWithType: ISparqlDataset.UsesUnionDefaultGraph
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.UsesUnionDefaultGraph
- uid: VDS.RDF.Query.Datasets.BaseDataset.AddGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.AddGraph
  name: AddGraph
  nameWithType: BaseDataset.AddGraph
  fullName: VDS.RDF.Query.Datasets.BaseDataset.AddGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: AddGraph(IGraph)
  nameWithType: ISparqlDataset.AddGraph(IGraph)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
    name: AddGraph
    nameWithType: ISparqlDataset.AddGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph(VDS.RDF.IGraph)
    name: AddGraph
    nameWithType: ISparqlDataset.AddGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.AddGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.RemoveGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.RemoveGraph
  name: RemoveGraph
  nameWithType: BaseDataset.RemoveGraph
  fullName: VDS.RDF.Query.Datasets.BaseDataset.RemoveGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: RemoveGraph(Uri)
  nameWithType: ISparqlDataset.RemoveGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
    name: RemoveGraph
    nameWithType: ISparqlDataset.RemoveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph(System.Uri)
    name: RemoveGraph
    nameWithType: ISparqlDataset.RemoveGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.RemoveGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.RemoveGraphInternal*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.RemoveGraphInternal
  name: RemoveGraphInternal
  nameWithType: BaseDataset.RemoveGraphInternal
  fullName: VDS.RDF.Query.Datasets.BaseDataset.RemoveGraphInternal
- uid: VDS.RDF.Query.Datasets.BaseDataset.HasGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.HasGraph
  name: HasGraph
  nameWithType: BaseDataset.HasGraph
  fullName: VDS.RDF.Query.Datasets.BaseDataset.HasGraph
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: HasGraph(Uri)
  nameWithType: ISparqlDataset.HasGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
    name: HasGraph
    nameWithType: ISparqlDataset.HasGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph(System.Uri)
    name: HasGraph
    nameWithType: ISparqlDataset.HasGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.HasGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.HasGraphInternal*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.HasGraphInternal
  name: HasGraphInternal
  nameWithType: BaseDataset.HasGraphInternal
  fullName: VDS.RDF.Query.Datasets.BaseDataset.HasGraphInternal
- uid: VDS.RDF.Query.Datasets.BaseDataset.Graphs*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.Graphs
  name: Graphs
  nameWithType: BaseDataset.Graphs
  fullName: VDS.RDF.Query.Datasets.BaseDataset.Graphs
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Graphs
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.Graphs
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: Graphs
  nameWithType: ISparqlDataset.Graphs
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Graphs
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.IGraph}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.IGraph}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IGraph>
  nameWithType: IEnumerable<IGraph>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.IGraph>
  nameWithType.vb: IEnumerable(Of IGraph)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.IGraph)
  name.vb: IEnumerable(Of IGraph)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.IGraph
    name: IGraph
    nameWithType: IGraph
    fullName: VDS.RDF.IGraph
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.GraphUris*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GraphUris
  name: GraphUris
  nameWithType: BaseDataset.GraphUris
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GraphUris
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GraphUris
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.GraphUris
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GraphUris
  nameWithType: ISparqlDataset.GraphUris
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GraphUris
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: GetModifiableGraph(Uri)
  nameWithType: ISparqlDataset.GetModifiableGraph(Uri)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
    name: GetModifiableGraph
    nameWithType: ISparqlDataset.GetModifiableGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph(System.Uri)
    name: GetModifiableGraph
    nameWithType: ISparqlDataset.GetModifiableGraph
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetModifiableGraph
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.Item*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.Item
  name: Item
  nameWithType: BaseDataset.Item
  fullName: VDS.RDF.Query.Datasets.BaseDataset.Item
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  isExternal: true
  name: Item[Uri]
  nameWithType: ISparqlDataset.Item[Uri]
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Item[System.Uri]
  nameWithType.vb: ISparqlDataset.Item(Uri)
  fullName.vb: VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
  name.vb: Item(Uri)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
    name: Item
    nameWithType: ISparqlDataset.Item
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Item(System.Uri)
    name: Item
    nameWithType: ISparqlDataset.Item
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetGraphInternal*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetGraphInternal
  name: GetGraphInternal
  nameWithType: BaseDataset.GetGraphInternal
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetGraphInternal
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetModifiableGraph*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetModifiableGraph
  name: GetModifiableGraph
  nameWithType: BaseDataset.GetModifiableGraph
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetModifiableGraph
- uid: VDS.RDF.Query.Datasets.BaseDataset.HasTriples*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.HasTriples
  name: HasTriples
  nameWithType: BaseDataset.HasTriples
  fullName: VDS.RDF.Query.Datasets.BaseDataset.HasTriples
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.HasTriples
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.HasTriples
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: HasTriples
  nameWithType: ISparqlDataset.HasTriples
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.HasTriples
- uid: VDS.RDF.Query.Datasets.BaseDataset.ContainsTriple*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.ContainsTriple
  name: ContainsTriple
  nameWithType: BaseDataset.ContainsTriple
  fullName: VDS.RDF.Query.Datasets.BaseDataset.ContainsTriple
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: ContainsTriple(Triple)
  nameWithType: ISparqlDataset.ContainsTriple(Triple)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: ISparqlDataset.ContainsTriple
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple(VDS.RDF.Triple)
    name: ContainsTriple
    nameWithType: ISparqlDataset.ContainsTriple
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.ContainsTriple
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Triple
  commentId: T:VDS.RDF.Triple
  parent: VDS.RDF
  name: Triple
  nameWithType: Triple
  fullName: VDS.RDF.Triple
- uid: VDS.RDF.Query.Datasets.BaseDataset.ContainsTripleInternal*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.ContainsTripleInternal
  name: ContainsTripleInternal
  nameWithType: BaseDataset.ContainsTripleInternal
  fullName: VDS.RDF.Query.Datasets.BaseDataset.ContainsTripleInternal
- uid: VDS.RDF.Query.Datasets.BaseDataset.Triples*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.Triples
  name: Triples
  nameWithType: BaseDataset.Triples
  fullName: VDS.RDF.Query.Datasets.BaseDataset.Triples
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Triples
  commentId: P:VDS.RDF.Query.Datasets.ISparqlDataset.Triples
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: Triples
  nameWithType: ISparqlDataset.Triples
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Triples
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Triple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Triple>
  nameWithType: IEnumerable<Triple>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Triple>
  nameWithType.vb: IEnumerable(Of Triple)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Triple)
  name.vb: IEnumerable(Of Triple)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Triple
    name: Triple
    nameWithType: Triple
    fullName: VDS.RDF.Triple
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetAllTriples*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetAllTriples
  name: GetAllTriples
  nameWithType: BaseDataset.GetAllTriples
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetAllTriples
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubject*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubject
  name: GetTriplesWithSubject
  nameWithType: BaseDataset.GetTriplesWithSubject
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubject
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithSubject(INode)
  nameWithType: ISparqlDataset.GetTriplesWithSubject(INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: ISparqlDataset.GetTriplesWithSubject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject(VDS.RDF.INode)
    name: GetTriplesWithSubject
    nameWithType: ISparqlDataset.GetTriplesWithSubject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.INode
  commentId: T:VDS.RDF.INode
  parent: VDS.RDF
  name: INode
  nameWithType: INode
  fullName: VDS.RDF.INode
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectInternal*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectInternal
  name: GetTriplesWithSubjectInternal
  nameWithType: BaseDataset.GetTriplesWithSubjectInternal
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectInternal
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicate*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicate
  name: GetTriplesWithPredicate
  nameWithType: BaseDataset.GetTriplesWithPredicate
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicate
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithPredicate(INode)
  nameWithType: ISparqlDataset.GetTriplesWithPredicate(INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: ISparqlDataset.GetTriplesWithPredicate
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate(VDS.RDF.INode)
    name: GetTriplesWithPredicate
    nameWithType: ISparqlDataset.GetTriplesWithPredicate
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateInternal*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateInternal
  name: GetTriplesWithPredicateInternal
  nameWithType: BaseDataset.GetTriplesWithPredicateInternal
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateInternal
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObject*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObject
  name: GetTriplesWithObject
  nameWithType: BaseDataset.GetTriplesWithObject
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObject
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithObject(INode)
  nameWithType: ISparqlDataset.GetTriplesWithObject(INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: ISparqlDataset.GetTriplesWithObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject(VDS.RDF.INode)
    name: GetTriplesWithObject
    nameWithType: ISparqlDataset.GetTriplesWithObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObjectInternal*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObjectInternal
  name: GetTriplesWithObjectInternal
  nameWithType: BaseDataset.GetTriplesWithObjectInternal
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithObjectInternal
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicate*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicate
  name: GetTriplesWithSubjectPredicate
  nameWithType: BaseDataset.GetTriplesWithSubjectPredicate
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicate
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithSubjectPredicate(INode, INode)
  nameWithType: ISparqlDataset.GetTriplesWithSubjectPredicate(INode, INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: ISparqlDataset.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectPredicate
    nameWithType: ISparqlDataset.GetTriplesWithSubjectPredicate
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicateInternal*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicateInternal
  name: GetTriplesWithSubjectPredicateInternal
  nameWithType: BaseDataset.GetTriplesWithSubjectPredicateInternal
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectPredicateInternal
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObject*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObject
  name: GetTriplesWithSubjectObject
  nameWithType: BaseDataset.GetTriplesWithSubjectObject
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObject
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithSubjectObject(INode, INode)
  nameWithType: ISparqlDataset.GetTriplesWithSubjectObject(INode, INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: ISparqlDataset.GetTriplesWithSubjectObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithSubjectObject
    nameWithType: ISparqlDataset.GetTriplesWithSubjectObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithSubjectObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObjectInternal*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObjectInternal
  name: GetTriplesWithSubjectObjectInternal
  nameWithType: BaseDataset.GetTriplesWithSubjectObjectInternal
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithSubjectObjectInternal
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObject*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObject
  name: GetTriplesWithPredicateObject
  nameWithType: BaseDataset.GetTriplesWithPredicateObject
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObject
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: GetTriplesWithPredicateObject(INode, INode)
  nameWithType: ISparqlDataset.GetTriplesWithPredicateObject(INode, INode)
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode, VDS.RDF.INode)
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: ISparqlDataset.GetTriplesWithPredicateObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject(VDS.RDF.INode,VDS.RDF.INode)
    name: GetTriplesWithPredicateObject
    nameWithType: ISparqlDataset.GetTriplesWithPredicateObject
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.GetTriplesWithPredicateObject
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObjectInternal*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObjectInternal
  name: GetTriplesWithPredicateObjectInternal
  nameWithType: BaseDataset.GetTriplesWithPredicateObjectInternal
  fullName: VDS.RDF.Query.Datasets.BaseDataset.GetTriplesWithPredicateObjectInternal
- uid: VDS.RDF.Query.Datasets.BaseDataset.Flush*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.Flush
  name: Flush
  nameWithType: BaseDataset.Flush
  fullName: VDS.RDF.Query.Datasets.BaseDataset.Flush
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: Flush()
  nameWithType: ISparqlDataset.Flush()
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Flush()
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
    name: Flush
    nameWithType: ISparqlDataset.Flush
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
    name: Flush
    nameWithType: ISparqlDataset.Flush
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Flush
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.Datasets.BaseDataset.Discard*
  commentId: Overload:VDS.RDF.Query.Datasets.BaseDataset.Discard
  name: Discard
  nameWithType: BaseDataset.Discard
  fullName: VDS.RDF.Query.Datasets.BaseDataset.Discard
- uid: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  commentId: M:VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  parent: VDS.RDF.Query.Datasets.ISparqlDataset
  name: Discard()
  nameWithType: ISparqlDataset.Discard()
  fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Discard()
  spec.csharp:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
    name: Discard
    nameWithType: ISparqlDataset.Discard
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
    name: Discard
    nameWithType: ISparqlDataset.Discard
    fullName: VDS.RDF.Query.Datasets.ISparqlDataset.Discard
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
shouldSkipMarkup: true
