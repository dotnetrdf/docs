### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper
  commentId: T:VDS.RDF.Parsing.UnicodeSpecsHelper
  id: UnicodeSpecsHelper
  parent: VDS.RDF.Parsing
  children:
  - VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChar(System.String)
  - VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChars(System.String)
  - VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToUtf32(System.Char,System.Char)
  - VDS.RDF.Parsing.UnicodeSpecsHelper.HighSurrogateEnd
  - VDS.RDF.Parsing.UnicodeSpecsHelper.HighSurrogateStart
  - VDS.RDF.Parsing.UnicodeSpecsHelper.IsDigit(System.Char)
  - VDS.RDF.Parsing.UnicodeSpecsHelper.IsHighSurrogate(System.Char)
  - VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetter(System.Char)
  - VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterModifier(System.Char)
  - VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterOrDigit(System.Char)
  - VDS.RDF.Parsing.UnicodeSpecsHelper.IsLowSurrogate(System.Char)
  - VDS.RDF.Parsing.UnicodeSpecsHelper.LowSurrogateEnd
  - VDS.RDF.Parsing.UnicodeSpecsHelper.LowSurrogateStart
  langs:
  - csharp
  - vb
  name: UnicodeSpecsHelper
  nameWithType: UnicodeSpecsHelper
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: UnicodeSpecsHelper
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 34
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nHelper Class which defines some Test Functions for testing the Unicode Category of Characters.\n"
  example: []
  syntax:
    content: public class UnicodeSpecsHelper
    content.vb: Public Class UnicodeSpecsHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Parsing.UnicodeSpecsHelper.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.HighSurrogateStart
  commentId: F:VDS.RDF.Parsing.UnicodeSpecsHelper.HighSurrogateStart
  id: HighSurrogateStart
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: HighSurrogateStart
  nameWithType: UnicodeSpecsHelper.HighSurrogateStart
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.HighSurrogateStart
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HighSurrogateStart
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 39
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nStart of high surrogate range.\n"
  example: []
  syntax:
    content: public const int HighSurrogateStart = 55296
    return:
      type: System.Int32
    content.vb: Public Const HighSurrogateStart As Integer = 55296
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.HighSurrogateEnd
  commentId: F:VDS.RDF.Parsing.UnicodeSpecsHelper.HighSurrogateEnd
  id: HighSurrogateEnd
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: HighSurrogateEnd
  nameWithType: UnicodeSpecsHelper.HighSurrogateEnd
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.HighSurrogateEnd
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: HighSurrogateEnd
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 43
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nEnd of high surrogate range.\n"
  example: []
  syntax:
    content: public const int HighSurrogateEnd = 56319
    return:
      type: System.Int32
    content.vb: Public Const HighSurrogateEnd As Integer = 56319
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.LowSurrogateStart
  commentId: F:VDS.RDF.Parsing.UnicodeSpecsHelper.LowSurrogateStart
  id: LowSurrogateStart
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: LowSurrogateStart
  nameWithType: UnicodeSpecsHelper.LowSurrogateStart
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.LowSurrogateStart
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LowSurrogateStart
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 48
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nStart of low surrogate range.\n"
  example: []
  syntax:
    content: public const int LowSurrogateStart = 56320
    return:
      type: System.Int32
    content.vb: Public Const LowSurrogateStart As Integer = 56320
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.LowSurrogateEnd
  commentId: F:VDS.RDF.Parsing.UnicodeSpecsHelper.LowSurrogateEnd
  id: LowSurrogateEnd
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: LowSurrogateEnd
  nameWithType: UnicodeSpecsHelper.LowSurrogateEnd
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.LowSurrogateEnd
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: LowSurrogateEnd
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 52
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nEnd of low surrogate range.\n"
  example: []
  syntax:
    content: public const int LowSurrogateEnd = 57343
    return:
      type: System.Int32
    content.vb: Public Const LowSurrogateEnd As Integer = 57343
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetter(System.Char)
  commentId: M:VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetter(System.Char)
  id: IsLetter(System.Char)
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: IsLetter(Char)
  nameWithType: UnicodeSpecsHelper.IsLetter(Char)
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetter(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsLetter
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given Character is considered a Letter.\n"
  example: []
  syntax:
    content: public static bool IsLetter(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character to Test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsLetter(c As Char) As Boolean
  overload: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetter*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterOrDigit(System.Char)
  commentId: M:VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterOrDigit(System.Char)
  id: IsLetterOrDigit(System.Char)
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: IsLetterOrDigit(Char)
  nameWithType: UnicodeSpecsHelper.IsLetterOrDigit(Char)
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterOrDigit(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsLetterOrDigit
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 87
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given Character is considered a Letter or Digit.\n"
  example: []
  syntax:
    content: public static bool IsLetterOrDigit(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character to Test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsLetterOrDigit(c As Char) As Boolean
  overload: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterOrDigit*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterModifier(System.Char)
  commentId: M:VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterModifier(System.Char)
  id: IsLetterModifier(System.Char)
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: IsLetterModifier(Char)
  nameWithType: UnicodeSpecsHelper.IsLetterModifier(Char)
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterModifier(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsLetterModifier
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 97
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given Character is considered a Letter Modifier.\n"
  example: []
  syntax:
    content: public static bool IsLetterModifier(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character to Test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsLetterModifier(c As Char) As Boolean
  overload: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterModifier*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.IsDigit(System.Char)
  commentId: M:VDS.RDF.Parsing.UnicodeSpecsHelper.IsDigit(System.Char)
  id: IsDigit(System.Char)
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: IsDigit(Char)
  nameWithType: UnicodeSpecsHelper.IsDigit(Char)
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.IsDigit(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsDigit
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 114
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nChecks whether a given Character is considered a Digit.\n"
  example: []
  syntax:
    content: public static bool IsDigit(char c)
    parameters:
    - id: c
      type: System.Char
      description: Character to Test.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsDigit(c As Char) As Boolean
  overload: VDS.RDF.Parsing.UnicodeSpecsHelper.IsDigit*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.IsHighSurrogate(System.Char)
  commentId: M:VDS.RDF.Parsing.UnicodeSpecsHelper.IsHighSurrogate(System.Char)
  id: IsHighSurrogate(System.Char)
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: IsHighSurrogate(Char)
  nameWithType: UnicodeSpecsHelper.IsHighSurrogate(Char)
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.IsHighSurrogate(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsHighSurrogate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 135
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nIndicates whether the specified <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object is a high surrogate.\n"
  example: []
  syntax:
    content: public static bool IsHighSurrogate(char c)
    parameters:
    - id: c
      type: System.Char
      description: 'The Unicode character to evaluate. '
    return:
      type: System.Boolean
      description: "\ntrue if the numeric value of the <code data-dev-comment-type=\"paramref\" class=\"paramref\">c</code> parameter ranges from U+D800 through U+DBFF; otherwise, false.\n"
    content.vb: Public Shared Function IsHighSurrogate(c As Char) As Boolean
  overload: VDS.RDF.Parsing.UnicodeSpecsHelper.IsHighSurrogate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLowSurrogate(System.Char)
  commentId: M:VDS.RDF.Parsing.UnicodeSpecsHelper.IsLowSurrogate(System.Char)
  id: IsLowSurrogate(System.Char)
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: IsLowSurrogate(Char)
  nameWithType: UnicodeSpecsHelper.IsLowSurrogate(Char)
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLowSurrogate(System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsLowSurrogate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 148
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nIndicates whether the specified <xref href=\"System.Char\" data-throw-if-not-resolved=\"false\"></xref> object is a low surrogate.\n"
  example: []
  syntax:
    content: public static bool IsLowSurrogate(char c)
    parameters:
    - id: c
      type: System.Char
      description: 'The character to evaluate. '
    return:
      type: System.Boolean
      description: "\ntrue if the numeric value of the <code data-dev-comment-type=\"paramref\" class=\"paramref\">c</code> parameter ranges from U+DC00 through U+DFFF; otherwise, false.\n"
    content.vb: Public Shared Function IsLowSurrogate(c As Char) As Boolean
  overload: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLowSurrogate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToUtf32(System.Char,System.Char)
  commentId: M:VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToUtf32(System.Char,System.Char)
  id: ConvertToUtf32(System.Char,System.Char)
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: ConvertToUtf32(Char, Char)
  nameWithType: UnicodeSpecsHelper.ConvertToUtf32(Char, Char)
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToUtf32(System.Char, System.Char)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ConvertToUtf32
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 164
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nConverts the value of a UTF-16 encoded surrogate pair into a Unicode code point.\n"
  example: []
  syntax:
    content: public static int ConvertToUtf32(char highSurrogate, char lowSurrogate)
    parameters:
    - id: highSurrogate
      type: System.Char
      description: 'A high surrogate code point (that is, a code point ranging from U+D800 through U+DBFF). '
    - id: lowSurrogate
      type: System.Char
      description: 'A low surrogate code point (that is, a code point ranging from U+DC00 through U+DFFF). '
    return:
      type: System.Int32
      description: "\nThe 21-bit Unicode code point represented by the <code data-dev-comment-type=\"paramref\" class=\"paramref\">highSurrogate</code> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">lowSurrogate</code> parameters.\n"
    content.vb: Public Shared Function ConvertToUtf32(highSurrogate As Char, lowSurrogate As Char) As Integer
  overload: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToUtf32*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: '<code data-dev-comment-type="paramref" class="paramref">highSurrogate</code> is not in the range U+D800 through U+DBFF, or <code data-dev-comment-type="paramref" class="paramref">lowSurrogate</code> is not in the range U+DC00 through U+DFFF. '
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChar(System.String)
  commentId: M:VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChar(System.String)
  id: ConvertToChar(System.String)
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: ConvertToChar(String)
  nameWithType: UnicodeSpecsHelper.ConvertToChar(String)
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChar(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ConvertToChar
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 174
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nConverts a Hex Escape into the relevant Unicode Character.\n"
  example: []
  syntax:
    content: public static char ConvertToChar(string hex)
    parameters:
    - id: hex
      type: System.String
      description: Hex code.
    return:
      type: System.Char
      description: ''
    content.vb: Public Shared Function ConvertToChar(hex As String) As Char
  overload: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChar*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChars(System.String)
  commentId: M:VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChars(System.String)
  id: ConvertToChars(System.String)
  parent: VDS.RDF.Parsing.UnicodeSpecsHelper
  langs:
  - csharp
  - vb
  name: ConvertToChars(String)
  nameWithType: UnicodeSpecsHelper.ConvertToChars(String)
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChars(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ConvertToChars
    path: ../../dotNetRDF/Libraries/dotNetRDF/Parsing/UnicodeSpecsHelper.cs
    startLine: 197
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Parsing
  summary: "\nConverts a Hex Escape into the relevant UTF-16 codepoints.\n"
  example: []
  syntax:
    content: public static char[] ConvertToChars(string hex)
    parameters:
    - id: hex
      type: System.String
      description: ''
    return:
      type: System.Char[]
      description: ''
    content.vb: Public Shared Function ConvertToChars(hex As String) As Char()
  overload: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChars*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VDS.RDF.Parsing
  commentId: N:VDS.RDF.Parsing
  name: VDS.RDF.Parsing
  nameWithType: VDS.RDF.Parsing
  fullName: VDS.RDF.Parsing
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<UnicodeSpecsHelper>()
  nameWithType: Extensions.AsEnumerable<UnicodeSpecsHelper>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.UnicodeSpecsHelper>()
  nameWithType.vb: Extensions.AsEnumerable(Of UnicodeSpecsHelper)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.UnicodeSpecsHelper)()
  name.vb: AsEnumerable(Of UnicodeSpecsHelper)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<UnicodeSpecsHelper>
    nameWithType: Extensions.AsEnumerable<UnicodeSpecsHelper>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Parsing.UnicodeSpecsHelper>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of UnicodeSpecsHelper)
    nameWithType: Extensions.AsEnumerable(Of UnicodeSpecsHelper)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Parsing.UnicodeSpecsHelper)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetter*
  commentId: Overload:VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetter
  name: IsLetter
  nameWithType: UnicodeSpecsHelper.IsLetter
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetter
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterOrDigit*
  commentId: Overload:VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterOrDigit
  name: IsLetterOrDigit
  nameWithType: UnicodeSpecsHelper.IsLetterOrDigit
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterOrDigit
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterModifier*
  commentId: Overload:VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterModifier
  name: IsLetterModifier
  nameWithType: UnicodeSpecsHelper.IsLetterModifier
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLetterModifier
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.IsDigit*
  commentId: Overload:VDS.RDF.Parsing.UnicodeSpecsHelper.IsDigit
  name: IsDigit
  nameWithType: UnicodeSpecsHelper.IsDigit
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.IsDigit
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.IsHighSurrogate*
  commentId: Overload:VDS.RDF.Parsing.UnicodeSpecsHelper.IsHighSurrogate
  name: IsHighSurrogate
  nameWithType: UnicodeSpecsHelper.IsHighSurrogate
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.IsHighSurrogate
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLowSurrogate*
  commentId: Overload:VDS.RDF.Parsing.UnicodeSpecsHelper.IsLowSurrogate
  name: IsLowSurrogate
  nameWithType: UnicodeSpecsHelper.IsLowSurrogate
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.IsLowSurrogate
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToUtf32*
  commentId: Overload:VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToUtf32
  name: ConvertToUtf32
  nameWithType: UnicodeSpecsHelper.ConvertToUtf32
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToUtf32
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChar*
  commentId: Overload:VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChar
  name: ConvertToChar
  nameWithType: UnicodeSpecsHelper.ConvertToChar
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChar
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChars*
  commentId: Overload:VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChars
  name: ConvertToChars
  nameWithType: UnicodeSpecsHelper.ConvertToChars
  fullName: VDS.RDF.Parsing.UnicodeSpecsHelper.ConvertToChars
- uid: System.Char[]
  isExternal: true
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  nameWithType.vb: Char()
  fullName.vb: System.Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
