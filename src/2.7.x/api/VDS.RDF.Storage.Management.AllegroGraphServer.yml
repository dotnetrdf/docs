### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Storage.Management.AllegroGraphServer
  commentId: T:VDS.RDF.Storage.Management.AllegroGraphServer
  id: AllegroGraphServer
  parent: VDS.RDF.Storage.Management
  children:
  - VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String)
  - VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.Net.IWebProxy)
  - VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String)
  - VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.Net.IWebProxy)
  - VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.String)
  - VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.String,System.Net.IWebProxy)
  - VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.String,System.String)
  - VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.String,System.String,System.Net.IWebProxy)
  - VDS.RDF.Storage.Management.AllegroGraphServer.CreateRequest(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate)
  - VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  - VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore(System.String)
  - VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  - VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates(System.String)
  - VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  - VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate(System.String)
  - VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  - VDS.RDF.Storage.Management.AllegroGraphServer.GetStore(System.String)
  - VDS.RDF.Storage.Management.AllegroGraphServer.GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  - VDS.RDF.Storage.Management.AllegroGraphServer.ListStores
  - VDS.RDF.Storage.Management.AllegroGraphServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  - VDS.RDF.Storage.Management.AllegroGraphServer.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  langs:
  - csharp
  - vb
  name: AllegroGraphServer
  nameWithType: AllegroGraphServer
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AllegroGraphServer
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 40
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nRepresents an AllegroGraph server, may be used to access and manage stores within a catalog on the server.\n"
  example: []
  syntax:
    content: 'public class AllegroGraphServer : SesameServer, IAsyncStorageServer, IConfigurationSerializable, IStorageServer, IDisposable'
    content.vb: >-
      Public Class AllegroGraphServer
          Inherits SesameServer
          Implements IAsyncStorageServer, IConfigurationSerializable, IStorageServer, IDisposable
  inheritance:
  - System.Object
  - VDS.RDF.Storage.BaseHttpConnector
  - VDS.RDF.Storage.Management.SesameServer
  implements:
  - VDS.RDF.Storage.Management.IAsyncStorageServer
  - VDS.RDF.Configuration.IConfigurationSerializable
  - VDS.RDF.Storage.Management.IStorageServer
  - System.IDisposable
  inheritedMembers:
  - VDS.RDF.Storage.Management.SesameServer.SystemRepositoryID
  - VDS.RDF.Storage.Management.SesameServer._baseUri
  - VDS.RDF.Storage.Management.SesameServer._username
  - VDS.RDF.Storage.Management.SesameServer._pwd
  - VDS.RDF.Storage.Management.SesameServer._hasCredentials
  - VDS.RDF.Storage.Management.SesameServer._repositoriesPrefix
  - VDS.RDF.Storage.Management.SesameServer.TemplateTypes
  - VDS.RDF.Storage.Management.SesameServer.IOBehaviour
  - VDS.RDF.Storage.Management.SesameServer.EnsureSystemConnection
  - VDS.RDF.Storage.Management.SesameServer.Dispose
  - VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.String)
  - VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.Uri)
  - VDS.RDF.Storage.BaseHttpConnector.Proxy
  - VDS.RDF.Storage.BaseHttpConnector.ClearProxy
  - VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String)
  - VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String,System.String)
  - VDS.RDF.Storage.BaseHttpConnector.ProxyCredentials
  - VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials
  - VDS.RDF.Storage.BaseHttpConnector.Timeout
  - VDS.RDF.Storage.BaseHttpConnector.Username
  - VDS.RDF.Storage.BaseHttpConnector.Password
  - VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions(System.Net.HttpWebRequest)
  - VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig(VDS.RDF.INode,VDS.RDF.Configuration.ConfigurationSerializationContext)
  - VDS.RDF.Storage.BaseHttpConnector.SetCredentials(System.String,System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - VDS.RDF.Storage.Management.AllegroGraphServer.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: AllegroGraphServer(String, String)
  nameWithType: AllegroGraphServer.AllegroGraphServer(String, String)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.AllegroGraphServer(System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nCreates a new Connection to an AllegroGraph store.\n"
  example: []
  syntax:
    content: public AllegroGraphServer(string baseUri, string catalogID)
    parameters:
    - id: baseUri
      type: System.String
      description: Base URI for the Store.
    - id: catalogID
      type: System.String
      description: Catalog ID.
    content.vb: Public Sub New(baseUri As String, catalogID As String)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: AllegroGraphServer(String)
  nameWithType: AllegroGraphServer.AllegroGraphServer(String)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.AllegroGraphServer(System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 58
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nCreates a new Connection to an AllegroGraph store in the Root Catalog (AllegroGraph 4.x and higher).\n"
  example: []
  syntax:
    content: public AllegroGraphServer(string baseUri)
    parameters:
    - id: baseUri
      type: System.String
      description: Base Uri for the Store.
    content.vb: Public Sub New(baseUri As String)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: AllegroGraphServer(String, String, String, String)
  nameWithType: AllegroGraphServer.AllegroGraphServer(String, String, String, String)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.AllegroGraphServer(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 68
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nCreates a new Connection to an AllegroGraph store.\n"
  example: []
  syntax:
    content: public AllegroGraphServer(string baseUri, string catalogID, string username, string password)
    parameters:
    - id: baseUri
      type: System.String
      description: Base Uri for the Store.
    - id: catalogID
      type: System.String
      description: Catalog ID.
    - id: username
      type: System.String
      description: Username for connecting to the Store.
    - id: password
      type: System.String
      description: Password for connecting to the Store.
    content.vb: Public Sub New(baseUri As String, catalogID As String, username As String, password As String)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.String)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: AllegroGraphServer(String, String, String)
  nameWithType: AllegroGraphServer.AllegroGraphServer(String, String, String)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.AllegroGraphServer(System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 91
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nCreates a new Connection to an AllegroGraph store in the Root Catalog (AllegroGraph 4.x and higher).\n"
  example: []
  syntax:
    content: public AllegroGraphServer(string baseUri, string username, string password)
    parameters:
    - id: baseUri
      type: System.String
      description: Base Uri for the Store.
    - id: username
      type: System.String
      description: Username for connecting to the Store.
    - id: password
      type: System.String
      description: Password for connecting to the Store.
    content.vb: Public Sub New(baseUri As String, username As String, password As String)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.Net.IWebProxy)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.Net.IWebProxy)
  id: '#ctor(System.String,System.String,System.Net.IWebProxy)'
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: AllegroGraphServer(String, String, IWebProxy)
  nameWithType: AllegroGraphServer.AllegroGraphServer(String, String, IWebProxy)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.AllegroGraphServer(System.String, System.String, System.Net.IWebProxy)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 100
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nCreates a new Connection to an AllegroGraph store.\n"
  example: []
  syntax:
    content: public AllegroGraphServer(string baseUri, string catalogID, IWebProxy proxy)
    parameters:
    - id: baseUri
      type: System.String
      description: Base Uri for the Store.
    - id: catalogID
      type: System.String
      description: Catalog ID.
    - id: proxy
      type: System.Net.IWebProxy
      description: Proxy Server.
    content.vb: Public Sub New(baseUri As String, catalogID As String, proxy As IWebProxy)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.Net.IWebProxy)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.Net.IWebProxy)
  id: '#ctor(System.String,System.Net.IWebProxy)'
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: AllegroGraphServer(String, IWebProxy)
  nameWithType: AllegroGraphServer.AllegroGraphServer(String, IWebProxy)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.AllegroGraphServer(System.String, System.Net.IWebProxy)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 108
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nCreates a new Connection to an AllegroGraph store in the Root Catalog (AllegroGraph 4.x and higher).\n"
  example: []
  syntax:
    content: public AllegroGraphServer(string baseUri, IWebProxy proxy)
    parameters:
    - id: baseUri
      type: System.String
      description: Base Uri for the Store.
    - id: proxy
      type: System.Net.IWebProxy
      description: Proxy Server.
    content.vb: Public Sub New(baseUri As String, proxy As IWebProxy)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.String,System.String,System.Net.IWebProxy)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.String,System.String,System.Net.IWebProxy)
  id: '#ctor(System.String,System.String,System.String,System.String,System.Net.IWebProxy)'
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: AllegroGraphServer(String, String, String, String, IWebProxy)
  nameWithType: AllegroGraphServer.AllegroGraphServer(String, String, String, String, IWebProxy)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.AllegroGraphServer(System.String, System.String, System.String, System.String, System.Net.IWebProxy)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 119
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nCreates a new Connection to an AllegroGraph store.\n"
  example: []
  syntax:
    content: public AllegroGraphServer(string baseUri, string catalogID, string username, string password, IWebProxy proxy)
    parameters:
    - id: baseUri
      type: System.String
      description: Base Uri for the Store.
    - id: catalogID
      type: System.String
      description: Catalog ID.
    - id: username
      type: System.String
      description: Username for connecting to the Store.
    - id: password
      type: System.String
      description: Password for connecting to the Store.
    - id: proxy
      type: System.Net.IWebProxy
      description: Proxy Server.
    content.vb: Public Sub New(baseUri As String, catalogID As String, username As String, password As String, proxy As IWebProxy)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.String,System.Net.IWebProxy)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.#ctor(System.String,System.String,System.String,System.Net.IWebProxy)
  id: '#ctor(System.String,System.String,System.String,System.Net.IWebProxy)'
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: AllegroGraphServer(String, String, String, IWebProxy)
  nameWithType: AllegroGraphServer.AllegroGraphServer(String, String, String, IWebProxy)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.AllegroGraphServer(System.String, System.String, System.String, System.Net.IWebProxy)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 132
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nCreates a new Connection to an AllegroGraph store in the Root Catalog (AllegroGraph 4.x and higher).\n"
  example: []
  syntax:
    content: public AllegroGraphServer(string baseUri, string username, string password, IWebProxy proxy)
    parameters:
    - id: baseUri
      type: System.String
      description: Base Uri for the Store.
    - id: username
      type: System.String
      description: Username for connecting to the Store.
    - id: password
      type: System.String
      description: Password for connecting to the Store.
    - id: proxy
      type: System.Net.IWebProxy
      description: Proxy Server.
    content.vb: Public Sub New(baseUri As String, username As String, password As String, proxy As IWebProxy)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate(System.String)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate(System.String)
  id: GetDefaultTemplate(System.String)
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: GetDefaultTemplate(String)
  nameWithType: AllegroGraphServer.GetDefaultTemplate(String)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetDefaultTemplate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 140
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nGets a default template for creating a new Store.\n"
  example: []
  syntax:
    content: public override IStoreTemplate GetDefaultTemplate(string id)
    parameters:
    - id: id
      type: System.String
      description: Store ID.
    return:
      type: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
      description: ''
    content.vb: Public Overrides Function GetDefaultTemplate(id As String) As IStoreTemplate
  overridden: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate(System.String)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates(System.String)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates(System.String)
  id: GetAvailableTemplates(System.String)
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: GetAvailableTemplates(String)
  nameWithType: AllegroGraphServer.GetAvailableTemplates(String)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetAvailableTemplates
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 150
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nGets all available templates for creating a new Store.\n"
  example: []
  syntax:
    content: public override IEnumerable<IStoreTemplate> GetAvailableTemplates(string id)
    parameters:
    - id: id
      type: System.String
      description: Store ID.
    return:
      type: System.Collections.Generic.IEnumerable{VDS.RDF.Storage.Management.Provisioning.IStoreTemplate}
      description: ''
    content.vb: Public Overrides Function GetAvailableTemplates(id As String) As IEnumerable(Of IStoreTemplate)
  overridden: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates(System.String)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate)
  id: CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate)
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: CreateStore(IStoreTemplate)
  nameWithType: AllegroGraphServer.CreateStore(IStoreTemplate)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateStore
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 159
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nCreates a new Store (if it doesn&apos;t already exist).\n"
  example: []
  syntax:
    content: public override bool CreateStore(IStoreTemplate template)
    parameters:
    - id: template
      type: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
      description: Template for creating the new Store.
    return:
      type: System.Boolean
    content.vb: Public Overrides Function CreateStore(template As IStoreTemplate) As Boolean
  overridden: VDS.RDF.Storage.Management.SesameServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore(System.String)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore(System.String)
  id: DeleteStore(System.String)
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: DeleteStore(String)
  nameWithType: AllegroGraphServer.DeleteStore(String)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DeleteStore
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 206
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nRequests that AllegroGraph deletes a Store.\n"
  example: []
  syntax:
    content: public override void DeleteStore(string storeID)
    parameters:
    - id: storeID
      type: System.String
      description: Store ID.
    content.vb: Public Overrides Sub DeleteStore(storeID As String)
  overridden: VDS.RDF.Storage.Management.SesameServer.DeleteStore(System.String)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.ListStores
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.ListStores
  id: ListStores
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: ListStores()
  nameWithType: AllegroGraphServer.ListStores()
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.ListStores()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ListStores
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 229
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nGet the lists of stores available on the Server.\n"
  example: []
  syntax:
    content: public override IEnumerable<string> ListStores()
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: ''
    content.vb: Public Overrides Function ListStores As IEnumerable(Of String)
  overridden: VDS.RDF.Storage.Management.SesameServer.ListStores
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.ListStores*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.GetStore(System.String)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.GetStore(System.String)
  id: GetStore(System.String)
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: GetStore(String)
  nameWithType: AllegroGraphServer.GetStore(String)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.GetStore(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetStore
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 270
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nGets a Store within the current catalog.\n"
  remarks: "\nAllegroGraph groups stores by catalogue, you may only use this method to obtain stores within your current catalogue.\n"
  example: []
  syntax:
    content: public override IStorageProvider GetStore(string storeID)
    parameters:
    - id: storeID
      type: System.String
      description: Store ID.
    return:
      type: VDS.RDF.Storage.IStorageProvider
      description: ''
    content.vb: Public Overrides Function GetStore(storeID As String) As IStorageProvider
  overridden: VDS.RDF.Storage.Management.SesameServer.GetStore(System.String)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.GetStore*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  id: ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: ListStores(AsyncStorageCallback, Object)
  nameWithType: AllegroGraphServer.ListStores(AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ListStores
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 281
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nGets the List of Stores available  on the server within the current catalog asynchronously.\n"
  example: []
  syntax:
    content: public override void ListStores(AsyncStorageCallback callback, object state)
    parameters:
    - id: callback
      type: VDS.RDF.Storage.AsyncStorageCallback
      description: Callback.
    - id: state
      type: System.Object
      description: State to pass to callback.
    content.vb: Public Overrides Sub ListStores(callback As AsyncStorageCallback, state As Object)
  overridden: VDS.RDF.Storage.Management.SesameServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.ListStores*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  id: GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: GetDefaultTemplate(String, AsyncStorageCallback, Object)
  nameWithType: AllegroGraphServer.GetDefaultTemplate(String, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate(System.String, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetDefaultTemplate
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 336
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nGets a default template for creating a new Store.\n"
  example: []
  syntax:
    content: public override void GetDefaultTemplate(string id, AsyncStorageCallback callback, object state)
    parameters:
    - id: id
      type: System.String
      description: Store ID.
    - id: callback
      type: VDS.RDF.Storage.AsyncStorageCallback
      description: Callback.
    - id: state
      type: System.Object
      description: State to pass to callback.
    content.vb: Public Overrides Sub GetDefaultTemplate(id As String, callback As AsyncStorageCallback, state As Object)
  overridden: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  id: GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: GetAvailableTemplates(String, AsyncStorageCallback, Object)
  nameWithType: AllegroGraphServer.GetAvailableTemplates(String, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates(System.String, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetAvailableTemplates
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 348
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nGets all available templates for creating a new Store.\n"
  example: []
  syntax:
    content: public override void GetAvailableTemplates(string id, AsyncStorageCallback callback, object state)
    parameters:
    - id: id
      type: System.String
      description: Store ID.
    - id: callback
      type: VDS.RDF.Storage.AsyncStorageCallback
      description: Callback.
    - id: state
      type: System.Object
      description: State to pass to callback.
    content.vb: Public Overrides Sub GetAvailableTemplates(id As String, callback As AsyncStorageCallback, state As Object)
  overridden: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  id: CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: CreateStore(IStoreTemplate, AsyncStorageCallback, Object)
  nameWithType: AllegroGraphServer.CreateStore(IStoreTemplate, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateStore
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 359
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nCreates a new Store on the server within the current catalog asynchronously.\n"
  example: []
  syntax:
    content: public override void CreateStore(IStoreTemplate template, AsyncStorageCallback callback, object state)
    parameters:
    - id: template
      type: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
      description: Template to create the store from.
    - id: callback
      type: VDS.RDF.Storage.AsyncStorageCallback
      description: Callback.
    - id: state
      type: System.Object
      description: State to pass to callback.
    content.vb: Public Overrides Sub CreateStore(template As IStoreTemplate, callback As AsyncStorageCallback, state As Object)
  overridden: VDS.RDF.Storage.Management.SesameServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  id: DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: DeleteStore(String, AsyncStorageCallback, Object)
  nameWithType: AllegroGraphServer.DeleteStore(String, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore(System.String, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DeleteStore
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 443
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nDeletes a Store from the server within the current catalog asynchronously.\n"
  example: []
  syntax:
    content: public override void DeleteStore(string storeId, AsyncStorageCallback callback, object state)
    parameters:
    - id: storeId
      type: System.String
      description: Store ID.
    - id: callback
      type: VDS.RDF.Storage.AsyncStorageCallback
      description: Callback.
    - id: state
      type: System.Object
      description: State to pass to callback.
    content.vb: Public Overrides Sub DeleteStore(storeId As String, callback As AsyncStorageCallback, state As Object)
  overridden: VDS.RDF.Storage.Management.SesameServer.DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  id: GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: GetStore(String, AsyncStorageCallback, Object)
  nameWithType: AllegroGraphServer.GetStore(String, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.GetStore(System.String, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GetStore
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 492
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nGets a Store within the current catalog asynchronously.\n"
  remarks: "\nAllegroGraph groups stores by catalog, you may only use this method to obtain stores within your current catalogue.\n"
  example: []
  syntax:
    content: public override void GetStore(string storeID, AsyncStorageCallback callback, object state)
    parameters:
    - id: storeID
      type: System.String
      description: Store ID.
    - id: callback
      type: VDS.RDF.Storage.AsyncStorageCallback
      description: Callback.
    - id: state
      type: System.Object
      description: State to pass to call back.
    content.vb: Public Overrides Sub GetStore(storeID As String, callback As AsyncStorageCallback, state As Object)
  overridden: VDS.RDF.Storage.Management.SesameServer.GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.GetStore*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.CreateRequest(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.CreateRequest(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: CreateRequest(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: CreateRequest(String, String, String, Dictionary<String, String>)
  nameWithType: AllegroGraphServer.CreateRequest(String, String, String, Dictionary<String, String>)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.CreateRequest(System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: CreateRequest
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 505
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nHelper method for creating HTTP Requests to the Store.\n"
  example: []
  syntax:
    content: protected override HttpWebRequest CreateRequest(string servicePath, string accept, string method, Dictionary<string, string> queryParams)
    parameters:
    - id: servicePath
      type: System.String
      description: Path to the Service requested.
    - id: accept
      type: System.String
      description: Acceptable Content Types.
    - id: method
      type: System.String
      description: HTTP Method.
    - id: queryParams
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: Querystring Parameters.
    return:
      type: System.Net.HttpWebRequest
      description: ''
    content.vb: Protected Overrides Function CreateRequest(servicePath As String, accept As String, method As String, queryParams As Dictionary(Of String, String)) As HttpWebRequest
  overridden: VDS.RDF.Storage.Management.SesameServer.CreateRequest(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.CreateRequest*
  nameWithType.vb: AllegroGraphServer.CreateRequest(String, String, String, Dictionary(Of String, String))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: VDS.RDF.Storage.Management.AllegroGraphServer.CreateRequest(System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: CreateRequest(String, String, String, Dictionary(Of String, String))
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  commentId: M:VDS.RDF.Storage.Management.AllegroGraphServer.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  id: SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  parent: VDS.RDF.Storage.Management.AllegroGraphServer
  langs:
  - csharp
  - vb
  name: SerializeConfiguration(ConfigurationSerializationContext)
  nameWithType: AllegroGraphServer.SerializeConfiguration(ConfigurationSerializationContext)
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
      branch: master
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SerializeConfiguration
    path: ../../dotNetRDF/Libraries/dotNetRDF/Storage/Management/AllegroGraphServer.cs
    startLine: 528
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Storage.Management
  summary: "\nSerializes the connection&apos;s configuration.\n"
  example: []
  syntax:
    content: public override void SerializeConfiguration(ConfigurationSerializationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Configuration.ConfigurationSerializationContext
      description: Configuration Serialization Context.
    content.vb: Public Overrides Sub SerializeConfiguration(context As ConfigurationSerializationContext)
  overridden: VDS.RDF.Storage.Management.SesameServer.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  overload: VDS.RDF.Storage.Management.AllegroGraphServer.SerializeConfiguration*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: VDS.RDF.Storage.Management
  commentId: N:VDS.RDF.Storage.Management
  name: VDS.RDF.Storage.Management
  nameWithType: VDS.RDF.Storage.Management
  fullName: VDS.RDF.Storage.Management
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Storage.BaseHttpConnector
  commentId: T:VDS.RDF.Storage.BaseHttpConnector
  parent: VDS.RDF.Storage
  name: BaseHttpConnector
  nameWithType: BaseHttpConnector
  fullName: VDS.RDF.Storage.BaseHttpConnector
- uid: VDS.RDF.Storage.Management.SesameServer
  commentId: T:VDS.RDF.Storage.Management.SesameServer
  parent: VDS.RDF.Storage.Management
  name: SesameServer
  nameWithType: SesameServer
  fullName: VDS.RDF.Storage.Management.SesameServer
- uid: VDS.RDF.Storage.Management.IAsyncStorageServer
  commentId: T:VDS.RDF.Storage.Management.IAsyncStorageServer
  parent: VDS.RDF.Storage.Management
  name: IAsyncStorageServer
  nameWithType: IAsyncStorageServer
  fullName: VDS.RDF.Storage.Management.IAsyncStorageServer
- uid: VDS.RDF.Configuration.IConfigurationSerializable
  commentId: T:VDS.RDF.Configuration.IConfigurationSerializable
  parent: VDS.RDF.Configuration
  name: IConfigurationSerializable
  nameWithType: IConfigurationSerializable
  fullName: VDS.RDF.Configuration.IConfigurationSerializable
- uid: VDS.RDF.Storage.Management.IStorageServer
  commentId: T:VDS.RDF.Storage.Management.IStorageServer
  parent: VDS.RDF.Storage.Management
  name: IStorageServer
  nameWithType: IStorageServer
  fullName: VDS.RDF.Storage.Management.IStorageServer
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: VDS.RDF.Storage.Management.SesameServer.SystemRepositoryID
  commentId: F:VDS.RDF.Storage.Management.SesameServer.SystemRepositoryID
  parent: VDS.RDF.Storage.Management.SesameServer
  name: SystemRepositoryID
  nameWithType: SesameServer.SystemRepositoryID
  fullName: VDS.RDF.Storage.Management.SesameServer.SystemRepositoryID
- uid: VDS.RDF.Storage.Management.SesameServer._baseUri
  commentId: F:VDS.RDF.Storage.Management.SesameServer._baseUri
  parent: VDS.RDF.Storage.Management.SesameServer
  name: _baseUri
  nameWithType: SesameServer._baseUri
  fullName: VDS.RDF.Storage.Management.SesameServer._baseUri
- uid: VDS.RDF.Storage.Management.SesameServer._username
  commentId: F:VDS.RDF.Storage.Management.SesameServer._username
  parent: VDS.RDF.Storage.Management.SesameServer
  name: _username
  nameWithType: SesameServer._username
  fullName: VDS.RDF.Storage.Management.SesameServer._username
- uid: VDS.RDF.Storage.Management.SesameServer._pwd
  commentId: F:VDS.RDF.Storage.Management.SesameServer._pwd
  parent: VDS.RDF.Storage.Management.SesameServer
  name: _pwd
  nameWithType: SesameServer._pwd
  fullName: VDS.RDF.Storage.Management.SesameServer._pwd
- uid: VDS.RDF.Storage.Management.SesameServer._hasCredentials
  commentId: F:VDS.RDF.Storage.Management.SesameServer._hasCredentials
  parent: VDS.RDF.Storage.Management.SesameServer
  name: _hasCredentials
  nameWithType: SesameServer._hasCredentials
  fullName: VDS.RDF.Storage.Management.SesameServer._hasCredentials
- uid: VDS.RDF.Storage.Management.SesameServer._repositoriesPrefix
  commentId: F:VDS.RDF.Storage.Management.SesameServer._repositoriesPrefix
  parent: VDS.RDF.Storage.Management.SesameServer
  name: _repositoriesPrefix
  nameWithType: SesameServer._repositoriesPrefix
  fullName: VDS.RDF.Storage.Management.SesameServer._repositoriesPrefix
- uid: VDS.RDF.Storage.Management.SesameServer.TemplateTypes
  commentId: F:VDS.RDF.Storage.Management.SesameServer.TemplateTypes
  parent: VDS.RDF.Storage.Management.SesameServer
  name: TemplateTypes
  nameWithType: SesameServer.TemplateTypes
  fullName: VDS.RDF.Storage.Management.SesameServer.TemplateTypes
- uid: VDS.RDF.Storage.Management.SesameServer.IOBehaviour
  commentId: P:VDS.RDF.Storage.Management.SesameServer.IOBehaviour
  parent: VDS.RDF.Storage.Management.SesameServer
  name: IOBehaviour
  nameWithType: SesameServer.IOBehaviour
  fullName: VDS.RDF.Storage.Management.SesameServer.IOBehaviour
- uid: VDS.RDF.Storage.Management.SesameServer.EnsureSystemConnection
  commentId: M:VDS.RDF.Storage.Management.SesameServer.EnsureSystemConnection
  parent: VDS.RDF.Storage.Management.SesameServer
  name: EnsureSystemConnection()
  nameWithType: SesameServer.EnsureSystemConnection()
  fullName: VDS.RDF.Storage.Management.SesameServer.EnsureSystemConnection()
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.EnsureSystemConnection
    name: EnsureSystemConnection
    nameWithType: SesameServer.EnsureSystemConnection
    fullName: VDS.RDF.Storage.Management.SesameServer.EnsureSystemConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.EnsureSystemConnection
    name: EnsureSystemConnection
    nameWithType: SesameServer.EnsureSystemConnection
    fullName: VDS.RDF.Storage.Management.SesameServer.EnsureSystemConnection
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.SesameServer.Dispose
  commentId: M:VDS.RDF.Storage.Management.SesameServer.Dispose
  parent: VDS.RDF.Storage.Management.SesameServer
  name: Dispose()
  nameWithType: SesameServer.Dispose()
  fullName: VDS.RDF.Storage.Management.SesameServer.Dispose()
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.Dispose
    name: Dispose
    nameWithType: SesameServer.Dispose
    fullName: VDS.RDF.Storage.Management.SesameServer.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.Dispose
    name: Dispose
    nameWithType: SesameServer.Dispose
    fullName: VDS.RDF.Storage.Management.SesameServer.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.String)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.String)
  parent: VDS.RDF.Storage.BaseHttpConnector
  isExternal: true
  name: SetProxy(String)
  nameWithType: BaseHttpConnector.SetProxy(String)
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.String)
  spec.csharp:
  - uid: VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.String)
    name: SetProxy
    nameWithType: BaseHttpConnector.SetProxy
    fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.String)
    name: SetProxy
    nameWithType: BaseHttpConnector.SetProxy
    fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.Uri)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.Uri)
  parent: VDS.RDF.Storage.BaseHttpConnector
  isExternal: true
  name: SetProxy(Uri)
  nameWithType: BaseHttpConnector.SetProxy(Uri)
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.Uri)
  spec.csharp:
  - uid: VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.Uri)
    name: SetProxy
    nameWithType: BaseHttpConnector.SetProxy
    fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.BaseHttpConnector.SetProxy(System.Uri)
    name: SetProxy
    nameWithType: BaseHttpConnector.SetProxy
    fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxy
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BaseHttpConnector.Proxy
  commentId: P:VDS.RDF.Storage.BaseHttpConnector.Proxy
  parent: VDS.RDF.Storage.BaseHttpConnector
  name: Proxy
  nameWithType: BaseHttpConnector.Proxy
  fullName: VDS.RDF.Storage.BaseHttpConnector.Proxy
- uid: VDS.RDF.Storage.BaseHttpConnector.ClearProxy
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.ClearProxy
  parent: VDS.RDF.Storage.BaseHttpConnector
  name: ClearProxy()
  nameWithType: BaseHttpConnector.ClearProxy()
  fullName: VDS.RDF.Storage.BaseHttpConnector.ClearProxy()
  spec.csharp:
  - uid: VDS.RDF.Storage.BaseHttpConnector.ClearProxy
    name: ClearProxy
    nameWithType: BaseHttpConnector.ClearProxy
    fullName: VDS.RDF.Storage.BaseHttpConnector.ClearProxy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.BaseHttpConnector.ClearProxy
    name: ClearProxy
    nameWithType: BaseHttpConnector.ClearProxy
    fullName: VDS.RDF.Storage.BaseHttpConnector.ClearProxy
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String)
  parent: VDS.RDF.Storage.BaseHttpConnector
  isExternal: true
  name: SetProxyCredentials(String, String)
  nameWithType: BaseHttpConnector.SetProxyCredentials(String, String)
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String)
    name: SetProxyCredentials
    nameWithType: BaseHttpConnector.SetProxyCredentials
    fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String)
    name: SetProxyCredentials
    nameWithType: BaseHttpConnector.SetProxyCredentials
    fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String,System.String)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String,System.String)
  parent: VDS.RDF.Storage.BaseHttpConnector
  isExternal: true
  name: SetProxyCredentials(String, String, String)
  nameWithType: BaseHttpConnector.SetProxyCredentials(String, String, String)
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String, System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String,System.String)
    name: SetProxyCredentials
    nameWithType: BaseHttpConnector.SetProxyCredentials
    fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials(System.String,System.String,System.String)
    name: SetProxyCredentials
    nameWithType: BaseHttpConnector.SetProxyCredentials
    fullName: VDS.RDF.Storage.BaseHttpConnector.SetProxyCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BaseHttpConnector.ProxyCredentials
  commentId: P:VDS.RDF.Storage.BaseHttpConnector.ProxyCredentials
  parent: VDS.RDF.Storage.BaseHttpConnector
  name: ProxyCredentials
  nameWithType: BaseHttpConnector.ProxyCredentials
  fullName: VDS.RDF.Storage.BaseHttpConnector.ProxyCredentials
- uid: VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials
  parent: VDS.RDF.Storage.BaseHttpConnector
  name: ClearProxyCredentials()
  nameWithType: BaseHttpConnector.ClearProxyCredentials()
  fullName: VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials()
  spec.csharp:
  - uid: VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials
    name: ClearProxyCredentials
    nameWithType: BaseHttpConnector.ClearProxyCredentials
    fullName: VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials
    name: ClearProxyCredentials
    nameWithType: BaseHttpConnector.ClearProxyCredentials
    fullName: VDS.RDF.Storage.BaseHttpConnector.ClearProxyCredentials
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BaseHttpConnector.Timeout
  commentId: P:VDS.RDF.Storage.BaseHttpConnector.Timeout
  parent: VDS.RDF.Storage.BaseHttpConnector
  name: Timeout
  nameWithType: BaseHttpConnector.Timeout
  fullName: VDS.RDF.Storage.BaseHttpConnector.Timeout
- uid: VDS.RDF.Storage.BaseHttpConnector.Username
  commentId: P:VDS.RDF.Storage.BaseHttpConnector.Username
  parent: VDS.RDF.Storage.BaseHttpConnector
  name: Username
  nameWithType: BaseHttpConnector.Username
  fullName: VDS.RDF.Storage.BaseHttpConnector.Username
- uid: VDS.RDF.Storage.BaseHttpConnector.Password
  commentId: P:VDS.RDF.Storage.BaseHttpConnector.Password
  parent: VDS.RDF.Storage.BaseHttpConnector
  name: Password
  nameWithType: BaseHttpConnector.Password
  fullName: VDS.RDF.Storage.BaseHttpConnector.Password
- uid: VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions(System.Net.HttpWebRequest)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions(System.Net.HttpWebRequest)
  parent: VDS.RDF.Storage.BaseHttpConnector
  isExternal: true
  name: ApplyRequestOptions(HttpWebRequest)
  nameWithType: BaseHttpConnector.ApplyRequestOptions(HttpWebRequest)
  fullName: VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions(System.Net.HttpWebRequest)
  spec.csharp:
  - uid: VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions(System.Net.HttpWebRequest)
    name: ApplyRequestOptions
    nameWithType: BaseHttpConnector.ApplyRequestOptions
    fullName: VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpWebRequest
    name: HttpWebRequest
    nameWithType: HttpWebRequest
    fullName: System.Net.HttpWebRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions(System.Net.HttpWebRequest)
    name: ApplyRequestOptions
    nameWithType: BaseHttpConnector.ApplyRequestOptions
    fullName: VDS.RDF.Storage.BaseHttpConnector.ApplyRequestOptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Net.HttpWebRequest
    name: HttpWebRequest
    nameWithType: HttpWebRequest
    fullName: System.Net.HttpWebRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig(VDS.RDF.INode,VDS.RDF.Configuration.ConfigurationSerializationContext)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig(VDS.RDF.INode,VDS.RDF.Configuration.ConfigurationSerializationContext)
  parent: VDS.RDF.Storage.BaseHttpConnector
  name: SerializeStandardConfig(INode, ConfigurationSerializationContext)
  nameWithType: BaseHttpConnector.SerializeStandardConfig(INode, ConfigurationSerializationContext)
  fullName: VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig(VDS.RDF.INode, VDS.RDF.Configuration.ConfigurationSerializationContext)
  spec.csharp:
  - uid: VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig(VDS.RDF.INode,VDS.RDF.Configuration.ConfigurationSerializationContext)
    name: SerializeStandardConfig
    nameWithType: BaseHttpConnector.SerializeStandardConfig
    fullName: VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Configuration.ConfigurationSerializationContext
    name: ConfigurationSerializationContext
    nameWithType: ConfigurationSerializationContext
    fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig(VDS.RDF.INode,VDS.RDF.Configuration.ConfigurationSerializationContext)
    name: SerializeStandardConfig
    nameWithType: BaseHttpConnector.SerializeStandardConfig
    fullName: VDS.RDF.Storage.BaseHttpConnector.SerializeStandardConfig
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.INode
    name: INode
    nameWithType: INode
    fullName: VDS.RDF.INode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Configuration.ConfigurationSerializationContext
    name: ConfigurationSerializationContext
    nameWithType: ConfigurationSerializationContext
    fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.BaseHttpConnector.SetCredentials(System.String,System.String)
  commentId: M:VDS.RDF.Storage.BaseHttpConnector.SetCredentials(System.String,System.String)
  parent: VDS.RDF.Storage.BaseHttpConnector
  isExternal: true
  name: SetCredentials(String, String)
  nameWithType: BaseHttpConnector.SetCredentials(String, String)
  fullName: VDS.RDF.Storage.BaseHttpConnector.SetCredentials(System.String, System.String)
  spec.csharp:
  - uid: VDS.RDF.Storage.BaseHttpConnector.SetCredentials(System.String,System.String)
    name: SetCredentials
    nameWithType: BaseHttpConnector.SetCredentials
    fullName: VDS.RDF.Storage.BaseHttpConnector.SetCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.BaseHttpConnector.SetCredentials(System.String,System.String)
    name: SetCredentials
    nameWithType: BaseHttpConnector.SetCredentials
    fullName: VDS.RDF.Storage.BaseHttpConnector.SetCredentials
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<AllegroGraphServer>()
  nameWithType: Extensions.AsEnumerable<AllegroGraphServer>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.Management.AllegroGraphServer>()
  nameWithType.vb: Extensions.AsEnumerable(Of AllegroGraphServer)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.Management.AllegroGraphServer)()
  name.vb: AsEnumerable(Of AllegroGraphServer)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<AllegroGraphServer>
    nameWithType: Extensions.AsEnumerable<AllegroGraphServer>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Storage.Management.AllegroGraphServer>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of AllegroGraphServer)
    nameWithType: Extensions.AsEnumerable(Of AllegroGraphServer)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Storage.Management.AllegroGraphServer)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Storage
  commentId: N:VDS.RDF.Storage
  name: VDS.RDF.Storage
  nameWithType: VDS.RDF.Storage
  fullName: VDS.RDF.Storage
- uid: VDS.RDF.Configuration
  commentId: N:VDS.RDF.Configuration
  name: VDS.RDF.Configuration
  nameWithType: VDS.RDF.Configuration
  fullName: VDS.RDF.Configuration
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.#ctor*
  commentId: Overload:VDS.RDF.Storage.Management.AllegroGraphServer.#ctor
  name: AllegroGraphServer
  nameWithType: AllegroGraphServer.AllegroGraphServer
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.AllegroGraphServer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.IWebProxy
  commentId: T:System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Net
  commentId: N:System.Net
  isExternal: true
  name: System.Net
  nameWithType: System.Net
  fullName: System.Net
- uid: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate(System.String)
  commentId: M:VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate(System.String)
  parent: VDS.RDF.Storage.Management.SesameServer
  isExternal: true
  name: GetDefaultTemplate(String)
  nameWithType: SesameServer.GetDefaultTemplate(String)
  fullName: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate(System.String)
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate(System.String)
    name: GetDefaultTemplate
    nameWithType: SesameServer.GetDefaultTemplate
    fullName: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate(System.String)
    name: GetDefaultTemplate
    nameWithType: SesameServer.GetDefaultTemplate
    fullName: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate*
  commentId: Overload:VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate
  name: GetDefaultTemplate
  nameWithType: AllegroGraphServer.GetDefaultTemplate
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.GetDefaultTemplate
- uid: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
  commentId: T:VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
  parent: VDS.RDF.Storage.Management.Provisioning
  name: IStoreTemplate
  nameWithType: IStoreTemplate
  fullName: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
- uid: VDS.RDF.Storage.Management.Provisioning
  commentId: N:VDS.RDF.Storage.Management.Provisioning
  name: VDS.RDF.Storage.Management.Provisioning
  nameWithType: VDS.RDF.Storage.Management.Provisioning
  fullName: VDS.RDF.Storage.Management.Provisioning
- uid: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates(System.String)
  commentId: M:VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates(System.String)
  parent: VDS.RDF.Storage.Management.SesameServer
  isExternal: true
  name: GetAvailableTemplates(String)
  nameWithType: SesameServer.GetAvailableTemplates(String)
  fullName: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates(System.String)
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates(System.String)
    name: GetAvailableTemplates
    nameWithType: SesameServer.GetAvailableTemplates
    fullName: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates(System.String)
    name: GetAvailableTemplates
    nameWithType: SesameServer.GetAvailableTemplates
    fullName: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates*
  commentId: Overload:VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates
  name: GetAvailableTemplates
  nameWithType: AllegroGraphServer.GetAvailableTemplates
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.GetAvailableTemplates
- uid: System.Collections.Generic.IEnumerable{VDS.RDF.Storage.Management.Provisioning.IStoreTemplate}
  commentId: T:System.Collections.Generic.IEnumerable{VDS.RDF.Storage.Management.Provisioning.IStoreTemplate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IStoreTemplate>
  nameWithType: IEnumerable<IStoreTemplate>
  fullName: System.Collections.Generic.IEnumerable<VDS.RDF.Storage.Management.Provisioning.IStoreTemplate>
  nameWithType.vb: IEnumerable(Of IStoreTemplate)
  fullName.vb: System.Collections.Generic.IEnumerable(Of VDS.RDF.Storage.Management.Provisioning.IStoreTemplate)
  name.vb: IEnumerable(Of IStoreTemplate)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
    name: IStoreTemplate
    nameWithType: IStoreTemplate
    fullName: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
    name: IStoreTemplate
    nameWithType: IStoreTemplate
    fullName: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VDS.RDF.Storage.Management.SesameServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate)
  commentId: M:VDS.RDF.Storage.Management.SesameServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate)
  parent: VDS.RDF.Storage.Management.SesameServer
  name: CreateStore(IStoreTemplate)
  nameWithType: SesameServer.CreateStore(IStoreTemplate)
  fullName: VDS.RDF.Storage.Management.SesameServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate)
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate)
    name: CreateStore
    nameWithType: SesameServer.CreateStore
    fullName: VDS.RDF.Storage.Management.SesameServer.CreateStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
    name: IStoreTemplate
    nameWithType: IStoreTemplate
    fullName: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate)
    name: CreateStore
    nameWithType: SesameServer.CreateStore
    fullName: VDS.RDF.Storage.Management.SesameServer.CreateStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
    name: IStoreTemplate
    nameWithType: IStoreTemplate
    fullName: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore*
  commentId: Overload:VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore
  name: CreateStore
  nameWithType: AllegroGraphServer.CreateStore
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.CreateStore
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Storage.Management.SesameServer.DeleteStore(System.String)
  commentId: M:VDS.RDF.Storage.Management.SesameServer.DeleteStore(System.String)
  parent: VDS.RDF.Storage.Management.SesameServer
  isExternal: true
  name: DeleteStore(String)
  nameWithType: SesameServer.DeleteStore(String)
  fullName: VDS.RDF.Storage.Management.SesameServer.DeleteStore(System.String)
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.DeleteStore(System.String)
    name: DeleteStore
    nameWithType: SesameServer.DeleteStore
    fullName: VDS.RDF.Storage.Management.SesameServer.DeleteStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.DeleteStore(System.String)
    name: DeleteStore
    nameWithType: SesameServer.DeleteStore
    fullName: VDS.RDF.Storage.Management.SesameServer.DeleteStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore*
  commentId: Overload:VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore
  name: DeleteStore
  nameWithType: AllegroGraphServer.DeleteStore
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.DeleteStore
- uid: VDS.RDF.Storage.Management.SesameServer.ListStores
  commentId: M:VDS.RDF.Storage.Management.SesameServer.ListStores
  parent: VDS.RDF.Storage.Management.SesameServer
  name: ListStores()
  nameWithType: SesameServer.ListStores()
  fullName: VDS.RDF.Storage.Management.SesameServer.ListStores()
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.ListStores
    name: ListStores
    nameWithType: SesameServer.ListStores
    fullName: VDS.RDF.Storage.Management.SesameServer.ListStores
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.ListStores
    name: ListStores
    nameWithType: SesameServer.ListStores
    fullName: VDS.RDF.Storage.Management.SesameServer.ListStores
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.ListStores*
  commentId: Overload:VDS.RDF.Storage.Management.AllegroGraphServer.ListStores
  name: ListStores
  nameWithType: AllegroGraphServer.ListStores
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.ListStores
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.SesameServer.GetStore(System.String)
  commentId: M:VDS.RDF.Storage.Management.SesameServer.GetStore(System.String)
  parent: VDS.RDF.Storage.Management.SesameServer
  isExternal: true
  name: GetStore(String)
  nameWithType: SesameServer.GetStore(String)
  fullName: VDS.RDF.Storage.Management.SesameServer.GetStore(System.String)
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.GetStore(System.String)
    name: GetStore
    nameWithType: SesameServer.GetStore
    fullName: VDS.RDF.Storage.Management.SesameServer.GetStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.GetStore(System.String)
    name: GetStore
    nameWithType: SesameServer.GetStore
    fullName: VDS.RDF.Storage.Management.SesameServer.GetStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.GetStore*
  commentId: Overload:VDS.RDF.Storage.Management.AllegroGraphServer.GetStore
  name: GetStore
  nameWithType: AllegroGraphServer.GetStore
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.GetStore
- uid: VDS.RDF.Storage.IStorageProvider
  commentId: T:VDS.RDF.Storage.IStorageProvider
  parent: VDS.RDF.Storage
  name: IStorageProvider
  nameWithType: IStorageProvider
  fullName: VDS.RDF.Storage.IStorageProvider
- uid: VDS.RDF.Storage.Management.SesameServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.SesameServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.SesameServer
  isExternal: true
  name: ListStores(AsyncStorageCallback, Object)
  nameWithType: SesameServer.ListStores(AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.SesameServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
    name: ListStores
    nameWithType: SesameServer.ListStores
    fullName: VDS.RDF.Storage.Management.SesameServer.ListStores
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.AsyncStorageCallback
    name: AsyncStorageCallback
    nameWithType: AsyncStorageCallback
    fullName: VDS.RDF.Storage.AsyncStorageCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.ListStores(VDS.RDF.Storage.AsyncStorageCallback,System.Object)
    name: ListStores
    nameWithType: SesameServer.ListStores
    fullName: VDS.RDF.Storage.Management.SesameServer.ListStores
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.AsyncStorageCallback
    name: AsyncStorageCallback
    nameWithType: AsyncStorageCallback
    fullName: VDS.RDF.Storage.AsyncStorageCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.AsyncStorageCallback
  commentId: T:VDS.RDF.Storage.AsyncStorageCallback
  parent: VDS.RDF.Storage
  name: AsyncStorageCallback
  nameWithType: AsyncStorageCallback
  fullName: VDS.RDF.Storage.AsyncStorageCallback
- uid: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.SesameServer
  isExternal: true
  name: GetDefaultTemplate(String, AsyncStorageCallback, Object)
  nameWithType: SesameServer.GetDefaultTemplate(String, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate(System.String, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
    name: GetDefaultTemplate
    nameWithType: SesameServer.GetDefaultTemplate
    fullName: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Storage.AsyncStorageCallback
    name: AsyncStorageCallback
    nameWithType: AsyncStorageCallback
    fullName: VDS.RDF.Storage.AsyncStorageCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
    name: GetDefaultTemplate
    nameWithType: SesameServer.GetDefaultTemplate
    fullName: VDS.RDF.Storage.Management.SesameServer.GetDefaultTemplate
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Storage.AsyncStorageCallback
    name: AsyncStorageCallback
    nameWithType: AsyncStorageCallback
    fullName: VDS.RDF.Storage.AsyncStorageCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.SesameServer
  isExternal: true
  name: GetAvailableTemplates(String, AsyncStorageCallback, Object)
  nameWithType: SesameServer.GetAvailableTemplates(String, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates(System.String, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
    name: GetAvailableTemplates
    nameWithType: SesameServer.GetAvailableTemplates
    fullName: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Storage.AsyncStorageCallback
    name: AsyncStorageCallback
    nameWithType: AsyncStorageCallback
    fullName: VDS.RDF.Storage.AsyncStorageCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
    name: GetAvailableTemplates
    nameWithType: SesameServer.GetAvailableTemplates
    fullName: VDS.RDF.Storage.Management.SesameServer.GetAvailableTemplates
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Storage.AsyncStorageCallback
    name: AsyncStorageCallback
    nameWithType: AsyncStorageCallback
    fullName: VDS.RDF.Storage.AsyncStorageCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.SesameServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.SesameServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.SesameServer
  isExternal: true
  name: CreateStore(IStoreTemplate, AsyncStorageCallback, Object)
  nameWithType: SesameServer.CreateStore(IStoreTemplate, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.SesameServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
    name: CreateStore
    nameWithType: SesameServer.CreateStore
    fullName: VDS.RDF.Storage.Management.SesameServer.CreateStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
    name: IStoreTemplate
    nameWithType: IStoreTemplate
    fullName: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Storage.AsyncStorageCallback
    name: AsyncStorageCallback
    nameWithType: AsyncStorageCallback
    fullName: VDS.RDF.Storage.AsyncStorageCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.CreateStore(VDS.RDF.Storage.Management.Provisioning.IStoreTemplate,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
    name: CreateStore
    nameWithType: SesameServer.CreateStore
    fullName: VDS.RDF.Storage.Management.SesameServer.CreateStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
    name: IStoreTemplate
    nameWithType: IStoreTemplate
    fullName: VDS.RDF.Storage.Management.Provisioning.IStoreTemplate
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Storage.AsyncStorageCallback
    name: AsyncStorageCallback
    nameWithType: AsyncStorageCallback
    fullName: VDS.RDF.Storage.AsyncStorageCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.SesameServer.DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.SesameServer.DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.SesameServer
  isExternal: true
  name: DeleteStore(String, AsyncStorageCallback, Object)
  nameWithType: SesameServer.DeleteStore(String, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.SesameServer.DeleteStore(System.String, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
    name: DeleteStore
    nameWithType: SesameServer.DeleteStore
    fullName: VDS.RDF.Storage.Management.SesameServer.DeleteStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Storage.AsyncStorageCallback
    name: AsyncStorageCallback
    nameWithType: AsyncStorageCallback
    fullName: VDS.RDF.Storage.AsyncStorageCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.DeleteStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
    name: DeleteStore
    nameWithType: SesameServer.DeleteStore
    fullName: VDS.RDF.Storage.Management.SesameServer.DeleteStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Storage.AsyncStorageCallback
    name: AsyncStorageCallback
    nameWithType: AsyncStorageCallback
    fullName: VDS.RDF.Storage.AsyncStorageCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.SesameServer.GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  commentId: M:VDS.RDF.Storage.Management.SesameServer.GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
  parent: VDS.RDF.Storage.Management.SesameServer
  isExternal: true
  name: GetStore(String, AsyncStorageCallback, Object)
  nameWithType: SesameServer.GetStore(String, AsyncStorageCallback, Object)
  fullName: VDS.RDF.Storage.Management.SesameServer.GetStore(System.String, VDS.RDF.Storage.AsyncStorageCallback, System.Object)
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
    name: GetStore
    nameWithType: SesameServer.GetStore
    fullName: VDS.RDF.Storage.Management.SesameServer.GetStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Storage.AsyncStorageCallback
    name: AsyncStorageCallback
    nameWithType: AsyncStorageCallback
    fullName: VDS.RDF.Storage.AsyncStorageCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.GetStore(System.String,VDS.RDF.Storage.AsyncStorageCallback,System.Object)
    name: GetStore
    nameWithType: SesameServer.GetStore
    fullName: VDS.RDF.Storage.Management.SesameServer.GetStore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: VDS.RDF.Storage.AsyncStorageCallback
    name: AsyncStorageCallback
    nameWithType: AsyncStorageCallback
    fullName: VDS.RDF.Storage.AsyncStorageCallback
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.SesameServer.CreateRequest(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:VDS.RDF.Storage.Management.SesameServer.CreateRequest(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: VDS.RDF.Storage.Management.SesameServer
  isExternal: true
  name: CreateRequest(String, String, String, Dictionary<String, String>)
  nameWithType: SesameServer.CreateRequest(String, String, String, Dictionary<String, String>)
  fullName: VDS.RDF.Storage.Management.SesameServer.CreateRequest(System.String, System.String, System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  nameWithType.vb: SesameServer.CreateRequest(String, String, String, Dictionary(Of String, String))
  fullName.vb: VDS.RDF.Storage.Management.SesameServer.CreateRequest(System.String, System.String, System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: CreateRequest(String, String, String, Dictionary(Of String, String))
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.CreateRequest(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: CreateRequest
    nameWithType: SesameServer.CreateRequest
    fullName: VDS.RDF.Storage.Management.SesameServer.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.CreateRequest(System.String,System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: CreateRequest
    nameWithType: SesameServer.CreateRequest
    fullName: VDS.RDF.Storage.Management.SesameServer.CreateRequest
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.CreateRequest*
  commentId: Overload:VDS.RDF.Storage.Management.AllegroGraphServer.CreateRequest
  name: CreateRequest
  nameWithType: AllegroGraphServer.CreateRequest
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.CreateRequest
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Net.HttpWebRequest
  commentId: T:System.Net.HttpWebRequest
  parent: System.Net
  isExternal: true
  name: HttpWebRequest
  nameWithType: HttpWebRequest
  fullName: System.Net.HttpWebRequest
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.SesameServer.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  commentId: M:VDS.RDF.Storage.Management.SesameServer.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  parent: VDS.RDF.Storage.Management.SesameServer
  name: SerializeConfiguration(ConfigurationSerializationContext)
  nameWithType: SesameServer.SerializeConfiguration(ConfigurationSerializationContext)
  fullName: VDS.RDF.Storage.Management.SesameServer.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  spec.csharp:
  - uid: VDS.RDF.Storage.Management.SesameServer.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
    name: SerializeConfiguration
    nameWithType: SesameServer.SerializeConfiguration
    fullName: VDS.RDF.Storage.Management.SesameServer.SerializeConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Configuration.ConfigurationSerializationContext
    name: ConfigurationSerializationContext
    nameWithType: ConfigurationSerializationContext
    fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Storage.Management.SesameServer.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
    name: SerializeConfiguration
    nameWithType: SesameServer.SerializeConfiguration
    fullName: VDS.RDF.Storage.Management.SesameServer.SerializeConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Configuration.ConfigurationSerializationContext
    name: ConfigurationSerializationContext
    nameWithType: ConfigurationSerializationContext
    fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Storage.Management.AllegroGraphServer.SerializeConfiguration*
  commentId: Overload:VDS.RDF.Storage.Management.AllegroGraphServer.SerializeConfiguration
  name: SerializeConfiguration
  nameWithType: AllegroGraphServer.SerializeConfiguration
  fullName: VDS.RDF.Storage.Management.AllegroGraphServer.SerializeConfiguration
- uid: VDS.RDF.Configuration.ConfigurationSerializationContext
  commentId: T:VDS.RDF.Configuration.ConfigurationSerializationContext
  parent: VDS.RDF.Configuration
  name: ConfigurationSerializationContext
  nameWithType: ConfigurationSerializationContext
  fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
