### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  commentId: T:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  id: BaseLuceneSearchProvider
  parent: VDS.RDF.Query.FullText.Search.Lucene
  children:
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema,System.Boolean)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Finalize
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.IsAutoSynced
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double,System.Int32)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Int32)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double,System.Int32)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Int32)
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  langs:
  - csharp
  - vb
  name: BaseLuceneSearchProvider
  nameWithType: BaseLuceneSearchProvider
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: BaseLuceneSearchProvider
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 47
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nAbstract Base Implementation of a Full Text Search Provider using Lucene.Net.\n"
  remarks: "\nDerived Implementations may only need to call the base constructor as the <xref href=\"VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider\" data-throw-if-not-resolved=\"false\"></xref> does but if you&apos;ve implemented custom indexing you may need to extend more of this class.\n"
  example: []
  syntax:
    content: 'public abstract class BaseLuceneSearchProvider : object, IFullTextSearchProvider, IConfigurationSerializable'
    content.vb: >-
      Public MustInherit Class BaseLuceneSearchProvider
          Inherits Object
          Implements IFullTextSearchProvider, IConfigurationSerializable
  inheritance:
  - System.Object
  derivedClasses:
  - VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  implements:
  - VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
  - IDisposable
  - VDS.RDF.Configuration.IConfigurationSerializable
  extensionMethods:
  - VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema,System.Boolean)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema,System.Boolean)
  id: '#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema,System.Boolean)'
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: BaseLuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, IFullTextIndexSchema, Boolean)
  nameWithType: BaseLuceneSearchProvider.BaseLuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, IFullTextIndexSchema, Boolean)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.BaseLuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema, System.Boolean)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 67
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nCreates a new Base Lucene Search Provider.\n"
  example: []
  syntax:
    content: public BaseLuceneSearchProvider(Lucene.Net.Util.Version ver, Directory indexDir, Analyzer analyzer, IFullTextIndexSchema schema, bool autoSync)
    parameters:
    - id: ver
      type: Lucene.Net.Util.Version
      description: Lucene Version.
    - id: indexDir
      type: Directory
      description: Directory.
    - id: analyzer
      type: Analyzer
      description: Analyzer.
    - id: schema
      type: VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema
      description: Index Schema.
    - id: autoSync
      type: System.Boolean
      description: Whether the Search Provider should stay in sync with the underlying index.
    content.vb: Public Sub New(ver As Lucene.Net.Util.Version, indexDir As Directory, analyzer As Analyzer, schema As IFullTextIndexSchema, autoSync As Boolean)
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)
  id: '#ctor(Lucene.Net.Util.Version,Directory,Analyzer,VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)'
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: BaseLuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, IFullTextIndexSchema)
  nameWithType: BaseLuceneSearchProvider.BaseLuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, IFullTextIndexSchema)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.BaseLuceneSearchProvider(Lucene.Net.Util.Version, Directory, Analyzer, VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema)
  type: Constructor
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: .ctor
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 87
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nCreates a new Base Lucene Search Provider.\n"
  example: []
  syntax:
    content: public BaseLuceneSearchProvider(Lucene.Net.Util.Version ver, Directory indexDir, Analyzer analyzer, IFullTextIndexSchema schema)
    parameters:
    - id: ver
      type: Lucene.Net.Util.Version
      description: Lucene Version.
    - id: indexDir
      type: Directory
      description: Directory.
    - id: analyzer
      type: Analyzer
      description: Analyzer.
    - id: schema
      type: VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema
      description: Index Schema.
    content.vb: Public Sub New(ver As Lucene.Net.Util.Version, indexDir As Directory, analyzer As Analyzer, schema As IFullTextIndexSchema)
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Finalize
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Finalize
  id: Finalize
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: BaseLuceneSearchProvider.Finalize()
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Finalize()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Finalize
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 93
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nDestructor which ensures that the Search Provider is properly disposed of\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double,System.Int32)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double,System.Int32)
  id: Match(System.String,System.Double,System.Int32)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: Match(String, Double, Int32)
  nameWithType: BaseLuceneSearchProvider.Match(String, Double, Int32)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String, System.Double, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Match
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 105
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nGets results that match the given query with the score threshold and limit applied.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<IFullTextSearchResult> Match(string text, double scoreThreshold, int limit)
    parameters:
    - id: text
      type: System.String
      description: Search Query.
    - id: scoreThreshold
      type: System.Double
      description: Score Threshold.
    - id: limit
      type: System.Int32
      description: Result Limit.
    return:
      type: IEnumerable{VDS.RDF.Query.FullText.Search.IFullTextSearchResult}
      description: ''
    content.vb: Public Overridable Function Match(text As String, scoreThreshold As Double, limit As Integer) As IEnumerable(Of IFullTextSearchResult)
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Double)
  id: Match(System.String,System.Double)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: Match(String, Double)
  nameWithType: BaseLuceneSearchProvider.Match(String, Double)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String, System.Double)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Match
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 122
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nGets results that match the given query with the score threshold applied.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<IFullTextSearchResult> Match(string text, double scoreThreshold)
    parameters:
    - id: text
      type: System.String
      description: Search Query.
    - id: scoreThreshold
      type: System.Double
      description: Score Threshold.
    return:
      type: IEnumerable{VDS.RDF.Query.FullText.Search.IFullTextSearchResult}
      description: ''
    content.vb: Public Overridable Function Match(text As String, scoreThreshold As Double) As IEnumerable(Of IFullTextSearchResult)
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Int32)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String,System.Int32)
  id: Match(System.String,System.Int32)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: Match(String, Int32)
  nameWithType: BaseLuceneSearchProvider.Match(String, Int32)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Match
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 138
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nGets results that match the given query with a limit applied.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<IFullTextSearchResult> Match(string text, int limit)
    parameters:
    - id: text
      type: System.String
      description: Search Query.
    - id: limit
      type: System.Int32
      description: Result Limit.
    return:
      type: IEnumerable{VDS.RDF.Query.FullText.Search.IFullTextSearchResult}
      description: ''
    content.vb: Public Overridable Function Match(text As String, limit As Integer) As IEnumerable(Of IFullTextSearchResult)
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String)
  id: Match(System.String)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: Match(String)
  nameWithType: BaseLuceneSearchProvider.Match(String)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Match
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 153
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nGets results that match the given query.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<IFullTextSearchResult> Match(string text)
    parameters:
    - id: text
      type: System.String
      description: Search Query.
    return:
      type: IEnumerable{VDS.RDF.Query.FullText.Search.IFullTextSearchResult}
      description: ''
    content.vb: Public Overridable Function Match(text As String) As IEnumerable(Of IFullTextSearchResult)
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match*
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double,System.Int32)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double,System.Int32)
  id: Match(IEnumerable{Uri},System.String,System.Double,System.Int32)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: Match(IEnumerable<Uri>, String, Double, Int32)
  nameWithType: BaseLuceneSearchProvider.Match(IEnumerable<Uri>, String, Double, Int32)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable<Uri>, System.String, System.Double, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Match
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 171
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nGets results that match the given query with the score threshold and limit applied.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<IFullTextSearchResult> Match(IEnumerable<Uri> graphUris, string text, double scoreThreshold, int limit)
    parameters:
    - id: graphUris
      type: IEnumerable{Uri}
      description: Graph URIs.
    - id: text
      type: System.String
      description: Search Query.
    - id: scoreThreshold
      type: System.Double
      description: Score Threshold.
    - id: limit
      type: System.Int32
      description: Result Limit.
    return:
      type: IEnumerable{VDS.RDF.Query.FullText.Search.IFullTextSearchResult}
      description: ''
    content.vb: Public Overridable Function Match(graphUris As IEnumerable(Of Uri), text As String, scoreThreshold As Double, limit As Integer) As IEnumerable(Of IFullTextSearchResult)
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match*
  nameWithType.vb: BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), String, Double, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), System.String, System.Double, System.Int32)
  name.vb: Match(IEnumerable(Of Uri), String, Double, Int32)
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Double)
  id: Match(IEnumerable{Uri},System.String,System.Double)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: Match(IEnumerable<Uri>, String, Double)
  nameWithType: BaseLuceneSearchProvider.Match(IEnumerable<Uri>, String, Double)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable<Uri>, System.String, System.Double)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Match
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 191
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nGets results that match the given query with the score threshold applied.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<IFullTextSearchResult> Match(IEnumerable<Uri> graphUris, string text, double scoreThreshold)
    parameters:
    - id: graphUris
      type: IEnumerable{Uri}
      description: Graph URIs.
    - id: text
      type: System.String
      description: Search Query.
    - id: scoreThreshold
      type: System.Double
      description: Score Threshold.
    return:
      type: IEnumerable{VDS.RDF.Query.FullText.Search.IFullTextSearchResult}
      description: ''
    content.vb: Public Overridable Function Match(graphUris As IEnumerable(Of Uri), text As String, scoreThreshold As Double) As IEnumerable(Of IFullTextSearchResult)
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match*
  nameWithType.vb: BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), String, Double)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), System.String, System.Double)
  name.vb: Match(IEnumerable(Of Uri), String, Double)
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Int32)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String,System.Int32)
  id: Match(IEnumerable{Uri},System.String,System.Int32)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: Match(IEnumerable<Uri>, String, Int32)
  nameWithType: BaseLuceneSearchProvider.Match(IEnumerable<Uri>, String, Int32)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable<Uri>, System.String, System.Int32)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Match
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 209
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nGets results that match the given query with a limit applied.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<IFullTextSearchResult> Match(IEnumerable<Uri> graphUris, string text, int limit)
    parameters:
    - id: graphUris
      type: IEnumerable{Uri}
      description: Graph URIs.
    - id: text
      type: System.String
      description: Search Query.
    - id: limit
      type: System.Int32
      description: Result Limit.
    return:
      type: IEnumerable{VDS.RDF.Query.FullText.Search.IFullTextSearchResult}
      description: ''
    content.vb: Public Overridable Function Match(graphUris As IEnumerable(Of Uri), text As String, limit As Integer) As IEnumerable(Of IFullTextSearchResult)
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match*
  nameWithType.vb: BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), String, Int32)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), System.String, System.Int32)
  name.vb: Match(IEnumerable(Of Uri), String, Int32)
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable{Uri},System.String)
  id: Match(IEnumerable{Uri},System.String)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: Match(IEnumerable<Uri>, String)
  nameWithType: BaseLuceneSearchProvider.Match(IEnumerable<Uri>, String)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable<Uri>, System.String)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Match
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 227
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nGets results that match the given query.\n"
  example: []
  syntax:
    content: public virtual IEnumerable<IFullTextSearchResult> Match(IEnumerable<Uri> graphUris, string text)
    parameters:
    - id: graphUris
      type: IEnumerable{Uri}
      description: Graph URIs.
    - id: text
      type: System.String
      description: Search Query.
    return:
      type: IEnumerable{VDS.RDF.Query.FullText.Search.IFullTextSearchResult}
      description: ''
    content.vb: Public Overridable Function Match(graphUris As IEnumerable(Of Uri), text As String) As IEnumerable(Of IFullTextSearchResult)
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match*
  nameWithType.vb: BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), String)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match(IEnumerable(Of Uri), System.String)
  name.vb: Match(IEnumerable(Of Uri), String)
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.IsAutoSynced
  commentId: P:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.IsAutoSynced
  id: IsAutoSynced
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: IsAutoSynced
  nameWithType: BaseLuceneSearchProvider.IsAutoSynced
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.IsAutoSynced
  type: Property
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: IsAutoSynced
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 261
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nGets whether this search provider is always seeing the latest state of the index.\n"
  example: []
  syntax:
    content: public bool IsAutoSynced { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsAutoSynced As Boolean
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.IsAutoSynced*
  implements:
  - VDS.RDF.Query.FullText.Search.IFullTextSearchProvider.IsAutoSynced
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose
  id: Dispose
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: BaseLuceneSearchProvider.Dispose()
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Dispose
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 288
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nDisposes of the Search Provider.\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal
  id: DisposeInternal
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: DisposeInternal()
  nameWithType: BaseLuceneSearchProvider.DisposeInternal()
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal()
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DisposeInternal
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 309
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nVirtual method that can be overridden to add implementation specific dispose logic.\n"
  example: []
  syntax:
    content: protected virtual void DisposeInternal()
    content.vb: Protected Overridable Sub DisposeInternal
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  commentId: M:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  id: SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  parent: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider
  langs:
  - csharp
  - vb
  name: SerializeConfiguration(ConfigurationSerializationContext)
  nameWithType: BaseLuceneSearchProvider.SerializeConfiguration(ConfigurationSerializationContext)
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  type: Method
  source:
    remote:
      path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SerializeConfiguration
    path: Libraries/dotNetRDF.Query.FullText/FullText/Search/Lucene/BaseLuceneSearchProvider.cs
    startLine: 315
  assemblies:
  - dotNetRDF.Query.FullText
  namespace: VDS.RDF.Query.FullText.Search.Lucene
  summary: "\nSerializes Configuration of this Provider.\n"
  example: []
  syntax:
    content: public virtual void SerializeConfiguration(ConfigurationSerializationContext context)
    parameters:
    - id: context
      type: VDS.RDF.Configuration.ConfigurationSerializationContext
      description: Serialization Context.
    content.vb: Public Overridable Sub SerializeConfiguration(context As ConfigurationSerializationContext)
  overload: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration*
  implements:
  - VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  commentId: T:VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
  name: LuceneSearchProvider
  nameWithType: LuceneSearchProvider
  fullName: VDS.RDF.Query.FullText.Search.Lucene.LuceneSearchProvider
- uid: VDS.RDF.Query.FullText.Search.Lucene
  commentId: N:VDS.RDF.Query.FullText.Search.Lucene
  name: VDS.RDF.Query.FullText.Search.Lucene
  nameWithType: VDS.RDF.Query.FullText.Search.Lucene
  fullName: VDS.RDF.Query.FullText.Search.Lucene
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
  commentId: T:VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
  parent: VDS.RDF.Query.FullText.Search
  name: IFullTextSearchProvider
  nameWithType: IFullTextSearchProvider
  fullName: VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
- uid: IDisposable
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: IDisposable
- uid: VDS.RDF.Configuration.IConfigurationSerializable
  commentId: T:VDS.RDF.Configuration.IConfigurationSerializable
  parent: VDS.RDF.Configuration
  name: IConfigurationSerializable
  nameWithType: IConfigurationSerializable
  fullName: VDS.RDF.Configuration.IConfigurationSerializable
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<BaseLuceneSearchProvider>()
  nameWithType: Extensions.AsEnumerable<BaseLuceneSearchProvider>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider>()
  nameWithType.vb: Extensions.AsEnumerable(Of BaseLuceneSearchProvider)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider)()
  name.vb: AsEnumerable(Of BaseLuceneSearchProvider)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<BaseLuceneSearchProvider>
    nameWithType: Extensions.AsEnumerable<BaseLuceneSearchProvider>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of BaseLuceneSearchProvider)
    nameWithType: Extensions.AsEnumerable(Of BaseLuceneSearchProvider)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VDS.RDF.Query.FullText.Search
  commentId: N:VDS.RDF.Query.FullText.Search
  name: VDS.RDF.Query.FullText.Search
  nameWithType: VDS.RDF.Query.FullText.Search
  fullName: VDS.RDF.Query.FullText.Search
- uid: VDS.RDF.Configuration
  commentId: N:VDS.RDF.Configuration
  name: VDS.RDF.Configuration
  nameWithType: VDS.RDF.Configuration
  fullName: VDS.RDF.Configuration
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.#ctor*
  commentId: Overload:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.#ctor
  name: BaseLuceneSearchProvider
  nameWithType: BaseLuceneSearchProvider.BaseLuceneSearchProvider
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.BaseLuceneSearchProvider
- uid: Lucene.Net.Util.Version
  isExternal: true
  name: Lucene.Net.Util.Version
  nameWithType: Lucene.Net.Util.Version
  fullName: Lucene.Net.Util.Version
- uid: Directory
  isExternal: true
  name: Directory
  nameWithType: Directory
  fullName: Directory
- uid: Analyzer
  isExternal: true
  name: Analyzer
  nameWithType: Analyzer
  fullName: Analyzer
- uid: VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema
  commentId: T:VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema
  parent: VDS.RDF.Query.FullText.Schema
  name: IFullTextIndexSchema
  nameWithType: IFullTextIndexSchema
  fullName: VDS.RDF.Query.FullText.Schema.IFullTextIndexSchema
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VDS.RDF.Query.FullText.Schema
  commentId: N:VDS.RDF.Query.FullText.Schema
  name: VDS.RDF.Query.FullText.Schema
  nameWithType: VDS.RDF.Query.FullText.Schema
  fullName: VDS.RDF.Query.FullText.Schema
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Finalize*
  commentId: Overload:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Finalize
  name: Finalize
  nameWithType: BaseLuceneSearchProvider.Finalize
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Finalize
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match*
  commentId: Overload:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
  name: Match
  nameWithType: BaseLuceneSearchProvider.Match
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Match
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: IEnumerable{VDS.RDF.Query.FullText.Search.IFullTextSearchResult}
  commentId: '!:IEnumerable{VDS.RDF.Query.FullText.Search.IFullTextSearchResult}'
  definition: IEnumerable`1
  name: IEnumerable<IFullTextSearchResult>
  nameWithType: IEnumerable<IFullTextSearchResult>
  fullName: IEnumerable<VDS.RDF.Query.FullText.Search.IFullTextSearchResult>
  nameWithType.vb: IEnumerable(Of IFullTextSearchResult)
  fullName.vb: IEnumerable(Of VDS.RDF.Query.FullText.Search.IFullTextSearchResult)
  name.vb: IEnumerable(Of IFullTextSearchResult)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VDS.RDF.Query.FullText.Search.IFullTextSearchResult
    name: IFullTextSearchResult
    nameWithType: IFullTextSearchResult
    fullName: VDS.RDF.Query.FullText.Search.IFullTextSearchResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VDS.RDF.Query.FullText.Search.IFullTextSearchResult
    name: IFullTextSearchResult
    nameWithType: IFullTextSearchResult
    fullName: VDS.RDF.Query.FullText.Search.IFullTextSearchResult
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable{Uri}
  commentId: '!:IEnumerable{Uri}'
  definition: IEnumerable`1
  name: IEnumerable<Uri>
  nameWithType: IEnumerable<Uri>
  fullName: IEnumerable<Uri>
  nameWithType.vb: IEnumerable(Of Uri)
  fullName.vb: IEnumerable(Of Uri)
  name.vb: IEnumerable(Of Uri)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.IsAutoSynced*
  commentId: Overload:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.IsAutoSynced
  name: IsAutoSynced
  nameWithType: BaseLuceneSearchProvider.IsAutoSynced
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.IsAutoSynced
- uid: VDS.RDF.Query.FullText.Search.IFullTextSearchProvider.IsAutoSynced
  commentId: P:VDS.RDF.Query.FullText.Search.IFullTextSearchProvider.IsAutoSynced
  parent: VDS.RDF.Query.FullText.Search.IFullTextSearchProvider
  name: IsAutoSynced
  nameWithType: IFullTextSearchProvider.IsAutoSynced
  fullName: VDS.RDF.Query.FullText.Search.IFullTextSearchProvider.IsAutoSynced
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose*
  commentId: Overload:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose
  name: Dispose
  nameWithType: BaseLuceneSearchProvider.Dispose
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.Dispose
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal*
  commentId: Overload:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal
  name: DisposeInternal
  nameWithType: BaseLuceneSearchProvider.DisposeInternal
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.DisposeInternal
- uid: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration*
  commentId: Overload:VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration
  name: SerializeConfiguration
  nameWithType: BaseLuceneSearchProvider.SerializeConfiguration
  fullName: VDS.RDF.Query.FullText.Search.Lucene.BaseLuceneSearchProvider.SerializeConfiguration
- uid: VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  commentId: M:VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  parent: VDS.RDF.Configuration.IConfigurationSerializable
  name: SerializeConfiguration(ConfigurationSerializationContext)
  nameWithType: IConfigurationSerializable.SerializeConfiguration(ConfigurationSerializationContext)
  fullName: VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
  spec.csharp:
  - uid: VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
    name: SerializeConfiguration
    nameWithType: IConfigurationSerializable.SerializeConfiguration
    fullName: VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Configuration.ConfigurationSerializationContext
    name: ConfigurationSerializationContext
    nameWithType: ConfigurationSerializationContext
    fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration(VDS.RDF.Configuration.ConfigurationSerializationContext)
    name: SerializeConfiguration
    nameWithType: IConfigurationSerializable.SerializeConfiguration
    fullName: VDS.RDF.Configuration.IConfigurationSerializable.SerializeConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - uid: VDS.RDF.Configuration.ConfigurationSerializationContext
    name: ConfigurationSerializationContext
    nameWithType: ConfigurationSerializationContext
    fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Configuration.ConfigurationSerializationContext
  commentId: T:VDS.RDF.Configuration.ConfigurationSerializationContext
  parent: VDS.RDF.Configuration
  name: ConfigurationSerializationContext
  nameWithType: ConfigurationSerializationContext
  fullName: VDS.RDF.Configuration.ConfigurationSerializationContext
shouldSkipMarkup: true
