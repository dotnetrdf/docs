### YamlMime:ManagedReference
items:
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  commentId: T:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  id: OwlHelper.OwlExtractMode
  parent: VDS.RDF.Query.Inference
  children:
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllClass
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllIndividual
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllProperty
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllStatements
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllStatementsIncludingJena
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.ClassAssertion
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.ComplementOf
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DataPropertyAssertion
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DefaultStatements
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DifferentIndividuals
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DirectClassAssertion
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DirectSubClassOf
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DirectSubPropertyOf
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DisjointClasses
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DisjointProperties
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.EquivalentClasses
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.EquivalentProperties
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.InverseProperties
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.ObjectPropertyAssertion
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.PropertyAssertion
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.SameIndividual
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.SubClassOf
  - VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.SubPropertyOf
  langs:
  - csharp
  - vb
  name: OwlHelper.OwlExtractMode
  nameWithType: OwlHelper.OwlExtractMode
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  type: Class
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: OwlExtractMode
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 42
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nClass containing Extraction Mode constants.\n"
  example: []
  syntax:
    content: public static class OwlExtractMode
    content.vb: Public Module OwlExtractMode
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DefaultStatements
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DefaultStatements
  id: DefaultStatements
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: DefaultStatements
  nameWithType: OwlHelper.OwlExtractMode.DefaultStatements
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DefaultStatements
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DefaultStatements
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string DefaultStatements = "DefaultStatements"
    return:
      type: System.String
    content.vb: Public Const DefaultStatements As String = "DefaultStatements"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllClass
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllClass
  id: AllClass
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: AllClass
  nameWithType: OwlHelper.OwlExtractMode.AllClass
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllClass
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AllClass
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 48
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string AllClass = "AllClass"
    return:
      type: System.String
    content.vb: Public Const AllClass As String = "AllClass"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllIndividual
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllIndividual
  id: AllIndividual
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: AllIndividual
  nameWithType: OwlHelper.OwlExtractMode.AllIndividual
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllIndividual
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AllIndividual
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 49
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string AllIndividual = "AllIndividual"
    return:
      type: System.String
    content.vb: Public Const AllIndividual As String = "AllIndividual"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllProperty
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllProperty
  id: AllProperty
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: AllProperty
  nameWithType: OwlHelper.OwlExtractMode.AllProperty
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllProperty
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AllProperty
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 50
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string AllProperty = "AllProperty"
    return:
      type: System.String
    content.vb: Public Const AllProperty As String = "AllProperty"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllStatements
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllStatements
  id: AllStatements
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: AllStatements
  nameWithType: OwlHelper.OwlExtractMode.AllStatements
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllStatements
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AllStatements
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string AllStatements = "AllStatements"
    return:
      type: System.String
    content.vb: Public Const AllStatements As String = "AllStatements"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllStatementsIncludingJena
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllStatementsIncludingJena
  id: AllStatementsIncludingJena
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: AllStatementsIncludingJena
  nameWithType: OwlHelper.OwlExtractMode.AllStatementsIncludingJena
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.AllStatementsIncludingJena
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: AllStatementsIncludingJena
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 52
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string AllStatementsIncludingJena = "AllStatementsIncludingJena"
    return:
      type: System.String
    content.vb: Public Const AllStatementsIncludingJena As String = "AllStatementsIncludingJena"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.ClassAssertion
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.ClassAssertion
  id: ClassAssertion
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: ClassAssertion
  nameWithType: OwlHelper.OwlExtractMode.ClassAssertion
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.ClassAssertion
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ClassAssertion
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 53
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string ClassAssertion = "ClassAssertion"
    return:
      type: System.String
    content.vb: Public Const ClassAssertion As String = "ClassAssertion"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.ComplementOf
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.ComplementOf
  id: ComplementOf
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: ComplementOf
  nameWithType: OwlHelper.OwlExtractMode.ComplementOf
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.ComplementOf
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ComplementOf
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 54
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string ComplementOf = "ComplementOf"
    return:
      type: System.String
    content.vb: Public Const ComplementOf As String = "ComplementOf"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DataPropertyAssertion
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DataPropertyAssertion
  id: DataPropertyAssertion
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: DataPropertyAssertion
  nameWithType: OwlHelper.OwlExtractMode.DataPropertyAssertion
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DataPropertyAssertion
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DataPropertyAssertion
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string DataPropertyAssertion = "DataPropertyAssertion"
    return:
      type: System.String
    content.vb: Public Const DataPropertyAssertion As String = "DataPropertyAssertion"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DifferentIndividuals
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DifferentIndividuals
  id: DifferentIndividuals
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: DifferentIndividuals
  nameWithType: OwlHelper.OwlExtractMode.DifferentIndividuals
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DifferentIndividuals
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DifferentIndividuals
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 56
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string DifferentIndividuals = "DifferentIndividuals"
    return:
      type: System.String
    content.vb: Public Const DifferentIndividuals As String = "DifferentIndividuals"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DirectClassAssertion
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DirectClassAssertion
  id: DirectClassAssertion
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: DirectClassAssertion
  nameWithType: OwlHelper.OwlExtractMode.DirectClassAssertion
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DirectClassAssertion
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DirectClassAssertion
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 57
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string DirectClassAssertion = "DirectClassAssertion"
    return:
      type: System.String
    content.vb: Public Const DirectClassAssertion As String = "DirectClassAssertion"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DirectSubClassOf
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DirectSubClassOf
  id: DirectSubClassOf
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: DirectSubClassOf
  nameWithType: OwlHelper.OwlExtractMode.DirectSubClassOf
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DirectSubClassOf
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DirectSubClassOf
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 58
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string DirectSubClassOf = "DirectSubClassOf"
    return:
      type: System.String
    content.vb: Public Const DirectSubClassOf As String = "DirectSubClassOf"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DirectSubPropertyOf
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DirectSubPropertyOf
  id: DirectSubPropertyOf
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: DirectSubPropertyOf
  nameWithType: OwlHelper.OwlExtractMode.DirectSubPropertyOf
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DirectSubPropertyOf
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DirectSubPropertyOf
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string DirectSubPropertyOf = "DirectSubPropertyOf"
    return:
      type: System.String
    content.vb: Public Const DirectSubPropertyOf As String = "DirectSubPropertyOf"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DisjointClasses
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DisjointClasses
  id: DisjointClasses
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: DisjointClasses
  nameWithType: OwlHelper.OwlExtractMode.DisjointClasses
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DisjointClasses
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DisjointClasses
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 60
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string DisjointClasses = "DisjointClasses"
    return:
      type: System.String
    content.vb: Public Const DisjointClasses As String = "DisjointClasses"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DisjointProperties
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DisjointProperties
  id: DisjointProperties
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: DisjointProperties
  nameWithType: OwlHelper.OwlExtractMode.DisjointProperties
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.DisjointProperties
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: DisjointProperties
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 61
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string DisjointProperties = "DisjointProperties"
    return:
      type: System.String
    content.vb: Public Const DisjointProperties As String = "DisjointProperties"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.EquivalentClasses
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.EquivalentClasses
  id: EquivalentClasses
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: EquivalentClasses
  nameWithType: OwlHelper.OwlExtractMode.EquivalentClasses
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.EquivalentClasses
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EquivalentClasses
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 62
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string EquivalentClasses = "EquivalentClasses"
    return:
      type: System.String
    content.vb: Public Const EquivalentClasses As String = "EquivalentClasses"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.EquivalentProperties
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.EquivalentProperties
  id: EquivalentProperties
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: EquivalentProperties
  nameWithType: OwlHelper.OwlExtractMode.EquivalentProperties
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.EquivalentProperties
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: EquivalentProperties
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 63
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string EquivalentProperties = "EquivalentProperties"
    return:
      type: System.String
    content.vb: Public Const EquivalentProperties As String = "EquivalentProperties"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.InverseProperties
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.InverseProperties
  id: InverseProperties
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: InverseProperties
  nameWithType: OwlHelper.OwlExtractMode.InverseProperties
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.InverseProperties
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: InverseProperties
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 64
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string InverseProperties = "InverserProperties"
    return:
      type: System.String
    content.vb: Public Const InverseProperties As String = "InverserProperties"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.ObjectPropertyAssertion
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.ObjectPropertyAssertion
  id: ObjectPropertyAssertion
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: ObjectPropertyAssertion
  nameWithType: OwlHelper.OwlExtractMode.ObjectPropertyAssertion
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.ObjectPropertyAssertion
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: ObjectPropertyAssertion
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 65
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string ObjectPropertyAssertion = "ObjectPropertyAssertion"
    return:
      type: System.String
    content.vb: Public Const ObjectPropertyAssertion As String = "ObjectPropertyAssertion"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.PropertyAssertion
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.PropertyAssertion
  id: PropertyAssertion
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: PropertyAssertion
  nameWithType: OwlHelper.OwlExtractMode.PropertyAssertion
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.PropertyAssertion
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: PropertyAssertion
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 66
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string PropertyAssertion = "PropertyAssertion"
    return:
      type: System.String
    content.vb: Public Const PropertyAssertion As String = "PropertyAssertion"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.SameIndividual
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.SameIndividual
  id: SameIndividual
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: SameIndividual
  nameWithType: OwlHelper.OwlExtractMode.SameIndividual
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.SameIndividual
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SameIndividual
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 67
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string SameIndividual = "SameIndividual"
    return:
      type: System.String
    content.vb: Public Const SameIndividual As String = "SameIndividual"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.SubClassOf
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.SubClassOf
  id: SubClassOf
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: SubClassOf
  nameWithType: OwlHelper.OwlExtractMode.SubClassOf
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.SubClassOf
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SubClassOf
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 68
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string SubClassOf = "SubClassOf"
    return:
      type: System.String
    content.vb: Public Const SubClassOf As String = "SubClassOf"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.SubPropertyOf
  commentId: F:VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.SubPropertyOf
  id: SubPropertyOf
  parent: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode
  langs:
  - csharp
  - vb
  name: SubPropertyOf
  nameWithType: OwlHelper.OwlExtractMode.SubPropertyOf
  fullName: VDS.RDF.Query.Inference.OwlHelper.OwlExtractMode.SubPropertyOf
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: SubPropertyOf
    path: Libraries/dotNetRDF/Query/Inference/InferenceHelper.cs
    startLine: 69
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF.Query.Inference
  summary: "\nOWL Extraction Mode constants.\n"
  example: []
  syntax:
    content: public const string SubPropertyOf = "SubPropertyOf"
    return:
      type: System.String
    content.vb: Public Const SubPropertyOf As String = "SubPropertyOf"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: VDS.RDF.Query.Inference
  commentId: N:VDS.RDF.Query.Inference
  name: VDS.RDF.Query.Inference
  nameWithType: VDS.RDF.Query.Inference
  fullName: VDS.RDF.Query.Inference
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
shouldSkipMarkup: true
