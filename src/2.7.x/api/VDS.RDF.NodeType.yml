### YamlMime:ManagedReference
items:
- uid: VDS.RDF.NodeType
  commentId: T:VDS.RDF.NodeType
  id: NodeType
  parent: VDS.RDF
  children:
  - VDS.RDF.NodeType.Blank
  - VDS.RDF.NodeType.GraphLiteral
  - VDS.RDF.NodeType.Literal
  - VDS.RDF.NodeType.Uri
  - VDS.RDF.NodeType.Variable
  langs:
  - csharp
  - vb
  name: NodeType
  nameWithType: NodeType
  fullName: VDS.RDF.NodeType
  type: Enum
  source:
    remote:
      path: Libraries/dotNetRDF/Core/INode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: NodeType
    path: Libraries/dotNetRDF/Core/INode.cs
    startLine: 38
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nNode Type Values.\n"
  example: []
  syntax:
    content: public enum NodeType
    content.vb: Public Enum NodeType
  extensionMethods:
  - VDS.RDF.NodeType.VDS.RDF.Extensions.AsEnumerable``1
  modifiers.csharp:
  - public
  - enum
  modifiers.vb:
  - Public
  - Enum
- uid: VDS.RDF.NodeType.Blank
  commentId: F:VDS.RDF.NodeType.Blank
  id: Blank
  parent: VDS.RDF.NodeType
  langs:
  - csharp
  - vb
  name: Blank
  nameWithType: NodeType.Blank
  fullName: VDS.RDF.NodeType.Blank
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/INode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Blank
    path: Libraries/dotNetRDF/Core/INode.cs
    startLine: 43
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nA Blank Node\n"
  example: []
  syntax:
    content: Blank = 0
    return:
      type: VDS.RDF.NodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.NodeType.Uri
  commentId: F:VDS.RDF.NodeType.Uri
  id: Uri
  parent: VDS.RDF.NodeType
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: NodeType.Uri
  fullName: VDS.RDF.NodeType.Uri
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/INode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Uri
    path: Libraries/dotNetRDF/Core/INode.cs
    startLine: 47
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nA Uri Node\n"
  example: []
  syntax:
    content: Uri = 1
    return:
      type: VDS.RDF.NodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.NodeType.Literal
  commentId: F:VDS.RDF.NodeType.Literal
  id: Literal
  parent: VDS.RDF.NodeType
  langs:
  - csharp
  - vb
  name: Literal
  nameWithType: NodeType.Literal
  fullName: VDS.RDF.NodeType.Literal
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/INode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Literal
    path: Libraries/dotNetRDF/Core/INode.cs
    startLine: 51
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nA Literal Node\n"
  example: []
  syntax:
    content: Literal = 2
    return:
      type: VDS.RDF.NodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.NodeType.GraphLiteral
  commentId: F:VDS.RDF.NodeType.GraphLiteral
  id: GraphLiteral
  parent: VDS.RDF.NodeType
  langs:
  - csharp
  - vb
  name: GraphLiteral
  nameWithType: NodeType.GraphLiteral
  fullName: VDS.RDF.NodeType.GraphLiteral
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/INode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: GraphLiteral
    path: Libraries/dotNetRDF/Core/INode.cs
    startLine: 55
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nA Graph Literal Node\n"
  example: []
  syntax:
    content: GraphLiteral = 3
    return:
      type: VDS.RDF.NodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: VDS.RDF.NodeType.Variable
  commentId: F:VDS.RDF.NodeType.Variable
  id: Variable
  parent: VDS.RDF.NodeType
  langs:
  - csharp
  - vb
  name: Variable
  nameWithType: NodeType.Variable
  fullName: VDS.RDF.NodeType.Variable
  type: Field
  source:
    remote:
      path: Libraries/dotNetRDF/Core/INode.cs
      branch: maintenance/2.x
      repo: https://github.com/dotnetrdf/dotnetrdf.git
    id: Variable
    path: Libraries/dotNetRDF/Core/INode.cs
    startLine: 59
  assemblies:
  - dotNetRDF
  namespace: VDS.RDF
  summary: "\nA Variable Node (currently only used in N3)\n"
  example: []
  syntax:
    content: Variable = 4
    return:
      type: VDS.RDF.NodeType
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: VDS.RDF
  commentId: N:VDS.RDF
  name: VDS.RDF
  nameWithType: VDS.RDF
  fullName: VDS.RDF
- uid: VDS.RDF.NodeType.VDS.RDF.Extensions.AsEnumerable``1
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  parent: VDS.RDF.Extensions
  definition: VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<NodeType>()
  nameWithType: Extensions.AsEnumerable<NodeType>()
  fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.NodeType>()
  nameWithType.vb: Extensions.AsEnumerable(Of NodeType)()
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.NodeType)()
  name.vb: AsEnumerable(Of NodeType)()
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable<NodeType>
    nameWithType: Extensions.AsEnumerable<NodeType>
    fullName: VDS.RDF.Extensions.AsEnumerable<VDS.RDF.NodeType>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1
    name: AsEnumerable(Of NodeType)
    nameWithType: Extensions.AsEnumerable(Of NodeType)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of VDS.RDF.NodeType)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
  commentId: M:VDS.RDF.Extensions.AsEnumerable``1(``0)
  name: AsEnumerable<T>(T)
  nameWithType: Extensions.AsEnumerable<T>(T)
  fullName: VDS.RDF.Extensions.AsEnumerable<T>(T)
  nameWithType.vb: Extensions.AsEnumerable(Of T)(T)
  fullName.vb: VDS.RDF.Extensions.AsEnumerable(Of T)(T)
  name.vb: AsEnumerable(Of T)(T)
  spec.csharp:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable<T>
    nameWithType: Extensions.AsEnumerable<T>
    fullName: VDS.RDF.Extensions.AsEnumerable<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: VDS.RDF.Extensions.AsEnumerable``1(``0)
    name: AsEnumerable(Of T)
    nameWithType: Extensions.AsEnumerable(Of T)
    fullName: VDS.RDF.Extensions.AsEnumerable(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VDS.RDF.Extensions
  commentId: T:VDS.RDF.Extensions
  parent: VDS.RDF
  name: Extensions
  nameWithType: Extensions
  fullName: VDS.RDF.Extensions
- uid: VDS.RDF.NodeType
  commentId: T:VDS.RDF.NodeType
  parent: VDS.RDF
  name: NodeType
  nameWithType: NodeType
  fullName: VDS.RDF.NodeType
shouldSkipMarkup: true
